'use strict';(function(){const b={cache:!0};b.doc={id:'id',field:['title','content'],store:['title','href','section']};const a=FlexSearch.create('balance',b);window.bookSearchIndex=a,a.add({id:0,href:'/life/docs/english_study/word/number/',title:"英语数字规则 ",section:"单词记忆技巧",content:"数字\r#\r\r1-10\r#\r\rone , two , three , four , five , six , seven , eight , nine , ten\n11——19\r#\r\r 这里除 eleven， twelve， thirteen， fifteen， eighteen为特殊形式外，fourteen，sixteen，seventeen，nineteen都是由其个位数形式后添加后缀-teen构成。\n eleven , twelve , thirteen , fourteen , fifteen , sixteen , seventeen , eighteen , nineteen\n插曲\r#\r\r 从 20——99 整数几十中除twenty，thirty, forty，fifty，eighty为特殊形式外，sixty，seventy，ninety都是其个位数形式后添加后缀-ty构成。表示几十几时，在几十和个位基数词形式之间添加连字符“-” 21 twenty-one 76 seventy-six\n 21-29\r#\r\rtwenty-one , twenty-two , twenty-three , twenty-four , twenty-five , twenty-six , twenty-seven , twenty-eight , twenty-nine\n31-39\r#\r\rthirty-one , thirty-two , thirty-three , thirty-four , thirty-five , thirty-six , thirty-seven , thirty-eight , thirty-nine\n41-49\r#\r\rforty-one , forty-two , forty-three , forty-four , forty-five , forty-six , forty-seven , forty-eight , forty-nine\n"}),a.add({id:1,href:'/life/docs/javadir/basedir/io/',title:"Java IO",section:"Java基础知识 ",content:"目录\r#\r\r"}),a.add({id:2,href:'/life/docs/javadir/middleware/solr/adminui/',title:"AdminUI 简单使用",section:"solr",content:" 访问方式 http://ip:端口号/solr\n 1、基本查询\r#\r\r   参数 意义     q 查询的关键字，此参数最为重要，例如，q=id:1，默认为q=:，   fl 指定返回哪些字段，用逗号或空格分隔，注意：字段区分大小写，例如，fl= id,title,sort   start 返回结果的第几条记录开始，一般分页用，默认0开始   rows 指定返回结果最多有多少条记录，默认值为 10，配合start实现分页   sort 排序方式，例如id desc 表示按照 “id” 降序   wt (writer type)指定输出格式，有 xml, json, php等   fq （filter query）过虑查询，提供一个可选的筛选器查询。返回在q查询符合结果中同时符合的fq条件的查询结果，例如：q=id:1\u0026amp;fq=sort:[1 TO 5]，找关键字id为1 的，并且sort是1到5之间的。   df 默认的查询字段，一般默认指定。   qt （query type）指定那个类型来处理查询请求，一般不用指定，默认是standard。   indent 返回的结果是否缩进，默认关闭，用 indent=true   version 查询语法的版本，建议不使用它，由服务器指定默认值。    2、Solr 的检索运算符\r#\r\r   符号 意义     “:” 指定字段查指定值，如返回所有值_:_   “?” 表示单个任意字符的通配   “*” 表示多个任意字符的通配（不能在检索的项开始使用*或者?符号）   “~” 表示模糊检索，如检索拼写类似于”roam”的项这样写：roam~将找到形如foam和roams的单词；roam~0.8，检索返回相似度在0.8以上的记录。   AND    OR、\u0026amp;\u0026amp; 布尔操作符   NOT、!、- （排除操作符不能单独与项使用构成查询）   “+” 存在操作符，要求符号”+”后的项必须在文档相应的域中存在²   ( ) 用于构成子查询   [] 包含范围检索，如检索某时间段记录，包含头尾，date:[201507 TO 201510]   {} 不包含范围检索，如检索某时间段记录，不包含头尾date:{201507 TO 201510}    3、高亮\r#\r\r   符号 意义     h1 * 是否高亮，hl=true，表示采用高亮   hl.fl * 设定高亮显示的字段，用空格或逗号隔开的字段列表。要启用某个字段的highlight功能，就得保证该字段在schema中是stored。如果该参数未被给出，那么就会高亮默认字段 standard handler会用df参数，dismax字段用qf参数。你可以使用星号去方便的高亮所有字段。如果你使用了通配符，那么要考虑启用hl.requiredFieldMatch选项。   hl.requireFieldMatch * 如果置为true，除非用hl.fl指定了该字段，查询结果才会被高亮。它的默认值是false。   hl.usePhraseHighlighter * 如果一个查询中含有短语（引号框起来的）那么会保证一定要完全匹配短语的才会被高亮。   hl.highlightMultiTerm * 如果使用通配符和模糊搜索，那么会确保与通配符匹配的term会高亮。默认为false，同时hl.usePhraseHighlighter要为true。   hl.fragsize -返回的最大字符数。默认是100.如果为0，那么该字段不会被fragmented且整个字段的值会被返回。    4、分组（Field Facet）\r#\r\r facet 参数字段必须被索引，facet=on 或 facet=true\n    符号 意义     facet.field 分组的字段   facet.prefix 表示Facet字段前缀   facet.limit Facet字段返回条数   facet.offict 开始条数,偏移量,它与facet.limit配合使用可以达到分页的效果   facet.mincount Facet字段最小count,默认为0   facet.missing 如果为on或true,那么将统计那些Facet字段值为null的记录   facet.sort 表示 Facet 字段值以哪种顺序返回 .格式为 true(count)    5、分组（Date Facet）\r#\r\r   符号 意义     facet.date 该参数表示需要进行 Date Facet 的字段名 , 与 facet.field 一样 , 该参数可以被设置多次 , 表示对多个字段进行 Date Facet.   facet.date.start 起始时间 , 时间的一般格式为 ” 2015-12-31T23:59:59Z”, 另外可以使用 ”NOW”,”YEAR”,”MONTH” 等等 ,   facet.date.end 结束时间   facet.date.gap 时间间隔,如果 start 为 2015-1-1,end 为 2016-1-1，gap 设置为 ”+1MONTH” 表示间隔1 个月 , 那么将会把这段时间划分为 12 个间隔段 .   facet.date.hardend 表示 gap 迭代到 end 时，还剩余的一部分时间段，是否继续去下一个间隔. 取值可以为 true    "}),a.add({id:3,href:'/life/docs/javadir/middleware/rabbit-mq/simple_default_exchange/',title:"Hello-world",section:"rabbit-mq",content:"Hello-world\r#\r\r 一个生产者，一个默认的交换机，一个队列，一个消费者\n 生产者\r#\r\rimport cn.hutool.core.date.DateUtil; import cn.hutool.core.util.RandomUtil; import com.rabbitmq.client.Channel; import com.rabbitmq.client.Connection; import com.rabbitmq.client.ConnectionFactory; import org.junit.Test; import org.slf4j.Logger; import org.slf4j.LoggerFactory; /** * @author : chengdu * @date : 2023/8/13-08 **/ public class Producer { private final static String QUEUE_NAME = \u0026#34;hello\u0026#34;; private final Logger logger = LoggerFactory.getLogger(getClass()); /** * 简单生产者 * @throws Exception */ @Test public void acceptProducer()throws Exception{ //1:创建连接池  ConnectionFactory connectionFactory = new ConnectionFactory() ; connectionFactory.setHost(\u0026#34;127.0.0.1\u0026#34;); connectionFactory.setUsername(\u0026#34;admin\u0026#34;); connectionFactory.setPassword(\u0026#34;123456\u0026#34;); Connection connection = connectionFactory.newConnection(); //2:创建通道(数据交换通道)  //channel 实现了自动 close 接口 自动关闭 不需要显示关闭  Channel channel = connection.createChannel(); /** * 生成一个队列 * 1.队列名称 * 2.队列里面的消息是否持久化 默认消息存储在内存中 * 3.该队列是否只供一个消费者进行消费 是否进行共享 true 可以多个消费者消费 * 4.是否自动删除 最后一个消费者端开连接以后 该队列是否自动删除 true 自动删除 * 5.其他参数 */ channel.queueDeclare(QUEUE_NAME,false,false,false,null) ; String message = \u0026#34;hello world \u0026#34;+ RandomUtil.randomInt(10,10000); /** * 发送一个消息 * 1.发送到那个交换机 * 2.路由的 key 是哪个 * 3.其他的参数信息 * 4.发送消息的消息体 */ channel.basicPublish(\u0026#34;\u0026#34;,QUEUE_NAME,null,message.getBytes(\u0026#34;UTF-8\u0026#34;)); logger.info(\u0026#34;message:\u0026#34;+message); logger.info(DateUtil.now() +\u0026#34;发送消息!\u0026#34;); } }  console   INFO [main] (Producer.java:55) - message:hello world 7428\rINFO [main] (Producer.java:56) - 2023-08-15 18:29:51发送消息!\r消费者\r#\r\rimport cn.hutool.core.date.DateUtil; import cn.hutool.json.JSONUtil; import com.rabbitmq.client.*; import org.junit.Test; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import java.util.concurrent.TimeUnit; /** * @author : chengdu * @date : 2023/8/13-08 **/ public class Consumer { private final static String QUEUE_NAME = \u0026#34;hello\u0026#34;; private final Logger logger = LoggerFactory.getLogger(getClass()); /** * 简单消费者 * @throws Exception */ @Test public void acceptConsumer() throws Exception { //1:创建连接池  ConnectionFactory connectionFactory = new ConnectionFactory(); connectionFactory.setHost(\u0026#34;127.0.0.1\u0026#34;); connectionFactory.setUsername(\u0026#34;admin\u0026#34;); connectionFactory.setPassword(\u0026#34;123456\u0026#34;); Connection connection = connectionFactory.newConnection(); //2:创建通道(数据交换通道)  Channel channel = connection.createChannel(); logger.info(DateUtil.now() +\u0026#34;等待接收消息....\u0026#34;); //3:推送的消息如何进行消费的接口回调  DeliverCallback deliverCallback = (consumerTag, message) -\u0026gt; { logger.info(\u0026#34;接收时间:\u0026#34;+DateUtil.now()); //consumerTag 消费者标签，用来区分多个消费者  logger.info(\u0026#34;consumerTag:\u0026#34; + consumerTag); logger.info(\u0026#34;properties:\u0026#34; + JSONUtil.toJsonStr(message.getProperties())); logger.info(\u0026#34;envelope:\u0026#34; + JSONUtil.toJsonStr(message.getEnvelope())); logger.info(\u0026#34;message:\u0026#34; + new String(message.getBody())); logger.info(\u0026#34;\u0026#34;); }; //4:取消消费的一个回调接口 如在消费的时候队列被删除掉了  CancelCallback cancelCallback = consumerTag -\u0026gt; { //consumerTag 消费者标签，用来区分多个消费者  logger.info(\u0026#34;consumerTag:\u0026#34; + consumerTag); }; /** * 消费者消费消息 * 1.消费哪个队列 * 2.消费成功之后是否要自动应答 true 代表自动应答 false 手动应答 * 3.消费者未成功消费的回调 */ channel.basicConsume(QUEUE_NAME,true,deliverCallback,cancelCallback) ; TimeUnit.MINUTES.sleep(2); } }  console   INFO [main] (Consumer.java:35) - 2023-08-15 18:29:45等待接收消息....\rINFO [pool-1-thread-4] (Consumer.java:39) - 接收时间:2023-08-15 18:29:51\rINFO [pool-1-thread-4] (Consumer.java:41) - consumerTag:amq.ctag-OjT8ALfp7GMjIIWGvZFGyw\rINFO [pool-1-thread-4] (Consumer.java:42) - properties:{\u0026quot;bodySize\u0026quot;:16}\rINFO [pool-1-thread-4] (Consumer.java:43) - envelope:{}\rINFO [pool-1-thread-4] (Consumer.java:44) - message:hello world 7428\rINFO [pool-1-thread-4] (Consumer.java:45) - maven\r#\r\r\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;project xmlns=\u0026#34;http://maven.apache.org/POM/4.0.0\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xsi:schemaLocation=\u0026#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\u0026#34;\u0026gt; \u0026lt;modelVersion\u0026gt;4.0.0\u0026lt;/modelVersion\u0026gt; \u0026lt;groupId\u0026gt;com.ng\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;rabbit-mp-hello\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;0.0.1-SNAPSHOT\u0026lt;/version\u0026gt; \u0026lt;name\u0026gt;rabbit-mp-hello\u0026lt;/name\u0026gt; \u0026lt;description\u0026gt;rabbit-mp-hello\u0026lt;/description\u0026gt; \u0026lt;properties\u0026gt; \u0026lt;java.version\u0026gt;1.8\u0026lt;/java.version\u0026gt; \u0026lt;/properties\u0026gt; \u0026lt;dependencies\u0026gt; \u0026lt;!-- https://mvnrepository.com/artifact/junit/junit --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;junit\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;junit\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;4.13.2\u0026lt;/version\u0026gt; \u0026lt;scope\u0026gt;test\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.slf4j\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;slf4j-log4j12\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;1.7.21\u0026lt;/version\u0026gt; \u0026lt;scope\u0026gt;test\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;log4j\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;log4j\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;1.2.17\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!--rabbitmq 依赖客户端--\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.rabbitmq\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;amqp-client\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;5.8.0\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!--操作文件流的一个依赖--\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;commons-io\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;commons-io\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.6\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.powermock\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;powermock-api-mockito2\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.0.4\u0026lt;/version\u0026gt; \u0026lt;scope\u0026gt;test\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.powermock\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;powermock-module-junit4\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.0.4\u0026lt;/version\u0026gt; \u0026lt;scope\u0026gt;test\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.powermock\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;powermock-core\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.0.4\u0026lt;/version\u0026gt; \u0026lt;scope\u0026gt;test\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- hutool工具包 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;cn.hutool\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;hutool-all\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;5.6.3\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.maven\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;maven-plugin-api\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.0\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.google.guava\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;guava\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;23.0\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.google.code.gson\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;gson\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.8.2\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;io.github.biezhi\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;TinyPinyin\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.0.3.RELEASE\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.reflections\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;reflections\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;0.10.2\u0026lt;/version\u0026gt; \u0026lt;!--\u0026lt;version\u0026gt;0.9.11\u0026lt;/version\u0026gt; 这个版本就不存在此现象--\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;!-- 数学工具 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.commons\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;commons-math3\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.6.1\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;/dependencies\u0026gt; \u0026lt;build\u0026gt; \u0026lt;plugins\u0026gt; \u0026lt;plugin\u0026gt; \u0026lt;groupId\u0026gt;org.apache.maven.plugins\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;maven-compiler-plugin\u0026lt;/artifactId\u0026gt; \u0026lt;configuration\u0026gt; \u0026lt;source\u0026gt;8\u0026lt;/source\u0026gt; \u0026lt;target\u0026gt;8\u0026lt;/target\u0026gt; \u0026lt;/configuration\u0026gt; \u0026lt;/plugin\u0026gt; \u0026lt;/plugins\u0026gt; \u0026lt;/build\u0026gt; \u0026lt;/project\u0026gt; "}),a.add({id:4,href:'/life/docs/python/base/remark/',title:"python 说明",section:"python 基础学习",content:"版本问题\r#\r\rPython发行版通常与以前的版本向后兼容。 Python 2.7在很大程度上向后兼容Python 2.6\n在python3和python2之间有着一个特殊的版本叫做python2.6，这个版本是作为试验版本和过渡版本而存在的。它基本上采用的都是python2的库以及语法，但同时也可以使用python3的语法。虽然可以使用两个不同版本的python语法，但它还是不可以去运行python3的程序，因为本质上是不兼容的\n包管理问题\r#\r\r 自己开发 可以使用pip 比较简单  Python 的包管理工具常见的有：easy_install，setuptools，distribute，pip\n他们之间的关系如下\n文档\r#\r\rpython3.6 python w3school\nhtml转markdown\n"}),a.add({id:5,href:'/life/docs/python/install/pyinstaller/',title:"python pyinstaller ",section:"python 插件学习",content:"pyinstaller\r#\r\r安装\r#\r\r 安装  pip install pyinstaller  验证安装  C:\\Users\\noatn\u0026gt;pyinstaller -v 5.8.0  更新PyInstaller  pip install --upgrade pyinstaller  下载PyInstaller开发版本   如果你认为当前发行版本无法满足你的要求，或者你发现了bug的话，可以尝试用一下最新的开发版本\n pip install https://github.com/pyinstaller/pyinstaller/tarball/develop 打包\r#\r\r打包为单文件\r#\r\r 平时我们见到很多便携的单文件程序，假如我们写了一个小脚本，寥寥数行代码，打包成一个文件夹显然不合适，这就可使用Pyinstaller打包成一个exe\n # 将 xx.py 打包为 xx.exe pyinstaller -F xx.py 打包为单文件 并且去掉命令行界面\r#\r\r# 将 xx.py 打包为 xx.exe pyinstaller -F -w xx.py 打包资源文件夹\r#\r\r# 将 xx.py 打包 pyinstaller xx.py  打包的时候，程序同路径下会生成一个同名的.spec文件，这个文件是打包的 “中间文件”，我们可以通过修改这个文件来添加我们需要添加资源的文件\n Spec文件分析\r#\r\r.spec文件中主要包含4部分：Analysis、PYZ、EXE、COLLECT\n  Analysis：主要是分析py文件的依赖信息\n  PYZ：是一个.pyz的压缩包，包含程序运行需要的依赖\n  EXE：是根据上述两项内容而生成的\n  COLLECT：主要是输出信息\n  Analysis部分截取示例\n  # -*- mode: python ; coding: utf-8 -*-\ra = Analysis(['gui.py'],\rpathex=['D:\\\\gui'],\rbinaries=[],\rdatas=[('D:\\\\gui\\\\config.ini','.'),('D:\\\\gui\\\\清洗规则.xlsx','.')],\rhiddenimports=['pandas'],\rhookspath=[],\rhooksconfig={},\rruntime_hooks=[],\rexcludes=[],\rwin_no_prefer_redirects=False,\rwin_private_assemblies=False,\rcipher=block_cipher,\rnoarchive=False)\r参数详解\r#\r\r想要添加资源文件，重点是修改datas的内容，我这里是修改过的，一般是空的：datas = [] datas里边的元素是以元组的形式来存储的，有这么一个映射关系：\ndatas = [('源文件路径','目标路径')]\r如果有多个，就多放几个元素，内容不限，如果目标路径是打包后的根目录，那就写.\n修改好之后，运行这条命令即可：\npyinstaller -D xx.spec 程序写好了，但是文件夹形式不方便分发，也显得比较low:stuck_out_tongue_winking_eye:，那我们就需要打包成安装程序:soon\n去掉命令行窗口\r#\r\r 根据之前的命令打包的好的程序，可以运行，但是会带一个命令框，黑乎乎的，对于命令行程序还好，但假如是GUI，那体验就太糟糕了:expressionless\n # 添加 -w 参数可以隐藏命令行窗口 pyinstaller -w xxx.py 给程序增加图标\r#\r\r 程序打包好了，黑框也去掉了，但是程序看起来像是快捷方式丢失一样，很不美观，我们需要给程序增加一个漂亮的面具:sunglasses\n # 添加 -i 参数，后加 图标路径 pyinstaller -i x:\\xx\\xx.ico xx.py PyInstaller 支持的常用选项\r#\r\r   -h，\u0026ndash;help 查看该模块的帮助信息     -F，-onefile 产生单个的可执行文件   -D，\u0026ndash;onedir 产生一个目录（包含多个文件）作为可执行程序   -a，\u0026ndash;ascii 不包含 Unicode 字符集支持   -d，\u0026ndash;debug 产生 debug 版本的可执行文件   -w，\u0026ndash;windowed，\u0026ndash;noconsolc 指定程序运行时不显示命令行窗口（仅对 Windows 有效）   -c，\u0026ndash;nowindowed，\u0026ndash;console 指定使用命令行窗口运行程序（仅对 Windows 有效）   -o DIR，\u0026ndash;out=DIR 指定 spec 文件的生成目录。如果没有指定，则默认使用当前目录来生成 spec 文件   -p DIR，\u0026ndash;path=DIR 设置 Python 导入模块的路径（和设置 PYTHONPATH 环境变量的作用相似）。也可使用路径分隔符（Windows 使用分号，Linux 使用冒号）来分隔多个路径   -n NAME，\u0026ndash;name=NAME 指定项目（产生的 spec）名字。如果省略该选项，那么第一个脚本的主文件名将作为 spec 的名字    "}),a.add({id:6,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E6%B2%9F%E9%80%9A%E6%8A%80%E5%B7%A7/case1/',title:"不羞不怯，直切要点",section:"沟通技巧",content:" 不羞不怯，直切要点。数据先行，有理有据。理性分析，思路清晰\n 一、不羞不怯，直切要点\r#\r\r职场沟通里有两点很重要，一个是高情商，一个是简明扼要。\n高情商在很多人看来就是多说一句“辛苦”，一个“谢谢”，但其实有一点非常重要，就是尊重大家的时间和精力，一个体现就是，当你想要提需求的时候最好一次性想好事情的前提条件、发展现状、要问的问题以及问题的分支情况，而不是让人家来一次次追问你\n比如你因为一个活动向设计提需求，就要一次性说明白：“此次活动的主题是xx，希望体现xx的元素，采用xx的配色，文案大意会是xx，能否实现xx，如果不能可否采用xx方案……”\n而不是：\n“我们要做一个xx海报。” “有什么要求吗？” “符合xx主题，xx配色。” “文案想好了吗？” “想好了是xx” “还有别的需求吗？” “xx可以吗？” ……\r总之，你要预设一个需求或者问题给出去以后对方的反应，最大程度减少互相来回对话的次数。\n其次就是简明扼要。\n在表达看法的时候最好先说结论，也就是你表达的重点，然后说论据，也就是你为什么这么认为，最好有事实依据，然后给出实施建议或改进建议。\n在表达看法的时候最好先说结论，也就是你表达的重点，然后说论据，也就是你为什么这么认为，最好有事实依据，然后给出实施建议或改进建议。\n在接受问话的时候先说答案，不要先说各种前因后果弯弯绕绕，先说答案，大家就知道现在是否存在问题，然后指向性的解决问题。尤其就算自己犯了错误，也不要试图先云里雾里的遮掩和解释，而是直接说明问题，找到解决办法，最大程度保证工作的完成。\n还要注意的一点就是，工作中，尤其合作里，大家都是为了实现工作目标，因为不要为了理念的不和而生出个人恩怨，只要对方可以为了达成目标而发挥作用，就拿出专业态度，好好合作。\n二、数据先行，有理有据\r#\r\r职场不相信大饼，只相信成绩，以前领导还能给职场新人画饼，现在新人都学聪明了，不吃这一套了。所以想要让别人相信自己，就拿出数据说话。\n比如你认为某某平台不适合重点投放，那就要去分析用户数据，看用户是不是真的和自己产品用户不匹配，比如性别、年龄、城市分布、内容喜好……而不是只凭借自己的平台使用体验和大众印象而说：“我觉得”、“我认为”。\n有的时候你会发现数据是反常识的，比如我们常常认为男性更专注罪案，但实际上某个悬疑类故事公众号，女性用户多于男性用户。\n所以数据不止让别人相信你，也让你少犯错，做出更正确的决策。对于职场新人来说，数据能力更是阶级的跳板，一个新人想要让自己的想法受到重视，必须拿出无可置疑的例证，也就是数据，当你展现出用数据说话的能力，和创造性的意识，就算你的方案暂时不被采用，你也会被看到。\n三、理性分析，思路清晰\r#\r\r分析方法有很多，这里主要说一下mice鱼骨图方案，其实也就是逻辑树、演绎法，即穷尽所有可能。\n演绎法\r#\r\r 定义  所谓演绎推理，就是从一般性的前提出发，通过推导即“演绎”，得出具体陈述或个别结论的过程。关于演绎推理，还存在以下几种定义：\n①演绎推理是从一般到特殊的推理；\n②它是前提蕴涵结论的推理；\n③它是前提和结论之间具有必然联系的推理。\n④演绎推理就是前提与结论之间具有充分条件或充分必要条件联系的必然性推理。\n 重点说明  绎推理是严格的逻辑推理，一般表现为大前提、小前提、结论的三段论模式：即从两个反映客观世界对象的联系和关系的判断中得出新的判断的推理形式。如：“自然界一切物质都是可分的，基本粒子是自然界的物质，因此，基本粒子是可分的。”演绎推理的基本要求是：一是大、小前提的判断必须是真实的；二是推理过程必须符合正确的逻辑形式和规则。演绎推理的正确与否首先取决于大前提的正确与否，如果大前提错了，结论自然不会正确。\n上述大前提 自然界一切物质都是可分的\n小前提 基本粒子是自然界的物质\n结论 因此，基本粒子是可分的\n 形式  演绎推理有三段论、假言推理、选言推理、关系推理等形式。\n三段论\r#\r\r是由两个含有一个共同项的性质判断作前提，得出一个新的性质判断为结论的演绎推理。三段论是演绎推理的一般模式，包含三个部分：大前提——已知的一般原理，小前提——所研究的特殊情况，结论——根据一般原理，对特殊情况作出判断。\n例如：知识分子都是应该受到尊重的，人民教师都是知识分子，所以，人民教师都是应该受到尊重的。\n共同项 知识分子\n性质:知识分子应该受到尊重\n一般原理:人民教师都是知识分子\n对特殊情况作出判断 : 人民教师都是应该受到尊重的\n其中，结论中的主项叫做小项，用“S”表示，如上例中的“人民教师”；结论中的谓项叫做大项，用“P”表示，如上例中的“应该受到尊重”；两个前提中共有的项叫做中项，用“M”表示，如上例中的“知识分子”。在三段论中，含有大项的前提叫大前提，如上例中的“知识分子都是应该受到尊重的”；含有小项的前提叫小前提，如上例中的“人民教师是知识分子”。三段论推理是根据两个前提所表明的中项M与大项P和小项S之间的关系，通过中项M的媒介作用，从而推导出确定小项S与大项P之间关系的结论\n假言推理\r#\r\r是以假言判断为前提的推理。假言推理分为充分条件假言推理和必要条件假言推理两种\n （1）充分条件假言推理的基本原则是：小前提肯定大前提的前件，结论就肯定大前提的后件；小前提否定大前提的后件，结论就否定大前提的前件。  ①如果一个数的末位是0，那么这个数能被5整除；这个数的末位是0，所以这个数能被5整除；\n②如果一个图形是正方形，那么它的四边相等；这个图形四边不相等，所以，它不是正方形。\n两个例子中的大前提都是一个假言判断，所以这种推理尽管与三段论有相似的地方，但它不是三段论。\n （2）必要条件假言推理的基本原则是：小前提肯定大前提的后件，结论就要肯定大前提的前件；小前提否定大前提的前件，结论就要否定大前提的后件。  ①只有肥料足，菜才长得好。这块地的菜长得好，所以，这块地肥料足。\n②育种时，只有达到一定的温度，种子才能发芽。这次育种没有达到一定的温度，所以种子没有发芽。\n关系推理\r#\r\r关系推理是前提中至少有一个是关系命题的推理。\n几种常用的关系推理：\n（1）对称性关系推理，如1米=100厘米，所以100厘米=1米；\n（2）反对称性关系推理，a大于b，所以b小于a ；\n（3）传递性关系推理，a\u0026gt;b，b\u0026gt;c，所以a\u0026gt;c。\n归纳法\r#\r\r归纳推理是一种由个别到一般的推理。\n由一定程度的关于个别事物的观点过渡到范围较大的观点，由特殊具体的事例推导出一般原理、原则的解释方法。\r自然界和社会中的一般，都存在于个别、特殊之中，并通过个别而存在。\r一般都存在于具体的对象和现象之中，因此，只有通过认识个别，才能认识一般。\r人们在解释一个较大事物时，从个别、特殊的事物总结、概括出各种各样的带有一般性的原理或原则，然后才可能从这些原理、原则出发，再得出关于个别事物的结论。\r这种认识秩序贯穿于人们的解释活动中，不断从个别上升到一般，即从对个别事物的认识上升到对事物的一般规律性的认识。\r例如，根据各个地区、各个历史时期生产力不发展所导致的社会生活面貌落后，可以得出结论说，生产力发展是社会进步的动力，这正是从对于个别事物的研究得出一般性结论的推理过程，即归纳推理。\n 定义  例如：在一个平面内，直角三角形内角和是180度；锐角三角形内角和是180度；钝角三角形内角和是180度；直角三角形，锐角三角形和钝角三角形是全部的三角形；所以，平面内的一切三角形内角和都是180度。\n这个例子从直角三角形，锐角三角形和钝角三角形内角和分别都是180度这些个别性知识，推出了“一切三角形内角和都是180度“这样的一般性结论，就属于归纳推理。 并且这个前提已经把三角形的种类包含完全了。是一个完全归纳推理\n传统上，根据前提所考察对象范围的不同，把归纳推理分为完全归纳推理和不完全归纳推理。完全归纳推理考察了某类事物的全部对象，不完全归纳推理则仅仅考察了某类事物的部分对象。并进一步根据前提是否揭示对象与其属性间的因果联系，把不完全归纳推理分为简单枚举归纳推理和科学归纳推理。\n现代归纳逻辑则主要研究概率推理和统计推理。归纳推理的前提是其结论的必要条件。\n其次，归纳推理的前提是真实的，但结论却未必真实，而可能为假。如根据某天有一只兔子撞到树上死了，推出每天都会有兔子撞到树上死掉，这一结论很可能为假，除非一些很特殊的情况发生，比如地理环境中发生了什么异常使得兔子必以撞树为快。\n我们可以用归纳强度来说明归纳推理中前提对结论的支持度。支持度小于50%的，则称该推理是归纳弱的；支持度小于100%但大于50%的，称该推理是归纳强的；归纳推理中只有完全归纳推理前提对结论的支持度达到100%，支持度达到100%的是必然性支持。\n归纳推理的数理逻辑通用演算形式为：s1⊆p+s2⊆p+s3⊆p+〈n〉（s⊆p）=∀×（s⊆p）\n 演绎推理对比  1，思维进程不同。\n归纳推理的思维进程是从个别到一般，而演绎推理的思维进程不是从个别到一般，是一个必然地得出的思维进程。\n2，对前提真实性的要求不同。\n归纳推理要求大前提，小前提必须为真。演绎推理则没有这个要求。\n3，结论所断定的知识范围不同。\n演绎推理的结论没有超出前提所断定的知识范围。归纳推理除了完全归纳推理，结论都超出了前提所断定的知识范围。\n4，前提与结论间的联系程度不同。\n演绎推理的前提与结论间的联系是必然的，也就是说，前提真实，推理形式正确，结论就必然是真的。归纳推理除了完全归纳推理前提与结论间的联系是必然的外，前提和结论间的联系都是或然的，也就是说，前提真实，推理形式也正确，但不能必然推出真实的结论。\n"}),a.add({id:7,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/iqcs36rgjy/fdhcmhstpw/',title:"什么叫魅力",section:"人际剖析",content:"什么叫魅力\r#\r\r魅力\n 气场 存在感 本质上是由什么决定的;当一个人有魅力会自然而然的吸引别人的目光\n 魅力＝框架+能量\n框架\r#\r\r框架 : 国有国法,家有家规;个人也有个人的框架;国法和家规是为了维持一个国家 或者一个家庭内在的秩序,同时它也警告外来者这是我的主权和领土 有一些东西你是不可以侵犯的,同样我们每个人他也是有像法律这样的框架 也就是你喜欢什么、不喜欢什么，你能够接受什么、不能够接受什么\n这些东西构成了你的框架 其实我们人和人熟悉和交往的过程,本质上就是一个相互试探、了解彼此框架的过程\n大家有没有发现我们初次和一个人见面或者说是和一个人完全不太熟的时候\n很少会有人上来就攻击你或者欺负你 呀 王总王总你好 哎呀小多呀 小多好 小多是湖南人吧\n什么时候我们有空一起去吃湘菜\n好呀好呀 我们以后有时间就多约多聊\n大家都是客客气气的 因为没有把彼此完全摸透 不知道对方的水有多深\n能量\r#\r\r当你的因积累到一定程度之后,你所散发出来的一种气场\n“胜兵先胜而后求战，败兵先战而后求胜”“善战者无智名，无勇功（善战者无赫赫之功，善医者无煌煌之名）\n决定能量最重要的一个东西叫做实力\n\u0026ldquo;自卑和自傲是孪生兄弟,我们要自信,自信的支柱是实力\u0026rdquo;\n实力\r#\r\r我们的社会是墓强的\n其他人如何看待你 就是取决于他们怎么看待你的实力 而我们作为个体 想要过得好的办法就是提高自己的实力\n在绝对实力面前 所谓的技巧、伎俩、手段通通没用\n产品卖得好是产品本身好 如果产品本身不好\n实力 = 价值 + 稀缺性\n需要找到自己实力的领域 优势+兴趣 做起来不太费力 经常受到别人的称赞和表扬\n\u0026ldquo;价值\u0026rdquo; :被别人需要\n链接\n"}),a.add({id:8,href:'/life/docs/english_study/second_language_acquisition/stephen_d_krashen/',title:"Principles and Practice ",section:"第二语言习得",content:"Principles and Practice in\nSecond Language Acquisition\nStephen D Krashen\nUniversity of Southern California\nThis is the original version of Principles and Practice, as published in 1982, with only minor changes. It is gratifying to point out that many of the predictions made in this book were confirmed by subsequent research, for example, the superiority of comprehensible-input based methods and sheltered subject matter teaching (Krashen, 2003), the inefficacy of error correction (Truscott, 1996, 1999), and the \u0026ldquo;power of reading\u0026rdquo; (Krashen, 2004). Subsequent research has also, in my opinion, confirmed that in footnote 5, chapter 3, option 3 is the correct one, that we acquire vocabulary best through comprehensible input (Krashen, 1989; 2003).\nI have changed my position on only one issue: At the end of Principles and Practice, I suggest the use of a form of deception - students may think they are acquiring vocabulary or learning subject matter, but unknown to them, they are acquiring because they are getting comprehensible input at the same time. I now think it is very important to make a strong effort to inform students about the process of language acquisition, so they can continue to improve on their own.\nKrashen, S. (1989) We acquire vocabulary and spelling by reading: Additional evidence for the input hypothesis. Modern Language Journal 73, 440-464.\nKrashen, S. (2003) Explorations in Language Acquisition and Use: The Taipei Lectures. Portsmouth, NH: Heinemann.\nKrashen, S. (2004) The Power of Reading. Portsmouth, NH: Heinemann.\nTruscott, J. (1996). The case against grammar correction in L2 writing classes. Language Learning, 46 (2), 327-69.\nTruscott, J. (1999). What\u0026rsquo;s wrong with oral grammar correction? The Canadian Modern Language Review, 55(4), 437-56.\nIntroduction to the Internet Edition\nCopyright © 1982 Stephen Krashen\nAll Rights Reserved. This publication may be downloaded and copied without charge for all reasonable, non-commercial educational purposes, provided no alterations in the text are made.\nFirst printed edition 1982 by Pergamon Press Inc.\nPrint Edition ISBN 0-08-028628-3 First internet edition July 2009\ni\nAcknowledgments\nI am indebted to many people who have helped me both directly and indirectly. I can only mention a few of them here. Earl Stevick and Robin Scarcella kindly provided me with detailed comments on nearly every aspect of the manuscript. I have also received a great deal of useful feedback from John Schumann, John Oller, Adrian Palmer, Tracy Terrell, Andrew Cohen, Steven Sternfeld, and Batyia Elbaum. I am sure this book would be much stronger if I had followed all their advice. The task of writing this volume was made much easier by the support and understanding of my family, my wife Eula, my children Deborah and Daniel, and my parents Leo and Julia Krashen. I would also like to thank my colleagues in the Linguistics Department at USC for their intellectual stimulation and encouragement. I especially thank Larry Hyman, Edward Finegan, Eugene Briere, Elaine Andersen, Elinor Ochs, Edward Purcell, John Hawkins, and Bernard Comrie.\nContents\n   I. Introduction: The Relationship of Theory to Practice 1     A. Three Approaches to Method 2   1. Theory of second language acquisition 2   2. Applied linguistics research 3   3. Ideas and intuitions from experience 3   B. Interactions Among Approaches to Practice 4   C. What the Three Approaches Have to Say About Method 6   D. Goals of This Book: to reintroduce teachers to theory and hopefully to gain their confidence again 7   Notes 8   II. Second Language Acquisition Theory 9   A. Five Hypotheses About Second Language Acquisition 10   1. The acquisition-learning distinction 10   2. The natural order hypothesis 12   (a) Transitional forms 14   3. The Monitor hypothesis 15   (a) Individual variation in Monitor use 18   4. The input hypothesis 20   (a) Statement of the hypothesis 20   (b) Evidence supporting the hypothesis 22   5. The Affective Filter hypothesis 30   B. The Causative Variable in Second Language Acquisition 32   1. The causative variables 32   2. Language teaching: does it help? 33   (a) When language teaching helps 34   (b) When language teaching does not help 35   3. Exposure variables 37   4. Age 43   5. Acculturation 45   III. Providing Input for Acquisition 57   A. The Potential of the Second Language Classroom 58   B. Limitations of the Classroom 59   C. The Role of Output 60   1. \u0026ldquo;Conversation\u0026rdquo; and language acquisition 61   2. Output and learning 61    Contents cont.\n   D. Characteristics of Optimal Input for Acquisition 62     1. Optimal input is comprehensible 63   (a) How to aid comprehension 64   2. Optimal input is interesting and/or relevant 66   3. Optimal input is not grammatically sequenced 68   (a) The case against the grammatical syllabus 70   4. Optimal input must be in sufficient quantity 71   (a) Quantity requirements for initial readiness to speak 71   (b) Quantity requirements for higher levels of proficiency 72   E. Other Features that Encourage Acquisition 73   1. The student should not be put on the defensive 73   2. Provide tools to help students obtain more input 76   F. \u0026ldquo;Teaching\u0026rdquo; Conversational Competence 78   IV. The Role of Grammar, or Putting Grammar in its Place 83   A. Learning Does Not Become Acquisition 83   B. The Place of Grammar 89   1. Grammar for Monitor use: when the Monitor is used 89   2. What can be Monitored 92   (a) Incompetent Monitor use 94   (b) Rule learnability 96   (c) Some evidence 98   (d) Consequences of teaching \u0026ldquo;hard\u0026rdquo; rules 102   C. The Effects of Learning: Accuracy of Self-correction 104   1. Factors affecting self-correction accuracy 105   2. The data 108   D. Other Effects of Conscious Rules 112   E. Presentation of Rules 113   1. The deductive-inductive issue 113   2. Sequencing and learning 115   F. Notes on Error Correction 116   G. Grammar as Subject-matter 119   V. Approaches to Language Teaching 125   A. Present-day Teaching Methods 126   1. Grammar-translation 127   (a) Requirements for optimal input 128   (b) Learning 129   (c) Summary 129   2. Audio-lingualism 129   (a) Requirements for optimal input 130   (b) Learning 132   (c) Summary 132   3. Cognitive-code 132   (a) Requirements for optimal input 133   (b) Learning 134    Contents cont.\n(c) Summary 134\n4. The direct method 135\n Requirements for optimal input 135  Learning 137   Summary 137\n5. The natural approach 137\n  Requirements for optimal input 138\n  Learning 139\n  Summary 140\n6. Total physical response 140\n  Requirements for optimal input 140\n  Learning 142\n  Summary 142\n7. Suggestopedia 142\n  Requirements for optimal input 144\n  Learning 146\n  Summary 146\n     Applied Linguistics Research 146  Review of method comparison studies 147  American studies of AL, GT, and CC 149 The GUME project 150   Some preliminary conclusions to method comparison studies 151 More recent method comparison studies 155  The TPR series 155 Other input methods compared 157 Suggestopedia research 158     Alternative to Methods 160  Function of the classroom 160 The second language classroom and requirement #2 161 The alternatives 162  Conversation 163 Pleasure reading 164 Using subject matter for language teaching 167 Evidence for subject matter teaching: the immersion programs 170 Other possibilities in subject matter teaching 171     Comments on Achievement Testing 176  Normal considerations in test evaluation and selection 176 Instructional value 177 Language requirements 181 University level ESL 182   Some Gaps in Materials 182  The language laboratory 184 A comment on field testing of materials 185   Some Problems 186  Bibliography 191\nIndex 201\nChapter I\nIntroduction: The Relationship of Theory to Practice\nThe purpose of this book is to take a new look at an old question: the relationship between second language teaching practice and what is known about the process of second language acquisition. The usual way to do this is to discuss some research results first, outline a possible theory, and then list some implications. I will, to some extent, follow this plan. A significant portion of this book is, in fact, devoted to summarizing the current state of second language acquisition theory as I see it. Following this, I will draw some general conclusions about application to methods and materials, and eventually describe what characteristics effective materials should have.\nBefore going through this exercise, however, it is important to state in advance that \u0026ldquo;theory\u0026rdquo; and \u0026ldquo;theoretical research\u0026rdquo; should not be the only input into deciding on methodology and materials. While my emphasis here is on theory and its implications, it is dangerous to rely only on theory. There are at least three different ways of arriving at answers in methodology and materials, and we must consider all of them. I will devote the remainder of this introduction to a brief description of these three areas, and a discussion of how they interrelate with each other. We will then see what each has to say about method in second and foreign language teaching. My view, for those who like the punch line early, is that all three ways arrive at precisely the same answer. The solution to our problems in language teaching lies not in expensive equipment, exotic methods, sophisticated linguistic analyses, or new laboratories, but in full utilization of what we already have, speakers of the languages using them for real communication. I will also conclude that the best methods might also be the most pleasant, and that, strange as it seems, language acquisition occurs when language is used for what it was designed for, communication.\nA. Three Approaches to Method\r#\r\r1 . THEORY OF SECOND LANGUAGE ACQUISITION\nThe first area we will discuss will be the central focus of this volume, second language acquisition theory. As developed today, second language acquisition theory can be viewed as a part of \u0026ldquo;theoretical linguistics\u0026rdquo;, i.e. it can be studied and developed without regard to practical application. As is the case with any scientific theory, it consists of a set of hypotheses, or generalizations, that are consistent with experimental data. These hypotheses can be arrived at using any of a variety of means (a brilliant insight, a dream, etc.). They must, however, be able to predict new data. In other words, hypotheses are not summaries or categories for existing data and observations, but must pass the test of accounting for new data. If our current hypotheses are able to predict new events, they survive. If they fail, even once, they must be altered. If these alterations cause fundamental changes in the original generalizations, the hypotheses may have to be totally abandoned.\nNote that according to this way of doing science, we can never really prove anything! We can only look for \u0026ldquo;supporting evidence\u0026rdquo;. When we do not find supporting evidence, or when we find counter-evidence, our hypothesis is in trouble. Even when we do find supporting evidence, when the hypothesis makes the correct prediction, a critic can always say that we have not found \u0026ldquo;enough\u0026rdquo;. Thus, a scientist, professionally speaking, is never able to state that anything has been \u0026ldquo;proven\u0026rdquo;. All the scientist can do is have a current hypothesis that he or she is interested in testing.\nLater in this book I will present a series of hypotheses that make up a coherent theory of second language acquisition. According to the rules of scientific method, it will always be \u0026ldquo;just theory\u0026rdquo; and never be \u0026ldquo;definitely proven\u0026rdquo;. The hypotheses I will present have, however, been found to be consistent with a significant amount of data, experimental and otherwise, and have not yet been confronted with serious counterexamples, in my view. They make up, collectively, my \u0026ldquo;position\u0026rdquo;. This does not mean that I necessarily \u0026ldquo;believe\u0026rdquo; them. What it does mean is that these hypotheses are consistent enough with existing data to be worthy of consideration, and that they appear to capture the data better than other existing generalizations.\nTheory is abstract, and does not attempt to be practical. I hope to convince the reader, however, that in the case of second language teaching, there is nothing as practical as a good theory!\n2 . APPLIED LINGUISTICS RESEARCH\nA great deal of research goes on in linguistics that is not aimed at supporting or attacking any coherent theory. This research, rather, is aimed at solving practical, real problems that confront society. A few examples will hopefully make this category clear.\nAn example that will be important to us in our discussion of language teaching consists of experiments that compare teaching methods. Quite simply, a group of students is taught a foreign language using method A (e.g. audio-lingual), and another group is taught the same language using method B (e.g. grammar-translation). The results of such an experiment would certainly be of interest to theoreticians, since a particular theory might predict that students studying using one method would do better than students using another. The experiment itself, however, is designed for practical ends, i.e. to decide which method we should use in our schools.\nThe research literature contains many applied linguistics experiments examining other questions of very practical relevance, e.g.:\nWill instruction in a second language make children more intelligent? (or less\nintelligent?)\nShould non-English speaking children in American Bilingual Education begin to read in their first language or in English?\n3 . IDEAS AND INTUITIONS FROM EXPERIENCE\nA third approach to method does not rely on experimentation at all. It relies, rather, on the insights and observations of experienced language teachers and students of foreign languages. It consists of \u0026ldquo;ideas that work\u0026rdquo; (the name of a column in the TESOL Newsletter edited by Darlene Larson, consisting of pedagogical techniques sent in by teachers), introspections by language students (e.g. \u0026ldquo;diary studies\u0026rdquo;), and other informal observations. While results of research are regularly presented in professional journals, teachers' insights are not easily\naccessed and shared. Language teaching organizations often arrange meetings so that experienced teachers can share their techniques and insights with others (e.g. the highly successful \u0026ldquo;mini-conferences\u0026rdquo; organized by the California TESOL organization). Empirical support for new techniques is neither expected nor presented; rather, the word of the teacher is sufficient evidence, often, for a new idea to be at least tried out in different classes.\nB. Interactions Among Approaches to Practice\r#\r\rBefore discussing what each approach has to say about methods and materials, I would like to make a modest proposal: the three approaches should influence and help each other. It seems obvious, first of all, that researchers would be interested in the results of applied research, since such experiments can provide potential confirming and counter evidence for theories of second language acquisition. Similarly, it stands to reason that applied linguistics researchers should pay some attention to strictly theoretical research, since a successful theory might give researchers deeper insight into the results of their studies.\nIt also seems reasonable to suggest that researchers in both theoretical and applied linguistics would benefit by both teaching and studying languages, in order to get more insight into the language acquisition process. Similarly, one might expect practitioners to be interested in the results of research, and one might also expect researchers to be very interested in the opinions of both teachers and language students.\nFigure 1.1 illustrates this ideal world, with information flowing between all three areas that influence language teaching methodology. Figure 1.2 is, however, much closer to the actual state of affairs: there is, today, very little interaction between and among the three areas.\nFig 1.1. Ideal relationship between theory, applied linguistics research, ideas and intuitions and language teaching practice.\n4\nFig. 1.2. Actual relationship between theory, applied linguistics research, ideas and intuitions and language teaching practice.\nIn reality, many researchers are no longer involved in language teaching and language acquisition, and do not interact with teachers. There is also far too little interaction between theoretical and applied research; those who search for the best method are often too little concerned with the underlying theory. What is perhaps most evident is that teachers and materials developers pay little attention to research and theorizing of any sort.\nThere is good reason for this lack of interaction, especially the failure of researchers and teachers to interact. The reasons for this lack of communication do not stem from any anti-intellectualism on the part of teachers. They stem, rather, from the failure of research to supply relevant input in the past, combined with the insistence on the part of theoreticians that their insights were the only legitimate determinant of teacher behavior and materials construction. In other words, we have, in the past, gone straight from theory to practice, and it simply has not worked.\nSome well-known examples of this approach include the direct application of the principles of behaviorist psychology in the classroom, known as the audio-lingual method. Theoreticians insisted that dialogue and pattern drill were \u0026ldquo;the way\u0026rdquo; to teach language, and recommended techniques that felt wrong to many teachers and students. A more recent \u0026ldquo;application of theory\u0026rdquo; was what may be called the \u0026ldquo;applied transformational grammar\u0026rdquo; movement, which featured materials directly based on current work in theoretical syntax and phonology. Applied TG did not significantly advance language teaching, for reasons that will become clear as we proceed. Its only tangible effect, perhaps, was that it needlessly made many teachers feel unprepared because they had not been trained in the latest version of transformational theory. (Lest the reader get the wrong impression, my personal view is that transformational-generative grammar, and the\n5\nprogress it stimulated in formal linguistics, should be recognized as an extremely important contribution, and easily outdid previous theories of linguistic structure. My point here is that it does not necessarily follow that second language methods and materials should be based directly on TG.)\nThese two theories, then, failed. The first, behaviorist theory, failed to apply successfully to language teaching because it was, simply, not a theory of language acquisition. The second, TG, failed because it was a theory of the product, the adult\u0026rsquo;s competence, and not a theory of how the adult got that competence. It is not a theory of the process of language acquisition.\nThe \u0026ldquo;new\u0026rdquo; theory, which I will present in Chapter II, is a theory of second language acquisition, and attempts to deal with the process of language acquisition, not its product. Despite these virtues, it should only be considered one of several possible sources of information in determining methods and materials for second language teaching.\nCompounding the failure of theoreticians to supply relevant theory has been the feeling among practitioners that failure to make the theory \u0026ldquo;work\u0026rdquo; has been their fault. They incorrectly concluded that it was their ignorance of theory that caused these theory-based methods to fail. As a result of this, teachers in recent years have appealed mostly to area III, their own ideas and intuitions, in determining what they do in the classroom. What teachers actually do is no longer based on theoretical or applied research. Materials, and many books on methodology, are based primarily on what seems to work in the classroom, and only rarely on a theory (recall earlier books based on audiolingualism or TG), and are usually not fieldtested.\nC. What the Three Approaches Have to Say About Method\r#\r\rThe purpose of this book is to summarize one current theory and state the implications of the theory to method. I will briefly summarize here what some of these implications are, anticipating Chapter III. What current theory implies, quite simply, is that language acquisition, first or second, occurs only when comprehension of real messages occurs, and when the acquirer is not \u0026ldquo;on the defensive\u0026rdquo;, to use Stevick\u0026rsquo;s apt phrase. Language acquisition does not require extensive\n6\nuse of conscious grammatical rules, and does not require tedious drill. It does not occur overnight, however. Real language acquisition develops slowly, and speaking skills emerge significantly later than listening skills, even when conditions are perfect. The best methods are therefore those that supply \u0026ldquo;comprehensible input\u0026rdquo; in low anxiety situations, containing messages that students really want to hear. These methods do not force early production in the second language, but allow students to produce when they are \u0026ldquo;ready\u0026rdquo;, recognizing that improvement comes from supplying communicative and comprehensible input, and not from forcing and correcting production.\nIn several places in this book I will attempt to make the point that research in applied linguistics is very consistent with the theoretical research in second language acquisition and its implications. The \u0026ldquo;best methods\u0026rdquo; according to comparative research studies (comparing methods A and B, as described earlier) appear to be \u0026ldquo;input methods\u0026rdquo;, those methods that focus on supplying comprehensible input in pressure-free situations.\nWe can get an idea of what the \u0026ldquo;ideas and intuitions\u0026rdquo; area feels is the \u0026ldquo;best method\u0026rdquo; by a survey of pedagogically-oriented papers in current journals and the titles of presentations at teacher workshops. The titles have changed markedly over the years! A decade ago teacheroriented articles and presentations focused on grammatical description, reflecting the concern with product, and procedures for drilling.1* Current titles more clearly reflect promoting real communication in the classroom, helping students understand spoken and written input and participate in conversations.2\nIn workshops and mini-conferences, we no longer see presentations on fine points of grammar, or on types of substitution drill. \u0026ldquo;Ideas that work\u0026rdquo; are ideas about role-playing, using the newspaper as a teaching aid, socio-drama, etc. Moreover, newer methodology has, as a primary goal, the lowering of student anxiety (see Chapter III).\nD. Goals of This Book\r#\r\rThe primary goal of this book is to present current theory and its implications. There is another goal, however, and that is to reintroduce\n* Superscript numbers refer to Notes at end of chapters.\nteachers to theory and hopefully to gain their confidence again. The time has come to look to theory again, realizing that the most current theory may still not be the final word on second language acquisition. I am not asking practitioners or materials developers to follow all of the implications of theory blindly. My hope is only that our results will be considered as another source of ideas and input to methods and materials, in partnership with conclusions reached by practitioners themselves from their own experience as language teachers and language acquirers.\nNotes\r#\r\r  Consider, for example, the table of contents of Language Learning, vol. 9, 1959, which included:\n\u0026ldquo;Grammatical theory and practice in an English grammar class\u0026rdquo;\n\u0026ldquo;Reaching the French verb\u0026rdquo;;\n\u0026ldquo;Noun-classes and the practical teacher\u0026rdquo;\n\u0026ldquo;Morpheme alternants in Spanish verb forms\u0026rdquo;\n\u0026ldquo;\u0026lsquo;Thechnemes\u0026rsquo; and the rhythm of class activity\u0026rdquo; Volume 12, 1962, contained:\n\u0026ldquo;Annotated bibliography of generative grammar\u0026rdquo;\n  The 1979 volume of the TESOL Quarterly, for example, contains articles such as:\n\u0026ldquo;Using radio commercials as supplementary materials in ESL listening classes\u0026rdquo;\n\u0026ldquo;Communicative writing\u0026rdquo;\n\u0026ldquo;Joke-telling as a tool in ESL\u0026rdquo; reflecting the current emphasis on communication in the classroom.\n( Notes 1 and 2 certainly do not represent a wide sample of activity in the filed, but they are representative. In recent years, the journal Language Learning has focussed on theoretical and applied research, rather than pedagogy. For this reason, I used the\nTESOL Quarterly, which began publication in 1967, for current titles.)\n8\n  Chapter II\nSecond Language Acquisition Theory\nThis chapter summarizes current second language acquisition theory. To do this, it first describes some very important hypotheses. The first three, the acquisition-learning distinction, the natural order hypotheses, and the Monitor hypothesis, are reviewed somewhat briefly, as they have been dealt with a great deal in several other books and professional papers. Enough detail will be provided, however, to give the uninitiated reader a good idea of the hypotheses and the sort of evidence that exists to support them. The fourth hypothesis, the input hypothesis, may be the single most important concept in second language acquisition theory today. It is important because it attempts to answer the crucial theoretical question of how we acquire language. It is also important because it may hold the answer to many of our everyday problems in second language instruction at all levels. Following the discussion of the input hypothesis, we turn to the concept of the affective filter, a hypothesis as to how affective variables relate to the process of second language acquisition.\nThe second portion of this chapter reviews a variety of factors that have been thought to be related to second language acquisition success, including instruction, different measures of exposure to the second language, and the age of the acquirer. These factors, it will be claimed, are not really causative factors. While they seem to relate to success or failure to acquire second languages, the true causative variables in second language acquisition derive from the input hypothesis and the affective filter\u0026ndash;the amount of comprehensible input the acquirer receives and understands, and the strength of the affective filter, or the degree to which the acquirer is \u0026ldquo;open\u0026rdquo; to the input.\nA. Five Hypotheses About Second Language Acquisition\r#\r\r1 . THE ACQUISITION-LEARNING DISTINCTION\nThe acquisition-learning distinction is perhaps the most fundamental of all the hypotheses to be presented here. It states that adults have two distinct and independent ways of developing competence in a second language.\nThe first way is language acquisition, a process similar, if not identical, to the way children develop ability in their first language. Language acquisition is a subconscious process; language acquirers are not usually aware of the fact that they are acquiring language, but are only aware of the fact that they are using the language for communication. The result of language acquisition, acquired competence, is also subconscious. We are generally not consciously aware of the rules of the languages we have acquired. Instead, we have a \u0026ldquo;feel\u0026rdquo; for correctness. Grammatical sentences \u0026ldquo;sound\u0026rdquo; right, or \u0026ldquo;feel\u0026rdquo; right, and errors feel wrong, even if we do not consciously know what rule was violated.\nOther ways of describing acquisition include implicit learning, informal learning, and natural learning. In non-technical language, acquisition is \u0026ldquo;picking-up\u0026rdquo; a language.\nThe second way to develop competence in a second language is by language learning. We will use the term \u0026ldquo;learning\u0026rdquo; henceforth to refer to conscious knowledge of a second language, knowing the rules, being aware of them, and being able to talk about them. In non-technical terms, learning is \u0026ldquo;knowing about\u0026rdquo; a language, known to most people as \u0026ldquo;grammar\u0026rdquo;, or \u0026ldquo;rules\u0026rdquo;. Some synonyms include formal knowledge of a language, or explicit learning.1*\nSome second language theorists have assumed that children acquire, while adults can only learn. The acquisition-learning hypothesis claims, however, that adults also acquire, that the ability to \u0026ldquo;pick-up\u0026rdquo; languages does not disappear at puberty. This does not mean that adults will always be able to achieve native-like levels in a second language. It does mean that adults can access the same natural \u0026ldquo;language acquisition device\u0026rdquo; that children use. As we shall see later, acquisition is a very powerful process in the adult.\n* Superscript numbers refer to Notes at end of chapters.\nError correction has little or no effect on subconscious acquisition, but is thought to be useful for conscious learning. Error correction supposedly helps the learner to induce or \u0026ldquo;figure out\u0026rdquo; the right form of a rule. If, for example, a student of English as a second language says \u0026ldquo;I goes to school every day\u0026rdquo;, and the teacher corrects him or her by repeating the utterance correctly, the learner is supposed to realize that the /s/ ending goes with the third person and not the first person, and alter his or her conscious mental representation of the rule. This appears reasonable, but it is not clear whether error correction has this impact in actual practice (Fanselow, 1977; Long, 1977).\nEvidence from child language acquisition confirms that error correction does not influence acquisition to any great extent. Brown and his colleagues have shown that parents actually correct only a small portion of the child\u0026rsquo;s language (occasional pronunciation problems, certain verbs, and dirty words!). They conclude from their research that parents attend far more to the truth value of what the child is saying rather than to the form. For example, Brown, Cazden, and Bellugi (1973) report that a sentence such as:\nHer curl my hair\n\u0026ldquo;was approved, because the mother was, in fact, curling Eve\u0026rsquo;s hair\u0026rdquo; (p. 330). On the other hand,\nWalt Disney comes on on Tuesday\nwas corrected, despite its syntactic correctness, since Walt Disney actually came on television on Wednesday. Brown et al. conclude that it seems to be \u0026ldquo;truth value rather than syntactic well-formedness that chiefly governs explicit verbal reinforcement by parents\u0026ndash;which renders mildly paradoxical the fact that the usual product of such a training schedule is an adult whose speech is highly grammatical but not notably truthful\u0026rdquo; (p. 330).\nThe acquisition-learning distinction may not be unique to second language acquisition. We certainly \u0026ldquo;learn\u0026rdquo; small parts of our first language in school (e.g. for most people, the who/ whom distinction), and similar distinctions have been made in other domains (see, for example, Reber, 1976; Hall, 1959; and the review in d\u0026rsquo;Anglejan, 1978).\n2 . THE NATURAL ORDER HYPOTHESIS\nOne of the most exciting discoveries in language acquisition research in recent years has been the finding that the acquisition of grammatical structures proceeds in a predictable order. Acquirers of a given language tend to acquire certain grammatical structures early, and others later. The agreement among individual acquirers is not always 100%, but there are clear, statistically significant, similarities.\nEnglish is perhaps the most studied language as far as the natural order hypothesis is concerned, and of all structures of English, morphology is the most studied. Brown (1973) reported that children acquiring English as a first language tended to acquire certain grammatical morphemes, or functions words, earlier than others. For example, the progressive marker ing (as in \u0026ldquo;He is playing baseball\u0026rdquo;.) and the plural marker /s/ (\u0026ldquo;two dogs\u0026quot;) were among the first morphemes acquired, while the third person singular marker /s/ (as in \u0026ldquo;He lives in New York\u0026rdquo;) and the possessive /s/ (\u0026ldquo;John's hat\u0026rdquo;) were typically acquired much later, coming anywhere from six months to one year later. de Villiers and de Villiers (1973) confirmed Brown\u0026rsquo;s longitudinal results cross-sectionally, showing that items that Brown found to be acquired earliest in time were also the ones that children tended to get right more often. In other words, for those morphemes studied, the difficulty order was similar to the acquisition order.\nShortly after Brown\u0026rsquo;s results were published, Dulay and Burt (1974, 1975) reported that children acquiring English as a second language also show a \u0026ldquo;natural order\u0026rdquo; for grammatical morphemes, regardless of their first language. The child second language order of acquisition was different from the first language order, but different groups of second language acquirers showed striking similarities. Dulay and Burt\u0026rsquo;s results have been confirmed by a number of investigators (Kessler and Idar, 1977; Fabris, 1978; Makino, 1980). Dulay and Burt used a subset of the 14 morphemes Brown originally investigated. Fathman (1975) confirmed the reality of the natural order in child second language acquisition with her test of oral production, the SLOPE test, which probed 20 different structures.\nFollowing Dulay and Burt\u0026rsquo;s work, Bailey, Madden, and Krashen (1974) reported a natural order for adult subjects, an order quite similar\nto that seen in child second language acquisition. As we shall see later, this natural order appears only under certain conditions (or rather, it disappears only under certain conditions!). Some of the studies confirming the natural order in adults for grammatical morphemes include Andersen (1976), who used composition, Krashen, Houck, Giunchi, Bode, Birnbaum, and Strei (1977), using free speech, and Christison (1979), also using free speech. Adult research using the SLOPE test also confirms the natural order and widens the data base. Krashen, Sferlazza, Feldman, and Fathman (1976) found an order similar to Fathman\u0026rsquo;s (1975) child second language order, and Kayfetz-Fuller (1978) also reported a natural order using the SLOPE test.\nAs noted above, the order of acquisition for second language is not the same as the order of acquisition for first language, but there are some similarities. Table 2.1, from Krashen\n(1977) , presents an average\nTABLE 2.1. \u0026ldquo;Average\u0026rdquo; order of acquisition of grammatical morphemes for English as a second language (children and adults)\nNotes:\n This order is derived from an analysis of empirical studies of second language acquisition (Krashen, 1977) . Most studies show significant correlatons with the average order. No claims are made about ordering relations for morphemes in the same box. Many of the relationships posited here also hold for child first language acquisition, but some do not: In general, the bound morphemes have the same relative order for first and second language acquisition (ING, PLURAL, IR. PAST, REG. PAST, III SINGULAR, and POSSESSIVE) while AUXILIARY and COPULA tend to be acquired relatively later in first language acquisition than in second language acquisition.  order for second language, and shows how the first language order differs. This average order is the result of a comparison of many empirical studies of grammatical morpheme acquisition.\nWhile English is the best studied language, it is not the only one studied. Research in order of acquisition for other language is beginning to emerge. As yet unpublished papers by Bruce (1979), dealing with Russian as a foreign language, and van Naerssen (1981), for Spanish as a foreign language, confirm the validity of the natural order hypothesis for other languages.\nWe will deal with the pedagogical implications of the natural order hypothesis later, I should point out here, however, that the implication of the natural order hypothesis is not that our syllabi should be based on the order found in the studies discussed here, that is, I do not recommend teaching ing early and the third person singular /s/ late. We will, in fact, find reason to reject grammatical sequencing in all cases where our goal is language acquisition. We will deal with this later, however, after we have finished laying the theoretical groundwork.\n( a) Transitional forms\nStudies supporting the natural order hypothesis show only the order in which mature, or well-formed structures emerge. Other studies reveal the path acquirers take en route to mastery. (For a review, see Dulay, Burt, and Krashen, in press. Ravem, 1974; Milon, 1974; Gillis and Weber, 1976; Cancino, Rosansky, and Schumann, 1974; Wode, 1978 and Nelson, 1980 are some second language studies in this area.) There is surprising uniformity here as well\u0026ndash;acquirers make very similar errors, termed developmental errors, while they are acquiring. For example, in acquiring English negation, many first and second language acquirers pass through a stage in which they place the negative marker outside the sentence, as in:\nNo Mom sharpen it. (from Klima and Bellugi\u0026rsquo;s (1966) study of child L1 acquisition) and Not like it now. (from Ravem\u0026rsquo;s (1974) study of child\nL2 acquisition)\nA typical later stage is to place the negative marker between the subject and the verb, as in:\nI no like this one. (Cancino et al. (1975) study of child\nL2 acquisition)\nand This no have calendar. (from Schumann\u0026rsquo;s (1978a) study of adult L2 acquisition) before reaching the correct form.\nPredictable stages in the acquisition of wh- questions in English include an early stage in which the wh- word appears before the rest of the sentence, which is otherwise left in its normal uninverted form, as in:\nHow he can be a doctor? (Klima and Bellugi, 1966, child L1\nacquisition)\nand What she is doing? (Ravem, 1974, child L2 acquisition)\nOnly later do acquirers begin to invert the subject and verb of the sentence. (A detailed review can be found in Dulay et al., in press.)\nTransitional forms have been described for other languages and for other structures. The stages for a given target language appear to be strikingly similar despite the first language of the acquirer (although particular first languages may influence the duration of certain stages; see Schumann, 1979). This uniformity is thought to reflect the operation of the natural language acquisition process that is part of all of us. (For a discussion of some of the current issues and controversies concerning the natural order hypothesis, see Krashen, 1981.)\n3 . THE MONITOR HYPOTHESIS\nWhile the acquisition-learning distinction claims that two separate processes coexist in the adult, it does not state how they are used in second language performance. The Monitor hypothesis posits that acquisition and learning are used in very specific ways. Normally, acquisition \u0026ldquo;initiates\u0026rdquo; our utterances in a second language and is responsible for our fluency. Learning has only one function, and that is as a Monitor, or editor. Learning comes into play only to make changes in the form of our utterance, after is has been \u0026ldquo;produced\u0026rdquo; by the acquired system. This can happen before we speak or write, or after (self-correction). Figure 2.1 models this process.\n15\nFig. 2.1. Acquisition and learning in second langauge production.\nConscious learning is available only as a \u0026ldquo;Monitor\u0026rdquo;, which can alter the output of the acquired system before or after the utterance is actually spoken or written. It is the acquired system which initiates normal, fluent speech utterances.\nThe Monitor hypothesis implies that formal rules, or conscious learning, play only a limited role in second language performance. These limitations have become even clearer as research has proceeded in the last few years. This research, reviewed in Chapter IV, strongly suggests that second language performers can use conscious rules only when three conditions are met. These conditions are necessary and not sufficient, that is, a performer may not fully utilize his conscious grammar even when all three conditions are met. I list these conditions here, with a brief description. We will discuss them in greater detail in Chapter IV:\n Time. In order to think about and use conscious rules effectively, a second language performer needs to have sufficient time. For most people, normal conversation does not allow enough time to think about and use rules. The over-use of rules in conversation can lead to trouble, i.e. a hesitant style of talking and inattention to what the conversational partner is saying. Focus on form. To use the Monitor effectively, time is not enough. The performer must also be focussed on form, or thinking about correctness (Dulay and Burt, 1978). Even when we have time, we may be so involved in what we are saying that we do not attend to how we are saying it. Know the rule. This is a very formidable requirement. Linguistics has taught us that the structure of language is extremely complex, and they claim to have described only a fragment of the best known languages. We can be sure that our students are exposed only to a small part of the total grammar of the language, and we know that even the best students do not learn every rule they are exposed to.  The evidence for the production schema shown in Fig. 2.1 comes originally from the natural order studies. (Confirming evidence has\nbeen also produced from other sources, see, for example, Bialystok and Frohlich, 1977, 1978a, 1978b.) These studies are consistent with this generalization: we see the natural order for grammatical morphemes, that is, the child\u0026rsquo;s (second language) difficulty order (similar to the order of acquisition; Krashen, 1977), when we test subjects in situations that appear to be \u0026ldquo;Monitor-free\u0026rdquo;, where they are focused on communication and not form. When we give our adult subjects tests that meet the three conditions, i.e. a pencil and paper \u0026ldquo;grammar\u0026rdquo;-type test, we see \u0026ldquo;unnatural\u0026rdquo; orders, orders unlike the child L2 order of acquisition or difficulty order. The interpretation of this result is that the natural order reflects the operation of the acquired system alone, without the intrusion of the conscious grammar, since adult second language acquisition is posited to be similar to child (second) language acquisition. When we put people in situations where the three conditions are met, when they have time, are focused on form, and know the rule, the error pattern changes, reflecting the contribution of the conscious grammar.\nIt appears to be the case that unnatural orders are the result of a rise in rank of certain morphemes, the late-acquired, more \u0026ldquo;learnable\u0026rdquo; items. In English as a second language, when performers are put in situations where they can and do Monitor, we see a rise in rank of the third person singular morpheme and the regular past, both late-acquired, low on the list in Table 2.1, and both relatively straightforward, both syntactically and semantically. (See studies by Larsen-Freeman, 1975, described in Chapter IV, Table 4.1; and Brown, described in Note 4, Chapter IV.)2\nUse of the conscious Monitor thus has the effect of allowing performers to supply items that are not yet acquired. As we shall see in Chapter IV, however, only certain items can be supplied by most Monitor users; the Monitor does a better job with some parts of grammar than with others. Specifically, it seems to do better with rules that can be characterized as \u0026ldquo;simple\u0026rdquo; in two different ways. First, rules that do not require elaborate movements or permutations; rules that are syntactically simple. Easy rules in this sense include bound morphology, such as the third person singular in English, or the de + le = du contraction in French. Difficult rules in this sense include the English wh- question rule, which requires moving the questioned word to the front of\nthe sentence, a subject-auxiliary inversion, and in some cases the insertion of do in the right place. Rules can also be easy and difficult due to their semantic properties. The English article system is easy to describe formally\u0026ndash;one simply inserts the or a or sometimes nothing before the noun. But its semantics are very difficult to describe (see, for example, Hawkins, 1978). To summarize thus far, Monitor use results in the rise in rank of items that are \u0026ldquo;lateacquired\u0026rdquo; in the natural order, items that the performer has learned but has not acquired.3 Only certain items can rise in rank, however, When Monitor use is heavy, this rise in rank is enough to disturb the natural order. (As discussed in Chapter IV, it is possible to see small changes in certain late-acquired morphemes that are not enough to disturb the natural order; this may be termed light Monitor use. See especially Note 5, Chapter IV.\nAs we shall see in Chapter IV, it is not easy to encourage noticeable Monitor use. Experimentation has shown that anything less than a real grammar test will not bring out the conscious grammar in any force. Keyfetz (1978) found natural orders for both oral and written versions on the SLOPE test, showing that simply using the written modality is not enough to cause an unnatural order. Houck, Robertson and Krashen (1978a) had adult subjects (university level international students) correct their own written output, and still found a natural order for the corrected version. Krashen, Butler, Birnbaum, and Robertson (1978) found that even when ESL students write compositions with plenty of time and under instructions to be very \u0026ldquo;careful\u0026rdquo;, the effect of Monitor use was surprisingly light. The best hypothesis now is that for most people, even university students, it takes a real discrete-point grammar-type test to meet all three conditions for Monitor use and encourage significant use of the conscious grammar.\n( a) Individual variation in Monitor use\nSome of the individual variation we see in adult second language acquisition and performance can be accounted for in terms of differential use of the conscious Monitor. Studies of case histories suggest that there may be three basic types of performer (Krashen, 1978 ; Stafford and Covitt, 1978; Kounin and Krashen, 1978).\n Monitor Over-users. These are people who attempt to Monitor all the time, performers who are constantly checking their output with their conscious knowledge of the second language. As a result, such performers may speak hesitantly, often self-correct in the middle of utterances, and are so concerned with correctness that they cannot speak with any real fluency.  There may be two different causes for over-use of the grammar. Over-use may first of all derive from the performer\u0026rsquo;s history of exposure to the second language. Many people, victims of grammar-only type of instruction, have simply not had the chance to acquire much of the second language, and may have no choice but to be dependent on learning. Another type may be related to personality. These overusers have had a chance to acquire, and may actually have acquired a great deal of the second language. They simply do not trust this acquired competence and only feel secure when they refer to their Monitor \u0026ldquo;just to be sure\u0026rdquo;.\n Monitor under-users. These are performers who have not learned, or if they have learned, prefer not to use their conscious knowledge, even when conditions allow it. Underusers are typically uninfluenced by error correction, can self-correct only by using a \u0026ldquo;feel\u0026rdquo; for correctness (e.g. \u0026ldquo;it sounds right\u0026rdquo;), and rely completely on the acquired system.  Stafford and Covitt (1978) note that some under-users pay \u0026ldquo;lip service\u0026rdquo; to the value of conscious grammar. Their subject \u0026ldquo;I\u0026rdquo; felt that people need conscious rules to speak \u0026ldquo;correctly\u0026rdquo;, and that \u0026ldquo;grammar is the key to every language\u0026rdquo;. \u0026ldquo;I\u0026rdquo; himself, however, hardly used conscious rules at all, in speech or writing.\n The optimal Monitor user. Our pedagogical goal is to produce optimal users, performers who use the Monitor when it is appropriate and when it does not interfere with communication. Many optimal users will not use grammar in ordinary conversation, where it might interfere. (Some very skilled performers, such as some professional linguists and language teachers, might be able to get away with using considerable amounts of conscious knowledge in conversation, e.g. Rivers, 1979, but this is very unusual. We might consider these people \u0026ldquo;super Monitor users\u0026rdquo;, after Yorio, 1978.) In writing, and in planned speech, however, when there is time, optimal users will typically make  whatever corrections they can to raise the accuracy of their output (see, for example, Krashen and Pon, 1975).\nOptimal Monitor users can therefore use their learned competence as a supplement to their acquired competence. Some optimal users who have not completely acquired their second language, who make small and occasional errors in speech, can use their conscious grammar so successfully that they can often produce the illusion of being native in their writing. (This does not imply that conscious learning can entirely make up for incomplete acquisition. Some unacquired rules will be learnable and others not. The optimal user is able to fill part of the gap with conscious learning, but not all of it.\n4. THE INPUT HYPOTHESIS\nWe will take much more time with this hypothesis than we did with the others for two reasons. First, much of this material is relatively new, while the other hypotheses have been described and discussed already in several published books and articles. The second reason is its importance, both theoretical and practical. The input hypothesis attempts to answer what is perhaps the most important question in our field, and gives an answer that has a potential impact on all areas of language teaching.\nThe important question is: How do we acquire language? If the Monitor hypothesis is correct, that acquisition is central and learning more peripheral, then the goal of our pedagogy should be to encourage acquisition. The question of how we acquire then becomes crucial.\nThis section is organized as follows: I will first present the input hypothesis before giving any supporting evidence. Following this is a description of the evidence from research in first and second language acquisition. We will then briefly cover evidence from applied linguistics research, which is discussed in more detail in Chapter V.\n( a) Statement of the hypothesis\nLet us first restate the question of how we acquire: given the correctness of the natural order hypothesis, how do we move from one stage to another? If an acquirer is at \u0026ldquo;stage 4\u0026rdquo;, how can he progress to \u0026ldquo;stage 5\u0026rdquo;? More generally, how do we move from stage i, where i represents\ncurrent competence, to i + 1, the next level? The input hypothesis makes the following claim: a necessary (but not sufficient) condition to move from stage i to stage i + 1 is that the acquirer understand input that contains i + 1, where \u0026ldquo;understand\u0026rdquo; means that the acquirer is focussed on the meaning and not the form of the message.\nWe acquire, in other words, only when we understand language that contains structure that is \u0026ldquo;a little beyond\u0026rdquo; where we are now. How is this possible? How can we understand language that contains structures that we have not yet acquired? The answer to this apparent paradox is that we use more than our linguistic competence to help us understand. We also use context, our knowledge of the world, our extra-linguistic information to help us understand language directed at us.\nThe input hypothesis runs counter to our usual pedagogical approach in second and foreign language teaching. As Hatch (1978a) has pointed out, our assumption has been that we first learn structures, then practice using them in communication, and this is how fluency develops. The input hypothesis says the opposite. It says we acquire by \u0026ldquo;going for meaning\u0026rdquo; first, and as a result, we acquire structure! (For discussion of first language acquisition, see\nMacNamara, 1972.)\nWe may thus state parts (1) and (2) of the input hypothesis as follows:\n The input hypothesis relates to acquisition, not learning. We acquire by understanding language that contains structure a it beyond our current level of competence (i + 1). This is done with the help of context or extra-linguistic information.  A third part of the input hypothesis says that input must contain i + 1 to be useful for language acquisition, but it need not contain only i + 1. It says that if the acquirer understands the input, and there is enough of it, i + 1 will automatically be provided. In other words, if communication is successful, i + 1 is provided. As we will discuss later, this implies that the best input should not even attempt to deliberately aim at i + 1. We are all familiar with syllabi that try to deliberately cover i + 1. There is a \u0026ldquo;structure of the day\u0026rdquo;, and usually both teacher and student feel that the aim of the lesson is to teach or practice a specific grammatical item or structure. Once this structure is\n\u0026ldquo;mastered\u0026rdquo;, the syllabus proceeds to the next one. This part of the input hypothesis implies that such a deliberate attempt to provide i + 1 is not necessary. As we shall see later, there are reasons to suspect that it may even be harmful.\nThus, part (3) of the input hypothesis is:\n When communication is successful, when the input is understood and there is enough of it, i + 1 will be provided automatically.  The final part of the input hypothesis states that speaking fluency cannot be taught directly. Rather, it \u0026ldquo;emerges\u0026rdquo; over time, on its own.4 The best way, and perhaps the only way, to teach speaking, according to this view, is simply to provide comprehensible input. Early speech will come when the acquirer feels \u0026ldquo;ready\u0026rdquo;; this state of readiness arrives at somewhat different times for different people, however. Early speech, moreover, is typically not grammatically accurate. Accuracy develops over time as the acquirer hears and understands more input. Part (4) of the input hypothesis is thus:\n Production ability emerges. It is not taught directly.  ( b) Evidence supporting the hypothesis\n First language acquisition in children. The input hypothesis is very consistent with what is known about \u0026ldquo;caretaker speech\u0026rdquo;, the modifications that parents and others make when talking to young children. The most interesting and perhaps the most important characteristic of caretaker speech for us is that it is not a deliberate attempt to teach language. Rather, as Clark and Clark (1977) point out, caretaker speech is modified in order to aid comprehension. Caretakers talk \u0026ldquo;simpler\u0026rdquo; in an effort to make themselves understood by the child.  A second characteristic of interest to us here is the finding that caretaker speech, while it is syntactically simpler than adult-adult speech, is \u0026ldquo;roughly-tuned\u0026rdquo; to the child\u0026rsquo;s current level of linguistic competence, not \u0026ldquo;finely-tuned\u0026rdquo;. In other words, caretaker speech is not precisely adjusted to the level of each child, but tends to get more complex as the child progresses. Very good evidence for rough-tuning comes from the research of Cross (1977) and Newport, Gleitman, and\nGleitman (1977), who report that correlations between input complexity and measures of the child\u0026rsquo;s linguistic maturity, while positive and often significant, are not usually very large. An interpretation of this finding is that caretakers are not taking aim exactly at i + 1. The input they provide for children includes i + 1, but also includes many structures that have already been acquired, plus some that have not (i + 2, i + 3, etc.) and that the child may not be ready for yet. In other words, caretakers do not provide a grammatically based syllabus! (For a more complete review of rough-tuning, see Krashen 1980, 1981.)\nA third characteristic of caretaker speech that concerns us is known as the \u0026ldquo;here and now\u0026rdquo; principle. It is well established that caretakers talk mostly about what the child can perceive, what is in the immediate environment. Discourse with children is far more likely to deal with what is in the room and happening now (\u0026ldquo;See the ball?\u0026quot;) than what is not in the room and not current (\u0026ldquo;What will we do upstairs tomorrow?\u0026quot;). As Newport et al. (1977) points out, this is a topical constraint\u0026ndash;the \u0026ldquo;here and now\u0026rdquo; principle reflects the common interests of the caretaker and child.\nWhile there is no direct evidence showing that caretaker speech is indeed more effective than unmodified input, the input hypothesis predicts that caretaker speech will be very useful for the child. First, it is, or aims to be, comprehensible. The \u0026ldquo;here and now\u0026rdquo; feature provides extra-linguistic support (context) that helps the child understand the utterances containing i + 1. As MacNamara (1972) pointed out, the child does not acquire grammar first and then use it in understanding. The child understands first, and this helps him acquire language.\nAs discussed earlier, roughly-tuned caretaker speech covers the child\u0026rsquo;s i + 1, but does not focus on i + 1 exclusively. Part (3) of the input hypothesis claims that this is optimal. Rough-tuning has the following advantages in child first language acquisition:\n  It ensures that i + 1 is covered, with no guesswork as to just what i + 1 is for each child. On the other hand, deliberate aim at i + 1 might miss!\n  Roughly-tuned input will provide i + 1 for more than one child at a time, as long as they understand what is said. Finely-tuned input, even if accurate (i.e.\neven if it \u0026ldquo;hits\u0026rdquo; i + 1) , will only\nbenefit the child whose i + 1 is exactly the same as what is emphasized in the input.\n  Roughly-tuned input provides built-in review. We need not be concerned with whether a child has \u0026ldquo;mastered\u0026rdquo; a structure, whether the child was paying attention to the input that day, or whether we provided enough. With natural, roughly-tuned input, i + 1 will occur and reoccur.\n  In other words, if part (3) is correct, if it is the case that with enough natural communication and understanding that i + 1 is always provided, the caretaker need not worry about consciously programming structure.\nThis must be a good thing! Adding the responsibility of grammatical sequencing to parenthood would make parent-child communication much less spontaneous and far more difficult.\n Evidence from second language acquisition: simple codes. The input hypothesis also holds for second language acquisition. First, as presented earlier, the second language acquirer, child or adult, is also an \u0026ldquo;acquirer\u0026rdquo;, just like the child acquiring first language. Also, according to hypothesis (2), there is a natural order of acquisition for second language as well as first language, so we can talk about the second language acquirers' i + 1 as well. Third, second language acquirers can also receive the kind of modified input that children get.  This modified input is of three sorts. Foreigner-talk results from the modifications native speakers make with less than fully competent speakers of their language (see, for example, Hatch, Shapira, and Gough, 1978 for some good examples). Teacher-talk is foreigner-talk in the classroom, the language of classroom management and explanation, when it is in the second language. A third simple code is interlanguage talk, the speech of other second language acquirers.\nWhile there are some differences between these simple codes and caretaker speech (Long, 1980; Freed, 1980), there are important similarities. As is the case with caretaker speech, modifications made in foreigner-talk and teacher-talk5 are not made for the purpose of language teaching, but are made for the purpose of communication, to help the second language acquirer understand what is being said. Second, the available research indicates that foreigner-talk and teacher-talk\nare roughly-tuned to the level of the acquirer, and not finely-tuned (Freed, 1980; Gaies, 1977; for a review, see Krashen, 1980); more advanced second language performers tend to get more complex input, but the correlation between proficiency and input complexity is less than perfect.\nForeigner-talk and teacher-talk may not always be in the \u0026ldquo;here and now\u0026rdquo;,6 but helpful native speakers and teachers find other ways to make input comprehensible. In addition to linguistic alterations, they take advantage of the acquirer\u0026rsquo;s knowledge of the world, which is, of course, greater than that of the child acquiring a first language. Teachers, in addition, use pedagogical aids, such as pictures and realia (see discussion in Chapter III).\nThe input hypothesis predicts that these simplified codes will be very useful for the second language acquirer, just as caretaker speech is posited to be useful for the child. (For some preliminary case history data supporting this hypothesis, see Krashen, 1980, 1981.) The input hypothesis also predicts that natural, communicative, roughly-tuned, comprehensible input has some real advantages over finely-tuned input that aims directly at i + 1, in other words, classroom exercises that aim to teach the structure of the day.\nThe case against the grammatical syllabus is presented in fuller detail in Chapter III, but here is a brief summary. The arguments are very similar to those presented against giving the child finely-tuned input:\n All students may not be at the same stage. The \u0026ldquo;structure of the day\u0026rdquo; may not be i + 1 for many of the students. With natural communicative input, on the other hand, some i + 1 or other will be provided for everyone. With a grammatical syllabus, each structure is presented only once. If a student misses it, is absent, is not paying attention, or if there simply has not been enough practice (input), the student may have to wait until next year, when all structures are reviewed! On the other hand, roughly-tuned comprehensible input allows for natural review. A grammatical syllabus assumes we know the order of acquisition. No such assumption is necessary when we rely on comprehensible input, on roughlytuned natural communication. Finally, a grammatical syllabus, and the resulting grammatical focus, places serious constraints on what can be discussed. Too often, it is difficult, if not impossible, to discuss or read anything of real interest if our underlying motive is to practice a particular structure. In other words, a grammatical focus will usually prevent real communication using the second language.  If these arguments are correct, they mean that we should not attempt to teach along the natural order, or any other order, when our goal is acquisition. (This is not necessarily true when the goal is conscious learning; see Chapter IV.)\n(iii) Evidence from second language acquisition: the silent period and L1 influence. The input hypothesis is also consistent with other findings and hypotheses in second language acquisition. One of these can be termed the \u0026ldquo;silent period\u0026rdquo;, a phenomenon that is most noticeable in child second language acquisition.\nIt has often been noted that children acquiring a second language in a natural, informal linguistic environment may say very little for several months following their first exposure to the second language. What output there is consists usually of memorized language, whole sentences learned as if they were one word. Hatch (1972), for example, reported that Paul, a five-year-old Chinese speaker acquiring English as a second language, did not really use \u0026ldquo;creative\u0026rdquo; language for his first few months in the United States. His only output was memorized sentences, such as\nGet out of here.\nIt\u0026rsquo;s time to eat and drink.\nHe had clearly learned these as whole utterances without a real understanding of their components (e.g. he probably would not understand the word \u0026ldquo;out\u0026rdquo; or \u0026ldquo;time\u0026rdquo; if it were used in another sentence). Such memorized sentences were probably very useful for Paul, both in the classroom and playground.7 When \u0026ldquo;real\u0026rdquo; language did start to emerge, it looked very much like first language development, with short, simple sentences such as\nThis kite.\nBall no.\nThe explanation of the silent period in terms of the input hypothesis is straight-forward-the child is building up competence in the second language via listening, by understanding the language around him. In accordance with the input hypothesis, speaking ability emerges on its own after enough competence has been developed by listening and understanding. We should note that case histories dealing with children acquiring second languages (see also Hakuta, 1974; Ervin-Tripp, 1974) agree that several months may elapse until they start talking, and that the speech that emerges is not error-free. This finding has important pedagogical considerations, as we shall see in Chapter III.\nAdults, and children in formal language classes, are usually not allowed a silent period. They are often asked to produce very early in a second language, before they have acquired enough syntactic competence to express their ideas. According to a hypothesis first proposed by Newmark (1966), performers who are asked to produce before they are \u0026ldquo;ready\u0026rdquo; will fall back on first language rules, that is, they will use syntactic rules of their first language while speaking the second language.\nStated more formally, an acquirer will substitute some L1 rule for i + 1, a rule of the second language, if the acquirer needs i + 1 to express himself but has not yet acquired it. The L1 rule used may be quite similar to the L2 i + 1, but may also differ in certain ways. When the L1 and L2 rules are different, the resulting error is referred to often as\n\u0026ldquo;interference\u0026rdquo;. But according to Newmark, it is not interference at all; it is not the result of the L1 interfering with second language performance, but the result of ignorance\u0026ndash;the lack of acquisition of an L2 rule that is needed in performance.\n(iv) Advantages and disadvantages of L2 rule use. The substitution of some L1 rule for some i + 1 has both advantages and disadvantages. The advantages are short term, however, while the disadvantages appear to be quite serious.\nOne obvious advantage is that the use of an L1 rule allows the performer to \u0026ldquo;outperform his competence\u0026rdquo;, to meet a practical need in L2 communication before he has acquired the relevant i + 1 rule. When the L1 rule used is identical to a rule in the L2 (\u0026ldquo;positive transfer\u0026rdquo;), the performer seems to have got something for free. Even if the L1 rule is\nnot the same as the L2 rule, one could argue that the performer still comes out ahead, as, quite often, he can still communicate his point despite the incorrect form.\nAnother advantage is that the early production allowed by the use of L1 rules also helps to invite input\u0026ndash;it allows the performer to participate more in conversation, and this could mean more comprehensible input and thus more second language acquisition.\nThere are real disadvantages to falling back on the L1, however. First, the L1 rule may not be the same as an L2 rule, as noted above, and errors can result. The conscious Monitor can note and repair these errors in some cases, but not all, since, as we have seen the constraints on Monitor use are severe. Thus, use of L1 rules requires constant vigilance on the part of the Monitor, and is an awkward way to produce formally correct sentences in a second language. (Note that Monitor correction of such errors will not, according to the theory, produce acquisition, or permanent change. It will not eradicate the L1 rule, even if done effectively over long periods of time. Real acquisition comes only from comprehensible input.)8\nThere may be another serious disadvantage to the use of L1 rules in second language performance. Even if the L1 rule is similar to an actual L2 rule or transitional form, it is not clear that these rules will help the acquirer progress\u0026ndash;they may not take the place of \u0026ldquo;true\u0026rdquo; L2 rules in the developmental sequence. In Krashen (1982) I discuss the hypothesis that acquisition requires a comparison between i and i + 1 (Clark and Andersen, 1980; Lamendella, 1979). It may be the case that the \u0026ldquo;distance\u0026rdquo; between i and i + 1 cannot be too great\u0026ndash;i and i + 1 can only differ in small ways. Transitional forms, I hypothesize, may be useful in that they can temporarily serve as i, helping to decrease the amount of distance between i and i + 1.\nIf, for example, the target rule in English is the negative (i + 1, presented to the system by input), the intermediate form no + v (provided by the creative construction system internally) may be closer to the mature negative form. The acquirer may thus use no + v at i, rather than a more primitive form of the negative (e.g. no + S).\nIf transitional forms can temporarily serve as i, the next question is whether L1 rules, even when they happen to be similar to L2 rules or transitional forms, can perform this function. The answer may be\n\u0026ldquo;no\u0026rdquo;. For example, Spanish speakers often have a long period in their acquisition of English in which they produce no + v for the English negative, a structure that is similar to a transitional form in English as a first and second language (Schumann, 1979). It may be the case that earlier no + v performance is the use of the L1 rule, while later no + v performance is the true intermediate form. It may be the case that only the latter can help the system \u0026ldquo;move forward\u0026rdquo;.9\nTo summarize, use of L1 rules is hypothesized to be the result of falling back on first language knowledge when a second language rule is needed in production but is not available. It may temporarily enhance production, but may not be real progress in the second language. The real cure for \u0026ldquo;interference\u0026rdquo;, according to Newmark, is not drill at the points of contrast between the two languages (Newmark and Reibel, 1973, p. 239). Drill will, at best, produce learning, and, as we have seen, this is only a short term cure. The real cure \u0026ldquo;is simply the cure for ignorance\u0026rdquo; (Newmark, 1966, p. 81): real language acquisition. This can happen only when the acquirer obtains comprehensible input.10 11 12\n(v) Applied linguistics research. The input hypothesis is also consistent with the results of what can be called \u0026ldquo;method comparison\u0026rdquo; experiments. Several scholars and groups of scholars have attempted to determine directly which teaching methods are best by simple comparison. Groups of students studying second and foreign languages using two different methods are compared, both in long-term and short-term studies. We will have a detailed look at this research in Chapter V, but I will state my own conclusions in advance. My reading of studies comparing the more commonly used methods (audio-lingual as compared to grammar-translation or cognitive-code) is as follows:\n \u0026ldquo;Deductive\u0026rdquo; methods (rule first, then practice, e.g. grammar-translation and cognitive-code) are slightly more efficient than audio-lingual teaching for adults. The differences are often statistically significant, but are not huge. Students clearly make some progress using any of these approaches. For adolescents, there is no measurable difference.  I interpret this failure to find large differences in this way: none of the methods compared in these studies provides much in the way of comprehensible input! The input hypothesis predicts, moreover, that an approach that provides substantial quantities of comprehensible input will do much better than any of the older approaches.\nThere are several newer methods that do this, such as Asher\u0026rsquo;s Total Physical Response Method (Asher, 1966, 1969) and Terrell\u0026rsquo;s Natural Approach (Terrell, 1977). In these methods, class time is devoted to providing comprehensible input, where the focus is on the message and not the form, and students are not expected to produce in the second language until they themselves decide they are \u0026ldquo;ready\u0026rdquo;. Reports confirming the superiority of such \u0026ldquo;input methods\u0026rdquo; have been appearing in the professional literature over the last ten years (e.g. Asher, 1972; Gary, 1975; Postovsky, 1974; more detail is provided in Chapter V). (The focus on comprehensible input is not the only reason for the success of the newer methods, however; see discussion below of affect, and Chapters III and V.)\nSince the bulk of this book is intended to deal with implications of second language acquisition theory (Chapters III, IV, and V), this section should really be delayed until later. I cannot resist, however, briefly stating one implication here, since, in my opinion, the implications of the input hypothesis are truly exciting for all of us interested in language acquisition. Most important, the input hypothesis predicts that the classroom may be an excellent place for second language acquisition, at least up to the \u0026ldquo;intermediate\u0026rdquo; level. For beginners, the classroom can be much better than the outside world, since the outside usually provides the beginner with very little comprehensible input, especially for older acquirers (Wagner-Gough and Hatch, 1975). In the classroom, we can provide an hour a day of comprehensible input, which is probably much better than the outside can do for the beginner. We will elaborate on this a bit more after discussion of the Affective Filter.\n5 . THE AFFECTIVE FILTER HYPOTHESIS\nThe Affective Filter hypothesis states how affective factors relate to the second language acquisition process. The concept of an Affective\nFilter was proposed by Dulay and Burt (1977), and is consistent with the theoretical work done in the area of affective variables and second language acquisition, as well as the hypotheses previously covered in this chapter.\nResearch over the last decade has confirmed that a variety of affective variables relate to success in second language acquisition (reviewed in Krashen, 1981). Most of those studied can be placed into one of these three categories:\n Motivation. Performers with high motivation generally do better in second language acquisition (usually, but not always, \u0026ldquo;integrative\u0026quot;13 Self-confidence. Performers with self-confidence and a good self-image tend to do better in second language acquisition. Anxiety. Low anxiety appears to be conducive to second language acquisition, whether measured as personal or classroom anxiety.  In several places I have hypothesized that these attitudinal factors relate directly to acquisition and not learning, since they tend to show stronger relationships to second language achievement when communicative-type tests are used, tests that tap the acquired rather than the learned system, and when the students taking the test have used the language in \u0026ldquo;acquisition-rich\u0026rdquo; situations, situations where comprehensible input was plentiful.\nThe Affective Filter hypothesis captures the relationship between affective variables and the process of second language acquisition by positing that acquirers vary with respect to the strength or level of their Affective Filters. Those whose attitudes are not optimal for second language acquisition will not only tend to seek less input, but they will also have a high or strong Affective Filter\u0026ndash;even if they understand the message, the input will not reach the part of the brain responsible for language acquisition, or the language acquisition device. Those with attitudes more conducive to second language acquisition will not only seek and obtain more input, they will also have a lower or weaker filter. They will be more open to the input, and it will strike \u0026ldquo;deeper\u0026rdquo; (Stevick, 1976).\nThe Affective Filter hypothesis, represented in Fig. 2.2, claims that\nthe effect of affect is \u0026ldquo;outside\u0026rdquo; the language acquisition device proper. It still maintains that input is the primary causative variable in second language acquisition, affective variables acting to impede or facilitate the delivery of input to the language acquisition device.\nThe filter hypothesis explains why it is possible for an acquirer to obtain a great deal of comprehensible input, and yet stop short (and sometimes well short) of the native speaker level (or \u0026ldquo;fossilize\u0026rdquo;; Selinker, 1972). When this occurs, it is due to the affective filter.\nFig 2.2. Operation of the \u0026ldquo;affective filter\u0026rdquo;.\nThe \u0026ldquo;affective filter\u0026rdquo;, posited by Dulay and Burt (1977), acts to prevent input from being used for language acquisition. Acquirers with optimal attitudes (see text) are hypothesized to have \u0026ldquo;low\u0026rdquo; affective filters. Classrooms that encourage low filters are those that promote low anxiety among students, that keep students \u0026ldquo;off the defensive\u0026rdquo; (Stevick, 1976).\nThis picture does not diminish, in any way, the importance of affective variables in pedagogy. The Affective Filter hypothesis implies that our pedagogical goals should not only include supplying comprehensible input, but also creating a situation that encourages a low filter. As discussed in Chapter V, several methods focus on just this (e.g. CounselingLearning and Suggestopedia).\nThe input hypothesis and the concept of the Affective Filter define the language teacher in a new way. The effective language teacher is someone who can provide input and help make it comprehensible in a low anxiety situation. Of course, many teachers have felt this way about their task for years, at least until they were told otherwise by the experts!14\nB. The Causative Variable in Second Language Acquisition\r#\r\r THE CAUSATIVE VARIABLES  Our review of second language acquisition theory thus far can be summarized as follows:\n Acquisition is more important than learning.  In order to acquire, two conditions are necessary. The first is comprehensible (or even better, comprehended) input containing i + 1, structures a bit beyond the acquirer\u0026rsquo;s current level, and second, a low or weak affective filter to allow the input \u0026ldquo;in\u0026rdquo;.    This is equivalent to saying that comprehensible input and the strength of the filter are the true causes of second language acquisition. Other variables may relate to second language success, that is, we may see positive correlations between other variables and measures of achievement in second language, but in all cases in which language acquisition is attained, analysis will reveal that the relationship can better be explained in terms of comprehensible input plus filter level.\nIn this section, we will perform such an analysis, looking at several factors that have been shown to relate to success in second language acquisition. We will see that not only can they be re-analyzed, but that the comprehensible input + filter explanation helps to solve some apparent problems and contradictions in the research literature.\nWe will begin with the effect of language teaching on second language acquisition, then examine variables relating to exposure (length of residence in the country where the language is used and reported use of the second language), and then turn to age. Finally, we will consider Schumann\u0026rsquo;s acculturation hypothesis, to see whether it too can be reanalyzed in this way.\n LANGUAGE TEACHING: DOES IT HELP?  If acquisition is more central, and learning of less use to second language performance, and if comprehensible input and the filter are the essential causative variables for second language acquisition, the classroom should help only to the extent it supplies comprehensible input in an environment conducive to a low filter. This may indeed be, as mentioned earlier, its main function.\nIt seems reasonable to hypothesize that the classroom should be especially valuable for beginners, those who cannot easily utilize the informal environment for input. It will be of less value to those who can, who have other sources of comprehensible input, and who are linguistically advanced enough to take advantage of it.\nThe question then becomes not \u0026ldquo;Does language teaching help?\u0026rdquo; but\n\u0026ldquo;When does language teaching help?\u0026rdquo;. A possible answer is this: language teaching helps when it is the main source of low filter comprehensible input, that is, for beginners and for foreign language students who do not have a chance to get input outside the class. It will be of less help when rich sources of input are available. If the research literature supports these generalizations, it confirms the generalization that language teaching helps second language acquisition when it supplies comprehensible input, which is the true cause of second language acquisition.\n( a) When language teaching helps\nBrière (1978) investigated the factors that predicted successful acquisition of Spanish as a second language among 920 native Mexican children, ages four through twelve. Among the best predictors of Spanish proficiency was attendance in class in the village school (promotoria). This makes sense in terms of our hypothesis, since the promotoria was the major source of comprehensible input in Spanish, as opportunities to use Spanish outside the classroom were not plentiful. (The two other significant predictors were the father\u0026rsquo;s ability to speak Spanish and the parents' need for Spanish.)\nSome adult studies report fairly large positive correlations between the amount of classroom exposure to the second language and proficiency. In each case, however, it can be argued that the class was the primary source of comprehensible input. Krashen, Zelinski, Jones, and Usprich (1978) tested students in an extension (evening and weekend) program in English as a second language at Queens College in New York, and reported robust correlations between reported years of formal study and performance on a variety of ESL tests, i.e.:\n_____________________________________________________________________\nTest Correlation with years of formal study\n_____________________________________________________________________\nMichigan (Lado) r = 0.50\nComposition r = 0.34\nCloze r = 0.47\nSLOPE r = 0.42 (reported in Krashen, 1976)\n_____________________________________________________________________\nAll correlations were very significant (p \u0026lt; 0.01 or better).\nDespite the fact that these students were in the United States and\ntechnically in a second language and not a foreign language environment, it is likely that, in many cases, they did not have a rich input source available to them outside the class. First, some had not been in the country for a long time, their primary exposure to English having been in a foreign language situation. Second, since these were extension and not regular day-time university students, there was the strong possibility that many of them were not utilizing English very much in their daily lives, even though they were living in New York. This is confirmed below, when we note the lack of a strong relationship found for these same students between length of residence in the United States and proficiency, and when we examine the effect of instruction on regular university students who do have a rich source of input outside the classroom. (See Krashen, Seliger, and Hartnett, 1974 and Krashen and Seliger, 1976, for similar results.)\nChihara and Oller (1978) also report substantial correlations between length of formal study and second language proficiency, finding a correlation of r = 0.45 for performance on a cloze test and similar results for other measures. Their subjects were Japanese studying English as a foreign language in Japan, a clear foreign language situation in which the classroom was the main, if not only, source of comprehensible input.\n( b) When language teaching does not help\nNot all the research literature concludes that language teaching is good for second language acquisition! (I must admit that I am astounded to see that so few studies have investigated such a crucial issue! What is presented in this section is practically the entire literature on this question.) There are generalizations that can be made about studies that seem to decide against second language teaching, however. In all cases, students had a rich source of comprehensible input outside the classroom, and were competent enough in the second language to be able to take advantage of it, i.e. understand.\nTwo studies deal with child second language acquisition and both with English as a second language. Fathman (1975) found no significant differences in English proficiency between children who had ESL instruction and children who did not. All children in her study, however,\nwere enrolled in English-medium public schools in Washington, D.C. and all had been in the United States from one to three years. It can be hypothesized that they were getting comprehensible input from the school and playground, and the extra input from the ESL class did not make a difference (nor did grammar and drill!).\nHale and Budar (1970) studied immigrant adolescents in Hawaiian junior high schools. In their paper (titled \u0026ldquo;Are TESOL classes the only answer?\u0026quot;), they noted that the subjects formed a natural division. One group was composed of students who spoke less common languages. These students did not have the \u0026ldquo;benefit\u0026rdquo; of a formal ESL program and were isolated from speakers of their own language. The second group consisted of students who had the chance to associate with other students who spoke their own first language. These students did attend ESL classes. Hale and Budar report that the first group actually made better progress in English, a finding that seems to question the value of ESL classes. The first group, however, may have had more comprehensible input, possibly through having to associate more with English speakers and with other non-native speakers using English as a lingua franca. This study also fits our generalization and confirms that the issue is not plus or minus ESL or language teaching but plus or minus low filter comprehensible input.\nTwo adult studies also appear to decide against the classroom. Upshur (1968) studied three groups of ten foreign students studying law at a special summer session at the University of Michigan. All students took seminars and classes that used English as the medium of instruction. In addition, they took formal ESL classes, each group taking a different amount, depending on placement scores. Upshur\u0026rsquo;s analysis of their progress in English over the summer revealed no significant effects attributable to the amount of instruction they received: those with more ESL did not necessarily acquire more than those with less over the course of the summer. Mason (1971), in a study done at the University of Hawaii, simply allowed a small group of intermediate15 level international students to postpone a required ESL class for a semester. Their progress in ESL was compared to students who actually took the course. Mason reported no significant differences between the two groups.\nThe two adult studies are consistent with the hypothesis. In both\ncases, students had a rich source of comprehensible input outside the classroom, and in both cases they were advanced enough to be able to utilize it.\nI conclude from this that language teaching certainly can help. Its primary function is to supply comprehensible input for those who can not get it elsewhere, those constrained by their situation (i.e. foreign language students who do not have input sources outside the class) or by their competence (those unable to understand the language of the outside world). While it is less useful for those who have other sources of input, there still are things the competent classroom can contribute to the intermediate student. It can supply conscious learning for optimal Monitor use (see Chapter IV), and give tools to help the acquirer utilize the outside environment more fully for further acquisition (Chapter III). Table 2.2 summarizes studies discussed in this section.16\n3 . EXPOSURE VARIABLES\nSeveral exposure variables have been investigated with respect to second language acquisition. Some studies show a clear relationship between the amount of exposure and proficiency and some do not. We shall see again that the hypothesis that comprehensible input plus low filter are the true causative variables predicts quite well when exposure variables relate to second language acquisition and when they do not. Thus, exposure variable are also indirect and not in themselves causative.\nSeveral studies have examined length of residence (LOR) in the second language environment. For those studies of child second language acquisition, it can be plausibly argued that LOR may reflect simply the amount of comprehensible input the child obtains. (This is of course not always the case in child second language acquisition; all too often children living in a country do not get comprehensible input, either in or out of school.) We thus see, in these studies, a clear relationship between LOR and second language proficiency.\nFathman (1975) was discussed above. In addition to her finding on the non-effects of formal instruction on ESL achievement, Fathman also reported that LOR did predict proficiency for her sample of children (ages 6-14, enrolled in public school in Washington, D.C.).\nTable 2.2. Formal instruction and second language acquisition\na All subjects had been in the U.S. at least one year.\n38\nThose who had been in the United States for three years did better on the SLOPE test than those who had been in the United States for two years, and this group, in turn, outperformed those who had been in the United States for only one year.\nWalberg, Hase, and Rasher (1978) studied Japanese-speaking children who had been in the United States a range of zero to 12 years, with most reporting a LOR of three to four years. Self-report and report of teachers were used as estimates of the children\u0026rsquo;s proficiency in English. Walberg et al. did find a significant relationship between LOR and proficiency in English as a second language, but noted that even higher correlations were found with a \u0026ldquo;diminishing returns\u0026rdquo; model: \u0026ldquo;For children of all ages in the sample, acquisition proceeds at a fast rate initially, but the amounts of gain diminish with time\u0026rdquo; (p. 436). Specifically, \u0026ldquo;it may be estimated that equal\u0026hellip; units are gained in the first two months, the next five months, the following one year, the next two years, and the next eight years\u0026rdquo; (p.436).\nEkstrand (1976), however, found no relationship between LOR and child second language proficiency in his study of immigrant children in Sweden. The median LOR in his study was only 10.5 months, and it may be the case that LOR effects are not seen unless the children have been in the country for some minimum length of time (one year?). This condition is satisfied in the Fathman and Walberg et al. studies, and may be due to the fact that approximately one year is necessary to offset the advantage the older children have in rate of acquisition in early stages (Krashen, Long, and Scarcella, 1979; see also discussion below on age).\nWalberg et al.\u0026rsquo;s diminishing returns hypothesis predicts that there is also a maximum LOR, beyond which we see no relationship between LOR and second language acquisition.\nData from some other studies confirm this. Seliger, Krashen and Ladefoged (1974), Oyama\n(1976, 1978), and Patkowski (1980) all report no relationship between LOR and proficiency in English as a second language using a variety of measures for groups of subjects who had arrived in the United States at different ages, some arriving as children and some as adults. In all cases, however, very long LORs were involved, the minimum being five years with most being much longer.\nTwo other studies that bear on the issue of LOR and child second\nlanguage acquisition will be covered in a subsequent section (Ramsey and Wright, 1974; Minoura, 1979).\nAdult studies of the relationship between LOR and second language proficiency show, in my view, that LOR \u0026ldquo;counts\u0026rdquo; when there is evidence that it reflects high interaction and therefore comprehensible input. Because of the variability in filter level in adults, however, we might expect lower correlations for adults in general, as compared to children (see discussion of age below).\nInternational university students fully involved in the academic environment should give us significant correlations between LOR and proficiency in the second language, provided a large enough range of LOR is examined, since students should have access to large amounts of comprehensible input, both in and out of class. Two studies utilized international students. Murakami (1980) studied 30 Japanese-speaking students at Southern Illinois University and found a significant correlation between performance on a dictation test of ESL and LOR (r = 0.68), and a positive but not significant correlation using a cloze test (r = 0.29). These results are nearly identical to those of Oller, Perkins, and Murakami (1980), who examined a group of 182 students, also at SIU (which did not include the 30 students Murakami studied alone). They also report a significant correlation between LOR and dictation (r = 0.46) but no significant correlation for cloze (correlation not reported).\nLOR and proficiency was also probed in our study of extension students at Queens College (cited above; Krashen et al., 1978). Correlations were occasionally significant (due to the large sample size) but were quite modest.\n__________________________________________________\nCorrelation Measure\n__________________________________________________\n0.18 Michigan test (Lado)\n0.22 Composition\n0.24 Cloze\n0.014 SLOPE test (Krashen, 1976)\n__________________________________________________\nThese results are predictable. We would expect extension students to have variable, and often very low, contact with English as compared to full-time students. Some may have lived in the United States many years without much comprehensible input. (Similar results are reported\n40\nin Krashen, Seliger, and Hartnett, 1974, and Krashen and Seliger, 1976.)\nTwo studies examine \u0026ldquo;time abroad\u0026rdquo; to foreign language students, but differ somewhat in environment and also in results. Carroll (1967) reported that foreign language majors in American universities who were able to spend their junior years abroad in the country where the language was spoken performed better on the FSI rest of listening comprehension than those who had only spent a summer abroad. The summer travelers, in turn, outperformed those who had never been abroad. These clear results probably reflect the fact that such students, most likely, sought out interaction, and thus comprehensible input in the second language while they were abroad.\nIn Chihara and Oller (1978), students of English as a foreign language in Japan were studied. No relationship was found, however, between the amount of time spent abroad and tests of English (r = 0.04 for cloze, with other measures producing similar results; Chihara and Oller report higher correlations between time abroad and self-report of English proficiency; r = 0.24 for speaking and r = 0.23 for listening comprehension). In contrast to Carroll\u0026rsquo;s American foreign language majors study, in which acquirers were in daily contact with the target language, time abroad in this case need not have a direct relationship with amount of comprehensible input. Table 2.3 summarizes LOR studies.\nA second exposure variable that has been studied is reported use of the second language. Several studies (but surprisingly few) have asked whether those who say they use the second language more actually acquire more. We would expect a significant relationship between \u0026ldquo;use\u0026rdquo; and acquisition, since use nearly always entails comprehensible input. Of the three studies I know of that explore this variable, two do in fact show a clear relationship with second language proficiency. (Failure to find a clear relationship in every case may be due to the unreliability of self-report; see Oller and Perkins, 1978.)\nAll studies examining reported use involve adult subjects. Johnson and Krug (1980) studied 72 international students at Southern Illinois University and found a modest but significant 0.34 correlation between proficiency in English (as measured by accuracy of grammatical morphemes in obligatory occasions in an interview situation) and subjects'\nTable 2.3. Length of residence (LOR) and second language acquisition (SLA)\na CI = comprehensible input. b Average LOR = 3-4 years. c No relationship between LOR and SLA presumably due here to relatively short LOR.\nreport of the amount of leisure time they spent speaking and listening to English. Oller, Perkins, and Murakami (1980), however, examining a similar sample, found no relationship between a report of \u0026ldquo;time spent with English speakers\u0026rdquo; and second language proficiency, as measured by dictation and a cloze-type grammar test.\nThe Heidelberg project, as cited in Schumann (1978b), examined factors predicting proficiency in German as a second language for guest-workers (Italian and Spanish speakers) in Germany. They reported a correlation of 0.64 between German syntactic proficiency and \u0026ldquo;leisure contact\u0026rdquo; with Germans and one of 0.53 between German proficiency and \u0026ldquo;work contact\u0026rdquo;. Both leisure and work contact can plausibly be interpreted as indicating comprehensible input.\n4 . AGE\nIt has been popularly assumed that age itself is a predictor of second language proficiency, that younger acquirers are better at second language acquisition than older acquirers. It can be argued, however, that age is not in itself a predictor of second language rate or attainment, and that here too everything reduces down to the quantity of comprehensible input and the level of the affective filter.\nKrashen, Long, and Scarcella (1979) reviewed the available empirical research on the effect of age and second language acquisition and concluded that all published studies were consistent with these three generalization:\n Adults proceed through the early stages of second language development faster than children do (where time and exposure are held constant). Older children acquire faster than younger children, time and exposure held constant. Acquirers who begin natural exposure to second languages during childhood generally achieve higher second language proficiency than those beginning as adults.  Thus, it is not simply the case that \u0026ldquo;younger is better\u0026rdquo;: children are superior to adults only in the long run.\nThe explanations for these observed differences that seem most\nplausible to me involve input and the level or strength of the affective filter. First, let us consider the older acquirer\u0026rsquo;s rate superiority (generalizations (1) and (2) above). Scarcella and Higa (forthcoming) found that younger acquirers actually received \u0026ldquo;simpler\u0026rdquo; input in a block building task, a result that confirms observations made by Wagner-Gough and Hatch (1975), and that seems to predict greater speed for younger, and not older acquirers. Scarcella and Higa noted that the older acquirers (adolescents) were better able to regulate both the quantity and quality of their input. They were better at encouraging speech and at getting the native speaker to modify it for greater comprehensibility. They could, for example, ask for help, change the topic, and direct the conversation better. They had, in other words, more \u0026ldquo;conversational competence\u0026rdquo;. Thus, despite the simpler input directed at the younger children, it is likely that older acquirers actually get more comprehended input, and this may be a key factor in their faster initial progress.\nThere may be other reasons for the older acquirers' superiority in rate of acquisition. Adults have means of producing language earlier, of \u0026ldquo;beating the Silent Period\u0026rdquo;, means that have nothing to do with natural language acquisition but that may nevertheless help them participate in conversation and hence obtain comprehensible input.\nI have hypothesized in earlier papers (see, for example, Krashen, 1981) that significant Monitor use is only possible after the acquirer has undergone formal operations, a stage in cognitive development that generally occurs at about puberty (Inhelder and Piaget, 1958). The availability of the conscious grammar, the Monitor, allows adults to produce formally acceptable utterances using first language rules repaired by the Monitor, as discussed earlier in this chapter. While the use of this mode does not require comprehensible input, it helps the acquirer to talk early, to participate in conversations, and thereby obtain input, at least some of which will be comprehensible.\nBoth explanations for the older acquirers' rate superiority reduce to the greater ability of the adult and older child to obtain comprehensibly input. Thus, comprehensible input again is hypothesized to be the causative variable, and not age per se.\nThe child\u0026rsquo;s superiority in ultimate attainment has been hypothesized to be due to the strengthening of the affective filter at about puberty,\nan event that may also be related to formal operations (Krashen, 1981). As argued elsewhere, this hypothesis has several advantages. First, it claims that child-adult differences in attainment are not due to any change in the \u0026ldquo;language acquisition device\u0026rdquo; (LAD) but are due to the filter, a factor that is, in a sense, external to the LAD. Second, it is consistent with the claim that adults are still \u0026ldquo;acquirers\u0026rdquo;, that they retain the natural language acquisition capacity children have. It also allows for the possibility that some adults can achieve extremely high levels of competence in a second language and may even be taken for native; it predicts that such \u0026ldquo;Good Language Learners\u0026rdquo; will be, above all, good acquirers, with the ability to obtain a great deal of comprehensible input with a low affective filter. In many cases, the filter prevents the adult only from going the last few inches.17\n5 . ACCULTURATION\nA similar argument can be made concerning Schumann\u0026rsquo;s Acculturation Hypothesis. Schumann (1978b) has hypothesized that acculturation is the \u0026ldquo;major casual variable in second language acquisition\u0026rdquo; (p. 29) . Schumann maintains that \u0026ldquo;Second language acquisition is just one aspect of acculturation, and the degree to which the learner acculturates to the target language group will control the degree to which he acquires the target language\u0026rdquo; (p. 34).\nWhile the Acculturation Hypothesis seems to account for second language acquisition data in extended sojourn situations, it is easily expressible in terms of comprehensible input and low filter level. Acculturation can be viewed as a means of gaining comprehensible input and lowering the filter. Moreover, the comprehensible input hypothesis accounts for second language acquisition in situations that acculturation does not attempt to deal with.\nSchumann defines two types of acculturation:\n\u0026ldquo;In type one acculturation, the learner is socially integrated with the TL group and, as a result, develops sufficient contact with TL speakers to enable him to acquire the TL. In addition, he is psychologically open to the TL such that input to which he is exposed becomes intake. Type two acculturation has all the characteristics of type one, but in this case the learner regards the TL speakers as a reference\ngroup whose life styles and values he consciously or unconsciously desires to adopt. Both types of acculturation are sufficient to cause acquisition of the TL, but the distinction is made to stress that social and psychological contact with the TL group is the essential component in acculturation (as it relates to SLA) that that adoption of the life style and values of the TL group (characteristics traditionally associated with the notion of acculturation) is not necessary for successful acquisition of the TL\u0026rdquo; (p.29).\nType one acculturation is thus \u0026ldquo;weaker\u0026rdquo; than type two in that it does not involve adoption of the new life style. Since Schumann hypothesizes that type one is all that is necessary for successful second language acquisition, we restrict our discussion to type one acculturation.\nType one acculturation is easily restatable in terms of the framework presented in this chapter: social integration with resulting contacts leads to comprehensible input, while the open psychological state Schumann refers to is equivalent to a low filter. The evidence Schumann presents in support of the Acculturation Hypothesis can be similarly interpreted.\nThe Heidelberg project, mentioned earlier, studied variables correlating with successful acquisition of German by foreign workers. Reported amounts of leisure contact with speakers of German correlated with syntactic performance (r = 0.64) as did amount of work contact (r = 0.55). Apparently, either form of interaction was effective in encouraging second language acquisition. (Schumann notes that \u0026ldquo;among the best speakers, those who had little leisure contact with Germans all had considerable work contact\u0026rdquo; (p. 39); thus, some guest-workers who acquired German did so without much leisure contact.) This confirms that it is interaction, and the resulting comprehensible input, that \u0026ldquo;causes\u0026rdquo; second language acquisition, a view consistent with both the comprehensible input plus low filter view as well as the Acculturation Hypothesis.\nSchumann, in reporting the Heidelberg research, also notes that \u0026ldquo;learners whose work required communication with co-workers did better in German than workers who provided services (hairdressers, kitchen help, etc.)\u0026rdquo; Also, \u0026ldquo;learners who worked in an environment that was noisy or which constrained movement were at a disadvantage\u0026rdquo;.\nThese results also suggest that those who were able to interact more in the target language acquired more German, all of which means more input meeting the requirements of the input hypothesis.\nSchumann draws a parallel between natural (\u0026ldquo;free\u0026rdquo; or informal) second language acquisition and the pidginization-decreolization continuum, suggesting that early second language acquisition is similar to pidginization (secondary hybridization) and that late second language acquisition is similar to the mesolect and acrolect stages of decreolization.18 As evidence, he describes the case of Alberto, a Spanish-speaking adult living in the United States who appeared to be at a considerable psychological and social distance19 from English speakers, and whose speech showed marked signs of pidginization, i.e. lack of several grammatical morphemes, little use of inversion in questions, and use of more primitive transitional forms in negation (Schumann, 1978a provides details). Alberto thus fits the Acculturation Hypothesis, since he showed little second language acquisition and little acculturation, defined as the degree of social and psychological distance. Albert is also quite consistent with the theoretical framework presented here and the hypothesis that comprehensible input and filter level are primary determinants of second language acquisition. Alberto, it can be claimed, received little comprehensible input in English (he worked nights, did not own a TV set, did not attend ESL classes, and made little effort to get to know English speakers., according to Schumann, 1978a), and probably had a strong\naffective filter as well.20\nStauble\u0026rsquo;s subjects, reported in Stauble (1978) are also considered to be evidence for the Acculturation Hypothesis. All three were Spanish speakers who had been in the United States for many years, and who had apparently \u0026ldquo;fossilized\u0026rdquo; at different levels in their development of negation. Stauble attempted to relate their progress in second language acquisition, as reflected by the transitional forms they used for negation, and acculturation, measured by an informal questionnaire probing social and psychological distance from speakers of English. The subject Xavier showed the least progress in English negation, but also showed the least social distance. Stauble\u0026rsquo;s questionnaire revealed that his psychological distance, however, was greater than that of the others, which is consistent with the Acculturation Hypothesis. Paz, the most advanced speaker, had the greatest social distance, but, along\nwith Maria, the other subject, had relatively low psychological distance. Stauble\u0026rsquo;s interpretation of these findings is that psychological distance may be a more important determinant of acculturation, and hence language acquisition, than social distance.\nStauble\u0026rsquo;s data can also be analyzed in terms of our theoretical framework. Since all three subjects had been in the United States for many years, all three had had considerable comprehensible input (recall our earlier generalization that LOR, when over a long period of time, does not predict SLA, a hypothesis consistent with Walberg et al.\u0026rsquo;s diminishing returns hypothesis), enough to allow a \u0026ldquo;zero filter\u0026rdquo; acquirer to reach native-speaker levels. We can then simply hypothesize that it was Paz\u0026rsquo;s lower filter, reflected by the lower psychological score, that allowed this acquirer to make more progress.21\nFinally, it can be claimed that the comprehensible input plus filter position is more general. The acculturation hypothesis predicts second language acquisition only in immigration and extended sojourn situations. (Indeed, it is unfair to ask it to account for other situations, since Schumann has made it very clear in his writings that the acculturation hypothesis is designed to account for second language acquisition only in this situation.) The theory of SLA presented in this chapter can not only account for extended sojourn and immigrant SLA but also predicts success in the classroom, as detailed in Chapters III, IV, and V, and is claimed to be applicable to all language acquisition.\nThe Acculturation Hypothesis has considerable merit. It may be the case that acculturation is the most effective way of lowering the affective filter and getting input for immigrants and long-term visitors. Figure 2.3 attempts to capture the parallel between second language acquisition and the effect of acculturation. \u0026ldquo;Free\u0026rdquo; second language acquisition and the continuum are similar in that acculturation may be the \u0026ldquo;motivating force\u0026rdquo; behind both.22 Creole speakers gradually acquire closer versions of the standard as they are acculturated into the target culture. This acculturation brings them into contact with speakers of the standard, and makes them more \u0026ldquo;open\u0026rdquo; to the input (lowers the filter). Also, acculturation may \u0026ldquo;motivate\u0026rdquo; second language acquisition. As the individual acquirer acculturates into a culture, he obtains more input via more interaction, and is more \u0026ldquo;open\u0026rdquo; to it. The difference\nFig. 2.3. Acculturation, pidginization-decreolization, and second langauge acquisition.\nSecond langauge acquisition and the pidginization - decreolization continuum are similar in that both progress via comprehensible input supplied in a low filter situation (area inside the box).\na Enculturation = \u0026ldquo;the process by which an individual assimilates to his own culture or to some segment of it\u0026rdquo;, i.e. the case of European elite professionals who acquire English in their own countries, (For discussion, see Schumann (1978b), pp. 47-48).\nis that acculturation is the necessary motivating force for movement along the decreolization continuum, while it is only one way to bring the filter down and obtain comprehensible input. Input can be obtained with acculturation, and there are many techniques for bringing down the filter that have nothing to do with acculturation.\nNotes\r#\r\r  The acquisition-learning distinction is not new with me. Several other scholars have found it useful to posit similar kinds of differences. Bialystock and Frohlich (1972) distinguish \u0026ldquo;implicit\u0026rdquo; and \u0026ldquo;explicit\u0026rdquo; learning, and Lawler and Selinker (1971) discuss mechanisms that guide \u0026ldquo;automatic\u0026rdquo; performance and mechanisms that guide \u0026ldquo;puzzle and problem solving performance\u0026rdquo; (p. 35). Also, Corder (1967) and Widdowson (1977) suggest similar ideas.\n  Those of us who have studied languages with a great deal of inflectional morphology in school, using methods that focus on grammatical accuracy, often have first-hand experience with this phenomenon. Consider what happens just before a grammar test in a language such as German; students carefully review the inflectional system (der-das-die; den-das-die; plus the list of prepositions that take different cases) on the way to the exam. As soon as they sit down in class to take the test, they immediately scribble what they can remember of the inflectional system on the side of the page, so that when they need the correct marker, they can find it and use it. At the end of the exam, before handing in the paper, they erase their notes. The morphology on the side of the page is, most likely, late-acquired, and unavailable in rapid conversation for most people. The notes on the side, then, act like a conscious Monitor, raising the accuracy of the output in situations where the student has time, is focused on form, and can access the rule; grammar tests fill these conditions nicely. Students thus do much better in terms of grammatical accuracy on such tests than they would in free conversation, the lateacquired, or not-yet-acquired, items that are learnable rising in rank.\n  An interesting parallel hypothesis is that we will see greater numbers of transitional forms in Monitor-free conditions. The literature is consistent with this hypothesis, since the transitional forms noted for adult acquirers have all been found in subjects who appear to be non-users, or under-users of the conscious Monitor, for example, Schumann\u0026rsquo;s Alberto (Schumann, 1978); Nelson\u0026rsquo;s McGill university janitors (Nelson, 1980), and Hanania and Gradman\u0026rsquo;s Fatmah (Hanania and Gradman, 1977). This is predictable, since transitional forms are hypothesized to reflect the operation of the acquired system.\n  To be more precise, speaking skills that depend on acquired competence emerge over time as a result of comprehensible input. There appear to be, however, at least two ways of beating the system, at least over the short run. We can produce using memorized language, or routines and patterns (Krashen and Scarcella, 1978), and we can also produce by using the first language surface structure plus conscious grammar (L1 plus Monitor Mode). As we shall see later, both of these methods of performing without acquired competence have drawbacks and limitations.\n  Interlanguage talk, the speech of second language acquirers to each other, may or may not be useful for acquisition. This is an important question that, to my knowledge, has not been directly dealt with in the professional literature. Arguments in favor of its utility for language acquisition are these: it satisfies the input hypothesis in that it is meant\nfor communication and might contain input at some acquirers' i + 1. On the other hand there is the question of whether the ungrammaticality of much interlanguage talk outweighs these factors. Also, much interlanguage talk input might be too simple and may not contain i + 1 for the more advanced acquirer. See Krashen (1980, 1981) for a discussion of some of the empirical evidence that might shed light on this issue.\n  In a recent study, M. Long (1980) reported that foreigner talk discourse did not contain significantly more verbs marked for present tense than native speaker-native speaker discourse. It is thus not more in the \u0026ldquo;now\u0026rdquo; of the \u0026ldquo;here and now\u0026rdquo;, to paraphrase Long.\n  A look at some of the memorized sentences and phrases children pick up during the silent period confirms their utility in a variety of social situations. Quite often, however, the children do not always acquire the knowledge of exactly when and how to use them. A particularly vivid example is the child, who had been in the United States approximately two months, who greeted an acquaintance of mine with \u0026ldquo;I kick you ass.\u0026rdquo;\n  Conscious Monitoring need not always result in the full repair of an L1 influenced error. If the repair job appears to be too complex for the Monitor to deal with, the performer may simply abort the entire sentence and try to express the idea in a simpler way. This may be the cause of the avoidance phenomena, first reported by Schachter (1974). In Schachter\u0026rsquo;s study, it was shown that Chinese and Japanese speakers produced fewer relative clauses in English as a second language than did Farsi and Arabic speakers, but were more accurate. Schachter relates this result to L1-L2 differences: Chinese and Japanese relative clauses are constructed to the left of the head noun, while Farsi and Arabic, like English, have relative clauses to the right of the head noun.\nOne possible interpretation is that the Chinese and Japanese speakers in Schachter\u0026rsquo;s study consciously knew the correct English relative clause rule but had not acquired it. Also, in their production of English, they utilized their L1 rule. Their Monitor was thus presented with the task of moving relative clauses around a head noun, a very complex operation. In many cases, subjects simply decided that it was not worth the effort! When they did produce relative clauses, however, they were accurate. These were the cases when they went to the trouble of applying a difficult rule.\nAvoidance is thus predicted in cases where a rule has been consciously learned but not acquired, and when the L1 and L2 rules are quite different, where repair by the Monitor requires difficult mental gymnastics.\nAvoidance is also predicted in cases where the performer consciously knows the rule imperfectly, not well enough to make the necessary chance but well enough to see a mismatch between the L1 rule he has used and the correct target language rule. Since he cannot repair but knows there is an error, he can exercise his option to avoid the structure. Kleinman\u0026rsquo;s avoidance data (Kleinman, 1977) fits this description. His Arabic-speaking subjects showed evidence of avoiding the passive in English, and his Spanish-and Portuguese-speaking subjects avoided infinitive complements and direct object pronouns in sentences with infinitive complements (e.g. \u0026ldquo;I told her to leave\u0026rdquo;). In both cases, according to Kleinman, contrastive analysis predicts difficulties. These subjects, unlike Schachter\u0026rsquo;s, were not unusually accurate with these constructions when they produced them. In this case, it is possible that the subject\u0026rsquo;s knowledge of the rule was not complete enough to effect a perfect repair, so avoidance was the result.\nIn both cases described above, conscious rules serve a filtering function, telling the performer where his L1 rule differs from the L2 rule. In one case, repair is possible but difficult, and in the other the conscious rule does not permit repair.\n9 Based on Hyltenstam\u0026rsquo;s data on the acquisition of negation by adult acquirers of\nSwedish (Hyltenstam, 1977), Hammarberg (1979) argues that acquirers may begin at\ndifferent developmental stages depending on their first language. The normal course of development in the acquisition of negation in Swedish consists of the following transitional stages:\n(1a) Acquirers place the negative marker before all other parts of the VP, before the auxiliary and the main verb.\n(1b) Acquirers place the negative marker after the auxiliary but before the main verb.\n(2) Post-verbal negation.\nIn subsequent stages, acquirers move closer to the Swedish rule of post-verbal negation in main clauses and pre-verbal negation in subordinate clauses.\nAccording to Hammarberg, speakers of languages that have pre-verbal negation (Serbo-Croatian) typically start this developmental sequences at the beginning, at stage 1a.\nEnglish speakers, however, appear to begin at 1b. We do not see English speakers, in Hyltenstam\u0026rsquo;s data, who produce \u0026ldquo;neg + aux\u0026rdquo; structures. Since 1b \u0026ldquo;is an English-like solution\u0026rdquo; ( p. 10), one can hypothesis that English speakers skipped the (1a) transitional stage.\nThere are several possibilities here. First, Hammarberg\u0026rsquo;s suggestion may be true. If so, if acquirers can skip a transitional stage tj, when their language has a rule identical to tj + 1, this implies that tj was not essential\u0026ndash;it did not have to serve as i. This does not rule out the possibility that tj would have been useful.\nA second possibility is that tj was present, but escaped the observer\u0026rsquo;s notice. Indeed, it may have been present as tj but never uttered. Adult performers who have consciously learned the target language rule, or who have even learned parts of it, may be able to use the conscious Monitor to detect transitional errors and either avoid them in performance or repair them (see discussion in footnote 7 on avoidance). They may, however, have more of a tendency to accept such transitional forms when they coincide with an L1 rule, even if they are errors (Schachter et al., 1976). This could explain why transitional forms that are unlike L1 rules are less frequently seen in performance. It should be noted, however, that the Serbo-Croatian speakers in Hyltenstam\u0026rsquo;s study did show clear signs of stage 1b, which does not correspond to any rule in Serbo-Croatian.\nThere are thus at least two possibilities\u0026ndash;the English speakers did indeed skip a stage, which implies that the skipped stage may not have been crucial to further development, or the stage was \u0026ldquo;there\u0026rdquo; but undetected, due to its short duration and/or its having not been used in the performer\u0026rsquo;s output. Consistent with Schumann\u0026rsquo;s findings (Schumann, 1979), the transitional stage that coincides with the L1 rule was quite evident, both in the case of Serbo-Croatian speakers (stage 1a) and English speakers (stage 1b). As suggested in the text, this stage may have, in each case, been two stages in one, first the L1 rule, and then the \u0026ldquo;real\u0026rdquo; transitional stage, with only the latter helping real progress to continue.\n10 Several scholars have pointed out that this view of transfer is too strong in that it predicts the occurrence of \u0026ldquo;transfer\u0026rdquo; errors that in fact do not occur. This problem can be resolved by positing several constraints on transfer, or conditions that must be met before a performer can substitute a first language rule for some i + 1.\nZobl (1980a, b, c) notes that the L1 rule itself must be a productive one. This accounts for the fact that French speakers acquiring English as a second language do not make errors of the kind:\nJohn comes he? after the French:\nJean vient-il?\nThe French rule, according to Zobl, is no longer productive in French. Citing Terry (1970), Zobl notes that it is mainly limited to present tense contexts, an indication that the rule is becoming unproductive.\nKellerman (1978) provides another condition on transfer: the performer must perceive the transferred rule to be potentially non-language specific. Kellerman\u0026rsquo;s original experiments in lexical transfer showed that foreign language students were less willing to transfer features of words they considered to be less \u0026ldquo;core\u0026rdquo;. For example, a Dutch-speaking student of English would be more likely to presume that he could transfer the Dutch verb \u0026lsquo;brechen\u0026rsquo; (break) in an English sentence:\nHe broke his leg. than in:\nThe waves broke on the shore.\nA similar constraint exists in syntax. Dutch students of English, Kellerman reports, were not willing to accept a literal translation into English of the Dutch equivalent of:\nThe book read well.\napparently because the intransitive use of read was perceived to be language-specific and infrequent (see also Jordans and Kellerman, 1978).\nAnother constraint comes from the work of Wode (1978), and accounts for the finding that L1 influenced errors do not seem to occur at all stages of the acquirer\u0026rsquo;s development. Wode states that for an interlinguistic error to occur, the L1 rule and the L2 rule it substitutes for must meet a \u0026ldquo;crucial similarity measure\u0026rdquo; (p. 116). In other words, if an L1 rule is to be utilized, it must be preceded by some i of the L2 that differs from it only in minimal ways. Wode\u0026rsquo;s example, from child second language acquisition of English by German speakers, illustrates this point nicely. Wode notes that errors such as:\nJohn go not to school\noccur in which German-like post-verbal negation is used. These errors are not found in beginning acquirers, but occur, according to Wode, only after the acquirer has reached the \u0026ldquo;aux-negation\u0026rdquo; stage and already produces sentences such as:\nJohn can not go.\nThe acquirer then overgeneralizes the negative rule from post-auxiliary to post-verbal, and uses the first language rule.\n  There is another way in which use of the L1 may indirectly help second language acquisition. The existence of cognates will help to make input comprehensible, even if form and meaning are not identical across languages. This factor will increase the rate of acquisition but not alter the order.\n  The hypothesis that L1 rules cannot contribute to real progress implies that fossilized use of a L1 rule is the \u0026ldquo;end of the line\u0026rdquo; for acquisition. Does this mean that a single L1 error, a single prolonged substitution of some i + 1 halts all acquisition? It only implies this if we accept a strictly linear view of the natural order hypothesis, that there is only one stream of progress that acquirers follow in strict sequence. Clearly, this is not the\n  case. If it were, acquirers would always show us just one transitional error at a time! Of course, individuals show us many error types at once. This indicates that several streams of development are taking place at the same time. These streams appear to be correlated; a performer at a given stage in one stream will usually be at a predictable stage in another stream. Schumann (1980) provides good evidence for this, noting that his subjects who were at the no + v stage in negation produced few relative clauses or relative clauses without relative pronouns. For L1 acquisition, Shipley, Smith and Gleitman (1969) report that verb phrase related items are correlated fairly highly for order of acquisition, and noun phrase related items are correlated, but agreement across the groups is not high (see also Krashen, Madden and Bailey, 1975; and Andersen, 1978, for similar suggestions). Of course, it is quite possible that transitional forms or rules from one stream may help out those in any other by serving as i. If say ten parallel streams of development occur at any given time in an acquirer, it may be the case that a given stream will interact with some, but not all, of the others in this way.\n  \u0026ldquo;Integrative\u0026rdquo; motivation refers to the desire to \u0026ldquo;be like\u0026rdquo; speakers of the target language. In foreign language situations (e.g. studying French in Anglophone Canada), students with more integrative motivation are usually superior, especially over the long run (Gardner and Lambert, 1972). In situations where there is some urgency in second language acquisition and/ or where there is less desire to \u0026ldquo;integrate\u0026rdquo;, the presence of integrative motivation may not relate to second language achievement. Rather, \u0026ldquo;instrumental\u0026rdquo; motivation, the desire to use the language for practical means, may predict success better (Lukmani, 1972; Gardner and Lambert, 1972; Oller, Baca, and Vigil, 1977).\n  Stevick (1980) provides a poignant example, a story related to him by one of his students:\n\u0026ldquo;Four years ago I was looking for any kind of job I could find. I happened to get one teaching ESL to a class of six women from various parts of the world who spoke no English. I had never heard of ESL before. The salary was poor and I didn\u0026rsquo;t know if I wanted to pursue a teaching career, therefore my approach was very casual and low pressure. My method usually consisted of thinking up a topic to talk about, introducing it, and encouraging each student to express her feelings.\nIn spite of my casual approach, the teaching job was extremely pleasant. I had a deep empathy for anyone who was facing a language barrier because I had just returned from a trip around the world alone as a monolingual.\nThey all started speaking English fairly well after the first two weeks of class. I remember a woman from Columbia telling me that she hadn\u0026rsquo;t spoken English before because she was afraid of making mistakes. After being in class for a while, she spoke English and made mistakes and didn\u0026rsquo;t care. I didn\u0026rsquo;t attach much significance to the progress that the women made. I had no idea how long it took people to learn a language.\nGradually I became quite career-oriented, and made a conscious decision to try to be a top-notch ESL teacher. I had guilt feelings about the casual way in which I had taught those first six women, and my teaching evolved into the traditional authoritarian style with the textbook dominant. Over the years, it has gotten to where I feel frustrated if a student takes class time to relate a personal anecdote.\nI can look back on these four years and see a gradual decline in the performance of my students. Until recently, I have been assuming that I needed to be more attentive to their mistakes in order to speed their progress. My present style of teaching bypasses the students; feelings and basic needs, and concentrates on method. I never see successes like those first six ladies.\u0026rdquo; (From Stevick, 1980, pp. 4-5).\n54\n  \u0026ldquo;Intermediate\u0026rdquo; here means knowing enough English to be able to take at least a partial academic load, but not being able to \u0026ldquo;pass out\u0026rdquo; of the required university English as a second language requirement. The normal situation for the intermediate at the university is to be enrolled in at least one ESL class in addition to one or more subject matter course.\n  The research cited here deals exclusively with the effect of instruction on the acquisition of syntax and morphology. Until recently, little work had been done that examined the effect of instruction on the acquisition of pronunciation. Purcell and Suter (1980) report that acquisition of pronunciation of English as a second language was predicted by the following factors: (1) The acquirer\u0026rsquo;s first language (speakers of Arabic and Farsi were superior to speakers of Japanese and Thai); (2) The amount of interaction with English speakers; (3) Performance on a test of phonetic ability; and (4) The degree of concern the speaker had about his accent. Factor (2) appears to be related to comprehensible input, while (3) and (4) may be related to learning. (1) reflects the consequences of falling back on the first language. The amount of formal classroom training in ESL, however, did not relate to pronunciation ability, even when courses were specifically aimed at teaching pronunciation.\n  Some studies seem to show that age of arrival (AOA) predicts second language attainment for children\u0026ndash;that is, that the child who arrives at age six, for example, will attain higher levels of proficiency than the child who arrives at age ten. While AOA does predict ultimate attainment for children as a group as compared to adults as a group, closer examination reveals that AOA per se is not a factor for children considered alone. In cases where AOA seems to be a factor, it can be argued that LOR, and ultimately CI, is really causative. Cummins (1980) has performed such a reanalysis of Ramsey and Wright\u0026rsquo;s data on 1,200 immigrant children in Canada (Ramsey and Wright, 1974), and reaches this conclusion, noting that when AOA is controlled in Ramsey and Wright\u0026rsquo;s data, children with longer LOR\u0026rsquo;s perform better in a variety of tasks. Cummins also found that when LOR is controlled, however, children with younger AOA\u0026rsquo;s are not necessarily better\u0026ndash;in many cases, the opposite is true. Minoura (1979) can also be reinterpreted. She studied 44 Japanese children who had been in the United States for a range of one to eight years. While LOR predicted attainment (r = 0.79), so did AOA (r = -0.75)(a sentence imitation test was used). All the children in the sample had arrived in the United States at about the same time, however, so LOR and AOA were highly correlated (r = -0.95). It thus may be argued that LOR and thus comprehensible input, was the true causative factor. (According to my calculations, the correlation between AOA and SLA reduces to r = 0.005 when the effect of LOR is removed!) The Heidelberg project, discussed in the text, also reports a relationship between AOA and SLA, this time among adults taken as a group. This also seems to be a confound, since older subjects seemed to spend less time speaking German (r = -0.32 between AOA and reported leisure time use of German). Partial correlation partialling out the effects of interaction with German speakers reduces the reported correlation of -0.57 between AOA and SLA to r = -0.49. This could (and should) go even lower with a more reliable measure of the amount of comprehensible input subjects actually got.\n  Pidginization \u0026ldquo;occurs when speakers of different languages come into limited contact and an auxiliary vehicle of communication develops to facilitate interaction among them.\u0026rdquo; (Schumann, 1978b, p. 40). Secondary hybridization is a form of pidginization that occurs if a \u0026ldquo;standard form\u0026rdquo; of a target language is available. It persists only if speakers remain at social and psychological distance from speakers of the norm. (From Whinnom, 1971, cited by Schumann, 1978b).\nDecreolization occurs when speakers of a creole (a pidgen that has become a native language of a group) \u0026ldquo;gain varying degrees of contact with the group that speaks the base language of the creole\u0026rdquo; (Schumann, p. 41). It is the process of moving toward the \u0026ldquo;standard form\u0026rdquo; of the language. Creolists refer to several stages of decreolization, ranging from the creole itself, to the basolect, which is close to the creole, the mesolect, the acrolect, and finally, the standard form.\n  Psychological distance is determined by factors such as motivation, language and culture shock, and other affective variables. Social distance results from social factors, such as the relative dominance of the social group of the acquirer and speakers of the target language, the cohesiveness of the groups, similarity in culture, etc. In Schumann\u0026rsquo;s view factors causing psychological and social distance \u0026ldquo;put the learner in a situation where he is largely cut off from target language input and/or does not attend to it when it is available\u0026rdquo; (Schumann, 1977, pp. 266-267).\n  Also of interest is the fact that Alberto\u0026rsquo;s grammatical morpheme difficulty order (one cross-section) correlates significantly with the \u0026ldquo;natural order\u0026rdquo; proposed earlier (r = 0.73, p \u0026lt; 0.05 ; analysis in Krashen, 1977). The data was collected from his spontaneous speech.\n  This is not the only interpretation of this result, as Earl Stevick has pointed out to me. Something else may have caused Paz' superior second language acquisition, and the low psychological distance score may be a result of this and not a cause.\n  Or the \u0026ldquo;remote cause\u0026rdquo;. See discussion in Schumann (1978b), p. 48.\n  Chapter III\nProviding Input for Acquisition\nIn this chapter, we take the difficult step from theory to practice. Before we do this, let me remind the reader of the main point of Chapter I: I consider theory to be only one of several possible determinants of method and materials. These implications need to be confirmed by further research (even though several implications do have empirical confirmation) and by the experiences of teachers and students. The \u0026ldquo;ideal\u0026rdquo; state is a relationship whereby theoretical and applied researchers and practitioners learn (and acquire) from each other.\nWe will cover one aspect of application in this chapter: how we can encourage subconscious acquisition. This is an important question, since the major implication of second language acquisition theory is that acquisition is central. It therefore follows that our major pedagogical efforts need to be devoted to encouraging language acquisition.\nThis portion begins with a brief discussion of some of the implications of the input hypothesis with respect to the role and potential of the second language classroom, as well as its limitations, as compared with the informal environment. Following this, we discuss the contribution that actual output can make. As explained in Chapter II, it is hypothesized that we acquire via input, what we read and hear, and not via output, actual talking and writing. Output does have an indirect role to play in encouraging acquisition, however.\nThe major portion of this chapter is concerned with characterizing what \u0026ldquo;good input\u0026rdquo; is, listing the features that input should have if it is to encourage acquisition. In subsequent chapters, we will discuss how conscious language learning fits into the pedagogical schema, and in the final chapter we will examine some common language teaching methods and some aspects of the informal environment, to see to what extent they provide the input discussed in this section and the type of learning discussed in Chapter IV.\nThe goal of this exercise is to provide a framework that helps us see what materials and methods actually do for the second language student. This will hopefully help uncover gaps and provide us with ways to supplement and improve existing materials and techniques.\nA. The Potential of the Second Language Classroom\r#\r\rWe often hear that you have to \u0026ldquo;live in the country\u0026rdquo; in order to achieve any real proficiency in a second language, and that the informal real world environment is always superior to the classroom, or formal environment. As we saw in Chapter II, there are several studies that appear to support this assertion. Other studies, however, suggested that the classroom does help after all. I attempted to resolve this apparent conflict by hypothesizing that what was really at issue was comprehensible input. The classroom is of benefit when it is the major source of comprehensible input. When acquirers have rich sources of input outside the class, and when they are proficient enough to take advantage of it (i.e. understand at least some of it), the classroom does not make an important contribution.\nThus, the real advantage of the informal environment is that it supplies comprehensible input. If, however, we fill our second language classrooms with input that is optimal for acquisition, it is quite possible that we can actually do better than the informal environment, at least up to the intermediate level. As we mentioned in Chapter II, the informal environment is not always willing to supply comprehensible input to the older second language student. As Hatch and her colleagues have pointed out, input to the adult is more complicated grammatically, contains a wider range of vocabulary, deals with more complex topics, and is generally harder to understand. This is simply a reflection of the fact that the adult world is more complex than the world of the child, and our expectations for adult comprehension are much higher.\nIn the case of the adult beginner, the classroom can do much better than the informal environment. In the second language classroom, we have the potential of supplying a full 40-50 minutes per day of comprehensible input, input that will encourage language acquisition. The true beginner in the informal environment, especially if he or she is not\nadept at skills of conversational management and negotiation of meaning (see discussion later in this chapter; also Scarcella and Higa, forthcoming), may require days or even weeks before he or she can \u0026ldquo;pick out\u0026rdquo; that much comprehensible input from the barrage of language heard. The beginning student will simply not understand most of the language around him. It will be noise, unusable for acquisition.\nThe value of second language classes, then, lies not only in the grammar instruction, but in the simpler \u0026ldquo;teacher talk\u0026rdquo;, the comprehensible input. It can be an efficient place to achieve at least the intermediate levels rapidly, as long as the focus of the class is on providing input for acquisition.\nB. Limitations of the Classroom\r#\r\rDespite my enthusiasm for the second language classroom, there are several ways in which the outside world clearly excels (or some \u0026ldquo;modification\u0026rdquo; of the outside world, a fascinating alternative that we shall discuss later), especially for the intermediate level second language student. First, it is very clear that the outside world can supply more input. Living in the country where the language is spoken can result in an all-day second language lesson! As we mentioned earlier, however, for the informal environment to be of any use, the input language has to be comprehensible. The informal environment will therefore be of more and more use as the acquirer progresses and can understand more and more.\nSecond, as many scholars have pointed out, the range of discourse that the student can be exposed to in a second language classroom is quite limited, no matter how \u0026ldquo;natural\u0026rdquo; we make it. There is simply no way the classroom can match the variety of the outside world, although we can certainly expand beyond our current limitations.\nThe classroom will probably never be able to completely overcome its limitations, nor does it have to. Its goal is not to substitute for the outside world, but to bring students to the point where they can begin to use the outside world for further acquisition, to where they can begin to understand the language used on the outside., it does this in two ways: by supplying input so that students progress in language acquisition, so that they understand \u0026ldquo;real\u0026rdquo; language to at least some\nextent, and by making the student conversationally competent, that is, by giving the student tools to manage conversations despite a less than perfect competence in the second language. We return to both of these important points in the discussion that follows.\nC. The Role of Output\r#\r\rA second point that needs to be dealt with before describing the characteristics of optimal input for acquisition is the role of output, most commonly, the role of speech, in language acquisition.1 *\nThe Input Hypothesis makes a claim that may seem quite remarkable to some people-we acquire spoken fluency not by practicing talking but by understanding input, by listening and reading. It is, in fact, theoretically possible to acquire language without ever talking. This has been demonstrated for first language acquisition by Lenneberg (1962), who described the case of a boy with congenital dysarthria, a disorder of the peripheral speech organs, who was never able to speak. When Lenneberg tested the boy, he found that the child was able to understand spoken English perfectly. In other words, he had acquired \u0026ldquo;competence\u0026rdquo; without ever producing. The child was tested at age eight, and there is no way to tell directly whether his lack of output had slowed down his language acquisition. It is quite possible that if he had been able to speak, he would have acquired language somewhat faster, due to the indirect contribution speaking can make to acquisition.\nOutput has a contribution to make to language acquisition, but it is not a direct one: Simply, the more you talk, the more people will talk to you! Actual speaking on the part of the language acquirer will thus affect the quantity of input people direct at you.\nIt will also affect the quality of the input directed at the acquirer Conversational partners often try to help you understand by modifying their speech (\u0026ldquo;foreigner talk\u0026rdquo;). They judge how much to modify by seeing whether you understand what is said, and also by listening to you talk. A second language speaker who makes lots of mistakes, has a poor accent, and is hesitant, will most likely receive, in general, more modified input than a speaker who appears competent and fluent.\nEngaging in conversation is probably much more effective than\n* Superscript numbers refer to Notes at end of chapters.\n\u0026ldquo;eavesdropping\u0026rdquo; for language acquisition. In conversation, the second language acquirer has some degree of control of the topic, can signal to the partner that there is a comprehension problem, etc. In other words, he can manage and regulate the input, and make it more comprehensible. There is no such control in eavesdropping! But in order to participate in conversation, there must be at least some talk, some output, from each partner. Hence, the indirect contribution of speech.\n1 . \u0026ldquo;CONVERSATION\u0026rdquo; AND LANGUAGE ACQUISITION\nSome scholars have suggested that \u0026ldquo;participation in conversation\u0026rdquo; is responsible for language acquisition. In the light of the above discussion, we can see that this is true, in a sense. \u0026ldquo;Conversation\u0026rdquo;, however, is not in itself the causative variable in second language acquisition. It is one way, and a very good way, to obtain input. It is theoretically quite possible to acquire without participating in conversation, however.2\nFigure 3.1 illustrates the indirect, but often considerable, contribution output can make to language acquisition.\nFig. 3.1. How output contributes to language acquisition indirectly.\nComprehensible input is responsible for progress in language acquisition.\nOutput is possible as a result of acquired competence.\nWhen performers speak, they encourage input (people speak to them). This is conversation.\n2 . OUTPUT AND LEARNING\nAs suggested in Chapter II, output can play a fairly direct role in helping language learning, although even here it is not necessary. Output aids learning because it provides a domain for error correction. When a second language user speaks or writes, he or she may make an error. When this error is corrected, this supposedly helps the learner change his or her conscious mental representation of the rule or alter the environment of rule application. ( See discussion of Hypothesis (1), Chapter II. )\nWe may thus compare an \u0026ldquo;output approach\u0026rdquo; to the input approach\npromoted here. Could we teach language primarily by encouraging production, with little or no input, and correcting all errors? Such a technique, in addition to being maddening, relies entirely on the students' ability to learn grammar.\nThis is not to say that error correction is totally useless and that learning is of no value. Learning has a role to play, and error correction may be of use in certain situations. We will return later to the question of \u0026ldquo;putting learning in its place\u0026rdquo;.\nBy now the reader has seen enough promises of \u0026ldquo;more on this topic later\u0026rdquo;, and it is time to turn to the major portion of this chapter, a description of the characteristics of optimal input for second language acquisition, where hopefully the promises this introduction has made will be kept.\nD. Characteristics of Optimal input for Acquisition\nI will attempt in this section to present a set of requirements that should be met by any activity or set of materials aimed at subconscious language acquisition. The (testable) prediction that this set of characteristics makes is that an activity that fits the characteristics fully will encourage acquisition at the fastest possible rate. An activity that fits none of them could result in zero acquisition, or very little acquisition. (The latter, \u0026ldquo;very little\u0026rdquo;, is more likely. The \u0026ldquo;language acquisition device\u0026rdquo; may be so powerful, even in the adult, that some minimal acquisition may occur as a result of any exposure to language.)\nThe characteristics described below are not \u0026ldquo;weighted\u0026rdquo;. There is no attempt to claim that one is more important than another, although such claims should possibly be made. I will leave this to future refinements. Also, there is no attempt here to \u0026ldquo;support\u0026rdquo; these conclusions by empirical evidence. They derive from second language acquisition theory, the hypotheses presented in Chapter II. It is these hypotheses that are supported by empirical evidence. In other words, we are looking here only at implications of theory. This does not mean that the characteristics cannot be treated as predictions and further tested; indeed, they should be confirmed by both applied linguistics research as well as teacher and student intuition, as I discussed in Chapter 1.\nWe discuss each characteristic separately, showing what predictions\neach characteristic makes with respect to different aspects of method, materials, and informal input. Following these descriptions, I will attempt to point out some new possibilities, and underscore the importance of some neglected traditional sources of input (Chapter V).\n1 . OPTIMAL INPUT IS COMPREHENSIBLE\nThis is clearly the most important input characteristic. It amounts to the claim that when the acquirer does not understand the message, there will be no acquisition. In other words, incomprehensible input, or \u0026ldquo;noise\u0026rdquo;, will not help.\nPositing comprehensibility as a fundamental and necessary (but not sufficient) requirement makes several predictions that appear to be correct. It explains why it is practically impossible for someone to acquire a second or foreign language merely by listening to the radio, unless the acquirer speaks a very closely related language. A monolingual English speaker, for example, hearing Polish on the radio, would acquire nothing because the input would be only \u0026ldquo;noise\u0026rdquo;.3\nThis requirement also explains the apparent failure of educational TV programs to teach foreign languages. The input is simply not comprehensible. My own children watched programs such as Ville Allegre faithfully for years, and acquired about as much as I did: They could count from one to ten in Spanish and recognize a few words such as casa and mesa. The comprehensibility requirement predicts that TV would, in general, be somewhat more successful than radio as a language teacher, but that even TV would be inadequate in beginning stages. Ervin-Tripp (1973) has noted that hearing children of deaf parents do not acquire language from TV or radio, an observation consistent with the requirement.4\nThis characteristic also explains why children sometimes fail to pick up family languages. My own case is, I think, quite typical. My parents spoke Yiddish around the house for years, occasionally to each other (to tell secrets), and constantly to my grandparents. Nevertheless, my sister and I failed to acquire Yiddish, with the exception of a few phrases and routines. On the other hand, in many families children do grow up speaking the family language as well as the language of the community. What appears to be crucial is whether the family language\nis directed at the child, in other words, whether an attempt is made to make the language comprehensible. What we heard via eavesdropping was not comprehensible. It dealt with topics that were not easily identified and that were also often beyond our range of experience. Language directed at us in Yiddish would have been simplified, and more relevant to us, and hence more comprehensible.\nAnother prediction that the comprehensibility requirement makes is that \u0026ldquo;just talking\u0026rdquo;, or \u0026ldquo;free conversation\u0026rdquo;, is not language teaching. In other words, simply being a native speaker of a language does not in of itself qualify one as a teacher of that language. Conscious and extensive knowledge of grammar does not make one a language teacher either. Rather, the defining characteristic of a good teacher is someone who can make input comprehensible to a non-native speaker, regardless of his or her level of competence in the target language. This leads naturally to another topic, how teachers make input comprehensible.\n( a) How to aid comprehension\nIf we are correct in positing comprehensibility as a crucial requirement for optimal input for acquisition, the question of how to aid comprehension is a very central one for second language pedagogy. Indeed, the comprehension requirement suggests that the main function of the second language teacher is to help make input comprehensible, to do for the adult what the \u0026ldquo;outside world\u0026rdquo; cannot or will not do.\nThere are basically two ways in which the teacher can aid comprehension, linguistic and non-linguistic. Studies have shown that there are many things speakers do linguistically to make their speech more comprehensible to less competent speakers. Hatch (1979) has summarized the linguistic aspect of simplified input which appear to promote comprehension. Among these characteristics are:\n(1) slower rate and clearer articulation, which helps acquirers to identify word boundaries more easily, and allows more processing time; (2) more use of high frequency vocabulary, less slang, fewer idioms;\n(3) syntactic simplification, shorter sentences.\nSuch characteristics and others appear to be more or less common to different types of simple codes, such as caretaker speech, foreigner-talk, and teacher-talk (see also Krashen, 1980), and clearly help make input language more comprehensible. There is considerable empirical evidence that these codes are significantly \u0026ldquo;simpler\u0026rdquo; than native speaker-native speaker language, and, as mentioned in Chapter II, there is evidence of some correlation between the linguistic level of the acquirer and the complexity of the input language: more advanced acquirers tend to get more complex input.\nDoes this mean that teachers should consciously try to simplify their speech when they talk to students? Should they think about slowing down, using more common vocabulary, using shorter sentences, less complex syntax with less embedding, etc.? Consciously referring to these \u0026ldquo;rules\u0026rdquo; might be helpful on occasion, but it appears to be the case that we make these adjustments automatically when we focus on trying to make ourselves understood. Roger Brown, commenting on studies of caretaker speech in first language acquisition, comes to a similar conclusion. He gives the following advice to parents wanting to know how to \u0026ldquo;teach\u0026rdquo; their children language in the least amount of time:\nBelieve that your child can understand more than he or she can say, and seek, above all, to communicate\u0026hellip;. There is no set of rules of how to talk to a child that can even approach what you unconsciously know. If you concentrate on communicating, everything else will follow. ( Brown, 1977, p. 26.)\nAs I have argued in several places (Krashen, 1980, 1981), the same situation may hold for the language teacher. If we focus on comprehension and communication, we will meet the syntactic requirements for optimal input.\nWhile we free teachers of the responsibility to consciously control the grammar of their speech, other responsibilities become more important. One is to make sure that the input is indeed comprehensible. I have nothing startling to add to the literature on comprehension checking, other than to underscore and emphasize its importance. Comprehension checking can range from simply asking \u0026ldquo;Do you understand?\u0026rdquo; occasionally, to monitoring comprehension via students' verbal and non-verbal responses.\n65\nAnother main task of the teacher is to provide non-linguistic means of encouraging comprehension. In my view, providing extra-linguistic support in the form of realia and pictures for beginning classes is not a frill, but a very important part of the tools the teacher has to encourage language acquisition. The use of objects and pictures in early second language instruction corresponds to the caretaker\u0026rsquo;s use of the \u0026ldquo;here and now\u0026rdquo; in encouraging first language acquisition, in that they all help the acquirer understand messages containing structures that are \u0026ldquo;a little beyond\u0026rdquo; them.\nGood teachers also take advantage of the student\u0026rsquo;s knowledge of the world in helping comprehension by discussing topics that are familiar to the student. Certainly, discussing or reading about a topic that is totally unknown will make the message harder to understand. There is a danger, however, in making the input too \u0026ldquo;familiar\u0026rdquo;. If the message is completely known, it will be of no interest, and the student will probably not attend. We want the student to focus on the message, and there must be some message, something that the student really wants to hear or read about. This requirement is perhaps the hardest one to meet, and we shall have more to say about it below, in our discussion of characteristic II.5\nAs pointed out just a moment ago, comprehension is a necessary condition for language acquisition, but it is not sufficient. It is quite possible to understand input language, and yet not acquire. This can happen in several different ways: First, it is quite possible that the input simply does not contain i + 1, that it does not include structures that are \u0026ldquo;a bit beyond\u0026rdquo; the student. Second, in many cases we do not utilize syntax in understanding\u0026ndash;we can often get the message with a combination of vocabulary, or lexical information, plus extralinguistic information. Finally, the \u0026ldquo;affective filter\u0026rdquo; may be \u0026ldquo;up\u0026rdquo;, which can result in the acquirer understanding input, even input with i + 1, but not utilizing it for further acquisition.\n2 . OPTIMAL INPUT IS INTERESTING AND/OR RELEVANT\nOptimal input focusses the acquirer on the message and not on form. To go a step further, the best input is so interesting and relevant that the acquirer may even \u0026ldquo;forget\u0026rdquo; that the message is encoded in a foreign language.\nCreating materials and providing input that meet this characteristic may appear to be an easy and obvious task, but my view is that, in reality, this requirement is not easy to meet, nor has the profession considered it obvious. It is very difficult to present and discuss topics of interest to a class of people whose goals, interests, and backgrounds differ from the teacher\u0026rsquo;s and from each other\u0026rsquo;s. I also claim that relevance and interest have not been widely perceived as requirements for input, since so many materials fail to meet this requirement.\nIt is fairly easy to think up examples of input that, while comprehensible, are universally perceived to be uninteresting and irrelevant. Among the most obvious examples are pattern drill, and most dialogue type exercises. Experimental evidence suggests that students pay little or no attention to meaning after the first few repetitions in pattern drill (Lee, McCune, and Patton, 1970), and the same result is most likely true for dialogues that are memorized by rote. Grammatical exercises also fail as input for acquisition on similar grounds. Granted, the goals of these exercises are not \u0026ldquo;acquisition\u0026rdquo;, and we will have occasion to examine whether these input-types fill other needs in the second language program. Nevertheless, they fail this requirement dismally.\nSomewhat less obvious is the failure of \u0026ldquo;meaningful drill\u0026rdquo; to qualify as optimal input for acquisition. \u0026ldquo;Meaningful drill\u0026rdquo; is distinguished from \u0026ldquo;mechanical drill\u0026rdquo;, in that the former requires that real meaning be involved (Paulston, 1972). Since meaningful drill is designed to provide practice on particular grammatical structures, however, it is very difficult to also build in the exchange of truly relevant or interesting information, as in:\nWhat time does he get up in the morning?\nWhat time do they get up in the morning?\nAt best, such information is of only mild interest to members of a language class. I believe that it is an impossible task for teachers to embed truly interesting or relevant information into the form of a meaningful drill on a daily basis.\nSome other fairly widespread input types that fall short of the mark of true relevance are the reading assignments that most foreign language students work through in introductory courses. Generally, these selections bear very little resemblance to the kind of reading the students would do in their first language on their own time.\nBefore the reader feels I am being overly critical and unfair, I must say that it seems to me that the interest-relevance requirement is nearly impossible to satisfy in the standard American foreign language course given in the high school or college, especially when such a course is taken as a requirement. It is far easier to satisfy in ESL situations, where there is a perceived need for the language. For example, in classes composed primarily of immigrants, input will typically contain a great deal of information that is useful to the student for survival \u0026ldquo;on the outside\u0026rdquo;. University ESL courses for foreign students often include study skills, English for academic purposes, introduction to university life, and even useful academic skills.6 ESL teachers often serve officially or unofficially as friends and counselors, and therefore provide a great deal of truly relevant input.7 8\n3 . OPIMAL INPUT IS NOT GRAMMATICALLY SEQUENCED\nIn acquisition-oriented materials, we should not be consciously concerned about including i + 1 in the input. Part (3) of the Input Hypothesis claims that when input is comprehensible, when meaning is successfully negotiated, i + 1 will be present automatically, in most cases.9\nThis requirement could be stated in a weaker form. (3) could be rephrased as follows:\nthere is no need to deliberately include i + 1, since it will occur naturally. The strong form may be called for instead: it may be better not to even attempt to include i + 1 The arguments against a deliberate attempt to grammatically sequence were given briefly in Chapter II, and will be expanded on here.\n If we sequence, and each lesson, or group of lessons, focuses on one structure, this assumes that everyone in the class has the same i + 1, that everyone is at the same developmental stage in the second language. Because there are individual differences in the rate of acquisition (due to the strength of the affective filter and the amount of comprehensible input obtained), it is extremely unlikely that all the students in any class are at the same stage. Unsequenced but natural input, it is hypothesized, will contain a rich variety of structure\u0026ndash;if it is comprehensible, there will be i + 1 for everyone as  long as there is enough input (we return to the quantity question below).\n When we attempt to present a \u0026ldquo;finely-tuned\u0026rdquo; sequence, we generally present each structure or rule once. (There is the \u0026ldquo;review\u0026rdquo; lesson and there are attempts at recycling, but review does not usually work through the entire sequence of activities\u0026ndash;its goal is generally to \u0026ldquo;remind\u0026rdquo; and provide some additional practice for a rule that is supposedly already \u0026ldquo;internalized\u0026rdquo;.10) What happens to the student who misses the rule the first time around? Traditional review, meant as a reminder, will often not help. In traditional foreign language learning, as done in the United States, the student may even have to wait until next year, when the rule is presented again. Unsequenced communicative input contains built-in review. We don\u0026rsquo;t have to worry if we miss the progressive tense today, it will be part of the input again\u0026hellip; and again. Comprehensible input thus guarantees us natural review and recycling, assuming, as mentioned above, that there is enough of it.  Some readers may feel that I am setting up and attacking a straw man. It can be argued that some grammatically-based courses, despite a lockstep structural orientation, do provide input at i + 1 as well. While there may be a \u0026ldquo;structure of the day\u0026rdquo;, not every utterance contains the target structure. For example, if the lesson\u0026rsquo;s focus is the progressive tense marker, other tenses will be used as well in both classroom input and in the readings.\nThis may appear to be the case, but there is, nevertheless, a real problem with this approach. With a grammatical focus, communication will always suffer, there will always be less genuinely interesting input. The teacher\u0026rsquo;s mind, and the materials writer\u0026rsquo;s mind, is focused on \u0026ldquo;contextualizing\u0026rdquo; a particular structure, and not on communicating ideas.\nAs my colleague Steven Sternfeld has pointed out to me, what is proposed here is fundamentally different from \u0026ldquo;contextualization\u0026rdquo;. Contextualization involves inventing a realistic context for the presentation of a grammatical rule or vocabulary item. The goal in the mind of the teacher is the learning or acquisition of the rule or word. What is proposed here is that the goal, in the mind of both the teacher and the student, is the idea, the message.\nThis objection can be summarized as follows:\n The very orientation of the grammatically-based syllabus reduces the quality of comprehensible input and distorts the communicative focus. Teachers will be concerned with how they are speaking, reading selections will be aimed at including x number of examples of structure y along with a certain vocabulary sample, a sure guarantee of boring and wooden language. Still another problem is that the grammatical sequence attempts to guess the order of acquisition. Several years ago, I suggested (Krashen et al., 1975) that an application of the Natural Order Hypothesis was the construction of \u0026ldquo;natural syllabi\u0026rdquo; following the natural order. My position has changed. As Fathman (1979) has pointed out, the practical implication of the Natural Order Hypothesis may lie in what it has taught us about the underlying process of language acquisition. It seems to me now that we should not attempt to teach according to an order similar to that given in Table 2, Chapter II (or according to any other grammatical sequence).  Comprehensible input, it is claimed, will automatically follow a natural order insofar as i + 1 will be provided (along with many other structures).\nWe now summarize the advantages of natural input (the well-balanced diet of wholesome food) over the lockstep grammatical syllabus (single or even multiple vitamin therapy).11\n( a) The case against the grammatical syllabus\n__________________________________________________________________ Grammatical syllabus (deliberate Communicative input ( i + 1 included attempt to supply i + 1) naturally, given enough input )\n_________________________________________________________________________\n All students may not be at the 1. i + 1 will be provided for all  same stage. The structure of the students eventually day may not be the i + 1 for many of the students.\n Each structure presented only 2. Natural and extensive review. once. (See text for discussion of \u0026ldquo;review\u0026rdquo;.) Grammatical focus may prevent 3. Conscious focus of both student real and natural communication. and teacher is communication of ideas. Assumes we know order of 4. Does not assume we know order of acquisition. acquisition.  _________________________________________________________________________\n4 . OPTIMAL INPUT MUST BE IN SUFFICIENT QUANTITY\nIt is difficult to say just how much comprehensible/low filter input is necessary to achieve a given level of proficiency in second language acquisition, due to a lack of data. We know enough now, however, to be able to state with some confidence that the profession has seriously underestimated the amount of comprehensible input necessary to achieve even moderate, or \u0026ldquo;intermediate\u0026rdquo; levels of proficiency in second language acquisition.\nTheoretical arguments for quantity derive from the immediately preceding discussion. I hypothesized that natural communicative input could supply i + 1 for all students if two conditions were met;\n The input was not artificially constrained (limited range of discourse types) It was supplied in sufficient quantity.  Clearly, five minutes of talk, or a single paragraph of reading, has little chance of including a given student\u0026rsquo;s i + 1. Rather than take a more careful aim at that student\u0026rsquo;s needs, rather than \u0026ldquo;overindividualizing\u0026rdquo; instruction, it is far easier, I am suggesting, to increase the amount of comprehensible input. Again, if there is enough, i + 1 will be provided, and will be provided over and over.\nAs mentioned above, we do not have enough data to state, with confidence, how much input is necessary to reach a given stage. The literature does provide us with enough to state some initial hypothesis, however. Below, we briefly examine what the literature implies about reaching the initial \u0026ldquo;readiness to speak\u0026rdquo; stage, and more advanced levels.\n( a) Quantity requirements for initial readiness to speak\nHow much input is needed to end the \u0026ldquo;silent period\u0026rdquo;? How much input is necessary so that second language acquirers can produce utterances using acquired competence?\nAsher\u0026rsquo;s work on Total Physical Response teaching, a method that requires students to obey commands given in the second language, often with a \u0026ldquo;total physical response\u0026rdquo; (e.g. standing up), gives us some idea as to how much input is necessary for initial speaking readiness.\nAs we will see in Chapter V, the chief virtue of Total Physical Response may be its ability to supply concentrated comprehensible input. Asher has noted in several papers (reviewed in Chapter V) that TPR students are generally ready to start production in the target language after about ten hours of Total Physical Response input.12\nInformal language acquisition research presents what at first may seem to be a different picture. The \u0026ldquo;silent period\u0026rdquo; seen in informal child second language acquisition may last as long as six months! During this time, the child may produce very little in the second language, other than routines and a few patterns. The greater length of the \u0026ldquo;natural\u0026rdquo; silent period, as compared to Asher\u0026rsquo;s observation that ten hours may suffice may be due to the fact that a great deal of the input that the child in the natural environment receives may be incomprehensible. As stated earlier in this chapter, the main advantage of \u0026ldquo;formal instruction\u0026rdquo; may be its potential for providing comprehensible input in early stages, bringing the acquirer to the point where he or she can begin to take advantage of the natural environment. The long silent period in informal child second language acquisition may be further evidence that the informal environment is inefficient in early stages.13\n( b) Quantity requirements for higher levels of proficiency\nWe know even less about the amount of low filter/comprehensible input necessary for progress to higher levels of competence. We can get some idea from the United States Foreign Service Institute chart, an estimate of the amount of class time necessary to achieve a FSI 2+ rating in different foreign languages (2+ is defined as \u0026ldquo;halfway between minimal professional proficiency and working professional proficiency\u0026rdquo;, Diller, 1978, p. 100) for adult English speakers. According to the Foreign Service Institute estimates (reproduced in Diller, 1978), European languages such as German, French, and Italian require approximately 720 hours of classtime for the \u0026ldquo;average\u0026rdquo; student to attain the 2+ level, while more \u0026ldquo;exotic\u0026rdquo; languages (such as Arabic, Korean, and Chinese) require 1950 hours of classtime.14\nThese figures may, however, represent an upper bound. They are based on \u0026ldquo;classroom hours\u0026rdquo;, which, if traditional methods are employed, may not entail optimal input. In other words, we can do better.\n\u0026ldquo;How much input?\u0026rdquo; remains an empirical question, one that can probably be adequately answered by research. To be more precise, we would like to know: \u0026ldquo;How much low filter/comprehensible input is necessary for students to acquire enough competence in the second language, so that they can use the informal environment to continue improving?\u0026rdquo; Despite our current paucity of data, what seems clear to me now is that we are not using enough of the available instruction time for supplying comprehensible input, and that we will be able to stimulate more rapid (and more comfortable) second language acquisition if we put greater focus on input.\nBefore concluding this section, I should point out that what I am suggesting is not at all new: along with Newmark (1971), I am suggesting that the \u0026ldquo;extensive\u0026rdquo; side of the extensiveintensive reading debate is correct, that students profit more from reading for meaning, and reading great quantities of material, than from what Newmark calls \u0026ldquo;cryptoanalytic decoding\u0026rdquo; of difficult paragraphs, and that students gain more from participating in conversations, many conversations, than from focused listening comprehension exercises.\nWe turn now to two other features programs should contain if they are to encourage language acquisition.\nE. Other Features that Encourage Acquisition\r#\r\r1 . THE STUDENT SHOULD NOT BE PUT ON THE DEFENSIVE\nThe phrase \u0026ldquo;on the defensive\u0026rdquo; comes from Stevick\u0026rsquo;s well known book, Memory, Meaning, and Method. What it means to me is that methods and materials should not be a test of the student\u0026rsquo;s abilities or prior experiences, should not merely reveal weaknesses, but should help the student acquire more.\nMore generally, we are talking about keeping the affective filter \u0026ldquo;low\u0026rdquo;, making sure the student is open to the input. It may be the case that if we use procedures that are \u0026ldquo;true\u0026rdquo; to the input hypothesis, and that satisfy all the other characteristics of optimal input, the kind of input that results, and the classroom procedures that evolve, will satisfy this requirement as well and help keep the filter low. I will attempt, in this section, to outline a few general procedures and practices that do this.\nFirst, and I apologize for harping on this issue so much, if we concentrate on supplying comprehensible input where the focus is on the message and not on the form, this will in of itself contribute to a low filter. If the topic being discussed is at all interesting, and if it is comprehensible, much of the \u0026ldquo;pressure\u0026rdquo; normally associated with a language class will be \u0026ldquo;off\u0026rdquo;, anxiety will be lowered, and acquisition will result. As mentioned earlier, I think a desirable goal is that the student \u0026ldquo;forget\u0026rdquo;, in a sense, that the message is actually encoded in another language.\nSecond, we will be able to keep the filter low by not insisting on too-early production, before the student is \u0026ldquo;ready\u0026rdquo;. Language teachers (and students) associate progress in second language acquisition with speaking fluency (\u0026ldquo;Do you speak French?\u0026quot;), and the logical consequence of this is that we want our students to talk from the beginning. My personal view is that forcing early production, before the student has built up enough competence through comprehensible input, is perhaps the single most anxiety-provoking thing about language classes! While some students may want to talk as soon as possible, others may feel less secure until they have built up more competence. In other words, the length of the silent period is variable (see Note 12); Asher\u0026rsquo;s ten-hour estimate may be \u0026ldquo;average\u0026rdquo;, but it is not carved in stone. A safe procedure is simply not to force production and let the student decide when to start talking.\nClosely related to speaking readiness for production is the question of error and error correction. Second language acquisition research tells us clearly that errors are inevitable, and that they will be plentiful in early stages. To give the reader an estimate, in an experiment we conducted at Queens College, we found approximately one error for every five words in compositions written by ESL students in a placement examination for our extension course (Krashen et al., 1978). The better students averaged about one error for every ten words, and the least proficient about one error for every two words! A sure method of raising the filter is attempting to correct errors, especially in beginning stages and especially in spoken language! Error correction is, unfortunately, the profession\u0026rsquo;s typical reaction to error, and in my view it has been a serious mistake. There are several reasons why it is a mistake. We focus here on what is probably the most serious flaw in error correction, its effect of the affective filter.\nError correction has the immediate effect of putting the student on the defensive. It encourages a strategy in which the student will try to avoid mistakes, avoid difficult constructions, focus less on meaning and more on form. It may disrupt the entire communicative focus on an exchange. This was brought home to me in a demonstration I often employ to illustrate how the Input Hypothesis applies to classroom teaching. In the demonstration, which I have borrowed from Steven Sternfeld, I tell the audience that I am going to give them two lessons in a foreign language (I usually use German). For the first lesson, I simply start talking, saying things like \u0026ldquo;I am now going to give you a German lesson, but first of all let me tell you something about the German language, etc. etc.\u0026rdquo; This is done entirely in German, and is nearly completely incomprehensible to those in the audience who have never been exposed to German. The second lesson is something like this:\nThis is my shoe. (Point to shoe)\nThis is my hand. (Point to hand)\nThis is my head. (Point to head)\nThis is a head. (Draw picture on board)\nHere are two eyes. (Draw eyes, hold up two fingers)\nHere is a mouth. (Draw in a mouth)\nHere is a cigarette. (Draw in a cigarette)\nDo you have a cigarette for me? (Walk up to class member, make cigarette smoking motion, point to self.)\nThe point of lesson number two is that while it may not be very interesting, it is quite comprehensible, thanks to the simple language, the extra-linguistic support, etc. There is also an attempt to bring down the filter by drawing a funny head and asking for a cigarette. In the discussion following this brief lesson, I explain these things and make the claim that if such input is provide over a period of time, speech will emerge on its own. What is of interest to us here is the reaction of the audience: it is one of relief. Several people have come up to me after the lecture, and said something like: \u0026ldquo;When you said you were going to give us a language lesson, I got very nervous. I was afraid you would call on me and I would have to say something, and I would make a mistake.\u0026rdquo; What this tells me is that language lessons inspire fear even among professional language teachers, and one of the reasons for this\n75\nis our insistence on early speaking and our attitudes towards errors. Why make students suffer from procedures that are unpleasant even to us?\nThere is more to say on the topic of error correction; it has some advantages, and other disadvantages, and we will look at these later on when we discuss conscious learning in the classroom What needs to be said here is only that error correction is not the basic mechanism for improving second language performance; rather, we acquire via comprehensible input, according to the theory. Since overuse of correction has such negative effects for acquisition, and since error correction is not of direct benefit to language acquisition (see Chapter II, discussion of hypothesis one), a safe procedure is simply to eliminate error correction entirely in communicative-type activities, a procedure used with great success in Terrell\u0026rsquo;s Natural Approach. Improvement will come without error correction, and may even come more rapidly, since the input will \u0026ldquo;get in\u0026rdquo;, the filter will be lower, and students will be off the defensive.\n2 . PROVIDE TOOLS TO HELP STUDENTS OBTAIN MORE INPUT\nOur responsibility goes beyond the language classroom.15 Indeed, as I have stated earlier, our task is to provide the students with the tools they need to continue improving without us. We need to provide enough input so that they can gain the linguistic competence necessary to begin to take advantage of the informal environment, the outside world. In other words, they need to know enough of the second language so they can understand significant portions of non-classroom language. Building their linguistic competence to this point, however, is not enough.\nEven if we do succeed in bringing our students to this stage, they will have problems in using the language on the outside. They will still not understand a great deal of the input they hear, even if it is modified. They will find themselves at a loss for words, and will make mistakes at all levels. If we focus only on providing the input for purely \u0026ldquo;linguistic\u0026rdquo; competence, we will have students who avoid contact with native speakers for fear they will not understand much of what is said to them, and who will have real problems when they are engaged in conversation, including painful silences while they search for words, confusion and embarrassment due to misunderstanding, etc.\nThis is, I think, the typical situation in the foreign language teaching scene in the United States. After two years of instruction, the student who is even willing to participate in a conversation with a speaker of the language he or she has studied is rare! The solution to this problem is to give our students the tools they need to overcome these difficulties, to make them conversationally competent. By giving them the means of managing conversations, we can help them to continue improving by allowing them to participate in conversation despite their inadequacies. We can prepare them for the certainty that they will not be able to find the right word, that they will not understand everything, and we can help insure that they will continue to obtain comprehensible input.\nWhat are the tools students need to manage conversation and thus continue to gain input outside the classroom? In other word, how can we help our students to converse despite less than perfect competence?\nScarcella (forthcoming) has stated that there are at least two ways conversational competence can help the acquirer gain more comprehensible input: devices that help control the quantity of input, and devices that help control the quality. The former will help the acquirer get more input, the latter will help to make the input comprehensible\nComponents of conversational competence included under the quantity category include ways of starting conversations (greetings) and ways of keeping conversations going (e.g. politeness formulae). Scarcella\u0026rsquo;s subject Miguel, a 21 year old speaker of English as a second language, despite only modest \u0026ldquo;linguistic\u0026rdquo; competence, was quite adept at these tools of conversational competence, as the following brief excerpt shows:\nMiguel: Hi! How are ya?\nNS: Okay.\nMiguel: What\u0026rsquo;s new?\nNS: Not much. Had a test today.\nMiguel: Oh that\u0026rsquo;s too bad. What test?\nMiguel, by using a few well-chosen routines, is able to initiate and maintain conversations. Second language performers such as Miguel are not the rule, however, as research has shown that second language acquirers often have surprising and serious gaps when it comes to conversational competence (see over).\nThere are various techniques that are used to make input more comprehensible, to control the quality of the input. Perhaps the most obvious is simply asking the native speaker for help, \u0026ldquo;getting the native speaker to explain parts of the conversation\u0026hellip; by using discourse devices\u0026rdquo; (Scarcella, p. 5). These devices range from focussing on a single problem word by repeating\nit, as in\nNS: Salvador Dali also put out a cookbook because he is a great expert on cuisine.\nMiguel: (looking confused): Cookbook?\nNS: (picking up a cookbook): Recipes from Maxime\u0026rsquo;s, places like that. (Scarcella, p. 5) to utterances such as \u0026ldquo;What?\u0026rdquo;, or \u0026ldquo;I don\u0026rsquo;t understand.\u0026rdquo;\nScarcella also notes that the quality of input can be improved by the use of \u0026ldquo;back channel cues\u0026rdquo;, cues that provide the native speaker with evidence that the conversational partner is indeed following the conversation. These include verbal cues such as \u0026ldquo;Uhuh\u0026rdquo;, \u0026ldquo;Yeah\u0026rdquo;, and non-verbal cues such as head nodding at appropriate time and eye gaze behavior.\nFinally, there are conversational strategies that avoid incomprehensible input, including ways of changing the subject to something easier to understand or more familiar to the acquirer. Scarcella\u0026rsquo;s subject Miguel is quite good at this, as the following demonstrates:\nNS: \u0026hellip; I like classical music too\u0026ndash;Beethoven, Schubert\u0026ndash;you know that kinda stuff. Miguel: You play the piano?\nJoe: Yeah.\nMiguel: Me too.\nF. \u0026ldquo;Teaching\u0026rdquo; Conversational Competence\r#\r\rKnowledge of the components of conversational competence is one thing. Developing conversational competence in students is another. The question that needs to be asked here is whether conversational competence is learned or acquired.\nThere are good arguments, I think, against the hypothesis that all of conversational competence is learnable (see also discussion in Scarcella,\nforthcoming). First, it is simply too complex. As Scarcella points out:\n\u0026ldquo;Most discourse rules and strategies are very complex, characterized by vocabulary, pronunciation, and prosodic features, features of non-verbal communication, and, perhaps to a lesser degree, syntactic features. Moreover, all of these features may vary according to the social context. For instance, some greetings are appropriate in some situations, but not in others. They are sometimes shouted, and sometimes spoken quite stiffly. In any given situation, an appropriate greeting depends on a variety of factors. These include: the person being greeted, the time of day, the location and the interaction, other people present, and the sort of interaction which is expected (pleasant, scornful, etc.)\u0026rdquo; (p. 10).\nSecond, even if the student manages to learn some rules of conversational competence, they will not always be available when they are needed: in Monitor-free situations.\nMost likely, the non-universal aspects of conversational competence have to be acquired. An initial hypothesis is that they are acquired the same way grammar is, via comprehensible input, and that the requirements presented in this chapter need to be satisfied for the acquisition of conversational competence as well, a very difficult task given the time and discourse constraints of the classroom.\nIt is possible, however, that a small sub-set of conversational management tools can be directly taught, either as rules or as memorized routines, as long as they are easy to learn (see section on learning, to follow). These include routines for starting a conversation, some pause filters, and expressions that ask for help (Scarcella, p. 11). Also, a host of in-class and out-of-class activities have been introduced in recent years to encourage conversational competence.\nMy main point in this section is that conversational competence gives students the tools they need to manage conversation, and is thus an essential part of instruction, since it helps to insure that language acquisition will take place outside of class, and after the instructional program ends. Our responsibility does not end with the completion of the semester: indeed, in my view, the purpose of language instruction is to provide students with what they need so that they can progress without us.\nNotes\r#\r\r  As detailed in Chapter II, speech production can come from any of three different sources. First, we can use our acquired competence as illustrated in the Monitor model for production in Chapter II. According to the input hypothesis, this sort of production takes some time to develop. Another way is via memorized patterns and routines (see Krashen and Scarcella, 1978). A third way is by extensive use of first language structures, as explained n Chapter II. The latter two methods of speech production are ways of \u0026ldquo;performing without competence\u0026rdquo; (borrowing R. Clark\u0026rsquo;s terminology). A second language performer can \u0026ldquo;learn to speak\u0026rdquo; very quickly using these methods, and they are explicitly encouraged by some techniques. They are severely limited modes, however. (See discussion in Chapter II, Krashen and Scarcella, 1978, and Krashen 1981.)\n  This raises the interesting question of whether participation in conversation is even practically necessary for truly successful second language acquisition. It probably is. In addition to being an effective means of obtaining comprehensible input, conversation offers some other real advantages that will become clearer as we proceed in this chapter. Scarcella (forthcoming) points out that there are many aspects of \u0026ldquo;communicative competence\u0026rdquo; that are probably not acquirable by observation and input alone (see discussion later in this chapter). Also, Scarcella points out that real conversation entails \u0026ldquo;a high degree of personal involvement\u0026rdquo;, what Stevick (1976) terms \u0026ldquo;depth\u0026rdquo; and a lowered affective filter.\n  In a review of the science fiction literature, Hatch (1976) points out several examples in which authors assume that it is possible to acquire human language by listening to radio broadcasts. Even these authors seem to understand, however, that acquiring language by listening to incomprehensible input is an ability possessed only by certain aliens with different, and apparently superior \u0026ldquo;language acquisition devices\u0026rdquo;.\n  There are anecdotal cases of people who have picked up second languages via television. Larsen-Freeman (1979), for example, cited a case of a German speaker who acquired Dutch via TV. This is not at all strange, as much input in Dutch would be comprehensible to a speaker of such a closely related language. Note that I am not claiming that it is impossible to acquire language from TV. I am only saying that comprehensible input is necessary for acquisition and that television provides little comprehensible input for a beginner. Intermediate level students may profit quite a bit from television and even radio.\n  Another way teachers help students understand messages containing structures that are \u0026ldquo;beyond\u0026rdquo; them is by emphasizing vocabulary. Both Evelyn Hatch and I have stated the argument for increased vocabulary work in recent years (Hatch, 1978a; Krashen, 1981), and our argumentation is, I think, similar. While knowledge of vocabulary may not be sufficient for understanding all messages, there is little doubt that an increased vocabulary helps the acquirer understand more of what is heard or read (see e.g. Ulijn and Kempen, 1976; Macha, 1979, on the role of vocabulary in reading comprehension). Thus, more vocabulary should mean more comprehension of input, and more acquisition of grammar. This \u0026ldquo;new view\u0026rdquo; is quite different from earlier positions. Language teachers had been told to restrict introduction of new vocabulary in order to focus on syntax. Now we are saying that vocabulary learning will actually contribute to the acquisition of syntax.\nThe practical implications of this position are not clear to me, however. Should we teach vocabulary in isolation in an effort to boost the amount of input that is comprehensible?\nUnfortunately, there is little research that speaks directly to the question of how\n  vocabulary is best acquired, and, most important, retained. There is some agreement among teachers that vocabulary should be taught in context, rather than by rote memorization of list (see Celce-Murcia and Rosenzweig, 1979, for several techniques), but it may even be the case that vocabulary should not be directly taught at all! It may be the case that if we supply enough comprehensible input, vocabulary acquisition will in fact take care of itself.\nLet me restate this suggestion in the form of an informal experiment: Given ten minutes of study time (waiting for a bus, etc.), which activity would be more useful for the language acquirer interested in long-term retention of vocabulary?\n  Rote learning of a list, using flash cards or some equivalent technique.\n  Reviewing a story that has \u0026ldquo;new words\u0026rdquo; carefully included (Contextualization).\n  Reading for pleasure, trying only to understand the message and looking up new words only when they seem to be essential to the meaning or when the acquirer is curious as to their meaning.\nMethod (3) relies on comprehensible input to supply new vocabulary in enough frequency, and to help the acquirer determine the meaning. In method (3) there is no conscious focus on vocabulary, only on meaning. The prediction (hope?) is that really important words will reoccur naturally and their meanings will be made increasingly obvious by the context. It does not exclude the possibility that the acquirer may be helped by occasional glances at the dictionary or occasional definitions by a teacher.\n  The American Language Institute at USC, for example, offers a course in typing along with its offerings in English as a Second Language for foreign students.\n  There may be further opportunities for providing optimal input for second language acquirers at the university level, which we will discuss in Chapter V.\n  For some Monitor users and linguists, explicit grammatical information is, oddly enough, interesting and relevant, since such acquirers believe it will help their performance. In this case, the medium is the message. If a course on the structure of the target language is taught in the target language, and if the students are \u0026ldquo;analytic\u0026rdquo; types, the course will be a success. (See comments in Krashen, 1980, and in Chapter V.)\n  There are exceptions, examples of comprehensible input in which i + 1 may not be present. These include situations in which the discourse is limited, and in many instrumental uses of language in which familiarity with a few routines and patterns may suffice for successful communication (e.g. dealing with gas station attendants, clerks, etc.).\n  \u0026ldquo;Internalization\u0026rdquo;, in my interpretation, seems to mean the acquisition of a rule that was first learned, where learning is assumed to have caused the subsequent acquisition. According to the theory of second language acquisition presented in Chapter II, this does not occur. I have discussed this in several technical papers (Krashen, 1977) and will review this point in a later section.\n  Another analogy that comes to mind is \u0026ldquo;shotgun\u0026rdquo; versus single bullet. The former has a better chance of hitting the target.\n  Varvel (1979) describes a silent period in formal instruction (Silent Way methodology) that lasted considerably longer, indicating that there may be a fair amount of individual variation in the duration of the silent period for adults in language classes:\n\u0026ldquo;There was a woman from Taiwan who after several weeks was still conspicuously silent in class. She never talked, and when called upon would only answer in a whisper, saying only what was required. It was clear, however, that she was one of the most attentive students in the class, had a clear understanding of what was being done, and seemingly enjoyed the class. She also had a positive attitude towards what and how she was learning. At no time was she coerced into active participation.\n\u0026ldquo;Then one day in the ninth week of school she sat in the front row and actively participated throughout the whole hour. From that point on, she continued to participate actively in a more limited way and at times helped others and was helped by others\u0026hellip;\u0026rdquo; (p. 491)\nWhile there may have been other reasons for this student\u0026rsquo;s silence, this example suggests that the silent period should be respected, and that some students develop speaking readiness later than others.\n  Given the same amount of comprehensible input, the child\u0026rsquo;s silent period in second language acquisition may turn out to be longer than the average adult silent period for other reasons. What I am suggesting here is that the silent period in child second language acquisition would not be as long if more of the input the child hears is comprehensible.\n  Note that if we assume that an acquirer in the natural environment receives about two hours per day of comprehensible input, 720 hours translates into about one year \u0026ldquo;abroad\u0026rdquo;. This assumes that classtime = comprehensible input, which may not be true with the traditional methods the FSI chart is based on. It is, however, in accord with the informally accepted idea that a year abroad will result in a fair degree of fluency in the case of European languages.\n  The material contained in this section is simply my summary of what I have learned from discussions with Steven Sternfeld, Robin Scarcella, and Batyia Elbaum. I thank them not only for the information and intellectual stimulation, but also for their patience.\n  Chapter IV\nThe Role of Grammar, or Putting Grammar in its Place\nAs should be apparent by now, the position taken in this book is that second language teaching should focus on encouraging acquisition, on providing input that stimulates the subconscious language acquisition potential all normal human beings have. This does not mean to say, however, that there is no room at all for conscious learning. Conscious learning does have a role, but it is no longer the lead actor in the play. The purpose of this section is to discuss what that role is, how we can put conscious learning, or \u0026ldquo;grammar\u0026rdquo; in its proper place in the second language program.\nA. Learning Does Not Become Acquisition\r#\r\rChapter II attempted to make clear what learning does and what it does not do in the theoretical model of second language performance. According to the Monitor model for performance, conscious learning acts as an editor, as a Monitor, \u0026ldquo;correcting\u0026rdquo; the errors, or rather what the performer perceives to be errors, in the output of the acquired system. This can happen before the sentence is spoken or written, or after. Conscious knowledge of rules is therefore not responsible for our fluency, it does not initiate utterances.\nA very important point that also needs to be stated is that leaning does not \u0026ldquo;turn into\u0026rdquo; acquisition. The idea that we first learn a new rule, and eventually, through practice, acquire it, is widespread and may seems to some people to be intuitively obvious. This model of the acquisition process was first presented to me when I was a student of TESL, and seemed to be very sensible at the time. It was, I thought, exactly the way I learned languages myself. I accepted as penetrating insight Carroll\u0026rsquo;s characterization of how language learning proceeds from the point of view of the then new \u0026ldquo;cognitive-code\u0026rdquo; school of thought:\n\u0026ldquo;Once the student has a proper degree of cognitive control over the structure of a language, facility will develop automatically with the use of the language in meaningful situations\u0026rdquo; (Carroll, 1966 , p. 102).\nAs mentioned in Note 10 of the previous section, this process of converting learned rules into acquired rules was called \u0026ldquo;internalization\u0026rdquo;.\nDespite our feelings that internalization does occur, the theory predicts that it does not, except in a trivial way. Language acquisition, according to the theory presented in Chapter II, happens in one way, when the acquirer understands input containing a structure that the acquirer is \u0026ldquo;due\u0026rdquo; to acquire, a structure at his or her \u0026ldquo;i + 1\u0026rdquo;.\nThere is no necessity for previous conscious knowledge of a rule. (The trivial sense in which a conscious rule might \u0026ldquo;help\u0026rdquo; language acquisition is if the performer used a rule as a Monitor, and consistently applied it to his own output. Since we understand our own output, part of that performer\u0026rsquo;s comprehensible input would include utterances with that structure. When the day came when that performer was \u0026ldquo;ready\u0026rdquo; to acquire this already learned rule, his own performance of it would qualify as comprehensible input at \u0026ldquo;i + 1\u0026rdquo;. In other words, selfstimulation!)\nIn addition to the fact that the theory does not directly predict that learning needs to precede acquisition, there are very good reasons for maintaining this position that emerge from observing second language performers.\nFirst, we often see acquisition in cases where learning never occurred. There are many performers who can use complex structures in a second language who do not know the rule consciously and never did. There have been several case histories in the second language acquisition literature that illustrate this phenomenon, one which I think is quite common.\nEvelyn Hatch\u0026rsquo;s students, Cindy Stafford and Ginger Covitt, interviewed one such second language performer, \u0026ldquo;V\u0026rdquo;, an ESL student at UCLA, who exhibited considerable competence in English, but who admitted that he had conscious control of very few, if any, rules. The\nfollowing exchanges come from an interview with \u0026ldquo;V\u0026rdquo;, which takes place while one of the authors is reviewing his composition errors (from Stafford and Covitt, 1978; also quoted in Krashen, 1978):\nInterviewer: (When you write a composition)\u0026hellip; do you think of grammar rules? Do you think \u0026ldquo;Should I have used the present tense here or would the present continuous be better\u0026hellip;\u0026rdquo;\nV: \u0026ldquo;I don\u0026rsquo;t refer to the books and all that, you know. I just refer it to this, uh, my judgment and\u0026hellip; sensing if I\u0026rsquo;m writing it right or wrong. Because I really don\u0026rsquo;t know\u0026hellip; what where exactly how\u0026hellip; the grammatical rules work out.\nLater in the interview, one investigator asks:\nInterviewer: Do you think grammar rules are useful?\nV: Useful? Yeah. When you want to write they are very very useful.\nInterviewer: But you don\u0026rsquo;t use them when you write.\nV: Yeah, I know. I don\u0026rsquo;t use them\u0026hellip; I don\u0026rsquo;t know how to use them.\nAnother good example of an \u0026ldquo;under-user\u0026rdquo; of the conscious grammar is Hung, studied by Cohen and Robbins (1976), who stated:\n\u0026ldquo;I never taught any grammar. I guess I just never learned the rules that well. I know that every time I speak it\u0026rsquo;s pretty correct, so I never think about grammars. I just write down whatever I feel like it. Everytime I write something I just stop thinking. I don\u0026rsquo;t know which (rule) to apply\u0026rdquo; (p. 59).\nNot only is what Hung says revealing, but so is how he says it. There are, for sure, errors in this passage, but there is also control of fairly complex syntax and a real ability for self-expression. (Not all under-users succeed, of course; see, for example, Schumann\u0026rsquo;s description of Alberto in Schumann (1978a).) If conscious rules have to come first, how can we explain cases such as V, Hung, and others? (For other case histories, see Krashen, 1978; Stafford and Covitt, 1978; Kounin and Krashen 1978.) Unless all cases such as these can be shown to be instances of the use of the first language or routines and patterns the existence of such cases show that previous conscious learning is not necessary for language acquisition.\nSecond, we also see learning that never seems to become acquisition. Many fine ESL performers, while they have acquired a great deal of English, also know many conscious rules. They nevertheless make what they consider to be \u0026ldquo;careless\u0026rdquo; errors on rules that are linguistically quite straightforward. This occurs when the performer has learned a rule, but has not acquired it. This happens typically with late-acquired items, such as the third person singular ending on regular verbs in English (\u0026ldquo;He goes to work every day.\u0026quot;). What is particularly interesting is that these performers may have known the rule and have practiced it for many years. Even after thousands of correct repetitions, and with a thorough understanding of the rule, such performers still make \u0026ldquo;careless\u0026rdquo; mistakes on certain items. What has prevented learning from \u0026ldquo;becoming\u0026rdquo; acquisition in these cases is the fact that the learned rule is still beyond the acquirer\u0026rsquo;s i + 1.\nA case history that illustrates this situation very well is that of \u0026ldquo;P\u0026rdquo; (Krashen and Pon, 1975). P was an excellent Monitor user (an optimal user, as described in Chapter II), an adult with a BA in Linguistics with honors, whose written English appeared nearly native-like. In casual conversation, however, P made occasional \u0026ldquo;careless\u0026rdquo; errors on \u0026ldquo;easy\u0026rdquo; rules that she had known consciously for twenty years. Thus, even well-learned, well-practiced rules may not turn into acquisition.\nAn explanation of P\u0026rsquo;s problem is that the items she missed in casual conversation were those that are late-acquired, and her acquisition, while very advanced, had simple not gone the final few steps in syntax and morphology. She had learned the rules well, however, and was able to supply them under conditions where she could Monitor.\nA third reason for doubting that acquisition requires previous learning is the fact that even the best learners master only a small subset of the rules of a language. As discussed earlier (Hypothesis 3, Chapter II), even professional linguists admit that their conscious knowledge of even the best studied languages is imperfect, and discoveries of new rules are reported with every issue of technical journals in linguistic theory. Linguists often succeed in describing, after years of analysis, what many second language performers have already acquired.\nMy explanation for these phenomena is that while learning may often precede acquisition, it need not, and in fact may not even help directly. Rather, we acquire along a fairly predictable natural order, and\nthis occurs when we receive comprehensible input. Occasionally, we learn certain rules before we acquire them, and this gives us the illusion that the learning actually caused the acquisition.\nProfessional language teachers, with their fascination for the structure of language, and with the pleasure they derive from the mastery and use of conscious rules, are often not even aware that acquisition without prior conscious learning is possible. This was my unexamined assumption as well. The procedure described earlier seemed right and reasonable to me at one time: language learning, in the general sense, occurred when one first consciously grasped a rule, then practiced it again and again until it was \u0026ldquo;automatic\u0026rdquo;. (This is actually deductive learning; there is another possibility, namely, \u0026ldquo;inductive\u0026rdquo; learning; see discussion below.) The great contribution of linguistics was to discover and describe rules, which \u0026ldquo;applied linguists\u0026rdquo; could transmit to language teachers, who, in turn, could tell students about them.\nOne experience that helped to change my thinking occurred when I was teaching English as a second language to an \u0026ldquo;advanced\u0026rdquo; adult education class at Queens College. As a member of a team, my responsibility was \u0026ldquo;structure\u0026rdquo;. Since I was, at the time, the director of the English Language Institute at Queens, I felt obliged to present an impressive series of lessons that demonstrated my control of the subject. I therefore chose to concentrate on the verb system, and presented a complete survey of all tenses.\nThe first lesson of the session was focussed on the present progressive tense. My objective was to inform my students that the present progressive had three meanings: (1) a current, on-going action that would soon be completed, (2), an action that began some time ago in the past and may or may not be taking pace at the moment, and would end sometime in the future, and (3) future tense. I illustrated this using the familiar time flow diagram\nand by showing that sentences such as\nJohn is playing the violin.\nwere three ways ambiguous:\n What is that noise from the other room? (John is playing the violin. ) What\u0026rsquo;s John doing this summer? (He is playing the violin for the local symphony. ) What\u0026rsquo;s John doing tomorrow? (He\u0026rsquo;s playing the violin in the talent show. )  None of my advanced ESL students knew this rule consciously. In fact, very few people do. I have presented this example several times at lectures to practicing ESL teachers, and I often ask those who consciously \u0026ldquo;know\u0026rdquo; the rule that the progressive is three ways ambiguous to raise their hands. Very few do, and those that do claim they know it have usually just finished teaching it in class.\nWhat was very interesting was that a significant number of students had a \u0026ldquo;Eureka\u0026rdquo; experience. After I explained the rule, they would remark: \u0026ldquo;That\u0026rsquo;s right\u0026hellip; it is three ways ambiguous\u0026hellip; how about that!\u0026rdquo;, or would make similar comments. My interpretation is that these students had already subconsciously acquired the progressive tense and its three meanings, and were confirming that their acquisition was correct. I had, in other words, succeeded in providing learning where acquisition was already present.\nI would like to point out several things about this phenomenon. First, my students had apparently acquired the rule without having first learned it. (It could be argued that they knew it once but had forgotten it, and that this temporary learning had been essential, or at least useful, in acquiring the rule. This is possible, but unlikely, as all three functions are not usually taught. Another unlikely possibility is transfer from the first language. Most of the first languages of my students that semester did not have the progressive tense.) Second, those who learned what they had already acquired thought they were gaining a great deal from the class. This sort of knowledge is very satisfying to many people (including me). It is not, however, language teaching, even though it is of some value. (We return to this topic, which I refer to as \u0026ldquo;language appreciation\u0026rdquo;, later in this chapter.)\nLearning sometimes precedes acquisition in real time: A rule that is\n88\neventually acquired may have been, at one time, learned only. As I have maintained elsewhere (Krashen, 1977), this certainly does occur, but by no means establishes the necessity of prior learning for acquisition. Just because event A preceded event B does not demonstrate that A caused B. We see many cases of acquisition without learning, learning (even very good learning that is well practiced) that does not become acquisition, and acquired knowledge of rules preceding learning.\nB. The Place of Grammar\r#\r\r\u0026ldquo;Grammar\u0026rdquo;, a term I will use as a synonym for conscious learning, has two possible roles in the second language teaching program. First, it can be used with some profit as a Monitor. We will discuss this use in more detail in the section that follows. A second use for grammar is as subject-matter, or for \u0026ldquo;language appreciation\u0026rdquo; (sometimes called \u0026ldquo;linguistics\u0026rdquo;), and we will discuss this role later on. Neither role is essential, neither is the central part of the pedagogical program, but both have their functions.\nSeveral issues will be discussed in relation to teaching grammar for Monitor use: when rules can be used, which rules should or can be learned, what the effects of Monitor use are, and what we can expect in terms of Monitor efficiency.\n1. GRAMMAR FOR MONITOR USE: WHEN THE MONITOR IS USED\nAs stated in Chapter II (Hypothesis 3), one of our goals in pedagogy is to encourage optimal Monitor use. We would like our students to utilize conscious rules to raise their grammatical accuracy when it does not interfere with communication. Stated differently, the optimal Monitor user knows when to use conscious rules.\nAs mentioned earlier, one necessary condition for successful Monitor use is time. It takes real processing time to remember and apply conscious rules. We should not expect most students to successfully apply conscious rules to their output during oral conversation-there is, obviously, little time. People who do attempt to think about and utilize conscious rules during conversation run two risks. First, they tend to take too much time when it is their turn to speak, and have a hesitant style that is often difficult to listen to. Other overusers of the\n89\nMonitor, in trying to avoid this, plan their next utterance while their conversational partner is talking. Their output may be accurate, but they all too often do not pay enough attention to what the other person is saying!\nSome people are better than others at Monitor use, and may actually be able to successfully use a fair number of conscious rules \u0026ldquo;on line\u0026rdquo;. Most people run the risk of seriously endangering the success of the conversation when they try to Monitor during casual talking. (Success in Monitor use in free conversation also depends on other factors\u0026ndash;one is the difficulty or complexity of the rule, which we discuss below. A second is the topic: I find it much easier to pay attention to the form of what I say in a second language when I am talking about something I am very familiar with and have discussed before, e.g. second language acquisition.)\nThe place for Monitor use is when the performer has time, as in writing and in prepared speech. As stated earlier, simply giving performers time does not insure that they will use the conscious Monitor; hence, condition 2 in Chapter II: The performer must be thinking about correctness or focussed on form. When given time, and when focussed on form, some people can use conscious grammar to great advantage. In the case of the second language performer who has acquired nearly all of the grammar of the second language, but who still has some gaps, the use of the conscious grammar can fill in many of the non-acquired items. This can, in writing at least, occasionally result in native-like accuracy.\nI have often referred to \u0026ldquo;P\u0026rdquo;, discussed above, as a performer who was able to do this. Despite her accent, and occasional morphological errors in free speech, P\u0026rsquo;s writing (done in class) was nearly flawless. I have known many professionals who also use conscious grammar this way, colleagues in linguistics who speak with slight imperfections but whose writing is nearly error-free. Some very interesting cases involve specialists in grammar, in formal linguistics, scholars who certainly consciously know many of the rules they violate in free conversation. Two cases I personally know have, in fact, published papers on the theory of grammar that rely heavily on English, testifying to their deep and thorough grasp of English syntax. Yet, in unmonitored free speech, third person singulars drop off, the possessive marker is occasionally\nmissing, etc. Both scholars publish all of their current work in English and do not consult anyone to review their papers for errors, nor is this necessary.\nMy own experience may be helpful to readers. I am, at the time of this writing, an \u0026ldquo;intermediate\u0026rdquo; level speaker of French as a second language. (This means, according to my definition, that I can converse comfortably with a monolingual speaker of French as long as (s)he makes some compensation. I cannot eavesdrop very well and have some trouble with radio and films. Also, my output is fairly fluent, but not error-free.) Many people at this level, including myself, make errors on rules that are easy to describe, but that are apparently fairly late-acquired. One rule like this I have noted is the simple contraction rule: de + le = du.\nI, and my classmates in intermediate conversational French at USC, occasionally miss this one in free conversation. On the occasions when I write French, however, I get it right every time. (My accuracy or difficulty order changes when I use my conscious knowledge of French grammar. Correctly applying the de + le = du rule raises this item from a low position in the difficulty order to one near the top. This is exactly what I attempted to say in Chapter I, Hypothesis 3, in discussing distortions of the natural order in Monitored conditions. I differ from the average subject in that I do not require a discrete-point grammar test to focus me on form. Most readers of this book are probably like this as well.)\nThis kind of behavior is natural and normal. What is tragic, in my opinion, is that teachers expect perfect performance of such simple, yet late-acquired items in unmonitored performance. Even quite competent second language users, such as P, will \u0026ldquo;miss\u0026rdquo; such items in conversation. We often see, however, beginners, students who can barely converse in the target language, struggling to make correct subject-verb agreement in what are termed \u0026ldquo;communicative\u0026rdquo; exercises, fearful of the teacher\u0026rsquo;s shattering corrections. The cause of this torture is, first of all, a confusion between linguistic simplicity and order of acquisition\u0026ndash;it is not at all the case that the more linguistically simple an item is, the earlier it is acquired. Some very \u0026ldquo;simple\u0026rdquo; rules may be among the last to be acquired. Second, the cause is also a failure to distinguish\n91\nbetween acquisition and learning, a failure to realize that conscious knowledge of an item bears no relationship to a performer\u0026rsquo;s ability to use it in unmonitored speech. This ability comes from acquisition, and acquisition come from comprehensible input, not from error correction. The result of such treatment is, at best, overuse of the Monitor. At worst, it results in the establishment of such a strong Affective Filter that acquisition is impossible.\n2 . WHAT CAN BE MONITORED\nCondition three for Monitor use (Chapter II, Hypothesis 3) is relevant to discussing this point. In order for performers to Monitor successfully, they must know the rule they are applying. To expand on a point made in Chapter II, let me attempt to illustrate just how drastically this requirement limits Monitor use. Let this circle represent all the rules of a welldescribed language, such as English:\nLet us now consider all the rules of English that the best linguists \u0026ldquo;know\u0026rdquo;, or have succeeded in describing. How many rules did Jespersen (ever) know, how much of English have scholars such as Noam Chomsky described? While Chomsky often says that he and his colleagues have only described \u0026ldquo;fragments\u0026rdquo; of English, we will give the formal linguists the benefit of the doubt, and represent their accomplishments as a proper subset of the first circle\nNow let us consider the rules that \u0026ldquo;applied linguists\u0026rdquo; know, where applied linguists here refers to the scholar whose task is to study the\nwork of the formal, theoretical linguist, and present it to the language teacher, and perhaps also to the language student. Let the additional smaller circle in the next figure represent what the applied linguist knows. This will have to be a proper subset of what the formal linguist knows, since the full-time job of the theoretician is to seek out new rules, while the applied linguist spends a great deal of time explaining this work:\nThe next circle represents all the rules that the most knowledgeable language teachers know. This will be a proper subset of the circle introduced in the last figure. Teachers, after all, have a great deal to do besides study the work of applied linguistics:\nStill another circle represents the number of grammar rules that the best teachers actually teach. This is, in turn, a proper subset of the set of circles they know, since teachers will undoubtedly present to their students only a part of their knowledge:\nWe draw next still another circle, which represents all the rules that the best students actually succeed in learning. We should even put in\none last circle, all the rules that students can carry around in their heads as mental baggage and actually use in performance:\nBy now, we are down to a very small circle, even giving every group discussed the benefit of the doubt. Even our best students will be able to learn and utilize a small part of the grammar of a language as a conscious Monitor.\nWe can draw an even smaller circle for some people. As we saw in the discussion of individual variation in Chapter II, some performers are either less willing or less able to utilize conscious rules. At the opposite extreme from the professional linguist or language teacher (see, for example, Yorio, 1978), we have the Monitor under-user, the performer who does all self-correction by \u0026ldquo;feel\u0026rdquo; and has no control of conscious grammar. Perhaps even more extreme is the incompetent Monitor user, the performer who thinks (s)he knows the rules but has them (or at least many of them) wrong. This may merely be a problem of nomenclature (e.g. Stafford and Covitt\u0026rsquo;s subject who kept referring to \u0026ldquo;dead objects\u0026rdquo; instead of direct objects), but may be more serious. We should be aware that confusions may exist even for rules that appear to us to be very simple, and for rules that the performer may have already acquired and can utilize in an unmonitored situation. Such cases illustrate vividly the contrast between acquisition and learning.\n( a) Incompetent Monitor use\nSeliger (1979) reported a simple, yet interesting experiment which confirms the existence of incompetent Monitor users. The task was naming: Subjects were shown pictures and asked to say what the object pictured was in English (e.g. It\u0026rsquo;s a pen). Seliger noted whether the subjects applied the \u0026ldquo;a/an\u0026rdquo; rule and whether they correctly used an when the following noun began with a vowel. The subjects were then asked, after completing the task, if they had noticed that sometimes a was\ncalled for and sometimes an was called for. If they said that they did notice, they were asked to give their reasons for the distinction. (In all cases, either a or an was required. There were no cases where the zero allomorph was appropriate.) Seliger\u0026rsquo;s subjects included 29 monolingual English speaking children, ages 3 to 10.8, 11 \u0026ldquo;bilingual\u0026rdquo; children, ages 4 to 10, and 15 adult ESL students at Queens College in New York.\nIn my interpretation, this study contrasts acquisition and learning.1 * The subject\u0026rsquo;s focus in the picture naming task was on supplying vocabulary. They were not told in advance that grammatical accuracy was an issue and certainly the a/an rule was not presented or discussed in advance. The task, then, encouraged use of the acquired system; it was relatively \u0026ldquo;unmonitored\u0026rdquo;. This interpretation is consistent with the evidence reviewed in Chapter II, which concludes that for most subjects, one needs to deliberately focus subjects on form using a device such as a discrete-point grammar test in order to bring out extensive use of the conscious grammar. Of course, since the task was an \u0026ldquo;experiment\u0026rdquo;, it is quite possible that some subjects may have been more careful than they normally would be. The results of the direct question about a and an, however, show that it is unlikely that subjects were accessing much conscious knowledge while identifying pictures.\nSeliger reports \u0026ldquo;no relationship\u0026rdquo; between performance on picture identification and whether the subjects could state a rule! Many subjects did not \u0026ldquo;do what they say they do\u0026rdquo;. If their responses to the post-task question represent conscious learning, this result confirms just how limited learning is for some people. Let us examine the results.\nAs we would expect from the discussion of age in Chapter II, none of the bilingual children produced correct conscious rules for a/an. This is consistent with the claim that preformal operations children have less extensive meta-awareness of grammar. The potential for extensive Monitor use is hypothesized to emerge with formal operations, at around puberty.\nAmong the adults, three of the four who \u0026ldquo;knew\u0026rdquo; the rule (could verbalize it after the test) \u0026ldquo;produced no instances on the picture test to show they understood how the rule was to be used\u0026rdquo; (p. 364). These subjects, in other words, had learned the a/an distinction but had not\n* Superscript numbers refer to Notes at end of chapters.\nacquired it. They were unable, moreover, to apply this conscious knowledge to the picture identification task, since the necessary conditions for successful Monitor use were not met (condition three = know the rule, was met, but one = time, and two = focus on form, were not). This case is exactly analogous to the de + le = du case described above. These three students, I would predict, would perform well on this item under different conditions, i.e. if given a discrete-point grammar test that focussed them on form, containing items such as:\nFinally, and what is of most interest here, two children and one adult performed well on the picture identification test but produced incorrect rules (e.g. \u0026ldquo;You use an for something that\u0026rsquo;s alive\u0026rdquo;). The child subjects are reminiscent of other cases in the literature and may simply reflect the inability of children to induce or learn correct conscious rules (e.g. a child in one study, acquiring French as a second language, decided that feminine gender was for \u0026ldquo;everything that was good and beautiful\u0026rdquo; (Kenyeres and Kenyeres, cited in Hatch, 1978b). The adult who performed perfectly on the test may be classified as an \u0026ldquo;incompetent\u0026rdquo; Monitor user. This subject had acquired the a/an rule, but had not learned it correctly. The fact that he did not apply his conscious rule to performance worked to his benefit! I would predict that such a subject would perform worse on a test that focussed him on form. (I do not wish to imply that some learners get all rules wrong while others get them all right. Clearly, many learners have learned some rules correctly and some incorrectly.)\nWhat is remarkable here is that this subject had failed to learn what most teachers would consider to be an amazingly simple rule, yet he had apparently acquired it. This illustrates the independence of acquisition and learning, as well as just how limited learning can be for some performers.2\n( b) Rule learnability\nWe see fairly wide individual variation in the ability to use the conscious Monitor. The range goes from the professional linguist, who\nmay be able to consciously learn many rules of great complexity and even apply them while performing in a second language, to Monitor under-users and incompetent wrong-rule users. Despite this variation, we can begin to characterize the kinds of rules that are learnable for most adults, recognizing that even for super Monitor users (see e.g. Yorio, 1978), this set will be a small subset of the total number of rules in a language.\nThe professional literature supports what I think is the most reasonable hypothesis: \u0026ldquo;Learnability\u0026rdquo; is related to linguistic simplicity, both formal and functional. The rules we can learn and carry around in our heads for use as a Monitor are not those that are earliest acquired, nor are they those that are important for communication. Rather, they are the simple rules, rules that are easiest to describe and remember.\nI have pointed out elsewhere in other publications (first discussed in Krashen et al., 1978) that simplicity can be defined in at least two ways, and both definitions are relevant here. First, a rule can be formally simple. Examples of relatively simple rules include our old friends the third person singular ending on regular verbs in English, and de + le = du. These rules require only the addition of a bound morpheme (an inflection), or contraction operations. Simple deletion is also probably not difficult for the conscious Monitor.\nOther syntactic operations appear to be more difficult for the Monitor. Permutations, and movements of constituents from one part of a sentence to another are quite difficult to do \u0026ldquo;in your head\u0026rdquo; while in the middle of a conversation or even when writing for content. It is probably the case that rules requiring a great deal of movement and order change are either acquired or are never done well by most people. This applies to rules such as formation of wh- questions in English, which might involve the following separate operations: (1) placing the wh- word first; (2) performing subject-auxiliary inversion, unless there is a helping verb; (3) performing \u0026ldquo;do-support\u0026rdquo;; (4) inflecting \u0026ldquo;do\u0026rdquo; correctly for tense and number. This is a lot to remember, especially when the learner has other things on his mind, including remembering other parts of grammar (he might also be Monitoring pronunciation as well as syntax) and trying to keep up a conversation with a native speaker.\n(The reader may argue that (s)he has no problem doing all these things at the same time, and with a little practice and good teaching\neveryone else can as well. If this is what is going through your mind, you are probably a Monitor super-user. This sort of interest and ability may be what brought you into language science in the first place, and got you interested in books such as this one. You are not typical. Other readers may argue that the way to make rules such as question formation automatic is to learn and drill the components one at a time until they become automatic. This is exactly the \u0026ldquo;learning becomes acquisition\u0026rdquo; argument reviewed at the beginning of this section. I maintain that in cases where this seems to work, one of two things is happening: (1) acquisition is occurring separately and catches up to the student\u0026rsquo;s learning level; the learning that preceded the acquisition did not play any direct role, moreover, in helping acquisition develop. (2) The successful learner was a super Monitor user and very atypical.)\nSimplicity also needs to be defined in terms of meaning. Rules that are formally simple will not be easily learnable if their meanings are subtle and hard to explain. Both the form and meaning of the third person singular ending and de + le = du are straightforward. On the other hand, while the form of the definite and indefinite article in English is very simple, many of the uses of a and the are enormously complex. We certainly cannot expect ESL learners to understand, remember, and consciously apply descriptions such as that contained in Hawkins (1978), a full volume devoted to the article in English. We can also find examples in punctuation. Rules such as \u0026ldquo;capitalize the first letter of every sentence\u0026rdquo; are formally and functionally easy. Some of the uses of the comma and semi-colon, however, are difficult to describe and probably need to be acquired for effective use.\n( c) Some evidence\nThere are no studies I know of that directly probe which structures are learnable by different student populations and which are not. Several papers, however, present evidence that is quite consistent with the claim that only \u0026ldquo;easy\u0026rdquo; rules are learnable by most people.\nOne sort of evidence is provided by studies and case histories that tell us what sorts of \u0026ldquo;careless\u0026rdquo; errors second language students make, errors that involve rules that the students had formally studied and that\nthey could self-correct, given time and when focussed on form. In our terms, these are rules that have been learned but have not been acquired. They are, in all cases, what appear to be late-acquired and formally simple rules, involving mostly bound morphology. P, the optimal Monitor user we discussed earlier, made many errors on such easy items as the third person singular ending on regular verbs, the use of \u0026ldquo;much\u0026rdquo; and \u0026ldquo;many\u0026rdquo; with count and mass nouns, and the irregular past, among other errors. Two optimal Monitor users described in Cohen and Robbins (1976) also made what they themselves called \u0026ldquo;careless\u0026rdquo; errors on such items.\nBoth Ue-Lin and Eva, Chinese speaking ESL students at UCLA, had problems with the late-acquired third person singular /s/. Ue-Lin explained this omission \u0026ldquo;as a careless mistake since she reported knowing the rule\u0026rdquo; (Cohen and Robbins, 1976, p. 55). Similarly, \u0026ldquo;when Eva was shown sentences containing s deletion, she was actually able to identify the error and supply the s immediately. When asked to explain why she omitted the s she replied: \u0026lsquo;Probably just careless.'\u0026rdquo; (p. 58). Eva had a similar explanation for omitting the regular past /ed/: When presented with one of her errors on this form, also known to be late-acquired (Hypothesis 3, Chapter II), she was able to supply the correct form. After correcting one sentence. \u0026ldquo;Eva remarked that she wrote down the sentence the way she would say it: \u0026ldquo;For one thing, sometimes I would write something the way that I speak. We say a word more or less in a careless way. But if I take my time, sometimes go over it, that would be much easier\u0026hellip;\u0026rsquo;.\u0026rdquo; (p. 58). My interpretation is that given time, Eva was able to access her conscious knowledge of English, or Monitor, a procedure that can be effective for such late-acquired, simple rules.\nEva had had a fair amount of exposure to English and was considered to be advanced by Cohen and Robbins. She had lived in Australia for two and a half years and had studied English since grade 5 (at the time of Cohen and Robbins' study she was a junior in college). She also considered herself a \u0026ldquo;good language learner\u0026rdquo;. Even Eva, however, had problems with what seem to language teachers to be simple rules. In explaining her error (\u0026ldquo;I have talk to Sylvia already\u0026rdquo;) she attributed the error to being unclear about the rule. She remarked:\n\u0026ldquo;Yeah, I learned that. It\u0026rsquo;s just something I\u0026rsquo;m not good at. I think the main\nproblem is that I just learn the rule\u0026ndash;one or two years, the whole time I was going to school\u0026hellip; It was never drill enough to me\u0026rdquo; (Cohen and Robbins, p. 58). This confirms a point made earlier, and shows that while Monitor use may be limited to non-acquired, simple rules, even \u0026ldquo;good\u0026rdquo; learners may be able to use and recall only a small part of the rules we present, even those that seem transparent to us.3\nA study by Duskova (1969) also confirms that the syntactic domain of the conscious Monitor, for many people, consists of relatively simple but late-acquired items. Duskova investigated written errors in 50 Czech university level students studying English (EFL). Duskova noted that \u0026ldquo;\u0026hellip; many of the recurrent errors\u0026hellip; reflect no real deficit in knowledge, since most learners know the pertinent rule and can readily apply it, but the mechanical operation does not yet work automatically\u0026rdquo; (p. 16). This generalization applies in particular, Duskova notes, to morphological errors. Examples include the omission of plurals on nouns (relatively early acquired among grammatical morphemes, I must admit). Duskova notes that for plurals \u0026ldquo;\u0026hellip; the learner is aware of it when it is pointed out to him and is able to correct it himself\u0026rdquo; (p.20). Another example is errors in subject-verb agreement. Again, for this error, \u0026ldquo;when the learner\u0026rsquo;s attention is drawn to the fact that he has made a mistake, he is usually able to correct it\u0026rdquo; (p. 20). Other error types of this sort include confusion of past participle and infinitive, errors on irregular verbs, and adjective-noun agreement in number (e.g. this workers). In our terms, the errors reflect a failure to apply conscious rules, a failure to Monitor effectively. The students, Duskova tells us, \u0026ldquo;can certainly formulate the rule\u0026rdquo; for these error types.\nThe morpheme studies described in Chapter II also contribute to this point. As you may recall from Chapter II, changes or disturbances in the \u0026ldquo;natural order\u0026rdquo; were interpreted as intrusions of the conscious grammar. It is interesting to note just how the order was affected. In Larsen-Freeman\u0026rsquo;s study (Larsen-Freeman, 1975), morpheme orders were presented for both monitored and unmonitored conditions (a discrete-point pencil and paper grammar test, and the Bilingual Syntax Measure, respectively). In the Monitor-free condition, LarsenFreeman obtained the following order (Table 4.1) which is quite \u0026ldquo;natural\u0026rdquo;.\nTable 4.1\nMorpheme order obtained in monitor-free condition (Larsen-Freeman, 1975)\ning copula\narticle auxiliary short plural regular past third person singular irregular past long plural possessive\nCompare this to the unnatural order found in the Monitored condition (Table 4.2). (We use the writing task as an example; Larsen-Freeman\u0026rsquo;s \u0026ldquo;reading\u0026rdquo; task gives similar results.)\nTable 4.2\nMorpheme order obtained in monitored condition (Larsen-Freeman, 1975; writing)\ncopula auxiliary third person singular ing regular past irregular past article long plural short plural possessive\nThese orders differ largely due to the increase in relative rank of two morphemes, regular past and the third person singular marker, both late-acquired, or low in relative order of accuracy in the Monitor-free natural order. This interpretation is consistent with the claim that when performers focus on form they can increase accuracy in unacquired but learned parts of grammar.4\nStill more evidence comes from our composition study (Krashen, Butler, Birnbaum, and Robertson, 1978). We asked ESL students at USC to write compositions under two conditions\u0026ndash;\u0026ldquo;free\u0026rdquo; (instructions were to write as much as possible in five minutes) and \u0026ldquo;edited\u0026rdquo; (instructions were to pay careful attention to grammar and spelling and to \u0026ldquo;take your time\u0026rdquo;). Both conditions yielded natural orders for grammatical morphemes, which we interpreted as indicating little intervention\n101\nof the conscious Monitor. This was due to the fact, we hypothesized, that our subjects focussed primarily on communication in both conditions, despite our instructions to the contrary in the second condition.\nCloser analysis of our data does show some rise in the third person singular in the edited condition, however (we did not analyze regular past due to too few obligatory occasions). This rise was not enough to disturb the natural order, but enough to suggest some Monitor use. Again, we see the differences in the late-acquired, easy item. (To inject a more theoretical point, perhaps the correct interpretation of morpheme natural and unnatural orders is that unnatural orders, as in Larsen-Freeman (1975) reflect heavy Monitor use. Increases in certain items without changes in rank, as in our composition study, may reflect light Monitor use.) Table 4.3 shows this small improvement in the third person singular morpheme in the edited condition.5 6\nTable 4.3\nAccuracy differences in free and edited conditions for grammatical morphemes\n____________________________________________________________________\nMorpheme Free I Edited I Free II Edited II\n__ ing 0.87 0.85 0.88 0.82 copula 0.79 0.95 0.86 0.85 plural 0.82 0.82 0.77 0.78 article 0.86 0.85 0.76 0.83 auxiliary 0.82 0.79 0.77 0.76 irregular past 0.69 0.81 0.82 0.77 third person singular 0.54 0.61 0.32 0.65 __ Free: \u0026ldquo;write as much as you can\u0026rdquo; in five minutes.\nEdited: \u0026ldquo;pay careful attention to grammar and spelling and take your time\u0026rdquo;.\nI: same subjects (n = 58) preformed both conditions.\nII: different subjects for each condition.\nEach morpheme was represented by at least 100 obligatory occasions.\n( d) Consequences of teaching \u0026ldquo;hard\u0026rdquo; rules\nFelix (1980) shows us what happens when students are asked to learn rules that are too difficult for them, rules that are not only difficult to learn but that are also not yet acquired. Not only were such students asked to learn difficult rules, they were also asked to use them in unmonitored situations. Felix observed an EFL class for ten and eleven\nyear old students in Germany. Among his many interesting observations was this one: Teachers taught and demanded correct use of elliptic sentences (as in exchanges of the type: Is it a dog? Yes, it is). Despite the fact that this type of question-answer dialogue \u0026ldquo;was intensively drilled every day\u0026rdquo; (p. 8), Felix reports that correct elliptic sentences were only randomly supplied for a period of almost three months (i.e. It is a dog? Yes it isn\u0026rsquo;t)!\nThis result is quite predictable: the rule was simply too hard to learn and was not yet acquired. Felix notes that according to the research literature elliptic sentences \u0026ldquo;do not appear until relatively late\u0026rdquo; (p. 9). Even with input containing sentences of this sort (assuming the input was comprehensible, interesting, etc.; see Chapter III), such structures were far beyond the i + 1 of these students.\nFelix also reports that teachers valiantly tried to teach do-support and the English negation rules with little success. These are also quite difficult. Students, Felix found, would produce sentences like these in class:\n It\u0026rsquo;s no my cow. Doesn\u0026rsquo;t she eat apples.  Both of these sentences are interpretable as reliance on what has been acquired without the contribution of the conscious grammar. To fully appreciate the significance of these errors, we first need to briefly review what is know about the acquisition of negation in informal language acquisition (see also Chapter II). The following stages are found in child L1, child L2, and adult L2 acquisition (what follows is a simplification; see Dulay, Burt, and Krashen, in press, for details):\n The negative marker goes outside the sentence, as in:  no wipe finger wear mitten no (examples from Klima and Bellugi, 1966)\n The negative marker is placed between the subject and verb, as in:  He no bite you\nHe not little, he big\n Post auxiliary negation is acquired; the marker now appears after the auxiliary verb, as in:  That was not me\nI didn\u0026rsquo;t caught it\nFelix\u0026rsquo;s example (1) appears to be a stage II type transitional form. This \u0026ldquo;error\u0026rdquo; is a typical intermediate stage all acquirers (or nearly all) go through before fully acquiring the correct form. The appearance of such an error type is thus consistent with the hypothesis that these children, even though they are in a classroom, are undergoing normal language acquisition to at least some extent, and are relying on acquired language in classroom speech (note that German negation is always post verbal and post auxiliary).\nSentence (2), according to Felix, is not a yes/no question! Felix maintains that it is, instead, a negative declaration (\u0026ldquo;She doesn\u0026rsquo;t eat apples\u0026rdquo;). Thus, as is the case with sentence (1), Felix interprets this error as a transitional form, this one being an example of stage I with doesn\u0026rsquo;t acting as a monomorphemic negation marker. (It is quite common for don\u0026rsquo;t to perform the same function in stage II in natural first and second language acquisition, e.g. sentences such as \u0026ldquo;I don\u0026rsquo;t can explain\u0026rdquo; where \u0026ldquo;don\u0026rsquo;t\u0026rdquo; acts as the negative marker; see, for example, Cancino, Rosansky and Schumann, 1974). The child\u0026rsquo;s selection of doesn\u0026rsquo;t (instead of no) is due to the particular kind of input presented in the classroom, the grammatical exercises in which doesn\u0026rsquo;t appears in very high frequencies.\nSuch interpretations not only point to the reality and strength of subconscious acquisition, but they also confirm that conscious learning is quite limited, and that, except for certain conditions, acquisition is responsible for most second language performance.\nC. The Effects of Learning: Accuracy of Self-correction\r#\r\rPrevious sections of this chapter have discussed when performers Monitor and which rules are usable for Monitoring. We turn now to the question of how effective Monitoring is: How much can the second language performer improve accuracy by consulting the conscious grammar?\n104\nWe can get some approximation of the efficiency of the conscious grammar by looking at how good performers are at self-correction of their own linguistic output. Noel Houck has pointed out to me that self-correction (as opposed to \u0026ldquo;other-correction\u0026rdquo;, or correcting someone else\u0026rsquo;s output, an activity that includes detecting errors on test), is the most valid object of study in investigating Monitor strength, since this is what one\u0026rsquo;s Monitor actually does in real performance.\nSeveral studies have examined how effective self-correction is, but before surveying the data and drawing conclusions, we need to briefly look at some of the factors that cause accuracy of self-correction to vary.\n1 . FACTORS AFFECTING SELF-CORRECTION ACCURACY\nFirst, as we can infer from the discussion in Chapter II, there is individual variation with respect to self-correction efficiency. To the extent that self-correction involves the conscious Monitor, if there is individual variation in degree of and ability for Monitor use, this will be reflected in self-correction efficiency. We might expect much better performance from a professional linguist who is an optimal Monitor user (e.g. \u0026ldquo;P\u0026rdquo;, from Krashen and Pon, 1975), than from other performers, all other conditions (see below) held constant.\nSecond, we might expect variation depending on which aspects of output the performer attempts to correct. As we discussed above, the Monitor appears to work best for simple morphology, may be less efficient for complex syntax, and may have even more trouble with other parts of the grammar (there is, unfortunately, not even enough data to speculate about the learnability of much of the grammar; see Chapter III for a very brief discussion of the learnability of aspects of conversational competence).\nSelf-correction efficiency will also vary according to the conditions under which it is done. Houck, Robertson and Krashen (1978b) distinguished the following conditions. First, there is \u0026ldquo;free speech\u0026rdquo;, or natural conversation. (In one sense, \u0026ldquo;free writing\u0026rdquo; belongs in this category, in another sense it does not, as some would argue that the written modality automatically entails a greater focus on form.) In \u0026ldquo;free speech\u0026rdquo;, self-correction is up to the performer, and there is no special focus on\nform. Rather, the focus, in most cases, is on communication. We would expect natural difficulty orders when looking at errors in grammatical structures in this condition.\nA second condition, moving in the direction of more focus on form, can be termed \u0026ldquo;careful\u0026rdquo; speaking or writing. This is roughly equivalent to the edited condition in Krashen et al. (1978), described earlier, and occurs when speakers or writers are attempting to speak or write \u0026ldquo;correctly\u0026rdquo;. (We must subdivide this condition into two sub-conditions, one for careful speaking and one for careful writing, predicting more self-correction for writing.)\nConditions (1) and (2) cover most situations in real world informal communication. We can, however, specify other conditions typically used in language instruction that focus the performer still more on form. In condition (3), the student is informed that an error exists, but does not know where the error is or what rule has been broken. This is roughly equivalent to composition correction in which students are simply told that there are some errors in their paper and that they should be corrected.\nA condition still more in the direction of focussing on form indicates to students where the error is, in addition to informing them that an error exists. This condition, condition (4), corresponds to composition correction in which the teacher underlines the errors. Still more focussed, according to Houck et al., is condition (5) in which existence, location, and description of the violated rule are provided, as in feedback of this sort:\nThe more we move toward condition (5), the more effect of the conscious Monitor is predicted, and the greater the likelihood of \u0026ldquo;unnatural\u0026rdquo; order for errors. According to research summarized in Chapter II and discussed again in this chapter, we see natural orders for conditions (1) (free speech, BSM, free composition) and (2) (edited writing), but might see some effect of the Monitor in condition (2)(i.e. rise in accuracy in third person singular in Krashen et al., 1978). Larsen-Freeman\u0026rsquo;s unnatural order was produced under conditions similar to condition (4) (but see Note 4, this chapter).\nTable 4.4 summarizes the five conditions.\nTable 4.4 Self-correction conditions in second language performance\n___________________________________________________________________________________\nInstructions: (1) (2) (3) (4) (5)\nNone Rewrite Correct Correct Correct this error the error this error use this rule ___________________________________________________________________________________ Includes error:\nExistence No No Yes Yes Yes\nLocation No No No Yes Yes\nRule broken No No No No Yes\n___________________________________________________________________________________\n Free speech or writing. Careful speech or writing From: Houck, Robertson and Krashen (1978b).  There are some studies available that give us an idea of the efficiency of self-correction for some of the conditions described here, that tell us what percentage of performers' errors are actually self-corrected. They thus tell us something about Monitor efficiency, since they report to what extent a performer\u0026rsquo;s self-corrections improve output accuracy. In one sense, however, they may not truly show the effectiveness of the Monitor. They underestimate Monitor use, since they do not indicate covert self-correction, the correction that went on before the utterance was spoke or written (Recall, in figure one, Chapter II, that there are two possible arrows leading from the Monitor to the output of the acquired system, one affecting output before and one affecting output after production.) On the other hand, studies that report the percentage of successful self-correction also overestimate the amount of actual conscious Monitor use, since self-correction can also be done using the acquired system alone, with one\u0026rsquo;s \u0026ldquo;feel\u0026rdquo; for correctness. This is what performers do in their first language when correcting slips of the tongue.\nStill another problem of interpretation of such studies is that we do not really know whether subjects had indeed had the chance to learn all the rules necessary for successful self-correction. Are we studying the efficiency of learning and/or the ability of performers to apply what they consciously know?\nSelf-correction studies do not provide us, therefore, with an exact picture, but the results are quite useful to the teacher interested in the overall efficiency of self-correction, and they probably give us an approximation of the efficiency of conscious learning and Monitoring.\nTHE DATA\nTable 4.5 and Fig 4.1 summarize the literature available to me on self-correction. With two exceptions, all deal with university level ESL students who, we expect, have been exposed to a fair amount of formal instruction in English grammar. The subject in one study is our old friend \u0026ldquo;P\u0026rdquo;, a linguist. Fathman\u0026rsquo;s subjects (Fathman, 1980) are described as 20 adults \u0026ldquo;learning English as a second language in the United States, primarily in an informal setting\u0026rdquo; and 20 adults \u0026ldquo;learning English in a formal setting, primarily in Mexico\u0026rdquo; (p. 3, manuscript).\nTable 4.5 Accuracy of self-correction in adult performance in English as a second language\n___________________________________________________________________________________\nStudy Condition1 Error type analyzed Results\n(% of errors self-corrected)\n___________________________________________________________________________________\n Schlue (1977) Stream All syntax, 7.2% (99/1101) of speech morphology  (1)\n Fathman (1980) SLOPE test, Morphology2 a. \u0026ldquo;Informal\u0026rdquo; adults oral (see text) = 20% interview, (13/65)  Picture b. \u0026ldquo;Formal adults\u0026rdquo; description = 32% (46/144)\n(1)\n Schlue (1977) Listen to All syntax, 31%  tape of own morphology speech (2)\n Houck et al. Inspect Nine morphemes 17.5% (36.5/236)  (1978a) transcription of own speech3\n(2)\n White (1977) Inspect a. Morphology a. 52% (53/102) transcript of b. Syntax b. 27% (6/22) responses to c. \u0026ldquo;Omissions\u0026rdquo; c. 53% (23/43) BSM4 (4) d. Lexical d. 9% (1/11)  _____________\n47% (83/178)\n Krashen and Inspect Morphology, 95% (76/80)  Pon (1975) transcriptions5 syntax\n(4)\n___________________________________________________________________________________\n Number in parenthesis refers to conditions in Table 4.4.  \u0026ldquo;Almost all the uncorrected errors were related to verbs, such as: omission of the copula and omission of incorrect use of inflections\u0026rdquo;. Subjects transcribed tapes themselves. E transcribed tapes (\u0026rdquo;\u0026hellip;(S\u0026rsquo;s) were presented with some of their errors\u0026rdquo;). E = Subject transcribed tape.    Fig. 4.1. Self-correction accuracy.\n1: Schlue (1977).\n2 a, 2b: Fathman (1980).\n3: Schlue (1977).\n4: Houck et al. (1978a).\n5: White (1977).\n6: Krashen and Pon (1975).\n( see Table 4.5)\nAs for the domain of language analyzed, one study (Houck et al., 1978a) focusses only on nine grammatical morphemes, while the others cover morphology and syntax in general.\nIt is hard to say whether any of the studies actually meet the description of condition (1), since in all cases the subjects knew they were being tested and that the focus of the investigation was the quality and accuracy of their speech. Thus, Fathman (1980), and Schlue (1977) may be overestimates of self-communication accuracy in \u0026ldquo;free speech\u0026rdquo; and might really belong in condition (2).\nFigure 4.1 attempts to illustrate how conditions, and differences in subjects, affect selfcorrection accuracy, and gives us a picture of what we can expect, at least in the domain of syntax and morphology. It suggests, first of all, that training and type of student do make a difference:\n110\nFathman\u0026rsquo;s \u0026ldquo;formal\u0026rdquo; students correct a higher percentage of their own errors than her informal students do, and our subject, \u0026ldquo;P\u0026rdquo;, outperforms everyone. It is also consistent with the hypothesis that accuracy increases as we focus more on form. Further studies could easily be performed to fill in the holes in the figure; they would also hopefully control for proficiency level, since there may be a relationship between the sheer number of errors committed and self-correction accuracy. It would also be desirable to control for first language and some aspects of personality, due to the observed relationship between personality and avoidance behavior (Kleinman, 1977).\nPossibly the most important result to emerge from these studies is the point that selfcorrection is never perfect, never reaches what some teachers would consider acceptable performance except in the case of one very good learner who was presented with her own errors! The fact is that many teachers assume self-correction should be 100%, that students should be able to apply all they have learned at all times.7\nIf second language performers do not focus heavily on form in self-correction, what do they do? Several studies, all classified as falling under condition (2), show that revisions are typically aimed at greater communicative effectiveness and not merely on form. Hassan (cited in Hatch, 1979) noted what changes ESL students made on second and third drafts of compositions. Hassan reported that the students \u0026ldquo;concentrated mainly on vocabulary choice, added minor details, and made fewer changes which resulted in overall grammar improvement\u0026rdquo; (Hatch, 1979, p. 136). Schlue (1977) came to similar conclusions, noting that \u0026ldquo;her subjects seemed to monitor their speech quite carefully, but not for grammatical correctness. Their speech awareness was for the most part focused on their success or failure in conveying their message. Thus, they were very concerned with such things as the appropriateness of their lexical choices\u0026hellip; even in the self-analysis activity, it was often hard to make the subjects focus on form rather than on lexicon and pronunciation\u0026hellip;\u0026rdquo; (p. 343). Houck, Robertson and Krashen (1978a) also noted that many of the corrections made by subjects were \u0026ldquo;obviously attempts at improved intelligibility, rather than grammatical form\u0026rdquo; (p. 337).\nTo summarize thus far: Our description of when we can Monitor, what can he\nMonitored, and the linguistic effect of Monitoring all\nreach similar conclusions. The use of conscious grammar is limited. Not everyone Monitors. Those who do only Monitor some of the time, and use the Monitor for only a sub-part of the grammar. As we have just seen, the effects of self-correction on accuracy is modest. Second language performers can typically self-correct only a small percentage of their errors, even when deliberately focussed on form (conditions 2 to 4), and even when we only consider the easiest aspects of the grammar.\nD. Other Effects of Conscious Rules\r#\r\rUse of the conscious grammar, we have maintained, is limited to easily learned, lateacquired rules, simple morphological additions that do not make an overwhelming contribution to communicating the speaker or writer\u0026rsquo;s message. For most people, only \u0026ldquo;local\u0026rdquo; rules can be learned and used (Burt and Kiparsky, 1972). Certainly, speakers of English understand sentences with missing third person singular markers and dropped regular past endings fairly well, thanks to the presence of other markers of tense and pragmatic knowledge.\nThere is, nevertheless, some real value in applying these rules when time permits, when rule use does not interfere with communication. Providing these local items, even though they may make a small contribution to communication, makes writing and speech more polished, it adds a cosmetic effect that may be very important for many second language students.\nIndeed, in the advanced second language class, providing such polish may become the main goal, one that is quite justified for many students. \u0026ldquo;Advanced\u0026rdquo; second language acquirers, especially those who have been in the country where the target language is spoken for a few years, may have acquired a great deal, but not all, of the second language, enough to meet communicative need, but still short of the native speaker standard. Their chief need may be conscious rules to use as a supplement to their acquired competence, to enable them to appear as educated in their second language as they are in their first.\nI do not object to this sort of grammar teaching. What is unfair is to emphasize accuracy on communicatively unessential, late acquired items in beginning language classes, with students who are unable to understand the simplest message in the second language.\n112\nE. Presentation of Rules\r#\r\rA fair amount has been written about how grammar rules should be presented. One issue is whether rules should be given \u0026ldquo;directly\u0026rdquo; (deductive), or whether students should be asked to figure out the rules for themselves (inductive). Another issue is sequence\u0026ndash;which rules should be presented first, and/or emphasized more. I will restrict my comments on these issues to the implications second language acquisition theory make for these questions.\n1 . THE DEDUCTIVE-INDUCTIVE ISSUE\nThis issue was one of some concern in the second language acquisition pedagogical literature for many years. For many scholars and teachers, deductive teaching seemed much more reasonable\u0026ndash;why make students guess the rule? Present a clear explanation and have them practice until the rule is \u0026ldquo;internalized\u0026rdquo;. Cognitive-code teaching, as well as grammartranslation, are examples of the \u0026ldquo;rule-first\u0026rdquo; deductive approach.\nProponents of inductive teaching argued that the best way to insure learning was for the student to work out the rule himself. Inductive teaching is very much like rule-writing in linguistics. The learner is given a corpus and has to discover the regularities.\nBefore proceeding to some of the research bearing on this issue, it is important to clarify one major point: both inductive and deductive learning are learning. Neither have anything directly to do with subconscious language acquisition. Inductive learning bears a superficial resemblance to acquisition, and has occasionally been confused with acquisition in the literature. As Table 4.6 indicates, both inductive\nTable 4.6 Acquisition and inductive learning:\nsimilarities and differences\n_________________________________________________________________\nAcquisition Inductive Learning\n_________________________________________________________________\nData first, rule follows Data first, rule follows\nRule is subconscious Rule is conscious\nFocus on meaning Focus on form\nSlow progress May occur quickly\nRequires large amounts of data May occur after exposure to small amount of data _________________________________________________________________\n113\nlearning and acquisition share the features of data, or input, first, with the \u0026ldquo;rule\u0026rdquo; coming second. There are deep and fundamental differences, however. When the goal is inductive learning, the focus is on form, and the learner attempts to analyze formal aspects of the data presented. When the goal is acquisition, the acquirer attempts to understand the message contained in the input. Also, the \u0026ldquo;rule\u0026rdquo; developed by the two processes is different. An inductively-learned rule is a conscious mental representation of a linguistic generalization\u0026ndash;an acquired rule is not conscious (we can, however, certainly learn later what we have acquired; see below), but is manifested by a \u0026ldquo;feel\u0026rdquo; for correctness. Also, inductive learning, since it is conscious problem-solving, may occur very quickly\u0026ndash;an adept student may \u0026ldquo;see\u0026rdquo; the regularity after only a few examples. Acquisition, however, always takes time and requires a substantial quantity of input data. As discussed in Chapter II, it takes more than a single paragraph and a few exercises to acquire a rule.\nThus, from the point of view of second language acquisition theory, the deductiveinductive controversy is not a central one for second language pedagogy, since it focusses only on which learning style is best. The issue has some significance, however, and there have been several suggestions and experimental results relating to this controversy that are of interest.\nIt has been suggested (Hammerly, 1975) that certain structures \u0026ldquo;are most amenable to a deductive approach while others\u0026hellip; can be learned very well by an inductive approach\u0026rdquo; (p. 17). Seliger (1975) presents data suggesting that retention over time is better with a deductive approach. Hartnett\u0026rsquo;s data support the hypothesis that students who are successful in deductive foreign language classes employ different neurological mechanisms than learners successful in more inductive classes, deductive learners being more left-brained, analytic thinkers, and inductive learners being more right-brained, analogic thinkers (Hartnett, 1974; Krashen, Seliger and Hartnett, 1974).\nIf there are individual differences in preference of rule presentation, if some people prefer rules first and others prefer to figure things out for themselves, insistence on the \u0026ldquo;wrong\u0026rdquo; approach for the grammar portion of the language teaching program may raise anxieties and strengthen the affective filter.8\n114\nThe theory of second language acquisition presented in Chapter II makes only indirect contributions to this question. The most important contribution is its insistence that both deductive and inductive approaches are learning-oriented. The \u0026ldquo;practice\u0026rdquo; used for rule practice (deductive) or rule-searching (inductive) will not be optimal input for acquisition, since the students' focus will be primarily on form rather than on the message.\n2 . SEQUENCING AND LEARNING\nI argued, in Chapter III, that grammatical sequencing was undesirable when the goal is acquisition. It seems reasonable that we should present rules one at a time in some order when the goal is conscious learning, however (\u0026ldquo;rule isolation\u0026rdquo;; Krashen and Seliger; 1975). Several rationale for sequencing have been suggested. We (Krashen, Madden and Bailey, 1975) once suggested the natural order itself, which I no longer think is the correct basis for sequencing for acquisition or learning. Other proposals include frequency of occurrence, grammatical simplicity, and \u0026ldquo;utility\u0026rdquo; (see, for example, Larsen 1975). (My impression is that despite the existence of these options, and the fairly widespread discussion of them in the professional literature, the vast majority of texts utilize some version of linguistic simplicity, going from formally less complex to more complex structure.)\nSecond language acquisition theory, as presented here, does not yet make predictions as to the exact learning sequence. It does predict, however, something about the set of rules that can be learned. First, if the goal of grammar teaching is in fact to provide students with a Monitor, as we discussed earlier in this chapter, simplicity will play a large role. We can only teach what is learnable, and, restricting the set even more, what is portable, what can be carried around in the students' heads. (These two requirements need to be distinguished-learning a rule does not always mean being able to use it in performance, even when conditions are favorable for Monitor use.) As we have seen above, in discussing cases of under-users and incompetent Monitor users, we have, as a profession, overestimated what most people can learn, and what they can retain and use in performance. Even optimal users, \u0026ldquo;good language learners\u0026rdquo; have limits that are far below many teachers' expectations.\nSecond, unless our goal is language appreciation (see below), we don\u0026rsquo;t have to teach rules that our students have already acquired. How, then, do we know which items to teach? We could, conceivably, perform a detailed error analysis on each student, compare the results of tests that tap learning and acquisition, and determine those items that have been acquired, but have not been learned, and focus on just this set. This is possible, but probably unnecessary. The \u0026ldquo;natural order\u0026rdquo; studies can provide us with at least some of the information we need. While some individual variation exists among second language acquirers, we have a good idea of what is acquired \u0026ldquo;early\u0026rdquo; and what is acquired \u0026ldquo;late\u0026rdquo; for some structures. We can be fairly certain that beginners in ESL will not have acquired the third person singular /s/ or the possessive /s/, for example. I think that a very worthy goal of applied linguistics is to attempt to describe this set of what are typically late-acquired, but learnable rules, beyond the few morphemes and structures we know about now.\nRules to be learned should thus meet these three requirements:\n Learnable Portable 3. Not yet acquired  The sequencing issue then becomes, or reduces to, determining which of the rules meeting all three of these requirements should be presented first. This thus still remains an issue, but one we have contributed to by limiting the set of items that must be sequenced.\nF. Notes on Error Correction\r#\r\rAnother controversy related to conscious learning is the issue of error correction. Henrickson (1978) lists the \u0026ldquo;five fundamental questions\u0026rdquo; and reviews the literature that addresses them:\n  Should errors be corrected?\n  If so, when should errors be corrected?\n  Which learner errors should be corrected?\n  How should learner errors be corrected?\n  Who should correct learner errors?\n116\n  Second language acquisition theory has \u0026ldquo;answers\u0026rdquo; to four of these questions, answers that are, as are all other implications in this book, themselves hypotheses. In this case, I am predicting that if error correction is done according to the principles described below, it will be effective.\n Should errors be corrected?  According to the second language acquisition theory presented here, when error correction \u0026ldquo;works\u0026rdquo;, it does so by helping the learner change his or her conscious mental representation of a rule. In other words, it affects learned competence by informing the learner that his or her current version of a conscious rule is wrong. Thus, second language acquisition theory implies that when the goal is learning, errors should indeed be corrected (but not at all times; see below; and not all rules, even if the goal is learning). The theory maintains however, that error correction is not of use for acquisition. Acquisition occurs, according to the input hypothesis, when acquirers understand input for its meaning, not when they produce output and focus on form.\n When should errors be corrected?  Hendrickson, following Birckbichler (1977), suggests that in general error correction be limited to \u0026ldquo;manipulative grammar practice\u0026rdquo;\u0026ndash;more errors may be tolerated during \u0026ldquo;communicative practice\u0026rdquo;.\nThe implications of second language acquisition theory are similar. If error correction aims at learning, it is logical to suppose that the conditions for error correction should be identical to the conditions for utilizing learning\u0026ndash;we should focus our students on form, and correct their errors, only when they have time and when such diversion of attention does not interfere with communication. This implies no error correction in free conversation, but allows for error correction on written work and grammar exercises. This is precisely Terrell\u0026rsquo;s procedure in the Natural Approach (described in Chapter V).\n  Which errors should be corrected?\nHendrickson reviews three hypotheses and accepts them all as plausible.\n  We should correct \u0026ldquo;global\u0026rdquo; errors, errors that interfere with communication or impede the intelligibility of a message (Burt and Kiparsky, 1972) . Such errors deserve top priority in correction.\n Errors that are the most stigmatized, that cause the most unfavorable reactions, are the most important to correct. Errors that occur most frequently should be given top priority.    In the previous section, the linguistic domain of the Monitor was described. I recommended that we restrict the conscious learning of rules for Monitor use according to these characteristics: the rules to be learned should be (1) learnable, (2) portable, and (3) not yet acquired. These characteristics might also describe which errors should be corrected, if it is indeed the case that error correction affects only the conscious grammar. Perhaps we should only correct mistakes that reflect rules that can be used as part of the conscious Monitor.\nThis may appear to be a modest contribution to the issue of which errors are to be corrected. Many teachers, however, try to point out or correct all errors. This suggestion reduces the size of the task considerably. Within the small set defined by the three characteristics of learnable, portable, and not yet acquired, we still have to make decisions, and here considerations such as frequency, contributions to communication, and irritability may be relevant. The overall task, however, is reduced enormously.\n How should errors be corrected?  Hendrickson reviews several methods of error correction, including the two most widely used:\n providing the correct form (\u0026ldquo;direct\u0026rdquo; correction).  the discovery (inductive) approach.    He notes that little research is available that establishes the superiority of one method. Some research shows that direct correction is not particularly effective; students who have had direct correction of their oral and written output in instructional programs did not produce fewer errors (Hendrickson, 1976, 1977b, cited in Hendrickson, 1978; Cohen and Robbins, 1976) . This may, notes Hendrickson, be due to\nthe lack of consistent and systematic correction (Allwright, 1975; Cohen and Robbins, 1976).\nSecond language acquisition theory predicts that error correction will show positive results only if the following conditions are met:\n Errors corrected are limited to learnable and portable rules.  Errors are corrected under conditions that allow Monitor use. This will give the learner time to reconsider the rule that was violated. Measures evaluating the efficacy of error correction are administered under conditions that allow Monitor use, to allow the learner time to refer to his or her conscious knowledge. Subjects are \u0026ldquo;Monitor-users\u0026rdquo; (i.e. they are not under-users of the Monitor).    Error correction that is not done under these conditions, I predict, will not \u0026ldquo;work\u0026rdquo;; I am also not optimistic about the efficacy of error correction even when all the above conditions are met. As is the case with conditions for Monitor use, they are necessary but not sufficient-even under the \u0026ldquo;best\u0026rdquo; conditions, correcting the simplest rules, with the most learningoriented students, teacher corrections will not produce results that will live up to the expectations of many instructors.\nB. Grammar as Subject Matter\r#\r\rAs mentioned earlier (p. 88), \u0026ldquo;grammar\u0026rdquo; has another place in the pedagogical program, a place that is not always clearly distinguished from its use as a conscious Monitor. This is grammar as subject matter.\nMany students (probably fewer than most of us think) are interested in the study of the structure of language per se. They may also be interested in language change, dialects, etc. Especially satisfying, for some students, is learning what has already been acquired, the Eureka phenomenon described earlier in this section (p. 88). My students who recognized that they had already acquired the three uses of the present progressive tense in English were very satisfied and pleased to have conscious knowledge corresponding to their subconscious knowledge. They also thought that I was an outstanding language teacher for providing them with this kind of insight!\nProviding learning that corresponds with previous acquisition has its advantages, but I do not think it is language teaching\u0026ndash;it is not input for acquisition (although the language of classroom discussion may be; see below), and it also does not provide useful learning that can be utilized as a supplement to acquisition, as a Monitor. It may serve one purpose, however: it can demonstrate to the language student that acquisition is real, and that it can be trusted. Pointing out what has been acquired may thus stimulate more faith in the acquisition process, and lower the affective filter. It may thus be a partial cure for over-use of the Monitor.\nThe study of the structure of language, how it varies over time (historical linguistics) and in society, has many general educational advantages and values that high school and university level language programs may want to include in a program. It should be clear, however, that teaching complex facts about the second language is not language teaching, but rather is \u0026ldquo;language appreciation\u0026rdquo; or linguistics.\nTeaching grammar as subject-matter can result in language acquisition in one instance, however: when the target language is used as a medium of instruction. Acquisition occurs in these classes when students are interested in the subject matter, \u0026ldquo;grammar\u0026rdquo;. Very often, when this occurs, both teachers and students are convinced that the study of formal grammar is essential for second language acquisition, and the teacher is skilled at presenting explanations in the target language so that the students understand. In other words, the teacher talk, in such cases, meets the requirements for input for acquisition, as presented in Chapter III: the input is comprehensible and considered to be relevant. The filter is low in regard to the language of explanation, as the students' conscious efforts are usually on the subject matter, what is being talked about, and not the medium.\nThis is a subtle point. In effect, both teachers and students are deceiving themselves. They believe that it is the subject matter itself, the study of grammar, that is responsible for the students' progress in second language acquisition, but in reality their progress is coming from the medium and not the message. Any subject matter that held their interest would do just as well, so far as second language acquisition is concerned, as long as it required extensive use of the target language.\nThis may underlie and explain the success of many grammar-based\napproaches. They are taught in the target language, and this provides comprehensible input for acquisition, input that is relevant and interesting as long as the student believes that conscious grammar is good for him. (For further discussion of such a class, see Krashen, 1980.)\nNotes\r#\r\r  This is not, I should point out, Seliger\u0026rsquo;s interpretation. See Note 2.\n  Seliger interprets his results as being counter to the theory of second language acquisition presented in Chapter II. His interpretation of the test, and the theory, are both different from mine. He considers the test situation to be \u0026ldquo;formal\u0026rdquo;, and \u0026ldquo;not a sample of language within a natural context\u0026rdquo; (p. 362). There is, I think, some truth to this analysis, as mentioned in the text. Subjects' performance, however, is consistent with the hypothesis that the test tapped primarily acquisition\u0026ndash;this is supported by the data and is consistent with the hypothesis that Monitor use occurs only when several necessary conditions are met, as stated in Chapter II and repeated in this chapter. More strange is his interpretation of the acquisitionlearning distinction and the Monitor hypothesis: his results are counter to \u0026ldquo;Monitor Theory\u0026rdquo;, he claims, since Monitor Theory maintains that \u0026ldquo;learners do what they say they do\u0026rdquo;, and his data shows this is not so. His data does indeed confirm that performers do not always do what they say they do, but \u0026ldquo;Monitor Theory\u0026rdquo; does not, and never has, made the claim that people do what they say they do.\nSeliger outlines his own position in the same paper. Pedagogical rules, he asserts, \u0026ldquo;most likely serve as mechanisms to facilitate the learner\u0026rsquo;s focussing on those criterial attributes of the real language concept that must be induced\u0026rdquo; (p. 368). They serve as \u0026ldquo;acquisition facilitators\u0026rdquo; and \u0026ldquo;make the inductive hypothesis testing process more efficient\u0026rdquo; (p. 368). Seliger provides, unfortunately, very little more than this by way of description of his hypothesis, which he presents as an alternative to Monitor Theory. He also presents nothing in the way of empirical support for his position. There is, moreover, a serious problem with this hypothesis: If rule learning is so often wrong (a point we agree on), how can it be useful as an acquisition focussing device? Also, as we have seen earlier in this section, acquisition need not be preceded by conscious learning. Rather, the available evidence supports the hypothesis that acquisition occurs only when the acquirer\u0026rsquo;s attention is on the message, not on the form of the input. According to the Input Hypothesis, conscious rules do not facilitate acquisition. Acquisition occurs via a completely different route. An alternative hypothesis must deal with the evidence supporting the Input Hypothesis, and the arguments that acquisition does not require previous learning.\n  Before we conclude that Eva and Ue-lin simply need more drill and learning, consider the possibility that they are among the better learners. Cohen and Robbins' subject Hung, an \u0026ldquo;under-user\u0026rdquo; of the Monitor, also made errors on the third person singular /s/ and /-ed/, consistent with the hypothesis that such items are typically late-acquired. In contract to Ue-lin and Eva, Hung could not self-correct by rule, however. When confronted with a third person singular /s/ deletion he had made, he remarked: \u0026ldquo;I guess I just never learned the rule that well, so I just write down whatever I feel like it.\u0026rdquo; (p. 52). Also, \u0026ldquo;When confronted with a sentence he had written where an ed deletion error occurred (\u0026lsquo;He got discourage\u0026rsquo;), Hung supplied ed, but he commented: \u0026lsquo;I don\u0026rsquo;t see\n121\nwhy\u0026rsquo;.\u0026rdquo; (p. 53). Hung also noted that it was very hard for him to detect errors in his own output. Hung is quoted many times as saying he does not pay attention to form: \u0026ldquo;I don\u0026rsquo;t care the grammar (p. 50)\u0026hellip; I just never learned the rules that well\u0026hellip;. I just write down what I feel like it (p. 59)\u0026hellip; I get kind of bored when I study English\u0026rdquo; (p. 51). Again, many people, despite exposure in class, have practically no idea of rules that seem straightforward to us.\n  In a recent study, J. Brown (1980) administered a grammar-type test whose format was quite similar to that of Larsen-Freeman. Subjects only had to supply one morpheme, as in:\n  I __________ (talk) to John yesterday.\nThe test was administered with no time limit to 66 ESL students with a variety of first languages at Marymount Palos Verdes College. Here is the difficulty order Brown reported:\nAuxiliary 96% correct\nCopula 94.2%\nRegular past 92%\nPlural 91.8%\nThe (def art) 88.2%\nIrregular past 88% a (indef art) 86.6% Ø (art) 85.8% Possessive 80.2% ing 80.2% Third person sing 77%\nThis order, Brown reports, correlates significantly with other second language morpheme orders (rho = 0.73), compared to Andersen, 1978). It is analyzed somewhat differently from other studies in that the allomorphs of article are presented separately; they are very close in rank order, however.\nBrown\u0026rsquo;s order is difficult to interpret due to the closely bunched scores. The order appears to be similar to other L2 orders in the literature with two exceptions: ing is unusually low, and regular past is unusually high (see Chapter II, Hypothesis 2). The high rank of regular past is consistent with my hypothesis that such formats encourage Monitor use, which results in a jump in accuracy of the rank of late-acquired but easy to learn morphemes. I have no handy explanation for ing\u0026rsquo;s relatively poor showing, nor can I account for the third person singular\u0026rsquo;s low rank in this Monitored test. Brown\u0026rsquo;s high correlation with other studies is counter to some of my claims, but the rise in regular past is not.\n  It is very interesting to note that accuracy for the third person singular in other Monitorfree studies is very similar to the accuracy found in the composition study for the \u0026ldquo;free\u0026rdquo; condition. In Bailey, Madden, and Krashen (1974), using the BSM, third person singular accuracy was 0.41, while in Krashen Houck, Giunchi, Bode, Birnbaum, and Strei (1977), using free speech, accuracy for this morpheme was 0.36. Compare to Table 4.3, where accuracy in the two free conditions is 0.54 and 0.32, going up to 0.61 and 0.65 in the edited condition, respectively. This similarity is consistent with the hypothesis that the edited condition involved light Monitor use, and that late-acquired, easy items are most apt to be affected.\n  In focussing on the regular past and third person singular, I by no means wish to imply that these are the only points of grammar that can be consciously Monitored. They are,\n122\nrather, typical of what can be Monitored, and are convenient to follow through several studies since they are mentioned and analyzed so often.\n  Several other studies also pertain to Monitoring ability but do not focus on selfcorrection. As described earlier, Krashen, Butler, Birnbaum and Robertson (1978) asked ESL students at USC to write \u0026ldquo;free\u0026rdquo; and \u0026ldquo;edited\u0026rdquo; compositions in English (conditions 1 and 2). In both cases, natural orders were found, with a slight increase in the third person singular morpheme in the edited condition. There also was a 6% overall increase for the edited condition for the six morphemes analyzed, for the group as a whole with some individual variation according to first language, Farsi speakers being the most efficient, showing a 16% gain in accuracy in the edited condition. This is a different measure than that described in the text, since subjects wrote completely new and different essays. Tucker and Sarofin (1979) presented 18 \u0026ldquo;advanced intermediate\u0026rdquo; Arabic speaking students at the American University at Cairo with 14 deviant sentences. Students were asked to \u0026ldquo;draw a line underneath the error and correct it if you can\u0026rdquo; (p. 32). This corresponds to condition (3). The range of the proportion of errors corrected was from 33% to 83%, depending on the error, with errors of \u0026ldquo;number\u0026rdquo; being easiest to correct (as in * So I took the advices of my parents).\nLightbown, Spada and Wallace (1980) also contributes to our knowledge of Monitor efficiency. They gave their subjects, grade 6, 8, and 10 students of EFL in Quebec, a test of grammaticality judgments in English. Subjects were asked to circle the errors in a sentence and write the correct form. The study focussed on these structures:\nPlural /s/\nPossessive /s/\nThird person singular /s/\nContractable copula /s/\nContractable auxiliary /s/\nBe, used for expressing age (e.g. I am six years old. This is considered a problem structure for French speakers.)\nPrepositions of location (They are going to school.)\nThe test was given three times, the first two administrations being only two weeks apart, the third coming five months later, after summer vacation. In between administrations I and II, the rules used on the test were reviewed in class. Lightbown et al. report some improvement from time I to time II\u0026ndash;the review in class resulted in a modest but noticeable 11% improvement for grades 8 and 10, compared to 3% for control students who simple retook the test without review, and a 7% increase for the 6th graders (no controls were run for the 6th grade). In the third administration, five months later, scores fell back to a level between administration I and II.\nThe results of Lightbown et al. are consistent with those reported in the text, even though the task is not self-correction but is correction of errors presented to the student, as in Tucker and Sarafin. The students were only able to correct approximately 1/4 to 1/3 of these errors, despite two to six years of formal study and despite the fact that the structures involved were fairly straightforward. The task corresponds to condition (3) in Table 4.4.\nReview of the rules in class also had a modest effect, much of which was lost after summer vacation. I concur with Lightbown et al.\u0026rsquo;s interpretation that \u0026ldquo;improvements on the second administration were based on the application of knowledge temporarily retained at a conscious level, but not fully acquired\u0026rdquo;. The results of administration III show just how temporary learned knowledge is.\nLightbown et al. also provide an analysis of results for individual structures. They note\n123\nthat subjects made significant (\u0026ldquo;dramatic\u0026rdquo;) improvement from time I to time II on the be/have rule and on the third person singular. This supports, they note, my hypothesis that simpler rules are easier to consciously learn, since the description of both of these rules is relatively straightforward. There was also a significant improvement of a much less transparent rule, the use of locative prepositions, and the plural, which appears to be \u0026ldquo;easy\u0026rdquo;, did not, however, show large gains.\nDifficulty orders for the /s/ morphemes conformed to the natural order presented in Chapter II, confirming both the reliability of the natural order itself, and the claim that it takes more than condition (3) to disturb the natural order significantly (i.e. condition (3) does not focus on form strongly enough). (See Lightbown, in press, for a discussion of the effect of classroom input on morpheme orders.)\n8 In an earlier paper (Krashen, Seliger and Hartnett, 1974), we suggest a compromise: teach rule-first, which will satisfy the deductive students. The inductive students can simple ignore the rule presentation. \u0026ldquo;Practice\u0026rdquo; can then serve as practice in rule application (Monitoring) for the deductive students, and as rule-searching for the inductive students. The rule can be (re)stated after the practice, a review for deductive students and confirmation for the inductive students' hypothesis.\n124\n  Chapter V\nApproaches to Language Teaching\nChapters III and IV were devoted to a discussion of the general implications of second language acquisition theory. Chapter III described the characteristics of optimal input for acquisition, hypothesizing that language acquisition takes place best when input is provided that is:\n Comprehensible Interesting and/or relevant to the acquirer. Not grammatically sequenced. Provided in sufficient quantity.  The presentation of this input, moreover, should be done in a way that does not put the acquirer \u0026ldquo;on the defensive\u0026rdquo;; it should not raise or strengthen the affective filter. In addition, acquirers need to be provided with tools to help them obtain more input from the outside world.\nChapter IV tried to \u0026ldquo;put learning in its place\u0026rdquo;. Conscious rules should be used only when they do not interfere with communication. In addition, only a small part of the grammar is both learnable and \u0026ldquo;portable\u0026rdquo; for most people. Rules that seem very transparent to professional linguists and language teachers may be quite opaque even to \u0026ldquo;good language learners\u0026rdquo;. We also concluded that the effects of learning are quite modest in terms of syntactic accuracy, but that the application of conscious rules may provide a cosmetic effect that is important for some language students. Chapter IV also discussed the fact that conscious grammar can be taught as subject matter; acquisition results if such a course is taught in the target language. This \u0026ldquo;language appreciation\u0026rdquo; function, however, needs to be distinguished from the Monitor function for grammar.\nThe goal of the first part of this chapter is to analyze some current approaches\nto language teaching in terms of the conclusions of Chapters III and IV. The results of this analysis will then be compared with the results of what applied linguistics research has been done in the area of \u0026ldquo;method comparisons\u0026rdquo;. My interpretation will be that in this case, current second language acquisition theory and applied linguistics research come to very similar conclusions.\nThe next section examines some alternatives to the traditional classroom, alternatives that seem to have the advantage of satisfying input requirement #2 (the \u0026ldquo;interesting/relevant\u0026rdquo; requirement) far better than any traditional classroom approach. Next, there is a brief discussion of the implications these ideas have for second language testing. I will suggest that we need to carefully consider what effects our achievement tests have on student and teacher behavior. Our goal in testing is this: when students \u0026ldquo;study for the test\u0026rdquo;, they should be doing things that encourage or cause second language acquisition. The final sections of this chapter deal with what I perceive to be some gaps in materials, and some of the practical problems in implementing the suggestions made here.\nA. Present-day Teaching Methods\r#\r\rThe conclusions of Chapters III and IV can be summarized as the matrix in Fig. 5.1. We can simply ask, for each approach to classroom teaching, to what extent it satisfies the requirements for optimal input and to what extent it puts learning in its proper place. We will review what are surely the most widely used methods, grammar-translation, audio-lingualism, cognitive-code teaching, and one version of the direct method. We will then cover some new approaches, Asher\u0026rsquo;s Total Physical Response method, Terrell\u0026rsquo;s Natural Approach and Lozanov\u0026rsquo;s Suggestopedia. (Several very interesting methods are not included, such as Gattegno\u0026rsquo;s Silent Way and Curren\u0026rsquo;s Counseling-Learning method. This is due to several factors, including my own lack of familiarity with these methods, the lack of empirical data comparing these methods to others, and the availability of Stevick\u0026rsquo;s excellent analysis (Stevick, 1980).) The brief description supplied at the beginning of each analysis is not intended to be a full and adequate description of each method, but is intended to serve only to inform the reader\nFig. 5.1. Evaluation schema for methods and materials Requirements for optimal input\n Comprehensible Interesting/relevant Not grammatically sequenced Quantity Filter level (\u0026ldquo;off the defensive\u0026rdquo; ) Provides tools for conversational management  Learning\nRestricted to:\n Certain rules; those that are  learnable portable not yet acquired   Certain people (\u0026ldquo;Monitor users\u0026rdquo; ) Certain situations  time focus on form    what my understanding of each method is. It should also be pointed out that this analysis assumes that the methods are used in their pure forms, a situation which, I am sure, does not occur in every classroom.\n1 . GRAMMAR-TRANSLATION\nWhile there is some variation, grammar-translation usually consists of the following activities:\n  Explanation of a grammar rule, with example sentences.\n  Vocabulary, presented in the form of a bilingual list.\n  A reading selection, emphasizing the rule presented in (1) above and the vocabulary presented in (2).\n  Exercises designed to provide practice on the grammar and vocabulary of the lesson. These exercises emphasize the conscious\ncontrol of structure (\u0026ldquo;focus on\u0026rdquo;, in the sense of Krashen and Seliger, 1975) and include translation in both directions, from L1 to L2 and L2 to L1.\n  Most grammar-translation classes are designed for foreign language instruction and are taught in the student\u0026rsquo;s first language. We turn now to an analysis of grammar-translation in terms of the matrix in Fig. 5.1.\n Requirements for optimal input  Comprehensible. It can only be claimed that grammar-translation provides scraps of comprehensible input. The model sentences are usually understandable, but the focus is entirely on form, and not meaning. The reading selection is the primary source, but the selections provided are nearly always much too difficult, often requiring what Newmark (1966) calls \u0026ldquo;crytoanalytic decoding\u0026rdquo;. Students are forced to read word by word, and consequently rarely focus completely on the message. The sentences used in the exercises may be comprehensible, but here again, as in the model sentences, they are designed to focus the students on form. Interesting/relevant. There is usually an attempt, especially in recent years, to provide topics of interest in the reading selection, but the usual topics fall far short of the Forgetting Principle (Chapter III). They clearly do not seize the students' attention to such an extent that they forget that it is written in another language\u0026ndash;reports of a trip to France, even if it includes the Louvre, generally do not provide information that most high school and college students in the United States are eager to obtain. Not grammatically sequenced. Grammar-translation is, of course, grammatically sequenced, the majority of texts attempting to proceed from what the author considers easy rules to more complex rules. Each lesson introduces certain rules, and these rules dominate the lesson. Quantity. As discussed above, grammar-translation fails to provide a great deal of comprehensible input. The small amount of comprehensible input in the model sentences, the readings, and exercises is, moreover, rarely supplemented by teacher talk in the target language. Affective filter level. In Chapter III, it was hypothesized that one way to encourage a low filter was to be \u0026ldquo;true\u0026rdquo; to the Input Hypothesis.    Grammar-translation violates nearly every component of the Input Hypothesis, and it is therefore predicted that this method will have the effect of putting the student \u0026ldquo;on the defensive\u0026rdquo;. Students are expected to be able to produce immediately, and are expected to be fully accurate. Anxiety level, it has been pointed out, is also raised for some students who are less inclined toward grammar study (under-users), as pointed out by Rivers, 1968.\n Tools for conversational management. Grammar-translation makes no attempt, explicitly or implicitly, to help students manage conversations with native speakers. Learning  Grammar-translation implicitly assumes that conscious control of grammar is necessary for mastery. In other words, learning needs to precede acquisition. This assumption necessitates that all target structures be introduced and explained. There is, therefore, no limitation of the set of rules to be learned to those that are learnable, portable, and not yet acquired, as suggested in Chapter IV. There is no attempt to account for individual variation in Monitor use, nor is there any attempt to specify when rules are to be used, the implicit assumption being that all students will be able to use all the rules all the time!\n( c) Summary\r#\r\rGrammar-translation, if the above analysis is correct, should result in very low amounts of acquired competence; what comprehensible input is available faces a high affective filter, and learning is vastly overemphasized.\n2 . AUDIO-LINGUALISM\nHere are the common features of audio-lingual language teaching. Again, there may be substantial variation in practice. The lesson typically begins with a dialogue, which contains the structures and vocabulary of the lesson. The student is expected to mimic the dialogue and\neventually memorize it (termed \u0026ldquo;mim-mem\u0026rdquo;). Often, the class practices the dialogue as a group, and then in smaller groups. The dialogue is followed by pattern drill on the structures introduced in the dialogue. The aim of the drill is to \u0026ldquo;strengthen habits\u0026rdquo;, to make the pattern \u0026ldquo;automatic\u0026rdquo;.\nLado (1964) notes that audio-lingual pattern drills focus the students' attention away from the new structure. For example, the student may think he is learning vocabulary in an exercise such as:\nThat\u0026rsquo;s a __________. (key, knife, pencil, etc.)\n(cued by pictures, as in Lado and Fries, 1958) but in reality, according to audio-lingual theory, the student is making the pattern automatic.\nThere are four basic drill types: simple repetition, substitution (as in the example above), transformation (e.g. changing and affirmative sentence into a negative sentence), and translation.\nFollowing drill, some audio-lingual classes provide explanation. According to proponents of audio-lingualism, the explanation is a description of what was practiced, not a prescription of what to say. The \u0026ldquo;rules\u0026rdquo; presented are therefore not to be considered instructions on how to perform. The explanation section is considered optional, since, in our terms, it is \u0026ldquo;language appreciation\u0026rdquo;.\n Requirements for optimal input   Comprehensible. It can be maintained that audio-lingual methodology does provide comprehensible input. The dialogues and pattern practice are certainly understandable by most students, although some theorists have said that in early parts of a lesson actual comprehension is not necessary, that purely mechanical drill is useful.\n  Interesting/relevant. While Lado (1964) advises that the dialogue contain \u0026ldquo;useful\u0026rdquo; language, that it be age-appropriate and natural, most dialogues fall far short of the mark of true interest and relevance. Most pattern practice, of course, makes no attempt to meet this requirement.\n130\n  Not grammatically sequenced. There is a clear sequence in audio-lingual teaching, based usually on linguistic simplicity, but also influenced by frequency and predictions of difficulty by contrastive analysis. As is the case with grammar-translation, the entire lesson is dominated by the \u0026ldquo;structure of the day\u0026rdquo;.\n  Quantity. While audio-lingual teaching is capable of filling an entire class hour with aural-oral language, it is quite possible to argue that audio-lingualism does not meet this requirement as well as other methods (see below). While the presentation of a dialogue, for example, may take up a full period, students spend very little of this time focussing on the message, which is presented over and over. The goal is the memorization of the dialogue, not the comprehension of a message. Pattern practice may also be comprehensible in theory, but students probably do not attend to meaning after the first few repetitions (Lee, McCune and Patton, 1970). Indeed, according to some practitioners, the idea behind pattern practice is to avoid meaning altogether. For both dialogues and pattern practice, the entire hour might be spent with just a few sentences or patterns, as compared to the wide variety real communication gives.\n  Affective filter level. Audio-lingual teaching violates several aspects of the Input Hypothesis: production is expected immediately, and is expected to be error-free. Over-use of drill and repetition, procedures such as not allowing students access to the written word in early stages may also add to anxiety (see, for example, Schumann and Schumann (1978) pp. 5-6).\n  Tools for conversational management. Audio-lingualism does a slightly better job in this category than does grammar-translation, as the dialogues do contain material that can be used to invite input and to control its quality. The applicability of dialogues to free conversation and to genuine conversational management may be limited, however. Most dialogues are actually scripts, and are not designed to be used to negotiate meaning.\n   Learning  Theoretically, conscious learning is not an explicit goal of audio-lingualism. The goal, rather, is to have the student over-learn a variety of patterns to be used directly in performance. In practice, however, audio-lingual teaching often results in inductive learning, the student attempting to work out a conscious rule on the basis of the dialogue and pattern practice, with the explanation section serving to confirm or disconfirm his guess. There is thus no explicit attempt to restrict learning to rules that are learnable, portable and not yet acquired, nor is there any attempt to encourage rule use only in certain situations. Despite the fact that pattern practice attempt to focus students off rules, the requirement of complete correctness probably encourages Monitor use at all times.\n Summary  Some acquisition should result from the use of the audio-lingual method, but nowhere near what is obtainable with other methods that provide a larger amount of comprehensible and interesting/relevant input with a low filter. The diet of dialogues and patterns will occasionally be understood and be at i + 1, and may thus cause some acquisition. If learned according to plan, students will end up with a stock of sentences and patterns that will be of occasional use in conversation, and also serve the conversational management goal, to some extent. Inductive learning is implicitly encouraged (which may raise the filter for some deductive learners; see Chapter V), but no attempt is made to limit which rules are to be learned or when they are to be applied.\n3 . COGNITIVE-CODE\nCognitive-code bears some similarity to grammar-translation, but also differs in some ways. While the goal of grammar-translation is basically to help students read literature in the target language, cognitive code attempts to help the student in all four skills, speaking and listening in addition to reading and writing. The assumptions are similar, however, insofar as cognitive code posits that \u0026ldquo;competence precedes\nperformance\u0026rdquo;. In this case, \u0026ldquo;competence\u0026rdquo; is not the tacit knowledge of the native speaker, as originally defined by Chomsky (1965), but is conscious knowledge. Cognitive code assumes, as mentioned in Chapter III, that \u0026ldquo;once the student has a proper degree of cognitive control over the structures of a language, facility will develop automatically with the use of language in meaningful situations\u0026rdquo; (Carroll, 1966, p. 102). In other words, learning becomes acquisition.\nAs in grammar-translation, the lesson begins with an explanation of the rule, and this is often done, in foreign language situations, in the students' first language. Exercises follow, and these are meant to help the student practice the rule consciously. In other words, Monitor use is actively promoted. Exercises are followed by activities labelled \u0026ldquo;communicative competence\u0026rdquo;. This term has been used in the literature in several ways; in cognitive-code literature it appears to be synonymous with \u0026ldquo;fluency\u0026rdquo;. These activities provide the practice in meaningful situations referred to in the quote from Carroll above, and include dialogues, games, role playing activities, etc.\n Requirements for optimal input  Comprehensible. The explanation and exercise section, as is the case with grammar-translation, will provide very little comprehensible input, as the focus, at all times, is on form and not meaning. The \u0026ldquo;communicative competence\u0026rdquo; section of cognitive-code promises to provide greater amounts of comprehensible input, but this potential is diminished if activities are limited by the desire to contextualize the \u0026ldquo;rule of the day\u0026rdquo;. This practice, as claimed in Chapter III, limits the structures used (which may deny the student the i + 1 he needs), limits what can be discussed, and disturbs the naturalness of the communication. Interesting/relevant. This depends, of course, on the activities chosen for the communicative competence section. Regardless of what is chosen, however, the goal remains the learning of a specific structure, and because of this it is nearly impossible to satisfy the Forgetting Principle. Not grammatically sequenced. Cognitive-code, like grammar-translation, is sequenced, and the structure of the day dominates all parts of the lesson. Quantity. Thanks to the communicative competence section, there is greater quantity of comprehensible input in cognitive-code, as compared to grammar-translation. It does not, however, live up to the ideal of a class full of comprehensible input with total focus on the message, since the communicative competence section is only a part of the program and even here, the focus is on form. Affective filter level. Error correction on all output is part of most cognitive-code classrooms, students are expected to produce right away, and it is expected that this production will be accurate. This predicts a high filter for many students. Tools for conversational management. There is no announced attempt to provide this, but it is quite possible that some activities in the communicative competence section will provide some of these tools.   Learning  As is the case with grammar-translation, the assumption of cognitive-code is that conscious learning can be accomplished by everyone, that all rules are learnable, and that conscious knowledge should be available at all times. We can only conclude that cognitivecode encourages over-use of the Monitor, unless all rules \u0026ldquo;fade away\u0026rdquo; as soon as the structures become automatic.\n Summary  Cognitive-code should provide greater quantities of comprehensible input than grammar-translation does, and hence more acquisition, but does not come near to fulfilling the potential of the classroom. As in grammar-translation, learning is overemphasized.\n4 . THE DIRECT METHOD\r#\r\rThe term \u0026ldquo;direct method\u0026rdquo; has been used to refer to many different approaches to second language teaching. I will use it here to refer specifically to de Sauzé\u0026rsquo;s method and its present day versions, namely Pucciani and Hamel\u0026rsquo;s method for French (see Langue et Langage) , and similar versions for Spanish developed by Barcia.\nHere are the characteristics of the direct method, as I understand it. First, all discussion, all classroom language, is the target language. This includes the language of the exercises and teacher talk used for classroom management. The method focusses on inductive teaching of grammar. The goal of the instruction is for the students to guess, or work out, the rules of the language. To aid in induction, the teacher asks questions that are hopefully interesting and meaningful, and the students' response is then used to provide an example of the target structure. If this is well done, it can give a direct method session the mood of a conversation class. Let me repeat my favorite example from an earlier paper (Krashen, 1980), one that one of my teachers used in a direct method French class. The goal of this exercise was to teach the conjunction \u0026ldquo;bien que\u0026rdquo;, and the fact that its presence requires the following verb to be subjunctive:\nTeacher: Fait-il beau aujour\u0026rsquo;dhui?\nStudent: Non, Il ne fait pas beau aujourd\u0026rsquo;hui.\nTeacher: Irez-vous cependent \u0026amp;agrave; la plage pendant le week-end?\nStudent: Oui, j\u0026rsquo;irai cependent \u0026amp;agrave; la plage pendant le week-end.\nTeacher: Irez-vous \u0026amp;agrave; la plage bien qu\u0026rsquo;il ne fasse pas beau?\nStudent: Oui, j\u0026rsquo;irai \u0026amp;agrave; la plage bien qu\u0026rsquo;il ne \u0026hellip;\nMy teacher used this particular example on a determined beach-goer, and generally tried to tailor questions to students' interests.\nThe direct method insists on accuracy and errors are corrected in class. After several exchanges of the sort given above, when the teacher considers that enough examples have been given, the rule is discussed and explained in the target language.\n( a) Requirements for optimal input\r#\r\r Comprehensible. The direct method, with its insistence on the use  of the target language at all times, provides a great deal of comprehensible input. As is the case with the Natural Approach, the entire period is filled with target language use with a variety of topics and structures utilized.\n Interesting/relevant. As mentioned above, there is an attempt to make the language use in the classroom of some interest to the students. The goal of the lesson, however, is grammar teaching, and as discussed earlier, this puts heavy constraints on what can be discussed. Discussion is always meaningful, but is rarely genuinely communicative. According to Pucciani and Hamel\u0026rsquo;s manual, sentences such as:  Est-ce que votre pantalon est vieux ou neuf? (198)\nMangez-vous des carottes? (236)\nQui prepare le diner dans votre famille? (237)\nEst-ce que vous vous rasez tous les matins? (297)\nare recommended to help the student induce various points of grammar. As with other methods that rely on contextualization (see e.g. discussion of the Silent way), the requirement that all discussion embed a grammar point makes this requirement hard to meet.\n Not grammatically sequenced. The direct method is strictly sequenced, which distorts efforts at real communication. Quantity. As mentioned above, the direct method meets this requirement as well as any classroom method can, filling the entire hour with comprehensible input. Affective filter level. The insistence on grammatical accuracy at very early stages, the use of error correction, and the grammatical focus of the course may cause anxiety and a high filter for all but the most dedicated Monitor user. Tools for conversational management. Students are given the tools for interaction in the classroom in the target language\u0026ndash;they are soon able to initiate discussion with the teacher and ask questions  about grammar. Some of this conversational, or better, \u0026ldquo;classroom competence\u0026rdquo; will be useful on the outside, but some will not. There is no explicit goal of providing tools for conversation with a more competent native speaker.\n( b) Learning\r#\r\rThe direct method presumes that conscious control is necessary for acquisition, that conscious knowledge of grammar can be accessed at all times, and by all students. It demands full control of late-acquired structures in oral production from the very beginning ( e.g. gender), and may thus encourage over-use of the grammar.\n( c) Summary\r#\r\rThe direct method provides greater amounts of comprehensible input than many of its competitors. It remains, however, grammar-based, and this constrains its ability to provide truly interesting messages, and leads to over-use of the Monitor. The direct method, according to informal reports, has been very successful with certain populations, among students who have intrinsic motivation for language study and who believe that the study of conscious grammar is essential. For these students, the inductive study of grammar is in itself interesting, and provides all the interest necessary. In other words, grammar is subject matter. Acquisition, SLA theory predicts, comes from the teacher talk used to present the grammar. ( See Chapter IV for discussion, and Krashen, 1980.)\n5 . THE NATURAL APPROACH\r#\r\rThe Natural Approach was developed by Tracy Terrell at the University of California at Irvine for foreign language instruction at the university and high school levels. While originally developed independently of \u0026ldquo;Monitor Theory\u0026rdquo;, its later development and articulation have been influenced by the second language acquisition theory presented in this volume. The method can be described by the following principles:\n Classtime is devoted primarily to providing input for acquisition. The teacher speaks only the target language in the classroom. Students may use either the first or second language. If they choose to respond in the second language, their errors are not corrected unless communication is seriously impaired. Homework may include formal grammar work. Error correction is employed in correcting homework. The goals of the course are \u0026ldquo;semantic\u0026rdquo;; activities may involve the use of a certain structure, but the goals are to enable students to talk about ideas, perform tasks, and solve problems.  ( a) Requirements for optimal input\r#\r\r Comprehensible. The entire goal of classroom practice in the Natural Approach is to provide comprehensible input. Natural Approach teachers utilize realia, pictures, and students' previous knowledge to make their speech comprehensible from the first day. Interesting/relevant. This is a serious problem for a foreign language class. Natural  Approach attempts to capture students' interest by using what Terrell terms \u0026ldquo;Affective Acquisition Activities\u0026rdquo;, adapted from Christensen, that encourage discussion of topics of personal interest to the students (e.g. \u0026ldquo;Suppose you are a famous person, and there is a newspaper article about you. Tell at least one thing about yourself which is mentioned in the article\u0026hellip;\u0026quot;). In the early stages of the Natural Approach, classroom discussion focusses on personal information, the goal being to establish a group feeling. Later, students discuss their past histories, and eventually they are able to talk about their hopes and plans for the future.\n Not grammatically sequenced. The focus of the class is not on the presentation of grammar. There is a tendency for certain structures to be used more often in certain stages, but there is no deliberate sequencing. Quantity. Since the entire class period is filled with comprehensible  input, the Natural Approach meets this requirement as well as any foreign language teaching method can.\n Affective filter level. Since the Natural Approach attempt to remain \u0026ldquo;true\u0026rdquo; to the Input Hypothesis, many sources of anxiety are reduced or eliminated. Students do not have to produce in the second language until they feel they are ready. Error correction for form is not done in the classroom. Also, an attempt is made to discuss topics that are interesting to students. This predicts lower filter strength than most other methods. Tools for conversational management. Some tools for conversational management are provided in the form of very short dialogues, designed to help students converse with native speakers on predictable and frequent topics. Also, students are introduced, right from the beginning, to phrases and expressions that will help them control the teacher\u0026rsquo;s input (e.g. \u0026ldquo;I don\u0026rsquo;t understand\u0026rdquo;, \u0026ldquo;What does _________ mean?\u0026rdquo;, etc.).  ( b) Learning\r#\r\rThe Natural Approach is designed to be consistent with what is known of Monitor functioning. The absence of error correction in the classroom is a recognition that there are constraints on when the conscious grammar is used: students are expected to utilize the Monitor only at home, when they have time, when they are focussed on form, and when they know, or are learning, a rule. At the university level, grammar homework is assigned to everyone, but it is conceivable that the Natural Approach can be adapted for variations in Monitor use, with varying amounts of homework, or different type homework assignments for under, or optimal users. While little experimentation has been done with children, SLA theory predicts that younger children would not profit from grammar homework, while older children and adolescents might be able to handle limited amounts. (For more detail, see Terrell, 1977.)\n( c) Summary\r#\r\rThe Natural Approach makes a deliberate effort to fit all requirements for both Learning and Acquisition. Its only weakness, according to SLA theory, is that it remains a classroom method, and for some students this prohibits the communication of interesting and relevant topics (see discussion below).\n6 . TOTAL PHYSICAL RESPONSE\r#\r\rThis unique method was developed by James Asher, and is described in many of his journal papers and his book (Asher, 1977a). Total Physical Response, or TPR, consists basically of obeying commands given by the instructor that involve an overt physical response. The instructor, for example, says \u0026ldquo;stand up\u0026rdquo; and the class stands up. The commands become more complex as the class progresses, and Asher claims that it is quite possible to embed vast amounts of syntax into the form of a command. Students speak only when they are \u0026ldquo;ready\u0026rdquo;, which usually occurs at around 10 hours of instruction, and consists of student commands. In the typical TPR class (as described by Asher, Kusudo, and de la Torre, 1974), the first few months (45 hours in this case) would consist of 70% listening comprehension (obeying commands), 20% speaking, and 10% reading and writing. Asher (1977b) lists the three principles of the TPR system :\n Delay speech from students until understanding of spoken language \u0026ldquo;has been extensively internalized\u0026rdquo; (p. 1041). \u0026ldquo;Achieve understanding of spoken language through utterances by the instructor in the imperative\u0026rdquo; (p. 1041). \u0026ldquo;Expect that, at some point in the understanding of spoken language, students will indicate a \u0026lsquo;readiness\u0026rsquo; to talk\u0026rdquo; (p. 1041).1 *  ( a) Requirements for optimal input\r#\r\r(i) Comprehensible. TPR meets this requirement. The total physical response required of the student is, in effect, a manifestation of his comprehension of the teacher\u0026rsquo;s utterance. It can, in fact, be argued that a TPR is not necessary for comprehension or for progress in second\n* Superscript numbers refer to Notes at end of chapters.\n140\nlanguage acquisition, but merely shows that the input has been understood. Asher\u0026rsquo;s own research supports the view that the use of the TPR is not essential. A series of studies using children (Asher, 1966; Asher and Price, 1967) and adults (Kunihira and Asher, 1965; Asher, 1965, 1969) shows that students who merely observe a TPR do as well as those who perform TPR\u0026rsquo;s on tests that demand a TPR. Both groups, those who observed TPR\u0026rsquo;s and those who performed them, outperformed students who wrote their answers on tests. This suggests that Asher\u0026rsquo;s second principle may not be necessary, but may be simply an effective device to focus students on the input and to keep them actively involved.\n Interesting/relevant. The novelty and freshness of the TPR technique probably does a great deal to make the class experience interesting. It may be difficult to remain interesting if one holds to the requirement of producing imperatives 100% of the time, however (Asher nowhere recommends this). Not grammatically sequenced. According to Asher\u0026rsquo;s description, each lesson does have a grammatical focus in TPR. In other words, commands contextualize various points of grammar. As discussed earlier, this can hinder efforts to meet requirement 2 above. There is nothing inherent in the TPR approach that demands a grammatical focus, however. Quantity. TPR can fill an entire class period with comprehensible input in the form of commands. It thus has the potential of meeting this requirement fully. Affective filter level. TPR makes one very important contribution to lowering student anxiety: students are not asked to produce in the second language until they themselves decide they are ready. They are, in other words, allowed a silent period. Asher does not state explicitly whether error correction on early student output is required in TPR; this may vary from teacher to teacher. It has been pointed out,  however, that the necessity of producing overt physical responses right away may provoke anxiety in some students.\n Tools for conversational management. This is no explicit mention of this in Asher\u0026rsquo;s papers.  ( b) Learning\r#\r\rThe assumption of TPR is that grammar will be learned inductively, that is, students will work out the correct form of the rule during the class activity. In terms of the theory presented in this book, this can be interpreted as claiming that much of the grammar will be acquired and/or inductively learned in the technical sense of inductive learning. (See Chapter IV for discussion of the difference between inductive learning and acquisition.) The emphasis on listening comprehension and the delay of speech will, in itself, prevent much misuse of conscious learning: students will tend not to monitor their output for form in inappropriate circumstances and they will not use rules unsuited for Monitor use if there is less demand for production.\n( c) Summary\r#\r\rSecond Language Acquisition theory predicts that TPR should result in substantial language acquisition, and should not encourage overuse of the conscious Monitor. The use of TPR insures the active participation of students, helps the teacher know when utterances are understood, and also provides contexts to help students understand the language they hear. It may fail to completely satisfy the interesting/relevant requirement, first, since it is a classroom method, and second, because of constraints imposed by the continuous use of imperatives and the grammatical focus of lessons. It should, however, do far better than methods such as audio-lingual and grammar-translation.\n7 . SUGGESTOPEDIA\r#\r\rFrom what I have read in the sources available to me, the \u0026ldquo;classic\u0026rdquo; Suggestopedia class, as conducted in Lozanov\u0026rsquo;s Institute of Suggestology in Sofia, Bulgaria, consists of the following. Courses are given to\nsmall groups, around 12 students at a time, and are intensive, meeting for four hours per day for one month. Each four-hour class, according to Bancroft (1978), consists of three parts:\n  Review, done via traditional conversations, games, plays, etc. It may include some exercises and error correction, but does not include the use of a language lab or pattern drill.\n  Presentation of new material. New material is introduced in the form of dialogues based on situations familiar to the students. Bancroft notes that \u0026ldquo;new material is presented in a somewhat traditional way, with the necessary grammar and translation\u0026rdquo; (p. 170) . The dialogues are very long. According to Bushman and Madsen (1976), they run from 10 to 14 pages.\n  This portion is the \u0026ldquo;truly original feature\u0026rdquo; of Suggestopedia ( Bancroft, p. 170), and is itself divided into two parts. In the first part, the active seance, the dialogue is read by the teacher, while students follow the text and engage in deep and rhythmic Yoga breathing. These activities are co-ordinated: \u0026ldquo;In accordance with the students' breathing, the teacher reads the language materials in the following order and with the following timing: Bulgarian ( L1) translation (two seconds); foreign language phrase (four seconds); pause (two seconds). While the foreign language phrase is being read, the students retain their breath for four seconds, look at the appropriate part of the text, and mentally repeat to themselves the given phrase or word-group in the FL. Concentration is greatly promoted by the retention or suspension of breath\u0026rdquo; (Bancroft, p. 171).\nThe second part, labelled the passive or convert part of the seance, involves music.\n  The central activity is the teacher\u0026rsquo;s reading of the dialogue \u0026ldquo;with an emotional intonation\u0026rdquo; (Bancroft, p. 171). The students, \u0026ldquo;with eyes closed, meditate on the text\u0026rdquo; while baroque music is played. The musical selections are specifically chosen to contribute to a \u0026ldquo;state of relaxation and meditation\u0026hellip; that is necessary for unconscious absorption of the language materials\u0026rdquo; ( Bancroft, p. 172).\nIn discussing adaptions of the Sofia method, Bancroft notes that \u0026ldquo;three elements of the Lozanov Method are considered essential for the system to work effectively: (1) an attractive classroom (with soft\nlighting) and a pleasant classroom atmosphere; (2) a teacher with a dynamic personality who is able to act out the materials and motivate the students to learn; (3) a state of relaxed alertness in the students\u0026hellip;\u0026rdquo; (p. 172).\nIn Suggestopedia, each member of the class is given a new name and role to play, \u0026ldquo;to overcome inhibitions\u0026rdquo; (p. 170). Other Suggestopedia techniques and attitudes will be discussed below, as we work through the analysis according to input requirements for acquisition.\n( a) Requirements for optimal input\r#\r\r Comprehensible. Several Suggestopedia procedures are specifically designed to aid comprehensibility of input. Initial dialogues are based on situations familiar to the student, and the use of the students' first language in Part One is partially justified on the ground that it helps the student confirm that he has indeed understood the text presented in the target language (Racle, 1979, p. 100). Interesting/relevant. The topics of the dialogues are designed not only to be of inherent interest, but also to be of some practical value and relevant to students' needs. In a Suggestopedia course designed to teach French to Anglophone public servants in Canada, at the Public Service Commission in Ottawa, the aim was to take into account both student interest and their communicative needs in the office situation (Public Service Commission, 1975). Also, Novakov, cited (and translated into French) by Racle, 1979, notes that \u0026ldquo;Les situations présentées sont typiques, réelles, contiennent un message et sont proches de l\u0026rsquo;expérience des élèves, ce qui facilite leur activité\u0026rdquo; (p. 99). Filter level. While Suggestopedia attempts to meet the other goals discussed both above and below, its primary focus and greatest apparent success is here. Practically every feature of Suggestopedia is aimed at relaxing the student, reducing anxieties, removing mental blocks, and building confidence. Here are just a few more examples:  The design of the classroom is meant to produce \u0026ldquo;a pleasant and warm environment\u0026rdquo; (Public Service Commission, 1975, p. 29). Students are seated on comfortable chairs in a circle to \u0026ldquo;encourage informal contact and free natural communication\u0026rdquo; (Bushman and Madsen,\n1976, p. 32). The traditional classroom, it is felt, \u0026ldquo;calls to mind the frustration, failure, and artificiality of many previous learning efforts\u0026rdquo; (Bushman and Madsen, p. 32).\nThe special breathing exercises have as their goal both increased mental alertness and reduction of tension. Bancroft reports that American adaptions of Suggestopedia also utilize physical exercises (stretching and bending), and \u0026ldquo;mind-calming exercises\u0026rdquo;, in addition to Yogic breathing to help students achieve the desired state of relaxed alertness.\nMusic is also used as a means of lowering anxiety and diminishing tension, and inducing the state of relaxed alertness considered optimal for second language acquisition ( see Racle, 1980, pp. 73-74).\nAnother key Suggestopedic idea aimed at lowering the filter is the behavior of the teacher. Suggestopedia considers the \u0026ldquo;authority\u0026rdquo; of the teacher to be very important (\u0026ldquo;an integral part of the method and not just a desirable characteristic of the teacher\u0026rdquo;; Stevick, 1980, p. 238). The teacher\u0026rsquo;s behavior is meant to build the students' confidence both in their own potential for second language acquisition and in the method itself; the teacher should be confident, but not tyrannical, exercise firm over-all control but also encourage student initiative ( for excellent discussion, see Stevick, 1980, Chapters 2 and 18).\n Not grammatically sequenced. There is a deliberate attempt to include a certain amount of grammar during the first one month intensive course (Racle, 1978, p. 95 lists the structures covered for French). It does not appear to be the case, however, that a rigid sequence is followed. All writers on Suggestopedia I have read emphasize that the focus, from the very beginning, is on communication, and the dialogues do not seem to focus on specific points of grammar. According to Bushman and Madsen, \u0026ldquo;Dialogues are rambling conversations loosely aggregated around common themes, which cover a great deal of territory with considerable built-in redundancy\u0026rdquo; (p. 33). In our terms, Suggestopedia seems to depend on the net of grammatical structures provided by successful communication. Quantity. Suggestopedia seems to meet this requirement as well. While there is some explanation in the first language, the long and varied dialogue dominates the session, both as pure input and as a basis for communicative use of the L2. Tools for conversational management. This is not mentioned explicitly, but may be covered, since the dialogues attempt to be realistic. Texts used in the Public Service Commission course in Canada were apparently designed to allow and promote conversation in Public Service offices as well as elsewhere. There is no explicit mention, however, of giving students the tools they need to converse with more competent speakers.  ( b) Learning\r#\r\rAccording to Bushman and Madsen (1976), \u0026ldquo;Content precedes form. Accurate pronunciation and grammar are to come in due course\u0026rdquo; (p. 32). While there is error correction and grammar explanation in part one of each lesson, grammar use in Suggestopedia apparently does not interfere with communication.\n( c) Summary\r#\r\rWhile I have attempted to fit the Suggestopedia system, as I understand it, into my schema, and have omitted mention of several aspects of Suggestopedia philosophy that its practitioners would undoubtedly consider to be very important, it appears that Suggestopedia comes very close to completely matching the requirements for optimal input. Elements that Lozanov might consider to invoke hyper- or super-memory, or that \u0026ldquo;desuggest\u0026rdquo; limitations, are, in our terms, conditions that lower the affective filter and that allow the subconscious language acquisition system to operate at full, or near full capacity and efficiency. Suggestopedia also seems to put grammar in its proper place.\nB. Applied Linguistics Research\r#\r\rWe turn now to attempts to empirically test teaching methods via \u0026ldquo;applied linguistics research\u0026rdquo;. I defined applied linguistics research in Chapter I as research aimed at solving a practical problem, with or\nwithout reference to an underlying theory. A portion of applied linguistics research has consisted of empirical comparisons of language teaching methods, and the purpose of this section is to review the major findings of these studies in order to make the following points:\n  When older methods such as grammar-translation, cognitive-code, and audio-lingual are compared with each other, we see\nsmall differences, or no differences in terms of efficacy. Cognitive-code, in some studies, shows a very slight superiority for\nadult students when compared to audio-lingual, and no differences are seen when adolescents are compared.\n  Data are not as plentiful as we would like them to be for newer methods, but the results we do have are quite consistent with our theoretical analysis of the previous section. Newer approaches, such as Total Physical Response, produce significantly better results than older approaches.\n  We will conclude that we see little difference between older methods since they all fail many of the requirements for optimal input and overemphasize conscious learning. The newer methods put to the method comparison test satisfy the requirements better, and are also shown to outperform their rivals.\n1 . REVIEW OF METHOD COMPARISON STUDIES\r#\r\rBefore proceeding directly to the studies, it should be pointed out that classroom research, while it often produces valuable and interesting data, does not produce \u0026ldquo;definitive\u0026rdquo; data. This is because of the many \u0026ldquo;confounding variables\u0026rdquo; that prevent us, in nearly all cases, from concluding that it must have been a particular treatment or method that was responsible for the results obtained. It may be useful to list some of these potential confounds here.\nIf students in approach A did better in achievement tests than students in approach B, assuming they were equal to start with, it may be the teacher rather than the actual method that was responsible for the difference. Even if the same teacher taught both classes, the teacher may have preferred one approach to the other, or may have even liked the students in one class better! Class A might have been taught early in the morning, and class B right after lunch. Thus, students in class A\nTable 5.1. American studies comparing foreign language teaching methods\n___________________________________________________________________________________\nStudy Methods TL n Tests: Speaking LC Reading Write Attitude toward method ___________________________________________________________________________________\nScherer \u0026amp; GT, AL German 130, 150 Year 1: AL AL GT GT AL\nWertheimer Year 2: nd AL nd GT AL\nChastain \u0026amp; CC, AL Spanish 51, 48 Year 1: AL nd CC CC\nWoerdehoff1 35, 31 Year 2: AL nd nd nd\nMueller CC, AL French not CC CC CC CC given (fewer dropouts) ___________________________________________________________________________________\nAL = audio-lingual\nGT = grammar-translation\nCC = Cognitive code nd = no difference\n1 Includes both Chastain \u0026amp; Woerdehoff (1968) and Chastain (1970).\nmight have been more alert. Class B might have been located near the athletic field, causing more distractions. Texts may have made a difference. There might also have been a selection bias on the part of the students; some may have deliberately enrolled in class A because they knew it was \u0026ldquo;special\u0026rdquo;. The teacher can certainly add other potential confounds. (For more technical discussion, see Campbell and Stanley, 1963.)\nMany of the methodological problems can be reduced. If approach A consistently does better in many studies, involving different classrooms with many students in different schools, that is, if A is reliably superior in a variety of conditions using a variety of measures, the results of classroom experiments are at least worth considering, especially if they are consistent with conclusions derived from other sources, e.g. second language acquisition theory.\n( a) American studies of AL, GT, and CC\r#\r\rTable 5.1 summarizes several comparisons of teaching methods all of which lasted one or two years. These studies were all concerned with foreign language teaching in the United States, comparing the audio-lingual system with either grammar-translation (GT) or cognitive-code (CC).\nScherer and Wertheimer (1964) found some differences between audio-lingual (AL) and grammar-translation (GT) after year one, differences that appeared to reflect the modality each method emphasized. These differences were attenuated after the second year, and combined scores for sub-tests showed no significant differences between the two methods. It was concluded that students tend to do well in those areas emphasized in the teaching method.\nChastain and Woerdehoff (1968) and Chastain (1970) found similar results after comparing audio-lingual and cognitive-code teaching, finding some differences after year one, differences that could plausibly be traced to those skills emphasized in the method used, but no differences after year two. Chastain (1970) also noted that males tended to do better with AL, while females did better in CC sections. We return to these interesting findings later.\nMueller (1971) limited his study to one year, comparing AL and CC\nteaching. For those skills tested, CC was superior, while AL classes scored at national (MLA) norms. The results of previous studies force us to ask whether this advantage would have been maintained in the second year.\nTable 5.2 gives us some idea as to the degree of superiority shown by one method over another. What is obvious is that both methods result in some progress; students do better at the end of the course than at the beginning. While differences are occasionally significant, they are certainly not huge.\nTable 5.2\nDegree of superiority shown in comparative method studies (American series)\n____________________________________________________________________________\nListening\nMLA Cooperative Tests: Reading1 Writing1 comp. Speaking2\n____________________________________________________________________________\nAL 26 59 25 51\nCC 30 64 26 49\n____________________________________________________________________________\n1: Significant difference in favor of CC.\n2: Significant difference in favor of AL.\nFrom: Chastain and Woerdehoff (1968) Tests administered after one year of university level study of Spanish.\n( b) The GUME project\r#\r\rThe first group of studies looked at language teaching efficacy over one or two years, using proficiency tests. Another group of studies focussed rather on specific structures over a shorter time span. These studies are the result of the GUME project, which dealt with English as a foreign language in Sweden. The GUME project studies are summarized in Table 5.3.\nThe GUME project aimed to compare AL type teaching with \u0026ldquo;cognitive\u0026rdquo; methods, the latter being quite similar to the cognitive-code system. I will not present their results study-bystudy, but will attempt instead to summarize the overall results; the interested reader can refer to Table 5.3 for details, or to the studies themselves (see especially von Elek and Oskarsson, 1975 , for a complete review of the adult studies ).\n150\nStated very simply, the GUME project found no overall differences between what they termed \u0026ldquo;implicit\u0026rdquo; methods (similar to AL) and \u0026ldquo;explicit\u0026rdquo; methods (similar to CC for adolescent subjects. For adult subjects, explicit methods were found to be somewhat better. The difference for adults was statistically significant, but not very large.\nTo go into slightly more detail for the adolescents, despite the overall findings of no differences, some sub-groups did better using explicit methods: (1) an \u0026ldquo;accelerated\u0026rdquo; class in Levin\u0026rsquo;s study, (2) females, in von Elek and Oskarsson, a finding similar to that of Chastain (1970). One class in von Elek and Oskarsson\u0026rsquo;s study, described as being lower than the norm in \u0026ldquo;verbal intelligence\u0026rdquo; (von Elek and Oskarsson, 1975, p. 29) was reported to have had more trouble than other classes with the explicit method.\nIn addition to simple comparisons of explicit and implicit methods, von Elek and Oskarsson also compared various combinations of these methods. They found that IMEX (see Table 5.3) was superior to IM alone; in other words, adding some grammatical explanation to a method based totally on pattern drills was helpful (see footnote two on Table 5.3). However, EXIM was not superior to EX: adding pattern drills to a cognitive approach did not help.\nTable 5.4 is included to give the reader an idea of the degree of superiority the explicit methods showed with adult subjects in the GUME studies. As is the case with American studies described in the previous section, the differences are not large. Clearly, both groups make progress.\n2 . SOME PRELIMINARY CONCLUSIONS TO METHOD COMPARISON\nSTUDIES\nTaken as a whole, American and Swedish studies show only small differences, if at all, between the methods they investigated. Students make at least some progress no matter what method is used, a result that had two different kinds of reactions in the field of language teaching. Stevick (1976) noted the implicit contradiction, which he stated in the form of a riddle:\n\u0026ldquo;In the field of language teaching, Method A is the logical contradiction of Method B: if the assumptions from which A claims to be derived are correct, then B cannot work, and viceversa. yet one\nTable 5.3. GUME project research comparing teaching methods\n___________________________________________________________________________________\nStudy Method Students Materials Results\n___________________________________________________________________________________\nOlsson, 1969 Implicit1 Age 14 One structure No differences\nEX Swedish (passive)\nEX English\nLevin, 1972 Implicit Ages 14-15 No overall difference;\nEX English \u0026ldquo;advanced\u0026rdquo; group excels in EX Swedish EX Swedish\nLevin, 1972 Implicit Age 13 No overall difference;\nEX Swedish more \u0026ldquo;able\u0026rdquo; students do well\nEX English with EX Swedish,\nbut less able do worse\nVon Elek \u0026amp; IM2 Adults Ten lessons EXPLICIT significantly better\nOskarsson, EX n = 125\n1975\nVon Elek \u0026amp; IM Adults As above EXPLICIT significantly better\nOskarsson, ex N = 91\n1975\nVon Elek \u0026amp; IM Age 12 As above No difference, due to low\nOskarsson, EX performance of one\n1975 EXPLICIT class\n___________________________________________________________________________________\n152\nTable 5.3.\u0026ndash;Continued\n___________________________________________________________________________________\nStudy Method Students Materials Results\n___________________________________________________________________________________\nVon Elek \u0026amp; EX, IM, Adults 4 lessons on EX superior to IM;\nOskarsson, EXIM, IMEX3 n = 277 2 structures IMEX better than IM,\n1975 but not significant;\nEX superior to EXIM\n(not predicted)\nVon Elek \u0026amp; EX, IM, Age 12 4 lessons on Girls tend to conform\nOskarsson, EXIM, IXEM n = 335 2 structures to the adult pattern\n1975 (see above) but boys\ndo not\n___________________________________________________________________________________\n1: IM = \u0026ldquo;implicit\u0026rdquo; (pattern drills only). EX = \u0026ldquo;explicit\u0026rdquo; (pattern drills in combination with explanation). EX Swedish = explanation in Swedish.\nEX English = explanation in English.\n2: IM = \u0026ldquo;structured and graded pattern drills, performed on the basis of situational pictures projected on a screen in front of the class\u0026hellip; no explicit explanations, comparisons with the source language, or translation exercises \u0026quot; (von Elek and Oskarsson, 1975, p. 16). EX = \u0026ldquo;students were given explicit information about the syntactic characteristics of the structures being practiced\u0026hellip; comparisons were made with the corresponding structures in Swedish\u0026hellip; grammar was taught deductively\u0026hellip; explanations and directions were given before main practice with the structure under study\u0026hellip; exercises were mostly of the fill-in type or translation\u0026hellip; no pattern drills were performed\u0026rdquo; (von Elek and Oskarsson, 1975, p. 16-17).\n3: IMEX = identical to IM with the addition of explanation. EXIM = identical to EX with addition of oral pattern drills.\n153\nTABLE 5.4\nThe degree of superiority shown in comparative method studies (GUME project)\n_________________________________________________________________\nGroup Test Pre-test SD Post-test SD Progress\n_________________________________________________________________\nIM A 26.94 8.61 33.00 9.31 6.06\n 23.75 7.64 27.53 7.79 3.78 5.86 3.40 9.40 4.16 3.54  EX A 25.71 6.61 36.59 9.17 10.88\n 21.82 5.19 29.18 8.14 7.36 5.65 3.28 11.84 4.39 6.19  _________________________________________________________________\nDescription of tests:\nA: 60 items: Students listen to oral conversation. They choose one of three alternatives to fill in missing part of last exchange (no more than two words).\nB: 50 items: described as an \u0026ldquo;ordinary multiple choice test\u0026rdquo;\n(p. 66)\nC: 20 items: written production test; students \u0026ldquo;fill in the crucial element in incomplete English sentences. The meaning of each sentence was clarified either by the complete Swedish equivalent, or by a cure word\u0026rdquo; (p. 66). From: Von Elek and Oskarsson (1972).\ncolleague is getting excellent results with A and another is getting excellent results with B. How is this possible?\u0026rdquo; (p. 104).\nTo apply this riddle to the results of comparative method research, we can ask how the cognitive approach, which assumes that learning becomes acquisition, can give results comparable to audio-lingual teaching, which is based on the hypothesis that we learn language by conditioning and habit-strengthening.\nBefore turning to a possible answer, it should be noted that there was a different reaction: not everyone saw the contradiction Stevick saw. Many methodologists and teachers simply assumed that the solution was simply to be eclectic, to choose parts of each system in the belief that the answer must be somewhere in the middle. As fair minded as this sounds, it often resulted, in my opinion, in teachers choosing the worst from each, the parts least likely to encourage language acquisition: pattern drill from the audio-lingual system, and rule explanation from the cognitive and grammar-translation approach!\nIn my interpretation, the results of method comparison studies using audio-lingual, grammar-translation, and cognitive code are quite consistent with the theoretical analysis of these methods presented in the previous section: according to this analysis, none of these methods does a particularly effective job in encouraging subconscious language acquisition, although each will provide at least some, and the cognitive\n154\nmethods will allow somewhat more learning. This predicts the close similarly in effectiveness, and the slight superiority cognitive systems show for older subjects and the more \u0026ldquo;verbal\u0026rdquo; adolescents. It also predicts that other methods should do much, much better. Unfortunately, we do not have detailed method comparison data on all the newer methods, but some is available, and the results are quite consistent with this prediction.\n3 . MORE RECENT METHOD COMPARISON STUDIES\r#\r\rWe turn now to studies that involve the newer methods, methods with better report cards, according to second language acquisition theory, than grammar-translation, audiolingual, or cognitive-code. We do not have detailed reports on every method compared to every other, and some of the new approaches have never been tested. The studies that have been performed, however, indicate that those methods that provide more of the input necessary for acquisition, and that \u0026ldquo;put grammar in its place\u0026rdquo;, are superior to older approaches.\n( a) The TPR series\r#\r\rAsher has done a thorough job in putting his method to the empirical test. He has compared TPR to other methods using foreign language classes and second language classes, using children and using adults. Here is a brief survey.\nThe TPR series with adults begins with Asher (1972), which compared students in a TPR German course with controls in a \u0026ldquo;standard\u0026rdquo; college course. Asher reported that after only 32 hours of TPR instruction, TPR students outperformed controls, who had had 150 hours of classtime, in a test of listening comprehension, and equaled controls in tests of reading and writing. Asher\u0026rsquo;s students progressed nearly five times faster! This is in contrast to the very small differences seen in older comparative method experiments comparing audiolingual, cognitive-code, and grammar-translation.\nAsher, Kusudo and de la Torre (1974) compared TPR students studying Spanish at the first year university level with AL controls. After 45 hours of TPR instruction, students outperformed controls who had had 150 hours in listening comprehension, and equaled controls' performance on a reading test (Pimsleur Spanish Proficiency Test).\nAfter 45 additional hours of instruction, TPR students performed beyond the 50th percentile on a Spanish proficiency test designed for students with 150 hours on all skills\nAsher (1977a) compared 30 ESL students using TPR to controls using audio-lingual instruction, and reported that TPR students outperformed controls who had had the same amount of training (120 hours) but who had started at a higher level class.\nTPR studies have also been done using children as subjects. Asher (1977b) is really three experiments in one, all involving Spanish as a foreign language in grades five through nine. In Experiment I, TPR classes in grade six, and a class consisting of seventh and eighth graders were compared to grade nine controls. The controls covered similar material, but their instruction focussed on repetition, and formal instruction in reading and writing, \u0026ldquo;emphasizing Spanish grammar\u0026rdquo;. All groups had a total of 40 hours of classtime. All TPR classes (seven different classes in all)exceeded the controls on a test of written production (subjects were asked to write a short story based on a cartoon, and were graded on the number of meaningful expressions produced).\nIn Experiment II, nine elementary school TPR classes, from grades five through eight, and an adult education TPR class, were compared with two control classes from grades seven through nine. This time, TPR classes had only 20 hours of instruction while controls had 200 hours of instruction similar to that described in Experiment I. The test used was the \u0026ldquo;Spanish Picture Test for Listening\u0026rdquo;, which asked students to judge whether a given sentence was true or false in relation to a picture. All TPR classes, with the exception of grade five, outperformed controls after 100 hours, and the adult class, after only 20 hours, outperformed controls after 200 hours. Similar results were obtained using a reading test.\nIn Experiment III, fifth and sixth grade TPR and control classes were compared on tests that measured fluency (e.g. \u0026ldquo;Write as many Spanish orders or sentences as you can recall\u0026hellip;\u0026quot;). Both groups had equal classtime. TPR students did significantly better than controls on both fluency tasks.\nThe TPR results are clear and consistent, and the magnitude of superiority of TPR is quite striking. Even the one sub-group that did not turn out to be superior (grade five in Experiment II above) can be explained: the TPR advantage was outweighed by the fact that the controls\nwere older, and, as mentioned in Chapter II, older children are known to be faster acquirers ( Krashen, Long and Scarcella, 1979).\n( b) Other input methods compared\r#\r\rA variety of studies have been done examining the efficacy of methods that, like TPR, focus on providing comprehensible input and do not force early production. None of these methods has been analyzed in the previous section, since they are not \u0026ldquo;standard\u0026rdquo; or widely used, but they strengthen both the case for TPR and the hypothesis that methods allowing a silent period will do better than methods that do not, even when \u0026ldquo;speaking skills\u0026rdquo; are tested directly.\nGary (1975) examined children studying Spanish as a foreign language over a period of five months. Her experimental group did not speak at all for the first 14 weeks but, instead, had to produce \u0026ldquo;active responses\u0026rdquo; that demonstrated comprehension. Also, they were not forced to speak for much of the next seven weeks. The experimental group was shown to be superior to the control group in listening comprehension and equal in speaking, despite the fact that the controls had more \u0026ldquo;practice\u0026rdquo; in speaking.\nPostovsky (1974) used students at the Defence Language Institute, studying Russian in an intensive 12 week course, six hours per day, in a fairly standard audio-lingual course. The \u0026ldquo;experimental\u0026rdquo; group did not speak for the first four weeks, but wrote their responses. The two groups were combined after four weeks. At mid-terms, the experimental group excelled in reading, writing, and speaking tests (especially with respect to \u0026ldquo;control of grammar\u0026rdquo; and \u0026ldquo;reading aloud\u0026rdquo;), and after 12 weeks, they were significantly better in listening comprehension.\nSwaffer and Woodruff (1978) examined the effects of a first year college German course taught at the University of Texas. As is the case with the studies just cited, their approach was not exactly any of the standard ones described in the first part of this chapter, but it fits the requirement for providing optimal input for acquisition and for putting learning in its place very well. The first four weeks of the course were TPR based, with the emphasis switching to reading \u0026ldquo;for global meaning\u0026rdquo; (p. 28). Students were not required to speak at all in German for the first two weeks of the class, and \u0026ldquo;thereafter students were encouraged to speak on a voluntary basis\u0026rdquo; (p. 28). Also, \u0026ldquo;overt corrections of\nbeginning students' production errors (was) kept at a minimum\u0026rdquo; (p. 28). Low filter strength was further encouraged by the use of relaxation exercises and yoga breathing. Also, \u0026ldquo;except for a brief (five-minute) question and answer period at the close of each hour, German was the exclusive language of instruction\u0026rdquo; (p. 28). No drill was used, and the only grammar taught was those features \u0026ldquo;considered essential for listening and reading comprehension\u0026rdquo; (p. 30). Swaffer and Woodruff\u0026rsquo;s method thus appears to supply comprehensible input in quantity, using techniques that encourage a lower affective filter, and does not encourage the over-use of the Monitor.\nThe Swaffer and Woodruff program was evaluated in several ways, and all indicated clearly that the method was a huge improvement over other approaches. First, as compared to previous years, more students continued on to second semester German. Second, German courses taught the new way received much better evaluations from the students. Third, students completing the course performed well above the national norms on the Modern Language Association reading and listening tests (70th and 69th percentiles), and last, student self-report of their own abilities was, in my opinion, amazing: 78% of the students finishing the first year \u0026ldquo;expressed confidence that they could read German and grasp main ideas at least most of the time\u0026rdquo; (p. 32); 48% said they could understand spoken German at least most of the time. I do not know of control data for this last question, but from experience, these responses are quite unusual.2\n( c) Suggestopedia research\r#\r\rWhile there have been reports of students learning 1000 words per day using Suggestopedia, in the normal one month intensive course, students cover about 2000 words. Lozanov is quoted as saying that \u0026ldquo;after completing the course, the students can express themselves freely within the framework of their lexical capacity, and can read newspapers and books.\u0026rdquo; (Interview published in Pravda, reprinted in Ostrander and Schroeder, 1976, p. 74) These are excellent results, but are not superhuman\u0026ndash;the month\u0026rsquo;s course, as noted earlier, is quite intensive, meeting four hours per day, six days a week, for a total of nearly 100 hours. In terms of classhours alone, this is equivalent to more than one year of study at the university level. If students can indeed\n\u0026ldquo;get by\u0026rdquo; in conversation in the target language and read many things in it as well, Lozanov\u0026rsquo;s approach may be just about as successful as other \u0026ldquo;input methods\u0026rdquo;, such as the method used by Swaffer and Woodruff, who report similar results.\nBushman and Madsen (1976) put Suggestopedia to the experimental test in a small scale study done at Brigham Young University. (Lozanov has carried out extensive experimentation which reportedly demonstrate the superiority of Suggestopedia over AL-type methods. Details of these studies are not available to me. For a very critical review, see Scovel, 1979.) Six different classes at BYU, teaching Finnish as a foreign language, with an average of seven students in each class were used. Two control classes were taught using the \u0026ldquo;full\u0026rdquo; Suggestopedia treatment and two with a modified treatment. The modified Suggestopedia classes followed all aspects of Suggestopedia but lacked music, the easy chairs, and the \u0026ldquo;living room environment\u0026rdquo;. They were held instead in ordinary classrooms. Each class received 10 hours of instruction and covered similar linguistic material. To control for teacher effect, two instructors taught all three treatments.\nSuggestopedia students in both full and modified classes clearly outperformed controls in a vocabulary test and were \u0026ldquo;vastly superior\u0026rdquo; in a test of \u0026ldquo;communication\u0026rdquo;. (In this test, students were rated on their success in conveying a message to a native speaker.) There were no significant differences between Suggestopedia classes and controls on a grammar test or in a pronunciation test; this result supports the hypothesis that Suggestopedia was superior to the control group, since control classes had far more work on pronunciation and grammar in the form of pattern drills and repetition exercises.\nBushman and Madsen also probed student\u0026rsquo;s personal reactions to the different treatments, and reported no differences between groups: there was no difference in measured affect between Suggestopedic and control groups. This conflicts, to some extent, with reports from the Canadian Public Service Commission, in their report of a full one-month French course. They reported changed attitudes toward language learning (\u0026ldquo;learning\u0026rdquo; used here in the general sense), and even \u0026ldquo;a real and total change in the person himself\u0026rdquo; (p. 33).\nJust as Lozanov maintains happens in Suggestopedia, Canadian researchers report\n\u0026ldquo;the student discovered new capabilities in himself, became aware of what he was able to do, realized the extent of his creativity and his potential; he \u0026lsquo;found himself\u0026rsquo;, which gave him more self-confidence and self-assurance\u0026rdquo; (p. 33). In our terms, they became aware of the reality of their own second language acquisition capacity and the fact that it remains very powerful in the adult.\nC. Alternatives to Methods\r#\r\rThe previous section attempted to show several things. First, that we can analyze all commonly used approaches to classroom second language teaching in terms of the requirements for optimal input presented in Chapter III and the criteria for teaching conscious grammar rules, as presented in Chapter IV. Second, it was seen that certain methods satisfied these requirements and criteria better than others. Third, it was claimed that the available applied linguistics research reveals that those methods that are shown to be superior in method comparison research come closer to satisfying the criteria that derive from second language acquisition theory.\nWhat we can conclude from this survey and review is that there is no one way to teach, no one method that is clearly the best. Some methods are clearly more effective than others, however, and the claim made here is that the same underlying principles will hold for any successful second language teaching program, the principles outlined in Chapters III and IV.\nThe purpose of this section is to explore ways of helping people acquire second languages that go beyond classroom methods. In the sections that follow, I will review what I consider the essential function of the classroom to be, and some limitations inherent in all classroom methods. Following this, I will discuss some possibilities in language teaching that are consistent with my views on the role of the classroom, and which, at the same time, bypass or avoid some problems that arise with classroom methods.\n1 . FUNCTION OF THE CLASSROOM\r#\r\rQuite simply, the role of the second or foreign language classroom is to bring a student to a point where he can begin to use the outside\nworld for further second language acquisition. As expressed in Chapter II this means we have to provide students with enough comprehensible input to bring their second language competence to the point where they can begin to understand language heard \u0026ldquo;on the outside\u0026rdquo;, read, and participate in conversations. Since they will be less than fully competent, we also need to provide them with tools for encouraging and regulating input.\nIn other words, all second language classes are transitional, and no second language class can be expected to do the entire job. As discussed in Chapter III, second language classes are best thought of as places to gain comprehensible input in early stages, when the acquirer does not yet have the competence to understand the input provided on the outside.\n2 . THE SECOND LANGUAGE CLASSROOM AND REQUIREMENT # 2\r#\r\rAs we have seen, many of the newer methods make valiant attempts to meet requirement #2 of Chapter III, to provide input that is genuinely interesting and relevant. The Natural Approach attempts to do this by focussing on personal topics, Community Language Learning by having the students generate their own input. The literature contains many other useful and interesting suggestions as to how to solve the problem of what to talk about: Stevick (1980) has an excellent discussion of the possibility of using poetry for second language students, and Winn-Bell Olsen (1977) has numerous other suggestions.\nThere are two fundamental problems with any attempt to meet requirement #2 in the second language classroom, however. The first is that what is of interest to some people may not be of interest to others. Stevick notes this in relation to his poetry experiment: one teacher who tried poetry noted that for her students, \u0026ldquo;poetry just isn\u0026rsquo;t their thing; they prefer politics\u0026rdquo; (p. 225). Stevick also notes that some students may object to humanistic approaches, such as Community Language Learning, that promote personal growth along with second language acquisition: \u0026ldquo;Some (students)\u0026hellip; will eagerly accept a \u0026lsquo;humanistic\u0026rsquo; language course as an arena, or as a medium, in which to find new adventures in discovering themselves and other people, and in which they can go on to become more than they had been before. Others of them, however, may decide that the language class is not a place where they choose to confront the issues of alienation, or of personal values\u0026hellip; they may just want to be taught well\u0026hellip;. We must respect this decision\u0026rdquo; (p. 293).\nWhat is perhaps a more fundamental problem is that the second language classroom is seen, by many students and teachers, as an artificial linguistic environment regardless of attempts to promote \u0026ldquo;real\u0026rdquo; communication. The fact that it is a classroom, and the fact that the class is called \u0026ldquo;Spanish\u0026rdquo; or \u0026ldquo;English\u0026rdquo;, of itself may subvert any effort to meet requirement two, and may prevent students from fully focussing on the meaning of what is said. In other words, the filter may always be \u0026ldquo;up\u0026rdquo;, to some extent, and many students will never get so interested in what is being said that they forget it is in a second language.\nThere are other limitations of the classroom that are not related to its failure to fully satisfy requirement two. As mentioned in Chapter III, there is really no way the classroom can provide the variety of second language use necessary for real competence in a second language, no matter how varied the presentation, no matter how many different situations are used in role playing activities. There is also no way the classroom can provide the quantity of input required for truly advanced competence in a second language. These are not real problems, when we consider what the classroom is for. If the student can make the transition to the real world, if the student can begin to use the outside for comprehensible input, both quantity and variety will be provided.\n3 . THE ALTERNATIVES\r#\r\rWe will examine a number of possible alternatives and supplements in the sections that follow, and, as we did with language teaching methods earlier, analyze them according to the predictions made by second language acquisition theory and survey what empirical evidence there is that confirms that these approaches are effective. We will first look at some very obvious supplementary activities to the second language classroom, conversation (the real thing, with native speakers of the target language) and pleasure reading, then move to some ideas and programs that have met with real success in some contexts and that could be extended to other contexts.\n( a) Conversation\r#\r\rBefore making the prediction that \u0026ldquo;conversation with native speakers\u0026rdquo; is good for second language acquisition, I need to define conversation in a limited way: conversation here refers only to interaction with a native speaker who is motivated to try to help the second language acquirer understand, and who is genuinely interested in the acquirer as a person. In other words, conversation with \u0026ldquo;foreigner talk\u0026rdquo;, if it is necessary, and with a real or potential friend, business associate, etc.\nThere will be no attempt to demonstrate that this sort of conversation has any effect on conscious learning. It only could if the conversational partner were a language teacher and/or the acquirer were an extremely gifted inductive learner. It does appear to be the case, however, that conversation defined in this way has the maximum impact on subconscious acquisition. The following analysis demonstrates what to most lay people is completely obvious, that conversation with someone who is interested in interacting with you, and who is trying to help you understand what he is saying, is good for second language acquisition.\nRequirements for optimal input\n Comprehensible. If meaning is successfully negotiated, if the conversational partner is able to adjust his speech, use extra-linguistic information and context, and if the acquirer has enough linguistic competence and can regulate the quality of input, the input provide in conversation will be comprehensible. Interesting/relevant. Conversation has the best chance of meeting this requirement of all the methods we have considered. It has the best chance of achieving total focus on the message and of bringing the acquirer to the point of forgetting that the input is in another language. Not grammatically sequenced. This requirement is clearly satisfied. Quantity. Conversation certainly has the potential for satisfying this requirement, depending on the personal circumstances of the acquirer. Filter strength. In free conversation with a sympathetic native speaker, filter strength should be low. In general, there is little or no error correction for form and most people do not demand perfect accuracy or complete utterances, as do language teachers. The topic of conversation is of course unpredictable but is generally of far greater interest than anything that goes on in a classroom, and this also will contribute to a lower level of anxiety and a low filter. A possible tension-raiser in free conversation is the chance of the acquirer \u0026ldquo;getting in over his head\u0026rdquo;, and not understanding what is said to him. If he is prepared, if he has tools for conversational management and is willing to use them, this is less of a problem. Tools for conversational management. Conversation will give the acquirer a chance to practice the tools he has learned and give him perhaps the best opportunity to acquire new ones.  ( b) Pleasure reading\r#\r\rAs was the case with conversation, covered in the previous section, I will define \u0026ldquo;reading\u0026rdquo; in a special way. I do not mean intensive reading, analysis of written prose, reading and then answering questions of content, or reading as preparation for discussion or writing assignments. The sort of reading to be analyzed here is extensive, and concerns subject matter that the student would read in his first language for pleasure. It is completely voluntary. In doing pleasure reading, readers have the option of skipping whole sections they find either too difficult or less interesting (e.g. detailed descriptions in fiction). They even have the option of putting the book or story down and selecting another after reading a few pages. They can skip words they do not understand, if they think they are following the main point, and they have the option, of course, of looking up every word, if that is their style.\nIn other words, we are considering pure pleasure reading. What is read depends on the student and what is available to him. For some people, it may be mystery novels, for others, science fiction, and for others, comic books. The only requirement is that the story or main idea be comprehensible and that the topic be something the student is genuinely interested in, that he would read in his first language.\nI will not try to show that pleasure reading has any effect on learning. The analysis, as done with conversation in the previous section, will be restricted to the effects of pleasure reading on acquisition.\nRequirements for optimal input\n Comprehensible. We have defined pleasure reading as reading that is comprehensible, so there is no problem here. I would like to note, however, that pleasure reading is made comprehensible by the reader\u0026rsquo;s own selection of passages and texts, and by the rejection of reading material that is too difficult. The success of pleasure reading thus depends on the reader\u0026rsquo;s willingness to find material at his level and reject material that is beyond him. Interesting/relevant. Reading as defined here is by definition interesting and relevant, since the student has the option (which must be exercised) of only reading things that are of personal interest. Not grammatically sequenced. This requirement is met, unless the student insists on reading specially-prepared pedagogical materials. Quantity. Reading certainly has the potential for satisfying this requirement. The only problems are practical: the availability of materials, their cost, and the students' time. Filter level. If the student is able to find materials that are comprehensible and that are interesting, this requirement is easily met. There is no frustration caused by incomprehensible messages, no early demands for output, no demands for premature grammatical accuracy. The pleasure reader should be completely off the defensive. Tools for conversational management. Pleasure reading might even made a contribution toward meeting this requirement, if the texts read include some dialogue.  At this point I would like to include a personal observation about pleasure reading. I have been attempting, over the last few years, to improve my French, largely via pleasure reading, an attempt that has been successful. Mostly through input, I have increased my competence from \u0026ldquo;advanced beginner\u0026rdquo; to \u0026ldquo;high intermediate\u0026rdquo;. I define the intermediate level in the following way: Requiring only some \u0026ldquo;downshifting\u0026rdquo; on the part of a native speaker to be able to converse easily, and being able to read most texts without a dictionary, without necessarily knowing every word. I can now read a great deal of French without a dictionary, and even derive real pleasure from it. Being a Monitor user and someone with an intrinsic interest in the structure of language, I occasionally look at grammar books (the ones that gave me so much trouble in high school). I have noticed, to my surprise, that the reading passages at the end of the elementary grammar book still give me trouble! I find them more difficult than \u0026ldquo;raw\u0026rdquo;, unedited French, French written for native speakers. The reason \u0026ldquo;pedagogical\u0026rdquo; passages are more difficult for the intermediate is that they are packed full of subjunctives, conditionnel passé, futur anterieur, and all manner of infrequent vocabulary! in reading through these passages, I found them difficult to understand, and extremely frustrating: the topics were not even of mild interest, and I felt my affective filter going up, as I encountered word after word I did not know. My frustration was further aggravated by the fact that I realized that I was having trouble with a text designed for second year students!\nWhat this experience suggests is that our intermediate students may find real texts, read for interest and pleasure, easier than our pedagogical materials. Moreover, if the above analysis is correct, it may be that free pleasure reading will result in more acquisition of the language.\nFor those who object on the grounds that reading in language courses should be restricted to the classics, to serious literature, I can only say that the ability to read \u0026ldquo;literature\u0026rdquo; will be facilitated by the development of a high level of competence in the second language. I personally agree with those who feel that a major goal of language instruction in the university is the study of literature written in the second language. I do not think, however, that we need to start out with serious literature immediately. Devoting several months to free reading of easier material might be the fastest way to bring students to the point\nwhere they can read great literature in a second language without a serious language barrier.\nSummary\nBoth conversation and pleasure reading have the potential of meeting the requirements for optimal input for acquisition very well. We have reached the conclusion that an interesting conversation in a second language, and reading something for pleasure, are excellent language lessons. This comes as no surprise to the millions of people who have acquired language using only these \u0026ldquo;methods\u0026rdquo;, and have acquired them very well.\n( c) Using subject matter for language teaching\r#\r\rAnother class of alternatives to classroom teaching involves the use of subject matter in the second language classroom, using the second language as a vehicle, as a language of presentation and explanation. I do not mean by subject matter teaching what is known as submersion, mixing second language students in with native speakers. I do mean special classes for second language students, classes in which no native speakers participate as students, in which teachers make some linguistic and cultural adjustments in order to help their students understand.\nIn this section, we will first put subject matter teaching through the familiar analysis according to the predictions made by second language acquisition theory. As was the case with conversation and pleasure reading, there will be no attempt to claim that subject matter teaching helps conscious learning in any way. We will then turn to several concrete manifestations of subject matter teaching: the successful immersion programs underway in Canada and the United States, and some untried possibilities for the use of subject matter in second language situations.\nRequirements of optimal input\n Comprehensible. Subject matter teaching will be of use for acquisition only to the extent it is comprehensible. What this means is that different subjects may be of more use to students at different  levels. Cazden (1979) points out that one could make a case that mathematics is ideal for teaching in an imperfectly acquired L2. There is a limited vocabulary, less interactional demand than in some other subjects, and considerable extra-linguistic support to aid comprehension. (She points out, however, that complex \u0026ldquo;story problems\u0026rdquo; might be an obstacle for beginning level students.) Students with more second language proficiency could handle subject matter that is more displaced in time and space, that supply fewer concrete referents, such as history and literature. The point is not simply that second language students can survive in subject matter classes, but also that they will receive comprehensible input that will help them improve more in the second language.\nThe comprehensibility requirement argues against submersion, against mixing second language acquirers in with native speakers before the second language acquirers reach higher levels of proficiency: the presence of native speakers insures that a good proportion of the language heard by the intermediate acquirer will not be comprehensible.\n Interesting/relevant. Subject matter may not always be interesting, but it is relevant. When students are focussed on the subject matter, there is a very good chance they will be focussed off the form of the language it is presented in. Subject matter affords a good chance of meeting the \u0026ldquo;forgetting principle\u0026rdquo;, of the student being so focussed on what is said that he is not aware of how it is said. Not grammatically sequenced. This requirement is also clearly met. In fact, it is hard to image subject matter teaching not meeting it. This would require contextualizing beyond our wildest dreams. Quantity. Clearly, there is the potential of supplying great quantities of input this way. Subject matter teaching in the second language automatically reaches the pedagogical ideal of filling the entire class hour with comprehensible input. Filter strength. Subject matter teaching may involve, and in fact  require, some minimum amount of anxiety. This anxiety, however, is not directed at the language it is presented in, if the message is comprehensible. Subject matter teachers can keep the language portion relatively anxiety-free and the filter down by:\n insuring comprehensibility of the message; not demanding premature production; not demanding full grammatical accuracy from students.  Subject matter second language teachers might consider testing procedures that require less linguistic production (short answers instead of long essays), and class discussion procedures that take students' linguistic capacities into consideration (not correcting errors on form or even allowing use of the L1 where practical, as in the Natural Approach). The point to remember is that further language acquisition comes with more comprehensible input, from teacher talk and reading, and not from demands for production.\n(vi) Tools for conversational management. Subject matter teaching may not provide the tools necessary to maintain conversations on the outside, but it can lead to the learning and acquisition of academic communicative competence in another culture. In a class composed entirely of immigrants and foreign students, teachers can be aware of cultural differences in academic behavior and teach classroom behavior, either via learning, for obvious aspects of classroom behavior (standing or not standing when the teacher enters the room; what sort of paper to hand in homework on, etc.) or acquisition, for more subtle aspects.\nSummary\nSubject matter teaching has, thus, the full potential for encouraging language acquisition. This may be a good place to point out that by subject matter teaching, I do not mean \u0026ldquo;English for Special Purposes\u0026rdquo; or for \u0026ldquo;Academic Purposes\u0026rdquo;. ESP and EAP are, to my understanding, standard language teaching classes whose syllabi are based on an analysis of the task students will face and the language they will need (see, for example, Robinson, 1980) . Subject matter teaching appears\nto me to be fundamentally different, although it may meet many of the goals ESP is designed for. While ESP requires a detailed analysis of the syntax, vocabulary, and discourse of a subfield, to be developed into a syllabus and presented bit by bit, subject matter teaching focusses only on the topic, the information or skill to be learned, the assumption being that much of the syntax, vocabulary, and discourse style will be acquired along with the subject matter. (This idea is not entirely foreign to ESP; several ESP courses emphasize \u0026ldquo;authentic activities\u0026rdquo;. See, for example, Robinson, p. 39; Widdowson, cited in Robinson, p. 23.)\n( d) Evidence for subject matter teaching: the immersion programs\r#\r\rImmersion bilingual programs have demonstrated what is possible in second language acquisition using subject matter. In immersion programs, initially monolingual majority children are schooled in a minority language (French in Anglophone Canada; Spanish in the United States). They are taught their academic subjects totally in the second language. In what is known as \u0026ldquo;total early immersion\u0026rdquo;, input in the second language begins in kindergarten. Late immersion programs may begin later, after the children have had at least a year of instruction in the second language.\nThe immersion programs appear to be successful in many ways. The many reports that have been published confirm over and over that immersion students acquire high levels of competency in the second language (while they may not reach native-like levels, they outperform peers who have had standard foreign language classes), they make normal progress in school, doing as well in subject-matter as monolinguals, and they do not fall behind peers in first language development (for reviews, see Lambert and Tucker, 1972; Swain, 1974).\nCohen and Swain (1976) discuss these successes in light of the lack of success of many other types of bilingual programs. Among the differences between immersion and other programs, these characteristics of immersion may help to explain its success. Cohen and Swain point out that in early immersion \u0026ldquo;all kindergarten pupils are unilingual in L1. In essence, the successful program starts out as a segregated one linguistically\u0026rdquo; (p. 47). As mentioned above, this raises the students' chances of\ngetting comprehensible input, since teachers cannot gauge their speech only to native speakers, leaving second language acquirers behind.\nCohen and Swain point out several other factors that, in our terms, lead to a lower affective filter in immersion programs. The linguistic segregation \u0026ldquo;eliminates the kind of ridicule that students exert on less proficient performers\u0026rdquo; (p. 47), teachers have positive expectations, and the program is voluntary. Also, \u0026ldquo;in kindergarten, the children are permitted to speak in the L1 until they are ready to speak in the L2\u0026rdquo; (p. 48). Thus, a Silent Period is allowed.\nThe immersion experience, it needs to be emphasized, does not bring these students to native speaker levels, and immersion students' second language competence may have gaps, especially when it comes to interaction abilities in casual conversation. (See Conners, Menard and Singh, 1978, who report problems immersion students have in this area; on the other hand, see Bruck, Lambert and Tucker, 1974, for a report on what immersion children can do in this area.) It is thought that these gaps exist only because the second language input does not include input from peers. Immersion children hear the second language only from the teacher and only in class. Considering this limitation, their achievements are remarkable.\nThe immersion programs show us what is possible linguistically from subject matter teaching, when social and psychological problems are eliminated or reduced. They provide strong empirical evidence that subject matter teaching can not only teach subject matter but the language it is taught in as well, as long as the input is made comprehensible.\n( e) Other possibilities in subject matter teaching\r#\r\rThere is no reason that subject matter teaching cannot be extended to other second language acquisition domains, and utilized to at least supplement the second language classroom and provide some help in the difficult transition from language class to real world. One such domain is the university. I will discuss here the situation in the American university, but the principles can be generalized to any higher education situation in which large numbers of second language speakers are enrolled.\nPractically every large American university has an ESL program. They range in quality, of course, from excellent to sub-standard, but regardless of quality, it is my feeling that foreign students regard them as an obstacle. ESL is, moreover, perceived as irrelevant at just those levels that both theory and applied research conclude it is irrelevant: at the \u0026ldquo;intermediate\u0026rdquo; level. Many foreign students no longer feel they need ESL when they are able to survive in regular classes, yet well-meaning administrators feel that for the foreign students' own protection, their level of English competence should be higher.\nApplied research confirms that intermediate ESL is not productive. The studies of Upshur (1968) and Mason (1971), reviewed in Chapter II, which showed that extra ESL does not help when students are enrolled in regular classes, included only students at this level.\nFor some \u0026ldquo;good language learners\u0026rdquo; (acquirers), the answer to this problem may very well be the elimination of the \u0026ldquo;ESL\u0026rdquo; requirement or placing the level or required proficiency in English lower. For others, however, this would not be the best solution. The feelings of ESL administrators that some students need \u0026ldquo;more\u0026rdquo; is quite real and justified. All too often, students are able only to survive in classes where the language demand is very low, and/or they end up relying heavily on native language help, in the form of texts or classmates.\nSubject matter teaching may be part of the answer to this \u0026ldquo;transition\u0026rdquo; problem. What I propose is that the university consider classes for international students in subject matter, classes in which international students are in fact \u0026ldquo;segregated\u0026rdquo;, to be offered in all areas foreign students are likely to enroll, and to be made available on a voluntary basis. Such courses would give full academic credit and cover regular subject matter. The main differences would be the fact that the students may be unfamiliar with American academic practices.3\nThe absence of native speakers in the class would help to insure that the input is comprehensible for the same reason immersion provides more comprehensible input than submersion. Both the level of complexity of the classroom presentation and the amount and complexity of outside reading would be regulated to the linguistic level of the class. Other modifications that would help comprehensibility are also possible:\nWe would expect lower demands on student output, including a tolerance for errors (many of which will be eliminated by more comprehensible input over time) and tests requiring short answers in lieu of long essays.\nInternational classes can not only take into account and help eliminate linguistic deficiencies, they can also help fill several other gaps in international students' knowledge. They can provide an anxiety-free, or at least anxiety-low, initial exposure to the American style of education. Students will be able to acquire the subtleties of American classroom style behavior, and learn many of the obvious differences that exist between what is acceptable behavior in a classroom in their country and what is expected in the American university. In other words, international classes can give students some of the tools for communicative competence in the context of the classroom.4 5\n The New England problem. International students can also fill foreign students in on cultural information that is presupposed in courses for native speakers and American students. Thomas Jablonski of the History Department at USC has been teaching an American history course exclusively for international students for the last three years, and he has pointed out to me that many international students lack information that American professors take for granted. A clear example is his finding that many of his students did not have a clear idea of where New England was, a point of information that was essential to a particular presentation. Information gaps such as this one are not obvious, and probably abound. They have a better chance of being filled in international classes, where students are encouraged to ask questions, and where instructors presuppose less. The role of ESL in subject matter teaching. The establishment of international classes does not signal the end of ESL, although it may result in some modification, and hopefully improvement, of our ESL offerings.  First, while we can imagine pushing subject matter classes \u0026ldquo;down\u0026rdquo; to the lowest linguistic proficiency level possible, we may always have a need for the second language class at the beginning level. It is an empirical question just how much competence and instruction (i.e. comprehensible\ninput) is necessary before students can begin special subject matter classes, but there will, in most cases, be a need for a general class at the beginning.6\nSecond, as discussed in Chapter IV there are many aspects of language that are consciously learnable, both in \u0026ldquo;grammar\u0026rdquo; (mostly morphology for the majority of students) and discourse (conscious rules for the fine points of writing, including punctuation and organization).\nAlso, a large percentage of foreign students may desire more English than they can get in the classroom situation in order to facilitate participation in American social life. Intermediate level classes that focus on providing the tools for communicative competence and conversational management would be very helpful for students with more integrative orientation and/or who plan to remain in the United States for extended periods of time.\nIn addition, ESL teachers might serve the useful function of assisting and consulting with the subject matter teachers who teach international sections.\nFigure 5.2 presents a schema of the possible interaction between an ESL component and an academic component.\nFig. 5.2. ESL and academic components of international students' program at the university level\n_______________________________________________________________________________\nLevel ESL component Academic component\n_______________________________________________________________________________\nBeginning Classroom language teaching, None\nfocussing on topics of general interest; introduction to University\nlife\nIntermediate Optional course work on International sections of\n English grammar (Monitor) subject matter courses Stylistics (learnable) (optional) Conversation (see text) Advanced None Regular sections of subject  matter courses _______________________________________________________________________________\nSee Note 6 for suggestions for a transition between the beginning and intermediate levels.\n(iii) The need for applied linguistics research. If I were simply to assert that the International Students program as outlined above was\n174\n\u0026ldquo;the answer\u0026rdquo; to our foreign student problems in the American university, I would be repeating the sins of the past, claiming that we need only consult theory in order to come to the correct form of practice. To return to the message of Chapter I, this is not sufficient. At least the following questions need to be answered with empirical data:\n Do students in international classes acquire more English? Do they learn as much subject matter as those who elect to take standard courses? Do they have more success in their studies over the long run? Do they feel more comfortable in the academic environment?  Clearly, the answers to these questions will be of both theoretical and practical interest.\n(iv) Adult ESL and subject matter. The ESL profession in the United States has already been experimenting with a form of subject matter teaching at the \u0026ldquo;adult education\u0026rdquo; level, in courses designed for adult immigrants to the United States. (This is another example of teachers and administrators not waiting for theory and research, but discovering \u0026ldquo;what works\u0026rdquo; on their own; see Chapter I for discussion.) S. Brown (1979) describes one experiment of this sort in Los Angeles.\nWhile part of ESL instruction in Brown\u0026rsquo;s school is \u0026ldquo;the more traditional grammaroriented\u0026rdquo; style class, students also participate in units covering \u0026ldquo;life situations\u0026rdquo; topics that last from two to four weeks. Examples include the use of community services (post-office, library, etc.), consumer education, employment (covering classified ads, employment agencies, unions, etc.), family life (e.g. wedding invitations, birthday parties, etc.), citizenship (e.g. traffic and parking tickets, voting, taxes, etc.), and other \u0026ldquo;life situations\u0026rdquo;. Teachers can use guest speakers, films, field trips, and commercial materials in helping students understand the \u0026ldquo;mechanics of life\u0026rdquo; in a new country.\nAgain, as is usually the case, no evidence is yet available confirming the utility of such a program. Two of the three sources of inspiration for programs presented in Chapter I, second language acquisition theory and teacher insight/intuition, predict, however, that such programs will be of great use for language acquisition, in addition to their obvious practical value, as long as the input is comprehensible.7\nD. Comments on Achievement Testing\r#\r\rIn this section, we will consider the implications of second language acquisition theory on testing. I will begin with a very short review of what we normally consider to be relevant in selecting tests for second language achievement, and the kinds of test options we chose from. As was the case in describing language teaching systems earlier, this is not done in an effort to supply new information, but to establish a common set of assumptions; I will assume, therefore, some familiarity with the standard literature in second language testing (e.g. Harris, 1969; Valette, 1977; Oller, 1979). I will then focus on one major consideration, what Oller (1979) terms the \u0026ldquo;instructional value\u0026rdquo; of a test, and suggest that if we take this property of tests seriously, second language acquisition theory severely limits our options in achievement test selection.\n1 . NORMAL CONSIDERATIONS IN TEST EVALUATION AND SELECTION\r#\r\rThe standard literature on tests and measurements tells us that a good test needs to meet certain standards. It must be reliable, that is, it must consistently give the same results under different conditions. It must also be valid, that is, it should really measure what it is supposed to measure. Testing experts also advise us to make sure a test is practical, that it is economical, easy to score, and easy to interpret (Harris, 1969, pp. 21-22). Harris also suggest that we consider the face validity of a test, \u0026ldquo;the way the test looks\u0026ndash;to the examinees, test administrators, educators, and the like\u0026rdquo; (p. 21), noting that if a test does not appear to be a valid measure, whether it is or not in reality, students and teachers will not take it seriously.\nTeachers and administrators in second language programs now have a wide variety of tests to choose from. Tests are usually classified according to the modality they use (reading, writing, speaking, listening) and their place among the discrete point/integrative continuum. Discrete-point tests are tests that attempt \u0026ldquo;to focus attention on one point of grammar at a time\u0026rdquo; (Oller, 1979, p. 37). An extreme discrete point test requires a minimum of knowledge of context outside the sentence containing the item tested. Here is an example of a discretepoint item:\nMary __________ in New York since 1960.\n is living has lived lives  Integrative tests, on the other hand, make no attempt to focus on one aspect of language at a time; according to Oller (1979), \u0026ldquo;Whereas discrete items attempt to test knowledge of language one bit at a time, integrative tests attempt to assess a learner\u0026rsquo;s capacity to use many bits all at the same time, and possibly while exercising several presumed components of a grammatical system, and perhaps more than one of the traditionally-recognized skills or aspects of skills\u0026rdquo; (p. 37). Examples of test that are usually considered integrative include reading comprehension, cloze tests, dictation, compositions, and tests of oral communication.\n2 . INSTRUCTIONAL VALUE\r#\r\rI would like to focus here on only one aspect of one kind of testing, the instructional value of achievement tests, and make only one point. Tests have a huge impact on classroom behavior, and need to be selected to encourage students to engage in activities that will help them acquire more language. It may be that the instructional value criterion is possibly of more importance than the criteria listed above.\nStated simply, the sort of test selected has a huge impact on the class. If students know in advance what sort of test will be used to measure their achievement in a course, they will, naturally, tend to study for the test, and teachers will feel pressure to teach to the test. I suggest we harness this natural tendency and select tests that will encourage student preparation that in itself causes more second language acquisition.8\nJones (1979) gives a good example of the results of harnessing this tendency, which he calls the \u0026lsquo;backwash\u0026rdquo; effect. In teaching an elementary German course at the university level, he decided to give an oral midterm, a short (five minute) conversation done on a oneon-one basis. Jones noted on this test that few of his students were proficient in the area of social communication: \u0026ldquo;When I greeted them, asked how they were, or said good-bye, the majority of them had no response but\nawkward laughter, even though they had practiced these protocols in the classroom\u0026rdquo; (p. 56).\nThe effect of this midterm experience on the class was striking: \u0026ldquo;The teaching assistants told me shortly after the first oral test that students were begging for more oral practice in the classroom. The situation was much different on the second test. They were waiting for me. It was obvious that they had made a great effort to develop speaking proficiency in a very short time. The test not only gave me vital information about their ability to speak the language, but it also served as a motivating influence for them to spend more time developing this important skill\u0026rdquo; (pp. 56-57).\nWhat if Jones\u0026rsquo; oral test had failed the usual standards for reliability? What if, for example, the rating had been made by several judges and their interrater reliability had not met the required level? The powerful backwash effect, I am suggesting, may, in certain situations, more than make up for this problem.\nThe basic problem I am speaking of here is the fact that practice in certain types of tests does not necessarily lead to more acquisition of the second language. This factor eliminates some tests with very fine track records when judged on the basis of reliability and validity. There is no evidence, for example, that practicing cloze tests in class helps the student acquire more of the language, or improves performance on cloze tests. There is very good evidence, on the other hand, that participating in conversation, and reading for content or pleasure, do help the student acquire language. Conversational practice provides comprehensible input and helps the student acquire the tools needed for conversation with native speakers, which in turn results in more input and more language acquisition. Reading for content is also an effective way of getting input that meets the requirements for optimal input for acquisition, as we saw earlier in this chapter.\nAchievement tests, I am suggesting, should meet this requirement: preparation for the test, or studying for the test, should obviously encourage the student to do things that will provide more comprehensible input and the tools to gain even more input when the class is over. This drastically reduces our options, but also, in a real sense, simplifies the task of achievement testing. Let us first examine what the consequences of this philosophy might be in the area of foreign language testing.\nAchievement testing in foreign language classes attempts to assess whether a student has met the requirements of a given course, and sometimes whether he has satisfied a language requirement at an institution. I will deal with each of these situations in turn.\nFor the foreign language class, I see only two options. One of them is fairly traditional:\nreading comprehension. If students know in advance that they will be given a reading comprehension test, a test in which they are asked to read several short passages and answer general questions about the content of what they have read, they will be encouraged to read. They will be encouraged to study for the test in the simplest and most obvious way, and will seek out reading opportunities in the second language. As long as they know they will be presented with a variety of passages (on different topics) and as long as the questions focus on the \u0026ldquo;gist\u0026rdquo; of the passage and do not rely on one specific word or structure, it certainly will be the case that general reading for pleasure and interest will prepare them for such a test. Teachers will be encouraged to provide comprehensible reading materials, and students will be encouraged to go outside the bounds of the classroom in search of supplementary materials. Most important, if they read, they will acquire more of the target language.\nThe reading comprehension test is especially useful, since there is generally no problem in purchasing or constructing tests that meet the statistical requirements mentioned above. The standard literature has many suggestions on constructing reading tests (see, for example, Harris, 1969, chapter 6), and reliability measures and various types of validity measures can easily be obtained. Reading tests can be constructed that are practical and that have obvious face validity.\nA second kind of test is more complicated, but, at the moment, I see no other valid options. What is needed is a test that will encourage students to engage in conversations, that requires use of the tools of communicative competence. Many standard oral tests fail to do this. A test in which the student answers questions does not require interactional ability, nor does a test in which a student simply talks or even asks questions. What is needed is a true test of conversational management.\nI will attempt to give a rough description of what a test of conversational management would look like: Ideally, it would involve both tester and student in a conversation about something real, a problem that\nhas to be solved, a topic that needs to be discussed. Second, the student would be rated on his ability to manage the conversation and communicate, not on grammatical accuracy. If, for example, the student had word-finding difficulties that resulted only in an embarrassed silence on his part, he would be graded down. If the student were able to \u0026ldquo;cover\u0026rdquo; the problem with appropriate fillers (just a moment\u0026hellip; what I want to say is\u0026hellip; how do you say\u0026hellip;?), he would not only not be penalized but would be graded up for having the ability to keep the conversation going and not lose the floor! Students would also be given credit for politeness and appropriateness, since a minimum amount of this knowledge is absolutely necessary for successful conversation. Most important, they would be given credit for successful communication, for successfully completing the communicative exchange. Students who were able to get the examiner to help them would also be graded more highly, the assumption being that those who can elicit needed vocabulary and help the native speaker give them comprehensible input will have more success in second language acquisition in the long run.9\nThere are predictable objections one can make to such a testing plan. Most obviously, it can be argued that such tests, especially the second one, will do nothing for the development of grammatical accuracy, and will only encourage sloppy speech, a laissez-faire, \u0026ldquo;anything goes\u0026rdquo; attitude toward language, and the establishment of permanent bad habits. Second language acquisition theory, however, makes quite different predictions: if tests of this sort encourage students to participate in conversation and develop the skills to manage conversations, they will contribute a great deal to the development of grammatical accuracy. Indeed, they will develop, perhaps, more grammatical accuracy in the long run than any other kind of measure! They will give the student the tools he needs to obtain comprehensible input, and this in turn will result in subsequent language acquisition, improvement after the term ends.\nThe conversational management test promises to be very difficult to grade reliably, and thanks to this unreliability, it may fail to meet acceptable standards of validity. It will be hard to train raters and hard to invent topics to discuss. Nevertheless, it has the promise of stimulating students to develop conversational skills that will enable them to\nuse the language despite their less than perfect proficiency, thus helping to insure continued progress in second language acquisition after the term has ended.\nOne could also argue that at least some grammar testing should be included. As emphasized in Chapter II, we have not rejected the teaching of formal grammar. It has its use as a Monitor, when using the Monitor does not interfere with communication. It is therefore a portion of the instructional program. Shouldn\u0026rsquo;t we therefore test grammar as well, in the form of testing our students' abilities to Monitor their output under conditions conducive to the use of the Monitor?\nThe argument appeared plausible to me at one time. Tracy Terrell presented me with a counter-argument to testing grammar, and I think he is right: if we allow grammar testing, it will grow and soon dominate the testing program, and hence the curriculum. While limited grammar testing is consistent with the limited role of the grammar, there is a real danger that teachers and administrators will revert to their old ways and gradually return to testing grammar exclusively!\n3 . LANGUAGE REQUIREMENTS\r#\r\rMany universities and some high schools still have language requirements. This is usually expressed as the necessity of studying a foreign language for a given period of time, two to four semesters. If, however, the goal of the classroom is to bring students to the point where they can continue to acquire the language by using the outside world, or resources outside the classroom, this suggests that we should consider testing students to see whether they have reached this level: can they continue to obtain comprehensible input? The tests that probe this could be the identical ones proposed to be of maximum educational value in the preceding section: Reading comprehension and conversational management are not only the most appropriate for achievement tests given at the end of the semester, but may also be the most appropriate leaving exams. The tests ask only these questions: can the student read well enough in the second language so that he can read texts without having to consult a dictionary excessively and without undue pain, i.e. without what Newmark calls \u0026ldquo;crytoanalytic decoding\u0026rdquo;. Is he able to communicate effectively with a native speaker who is willing to help?\nOf course, I have left many serious questions unsettled, such as the range of topics to be read and discussed, the problem of requiring equal levels of proficiency in cognate (and hence more comprehensible) languages and more exotic languages, and how the passing level is determined. Some applied research may eventually help to solve them; at the moment, however, the format seems clear.\n4 . UNIVERSITY LEVEL ESL\r#\r\rSecond language acquisition theory, as presented in this volume, gives no magical and obvious answer to the difficult question of ESL testing at the university level. The goal of such testing is to determine whether students know enough English to study in English. As is well known, the \u0026ldquo;backwash\u0026rdquo; effect has been a problem in this area for years: many foreign students study for the TOEFL examination exclusively, and are helped to do so by special courses designed to do just this (see discussion in Wiggon, 1979).\nApplying the same arguments here that we used earlier, emphasizing the instructional value of tests, we come to the conclusion that subject matter testing would be of benefit at this level as well. This is more easily said than done; it would be prohibitively expensive to design standardized subject matter tests in all disciplines for international students. International courses, as outlined in the previous sections, may be a step in this direction, as long as they use subject matter tests as finals; a students' release from the ESL requirement could be at least partially dependent on his ability to pass international courses.\nE. Some Gaps in Materials\r#\r\rIf the conclusions we have reached in this volume are correct, it implies that we have some fairly serious gaps in our materials. Before listing where I think these gaps are, let me first of all note that materials need to meet the same requirements that methods do, as listed in Chapters III and IV. If materials are supposed to help students in language acquisition, they should either supply input that is comprehensible, interesting/relevant, and not grammatically sequenced themselves, or they should provide students with the means of obtaining such input. If materials are meant to help language learning, they\nshould focus on rules that are learnable, portable, etc. While learning materials can be criticized, it is my impression that there is no lack of materials for this purpose, and that current texts can be useful for the language learning component of second language and foreign language courses. We will therefore focus on what sorts of materials need to be developed to encourage acquisition.\nThe new materials will be designed, I hope, to fill a basic need, helping beginning and intermediate students obtain comprehensible input outside the classroom. This is an obvious problem for foreign language students, and is especially crucial for students of \u0026ldquo;exotic\u0026rdquo; languages. It is also a major problem for students of commonly spoken languages and second language students; students at beginning levels do not have the competence to engage native speakers in conversation, and cannot understand radio and TV or read easily. We need materials, in addition to the input provided by the classroom, to bring students to the point where they can utilize the outside world.\nOne obvious and convenient source of comprehensible input is reading. As discussed earlier in this chapter, pleasure reading meets the requirements to qualify as input for acquisition very well. The problem we have today is that readers designed for second language students do not meet these requirements. What is currently available is often not comprehensible; as mentioned earlier, the only reading many foreign language students encounter are paragraphs that are loaded up with complex vocabulary and syntax. It is nearly always grammatically sequenced; writers are careful only to include syntax that the student is supposed to have studied or is currently learning. Also, there is simply not enough reading available.\nThe second language student needs massive amounts of comprehensible, interesting reading material, enough so that he can read for pleasure and/or interest for an hour an evening, if he wants to, for several months.\nSome current texts are in the right direction, but they are flawed in several ways.\n The use of exercises, questions that test students on content and drill them on the grammar and vocabulary used. Teachers are, of course, free to ignore these exercises, but they often take up most of the pages of the reader. While it can be argued that exercises provide  learning, while the text provides acquisition, I think it is dangerous practice to try to combine the two in this way. First, the necessity of answering content questions can ruin the pleasure of reading. Second, they encourage reading more for form and less for content.\nThe assumption underlying many of the exercises found in readers seems to be that students need \u0026ldquo;review\u0026rdquo; and \u0026ldquo;practice\u0026rdquo; on new vocabulary and grammar, otherwise they will not retain it. This is, it seems to me, a self-fulfilling prophecy. With fewer exercises, students might read more, and have a better chance of encountering these items in texts. With excessive exercises, we may be destroying our students' desire to read for pleasure and interest in the second language, thus insuring that many will indeed never see the new structures and words again.\n Current readers simply do not provide enough. Part of the problem is the inclusion of exercises, which take up valuable space. The reader of the future will be thick, full of reading, and on varied topics. Students will be able to pick and choose their topics. To do this, they need a lot to choose from. Simply including one story about the Wine Country of France, another about sports, and one mystery story is not enough. Finally, writers of such readers need to rid themselves of the illusion that each line, each paragraph, must count, and introduce some new structure or vocabulary item. As emphasized many times in this book, such grammatical emphasis will seriously distort any attempt to write anything of interest. We need not worry about each line. If we provide enough comprehensible input, everything the student needs will be there.  1 . THE LANGUAGE LABORATORY\r#\r\rAs many readers know, there has been a great deal of discussion and debate in the applied linguistics literature over the virtues of the language lab. In my view, it is not a question of whether the lab is \u0026ldquo;good\u0026rdquo; or \u0026ldquo;bad\u0026rdquo;, but simply whether it can be used to supply input that is useful for acquisition, and thereby supplement what we can provide in class and in reading.\nNot only can the lab be used in this way, but it appears to be the case\nthat it is far easier, technologically speaking, to use the lab as a means of supplying comprehensible input than for other purposes. The traditional use of the language lab puts a tremendous technological and pedagogical burden on the teacher: the teacher is expected to monitor student output, and correct their errors. Using the lab as a source of comprehensible input is easier. Here are some possibilities: taped stories, with pictures to aid comprehension and add to enjoyment, class-type lectures, supplemented with lecture notes (on real topics, designed to supplement international classes, not sample lectures on random aspects of chemistry or the history of a pretend kingdom), radio programs, commercials, etc. In other words, comprehensible input, with simple aids to comprehension.\nIn my view, the lab should be a resource, a place students can go to get input on a variety of subject matters whenever it is convenient for them. The old view of the lab, with the vigilant drill master, does not allow this.10\n2 . A COMMENT ON FIELD TESTING OF MATERIALS\r#\r\rThis slightly new approach to materials might also necessitate a slightly new approach to field testing. I think I can best illustrate this by relating a conversation I had several years ago with a representative of a publishing house that is active in both ESL and foreign language materials. He had come to see me because of our work on the order of acquisition of grammatical structures (e.g. Bailey, Madden and Krashen, 1974; Krashen et al., 1978; Krashen et al., 1976; Houck, Roberson and Krashen, 1978a) feeling that our work, and similar word done by other researchers, might give his writers a better sequence to base their readers on. He accepted it as a given fact that readers designed for students needed to be controlled for structures, and that our natural order studies would provide a superior basis for this. Book one, for example, would contain only those structures found to be early acquired, book two would add those structures slightly farther down on the natural order, etc.\nI have argued against this philosophy several times in this volume. As Stevick (1980) notes, it leads to a style \u0026ldquo;which is linguistically antiseptic and emotionally sterile\u0026rdquo; (p. 203; see also his excellent discussion,\npp. 203-204). I presented my arguments against this approach to this publisher\u0026rsquo;s representative, and asked him what form of field testing his readers underwent. His response was that the linguistic analysis was deemed sufficient: his publishing house provides writers with a guide, indicating what structures are to be included for different levels. If the proposed texts do indeed only contain these structures, they are considered worthy and have passed the test. His purpose in seeing me was to revise this guide according to the natural order.\nHere is an alternative approach to developing and field testing readers, one that is consistent with the philosophy set forth in this book. The first step is to use writers who are genuinely interested in telling, or re-telling a story, and who are interested in and sympathetic with the audience. They simply write, focussing on the story, using what they intuitively feel they need to tell it and make it comprehensible (recall Brown\u0026rsquo;s advice to parents, repeated on page 65).The field test is not a syntactic analysis. It is done in order to answer the questions: do members of the intended audience understand it? Do they enjoy it? Do they find it interesting? Would they read it on their own (not as an assignment)? If the answers to these questions are in the affirmative, second language acquisition theory tells us that i + 1 will be there, that the reading is linguistically appropriate and it will help the reader acquire more of the target language.\nWe may apply similar criteria to other kinds of materials, i.e. the lab materials recommended earlier, and materials designed to help teach subject matter (see Note 10). Are they comprehensible? Are they interesting/relevant? etc. Only the students and language acquirers can answer these questions.\nLet us also not forget the obvious question that needs to be asked about all materials:\ndo they actually result in more proficiency in the target language? The theory predicts that if materials satisfy our requirements, this will happen, but, as emphasized in Chapter I, this is not enough. Applied linguistics research needs to confirm it.\nF. Some Problems\r#\r\rEven if the theory presented here is totally correct, and my suggestions for application are in fact the appropriate ones, there are some\nserious problems that need to be mentioned before concluding. These have to do with the acceptance, by teachers and students, of language acquisition as primary, and comprehensible input as the means of encouraging language acquisition. These problems are caused by he fact that acquisition differs from learning in two major ways: acquisition is slow and subtle, while learning is fast and, for some people, obvious.\nAcquisition takes time; it takes far more than five hours per week over nine months to acquire the subjunctive. It may, if fact, take years. Good linguists, on the other hand, can consciously learn a great deal in a very short time. Also, when we have acquired something, we are hardly aware of it. In a sense, it feels as if it was always there, and something anyone can do. Learning is different. Some people derive great pleasure from the learning and use of conscious rules, and I am one of them! \u0026ldquo;Mastering\u0026rdquo; the subjunctive in French was very satisfying for me, and I rekindle this sense of victory every time I plan and say sentences such as \u0026ldquo;Il faut que j\u0026rsquo;aille\u0026rdquo;. It is sometimes hard for people like us to understand that this sort of pleasurable activity is not real language acquisition.\nThis leads to one major problem. Language curriculum and texts are designed by people like us, people who learn quickly and who derive satisfaction from it (Stevick\u0026rsquo;s \u0026ldquo;group G\u0026rdquo;, p. 253; Stevick, 1980). The vast majority of our students, however, are not as interested in the structure of language as we are, and get their pleasures elsewhere!\nBut what about those students who believed us, and will only accept conscious grammar and drill as the core of a language class, and who expect all of their errors to be corrected (see e.g. Cathcart and Olsen, 1976)? I can only recommend two sorts of solution, one long term and one short term. If the essentials of this book are correct, in the long term, these students and their teachers will be educated. Ideas change slowly, however, and some short-term solutions are needed. One of these, suggested by Tony Pfannkuche, is to present a short course on language acquisition as part of the language teaching program, or just prior to it. I think this is justified, especially if we conceive of the language requirement in high schools and colleges as including skills and information about how to acquire any language, not just the one presented in class. Another approach, and one that I am personally not above using in my classes, is deception. We can teach vocabulary or\ngrammar, and, as long as it is done in the target language, a great deal of acquisition will take place, the medium being the message. We can teach situationally, giving students useful, short dialogues that satisfy the craving for learning and memorized language, but, at the same time, present comprehensible input. Finally, the subject matter international classes will also provide comprehensible input for a student, whether he believes in subconscious acquisition or not.\nI think that I have presented a conservative view of language acquisition theory and its applications, conservative in the sense that it attempts to be consistent with all empirical data that are known to me. It is consistent with the way thousands of people have acquired second language throughout history, and in many cases acquired them very well. They acquired second language while they were focussed on something else, while they were gaining interesting or needed information, or interacting with people they liked to be with.\nNotes\r#\r\r  These principles derive from what Asher considers to be the three critical elements of child language acquisition:\n listening in advance of speaking: \u0026ldquo;It may be that listening comprehension maps the blueprint for the future acquisition of speaking\u0026rdquo; (p. 1041). \u0026ldquo;\u0026hellip;the understanding of spoken language may be acquired when adults manipulate the physical behavior of the infant through commands\u0026hellip;\u0026rdquo; \u0026ldquo;\u0026hellip;listening skill may produce a \u0026lsquo;readiness\u0026rsquo; for the child to speak\u0026hellip; As understanding develops, there is a point of readiness to speak in which the child spontaneously begins to produce utterances\u0026rdquo; (p. 1041).    While not strictly a method comparison experiment, Newmark\u0026rsquo;s Minimal Language\nTeaching Program for foreign language teaching at the University level, reported in Newmark (1971), is of great interest. Newmark\u0026rsquo;s students spent their instructional week as follows: three hours in conversation sections with native speakers; two hours of extensive reading (\u0026ldquo;in order to encourage scanning and rapid reading, assignments are purposely longer (10-20 pages) than students can study crytoanalytically, and examinations on readings purposely encourage rapid sketchy reading\u0026rdquo;, p. 16); three hours in the lab for work on dialogues; and four hours with \u0026ldquo;learning\u0026rdquo; type activities (study of a conventional grammar, reading and discussion in general linguistics). Clearly, the first three portions focus on acquisition, with the conversational sections and extensive reading assignments providing comprehensible input. Newmark reports that his students consistently reach the MLA norms for two years in reading after only one year in his program.\n  In some cases, international classes are impractical or impossible. One example is the large lecture class in elementary sciences. A possibility is the international discussion section and/or \u0026ldquo;pre-lecture\u0026rdquo; section, in which difficult vocabulary is explained, and the topic of the lecture discussed in advance.\n  In some cases, international classes are impractical or impossible. One example is the large lecture class in elementary sciences. A possibility is the international discussion section and/or \u0026ldquo;pre-lecture\u0026rdquo; section, in which difficult vocabulary is explained, and the topic of the lecture discussed in advance.\n  Ability to take notes in lectures.\n  Ability to take notes on written, textual materials.\n  Ability to organize essay type examination questions and write accurately under the pressure of time.\n  Ability to recognize and understand the thinking strategies implicit in objective type test questions (p. 79).\nThe international class, it can be argued, provides a natural syllabus for the acquisition of study skills; needs such as those listed above will be met, as well as others not predicted by the needs survey (see footnote five for an example). Second, international students may not regard \u0026ldquo;study skills\u0026rdquo; classes as essential to their needs and as contributing directly to their educational program (although Schwabe points out that her students at the University of California at Davis appear to be more motivated for and interested in her ESL clinic than regular ESL classes). They may simply be another obstacle to get through before students can pursue their major interest.\nThis argumentation and speculation needs to be supplemented with research on the applied level, to determine, whether the best approach is the clinic alone, the international class alone, or some combination.\n  To give a concrete example of an easily-learnable aspect of classroom/academic behavior, Gloria Heller has pointed out to me that several of her ESL students would hand in homework assignments on three ring notebook paper with the rings on the wrong (right) side (on what we consider to be the back of the paper). This trivial error might be interpreted as a sign of sloppiness in a regular class and might not be corrected. It would be anticipated or at least corrected in an international students' class, and is a good example of a simple, learnable rule that makes a real difference. Using the correct side of the paper may not make a student a better student or improve his grasp of subject matter, but it will affect his image in the eyes of the teacher. \u0026ldquo;Learning\u0026rdquo; small aspects of classroom and academic behavior may thus have similar functions as learning late-acquired aspects of language (Chapter IV): they may not be essential for communication, but add \u0026ldquo;polish\u0026rdquo;, giving an often important cosmetic effect.\n  Here is a possible summer intensive program, meant for the international student with a few years of formal English instruction in his own country who is not yet ready for academic work in English. The goal of the program is to provide subject matter instruction in areas that are, at the same time, very relevant to the students' needs and interests, and that are linguistically comprehensible\n  Course work, taught by subject matter teachers. The student selects courses from a list consisting of courses such as these:\n  Mathematics review, from algebra through calculus.\n  Computer operation (not programming ).\n  American consumer economics (\u0026ldquo;Sylvia Porter\u0026rdquo;), including credit, banking, shopping strategies, etc.\n189\n  English grammar (\u0026ldquo;language appreciation\u0026rdquo;, or linguistics ).\n  English grammar for Monitor use.\n  Once a degree of fluency is achieved, discussion groups with both more experienced foreign students (in English) and with native speakers who are interested in the same area of study can supplement the formal course offerings.\nMy prediction is that such a program would result in far more acquisition of English than the standard intensive program, would be perceived of as more relevant by international students, and would be of considerable value in furthering the students' educational progress in his specialty.\n    In areas where there are enough students to support such classes, other forms of subject matter teaching should also work in adult ESL, including job related classes for immigrants or non-native speakers of English, and topics of interest, e.g. introduction to American literature, American sports, cooking, etc. The point is that any topic will work as long as the input is comprehensible and the students are genuinely interested in the subject matter.\n  As Carroll (1980) notes: \u0026ldquo;It is only natural for students to shape their learning efforts so as to be maximally successful on tests, and if the tests measure objectives that are in some ways different from those of the instruction, students will work towards those objectives and pay less attention to achieving other objectives. The nature of external examinations will often shape the behavior of the teachers themselves. We sometimes complain that teachers do nothing but \u0026lsquo;teach for the tests\u0026rsquo;\u0026rdquo; (p. 528).\n  I have no totally satisfactory topics to suggest that are \u0026ldquo;real\u0026rdquo; and that present real problems to be solved. In a consulting session with Karl Scheville\u0026rsquo;s \u0026ldquo;PEFL\u0026rdquo; project at the University of California at Berkeley (Department of Education), I feel we came close to developing some. Here is one example. Examiner and student are given the following situation: they are siblings, and live in a small apartment with a large family. All the children share bedrooms. The oldest brother has decided that he wants a room of his own. A family meeting needs to take place to decide what to do, because if the brother gets his way, there will be intolerable space constraints on the rest of the family. The examiner and student discuss the situation, with the goal of recommending to the family what the possible solutions are. The topic is not \u0026ldquo;real\u0026rdquo;, since it is a contrived situation, but in our rehearsals, we found that it was possible to stimulate some interesting back and forth discussion.\n  The international classes I proposed earlier, special sections of subject matter classes for international students, might also profit from special materials. These might include texts in areas where slightly easier reading is not available, supplements to existing texts, and, as just mentioned, taped lectures supplemented with notes.\n190\n  Bibliography\r#\r\rALLWRIGHT, R. (1975) Problems in the study of the language teacher\u0026rsquo;s treatment of error. In M. Burt and H. Dulay (Eds.) New Directions in Second Language Learning, Teaching, and Bilingual Education. Washington, D.C.: TESOL. pp. 96-109.\nANDERSEN, R. (1976) A functional acquisition hierarchy study in Puerto Rico. Paper presented at the 10th annual TESOL conference, New York, New York, March, 1976\nANDERSEN, R. (1978) An implicational model for second language research. Language Learning 28: 221-282.\nASHER, J. (1965) The strategy of the total physical response: an application to learning Russian. International Review of Applied Linguistics 3: 291-300.\nASHER, J. (1966) The learning strategy of the total physical response: a review. Modern Language Journal 50: 79-84.\nASHER, J. (1969) The total physical response approach to second language learning. Modern Language Journal 53: 3-17.\nASHER, J. (1972) Children\u0026rsquo;s first language as a model for second language learning. Modern Language Journal 56: 133-139.\nASHER, J. (1977a) Learning Another Language Through Actions: The Complete Teacher\u0026rsquo;s Guidebook. Los Gatos, Calif: Sky Oaks Productions.\nASHER, J. (1977b) Children learning another language: a developmental hypothesis. Child Development 48: 1040-1048.\nASHER, J. and Price, B. (1967) The learning strategy of the total physical response: some age differences. Child Development 38: 1219-1227.\nASHER, J., KUSUDO, J. and DE LA TORRE, R. (1974) Learning a second language through commands: the second field test. Modern Language Journal 58: 24-32.\nBAILEY, N., MADDEN, C. and KRASHEN, S. (1974) Is there a \u0026ldquo;natural sequence\u0026rdquo; in adult second language learning? Language Learning 21: 235-243.\nBANCROFT, J. (1978) The Lozanov method and its American adaptations. Modern Language Journal 62: 167-174.\nBIALYSTOCK, E. and FROHLICH, M. (1977) Aspects of second language learning in classroom settings. Working Papers on Bilingualism 13: 1-26.\nBIALYSTOCK, E. and FROHLICH, M. (1978a) The aural grammar test: description and implications. Working Papers on Bilingualism 15: 15-35.\nBIALYSTOCK, E. and FROHLICH, M. (1978b) Variables of classroom achievement in second language learning. Modern Language Journal 62: 327-335.\nBIRKBICHLER, D. (1977) Communication and beyond. In J. Phillips (Ed.) The Language Connection: From the Classroom to the World. Skokie, Ill.: National Textbook. pp. 53-94.\nBRIERE, E. (1978) Variables affecting native Mexican children\u0026rsquo;s learning Spanish as a second language. Language Learning 28: 159-174.\nBROWN, J. (1980) An explanation of morpheme-group interactions. Paper presented at the Los Angeles Second Language Acquisition Research Forum, UCLA, February, 1980.\nBROWN, R. (1973) A First Language. Cambridge: Harvard Press.\n191\nBROWN, R. (1977) Introduction. In C. Snow and C. Ferguson (Eds.) Talking to Children. New York: Cambridge University Press. pp. 1-27.\nBROWN, R., CAZDEN, C. and BELLUGI, U. (1973) The child\u0026rsquo;s grammar from I to III. In C. Ferguson and D. Slobin (Eds.) Studies of Child Language Development. New York: Holt Rinehart and Winston. pp. 295-333.\nBROWN, S. (1979) Life situations: incorporating community resources into the adult ESL curriculum. CATESOL Occasional Papers 5: 48-65.\nBRUCE, L. (1979) The acquisition of grammatical morphemes by adult students of Russian as a foreign language. MA Paper, Department of Linguistics, USC.\nBRUCK, M., LAMBERT, W. and TUCKER, G. R. (1974) Bilingual schooling through the elementary grades: the St. Lambert Project and grade seven. Language Learning 24: 183-204.\nBURT, M. and KIPARSKY, C. (1972) The Gooficon: A Repair Manual for English. Rowley, Ma: Newbury House.\nBUSHMAN, R. and MADSEN, H. (1976) A description and evaluation of Suggestopedia\u0026ndash;a new teaching methodology. In J. Fanselow and R. Crymes (Eds.) On TESOL \u0026lsquo;76. Washington: TESOL. pp. 29-38.\nCAMPBELL, D. and STANLEY, J. (1963) Experimental and Quasi-Experimental Designs for Research. New York: Rand McNally.\nCANCINO, H., ROSANSKY, E, and SCHUMANN, J. (1975) The acquisition of the English auxiliary by native Spanish speakers. TESOL Quarterly 9: 421-430.\nCARROLL, J. (1966) The contributions of psychological theory and educational research to teaching of foreign languages. In A. Valdman (Ed.) Trends in Language Teaching. New York: McGraw-Hill. pp. 93-106.\nCARROLL, J. (1967) Foreign language proficiency levels attained by language majors near graduation from college. Foreign Language Annals 1: 131-151.\nCARROLL, J. (1980) Foreign language testing: persistent problems. In K. Croft (Ed.) Readings on English as a Second Language. Cambridge, Ma: Winthrop. pp. 518-530.\nCATHCART, R. and OLSEN, J. (1976) Teachers\u0026rsquo; and students' preference for correction of classroom conversation errors. In J. Fanselow and R. Crymes (Eds.) On TESOL \u0026lsquo;76. Washington; TESOL. pp. 41-53.\nCAZDEN, C. (1979) Curriculum/language contexts for bilingual education. In E. Briere (Ed.) Language Development in a Bilingual Setting. Pomona, California: National Multilingual Multicultural Materials Development Center. pp. 129-138.\nCELCE-MURCIA, M. and ROSENZWEIG, F. (1979) Teaching vocabulary in the ESL classroom. In M. Celce-Murcia and L. McIntosh (Eds.) Teaching English as a Second or Foreign Language. Rowley, Ma.: Newbury House. pp. 241-257.\nCHASTAIN, K. (1970) A methodological study comparing the audio-lingual habit theory and the cognitive code learning theory: a continuation. Modern Language Journal 54: 257-266.\nCHASTAIN, K. and WOERDEHOFF, F. (1968) A methodological study comparing the audio-lingual habit theory and the cognitive code-learning theory. Modern Language Journal 52: 268-279.\nCHIHARA, T. and OLLER, J. (1978) Attitudes and attained proficiency in EFL: a sociolinguistic study of adult Japanese speakers. Language Learning 28: 55-68.\nCHOMSKY, N. (1965) Aspects of the Theory of Syntax. Cambridge: MIT Press.\nCHRISTISON, M. (1979) Natural sequencing in adult second language acquisition. TESOL Quarterly 13: 122.\nCLARK, E. and ANDERSEN, E. (1980) Spontaneous repairs: awareness in the process of acquiring language. Papers and Reports in Child Language Dev. 16: 1-12.\nCLARK, H. and CLARK, E. (1977) Psychology and Language. New York: Harcourt Brace Jovanovich.\nCOHEN, A. and ROBBINS, M. (1976) Towards assessing interlanguage performance: the relationship between selecting errors, learner\u0026rsquo;s characteristics, and learner\u0026rsquo;s explanations. Language Learning 26: 45-66.\nCOHEN, A. and SWAIN, M. (1976) Bilingual Education: the \u0026ldquo;Immersion\u0026rdquo; model in the North American context. TESOL Quarterly 10: 45-53.\nCORDER, S. P. (1967) The significance of learner\u0026rsquo;s errors. International Review of Applied Linguistics 5: 161-170.\nCROSS, T. (1977) Mother\u0026rsquo;s speech adjustments: the contributions of selected child listener variables. In C. Snow and C. Ferguson, Talking to Children. New York: Cambridge University Press. pp. 151-188.\nd\u0026rsquo;ANGLEJAN, A. (1978) Language learning in and out of classrooms. In J. Richards (Ed.) Understanding Second and Foreign Language Learning. Rowley, Ma: Newbury House. pp. 218-236.\nDE VILLERS, P. and DE VILLERS, J. (1973) A Cross-sectional study of the acquisition of grammatical morphemes in child speech. Journal of Psycholinguistic Research 2: 267-278.\nDILLER, K. (1978) The Language Teaching Controversy. Rowley, Ma.: Newbury House.\nDULAY, H. and BURT, M. (1974) Natural sequences in child second language acquisition. Language Learning 24: 37-53.\nDULAY, H. and BURT, M. (1975) A new approach to discovering universal strategies of child second language acquisition. In D. Dato (Eds.) Developmental Psycholinguistics: Theory and Applications. Georgetown University Round Table on Languages and Linguistics. Washington: Georgetown University Press. pp. 209-233.\nDULAY, H. and BURT, M. (1977) Remarks on creativity in language acquisition. In M. Burt, H. Dulay and M. Finnochiaro (Eds.) Viewpoints on English as a Second Language. New York: Regents. pp. 95-126.\nDULAY, H. and BURT, M. (1978) Some guidelines for the assessment of oral language proficiency and dominance. TESOL Quarterly 12: 177-192.\nDULAY, H., BURT, M. and KRASHEN, S. Language Two. New York: Oxford. In press.\nDUSKOVA, L. (1969) On sources of error in foreign language learning. International Review of Applied Linguistics 4: 11-36.\nEKSTRAND, L. (1976) Age and length of residence as variables related to the adjustment of migrant children, with special reference to second language learning. In G. Nickel (Ed.) Proceedings of the Fourth International Congress of Applied Linguistics. Vol. 3. Stuttgart: Hochschul Verlag, pp. 179-197.\nERVIN-TRIPP, S. (1973) Some strategies for the first and second years. In A. Dil (Ed.) Language Acquisition and Communicative Choice. Stanford: Stanford University Press. pp. 204-238.\nERVIN-TRIPP, S. (1974) Is second language learning like the first? TESOL Quarterly 8: 111-127.\nFABRIS, M. (1978) The acquisition of English grammatical functors by child second language learners. TESOL Quarterly 12: 482.\nFANSELOW, J. (1977) The treatment of error in oral work. Foreign Language Annals 10: 583-593.\nFATHMAN, A. (1975) The relationship between age and second language productive ability. Language Learning 25: 245-266.\nFATHMAN, A. (1979) The value of morpheme order studies for second language learning. Working Papers on Bilingualism 18: 179-199.\nFATHMAN, A. (1980) Influences of age and setting on second language oral proficiency. Paper presented at Los Angeles Second Language Research Forum, UCLA, February, 1980.\nFELIX, S. (1980) The effect of formal instruction on second language learning. Paper presented at Los Angeles Second Language Research Forum, UCLA, February, 1980.\nFREED, B. (1980) Talking to foreigners versus talking to children: similarities and differences. In R. Scarcella and S. Krashen (Eds.) Research in Second Language Acquisition. Rowley, Ma.: Newbury House. pp. 19-27.\nGAIES, S. (1977) The nature of linguistic input in formal language learning: linguistic and communicative strategies in ESL teachers\u0026rsquo; classroom language. In H. D. Brown, C. Yorio and R. Crymes (Eds.) Teaching and Learning English as a Second Language: Trends in Research and Practice. Washington: TESOL. pp. 204-212.\nGARDNER, R. and LAMBERT, W. (1972) Attitudes and Motivation in Second-Language Learning. Rowley, Ma.: Newbury House.\nGARY, J. O. (1975) Delayed oral practice in initial stages of second language learning. In M. Burt and M. Dulay (Eds.) On TESOL \u0026lsquo;75: New Directions in Second Language Learning, Teaching and Bilingual Education. Washington: TESOL. pp. 89-95.\nGILLIS, M. and WEBER, R. (1976) The emergence of sentence modalities in the English of Japanese-speaking children. Language Learning 26: 77-94.\nHAKUTA, K. (1974) A preliminary report of the development of grammatical morphemes in a Japanese girl learning English as a second language. Working Papers on Bilingualism 3: 18-43.\nHALE, T. and BUDAR, E. (1970) Are TESOL classes the only answer? Modern Language Journal 54: 487-492.\nHALL, E. (1959) The Silent Language. Greenwich, Conn.: Fawcett.\nHAMMARBERG, B. (1979) On intralingual, interlingual and developmental solutions in interlanguage. Paper presented at the Fifth Scandinavian Conference of Linguistics, Frostvallen, April, 1979.\nHAMMERLY, H. (1975) The deduction/induction controversy. Modern Language Journal LIX: 15-18.\nHANANIA, E. and GRADMAN, H. (1977) Acquisition of English structures: a case study of an adult native speaker in an English-speaking environment. Language Learning 27: 75-92.\nHARRIS, D. (1969) Testing English as a Second Language. New York. McGraw Hill.\nHARTNETT, D. (1974) The Relation of Cognitive Style and Hemispheric Preference to Deductive and Inductive Second Language Learning. MA Thesis, Department of English, (TESL), UCLA.\nHATCH, E. (1972) Some studies in second language learning. UCLA Workpapers in Teaching English as a Second Language 6: 29-36.\nHATCH, E. (1976) Language in outer space. Paper presented at the UCLA-USC Second Language Acquisition Forum, Fall, 1976.\nHATCH, E. (1978a) Discourse analysis and second language acquisition. In E. Hatch (Ed.) Second Language Acquisition. Rowley, Ma.: Newbury House. pp. 401-435.\nHATCH, E. (1978b) Introduction. In E. Hatch (Ed.) Second Language Acquisition. Rowley, Ma.: Newbury House. pp. 1-18.\nHATCH, E. (1979) Apply with caution. Studies in Second Language Acquisition 2: 123-143.\nHATCH, E., SHAPIRA, R. and GOUGH, J. (1978) \u0026ldquo;Foreigner-talk\u0026rdquo; discourse. ITL: Review of Applied Linguistics 39-40: 39-60.\nHAWKINS, J. (1978) Definiteness and Indefiniteness: A Study in Reference and Grammaticality Prediction. London: Croom Helm.\nHENDRICKSON, J. (1978) Error correction in foreign language teaching: recent theory, research, and practice. In K. Croft (Ed.) Readings on English as a Second Language. Cambridge, Ma.: Winthrop. pp. 153-175.\nHOUCK, N., ROBERTSON, J. and KRASHEN, S. (1978) On the domain of the conscious grammar: morpheme orders for corrected and uncorrected ESL student transcriptions. TESOL Quarterly 12: 335-339.\nHOUCK, N., ROBERTSON, J. and KRASHEN, S. (1978b) What happens in error correction. Abstract submitted to 1978 TESOL Conference.\nHYLTENSTAM, K. (1977) Implicational patterns in interlanguage syntax variation. Language Learning 27: 383-411.\nINHELDER, B., and PIAGET, J. (1958) The Growth of Logical Thinking from Childhood to Adolescence. New York: Basic Books.\nJOHNSON, T. and KRUG, K. (1980) Integrative and instrumental motivations: in search of a measure. In J. Oller and K. Perkins (Eds.) Research in Language Testing. Rowley, Ma.: Newbury House. pp. 241-249\nJONES, R. (1979) Performance testing of second language proficiency. In E. Briere and F. Hinofotis (Eds.) Concepts in Language Testing. Washington: TESOL. pp. 50-57.\nJORDENS, P. and KELLERMAN, E. (1978) Investigation into the strategy of transfer in second language learning. Paper presented at AILA conference, Montreal, August, 1978.\nKAYFETZ, J. (Fuller) (1978) Natural and Monitored Sequences by Adult Learners of English as a Second Language. Ph.D. dissertation. Florida State University.\nKELLERMAN, E. 1978) Giving learners a break: native language intuitions as a source of predictions about transferability. Working Papers on Bilingualism 15: 59-92.\nKESSLER, C. and IDAR, I. (1977) The acquisition of English syntactic structures by a Vietnamese child. Paper presented at the Los Angeles Second Language Acquisition Forum, UCLA, 1977.\nKLEINMAN, H. (1977) Avoidance behavior in adult second language acquisition. Language Learning 27: 93-107.\nKLIMA, E. and BELLUGI, U. (1966) Syntactic regularities in the speech of children. In J. Lyons and R. Wales (Eds.) Psycholinguistic Papers. Edinburgh: Edinburgh University Press. pp. 183-208.\nKOUNIN, T. and KRASHEN, S. (1978) Approaching native speaker competence from two different directions. In C. Blatchford and J. Schachter (Eds.) On TESOL \u0026lsquo;78: EFL Policies, Programs, Practices. Washington: TESOL. pp. 205-212.\nKRASHEN, S. (1976) Formal and informal linguistic environments in language learning and language acquisition. TESOL Quarterly 157-168.\nKRASHEN, S. (1977) Some issues relating to the Monitor Model. In H. D. Brown, C. Yorio and R. Crymes (Eds.) On TESOL \u0026lsquo;77: Teaching and Learning English as a Second Language: Trends in Research and Practice. Washington: TESOL. pp. 144-158.\nKRASHEN, S. (1978) Individual variation in the use of the Monitor. In W. Ritchie (Ed.) Principles of Second Language Learning. New York: Academic Press. pp. 175-183.\nKRASHEN, S. (1980) The theoretical and practical relevance of simple codes in second language acquisition. In R. Scarcella and S. Krashen (Eds.) Research in Second Language Acquisition. Rowley, Ma.: Newbury House. pp. 7-18.\nKRASHEN, S. (1981) Second Language Acquisition and Second Language Learning. Oxford: Pergamon Press.\nKRASHEN, S. (1982) Newmark\u0026rsquo;s \u0026ldquo;Ignorance Hypothesis\u0026rdquo; and current second language acquisition theory. Unpublished manuscript.\nKRASHEN, S., SELIGER, H. and HARTNETT, D. (1974) Two studies in second language learning. Kritikon Litterarum 3: 220-228.\nKRASHEN, S. and PON, P. (1975) An error analysis of an advance ESL learner. Working Papers on Bilingualism 7: 125-129.\nKRASHEN, S., MADDEN, C. and BAILEY, N. (1975) Theoretical aspects of grammatical sequencing. In M. Burt and H. Dulay (Eds.) Second language Learning, Teaching, and Bilingual Education. Washington: TESOL. pp. 44-54.\nKRASHEN, S. and SELIGER, H. (1975) The essential characteristics of formal instruction. TESOL Quarterly 9: 173-183.\nKRASHEN, S. and SELIGER, H. (1976) The role of formal and informal linguistic environments is adult second language learning. International Journal of Psycholinguistics 3: 15-21.\nKRASHEN, S., SFERRLAZZA, V. FELDMAN, L. and FATHMAN, A. (1976) Adult performance on the SLOPE test: more evidence for a natural sequence in adult second language acquisition. Language Learning 26: 145-151.\nKRASHEN, S., HOUCK, N., GIUNCHI, P, BODE, S., BIRNBAUM, R. and STREI, J. (1977) Difficulty order for grammatical morphemes for adult second language performers using free speech. TESOL Quarterly 11: 338-341.\nKRASHEN, S., BUTLER, J., BIRNBAUM, R., and ROBERTSON, J. (1978) Two studies in language acquisition and language learning. ITL: Review of Applied Linguistics 39-40: 73-92.\nKRASHEN, S., and SCARCELLA, R. (1978) On routines and patterns in language acquisition and performance. Language Learning 28: 283-300.\nKRASHEN, S., ZELINSKI, S., JONES, C. and USPRICH, C. (1978) How important is instruction? English Language Teaching Journal 32: 257-261.\nKRASHEN, S., LONG, M. and SCARCELLA, R. (1979) Age, rate and eventual attainment in second language acquisition. TESOL Quarterly 13: 573-582.\nKUNIHARA, S. and ASHER, J. (1965) The strategy of the total physical response: an application to learning Japanese. International Review of Applied Linguistics 4: 277-289.\nLADO, R. (1964) Language Teaching: A Scientific Approach. New York: McGraw Hill.\nLADO, R. and FRIES, C. (1958) An Intensive Course in English. Ann Arbor: University of Michigan Press.\nLAMBERT, W. and TUCKER, G. R. (1972) The Bilingual Education of Children. Rowley, Ma.: Newbury House.\nLAMENDELLA, J. (1979) Lectures presented at the 1979 TESOL Summer Institute, UCLA, English 272K.\nLARSEN, D. (1975) A Re-evaluation of grammatical structure sequencing. On TESOL \u0026lsquo;74. Washington: TESOL.\nLARSEN-FREEMAN, D. (1975) The Acquisition of Grammatical Morphemes by Adult Learners of English as a Second Language. Ph.D. dissertation, University of Michigan.\nLARSEN-FREEMAN, D. (1979) The importance of input in second language acquisition. Paper presented at the Linguistic Society of America, Los Angeles, December, 1979.\nLAWLER, J and SELINKER L. (1971) On paradoxes, rules, and research in second language acquisition. Language Learning. 21: 27-43.\nLEE, R., McCUNE, L, and PATTON, L. (1970) Physiological responses to different modes of feedback in pronunciation testing. TESOL Quarterly 4: 117-122.\nLENNEBERG, E. (1962) Understanding language without ability to speak: a case report. Journal of Abnormal and Social Psychology 65: 419-425.\nLEVIN, L. (1972) Comparative Studies in Foreign-Language Teaching. Stockholm: Almqvist \u0026amp; Wiksell.\nLIGHTBOWN, P., SPADA, N. and WALLACE, R. (1980) Some effects of instruction on child and adolescent ESL learners. In R. Scarcella and S. Krashen (Eds.) Research in Second Language Acquisition. Rowley, Ma: Newbury House. pp. 162-172.\nLIGHTBOWN, P. Exploring the relationships between developmental and instructional sequences in second language acquisition. In H. Seliger and M. Long (Eds.) Classroom Language Acquisition and Use: New Perspectives. Rowley, Ma.: Newbury House. In press.\nLoCOCO, V. (1975) An analysis of Spanish and German learner\u0026rsquo;s errors. Working papers on Bilingualism 7: 96-124.\nLONG, M. (1980) *Input, Interaction, and Second Language Acquisition.*Ph.D. dissertation, UCLA.\nLUKMANI, Y. (1972) Motivation to learn and language proficiency. Language Learning 22: 261-273.\nMACHA, D. (1979) Reading comprehension of non-native students in English composition at the freshman level. TESOL Quarterly 13: 425-427.\nMaCNAMARA, J. (1972) Cognitive basis of language learning in infants. Psychological Review 79: 1-14.\nMAKINO, T. (1980) Acquisition Order of English Morphemes by Japanese Adolescents. Tokyo: Shinozaki Shorin Press.\nMASON, C. (1971) The relevance of intensive training in English as a foreign language for university students. Language Learning 21: 197-204.\nMILON, J. (1974) The development of negation in English by a second language learner. TESOL Quarterly 8: 137-143.\nMINOURA, Y. (1979) An examination of the role of acculturation in second language acquisition through multivariate analysis. Paper presented at TESOL summer meeting, UCLA, July, 1979.\nMUELLER, T. (1971) The effectiveness of two learning models: the audio-lingual habit theory and the cognitive code-learning theory. In P. Pimsleur and T. Quinn (Eds.) The Psychology of Second Language Learning. Cambridge: Cambridge University Press, pp. 113-122.\nMURAKAMI, M. (1980) Behavioral and attitudinal correlates of progress in ESL by native speakers of Japanese. In J. Oller and K. Perkins (Eds.) Research in Language Testing. Rowley, Ma.: Newbury House. pp. 227-232.\nNELSON, J. (1980) Language Systems in Adult Informal Second Language Learners. Ph.D. dissertation, McGill University.\nNEWMARK, L. (1966) How not to interfere with language learning. Language Learning: The Individual and the Process. International Journal of American Linguistics 40: 77-83.\nNEWMARK, L. (1971) A minimal language teaching program. In P. Pimsleur and T. Quinn (Eds.) The Psychology of Second Language Learning. Cambridge: Cambridge University Press. pp. 11-18.\nNEWMARK, L., and REIBEL, D. (1973) Necessity and sufficiency in language learning. In M. Lester (Ed.) Readings in Applied Transformational Grammar. New York: Holt Rinehart Winston. pp. 220-244.\nNEWMARK, E., GLEITMAN, H. and GLEITMAN, L. (1977) Mother, I\u0026rsquo;d rather do it myself: some effects and non-effects of maternal speech style. In C. Snow and C. Ferguson (Eds.) Talking to Children. Cambridge: Cambridge University Press. pp. 109-149.\nOLLER, J. (1979) Language Tests at School. London: Longmans.\nOLLER, J., BACA, L. and VIGIL, A. (1977) Attitudes and attained proficiency in ESL: a sociolinguistic study of MexicanAmericans in the southwest. TESOL Quarterly 11: 173-183.\nOLLER, J. and PERKINS, K. (1978) Intelligence and language proficiency as sources of variance in self reported affective variables. In J. Oller and K. Perkins (Eds.) Language in Education: Testing the Tests. Rowley Ma.: Newbury House. pp. 103-122.\nOLLER, J., PERKINS, K. and MURAKAMI, M. (1980) Seven types of learner variables in relation to ESL learning. In J. Oller and K. Perkins (Eds.) Research in Language Testing. Rowley Ma.: Newbury House. pp. 233-240.\nOLSSON, M. (1969) Implicit and explicit: an experiment in applied psycholinguistics, assessing different methods of teaching grammatical structures in English as a foreign language. GUME Report #3, Gothenburg School of Education. Sweden.\nOSTRANDER, S. and SCHROEDER, L. (Eds.)(1976) The ESP Papers. New York: Bantam Books.\nOYAMA, S. (1976) A sensitive period for the acquisition of a non-native phonological system. Journal of Psycholinguistic Research 5: 261-285.\nOYAMA, S. (1978) The sensitive period and comprehension of speech. Working Papers on Bilingualism 16: 1-17.\nPATKOWSKI, M. (1980) The sensitive period for the acquisition of syntax in a second language. Language Learning 30: 449-472.\nPAULSTON, C. (1972) Structural pattern drills: a classification. Foreign Language Annals 4: 187-193.\nPOSTOVSKY, V. (1974) Effects of delay in oral practice at the beginning of second language learning. Modern Language Journal 58: 229-239.\nPublic Service Commission of Canada, Staff Development Branch, Studies Division, Suggestopedia Program (1975) A teaching experience with the Suggestopedic Method. Ottawa, Canada.\nPURCELL, E.. and SUTER, R. (1980) Predictors of pronunciation accuracy: a re-examination. Language Learning 30: 271-287.\nRACLE, G. (1979) Psychopédagogie profonde en enseignement del langes. Medium 4: 91-110.\nRACLE, R. (1980) Psychopédagogie profonde en enseignement del langes. (suite). Medium 5: 73-83.\nRAMSEY, C. and WRIGHT, E. (1974) Age and second language learning. Journal of Social Psychology 94: 115-121.\nRAVEM, R. (1974) The development of wh-questions in first and second language learners. In J. Richards (Ed.) Error Analysis: Perspectives on Second Language Learning. London: Longman. pp. 134-155.\nREBER, A. (1976) Implicit learning of synthetic languages: the role of instructional set. Journal of Experimental Psychology: Human Memory and Learning. 2: 88-95.\nRIVERS, W. (1968) Teaching Foreign Language Skills. Chicago: University of Chicago Press.\nRIVERS, W. (1979) Foreign language acquisition: where the real problems lie. Applied Linguistics 1: 48-57.\nROBINSON, P. (1980) ESP: English for Specific Purposes. Oxford: Pergamon Press.\nSCARCELLA, R. Developing conversational competence in a second language. Forthcoming.\nSCARCELLA, R. and HIGA, C. Input and age differences in second language acquisition. In S. Krashen, R. Scarcella and M. Long (Eds.) Child-Adult Differences in Second Language Acquisition. Rowley, Ma.: Newbury House. Forthcoming.\nSCHACHTER, J. (1974) An error in error analysis. Language learning 24: 204-214.\nSCHACHTER, J., TYSON, A. and DIFFLEY, F. (1976) Learner intuitions of grammaticality. Language Learning 26: 67-76.\nSCHERE, G. and WERTHEIMER, M. (1964) A Psycholinguistic Experiment in Foreign Language Teaching. New York: McGraw Hill.\nSCHLUE, K. (1977) An inside view of interlanguage. In C. Henning (Ed.) Proceedings of the Los Angeles Second Language Research Forum. UCLA TESL Department. pp. 342-348.\nSCHUMANN, J. (1978a) The Pidginization Process. Rowley, Ma: Newbury House.\nSCHUMANN, J. (1978b) The acculturation model for second-language acquisition, In R. Gingras (Ed.) Second-Language Acquisition and Foreign Language Teaching. Arlington, Virginia: Center for Applied Linguistics. pp. 27-50.\nSCHUMANN, J. (1979) The acquisition of English negation by speakers of Spanish: a review of the literature. In R. Andersen (Ed.) The Acquisition and Use of Spanish and English as First and Second Languages. Washington: TESOL.\nSCHUMANN, J. (1980) The acquisition of English relative clauses by second language learners. In R. Scarcella and S. Krashen (Eds.) Research in Second Language Acquisition. Rowley, Ma.: Newbury House. pp. 118-131.\nSCHUMANN, J. and SCHUMANN, F. (1977) Diary of a language learner: an introspective study of second language learning. In H. D. Brown, C. Yorio and R. Crymes (Eds.) On TESOL \u0026lsquo;77: Teaching and Learning English as a Second Language, Trends in Research and Practice. Washington: TESOL. pp. 209-249.\nSCHWABE, T. (1978) Survival English for ESL students in American educational institutions. CATESOL Occasional Papers 4: 79-87.\nSCOVEL, T. (1979) Georgi Lozanov: Suggestology and outlines of Suggestology. TESOL Quarterly 13: 255-266.\nSELIGER, H. (1975) Inductive method and deductive method in language teaching: a reexamination. International Review of Applied Linguistics 13: 1-18.\nSELIGER, H. (1979) On the nature and function of language rules in language teaching. TESOL Quarterly 13: 359-369.\nSELIGER, H., KRASHEN, S. and LADEFOGED, P. (1975) Maturational constraints in the acquisition of a native-like accent in second language learning. Language Sciences 36: 209-231.\nSELINKER, L. (1972) Interlanguage International Review of Applied Linguistics 10: 209-231.\nSHIPLEY, E., SMITH, C. and GLEITMAN, L. (1969) A study in the acquisition of language: free responses to commands. Language 45: 322-342.\nSTAFFORD, C. and COVITT, G. (1978) Monitor use in adult second language production. ITL: Review of Applied Linguistics 39-40: 103-125.\nSTAUBLE, A. (1978) The process of decreolization: a model for second language development. Language Learning 28: 29-54.\nSTEVICK, E. (1976) Memory, Meaning, and Method. Rowley, Ma.: Newbury House.\nSTEVICK, E. (1980) Teaching Languages: A Way and Ways. Rowley, Ma.: Newbury House.\nSWAFFER, J. and WOODRUFF, M. (1978) Language for comprehension: focus on reading. Modern Language Journal 62: 27-32.\nSWAIN, M. (1974) French immersion programs across Canada: research findings. Canadian Modern Language Review 31: 117-129.\nTERRELL, T. (1977) A natural approach to second language acquisition and learning. Modern Language Journal 6: 325-337.\nTUCKER, G. R. and SAROFIM, M. (1979) Investigating linguistic acceptability with Egyptian EFL students. TESOL Quarterly 13: 29-39.\nULUN, J. and KEMPEN, G. (1976) The role of the first language in second language reading comprehension\u0026ndash;some experimental evidence. Proceedings of the Fourth International Congress of Applied Linguistics. Stuttgart: HochschulVerlag. pp. 495-507.\nUPSHUR, J. (1968) Four experiments on the relation between foreign language teaching and learning. Language Learning 18: 111-124.\nVALETTE, R. (1977) Modern Language Testing. New York: Harcourt Brace Jovanovich.\nvan NAERSSEN, M. (1981) Ph.D. dissertation, Department of Linguistics, University of Southern California.\nVARVEL, T. (1979) The Silent Way: panacea or pipedream? TESOL Quarterly 13: 493-494.\nvon ELEK, T. and OSKARSSON, M. (1975) Comparative Method Experiments in Foreign Language Teaching. Department of Educational Research. Mőlndal (Gothenburg) School of Education. Sweden.\nWAGNER-GOUGH, J. and HATCH, E. (1975) The importance of input data in second language acquisition studies. Language Learning 25: 297-308.\nWALBURG, H., HASE, K. and PINZUR RASHER, S. (1978) English acquisition as a diminishing function of experience rather than age. TESOL Quarterly 12: 427-437.\nWHITE, L. (1977) Error analysis and error correction in adult learners of English as a second language. Working Papers on Bilingualism 13: 42-58.\nWIDDOWSON, H. (1977) The significance of simplification. Studies in Second Language Acquisition 1.\nWIGGIN, B. (1979) Comments on the TOEFL test. TESOL Quarterly 13: 292-294.\nWINN-BELL OLSEN, J. (1977) Communication Starters and Other Activities for the ESL Classroom. San Francisco: Alemeny Press.\nWODE, H. (1976) Developmental sequences in naturalistic L2 acquisition. In E. Hatch (Ed.) Second Language Acquisition. Rowley, Ma.: Newbury House. pp. 101-117.\nYORIO, C. (1978) Confessions of a second language speaker/learner. Paper presented at 12th annual TESOL convention, Mexico City, April, 1978.\nZOBL, H. (1980a) Developmental and transfer errors; their common bases and (possibly) differential effects on subsequent learning. TESOL Quarterly 14: 469-479.\nZOBL, H. (1980b) Contact-induced language change, learner-language, and the potentials of a modified CA. Paper presented at the Los Angeles Second Language Acquisition Research Forum, UCLA.\nZOBL, H. (1980c) The formal and developmental selectivity of L1 influence on L2 acquisition. Language Learning 30: 43-57.\nIndex\r#\r\rAcculturation 45-50\nAchievement testing 176-182\nAcquisition (defined) 10 does not result from learning 83-89 not the same as inductive learning 113 characteristics 18\nAffective Filter 30-32, 73-76, 128, 131, 134, 136, 139,\n141-142, 144-145, 164, 165, 168-169\nAge 43-45, 95\nAudio-lingualism 129-132, 149-154\nAvoidance 51\nBackwash effect 177-178, 182\n\u0026ldquo;Careless\u0026rdquo; errors 86, 99\nCaretaker speech 22-24, 64-65\nClassroom, role of 30, 33-37, 58-60\nCognitive-code 84, 113, 132-134, 149-154\nConversation 61, 163-164\nConversational management 44, 59, 61, 76-79, 129,\n131, 134, 135-136, 139, 142, 164, 165, 169\nCounseling-Learning 32, 126\nDeductive learning 87, 113-115\nDirect method 135-137\nError correction 11, 61, 74-76, 91-92, 116-119, 138,\n139 , 141\n\u0026ldquo;Eureka\u0026rdquo; experience 88\nExposure 37-43\nForeigner talk 24, 60, 64-65, 163\nForgetting Principle 66, 133, 168\nFirst language influence 27-28\nGrammatical sequencing\n(for acquisition) 14, 25-26, 68-70, 128, 131, 134, 136,\n138 , 141, 145, 163, 165, 168\n(for learning) 115-116\nGrammar teaching 81, 88, 89, 112, 113-115, 119-121, 137\nGrammar-translation 127-129, 149-154\nGUME project 150-154\nImmersion 170-171\nInductive Learning 11, 87, 113-115, 132, 135, 142\nInput hypothesis 20-30, 60\nInterlanguage talk 24\nInternalization 81, 84\nLearning (defined) 10, 16, 83-124, 129, 132, 134, 137,\n139 , 142, 187\nLanguage laboratory 184-185\nMaterials 182-186\nMethod comparisons 147-160\nMonitor hypothesis 15-20\nMonitor use 89-104\nNatural Approach 76, 117, 137-140\nNatural order 12, 13, 14, 17, 101, 116, 124, 185\nOutput 60-62, 74\nPleasure reading 164-167, 183-184\n   Quantity of input 71, 128, 131, 134, 136,    138-139, 141, 163, 165, 168, 184\nSelf-correction 104-112\nSilent period 26-27, 71-72, 81, 157, 171\nSilent Way 126\nSubject matter teaching 167-175\nSuggestopedia 32, 142-146, 158-160 Teacher, function of 64-66\nTeacher talk 24, 64-65, 137\nTotal Physical Response 140-142, 155-157\nTransitional forms 14, 51-52\nVocabulary 80-81\nsource word\n"}),a.add({id:9,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/confident/',title:"如何提升自信",section:"自信",content:"case1\r#\r\r相信很多兄弟，多多少少都有点自卑，那么我们又应该如何去掉这些自卑，从而变得自信起来呢？\n在你想要变得自信之前，首先我们要知道自卑是什么。\n精神学家阿尔弗雷德·阿德勒在《自卑与超越》里曾经说过，人的自卑根源都来源于三个点：身体缺陷，骄纵，忽略。\n自卑的定义是什么？阿德勒提出：当一个人面对一个需要解决的问题的时候，他无能为力，一点办法都没有，这个时候他所出现的情绪就是自卑。\n换句话来说就是：自卑其实只是一种情绪。\n回头想想我们的过往经历，的确在很多场景中也出现过这样的情绪，比如：\n在面对比自己优秀的人的时候，比如看到一个非常漂亮的女生的时候，自己连正眼都不敢看向她。\n在重要场合中，比如职场中需要上台说话，会变得异常紧张，手心冒汗。\n在日常生活中，比如我们用的手机没有别人的贵，就会不好意思拿出手机来玩。\n这些都是比较大众化的，在这里，我来给兄弟们讲讲我的故事。\n昨天的文章也有写到，我原本出生在一个极其贫困的农村里，如果我后面没有走出来城市，我可能永远都不会因为觉得自己家太穷而自卑。\n农村的孩子一般都长不高，在出来城市里，面对着这些从小就经常运动的同学们，我的身高只能坐在课堂的前两排。\n因为前面的两个点，导致了我自卑的情绪从童年开始就一直伴随着我，人就会变得不爱说话，不喜欢和别人交往，长久以来，我就开始变得越来越内向，甚至是自闭。\n从小几乎就没有朋友，因为经常孤单只影，同学们也喜欢欺负我，撕烂我的书本，零用钱被抢，放学经常被人打。\n因为童年的这些阴影，包括家庭条件，个人条件（身高，性格），导致了我出来了社会之后还是一如既往的自卑。\n那个时候我已经放弃挣扎了，就像变成了一条死鱼，翻着白眼随着江水一直漂啊漂啊\u0026hellip;\n我的自卑到底来源于哪里？我总结过，你也可以看看你有没有。\n1，身体有缺陷\n可能很多兄弟都和我一样，觉得自己不够高，不够帅，不够壮，脸上有痘痘或者痘印痘坑之类的，或者其他的缺陷。\n比如像我在六年级的时候，因为被人追着打，把门牙摔崩了一颗，导致了我从小就不爱笑，因为一笑，就会露出我崩掉的门牙，从而导致了我对自己的身体很自卑。\n2，童年有阴影\n成绩差，同学的欺负，父母的离异，异性的拒绝，青春期的生理变化（青春痘，声音变化），这些情况都会导致了你性格内向，不爱说话，不喜欢与人交流等等习惯。\n3，他人的眼光\n自己眼里的自己，和别人眼里的自己，都会呈现出不同的版本。\n我们小时候要活给父母看，我们要做乖孩子。\n读书的时候要活给老师同学看，我们要有好成绩。\n出来职场后要活给同事看，我们需要好业绩。\n生活中要活给亲朋好友看，我们要过上好生活。\n对于这种现象，我们都已经习以为常了，因为从小就在这样的环境下成长，需要得到别人的认同，我们才能够确认到自己的价值所在。\n万一我们出现的现实和别人的期望值相差太远，我们就会开始自卑。\n4，生活的挫折\n比如我们在学习的时候成绩比不过别人，在职场上待遇没有别人好，求爱的时候频频遇到拒绝，包括家庭背景，住的房子，有没有车，开得什么车，日常的生活等等挫折。\n这些都是我们自卑的根源。\n当我们知道了自卑的根源和背后形成的原因之后，我们就能“对症下药”，逐步的解决问题。\n如何解决呢？\n我在线下课程的时候，针对自信这节课，就说过一句话：所有的不自信都是源于你有自卑点，想要变得自信，那你必须要把这些自卑点一个个的找出来，然后逐个的去掉它们，再不断的加强，这样的话你就能够变得自信起来了。\n解决自卑有一个公式：现实生活与心理预期差距太大——变得自卑——接受不能改变的，改变能改变的——产生优越感——不断强化——变得自信\n具体变得自信的方法是：\n1，独立\n活在父母庇护下的孩子永远长不大，所以我们的第一步就是要学会独立，不再依赖任何人。\n如果你能够独立起来，那你就能够有一个“不再活在别人眼里”的环境，再也不会受到别人的否定，嫌弃等等评价。\n以及你会拥有一个新的“自我评价”，我们的心理在没有完全成熟之前，会更多的依赖到别人的评价来确认自己的价值，但是一旦独立了，我们的心理就会逐步的成熟起来，这个时候的我们会更加的相信自我评价。\n2，减低期望\n人生最大的悲剧是：不甘于现状，但是能力又撑不起自己的野心，可是你又很努力，这种落差就是，你配不上自己的野心，也辜负了所受的苦。\n对自己的期望，要求，要跟实际情况相应的改变一下，就像你跟我说，今年想赚100万，可是你现在连一份工作都没有的，太过于不切实际。\n所以我建议兄弟们，我们在期望，在设定目标的时候，不需要想得太过于长远，不如想想下一个小时要做什么，明天要做什么。\n内心有着一个终极目标就行了，不需要时时刻刻都想着要完成它，因为可能这个目标距离你非常遥远，所以你需要做的，就是先把计划划分好，再提前计划好你每一天要做的事情。\n比如：你在下午的5点到7点，计划好要做什么，8点到10点计划好要做什么，然后按照你的计划去执行就是了。\n而你要去做这些“小时”的计划的时候，切记是要提前做，不要到了时间段才做，比如你要求自己在9点到10点的时候认真的看一本书，那你在晚上7点前就要计划好。\n而你每完成一次你的目标，就能够获得一次优越感，完成的次数多了，你自然就会越来越自信。\n3，接受\n有很多东西，我们再怎么努力可能都没有办法改变，那就要学会坦然的接受它，比如我们的容貌，我们的身高等等。\n而有些东西在短时间内并不能改变的，那就暂时接受它，比如没什么钱，阅历不够，情商不够，经验不够，不够成熟等等。\n4，改变\n当我们清楚了我们的自卑点是什么了之后，我们就要想出办法逐个解决。\n比如：\n我身高一直都是我的自卑点，那我想尽了一切的办法，比如穿了一双内增高6厘米的鞋子，把头发梳成大背头，用风筒吹上去一点，发型可以为我的身高增加3厘米左右，这样的话我164的身高看起来也会有172左右，有了这样的身高之后，我再也没有为我的身高而感到自卑过。\n比如：\n我以前走路经常会弯腰驼背，后面意识到了这一点之后开始慢慢的改正，但是很难很难，我去问了健身教练，他告诉我说只要你坚持的去做俯卧撑你就能不再弯腰驼背了，后来我每天都要做100个左右的俯卧撑，我现在走路腰板都是很直的。\n比如：\n我觉得我口才不行，一点都不会说话，即使和亲戚朋友之间都是没什么话题可聊，那我就开始去看书，去看课程，看相关的教程，再逐步的锻炼，现在我不能说我口才有多么的好，但是基本上的人际交往都不会有什么压力。\n比如：\n我一直都觉得我比较穷，那我就开始想办法赚钱，我列出了所有我能够做的工作，再一个个的排除，最终从一个小小的厨师一个月收入1700，变成了一个古典家具的师傅，一个月有7000左右，后来自己创业，收入越来越高。\n我们缺了什么，就去补充什么，也许和别人比，我们还是不够优秀，但是和昨天的自己比，那我又进步了一点，这样长久下去，即使我还是不够自信，但是我绝对也不会自卑了。\n5，强化\n当你开始不自卑的时候，你想要获得真正的自信，那你就需要有拿得出手的东西。\n比如你通过努力了之后变得有点钱，或者说变得有点情商，有点阅历，口才有点好等等；\n但是这也是远远不够的，因为你只是做了你应该做的，真正的自信，你需要做到的不是“有点”，而是“很有”，或者“非常有”，你就会变得真真正正的自信起来了。\n自卑是一种情绪，但是自信就是一种能力！\n我一直都坚信，锻炼自信就像锻炼我们的肌肉一样，知道问题的根源，然后逐个的解决，再逐步的强化，你就会有一身的“肌肉”。\n所以兄弟们应该清楚，想要变得自信，没有任何的捷径。\ncase2\r#\r\r 如何增强自信（15方法）  自信，就是对自己能够达到某种目标的乐观、充分估计。美国作家爱默生说：“自信是成功的第一秘诀。”可以说，拥有自信就拥有无限机会。那么如何增强自信呢？\n增强自信的第一个方法：关注自己的优点。在纸上列下十个优点，不论是哪方面（细心、眼睛好看等等，多多益善），在从事各种活动时，想想这些优点，并告诉自己有什么优点。这样有助你提升从事这些活动的自信，这叫做“自信的蔓延效应”。这一效应对提升自信效果很好。\n增强自信的第二个方法：与自信的人多接触。“近朱者赤，近墨者黑”这一点对增强自信同样有效。\n增强自信的第三个方法：自我心理暗示，不断对自己进行正面心理强化，避免对自己进行负面强化。一旦自己有所进步（不论多小）就对自己说：“我能行！”、“我很棒！”、“我能做得更好！”等等，这将不断提升自己的信心。\n增强自信的第四个方法：树立自信的外部形象。首先，保持整洁、得体的仪表，有利于增强一个人的自信；其次，举止自信，如行路目视前方等，刚开始可能不习惯，但过一段时间后就会有发自内心的自信；另外，注意锻炼、保持健美的体形对增强自信也很有帮助。\n增强自信的第五个方法：.不可谦虚过度。谦虚是必要的，但不可过度，过分贬低自己对自信心的培养是极为不利的。\n增强自信的第六个方法：学会微笑。微笑会增加幸福感，进而增强自信。\n增强自信的第七个方法：扬长避短。在学习、生活、工作中，抓住机会展现自己的优势、特长，同时注意弥补自己的不足，不断进步，肯定能增强自信。\n增强自信的第八个方法：阅读名人传记，因为很多知名人士成名前的自身资质、外部环境并不好，如果多看一些这方面的材料有助于提升自信心。\n增强自信的第九个方法：做好充分准备。从事某项活动前如果能做好充分准备，那么，在从事这项活动时，必然较为自信，而且这利于顺利完成活动并增强整体自信心。\n增强自信的第十个方法：给自己定恰当的目标，并且在目标达成后，定更高的目标。目标不能太高，否则不易达到，如果达不到，对自信心会有所破坏。\n增强自信的第十一个方法：冒一次险。当你做了以前不敢做的事以后，你会发现：原来作这事并没有什么了不起！这对提升自信心很有帮助。\n增强自信的第十二个方法：排除压力。过重的压力会使自己意志消沉，对自身产生怀疑，从而破坏自信心，学会排除压力对保持原有自信帮助很大。\n增强自信的第十三个方法：做自己喜欢做的事。对自己喜欢做的事，因为比较投入，容易取得成功，继而产生成就感，这非常有利于自信心的提高。\n增强自信的第十四个方法：保持健康。注意全面的营养、保证身体锻炼、保持快乐的心境，良好的生理、心理状况会使自己产生幸福感，进而产生自信心。\n增强自信的第十五个方法：尽量依靠自己。有事尽量依靠自己解决，能不断激发自身的潜力，并且通过一次次的成功，不断提升自信水平。\n自信是成功的第一要诀，有志于成才、成功的人请培养你的自信\ncase 3\r#\r\r收集信息，主动发言松浦弥太郎认为在有机会发言的场合不发言，会给别人留下负面影响。\n不发言就不容易被别人了解，也不容易被别人想起，也就容易错过很多机会。\n越不发言，就越不敢发言，时间久了，自信也会越来越低。\n不管在哪，都要主动发言，养成主动和人说话的习惯，越主动和人说话，信心就越强。\n为了有话可聊，可以收集一些可以闲聊的段子，或者可以表演的东西，一首歌，一个有趣的故事或者魔术等等，能让你在任何场合、别人提出任何要求都能应付自如。\n这样自己也更有底气。\ncase 4\r#\r\r1.建立牢靠的知识基础自信心是从各个方面体现的，良好的自信心可以提高在各个方面的能力，让你可以更加顺利的完成任务。 成功的人大多都是充满自信的。他们自信的来源不一定是成功带来的优越感，而是自己本身对自己知识的储备量有信心，多读书可以开阔眼界，提升自己的精神境界。 丰富自己的知识积累，提升解决问题的能力，是塑造自信的一个基础策略。\n2.完成每天给自己设定的小目标自信心来源的是不断去超越自己，在不断的超越过程中，内心体验一种满足感和优越感。 行为上的成就能够让人们体验到积极的情绪，因此可以每天去完成给自己设定的小目标，每天不断的去超越自己，树立自信心。\n3.盘点个人的优势和成就成就可以是任何你作为主要角色参与完成的重要事件。在列优势清单的时候，不要太谦虚。 成就和优势清单，会帮助你增加自我欣赏。4.敢于挑战自己，敢于表现自己当你对世界说不怕的时候世界也会给你让步。 一个无所畏惧的人总是值得信任的，一个自信满满的人总是会创造奇迹。\n5.鼓励和赞美自己每个人都喜欢听赞美的话语，从心理学家班杜拉的自我效能的观点来看，言语上的鼓励和赞美能够增加自我效能感，也就是增加对自己的自信心。 他人的赞美不一定总是会遇到，但是自己每天可以鼓励自己和赞美自己，要想他人欣赏你，首先你自己要学会欣赏自己。\n6.克服害羞，正视他人自卑的人常常喜欢躲在人群中，躲在角落里，害羞心理影响了基本的社会交往，而想要克服自卑获得自信，就要克服自己内心的懦弱和恐惧。 首先在与人交往时正视他人，与他人能够有眼神的交流，不要闪躲，其次锻炼自己在公众场合说话的能力，练就强大的内心。\n7.使用积极的自我暗示积极自我暗示，就是对自己说一些关于自己的积极的事情。 当自己感到紧张或者自卑的时候，在心里暗示自己“我可以的”。 回想一些自己成功克服困难的时刻，在心里告诉自己“这么难的事，我不也做到了吗，没什么好怕的”，然后，抬头挺胸，勇往直前。\n8.从挫折和窘境中恢复过来克服一些困境，不但可以建立自信，还能让人得到长时间的良好生存状态。 有研究表明，经历过一些不利事件的人，他们的心理健康和幸福水平要高于没有经历不幸的人。所以当遇到挫折和困境时，请相信自己可以战胜眼前的困难，因为克服困难后，你会变得更强大\ncase 5\r#\r\r1、做事前，告诉自己，这件事肯定没问题，老子天下第一。“假装自信”太简单了，时间长了，装久了，就成真的了。\n2、关我P事。别人多看你一眼，你就觉得自己说错话了； 别人开个玩笑，你就觉得话里有话。 揣摩别人的想法会引起连锁反应，一点点消磨自信心。 每当我们揣摩其他人对我们的看法时，我们可以想出100万个。但那些声音和你又有什么关系呢？他们的话是他们的观点，如果你过分在意，就变成了可以伤害你的武器。\n3、一个人不自信来自两方面：要么长得丑，要么一事无成，比这更扎心的是两者都有。 但是努力让自己拥有了一技之长，一定能让你脱胎换骨，人生开挂。 脱单了，不一定能脱贫，但你脱贫了，脱单是迟早的事，更何况自卑都不是个事儿。\n4、把万一改成就算。也许你会问： 万一我去和喜欢的人表白，对方拒绝了我怎么办？ 万一我面试被刷，没拿到offer怎么办？ 这些想法都会让你还没开始做，就先退缩了。 试着把万一改成就算，你看问题的角度会有很大的不同。就算我被喜欢的人拒绝了又怎样？不试试我怎么知道对方是不是也喜欢我。就算我面试被刷又怎样？吸取经验下一次就拿下offer！ 用「就算」来替代「万一」的时候，你会勇敢地踏出自己的舒适区，而只有踏出舒适区，你才能成长。\n5、如果你真的很生气，不妨写下来。 想象你要给一个自卑的人写一封信，告诉她怎么摆脱自卑？用什么方法可以让自己不自卑？最好能代入你的遭遇，然后告诉她，你是怎么克服的。 其实写的过程，就是你自我疗愈的开始，往往开始很难，但开始了就不难了。\n6、找个榜样。 想一个活得自信，自在洒脱的人，把ta当做榜样。遇到不自信、手足无措的情况，想想ta会怎么做？\n7、接受自己无法改变的缺陷。 人们总会为各种各样的事情而自卑。 有些方面无法改变，比如身高、骨相，对于这些无法改变的缺陷，就学着接受。毕竟不是每个人都完美的。你追的爱豆长得高，但皮肤没你好呀。\n8、解决不自信的最好方法就是成功一次，再成功一次，接着一直成功下去。当你把一件事情做成，再做成另一件，那么每一次好的反馈，都将是你告别不自信最有用的方式。\n9、拒绝那些让你不爽的人和事情。 如果你有朋友因为你的拒绝而和你翻脸，说明这个人从来就不是你真正的朋友，明知道会让你为难，却还来为难你，趁早离开越好。 多拒绝几次，你又不会损失什么，甚至还能把那些低质量的朋友筛出去，从而把时间和空间留给真正对你好的人。\n10、精进自己的专业。与其纠结内向、外向的性格，还不如努力提高自己的业务实力，拓宽自己在专业领域的知识面，掌握更高的技能水平，让自己成为业内高手或行家。 这样无论你时内向还是外向，都会有足够的底气去面对任何客户。\n11、别让不好意思害了你。 总觉得不好意思，那你不好意思的事情就跟你没有半毛钱关系。 你不好意思表白的人，会成为别人的新娘新郎。 你不好意思争取的机会，会成为别人的机会。 你越不好意思，总有人会好意思，如果你不想失去，那就别不好意思。\n12、赚钱才是治愈一切伤口最佳的方式。不管你认不认可，你手里的存款越多，你面对生活的底气就越足。 人没钱的时候不如鬼，想去的地方去不了，想买的东西买不起，但是当你有了一定存款时，想拒绝就拒绝，想买啥就买啥，想去哪就去哪。 如果还有人嘲讽你，你就跟他说:“您配吗，我需要你在这逼逼赖赖的”。\n当你没钱的时候，只能去路边摊找最便宜的盖饭，还不敢点套餐。 遇见喜欢的人，本能就会觉得自己没钱，配不上对方，怎么会自信呢？ 没有积蓄，做什么事情都会畏畏缩缩，不敢放手一搏。 挣钱和攒钱才是你底气的最大来源。全民超前消费的时代，真的危机来临，谁在裸泳，一目了然。\n13、开始说「不」。 不敢说不的人，内心都是戏精： 我拒绝了会不会有什么后果？ 别人一定会对我说三道四 说不别人会讨厌我吧？ 我可做不到！ 内心戏充足的同学，一定要对某些事说「不」，因为那些事会让你不堪重负，与自己的目标渐行渐远，一定要想清楚。\n14、多去见一些人、一些事。不一定要和别人深入交流，让自己多去看看就好。不自信的人，常常会因为害怕失去「仅有的」，而把自己放在很低的位置。爱情中，无底线付出；工作上，不敢拒绝同事的任何要求；家庭里，父母说的都是对的，他们永远不敢说一句不。牺牲自己，讨好对方，是他们避免失去的常用方式。但往往越是这样，对方就越是不重视，而他们也就越感受不到自己的重要性，越发自卑。想要突破这一心态，最关键的就是让你自己——拥有更多。走出房间，去周边逛逛，去医院福利院走走，去书店看看，去参加一些小活动，去创造更丰富的经历、更多的回忆、更广的阅历\u0026hellip;\n15、宁可自大，也不要自卑。一个自大的人，可以得到本不该属于他的机会，而一个自卑的人，会失去本该属于他的机会。 别太在意别人的怎么看你，每个人都在埋头赶路，你怎么样，其实在别人眼里并不重要。\n变得自信，并不代表就成了刻薄自私的人，它给了我们更多选择，让我们可以在对别人好的基础上，听从自己的意志，也只有这样，才能收获真正地理解和尊重。\ncase 6\r#\r\r“不是我不行，而是我暂时没有找到适合我发挥的环境”。这种想法会有助于提高我们的自信。\n因为人和人的天赋，才能，兴趣点是不一样的，彼之所长，很可能是己之所短。 那么，如果人处在一直无法发挥出自己能力的环境中，反复受到打压，很可能就会觉得自己干啥都不行，进而对生活丧失希望，自暴自弃。 所以这个时候，不妨干一些其他的事情，可以是你感兴趣的事情，干着干着，你会像孩子一样去重新探索这个世界，看到不一样的东西， 看到你是可以做成一些事情的，看到你也是可以有成就的！那么就要把外界纳入到你自己的体系里来，不要跟着外界的节奏走， 按自己的旋律来，如果发生了一些冲突，就想办法解决，但尽量不要随便妥协，而是开动脑筋想各种方法。 这样的经历多了，其实你也会发现自己真正擅长做的事情，从而扬长避短，越来越阳光自信，同时也能做出实际的东西。 一开始的时候，机械也不是啥都能干，但工匠们还是反复尝试，寻找机械的应用场合，了解实际需求，最终让机械在欧洲顺利发展起来了。\ncase 7\r#\r\r自信是一个人做事情能不能取得成功的关键，因为是否自信决定着你是否敢去做某些事。 如果没有这份自信，你就不会开始去做；而如果不动手去做，就什么也不会发生。 只有开始才有机会。今天看了刘润一个回答如何变得自信。 刘润把自信成为死而复生者的文身，自信不是盲目自大或乐观，而是做一些自己觉得不可能完成的事，还把他完成了。 通过这样一次次不断的训练出来的。简而言之，自信的提升来源于成功经验的积累。 那如何去积累呢，这里就要利用自我暗示，比较被大家推崇的《小狗钱钱》中小狗钱钱给吉亚的方法：成功日记。 成功日记非常简单，只需要两步 1.最好每天记录 2.至少写五项成果刚写时候可能会有些吃力，可能搜肠刮肚也想不出来几项，当你在犹豫这种应该不应该算的时候，那就写上。 当你积累了非常多的成功经验后，对自己的自信也会越来越足。当我们心生怯意时，打开我们的成功日记，就会充满力量。现在开始，记录成功日记吧！\ncase 8\r#\r\r1、无条件相信自己，你自己都不相信你自己，谁还会相信你？\n2、多读书，多学习，广泛涉猎，海量阅读，保持持续性学习能力，当你懂的东西非常多的时候，你的自信心自然会非常强。\n3、多跟比你差的人比较，在比你差的人身上找到自信。（虽然有点像在骗自己）\n4、用你成功的案例证明自己，寻找到自信。\n5、多提升自己的实力，多提升自己的能力，当你非常有实力的时候，当你非常有能力的时候，你的自信心自然会非常强。\n6、多去做好一些事情，当你能做好一些事情的时候，你就会慢慢地增强你的自信心。\n7、寻找自己的优点，优势，长处，给予自己自信。\ncase 8\r#\r\r“成功的公式就是思索让你高兴的想法，做出让你高兴的事，采取让你高兴的行动。”——摘自《生命的重建》作者露易丝.海作者的原生家庭并不美好，但是她通过改变自己的观念和想法，找到了平和的心态。在她得知自己得了癌症后，她并没有就此被打败丧失信心。她找到了营养师和心理咨询师，从生活习惯上和心态上让自己的身心康复。原生家庭不好要怎样避免让自己成为自己不喜欢的样子。首先，我们不要让自己变成受害者，怨天尤人。每天给自己心理暗示，让自己更爱自己，让自己的内心更加强大。找到让你受伤的人或事，直面问题。然后，尽量扭转局面，如果无法改变，那就选择漠视。先强大了内心，我们就会更加自信。\ncase 9\r#\r\r一、调整自我认识自卑的人总是错误的认识自己，或者总是以他人的眼光评价来认为自己就是这个样子的，在别人过低的评价下，对自己没有了信心。鉴于这种情况，自己要不断的暗示自己，不要太在乎他人的评价，要对自己有一个全面的合理的认知，接受自身的不足，并努力改正。\n二、积极弥补不足自卑的人有时候确实是因为某一个方面比不上别人而产生自卑感，只不过他们比较的方式以及处理这些劣势的方式不对。自卑的人应该通过认识到自身的劣势和缺点、短处，把这种差距感转化为激励自己奋发向上的动力，并且认真分析自己落后的原因，对症下药，不断的追赶自己的目标，而不是自暴自弃。\n三、参与社会交往自卑的人大多比较孤僻、内向，这是因为他们不敢面对人群，怕出丑、怕自己比不上别人，但是不与人交流会使他们的心理活动变得片面和极端，进而加重他们的自卑感。所以，自卑的人不应该把自己封闭起来，反而应该走出自己的小圈子，广泛交友，释放压力、了解别人的生活，慢慢的让自己变得开朗。\n四、改变自身形象自卑的人想提高自己的信心，就要从言谈举止上都加以改变。改变以前说话声音小，不敢说话，走路低头的习惯，让自己穿的时尚一点，多练习说话，大声说话，抬起头来走路。\n五、坦然面对失败自卑的人对自己的评价过低，因而特别害怕失败，面对失败的时候会把失败带来的消极影响无限放大，导致自己遭受失败后意志消沉，并且加重自己的自卑感。所以，在面对失败的时候要客观的分析自己的处境以及主客观条件，而不是一味的把失败归结于自身原因，有些时候客观原因导致的失败是谁也无法阻止的。\n六、和朋友相互鼓励物以类聚，人以群分，和自己关系好的人，一起相互鼓励，一起进步，自卑心理也能得到很大的缓解。每个人都会有自己的圈子，在圈子里总会有几个关系要好的人，大家可以做一个约定互相鼓励、帮助对方，这样能够大大改善你的自卑心态，让你变成一个态度坚定，性格要强的自信之人。\n七、积极的心理暗示想要克服自卑心理，最好的方法就是给自己一个积极的心理暗示，平时一定要不断的提醒自己，我能行，我可以的，让自己有一个好的心态。做任何事情，都要实实在在的付出，认认真真的完成，争取让每件事都能获得良好的结果，这种心态会帮你击败“自卑”，重构自信。\n八、用长处比短处自卑的人总是不会比较，总是和比自己优秀的人比较，或者拿自己的短处和别人的长处比较，这会让你更感觉自卑。想提高自信，就要学会拿自己的长处和别人的短处比较，学会自我安慰，这样就会逐渐消除自卑心理了。\ncase 10\r#\r\r1、培养耐心，自信确实需要培养，所谓的培养，即是说并非朝夕可达。\n2、习得并精通一种技能，具备学习能力的人通常都很自信，反过来也一样，真正自信的人通常是因为相信自己的学习能力。\n3、有意识地选择与那些性格开朗、乐观、热情、善良、尊重和关心别人的人进行交往，正确自我评价。\n4、相信积累的力量，通过学习培养耐心，运用耐心去等待长期积累之后可以获得的难以想象的好处与力量。\ncase 11\r#\r\r增强自信的第一个方法：关注自己的优点。在纸上列下十个优点，不论是哪方面（细心、眼睛好看等等，多多益善），在从事各种活动时，想想这些优点，并告诉自己有什么优点。这样有助你提升从事这些活动的自信，这叫做“自信的蔓延效应”。这一效应对提升自信效果很好。\n增强自信的第二个方法：与自信的人多接触。“近朱者赤，近墨者黑”这一点对增强自信同样有效。\n增强自信的第三个方法：自我心理暗示，不断对自己进行正面心理强化，避免对自己进行负面强化。一旦自己有所进步（不论多小）就对自己说：“我能行！”、“我很棒！”、“我能做得更好！”等等，这将不断提升自己的信心。\n增强自信的第四个方法：树立自信的外部形象。首先，保持整洁、得体的仪表，有利于增强一个人的自信；其次，举止自信，如行路目视前方等，刚开始可能不习惯，但过一段时间后就会有发自内心的自信；另外，注意锻炼、保持健美的体形对增强自信也很有帮助。增强自信的第五个方法：.不可谦虚过度。谦虚是必要的，但不可过度，过分贬低自己对自信心的培养是极为不利的。\n增强自信的第六个方法：学会微笑。微笑会增加幸福感，进而增强自信。\n增强自信的第七个方法：扬长避短。在学习、生活、工作中，抓住机会展现自己的优势、特长，同时注意弥补自己的不足，不断进步，肯定能增强自信。\n增强自信的第八个方法：肯定自己的能力。每天找出3件自己做成功的事。不要把“成功”看成登上月球那么大的事，成功可以是顺利跟医生约了治疗时间，上班交通一路畅顺，处理的 文件档案没出一次错等等，日常生活工作都可以有“成功”与“挫折”之分，一日至少顺利地做了3件事，又怎能说“一事无成”、“一无是处”呢？知道能把事情 做好，等于对自己的能力的肯定，你可振作精神。\n增强自信的第九个方法：做好充分准备。从事某项活动前如果能做好充分准备，那么，在从事这项活动时，必然较为自信，而且这利于顺利完成活动并增强整体自信心。\n增强自信的第十个方法：给自己定恰当的目标，并且在目标达成后，定更高的目标。目标不能太高，否则不易达到，如果达不到，对自信心会有所破坏。\ncase 12\r#\r\r从外观上进行改变服装是女性武装自己外观的的强大武器，它可以瞬间让人看起来很有吸引力，当参加一些重要会议时，应该穿得漂亮点。\n多和他人眼神交流平时不要总是低头，不仅会让你觉得自己不自信，甚至觉得自己很虚弱，勇敢地看着对方的眼睛是尊重和自信的表现。\n敢于尝试新事物尝试一些新事物和新的体验，独自去一个陌生的地方吃饭，在不熟悉的地方学习一些课程，在新的竞争中测试自己的能力，不断发现如何依靠自己的好方法。\n试图做一些决定无论是工作、还是约会男朋友，都要主动做那个表达想法的人，比如如何做好工作可以快速而好，今天去看电影或吃什么，不要总说随意、什么都好。\n坚持自己的信念当提出一些新的挑战时，要坚持下去，信心不是别人可以给的东西。 真正的自信源于一种坚定的信念，即无论结果如何，都以自己的行动以实施计划。 第六、勇敢提出一些自己的看法在工作上、一些研讨会中、或是俱乐部活动等，在一些集体参与的活动中，可以勇敢提出一些自己的看法，不要担心会说错话，年轻就是资本，因为年轻，领导会明白、会引导，而领导者只有在看到你的进步时才会看到惊喜。\n第七、多丰富自己的知识量在空闲时间里，很多女孩会选择看电视剧、看电影、或K歌来打发时间，过多的娱乐会让人懒惰，而且会习惯享受并忽略自己的生活理想、职业目标。所以，空闲时，可以多看一些书籍，可以从书本中积累更多的知识，知识就是个人能力和自信的体现。\ncase 13\r#\r\r自信就是这样来！\n你可不完美，但一定要有自信！\n1.相信自己，肯定自己这点很重要，如果你做什么事情，第一反应就是我不行、我不会。\n当好运偶然来临时，也只会因为你没信心、没准备，好运和你擦肩而过，也因你连自己都不相信！当然这里并不是要贬低你，让你继续沉沦下去。\n想要让别人相信你，信任你，首先就是你一定得相信自己。\n不要觉得自己不行，这害怕，那担忧的，就像没有人一生下来就会走路，都是在后天跌跌撞撞中慢慢学会的。 每个人生下来有着同一个起点，从走路、说话，慢慢走向社会，既然如此何必给自己内心添堵，给自己的人设设限呢？\n2.把事情想的简单点不要在事情还没发生或者还不确定的情况下，就开始脑补很多未知的事情，这是一种内耗，对自己一点好处也没有。未来本身就充满了无尽的未知，我能做到的就是 面对问题 、解决问题 。\n3.多做自己擅长的事产生自卑的原因有很多，普遍是因为觉得自己哪哪都不如别人，原生家庭等原因。 如果你不想让自己一直退缩下去，那就多做自己擅长能够让你开心的事，来获得他人赞赏的目光，从而获得更多的自我认知来提高你的自信心\n4.注意自己的精神状态通过一个细微的表情，语气。随时都可以向外界传递你的状态。如果你表现的总是给人一种萎靡不振的样子，别人就会莫名的想要远离你，自然也很难相信你。\n不信你可以观察下，那些脸上总是洋溢着笑容，表现的自信从容的人。其实好的相处是互相传递的，宝贝们！5.学会和自己和解世界那么大，每个人都有自己的长处和不足。\n唯有正确的认识自己，接纳自己的不足，发挥自己的优势，你就是最棒的那个仔。\n"}),a.add({id:10,href:'/life/docs/http/teywty5qnc/',title:"跨域问题",section:"http知识 ",content:"跨域\r#\r\r介绍\r#\r\r 跨域，指的是从一个域名去请求另外一个域名的资源，即跨域名请求。跨域时，浏览器不能执行其他域名网站的脚本，这是由浏览器的同源策略造成的，是浏览器施加的安全限制， 跨域限制访问，其实是浏览器的限制。\n  同源策略是浏览器最核心也最基本的安全功能，不同源的客户端脚本在没有明确授权的情况下，不能读写对方资源 ，这是一个用于隔离潜在恶意文件的重要安全机制。所以跨域问题只在浏览器中出现，如果客户端是APP的话，那跨域问题就不存在了。 PS：IE端口除外，IE对同源策略的定义有略微的不同，具体可以查看文末给出的同源策略的链接。\n 为什么会跨域\r#\r\r说到跨域不得不谈的就是浏览器的同源策略，跨域也是因为浏览器这个机制引起的，这个机制的存在还是在于安全\n1.什么是源\r#\r\r Web内容的源由用于访问它的URL 的方案(协议)，主机(域名)和端口定义。只有当方案，主机和端口都匹配时，两个对象具有相同的起源。\n  所谓同源是指：域名，协议，端口相同，即两个资源具有相同的源。 只要三者之间有一个不同，就是跨域（跨源） 同源不同源一句话就可以判断：就是url中 scheme host port 都相同即为同源。 下面认识下url 结构中的这三个部分  2. URL结构\r#\r\r URL 代表着是统一资源定位符（Uniform Resource Locator）。URL 无非就是一个给定的独特资源在 Web 上的地址。\n   URL有如下结构组成：\n  Schme 或者 Protocol\n   Domain Name 也叫做host域名   port 端口号   Parameters参数   Anchor 锚点，一般用于定位位置  3. 同源不同源举例\r#\r\r举一下同源不同源的例子，便于理解\n 同源例子     例子 原因     http://example.com/app1/index.html \u0026lt;==\u0026gt; http://example.com/app2/index.html 相同的 scheme http 和host   http://Example.com:80 \u0026lt;==\u0026gt; http://example.com http 默认80端口所以同源     不同源例子     例子 原因     http://example.com/app1 \u0026lt;==\u0026gt; https://example.com/app2 不同的协议   http://example.com \u0026lt;==\u0026gt; http://myapp.example.com 不同的host   http://example.com \u0026lt;==\u0026gt; http://example.com:8080 不同的端口    4. 浏览器为什么需要同源策略\r#\r\r同源策略是一个重要的安全策略，它用于限制一个origin的文档或者它加载的脚本如何能与另一个源的资源进行交互。它能帮助阻隔恶意文档，减少可能被攻击的媒介。\n5. 常规前端请求跨域\r#\r\r在没有前后端分离的时候，跨域问题往往是很少的。因为前后端都部署到一起。现在前后端分离不管vue /react 面临跨域请求的问题。\n下面是引用官网描述的一张图来解释跨域：\n跨源域资源共享（CORS）机制允许 Web 应用服务器进行跨源访问控制，从而使跨源数据传输得以安全进行。现代浏览器支持在 API 容器中（例如 XMLHttpRequest 或 Fetch）使用 CORS，以降低跨源 HTTP 请求所带来的风险\n二、前端解决方案\r#\r\r jsonp   JSONP的原理非常简单，就是HTML标签中，很多带src属性的标签都可以跨域请求内容，比如我们熟悉的img图片标签。同理，script标签也可以，可以利用script标签来执行跨域的javascript代码。通过这些代码，我们就能实现前端跨域请求数据。\n  jsonp 可以在前端解决跨域问题，但是只是针对于get请求。实现方式可以引用一些npm 第三方库实现，jquery 也是带的。\n  可以在npm 搜下jsonp 库实现，非常简单。\n jsonp原理\r#\r\r 我个人理解jsonp实际上是钻了空子然后利用这个空子来间接的实现了 get方式的跨域请求逻辑 以载入脚本方式去请求数据然后把脚本响应的数据包在回调脚本函数的参数里面 回调函数一执行就拿到了数据\n jsonp原理参考\n  首先我们需要明白，在页面上直接发起一个跨域的ajax请求是不可以的，但是，在页面上引入不同域上的js脚本却是可以的，就像你可以在自己的页面上使用标签来随意显示某个域上的图片一样\n  比如我在8080端口的页面上请求一个9090端口的图片：可以看到直接通过src跨域请求是可以的\n  那么看下如何使用来完成一个跨域请求：\n当点击\u0026quot;跨域获取数据\u0026quot;的按钮时，添加一个标签，用于发起跨域请求；注意看请求地址后面带了一个callback=showData的参数；\n　showData即是回调函数名称，传到后台，用于包裹数据。数据返回到前端后，就是showData(result)的形式，因为是script脚本，所以自动调用showData函数，而result就是showData的参数。\n　至此，我们算是跨域把数据请求回来了，但是比较麻烦，需要自己写脚本发起请求，然后写个回调函数处理数据，不是很方便。\n页面\n\u0026lt;%@ page pageEncoding=\u0026#34;utf-8\u0026#34; contentType=\u0026#34;text/html;charset=UTF-8\u0026#34; language=\u0026#34;java\u0026#34; %\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;跨域测试\u0026lt;/title\u0026gt; \u0026lt;script src=\u0026#34;js/jquery-1.7.2.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; //回调函数  function showData (result) { var data = JSON.stringify(result); //json对象转成字符串  $(\u0026#34;#text\u0026#34;).val(data); } $(document).ready(function () { $(\u0026#34;#btn\u0026#34;).click(function () { //向头部输入一个脚本，该脚本发起一个跨域请求  $(\u0026#34;head\u0026#34;).append(\u0026#34;\u0026lt;script src=\u0026#39;http://localhost:9090/student?callback=showData\u0026#39;\u0026gt;\u0026lt;\\/script\u0026gt;\u0026#34;); }); }); \u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;input id=\u0026#34;btn\u0026#34; type=\u0026#34;button\u0026#34; value=\u0026#34;跨域获取数据\u0026#34; /\u0026gt; \u0026lt;textarea id=\u0026#34;text\u0026#34; style=\u0026#34;width: 400px; height: 100px;\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 服务端\nprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { response.setCharacterEncoding(\u0026#34;UTF-8\u0026#34;); response.setContentType(\u0026#34;text/html;charset=UTF-8\u0026#34;); //数据  List\u0026lt;Student\u0026gt; studentList = getStudentList(); JSONArray jsonArray = JSONArray.fromObject(studentList); String result = jsonArray.toString(); //前端传过来的回调函数名称  String callback = request.getParameter(\u0026#34;callback\u0026#34;); //用回调函数名称包裹返回数据，这样，返回数据就作为回调函数的参数传回去了  result = callback + \u0026#34;(\u0026#34; + result + \u0026#34;)\u0026#34;; response.getWriter().write(result); } 结果\n再来看jquery的jsonp方式跨域请求： 服务端代码不变，js代码如下：最简单的方式，只需配置一个dataType:\u0026lsquo;jsonp\u0026rsquo;，就可以发起一个跨域请求。jsonp指定服务器返回的数据类型为jsonp格式，可以看发起的请求路径，自动带了一个callback=xxx，xxx是jquery随机生成的一个回调函数名称。\n这里的success就跟上面的showData一样，如果有success函数则默认success()作为回调函数。 说白了 jquery只不过也是按照那个空子然后做了中间处理\n\u0026lt;%@ page pageEncoding=\u0026#34;utf-8\u0026#34; contentType=\u0026#34;text/html;charset=UTF-8\u0026#34; language=\u0026#34;java\u0026#34; %\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;跨域测试\u0026lt;/title\u0026gt; \u0026lt;script src=\u0026#34;js/jquery-1.7.2.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; $(document).ready(function () { $(\u0026#34;#btn\u0026#34;).click(function () { $.ajax({ url: \u0026#34;http://localhost:9090/student\u0026#34;, type: \u0026#34;GET\u0026#34;, dataType: \u0026#34;jsonp\u0026#34;, //指定服务器返回的数据类型  success: function (data) { var result = JSON.stringify(data); //json对象转成字符串  $(\u0026#34;#text\u0026#34;).val(result); } }); }); }); \u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;input id=\u0026#34;btn\u0026#34; type=\u0026#34;button\u0026#34; value=\u0026#34;跨域获取数据\u0026#34; /\u0026gt; \u0026lt;textarea id=\u0026#34;text\u0026#34; style=\u0026#34;width: 400px; height: 100px;\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 结果\n代理方式\r#\r\r代理原理\r#\r\r 代理服务器是介于前端和后端之间的中间服务层，前端向代理服务器发送请求时，代理服务器是允许跨域请求的，而代理服务器在收到前端的ajax请求时，会通过changeOrigin的方式，将前端请求的接口，转发给target所指向的目标服务器，从而以相同的域向目标服务器发送请求，由于代理服务器和目标服务器之间的域是相同的，因此不会出现跨域问题，从而代理服务器会收到目标服务器的响应，再将响应转发给前端即可\n 平常我们经常遇到的跨域问题就是，不同域名下的跨域。 那么问题来了，是怎么判断你与服务器不在一个域名下呢？\n通过chrome，我们发现原来我们的地址跟数据来源都是浏览器告诉我们的，然后它会判断是否同源，同源就正常访问。那么我们想解决问题就要从此处入手 代理解决跨域原理 通过一些方法设置代理，在请求发送(接收)之前加入中间层，\n将不同的域名转换成相同的\n就解决了跨域的问题\n客户端发送请求时\n不直接到服务器\n而是先到代理的中间层\n在这里将localhost：8088的这个域名装换为192.168.0.67:8061，\n再将请求发送到服务器\n这样在服务器端收到的请求就是使用的192.168.0.67:8061域名\n同理，当服务器返回数据的时候，也是先到代理的中间层\n将192.168.0.67:8061转换成localhos：8088；\n这样在客户端也是在相同域名下访问的了\n代理配置\r#\r\r如:webpack-dev-server 配置代理 (假如前端构建工具压根不是webpack你别傻乎乎的用这个来配置比如新一代的vite) 前端无论是vue项目还是react 项目大多数都会以webpack-dev-server 来运行，webpack-dev-server 可以设置代理，前端可以在开发环境设置代理解决跨域问题。\nproxy: { \u0026#39;/api\u0026#39;: { target: \u0026#39;http://localhost:3000\u0026#39;, pathRewrite: { \u0026#39;^/api\u0026#39;: \u0026#39;\u0026#39; }, changeOrigin: true, }, } vue-cli、create-react-app、umi 等脚手架找到webpack devserver配置位置配上即可\n注意： 只限在开发环境，生产环境需要web 服务器同样原理代即可。 生产环境一般可以用nginx 大概是 前端请求 -\u0026gt; nginx这 nginx -\u0026gt; 具体的后端服务器 毕竟nginx可以做防盗链,负载均衡等 这些嘛\ndocument.domain 方式\r#\r\r 由于JavaScript同源策略的限制，脚本只能读取和所属文档来源相同的窗口和文档的属性。\n  对于已经有成熟产品体系的公司来说，不同的页面可能放在不同的服务器上，这些服务器域名不同，但是拥有相同的上级域名，比如id.qq.com、www.qq.com、user.qzone.qq.com，它们都有公共的上级域名qq.com。这些服务器上的页面之间的跨域访问可以通过document.domain来进行。\n  默认情况下，document.domain存放的是载入文档的服务器的主机名，可以手动设置这个属性，不过是有限制的，只能设置成当前域名或者上级的域名，并且必须要包含一个.号，也就是说不能直接设置成顶级域名。例如：id.qq.com，可以设置成qq.com，但是不能设置成com\n  访问同源页面例子  打开https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cookie ，在f12控制台里window.open页面：https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers，访问返回的window对象的document属性，发现能够访问成功\n  具体设置例子\n  www.a.com上的a.html 具有相同上级域名\n  document.domain = \u0026#39;a.com\u0026#39;; var ifr = document.createElement(\u0026#39;iframe\u0026#39;); ifr.src = \u0026#39;http://script.a.com/b.html\u0026#39;; ifr.style.display = \u0026#39;none\u0026#39;; document.body.appendChild(ifr); ifr.onload = function(){ var doc = ifr.contentDocument || ifr.contentWindow.document; // 在这里操纵b.html  alert(doc.getElementsByTagName(\u0026#34;h1\u0026#34;)[0].childNodes[0].nodeValue); };  script.a.com上的b.html 具有相同上级域名  document.domain = \u0026#39;a.com\u0026#39;; 三、服务端解决方案\r#\r\r 后端框架也很多，实现原理差不多，都是修改下相应http头。以常用的Java SpringCloud springMvc 和nodejs koa 框架为例。\n Http 协议CORS头\n跨域其实也是http层面上可以解决的问题，后端解决也是比较简单的，也是项目常见的解决手法\nCORS （Cross-Origin Resource Sharing，跨域资源共享）是一个系统，它由一系列传输的HTTP头组成，这些HTTP头决定浏览器是否阻止前端 JavaScript 代码获取跨域请求的响应。\n同源安全策略 默认阻止“跨域”获取资源。但是 CORS 给了web服务器这样的权限，即服务器可以选择，允许跨域请求访问到它们的资源。\n   代码字段 描述     Access-Control-Allow-Origin 指示请求的资源能共享给哪些域   Access-Control-Allow-Credentials 指示当请求的凭证标记为 true 时，是否响应该请求   Access-Control-Allow-Headers 用在对预请求的响应中，指示实际的请求中可以使用哪些 HTTP 头   Access-Control-Allow-Methods 指定对预请求的响应中，哪些 HTTP 方法允许访问请求的资源   Access-Control-Expose-Headers 指示哪些 HTTP 头的名称能在响应中列出   Access-Control-Max-Age 指示预请求的结果能被缓存多久   Access-Control-Request-Headers 用于发起一个预请求，告知服务器正式请求会使用那些 HTTP 头   Access-Control-Request-Method 用于发起一个预请求，告知服务器正式请求会使用哪一种 HTTP 请求方法   Origin 指示获取资源的请求是从什么域发起的     SpringCloud设置跨域 在跨域过滤器里配置一下跨域头部，* 是通配符即允许所有  @Configuration public class GatewayCorsConfiguation { @Bean public CorsFilter corsFilter(){ // 初始化cors配置对象  CorsConfiguration configuration = new CorsConfiguration(); configuration.setAllowCredentials(true); // 允许使用cookie，但是使用cookie是addAllowedOrigin必须是具体的地址，不能是* // configuration.addAllowedOrigin(\u0026#34;*\u0026#34;);  configuration.addAllowedOrigin(\u0026#34;http://manage.leyou.com\u0026#34;); configuration.addAllowedMethod(\u0026#34;*\u0026#34;); //允许的请求方式,get,put,post,delete  configuration.addAllowedHeader(\u0026#34;*\u0026#34;);//允许的头信息  //初始化cors的源对象配置  UrlBasedCorsConfigurationSource corsConfigurationSource = new UrlBasedCorsConfigurationSource(); corsConfigurationSource.registerCorsConfiguration(\u0026#34;/**\u0026#34;,configuration); //3.返回新的CorsFilter.  return new CorsFilter(corsConfigurationSource); } }  Koa设置跨域  koa 是插件机制，设置更简单，使用跨域插件即可\nimport cors from \u0026#34;koa2-cors\u0026#34;; app.use(cors());  springmvc  import lombok.extern.log4j.Log4j; import org.springframework.web.bind.annotation.*; @RestController @RequestMapping(\u0026#34;/app.test\u0026#34;) @Log4j public class TestController { @CrossOrigin(origins = \u0026#34;*\u0026#34;) @PostMapping(value = \u0026#34;/test\u0026#34;, name = \u0026#34;test\u0026#34;) @CheckRequestSign public HttpResult test(@RequestBody TestParam testParam){ try { return HttpResult.newCorrectResult(testParam); } catch (Exception ex) { log.error(\u0026#34;异常\u0026#34;, ex); return HttpResult.newErrorResult(ex); } } } 四、运维解决方案\r#\r\r 还是利用代理方式解决,代理方式可选的方案非常之多\n   选择nginx\n  我理解的步骤\n  前端和运维商量好协议路径代理规则，比如/api 代表域名\n  前端配置webpack -dev -server 代理 到nginx层\n  利用ngnix 配置相同转发代理到真正的服务器\n  这里的webpack 服务器那似乎可以直接到真正的服务器 但是大多数都不是那么做的 我理解的是首先如果前端直接到后端服务器 那么后端必须要做负载均衡 防盗链等等 还不如前端直接到nginx层(这里的nginx层可能是集群或者单机假如是集群)去nginx可以做负载均衡等\n ngnix 配置代理解决跨域配置  ... location /api { proxy_pass https://b.test.com; # 设置代理服务器的协议和地址 } ... CORS参考 Origin参考 CORS参考\n"}),a.add({id:11,href:'/life/docs/javadir/thread/tool/thread_local/',title:"ThreadLocal",section:"并发工具 ",content:"一:介绍\r#\r\r ThreadLocal直译为线程局部变量，或许将它命名为ThreadLocalVariable更为合适。其主要作用就是实现线程本地存储功能，通过线程本地资源隔离，解决多线程并发场景下线程安全问题\n  类ThreadLocal 主要解决的就是每个线程绑定自己的值,可以将ThreadLocal类比喻成全局存放数据的盒子,盒子中可以存放每个线程 的私有数据\n 二:用法举例\r#\r\rpublic class ToolsThreadLocal { public static ThreadLocal t1 = new ThreadLocal(); } public class ThreadLocalA extends Thread { @Override public void run() { for (int i = 0; i \u0026lt; 50; i++) { ToolsThreadLocal.t1.set(\u0026#34;thread a \u0026#34;+i); System.out.println(ToolsThreadLocal.t1.get()); } } } public class ThreadLocalB extends Thread { @Override public void run() { for (int i = 0; i \u0026lt; 50; i++) { ToolsThreadLocal.t1.set(\u0026#34;thread b \u0026#34;+i); System.out.println(ToolsThreadLocal.t1.get()); } } } public class ThreadLocalRun { public static void main(String[] args) { ThreadLocalA threadLocalA = new ThreadLocalA(); threadLocalA.start(); ThreadLocalB threadLocalB = new ThreadLocalB(); threadLocalB.start(); for (int i = 0; i \u0026lt; 50; i++) { ToolsThreadLocal.t1.set(\u0026#34;thread main \u0026#34;+i); System.out.println(ToolsThreadLocal.t1.get()); } } } 三:应用场景\r#\r\r 针对ThreadLocal而言，由于其适合隔离、线程本地存储等特性，因此天然的适合一些Web应用场景，比如下面所列举的例子：\n  代替参数显式传递(很少使用) 存储全局用户登录信息 存储数据库连接，以及Session等信息 Spring事务处理方案  四:api\r#\r\r get  public T get() { // 获取当前操作线程  Thread t = Thread.currentThread(); // 调用getMap方法，返回当前线程的实例变量threadLocals值  ThreadLocalMap map = getMap(t); // 如果返回map不为空，返回map中所存储的以当前ThreadLocal对象为key的值  if (map != null) { ThreadLocalMap.Entry e = map.getEntry(this); if (e != null) { @SuppressWarnings(\u0026#34;unchecked\u0026#34;) T result = (T)e.value; return result; } } // 如果map为空进行map值的初始化  return setInitialValue(); } ThreadLocalMap getMap(Thread t) { // 返回传入线程(当前线程)中成员变量的threadLocals值  return t.threadLocals; } private T setInitialValue() { // 调用initialValue()方法设置初始值，默认不设置任何值，可以在创建ThreadLocal  // 对象时被重写进行初始化，只会进行一次初始化。  T value = initialValue(); Thread t = Thread.currentThread(); ThreadLocalMap map = getMap(t); if (map != null) map.set(this, value); else createMap(t, value); return value; } void createMap(Thread t, T firstValue) { // 初始化当前线程对象实例变量threadLocals的值，Map所对应的key为当前ThreadLocal对象  t.threadLocals = new ThreadLocalMap(this, firstValue); }  set  public void set(T value) { // 获取当前线程对象  Thread t = Thread.currentThread(); // 调用getMap方法，传入当前对象的值，获取当前线程的实例变量threadLocals值  ThreadLocalMap map = getMap(t); if (map != null) map.set(this, value); else // 如果map为空，创建ThreadLocalMap  createMap(t, value); } "}),a.add({id:12,href:'/life/docs/%E8%84%9A%E6%9C%AC/javascript/es6/',title:"ECMAScript 6",section:"javascript ",content:" ECMAScript 6.0（以下简称 ES6）是 JavaScript 语言的下一代标准，已经在2015年6月正式发布了。它的目标，是使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言。  Module 的语法\r#\r\r概述\r#\r\r历史上，JavaScript 一直没有模块（module）体系，无法将一个大程序拆分成互相依赖的小文件，再用简单的方法拼装起来。其他语言都有这项功能，比如 Ruby 的require、Python 的import，甚至就连 CSS 都有@import，但是 JavaScript 任何这方面的支持都没有，这对开发大型的、复杂的项目形成了巨大障碍。\n在 ES6 之前，社区制定了一些模块加载方案，最主要的有 CommonJS 和 AMD 两种。前者用于服务器，后者用于浏览器。ES6 在语言标准的层面上，实现了模块功能，而且实现得相当简单，完全可以取代 CommonJS 和 AMD 规范，成为浏览器和服务器通用的模块解决方案。\nES6 模块的设计思想，是尽量的静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量。CommonJS 和 AMD 模块，都只能在运行时确定这些东西。比如，CommonJS 模块就是对象，输入时必须查找对象属性。\n// CommonJS模块\rlet { stat, exists, readFile } = require('fs');\r// 等同于\rlet _fs = require('fs');\rlet stat = _fs.stat;\rlet exists = _fs.exists;\rlet readfile = _fs.readfile;\r上面代码的实质是整体加载fs模块（即加载fs的所有方法），生成一个对象（_fs），然后再从这个对象上面读取3个方法。这种加载称为“运行时加载”，因为只有运行时才能得到这个对象，导致完全没办法在编译时做“静态优化”。\nES6 模块不是对象，而是通过export命令显式指定输出的代码，再通过import命令输入。\n// ES6模块\rimport { stat, exists, readFile } from 'fs';\r 严格模式  ES6 的模块自动采用严格模式，不管你有没有在模块头部加上\u0026quot;use strict\u0026quot;;。\n export 命令  模块功能主要由两个命令构成：export和import。export命令用于规定模块的对外接口，import命令用于输入其他模块提供的功能。\n一个模块就是一个独立的文件。该文件内部的所有变量，外部无法获取。如果你希望外部能够读取模块内部的某个变量，就必须使用export关键字输出该变量。下面是一个 JS 文件，里面使用export命令输出变量。\n// profile.js\rexport var firstName = 'Michael';\rexport var lastName = 'Jackson';\rexport var year = 1958;\r上面代码是profile.js文件，保存了用户信息。ES6 将其视为一个模块，里面用export命令对外部输出了三个变量。\nexport的写法，除了像上面这样，还有另外一种。\n/ profile.js\rvar firstName = 'Michael';\rvar lastName = 'Jackson';\rvar year = 1958;\rexport {firstName, lastName, year}; //优秀导出写法\r上面代码在export命令后面，使用大括号指定所要输出的一组变量。它与前一种写法（直接放置在var语句前）是等价的，但是应该优先考虑使用这种写法。因为这样就可以在脚本尾部，一眼看清楚输出了哪些变量。\nexport命令除了输出变量，还可以输出函数或类（class）。\nexport function multiply(x, y) {\rreturn x * y;\r};\r上面代码对外输出一个函数multiply。\n通常情况下，export输出的变量就是本来的名字，但是可以使用as关键字重命名。\nfunction v1() { ... }\rfunction v2() { ... }\rexport {\rv1 as streamV1,\rv2 as streamV2,\rv2 as streamLatestVersion\r};\r需要特别注意的是，export命令规定的是对外的接口，必须与模块内部的变量建立一一对应关系。\n// 报错\rexport 1;\r// 报错\rvar m = 1;\rexport m;\r上面两种写法都会报错，因为没有提供对外的接口。第一种写法直接输出1，第二种写法通过变量m，还是直接输出1。1只是一个值，不是接口。正确的写法是下面这样。\n// 写法一\rexport var m = 1;\r// 写法二\rvar m = 1;\rexport {m};\r// 写法三\rvar n = 1;\rexport {n as m};\r上面三种写法都是正确的，规定了对外的接口m。其他脚本可以通过这个接口，取到值1。它们的实质是，在接口名与模块内部变量之间，建立了一一对应的关系。\n同样的，function和class的输出，也必须遵守这样的写法。\n// 报错\rfunction f() {}\rexport f;\r// 正确\rexport function f() {};\r// 正确\rfunction f() {}\rexport {f};\r上面代码输出变量foo，值为bar，500毫秒之后变成baz。\n这一点与 CommonJS 规范完全不同。CommonJS 模块输出的是值的缓存，不存在动态更新，详见下文《ES6模块加载的实质》一节。\n最后，export命令可以出现在模块的任何位置，只要处于模块顶层就可以。如果处于块级作用域内，就会报错，下一节的import命令也是如此。这是因为处于条件代码块之中，就没法做静态优化了，违背了ES6模块的设计初衷。\n  总结 export 导出的是接口 ,并且必须是模块顶层 不能是块级作用域\n  import 命令\n  使用export命令定义了模块的对外接口以后，其他 JS 文件就可以通过import命令加载这个模块。\n// main.js\rimport {firstName, lastName, year} from './profile';\r//使用\rfunction setName(element) {\relement.textContent = firstName + ' ' + lastName;\r}\r如果想为输入的变量重新取一个名字，import命令要使用as关键字，将输入的变量重命名。\nimport { lastName as surname } from './profile';\nimport后面的from指定模块文件的位置，可以是相对路径，也可以是绝对路径，.js路径可以省略。如果只是模块名，不带有路径，那么必须有配置文件，告诉 JavaScript 引擎该模块的位置。\nimport {myMethod} from 'util';\n上面代码中，util是模块文件名，由于不带有路径，必须通过配置，告诉引擎怎么取到这个模块。\n注意，import命令具有提升效果，会提升到整个模块的头部，首先执行。\n如果多次重复执行同一句import语句，那么只会执行一次，而不会执行多次。\nimport 'lodash';\rimport 'lodash';\rimport { foo } from 'my_module';\rimport { bar } from 'my_module';\r// 等同于\rimport { foo, bar } from 'my_module';\r整体加载一个js中所有模块\nimport * as circle from './circle';\rconsole.log('圆面积：' + circle.area(4));\rconsole.log('圆周长：' + circle.circumference(14));\r需要注意的是 circle.method 调用导入模块\r export default 命令   export default命令用于指定模块的默认输出。显然，一个模块只能有一个默认输出，因此export default命令只能使用一次。所以，import命令后面才不用加大括号，因为只可能唯一对应export default命令\n // modules.js\rfunction add(x, y) {\rreturn x * y;\r}\rexport {add as default};\r// 等同于\r// export default add;\r// app.js\rimport { default as foo } from 'modules';\r// 等同于\r// import foo from 'modules';\r//上面import foo from 'modules'; 只有 export default add; 才能这样\r"}),a.add({id:13,href:'/life/docs/%E8%84%9A%E6%9C%AC/nodejs/',title:"node js ",section:"脚本",content:"node js\r#\r\r Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行时\n Linux 上安装 Node.js\r#\r\r 直接使用已编译好的包 Node 官网已经把 linux 下载版本更改为已编译好的版本了，我们可以直接下载解压后使用：  # wget https://nodejs.org/dist/v10.9.0/node-v10.9.0-linux-x64.tar.xz // 下载 # tar xf node-v10.9.0-linux-x64.tar.xz // 解压 # cd node-v10.9.0-linux-x64/ // 进入解压目录 # ./bin/node -v // 执行node命令 查看版本 v10.9.0  解压文件的 bin 目录底下包含了 node、npm 等命令，我们可以使用 ln 命令来设置软连接：  ln -s /usr/software/nodejs/bin/npm /usr/local/bin/ ln -s /usr/software/nodejs/bin/node /usr/local/bin/  Ubuntu 源码安装 Node.js   以下部分我们将介绍在 Ubuntu Linux 下使用源码安装 Node.js 。 其他的 Linux 系统，如 Centos 等类似如下安装步骤。\n  在 Github 上获取 Node.js 源码：  $ sudo git clone https://github.com/nodejs/node.git\rCloning into 'node'...\r 修改目录权限：  $ sudo chmod -R 755 node  使用 ./configure 创建编译文件，并按照：  $ cd node $ sudo ./configure $ sudo make $ sudo make install 查看 node 版本：\n$ node --version v0.10.25  Ubuntu apt-get命令安装 命令格式如下：  sudo apt-get install nodejs sudo apt-get install npm  CentOS 下源码安装 Node.js   1、下载源码，你需要在https://nodejs.org/en/download/下载最新的Nodejs版本，本文以v0.10.24为例:\n cd /usr/local/src/ wget http://nodejs.org/dist/v0.10.24/node-v0.10.24.tar.gz  2、解压源码\n tar zxvf node-v0.10.24.tar.gz  3、 编译安装\n cd node-v0.10.24 ./configure --prefix=/usr/local/node/0.10.24 make make install  4、 配置NODE_HOME，进入profile编辑环境变量\n vim /etc/profile  设置 nodejs 环境变量，在 export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL 一行的上面添加如下内容:  #set for nodejs export NODE_HOME=/usr/local/node/0.10.24 export PATH=$NODE_HOME/bin:$PATH  :wq保存并退出，编译/etc/profile 使配置生效  source /etc/profile  验证是否安装配置成功  node -v 输出 v0.10.24 表示配置成功  npm模块安装路径  /usr/local/node/0.10.24/lib/node_modules/ windows 上安装 Node.js\r#\r\r  地址\n  选择zip格式 如图所示\n   解压zip格式 如图所示   配置环境变量 如图所示   检验安装  Microsoft Windows [版本 10.0.19043.1052]\r(c) Microsoft Corporation。保留所有权利。\rC:\\Users\\dell\u0026gt;node -v\rv14.17.2\rC:\\Users\\dell\u0026gt;npm -v\r6.14.13\rC:\\Users\\dell\u0026gt;npm root -g\rD:\\CS\\node\\node-v14.17.2-win-x64\\node_modules\rC:\\Users\\dell\u0026gt;\rwindows 下 修改全局依赖包下载路径\r#\r\r 默认情况下，我们在执行npm install -g XXXX下载全局包时，这个包的默认存放路径位C:\\Users\\用户名\\AppData\\Roaming\\npm\\node_modules下，可以通过CMD指令npm root -g查看  C:\\Users\\liaijie\\AppData\\Roaming\\npm\\node_modules\r 但是有时候我们不想让全局包放在这里，我们可以自定义存放目录,在CMD窗口执行以下两条命令修改默认路径：  npm config set prefix \u0026quot;C:\\node\\node_global\u0026quot;\rnpm config set cache \u0026quot;C:\\node\\node_cache\u0026quot;\r 或者打开c:\\node\\node_modules\\npm.npmrc文件，修改如下：  prefix =C:\\node\\node_global\rcache = C:\\node\\node_cache\r  以上操作表示，修改全局包下载目录为C:\\node\\node_global,缓存目录为C:\\node\\node_cache,并会自动创建node_global目录，而node_cache目录是缓存目录，会在你下载全局包时自动创建\nhttps://www.jianshu.com/p/13f45e24b1de\n  "}),a.add({id:14,href:'/life/docs/javadir/groovy/groovy%E5%AD%A6%E4%B9%A0/',title:" Groovy 概述 ",section:"groovy 学习与使用 ",content:"Groovy 概述\r#\r\r Groovy是一种基于Java平台的面向对象语言。 Groovy 1.0于2007年1月2日发布，其中Groovy 2.4是当前的主要版本。 Groovy通过Apache License v 2.0发布。  Groovy的特点\r#\r\r 同时支持静态和动态类型。 支持运算符重载。 本地语法列表和关联数组。 对正则表达式的本地支持。 各种标记语言，如XML和HTML原生支持。 Groovy对于Java开发人员来说很简单，因为Java和Groovy的语法非常相似。 您可以使用现有的Java库。 Groovy扩展了java.lang.Object。  groovy-脚本和类\r#\r\r  在groovy中定义类和java中是一样的。类的方法可以是static，也可以是非static的\n  groovy中的方法可以是public, protected, private，同时也支持java中的修饰符，比如synchronized\n  groovy自动导入的包有以下这些\n   groovy.lang.* groovy.util.* java.lang.* java.util.* java.net.* java.io.* import java.math.BigInteger import java.math.BigDecimal    在groovy和java中不同的一点就是，groovy默认是public的\n  每一个groovy类，在JVM层级，都是字节码形式的java code，所以在java代码中可以调用groovy中申明的方法，反之亦然\n  你可以指定方法的参数和返回值，以便他们能够更好的和java代码相互调用。当然你也可以实现接口或者重载方法。但是需要你没有指定方法后者属性的类型的话，那么在JVM层级的字节码中，他们将会是 java.lang.Object 类型\n  例如 Callee.groovy\n  class Callee{\rvoid hello(){\rprintln \u0026quot;hello, world\u0026quot; ;\r}\r}\rc = new Callee() ;\rc.hello();\r 创建你的第一个 Hello World 程序  class Example1 {\rpublic static void main(String[] args) {\rprintln(\u0026quot;你好,世界 !\u0026quot;) ;\r}\r}\r你好,世界 !\n 当然你也可以不定义一个类 因为groovy中行得通  println(\u0026quot;你好,世界 !\u0026quot;) ;同样可以打印出字符串  在 Groovy 中导入语句\r#\r\r import 语句可以用来导入，可以让你的代码使用其他库的功能。这是通过使用在 Import 关键字完成。 下面的示例演示了如何使用 MarkupBuilder 的类，它可能是最常用的创建 HTML 或 XML 标记的类之一。  import groovy.xml.MarkupBuilder def xml = new MarkupBuilder() Groovy 令牌\r#\r\r  令牌可以是一个关键字，一个标识符，常量，字符串文字或符号。 println(“Hello World”);\n  在上面的代码行中，有两个令牌，首先是关键词的 println 而接下来就是字符串的“Hello World”。\n  Groovy 注释\r#\r\r 在您的代码中使用注释。Groovy 的注释可以是单行或多行。单行注释使用 // 在该行的任何位置来识别。一个例子如下所示 -  class Example {\rstatic void main(String[] args) {\r// Using a simple println statement to print output to the console\rprintln('Hello World');\r}\r}\r分号\r#\r\r 就像 Java 编程语言，它需要具有分号在 Groovy 定义多个语句之间进行区分。  class Example {\rstatic void main(String[] args) {\r// One can see the use of a semi-colon after each statement\rdef x = 5;\rprintln('Hello World'); }\r}\r身份标识\r#\r\r 标识符被用来定义变量，函数或其他用户定义的变量。标识符以字母开头，美元或下划线。他们不能以数字开头。以下是有效标识符的一些例子  def employeename def student1 def student_name\r 其中**，DEF** 是在 Groovy 用来定义标识符的关键字。下面是一个如何在我们的 Hello World 程序中使用标识符的代码示例  class Example {\rstatic void main(String[] args) {\r// One can see the use of a semi-colon after each statement\rdef x = 5;\rprintln('Hello World'); }\r}\r// 在上述的例子中，变量 x 被用作标识符。\r关键词\r#\r\rasassertbreakcasecatchclassconstcontinuedefdefaultdoelseenumextendsfalseFinallyforgotoifimplementsimportininstanceofinterfacenewpullpackagereturnsuperswitchthisthrowthrowstraittruetrywhile\u0026nbsp;\u0026nbsp;\u0026nbsp;\r空白\r#\r\r  空白是在编程语言如 Java 和 Groovy 用来形容空格，制表符，换行符和注释术语。空格分隔从另一个声明的一部分，使编译器，其中一个元素标识的声明。\n  例如，在下面的代码示例，存在关键字 def 和变量 x 之间的空白。这是为了让编译器知道 DEF 是需要被使用，并且是 x 应该是需要被定义的变量名的关键字。\n  def x = 5;\r文字\r#\r\r 文字是在 groovy 中表示固定值的符号。Groovy 语言有符号整数，浮点数，字符和字符串。下面是一些在 Groovy 编程语言文字的例子 -  12 1.45 ‘a’ “aa”\r"}),a.add({id:15,href:'/life/docs/operating_system/windows/dos_start/',title:"DOS命令 基本介绍 ",section:"windows学习与使用 ",content:"介绍\r#\r\r windows不区分大小写  C:\\Users\\noatn\u0026gt;echo \u0026#39;你好\u0026#39; \u0026#39;你好\u0026#39; C:\\Users\\noatn\u0026gt;ECHO \u0026#39;你好\u0026#39; \u0026#39;你好\u0026#39; 体验\r#\r\r  体验1\n  @echo off 关闭原始盘符\n  C:\\Users\\noatn\u0026gt;echo \u0026#39;你好\u0026#39; \u0026#39;你好\u0026#39; C:\\Users\\noatn\u0026gt; C:\\Users\\noatn\u0026gt;@echo off Echo \u0026#39;hello world\u0026#39; \u0026#39;hello world\u0026#39;  pause 暂停  @echo off Echo \u0026#39;hello world\u0026#39; pause  查看ip地址  C:\\Users\\noatn\u0026gt;ipconfig Windows IP 配置 以太网适配器 以太网 2: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 以太网适配器 以太网: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 无线局域网适配器 本地连接* 1: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 无线局域网适配器 本地连接* 2: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 以太网适配器 VMware Network Adapter VMnet1: 连接特定的 DNS 后缀 . . . . . . . : 本地链接 IPv6 地址. . . . . . . . : fe80::bc7f:faee:41f9:ecf7%18 IPv4 地址 . . . . . . . . . . . . : 192.168.79.1 子网掩码 . . . . . . . . . . . . : 255.255.255.0 默认网关. . . . . . . . . . . . . : 以太网适配器 VMware Network Adapter VMnet8: 连接特定的 DNS 后缀 . . . . . . . : 本地链接 IPv6 地址. . . . . . . . : fe80::f508:71d3:56e1:6b30%10 IPv4 地址 . . . . . . . . . . . . : 192.168.12.1 子网掩码 . . . . . . . . . . . . : 255.255.255.0 默认网关. . . . . . . . . . . . . : 无线局域网适配器 WLAN: 连接特定的 DNS 后缀 . . . . . . . : 本地链接 IPv6 地址. . . . . . . . : fe80::a855:ecd0:285d:352e%13 IPv4 地址 . . . . . . . . . . . . : 192.168.31.80 子网掩码 . . . . . . . . . . . . : 255.255.255.0 默认网关. . . . . . . . . . . . . : 192.168.31.1 以太网适配器 蓝牙网络连接: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 192.168.31.80 这就是本地ipv4版本地址  打开计算器  calc 算术运算\r#\r\r 基本使用  C:\\Users\\noatn\u0026gt;set /a 2+5 7 C:\\Users\\noatn\u0026gt;set /a 4%3 1 C:\\Users\\noatn\u0026gt;set /a 2*3 6  编写批处理文件  @echo off set /a var_one = 3 * 7 echo %var_one% pause   %var_one% 相当于引用变量var_one值\n  有优先级的情况\n  @echo off set /a param_a = (2+3) *10 set /a param_b = (2+30-100) *10 echo %param_a% echo %param_b% pause 重定向运算\r#\r\r \u0026gt; 代表将结果存储到对应的位置  C:\\Users\\noatn\u0026gt;d: D:\\\u0026gt;cd D:\\data\\game D:\\data\\game\u0026gt;echo \u0026#39;你好\u0026#39; \u0026#39;你好\u0026#39; D:\\data\\game\u0026gt;echo \u0026#39;你好\u0026#39; \u0026gt; a.txt D:\\data\\game\u0026gt;dir 驱动器 D 中的卷没有标签。 卷的序列号是 60C3-1FDB D:\\data\\game 的目录 2022/10/23 15:51 \u0026lt;DIR\u0026gt; . 2022/10/23 15:51 \u0026lt;DIR\u0026gt; .. 2022/10/23 15:51 9 a.txt 1 个文件 9 字节 2 个目录 293,906,841,600 可用字节 D:\\data\\game\u0026gt;type a.txt \u0026#39;你好\u0026#39; D:\\data\\game\u0026gt;  \u0026gt;\u0026gt; 代表将结果追加并存储到对应的位置  D:\\data\\game\u0026gt;echo \u0026#39;你好\u0026#39; \u0026gt;\u0026gt; a.txt D:\\data\\game\u0026gt;type a.txt \u0026#39;你好\u0026#39; \u0026#39;你好\u0026#39;  \u0026lt; 读出命令或者文件内容  D:\\data\\game\u0026gt;sort \u0026lt; study.txt \u0026#39;好好学习\u0026#39; \u0026#39;天天向上\u0026#39;  type 文本文件内容查看  D:\\data\\game\u0026gt;echo \u0026#39;好好学习\u0026#39; \u0026gt; study.txt D:\\data\\game\u0026gt;echo \u0026#39;天天向上\u0026#39; \u0026gt;\u0026gt; study.txt D:\\data\\game\u0026gt;type study.txt \u0026#39;好好学习\u0026#39; \u0026#39;天天向上\u0026#39; 多命令运算\r#\r\r \u0026amp;\u0026amp; 具有短路 第一个命令错误不会执行第二个命令  D:\\data\\game\u0026gt;aaa \u0026amp;\u0026amp; ipconfig \u0026#39;aaa\u0026#39; 不是内部或外部命令，也不是可运行的程序 或批处理文件。 D:\\data\\game\u0026gt;net user \u0026amp;\u0026amp; ipconfig \\\\DESKTOP-CCD057N 的用户帐户 ------------------------------------------------------------------------------- Administrator DefaultAccount Guest noatn WDAGUtilityAccount 命令成功完成。 Windows IP 配置 以太网适配器 以太网 2: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 以太网适配器 以太网: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 无线局域网适配器 本地连接* 1: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 无线局域网适配器 本地连接* 2: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 以太网适配器 VMware Network Adapter VMnet1: 连接特定的 DNS 后缀 . . . . . . . : 本地链接 IPv6 地址. . . . . . . . : fe80::bc7f:faee:41f9:ecf7%18 IPv4 地址 . . . . . . . . . . . . : 192.168.79.1 子网掩码 . . . . . . . . . . . . : 255.255.255.0 默认网关. . . . . . . . . . . . . : 以太网适配器 VMware Network Adapter VMnet8: 连接特定的 DNS 后缀 . . . . . . . : 本地链接 IPv6 地址. . . . . . . . : fe80::f508:71d3:56e1:6b30%10 IPv4 地址 . . . . . . . . . . . . : 192.168.12.1 子网掩码 . . . . . . . . . . . . : 255.255.255.0 默认网关. . . . . . . . . . . . . : 无线局域网适配器 WLAN: 连接特定的 DNS 后缀 . . . . . . . : 本地链接 IPv6 地址. . . . . . . . : fe80::a855:ecd0:285d:352e%13 IPv4 地址 . . . . . . . . . . . . : 192.168.31.80 子网掩码 . . . . . . . . . . . . : 255.255.255.0 默认网关. . . . . . . . . . . . . : 192.168.31.1 以太网适配器 蓝牙网络连接: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : D:\\data\\game\u0026gt;  || 第一个命令执行成功就不会执行第二个命令了  D:\\data\\game\u0026gt;dssdh || ipconfig \u0026#39;dssdh\u0026#39; 不是内部或外部命令，也不是可运行的程序 或批处理文件。 Windows IP 配置 以太网适配器 以太网 2: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 以太网适配器 以太网: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 无线局域网适配器 本地连接* 1: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 无线局域网适配器 本地连接* 2: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 以太网适配器 VMware Network Adapter VMnet1: 连接特定的 DNS 后缀 . . . . . . . : 本地链接 IPv6 地址. . . . . . . . : fe80::bc7f:faee:41f9:ecf7%18 IPv4 地址 . . . . . . . . . . . . : 192.168.79.1 子网掩码 . . . . . . . . . . . . : 255.255.255.0 默认网关. . . . . . . . . . . . . : 以太网适配器 VMware Network Adapter VMnet8: 连接特定的 DNS 后缀 . . . . . . . : 本地链接 IPv6 地址. . . . . . . . : fe80::f508:71d3:56e1:6b30%10 IPv4 地址 . . . . . . . . . . . . : 192.168.12.1 子网掩码 . . . . . . . . . . . . : 255.255.255.0 默认网关. . . . . . . . . . . . . : 无线局域网适配器 WLAN: 连接特定的 DNS 后缀 . . . . . . . : 本地链接 IPv6 地址. . . . . . . . : fe80::a855:ecd0:285d:352e%13 IPv4 地址 . . . . . . . . . . . . : 192.168.31.80 子网掩码 . . . . . . . . . . . . : 255.255.255.0 默认网关. . . . . . . . . . . . . : 192.168.31.1 以太网适配器 蓝牙网络连接: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . : 管道符号\r#\r\r |  C:\\Users\\noatn\u0026gt;d: D:\\\u0026gt;cd D:\\data\\game D:\\data\\game\u0026gt;mkdir temp D:\\data\\game\u0026gt;cd temp D:\\data\\game\\temp\u0026gt;dir 驱动器 D 中的卷没有标签。 卷的序列号是 60C3-1FDB D:\\data\\game\\temp 的目录 2022/10/23 20:48 \u0026lt;DIR\u0026gt; . 2022/10/23 20:48 \u0026lt;DIR\u0026gt; .. 0 个文件 0 字节 2 个目录 293,937,827,840 可用字节 D:\\data\\game\\temp\u0026gt;echo \u0026#39;1\u0026#39; \u0026gt; 1.txt D:\\data\\game\\temp\u0026gt;echo \u0026#39;2\u0026#39; \u0026gt; 2.txt D:\\data\\game\\temp\u0026gt;echo \u0026#39;## markdown\u0026#39; \u0026gt; ok.md D:\\data\\game\\temp\u0026gt;dir 驱动器 D 中的卷没有标签。 卷的序列号是 60C3-1FDB D:\\data\\game\\temp 的目录 2022/10/23 20:49 \u0026lt;DIR\u0026gt; . 2022/10/23 20:49 \u0026lt;DIR\u0026gt; .. 2022/10/23 20:48 6 1.txt 2022/10/23 20:48 6 2.txt 2022/10/23 20:49 16 ok.md 3 个文件 28 字节 2 个目录 293,937,823,744 可用字节 D:\\data\\game\\temp\u0026gt;dir | find \u0026#34;.txt\u0026#34; 2022/10/23 20:48 6 1.txt 2022/10/23 20:48 6 2.txt D:\\data\\game\\temp\u0026gt;  使用find查找网络连接 netstat -an (查看所有网络连接)  D:\\data\\game\\temp\u0026gt;netstat -an 活动连接 协议 本地地址 外部地址 状态 TCP 0.0.0.0:135 0.0.0.0:0 LISTENING TCP 0.0.0.0:443 0.0.0.0:0 LISTENING TCP 0.0.0.0:445 0.0.0.0:0 LISTENING TCP 0.0.0.0:902 0.0.0.0:0 LISTENING TCP 0.0.0.0:912 0.0.0.0:0 LISTENING TCP 0.0.0.0:3306 0.0.0.0:0 LISTENING TCP 0.0.0.0:3307 0.0.0.0:0 LISTENING TCP 0.0.0.0:5040 0.0.0.0:0 LISTENING TCP 0.0.0.0:5500 0.0.0.0:0 LISTENING TCP 0.0.0.0:7680 0.0.0.0:0 LISTENING TCP 0.0.0.0:33060 0.0.0.0:0 LISTENING TCP 0.0.0.0:33060 0.0.0.0:0 LISTENING TCP 0.0.0.0:49664 0.0.0.0:0 LISTENING TCP 0.0.0.0:49665 0.0.0.0:0 LISTENING TCP 0.0.0.0:49666 0.0.0.0:0 LISTENING TCP 0.0.0.0:49667 0.0.0.0:0 LISTENING TCP 0.0.0.0:49668 0.0.0.0:0 LISTENING TCP 0.0.0.0:49681 0.0.0.0:0 LISTENING TCP 0.0.0.0:51600 0.0.0.0:0 LISTENING TCP 0.0.0.0:51602 0.0.0.0:0 LISTENING TCP 0.0.0.0:56686 0.0.0.0:0 LISTENING TCP 127.0.0.1:1313 0.0.0.0:0 LISTENING TCP 127.0.0.1:1313 127.0.0.1:59957 ESTABLISHED TCP 127.0.0.1:1313 127.0.0.1:60097 ESTABLISHED TCP 127.0.0.1:1521 0.0.0.0:0 LISTENING TCP 127.0.0.1:1521 127.0.0.1:56688 ESTABLISHED TCP 127.0.0.1:6942 0.0.0.0:0 LISTENING TCP 127.0.0.1:8307 0.0.0.0:0 LISTENING TCP 127.0.0.1:8680 0.0.0.0:0 LISTENING TCP 127.0.0.1:10000 0.0.0.0:0 LISTENING TCP 127.0.0.1:10242 0.0.0.0:0 LISTENING TCP 127.0.0.1:39085 0.0.0.0:0 LISTENING TCP 127.0.0.1:49691 127.0.0.1:49692 ESTABLISHED TCP 127.0.0.1:49692 127.0.0.1:49691 ESTABLISHED TCP 127.0.0.1:49693 127.0.0.1:49694 ESTABLISHED TCP 127.0.0.1:49694 127.0.0.1:49693 ESTABLISHED TCP 127.0.0.1:49698 127.0.0.1:49699 ESTABLISHED TCP 127.0.0.1:49699 127.0.0.1:49698 ESTABLISHED TCP 127.0.0.1:49700 127.0.0.1:49701 ESTABLISHED TCP 127.0.0.1:49701 127.0.0.1:49700 ESTABLISHED TCP 127.0.0.1:51569 127.0.0.1:51570 ESTABLISHED TCP 127.0.0.1:51570 127.0.0.1:51569 ESTABLISHED TCP 127.0.0.1:51571 127.0.0.1:51572 ESTABLISHED TCP 127.0.0.1:51572 127.0.0.1:51571 ESTABLISHED TCP 127.0.0.1:51602 127.0.0.1:60123 ESTABLISHED TCP 127.0.0.1:53000 0.0.0.0:0 LISTENING TCP 127.0.0.1:54530 0.0.0.0:0 LISTENING TCP 127.0.0.1:54533 0.0.0.0:0 LISTENING TCP 127.0.0.1:54533 127.0.0.1:59854 ESTABLISHED TCP 127.0.0.1:56688 127.0.0.1:1521 ESTABLISHED TCP 127.0.0.1:56751 0.0.0.0:0 LISTENING TCP 127.0.0.1:59854 127.0.0.1:54533 ESTABLISHED TCP 127.0.0.1:59855 127.0.0.1:59856 ESTABLISHED TCP 127.0.0.1:59856 127.0.0.1:59855 ESTABLISHED TCP 127.0.0.1:59957 127.0.0.1:1313 ESTABLISHED TCP 127.0.0.1:60058 127.0.0.1:51602 TIME_WAIT TCP 127.0.0.1:60064 127.0.0.1:51600 TIME_WAIT TCP 127.0.0.1:60076 127.0.0.1:1313 TIME_WAIT TCP 127.0.0.1:60078 127.0.0.1:51602 TIME_WAIT TCP 127.0.0.1:60086 127.0.0.1:51602 TIME_WAIT TCP 127.0.0.1:60097 127.0.0.1:1313 ESTABLISHED TCP 127.0.0.1:60106 127.0.0.1:51602 TIME_WAIT TCP 127.0.0.1:60114 127.0.0.1:51602 TIME_WAIT TCP 127.0.0.1:60123 127.0.0.1:51602 ESTABLISHED TCP 127.0.0.1:63342 0.0.0.0:0 LISTENING TCP 192.168.0.123:2030 0.0.0.0:0 LISTENING TCP 192.168.12.1:139 0.0.0.0:0 LISTENING TCP 192.168.12.1:2030 0.0.0.0:0 LISTENING TCP 192.168.31.80:139 0.0.0.0:0 LISTENING TCP 192.168.31.80:50211 20.197.71.89:443 ESTABLISHED TCP 192.168.31.80:51040 112.53.36.19:80 ESTABLISHED TCP 192.168.31.80:58542 112.45.122.108:443 ESTABLISHED TCP 192.168.31.80:59936 101.32.33.45:443 CLOSE_WAIT TCP 192.168.31.80:59938 101.32.33.45:443 CLOSE_WAIT TCP 192.168.31.80:59939 185.199.109.153:443 ESTABLISHED TCP 192.168.31.80:59945 172.105.220.19:80 CLOSE_WAIT TCP 192.168.31.80:59947 172.105.220.19:80 CLOSE_WAIT TCP 192.168.31.80:59948 172.105.220.19:80 CLOSE_WAIT TCP 192.168.31.80:59949 172.105.220.19:80 CLOSE_WAIT TCP 192.168.31.80:59950 172.105.220.19:80 CLOSE_WAIT TCP 192.168.31.80:59982 220.246.254.9:5228 CLOSE_WAIT TCP 192.168.31.80:60062 223.85.58.92:443 ESTABLISHED TCP 192.168.31.80:60089 223.87.182.189:443 TIME_WAIT TCP 192.168.31.80:60094 112.45.122.109:443 ESTABLISHED TCP 192.168.31.80:60095 112.45.122.108:443 ESTABLISHED TCP 192.168.31.80:60115 142.251.43.10:443 SYN_SENT TCP 192.168.31.80:60116 142.251.43.10:443 SYN_SENT TCP 192.168.31.80:60117 142.251.43.10:443 SYN_SENT TCP 192.168.31.80:60118 142.251.43.10:443 SYN_SENT TCP 192.168.31.80:60119 172.217.160.106:443 SYN_SENT TCP 192.168.31.80:60120 172.217.160.106:443 SYN_SENT TCP 192.168.31.80:60121 172.217.160.106:443 SYN_SENT TCP 192.168.31.80:60122 172.217.163.42:443 SYN_SENT TCP 192.168.79.1:139 0.0.0.0:0 LISTENING TCP 192.168.79.1:2030 0.0.0.0:0 LISTENING TCP [::]:135 [::]:0 LISTENING TCP [::]:443 [::]:0 LISTENING TCP [::]:445 [::]:0 LISTENING TCP [::]:3306 [::]:0 LISTENING TCP [::]:3307 [::]:0 LISTENING TCP [::]:5500 [::]:0 LISTENING TCP [::]:7680 [::]:0 LISTENING TCP [::]:33060 [::]:0 LISTENING TCP [::]:33060 [::]:0 LISTENING TCP [::]:49664 [::]:0 LISTENING TCP [::]:49665 [::]:0 LISTENING TCP [::]:49666 [::]:0 LISTENING TCP [::]:49667 [::]:0 LISTENING TCP [::]:49668 [::]:0 LISTENING TCP [::]:49681 [::]:0 LISTENING TCP [::]:51600 [::]:0 LISTENING TCP [::]:56686 [::]:0 LISTENING TCP [::1]:8307 [::]:0 LISTENING TCP [::1]:49669 [::]:0 LISTENING TCP [::1]:49680 [::]:0 LISTENING TCP [fe80::a855:ecd0:285d:352e%13]:2030 [::]:0 LISTENING TCP [fe80::bc7f:faee:41f9:ecf7%18]:2030 [::]:0 LISTENING TCP [fe80::f508:71d3:56e1:6b30%10]:2030 [::]:0 LISTENING UDP 0.0.0.0:5050 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5353 *:* UDP 0.0.0.0:5355 *:* UDP 0.0.0.0:54095 *:* UDP 0.0.0.0:61357 *:* UDP 127.0.0.1:1900 *:* UDP 127.0.0.1:40000 *:* UDP 127.0.0.1:52174 *:* UDP 127.0.0.1:53904 *:* UDP 192.168.12.1:137 *:* UDP 192.168.12.1:138 *:* UDP 192.168.12.1:1900 *:* UDP 192.168.12.1:52172 *:* UDP 192.168.31.80:137 *:* UDP 192.168.31.80:138 *:* UDP 192.168.31.80:1900 *:* UDP 192.168.31.80:52173 *:* UDP 192.168.79.1:137 *:* UDP 192.168.79.1:138 *:* UDP 192.168.79.1:1900 *:* UDP 192.168.79.1:52171 *:* UDP [::]:5353 *:* UDP [::]:5353 *:* UDP [::]:5353 *:* UDP [::]:5353 *:* UDP [::]:5353 *:* UDP [::]:5353 *:* UDP [::]:5353 *:* UDP [::]:5353 *:* UDP [::]:5353 *:* UDP [::]:5353 *:* UDP [::]:5355 *:* UDP [::1]:1900 *:* UDP [::1]:52170 *:* UDP [::1]:55220 *:* UDP [fe80::a855:ecd0:285d:352e%13]:1900 *:* UDP [fe80::a855:ecd0:285d:352e%13]:52169 *:* UDP [fe80::bc7f:faee:41f9:ecf7%18]:1900 *:* UDP [fe80::bc7f:faee:41f9:ecf7%18]:52167 *:* UDP [fe80::f508:71d3:56e1:6b30%10]:1900 *:* UDP [fe80::f508:71d3:56e1:6b30%10]:52168 *:*  查找当前主机与外部建立连接的网络  D:\\data\\game\\temp\u0026gt;netstat -an | find \u0026#34;ESTABLISHED\u0026#34; TCP 127.0.0.1:1313 127.0.0.1:59957 ESTABLISHED TCP 127.0.0.1:1313 127.0.0.1:60156 ESTABLISHED TCP 127.0.0.1:1521 127.0.0.1:56688 ESTABLISHED TCP 127.0.0.1:49691 127.0.0.1:49692 ESTABLISHED TCP 127.0.0.1:49692 127.0.0.1:49691 ESTABLISHED TCP 127.0.0.1:49693 127.0.0.1:49694 ESTABLISHED TCP 127.0.0.1:49694 127.0.0.1:49693 ESTABLISHED TCP 127.0.0.1:49698 127.0.0.1:49699 ESTABLISHED TCP 127.0.0.1:49699 127.0.0.1:49698 ESTABLISHED TCP 127.0.0.1:49700 127.0.0.1:49701 ESTABLISHED TCP 127.0.0.1:49701 127.0.0.1:49700 ESTABLISHED TCP 127.0.0.1:51569 127.0.0.1:51570 ESTABLISHED TCP 127.0.0.1:51570 127.0.0.1:51569 ESTABLISHED TCP 127.0.0.1:51571 127.0.0.1:51572 ESTABLISHED TCP 127.0.0.1:51572 127.0.0.1:51571 ESTABLISHED TCP 127.0.0.1:51600 127.0.0.1:60197 ESTABLISHED TCP 127.0.0.1:51602 127.0.0.1:60189 ESTABLISHED TCP 127.0.0.1:54533 127.0.0.1:59854 ESTABLISHED TCP 127.0.0.1:56688 127.0.0.1:1521 ESTABLISHED TCP 127.0.0.1:59854 127.0.0.1:54533 ESTABLISHED TCP 127.0.0.1:59855 127.0.0.1:59856 ESTABLISHED TCP 127.0.0.1:59856 127.0.0.1:59855 ESTABLISHED TCP 127.0.0.1:59957 127.0.0.1:1313 ESTABLISHED TCP 127.0.0.1:60156 127.0.0.1:1313 ESTABLISHED TCP 127.0.0.1:60189 127.0.0.1:51602 ESTABLISHED TCP 127.0.0.1:60197 127.0.0.1:51600 ESTABLISHED TCP 192.168.31.80:50211 20.197.71.89:443 ESTABLISHED TCP 192.168.31.80:51040 112.53.36.19:80 ESTABLISHED TCP 192.168.31.80:60192 223.85.58.92:443 ESTABLISHED "}),a.add({id:16,href:'/life/docs/javadir/groovy/groovy%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/',title:"groovy 基本概念 ",section:"groovy 学习与使用 ",content:"groovy 基本概念\r#\r\r1、基本概念\r#\r\r Groovy是一种面向对象的动态类型语言，跟Java一样运行在JVM上。\n（注：给Java静态世界带来动态能力的语言）\n   与Java不同的语言特性：\n  a) 函数字面值\n  b) 对集合的一等支持\n  c) 对正则表达式的一等支持\n  d) 对XML处理的一等支持\n  （注：所谓“一等”指的是内置到语言的语法中，不需要调用类库。）\n  2:Groovy能解决包括：\r#\r\r  快速Web开发\n  原型设计\n  脚本处理\n  等问题，这些使用Java不是解决动态层问题的理想语言。\n  例如:\nSystem.out.println(\u0026quot;It's a Groovy baby, yeah!\u0026quot;);\rdef writer = new StringWriter();\rdef xml = new groovy.xml.MarkupBuilder(writer);\rxml.person(id:2){\rname 'kobicc'\rage 1\r}\rprintln writer.toString();\r"}),a.add({id:17,href:'/life/docs/javadir/basedir/jsp_dir/java_%E7%9B%91%E5%90%AC%E4%BA%8B%E4%BB%B6%E5%8E%9F%E7%90%86/',title:"java_监听事件原理 ",section:"jsp 基础知识 ",content:"接口回调法\r#\r\r模拟输出监听事件\r#\r\r第一步先定义事件接口\r#\r\rpublic interface PrintListener {\rpublic void print();\r}\r第二步自定义输出类\r#\r\rpublic class Out {\rPrintListener listener=null;\rpublic Out() {\r}\rpublic Out(PrintListener listener) {\rthis.listener=listener;\r}\rpublic void printlen(String s) {\rSystem.out.println(s);\rif(listener!=null) {\rlistener.print();\r}\r}\r}\r第三步实现监听事件接口\r#\r\rpublic class PrintListenerDemo implements PrintListener {\r@Override\rpublic void print() {\rSystem.out.println(\u0026quot;监听到输出事件\u0026quot;);\r}\r}\r测试\r#\r\rpublic class Test {\rpublic static void main(String[] args) {\r//新建一个默认输出类\rOut b=new Out();\rb.printlen(\u0026quot;这里不会被监听到输出事件\u0026quot;);	//新建一个输出类,为输出类添加一个输出监听事件\rOut b1=new Out(new PrintListenerDemo());\rb1.printlen(\u0026quot;这里输出后会被监听到输出事件\u0026quot;);\r}\r}\r结果\r#\r\r监听事件使用\r#\r\r 在javaweb中,不论与ServletContext,HttpSession,ServletRequest相关的监听接口\n  开发者只需要直接实现这些监听接口事件,其他的源码别人己经写好了,我们不用关心它是如何实现\n "}),a.add({id:18,href:'/life/docs/javadir/basedir/',title:"Java基础知识 ",section:" Java技术栈",content:"目录\r#\r\r jsp  @Test public void mapTest() throws Exception { Map map = new HashMap(); map.put(\u0026#34;1\u0026#34;, UUID.randomUUID().toString()) ; map.put(\u0026#34;4\u0026#34;, UUID.randomUUID().toString()) ; Map\u0026lt;Integer ,String\u0026gt; integerStringMap = new HashMap\u0026lt;\u0026gt;() ; integerStringMap.put(1,UUID.randomUUID().toString()) ; // integerStringMap = map;  if (!integerStringMap.isEmpty()){ for ( Iterator\u0026lt;Map.Entry\u0026lt;Integer, String\u0026gt;\u0026gt; iterator = integerStringMap.entrySet().iterator();iterator.hasNext();){ Map.Entry\u0026lt;Integer, String\u0026gt; next = iterator.next(); System.out.println(next.getKey()+\u0026#34;-\u0026#34;+next.getValue()); System.out.println(next.getKey() instanceof Integer); System.out.println(next.getValue() instanceof String); } } //print result  /** * 1-aeec41b6-bb7c-4e77-a57c-70a416bc03eb * false * true * 4-e02bb587-9714-4873-9b6c-5e2d4494117f * false * true */ } "}),a.add({id:19,href:'/life/docs/javadir/basedir/jsp_dir/',title:"jsp 基础知识 ",section:"Java基础知识 ",content:"目录\r#\r\rel表达式\n字符串el表达式\nJSTL_core标签库\nsession\n监听事件原理\n"}),a.add({id:20,href:'/life/docs/operating_system/linux/',title:"linux学习与使用 ",section:"计算机操作系统",content:" Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和Unix的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的Unix工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。\n 目录\r#\r\r  linux基础命令\n  nginx学习与使用\n  host映射\n  Linux下设置和查看环境变量\n  Ubuntu清理系统垃圾\n  Notepad++安装\n  ubuntu 安装chmsee\n  ubuntu软件卸载\n  Ubuntu 16.04修改hosts\n  git命令\n  git配置\n  "}),a.add({id:21,href:'/life/docs/python/base/',title:"python 基础学习",section:" python",content:"python 学习笔记\r#\r\r  学习之前注意python版本区别,因为目前很多都是3.x版本了\n  本学习笔记基于3.x+\n  Python基础\r#\r\r输入和输出\r#\r\r输出\r#\r\r Python print() 函数  print(*objects, sep=\u0026#39; \u0026#39;, end=\u0026#39;\\n\u0026#39;, file=sys.stdout, flush=False) # objects -- 复数，表示可以一次输出多个对象。输出多个对象时，需要用 , 分隔 # sep -- 用来间隔多个对象，默认值是一个空格 # end -- 用来设定以什么结尾。默认值是换行符 \\n，我们可以换成其他字符串 # file -- 要写入的文件对象 # flush -- 输出是否被缓存通常决定于 file，但如果 flush 关键字参数为 True，流会被强制刷新 # 返回值 无  用print()在括号中加上字符串，就可以向屏幕上输出指定的文字  print(\u0026#39;hello world\u0026#39;)  print()函数也可以接受多个字符串，用逗号“,”隔开，就可以连成一串输出  print(\u0026#39;漫\u0026#39;,\u0026#39;步\u0026#39;,\u0026#39;人\u0026#39;,\u0026#39;生\u0026#39;)  print()也可以打印整数，或者计算结果  print(12) print(12 + 20)  设置间隔符  print(\u0026#34;美丽\u0026#34;,\u0026#34;人生\u0026#34;,sep=\u0026#34;-\u0026#34;) # 美丽-人生  多行内容  str = \u0026#39;\u0026#39;\u0026#39; ab cd \u0026#39;\u0026#39;\u0026#39; 输入\r#\r\r 用户从电脑输入一些字符 Python提供了一个input()，可以让用户输入字符串，并存放到一个变量里  print(\u0026#34;请输入你的名字!\u0026#34;) myName =input() print(\u0026#34;你的名字是\u0026#34;,myName,\u0026#34;!\u0026#34;,sep=\u0026#34;\u0026#34;,end=\u0026#34;\u0026#34;) #请输入你的名字! #张三 #你的名字是张三! 数据类型和变量\r#\r\r  任何编程语言都需要处理数据，比如数字、字符串、字符等，我们可以直接使用数据，也可以将数据保存到变量中，方便以后使用\n  变量（Variable）可以看成一个小箱子，专门用来“盛装”程序中的数据。每个变量都拥有独一无二的名字，通过变量的名字就能找到变量中的数据\n  在编程语言中，将数据放入变量的过程叫做赋值（Assignment）。Python 使用等号=作为赋值运算符，具体格式为：\n  name = \u0026#39;value\u0026#39; # name 表示变量名；value 表示值，也就是要存储的数据  变量是标识符的一种，它的名字不能随便起，要遵守 Python 标识符命名规范，还要避免和 Python 内置函数以及 Python 保留字重名  pi = 3.14 name = \u0026#34;blake\u0026#34; n = 20 n = \u0026#39;dsdh\u0026#39;  变量类型检测  print(type(\u0026#39;string\u0026#39;)) print(type(3.1415)) print(type(100)) print(type(\u0026#39;\u0026#39;)) # \u0026lt;class \u0026#39;str\u0026#39;\u0026gt; # \u0026lt;class \u0026#39;float\u0026#39;\u0026gt; # \u0026lt;class \u0026#39;int\u0026#39;\u0026gt; # \u0026lt;class \u0026#39;str\u0026#39;\u0026gt; 基本类型\r#\r\r 布尔类型、整型、浮点型、字符串、列表、元组、集合、字典  # 数值 digital_value = 0 # 字符串 str_value = \u0026#34;\u0026#34; # 列表 list_value = [] # 字典 ditc_value = {} # 元组 tuple_value = () # Python中关于空类型的判断使用的内建函数any(), # 列表 也是数组 奇怪吧 list_value = [2,3,5] print(\u0026#39;length\u0026#39;,len(list_value)) # 字典 ditc_value = {\u0026#39;a\u0026#39;:\u0026#39;2\u0026#39;} print(\u0026#34;ditc_value\u0026#34;,ditc_value) # 元组 相当于常量 tuple_value = (2,\u0026#39;b\u0026#39;) print(\u0026#39;tuple_value\u0026#39;,tuple_value) Python 运算符\r#\r\rimport random # 简单运算符 a = 10 - 1 b = 11 * (2 + 5) c = random.random() / 20 d = 20 % 4 # 这里是12的2次方 e = 12 ** 2 # 这里是9除以2 向下取整 f = 9 // 2 y1 = random.random() \u0026gt;= random.random() y2 = random.random() == random.random() y3 = random.random() \u0026lt;= random.random() y4 = 2 y4 -= 1 y5 = 2 y5 += 1 print(\u0026#39;a\u0026#39;, \u0026#39;=\u0026#39;, a) print(\u0026#39;b\u0026#39;, \u0026#39;=\u0026#39;, b) print(\u0026#39;c\u0026#39;, \u0026#39;=\u0026#39;, c) print(\u0026#39;d\u0026#39;, \u0026#39;=\u0026#39;, d) print(\u0026#39;e\u0026#39;, \u0026#39;=\u0026#39;, e) print(\u0026#39;f\u0026#39;, \u0026#39;=\u0026#39;, f) print(\u0026#39;y1\u0026#39;, \u0026#39;=\u0026#39;, y1) print(\u0026#39;y2\u0026#39;, \u0026#39;=\u0026#39;, y2) print(\u0026#39;y3\u0026#39;, \u0026#39;=\u0026#39;, y3) print(\u0026#39;y4\u0026#39;, \u0026#39;=\u0026#39;, y4) print(\u0026#39;y5\u0026#39;, \u0026#39;=\u0026#39;, y5) 条件语句\r#\r\rimport random # python 压根就不支持 switch # python三元运算符 也是没有的 a1 = random.random() a2 = random.random() if (a1 \u0026gt;= a2): print(\u0026#34;a1大于a2\u0026#34;, a1, \u0026#34; \u0026#34;, a2) print(\u0026#34;结束\u0026#34;) b1 = 12 + random.random() b2 = 12 + random.random() if (b1 == b2): print(\u0026#34;b1==b2\u0026#34;) print(\u0026#34;比较结束\u0026#34;) elif (b1 \u0026lt; b2): print(\u0026#34;b1\u0026lt;b2\u0026#34;) print(\u0026#34;比较结束\u0026#34;) else: print(\u0026#34;不符合\u0026#34;) print(\u0026#34;比较结束\u0026#34;) 循环语句\r#\r\rimport random for x in range(2, 10): print(\u0026#34;x:\u0026#34;, x) print(\u0026#34; \u0026#34;) maxValue = 50 while (maxValue \u0026gt; 0): maxValue -= random.random() print(\u0026#34;maxValue:\u0026#34;, maxValue) print(\u0026#34; \u0026#34;) minValue = 0 while (minValue \u0026lt; 100): minValue += random.random() * 10 print(\u0026#34;minValue:\u0026#34;, minValue) print(\u0026#34; \u0026#34;) for x in range(2,20): if(x % 2 == 0): print(\u0026#34;偶数:\u0026#34;,x) elif(x % 3 == 0): print(\u0026#34;能被3整除:\u0026#34;, x) else: print(\u0026#34;临时变量:\u0026#34;, x) # break 语句\r#\r\rstr1 = \u0026#34;人生五十年,如梦亦如幻。有生斯有死,壮士复何憾\u0026#34; for x in str1: print(\u0026#34;x:\u0026#34;,x) if(x == \u0026#34;,\u0026#34;): break str2 = \u0026#34;Hubei couple opt for romantic, not lavish, wedding\u0026#34; for y in str2: if(y == \u0026#39; \u0026#39;): continue else: print(y) # pass 语句\r#\r\rPython pass 是空语句，是为了保持程序结构的完整性。\npass 不做任何事情，一般用做占位语句。\nimport random index = 0 for i in range(2, int(random.random() * 100), 3): if (i % 2 \u0026gt;= 3): pass print(i) pass 字符串\r#\r\r字符串是 Python 中最常用的数据类型。我们可以使用引号 ( ' 或 \u0026quot; ) 来创建字符串。\nstr1 = \u0026#39;The Most Beautiful Swiss Books China Tour will be on exhibit in Shanghai from February 10 to 13 at Shanghai Ming Contemporary Art Museum\u0026#39; print(str1) print(str1[0]) print(str1[1]) print(max(str1)) print(min(str1)) print(str1.upper()) 列表(List)\r#\r\rimport random # 自己定义一个字符串函数 def randomString(): arr = [] str_value = \u0026#34;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\u0026#34;#$%\u0026amp;\u0026#39;()*+,-./:;?@[\\]^_`{|}~\u0026#34; len_value = len(str_value) for x in range(1,10): index = int(random.uniform(0,len_value)) arr.append(str_value[index]) return \u0026#34;-\u0026#34;.join(arr) arr1 = [int(random.random() * 10), int(random.random() * 10), int(random.random() * 10), int(random.random() * 10)] print(arr1) print(arr1[0]) print(arr1[1]) print(\u0026#34;len\u0026#34;,len(arr1)) arr1.reverse() print(arr1) arr1.sort() print(arr1) arr2 = [] arr3 = [] print(randomString()) for x in range(1,5): arr2.append(randomString()) arr3.append(randomString()) pass print(arr2) # 删除第一个元素 del arr2[0] print(arr2) arr2.insert(0,\u0026#39;a\u0026#39;) print(arr2) arr2.pop(1) print(arr2) arr2.remove(\u0026#34;a\u0026#34;) print(arr2) 函数\r#\r\r# 打印一下 def printNew(temp): print(temp) pass # 加法 def add(a, b): return a + b # 减法 def sub(x, y): return x - y # 除法 def div(x, y): return x / y # 取模 def takingMold(m, n): return m % n # 次方 def runPower(m, n): return m ** n a = runPower(2, 3) print(a) 元组\r#\r\r Python 的元组与列表类似，不同之处在于元组的元素不能修改 元组使用小括号，列表使用方括号  tup1 = (1,3) tup2 = (\u0026#39;abc\u0026#39;, \u0026#39;xyz\u0026#39;) print(tup1[0]) print(tup1[1]) # 以下修改元组元素操作是非法的 # tup1[0] = 100 # 元组 不能修改但是可以组合 # 但我们可以对元组进行连接组合 # 创建一个新的元组 tup3 = tup1 + tup2 print(tup3) 字典(Dictionary)\r#\r\r字典是另一种可变容器模型，且可存储任意类型对象。\n字典的每个键值 key:value 对用冒号 : 分割，每个键值对之间用逗号 , 分割，整个字典包括在花括号 {} 中 ,格式如下所示：\nd = {key1 : value1, key2 : value2 } 重要函数\r#\r\rrange\r#\r\rrange()的三种创建方式：\n第一种：只有一个参数（小括号中只给了一个数）即range(stop)\n第二种：range(start,stop) （给了两个参数，即小括号中给了两个数）\n第三种：range(start,stop,step)：创建一个在[start,stop)之间，步长为step;\narr0 = range(10) for kk in arr0: print(kk) print(\u0026#34;--------------------------\u0026#34;) arr1 = range(2, 7) for i in arr1: print(i) print(\u0026#34;..............................\u0026#34;) arr2 = range(20, 100, 10) for k in arr2: print(k) 模块\r#\r\r Python 模块(Module)，是一个 Python 文件，以 .py 结尾，包含了 Python 对象定义和Python语句\n  mathModule.py  import random # 随机整数 def randomInt(): temp = int(random.random() * 1000) temp += int(random.uniform(0, 100)) return temp # 随机浮点数 def randomFloat(): temp = 0 temp += random.random() * 10 temp *= random.random() return temp # 获取单独一个asii 字符 def getOneChar(): # 小写字母a-z：97-122 arr1 = range(97, 122) # 大写字母A-Z：65-90 arr2 = range(65, 90) # 数字0-9：48-57 arr3 = range(48, 57) arr0 = [] arr0.extend(arr1) arr0.extend(arr2) arr0.extend(arr3) index = int(random.uniform(0, len(arr0))) tempNumber = arr0[index] return chr(tempNumber) # 获取随机字符串 def randomString(tempLen): temp = \u0026#34;\u0026#34; for x in range(1, tempLen): temp += getOneChar() return temp import mathModule # 只有同级目录才能这样 print(mathModule.randomInt()) print(mathModule.randomFloat()) print(mathModule.getOneChar()) print(mathModule.randomString(92))  导入非本级模块  import sys sys.path.append(\u0026#34;D:\\\\pythonProjects\\\\t2\\\\gg\u0026#34;) import newmodule print(sys) newmodule.newPrint(\u0026#39;sdhsdhsh\u0026#39;) or\nimport sys import os #父路径 str1 = os.path.abspath(os.path.join(os.getcwd(), os.pardir)) #再次取父路径 str1 = os.path.abspath(os.path.join(str1, os.pardir)) sys.path.append(str1+\u0026#34;\\\\gg\u0026#34;) import newmodule newmodule.newPrint(\u0026#39;kkkk\u0026#39;) 文件\r#\r\r open()  open() 函数用于创建或打开指定文件，该函数的常用语法格式如下：\nfile = open(file_name [, mode='r' [ , buffering=-1 [ , encoding = None ]]])\r此格式中，用 [] 括起来的部分为可选参数，即可以使用也可以省略。其中，各个参数所代表的含义如下：\n  file：表示要创建的文件对象。\n  file_name：要创建或打开文件的文件名称，该名称要用引号（单引号或双引号都可以）括起来。需要注意的是，如果要打开的文件和当前执行的代码文件位于同一目录，则直接写文件名即可；否则，此参数需要指定打开文件所在的完整路径。\n  mode：可选参数，用于指定文件的打开模式。可选的打开模式如表 1 所示。如果不写，则默认以只读（r）模式打开文件。\n  buffering：可选参数，用于指定对文件做读写操作时，是否使用缓冲区（本节后续会详细介绍）。\n  encoding：手动设定打开文件时所使用的编码格式，不同平台的 ecoding 参数值也不同，以 Windows 为例，其默认为 cp936（实际上就是 GBK 编码）。\n  open 函数支持的文件打开模式\n     模式 意义 注意事项     r 只读模式打开文件，读文件内容的指针会放在文件的开头。 操作的文件必须存在。   rb 以二进制格式、采用只读模式打开文件，读文件内容的指针位于文件的开头，一般用于非文本文件，如图片文件、音频文件等。    r+ 打开文件后，既可以从头读取文件内容，也可以从开头向文件中写入新的内容，写入的新内容会覆盖文件中等长度的原有内容。    rb+ 以二进制格式、采用读写模式打开文件，读写文件的指针会放在文件的开头，通常针对非文本文件（如音频文件）。    w 以只写模式打开文件，若该文件存在，打开时会清空文件中原有的内容。 若文件存在，会清空其原有内容（覆盖文件）；反之，则创建新文件。   wb 以二进制格式、只写模式打开文件，一般用于非文本文件（如音频文件）    w+ 打开文件后，会对原有内容进行清空，并对该文件有读写权限。    wb+ 以二进制格式、读写模式打开文件，一般用于非文本文件    a 以追加模式打开一个文件，对文件只有写入权限，如果文件已经存在，文件指针将放在文件的末尾（即新写入内容会位于已有内容之后）；反之，则会创建新文件。     ab 以二进制格式打开文件，并采用追加模式，对文件只有写权限。如果该文件已存在，文件指针位于文件末尾（新写入文件会位于已有内容之后）；反之，则创建新文件。     a+ 以读写模式打开文件；如果文件存在，文件指针放在文件的末尾（新写入文件会位于已有内容之后）；反之，则创建新文件。     ab+ 以二进制模式打开文件，并采用追加模式，对文件具有读写权限，如果文件存在，则文件指针位于文件的末尾（新写入文件会位于已有内容之后）；反之，则创建新文件。       File对象的属性     属性 描述     file.closed 返回true如果文件已被关闭，否则返回false。   file.mode 返回被打开文件的访问模式。   file.name 返回文件的名称。   file.softspace 如果用print输出后，必须跟一个空格符，则返回false。否则返回true。     如下实例：  def fileF4(dir): f1 = open(dir, \u0026#34;r+\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) print(\u0026#34;文件名: \u0026#34;, f1.name) print(\u0026#34;是否已关闭: \u0026#34;, f1.closed) print(\u0026#34;访问模式: \u0026#34;, f1.mode) fileF4(\u0026#34;D:\\\\pythonProjects\\\\t2\\\\readme.md\u0026#34;)  open() 使用的一些例子  import os import random import time dir1 = \u0026#34;D:\\\\pythonProjects\\\\t2\\\\打包编辑器安装.md\u0026#34; def fileF1(dir): f1 = open(dir, \u0026#34;r\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) # 读取 # file 表示已打开的文件对象；size 作为一个可选参数，用于指定一次最多可读取的字符（字节）个数，如果省略，则默认一次性读取所有内容 # print(f1.read()) print(f1.read(20)) # 关闭文件 f1.close() def fileF2(dir): f1 = open(dir, \u0026#34;r+\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) # file 为打开的文件对象；size 为可选参数，用于指定读取每一行时，一次最多读取的字符（字节）数 print(f1.readline()) print(f1.readline(1)) print(f1.readline(2)) print(f1.readline(5)) # 关闭文件 f1.close() def fileF3(dir): f1 = open(dir, \u0026#34;r+\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) # readlines() 函数用于读取文件中的所有行，它和调用不指定 size 参数的 read() 函数类似，只不过该函数返回是一个字符串列表，其中每个元素为文件中的一行内容。 lines = f1.readlines() for str in lines: print(str) f1.close() def fileF4(dir): f1 = open(dir, \u0026#34;r+\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) print(\u0026#34;文件名: \u0026#34;, f1.name) print(\u0026#34;是否已关闭: \u0026#34;, f1.closed) print(\u0026#34;访问模式: \u0026#34;, f1.mode) def fileF5(): # write()方法可将任何字符串写入一个打开的文件。需要重点注意的是，Python字符串可以是二进制数据，而不是仅仅是文字。 # write()方法不会在字符串的结尾添加换行符(\u0026#39;\\n\u0026#39;)： # 语法 fileObject.write(string) num1 = int(time.time()) num2 = int(random.random() * 100 * random.random()) * int(random.random() * 100) + int(random.random() * 100 * random.random()) str2 = os.path.abspath(os.path.join(os.getcwd(), os.pardir)) + \u0026#34;\\\\file\u0026#34; + \u0026#34;\\\\\u0026#34; + str(num1) + \u0026#34;.txt\u0026#34; fo = open(str2, \u0026#34;w\u0026#34;) fo.write(str(num2 + time.time())) fo.flush() fo.close() def fileF6(): strList = [] for x in range(0,100): strList.append(str(time.time() * time.time()) + \u0026#39;\\n\u0026#39; ) str2 = os.path.abspath(os.path.join(os.getcwd(), os.pardir)) + \u0026#34;\\\\file\u0026#34; + \u0026#34;\\\\\u0026#34; + str(float(time.time())) + \u0026#34;_writelines.txt\u0026#34; fo = open(str2, \u0026#34;w\u0026#34;) # 写入函数只有 write() 和 writelines() 函数，而没有名为 writeline 的函数 fo.writelines(strList) fo.flush() fo.close() # fileF1(dir1) # fileF2(dir1) # fileF3(dir1) # fileF4(dir1) # fileF5() fileF6() OS\r#\r\r os.path 模块     方法 说明     os.getcwd() 返回当前工作目录   os.path.abspath(path) 返回 path 的绝对路径。   os.path.basename(path) 获取 path 路径的基本名称，即 path 末尾到最后一个斜杠的位置之间的字符串。   os.path.commonprefix(list) 返回 list（多个路径）中，所有 path 共有的最长的路径。   os.path.dirname(path) 返回 path 路径中的目录部分。   os.path.exists(path) 判断 path 对应的文件是否存在，如果存在，返回 True；反之，返回 False。和 lexists() 的区别在于，exists()会自动判断失效的文件链接（类似 Windows 系统中文件的快捷方式），而 lexists() 却不会。   os.path.lexists(path) 判断路径是否存在，如果存在，则返回 True；反之，返回 False。   os.path.expanduser(path) 把 path 中包含的 \u0026ldquo;~\u0026rdquo; 和 \u0026ldquo;~user\u0026rdquo; 转换成用户目录。   os.path.expandvars(path) 根据环境变量的值替换 path 中包含的 \u0026ldquo;$name\u0026rdquo; 和 \u0026ldquo;${name}\u0026quot;。   os.path.getatime(path) 返回 path 所指文件的最近访问时间（浮点型秒数）。   os.path.getmtime(path) 返回文件的最近修改时间（单位为秒）。   os.path.getctime(path) 返回文件的创建时间（单位为秒，自 1970 年 1 月 1 日起（又称 Unix 时间））。   os.path.getsize(path) 返回文件大小，如果文件不存在就返回错误。   os.path.isabs(path) 判断是否为绝对路径。   os.path.isfile(path) 判断路径是否为文件。   os.path.isdir(path) 判断路径是否为目录。   os.path.islink(path) 判断路径是否为链接文件（类似 Windows 系统中的快捷方式）。   os.path.ismount(path) 判断路径是否为挂载点。   os.path.join(path1[, path2[, \u0026hellip;]]) 把目录和文件名合成一个路径。   os.path.normcase(path) 转换 path 的大小写和斜杠。   os.path.normpath(path) 规范 path 字符串形式。   os.path.realpath(path) 返回 path 的真实路径。   os.path.relpath(path[, start]) 从 start 开始计算相对路径。   os.path.samefile(path1, path2) 判断目录或文件是否相同。   os.path.sameopenfile(fp1, fp2) 判断 fp1 和 fp2 是否指向同一文件。   os.path.samestat(stat1, stat2) 判断 stat1 和 stat2 是否指向同一个文件。   os.path.split(path) 把路径分割成 dirname 和 basename，返回一个元组。   os.path.splitdrive(path) 一般用在 windows 下，返回驱动器名和路径组成的元组。   os.path.splitext(path) 分割路径，返回路径名和文件扩展名的元组。   os.path.splitunc(path) 把路径分割为加载点与文件。   os.path.walk(path, visit, arg) 遍历path，进入每个目录都调用 visit 函数，visit 函数必须有 3 个参数(arg, dirname, names)，dirname 表示当前目录的目录名，names 代表当前目录下的所有文件名，args 则为 walk 的第三个参数。   os.path.supports_unicode_filenames 设置是否可以将任意 Unicode 字符串用作文件名。    import os import time # 返回当前工作目录 print(os.getcwd()) # 返回 path 的绝对路径 print(os.path.abspath(os.getcwd())) dir1x = os.getcwd() + \u0026#34;\\\\\u0026#34;+str(int(time.time())) # 创建目录 os.mkdir(dir1x) print(dir1x) # os.chdir(dir1x) # print(\u0026#34;新目录\u0026#34;,os.getcwd()) # 获取 path 路径的基本名称，即 path 末尾到最后一个斜杠的位置之间的字符串 如 readme.md print(os.path.basename(\u0026#34;D:\\\\pythonProjects\\\\t2\\\\readme.md\u0026#34;)) # 判断路径是否为文件 print(os.path.isfile(\u0026#34;D:\\\\pythonProjects\\\\t2\\\\readme.md\u0026#34;)) # 判断路径是否为目录 print(os.path.isdir(\u0026#34;D:\\\\pythonProjects\\\\t2\u0026#34;)) import os import time import random str2 = os.path.abspath(os.path.join(os.getcwd(), os.pardir)) + \u0026#34;\\\\file\u0026#34; + \u0026#34;\\\\\u0026#34; + \u0026#34;_writelines.txt\u0026#34; strDir = os.path.abspath(os.path.join(os.getcwd(), os.pardir)) + \u0026#34;\\\\file\u0026#34; + \u0026#34;\\\\\u0026#34; + str(random.random()) str21 = os.path.abspath(os.path.join(os.getcwd(), os.pardir)) + \u0026#34;\\\\file\u0026#34; + \u0026#34;\\\\\u0026#34; + \u0026#34;_zzx.txt\u0026#34; str3 = os.path.dirname(str2) + \u0026#34;\\\\_v0000.text\u0026#34; os1 = open(str2, \u0026#34;w\u0026#34;) os2 = open(str21, \u0026#34;w\u0026#34;) strList = [] for x in range(0, 100): strList.append(str(time.time() * time.time()) + \u0026#39;\\n\u0026#39;) os1.writelines(strList) os1.flush() os1.close() os2.write(os.getcwd()) os2.flush() os2.close() print(str3) print(str2) # 重命名 os.rename(str2, str3) print(str21) # 删除文件 os.remove(str21) os.mkdir(strDir) print(strDir) # 删除文件夹 os.rmdir(strDir) 面向对象\r#\r\r 类(Class): 用来描述具有相同的属性和方法的对象的集合。它定义了该集合中每个对象所共有的属性和方法。对象是类的实例。 类变量：类变量在整个实例化的对象中是公用的。类变量定义在类中且在函数体之外。类变量通常不作为实例变量使用。 数据成员：类变量或者实例变量, 用于处理类及其实例对象的相关的数据。 方法重写：如果从父类继承的方法不能满足子类的需求，可以对其进行改写，这个过程叫方法的覆盖（override），也称为方法的重写。 局部变量：定义在方法中的变量，只作用于当前实例的类。 实例变量：在类的声明中，属性是用变量来表示的。这种变量就称为实例变量，是在类声明的内部但是在类的其他成员方法之外声明的。 继承：即一个派生类（derived class）继承基类（base class）的字段和方法。继承也允许把一个派生类的对象作为一个基类对象对待。例如，有这样一个设计：一个Dog类型的对象派生自Animal类，这是模拟\u0026quot;是一个（is-a）\u0026ldquo;关系（例图，Dog是一个Animal）。 实例化：创建一个类的实例，类的具体对象。 方法：类中定义的函数。 对象：通过类定义的数据结构实例。对象包括两个数据成员（类变量和实例变量）和方法。  import random class Employee: # 所有员工的基类 empCount 变量是一个类变量，它的值将在这个类的所有实例之间共享 empCount = 0 # 类的构造函数或初始化方法，当创建了这个类的实例时就会调用该方法 def __init__(self, name, salary): self.name = name self.salary = salary Employee.empCount += 1 def displayCount(self): print(\u0026#34;Total Employee\u0026#34;, Employee.empCount, sep=\u0026#34; _\u0026#34;) def displayEmployee(self): print(\u0026#34;name:\u0026#34;, self.name, \u0026#34; ;\u0026#34;, \u0026#34;salary:\u0026#34;, self.salary) # 定义实例 1 t1 = Employee(\u0026#34;张三\u0026#34;, random.random() * random.random() * 10000) t1.displayCount() t1.displayEmployee() # 定义实例 2 t2 = Employee(\u0026#34;李四\u0026#34;, random.random() * random.random() * 10000) t2.displayCount() t2.displayEmployee() 内置类属性\r#\r\r dict : 类的属性（包含一个字典，由类的数据属性组成） doc :类的文档字符串 name: 类名 module: 类定义所在的模块（类的全名是'main.className'，如果类位于一个导入模块mymod中，那么className.module 等于 mymod） bases : 类的所有父类构成元素（包含了一个由所有父类组成的元组）  import random class Person: hand = \u0026#34;\u0026#34; footer = \u0026#34;\u0026#34; head = \u0026#34;\u0026#34; # 这里是继承 Person class Teacher(Person) : # 静态类变量 empCount = 0 def __init__(self,name,position): self.name = name self.position = position def print(self): print(\u0026#34;名字:\u0026#34;,self.name,\u0026#34; 职位:\u0026#34;,self.position) print(\u0026#34;__dict__ \u0026#34;,Teacher.__dict__ ,sep=\u0026#34;:\u0026#34;) print(\u0026#34;__doc__\u0026#34;,Teacher.__doc__,sep=\u0026#34;:\u0026#34;) print(\u0026#34;__name__\u0026#34;,Teacher.__name__,sep=\u0026#34;:\u0026#34;) print(\u0026#34;__module__\u0026#34;,Teacher.__module__,sep=\u0026#34;:\u0026#34;) print(\u0026#34;__bases__ \u0026#34;,Teacher.__bases__ ,sep=\u0026#34;:\u0026#34;) t1 = Teacher(\u0026#39;张老师\u0026#39;,\u0026#39;数学\u0026#39;) t1.print() t2 = Teacher(\u0026#39;李老师\u0026#39;,\u0026#39;英语\u0026#39;) t2.print() 参考1 参考2 参考3 参考4\nhtml转markdown\n"}),a.add({id:22,href:'/life/docs/operating_system/windows/',title:"windows学习与使用 ",section:"计算机操作系统",content:"windows系统\r#\r\r MicrosoftWindows操作系统是美国微软公司研发的一套操作系统，它问世于1985年，起初仅仅是Microsoft-DOS模拟环境，后续的系统版本由于微软不断的更新升级，不但易用，也当前应用最广泛的操作系统。\n Microsoft公司从1983年开始研制Windows系统，最初的研制目标是在MS - DOS的基础上提供一个多任务的图形用户界面。第一个版本的Windows 1.0于1985年问世，它是一个具有图形用户界面的系统软件。1987年推出了Windows 2.0版，最明显的变化是采用了相互叠盖的多窗口界面形式。但这一切都没有引起人们的关注。直到1990年推出Windows 3.0成为一个重要的里程碑，它以压倒性的商业成功确定了Windows系统在PC领域的垄断地位。现今流行的Windows窗口界面的基本形式也是从Windows3.0开始基本确定的。1992年主要针对Windows 3.0的缺点推出了Windows 3.1，为程序开发提供了功能强大的窗口控制能力，使Windows和在其环境下运行的应用程序具有了风格统一、操纵灵活、使用简便的用户界面。Windows3.1在内存管理上也取得了突破性进展。它使应用程序可以超过常规内存空间限制，不仅支持16MB内存寻址，而且在80386及以上的硬件配置上通过虚拟存储方式可以支持几倍于实际物理存储器大小的地址空间。Windows 3.1还提供了一定程度的网络支持、多媒体管理、超文本形式的联机帮助设施等，对应用程序的开发有很大影响。 [3] 众所周知，Windows在个人计算机领域是普及度很高的操作系统。当计算机的体积不断变小，发展成掌上电脑的形态时，Windows系统自然电延伸到这类便携式产品的领域。然而，掌上电脑在续航能力、显示屏幕、输入界面等方面与普通的PC还是有很大差别的，考虑功耗和用户使用习惯等方面的因素，Windows系统针对手持设备的特点进行了多次调整和优化，先后形成了Windows CE，Windows Mobile，Windows Phone等移动版本的系统。 [4] 早期的Windows移动版本系统并未充分考虑智能手机的特点，更多的是从掌上电脑的角度在设计系统。例如，开始菜单虽然在PC上早已为人们所习惯和熟知，但将开始菜单放到手机屏幕上使用时，层层展开的菜单在狭小的屏幕上会让用户很难找到自己所需要的程序。因此，当微软充分认识到移动互联网的发展潜力后，Windows针对智能手机系统的各种设计才逐渐朝着扁平化的风格演变，其中一个特色就是动态磁贴的概念。 [4] 目前，虽然Windows Phone系统凭借Windows系统在桌面计算领域的优势，以及其办公软件Office多年培养起来的庞大用户群体和操作习惯，一直试图在移动计算领域扩大份额。然而，决定一个系统生命力的是应用程序的数量和质量，在这一点上，Windows Phone系统似乎起步太晚了，如何将开发者和用户从已经较为成熟的安卓和iOS系统吸引到这个平台上来是WP面临的最大挑战。 [4] Windows 10 Mobile是微软发发布的一个手机系统 [5] 。\rwindows问题\r#\r\rDOS基础\r#\r\rFTP\r#\r\rDOS常用命令(文件)\r#\r\rDOS常用命令(网络检测)\r#\r\r"}),a.add({id:23,href:'/life/docs/plan/dir/jdkbatmmbr/',title:"任务分类法",section:"计划 ",content:"任务分类法\r#\r\r一:分类的目的是什么？\r#\r\r 不知你会感到这样吗？有时候完成不了任务，可能是当下在犹豫做什么事之中放走了时间。分类可以避免这种情况，让你在需要时，二话不说就可以根据即刻的情况，迅速找到对应清单下的任务开干，减少因为找不到可做任务而拖延的现象。\n 二:任务分类法\r#\r\r 按照任务属性分类，可将事项分类为工作、学习、生活、娱乐…… 🉑这种分类方法最为常见、符合直觉、也适用于大多数人。  三:场景分类法\r#\r\r 可以让你在某种特定的场景下，迅速找到自己当下要做的事情。比如工具场景和地点场景； 🉑任务不多或者在某种特定场景效率更高的人，可采取这种分类  四:四象限分类法\r#\r\r 按照任务的重要紧急程度，将待办事项分类成四个象限：重要紧急、重要不紧急、不重要紧急、不重要不紧急。 🉑适合任务较多、事情繁琐的人使用  五:能量分类法\r#\r\r  按照待办事项需要耗费多少能量，来进行分类。可将其分为：\n  非常耗费能量、比较耗费能量\n  不耗费能量、有助于恢复能量。\n  🉑如果你常有这种差异很大的任务，那么可以试试能量分类法。✨\n  六:时长分类法\r#\r\r 按照任务需花费的时长，将其分类为： 10分钟以内、半个小时以内 30分钟到1个小时、一个小时以上。 🉑非常适合于碎片化时间较多的人。  总结\r#\r\r  🌈分类方法没有好与不好，\n  按照自己的实际情况和使用习惯去分类，才是最适合自己最好的分类方式呀\n  也可以混搭来用💖💖\n  参考1\n  参考2\n  参考3\n  "}),a.add({id:24,href:'/life/docs/operating_system/one_chapter/',title:"第一章 操作系统概述 ",section:"计算机操作系统",content:"操作系统概述\r#\r\r目录\r#\r\r 操作系统的概念、功能 操作系统的特征 操作系统的发展与分类 操作系统的运行机制与体系结构 中断和异常 系统调用 操作系统的体系结构  "}),a.add({id:25,href:'/life/docs/computer_network/network_architecture/',title:"网络体系结构",section:"计算机网络 ",content:"*[·-·]:注释内容\n计算机概念 组成 功能 分类\r#\r\r标准化工作及相关组织\r#\r\r 法定标准 事实标准  分层参考模型\r#\r\r7层 , 4层 ,5层\r#\r\r 计算机概念-组成-功能-分类 标准化工作及相关组织 速率相关的性能指标 分层结构 分层参考模型 模型层次详解  "}),a.add({id:26,href:'/life/docs/computer_network/',title:"计算机网络 ",section:"Docs",content:"目录\r#\r\r 网络体系结构 物理层 数据链路层 网络层 传输层 应用层  st=\u0026gt;start: 开始\rop=\u0026gt;operation: My Operation\rcond=\u0026gt;condition: Yes or No?\re=\u0026gt;end\rst-\u0026gt;op-\u0026gt;cond\rcond(yes)-\u0026gt;e\rcond(no)-\u0026gt;op\r\u0026amp;```\r"}),a.add({id:27,href:'/life/docs/codereview/specification1/',title:"Code review",section:"编码",content:"Code Review目的\r#\r\rCode Review是一种用来确认方案设计和代码实现的质量保证机制，通过这个机制我们 可以对代码、测试过程和注释进行检查。 Code Review主要用来在软件工程过程中改进代码质量，通过Code Review可以达到 如下目的：\n 在项目早期就能够发现代码中的bug，将bug扼杀在摇篮中。 帮助初级开发人员学习高级开发人员的经验，达到知识共享。 避免开发人员犯一些很常见，很普通的错误。 保证项目组人员的良好沟通。 项目或产品的代码更容易维护。 提升代码质量，提高团队开发效率。  Code Review前提条件\r#\r\r代码提交审核前，开发者必须确保代码符合如下条件，审核者需要确保所有前提条件 都已满足方可开始审查，同时也是审查的主要检查点。\n 所有代码注释清晰，语法正确，编译通过。 日志代码完整，中文描述，脱敏处理，状态变更，全部清晰明确。 测试代码覆盖全部分支和流程，暂时统一使用工具Alibaba Java Coding Guidelines(idea 插件）进行代码检查。PS： 使用Alibaba Java Coding Guidelines插件扫描代码后，不符合规范的代码按Blocker（崩溃）/Critical（关键）/Major（重要）分为三个等级，前两个级别必须处理。  Code Review审查范围\r#\r\r代码的一致性、编码风格、代码的安全问题、脱敏问题、代码冗余、是否正确设计以符 合设计要求(性能、功能)与设计文档相同等。\n 完整性检查（功能点、业务日志、异常日志等） 一致性检查（代码逻辑是否符合设计文档，代码风格是否统一等） 正确性检查（编码规范，注释准确，变量定义和使用等） 可修改性检查（如字典值123，使用专门的常量类等） 可预测性检查（死循环、无穷递归、数组越界、空指针等） 可理解性检查（命名规则、注释是否清晰、gitlab修订记录描述清晰等） 代码逻辑检查（如实现过于复杂、代码可读性、扩展性等） PS：优先级从上到下  Code Review的步骤\r#\r\r  (1)Code Review由项目负责人发起，代码编写者、代码评审人和项目负责人参与。\n  (2)代码编写者按照设计文档中的用例（或流程图）依次讲解自己所写的代码和相关逻辑，可采用从前端到后台的方式，例如从Web层-\u0026gt;DAO层。\n  (3)代码评审人在此过程中可以随时提出自己的疑问，同时积极发现隐藏的bug ;\n  项目负责人对这些bug记录在案。\n  (4)项目负责人将审核结果、审核记录提交至gitlab。\n  (5)代码编写者根据gitlab审核结果，进行代码修改。\n  (6)代码编写者代码修改完成后提交项目负责人再次进行审核。\n  (7)代码评审结束后，将有价值的问题归纳总结。\n  Code Review的时间\r#\r\rCode Review由项目负责人发起，一个项目过程中至少2-3次，主要集中在项目中后期，如果项目规模较大，功能较多，时间比较宽裕，也可适当增加。\nCode Review的对象\r#\r\r项目开发人员。\nCode Review参与对象\r#\r\r相关技术人员。\n"}),a.add({id:28,href:'/life/docs/codereview/design_pattern/singleton_pattern/',title:"创建型 - 单例模式(Singleton pattern)",section:"设计模式",content:"单例模式\r#\r\r"}),a.add({id:29,href:'/life/docs/car_study/one/',title:"科目一",section:"汽车教学",content:"a部分视频\nb部分视频\nc部分视频\n"}),a.add({id:30,href:'/life/docs/javadir/tooldoc/apache-common%E5%B7%A5%E5%85%B7%E5%8C%85/',title:"Apache Commons 工具类介绍及简单使用",section:"Java公共库文档总结 ",content:"Apache Commons 工具类介绍及简单使用\r#\r\r   组件 功能介绍     BeanUtils Commons-BeanUtils 提供对 Java 反射和自省API的包装, 提供了对于JavaBean进行各种操作，克隆对象,属性等等.   Betwixt XML与Java对象之间相互转换.   Codec 处理常用的编码方法的工具类包 例如DES、SHA1、MD5、Base64等.   Collections java集合框架操作.   Compress java提供文件打包 压缩类库.   Configuration Commons-Configuration 工具对各种各式的配置和参考文件提供读取帮助,java应用程序的配置管理类库.   DBCP 提供数据库连接池服务.   DbUtils DbUtils 是一个 JDBC helper 类库，完成数据库任务的简单的资源清除代码,提供对jdbc 的操作封装来简化数据查询和记录读取操作   Email java发送邮件 对javamail的封装.   FileUpload 提供文件上传功能.   HttpClient 提供HTTP客户端与服务器的各种通讯操作. 现在已改成HttpComponents   Lang Java基本对象方法的工具类包 如：StringUtils,ArrayUtils等等.   Logging 提供的是一个Java 的日志接口.   Validator 提供了客户端和服务器端的数据验证框架.   Primitives Commons-Primitives提供了一个更小，更快和更易使用的对Java基本类型的支持。当前主要是针对基本类型的 collection。   Math Math 是一个轻量的，自包含的数学和统计组件，解决了许多非常通用但没有及时出现在Java标准语言中的实践问题   EL Commons-EL 提供在JSP2.0规范中定义的EL表达式的解释器.   Discovery Commons-Discovery 提供工具来定位资源 (包括类) ，通过使用各种模式来映射服务/引用名称和资源名称。   Digester Commons-Digester 是一个 XML-Java对象的映射工具，用于解析 XML配置文件.   Chain Chain 提供实现组织复杂的处理流程的“责任链模式”   Modeler Commons-Modeler 提供了建模兼容JMX规范的Mbean的机制.   Net Net 是一个网络工具集，基于 NetComponents 代码，包括 FTP 客户端等等    一:org.apache.commons.lang\r#\r\r ArrayUtils – 用于对数组的操作，如添加、查找、删除、子数组、倒序、元素类型转换等；  ArrayUtils类\rArrayUtils.toString(array) 将数组转为为字符串，格式如：{2,4,8,16}\rArrayUtils.contains(array,8) 判断数组中是否包含数字8，（一维数组）\rArrayUtils.indexOf(array,8) 判断数组中第一个8的位置（一维数组）\rArrayUtils.lastIndexOf(array,8) 判断数组中最后一个8的位置。（一维数组）\rArrayUtils.clone(array) 给一个一维数组来个拷贝\rArrayUtils.reverse(array); 翻转该一维数组\rArrayUtils.toMap(array); 将一个二维数组转换为map，二维数组中至少与两列，第一列为key第二列为value == \u0026gt;注意的是传入toMap()中的二维数组必须是对象如Integer\r  BitField – 用于操作位元，提供了一些方便而安全的方法；\n  BooleanUtils – 用于操作和转换 boolean 或者 Boolean 及相应的数组；\n   boolean[] booleans = new boolean[]{true, false, true};\r//和，并且\rSystem.out.println(BooleanUtils.and(booleans));//false\r//或者\rSystem.out.println(BooleanUtils.or(booleans));//true\rProjectInfo projectInfo = null;\rif (projectInfo != null \u0026amp;\u0026amp; projectInfo.getId() != 0);\r//可以用上面的改为\rBooleanUtils.and(new boolean[]{projectInfo != null,projectInfo.getId() != 0});\rInteger integer = 0;\rSystem.out.println(BooleanUtils.toBooleanObject(integer));//false\r CharEncoding – 包含了 Java 环境支持的字符编码，提供是否支持某种编码的判断；  System.out.println(CharEncoding.ISO_8859_1);\rSystem.out.println(CharEncoding.US_ASCII);\rSystem.out.println(CharEncoding.UTF_8);\rSystem.out.println(CharEncoding.UTF_16);\rSystem.out.println(CharEncoding.UTF_16BE);\rSystem.out.println(CharEncoding.UTF_16LE);\r CharRange – 用于设定字符范围并做相应检查；  System.out.println(CharUtils.toChar(\u0026quot;hello\u0026quot;,'o'));\rint assii = CharUtils.toIntValue('2');//检查字符是否在0-9\rSystem.out.println(assii);\r CharSet – 用于设定一组字符作为范围并做相应检查；(我的理解是可以用作正则表达式的判断)  System.out.println(CharSet.ASCII_ALPHA.toString());//[a-z, A-Z]\rSystem.out.println(CharSet.ASCII_ALPHA.contains('B'));//判断char是否在这个范围内\rSystem.out.println(CharSet.ASCII_ALPHA_LOWER.contains('l'));//判断char是否在这个范围内\rSystem.out.println(CharSet.ASCII_NUMERIC.contains('8'));//判断char是否在这个范围内\rSystem.out.println(CharSet.getInstance(\u0026quot;s\u0026quot;));//[s]\r CharSetUtils – 用于操作 CharSet ；   /*这里面所以的输入字符串都会被拆成char[]来判定*/\r//删除指定的字符(假如删除的这个会重复那么也会被删除掉)\rSystem.out.println(CharSetUtils.delete(\u0026quot;hello World !\u0026quot;,\u0026quot; o\u0026quot;));//helloWorld! , hellWrld! ==\u0026gt; input [ o]和[o] 结果都不同\r//是否包含任意一个字符\rSystem.out.println(CharSetUtils.containsAny(\u0026quot;xudaollong\u0026quot;,\u0026quot;k\u0026quot;,\u0026quot;o\u0026quot;));\r//当有重复的时候只删除第一次的\rSystem.out.println(CharSetUtils.squeeze(\u0026quot;china dong kk a\u0026quot;,\u0026quot;k\u0026quot;));\r//保留指定的char 要注意的是指定的char,这虽然输入的是字符串dong,但是在判定的时候实际上是把这个字符串拆成char[]\rSystem.out.println(CharSetUtils.keep(\u0026quot;china g dong\u0026quot;,\u0026quot;dong\u0026quot;));\r//统计char出现的次数\rSystem.out.println(CharSetUtils.count(\u0026quot;hello world\u0026quot;, \u0026quot;o\u0026quot;));\r CharUtils – 用于操作 char 值和 Character 对象；  System.out.println(CharUtils.toChar(\u0026quot;hello\u0026quot;,'o'));\rint num = CharUtils.toIntValue('2');//获取int类型的char但是char必须在Ascii码中\rSystem.out.println(num);\rSystem.out.println(CharUtils.isAsciiNumeric('u'));//false\rSystem.out.println(CharUtils.isAsciiNumeric('7'));//true\rSystem.out.println(CharUtils.isAscii('h'));//判断是否在Ascii 128 范围类,是否属于Ascii\r ClassUtils – 用于对 Java 类的操作，不使用反射；  System.out.println(ClassUtils.getShortClassName(UserDO.class));//返回 UserDO\rSystem.out.println(ClassUtils.getName(UserDO.class));//返回 包名.UserDO\rSystem.out.println(ClassUtils.getPackageName(UserDO.class));//返回 包名\rSystem.out.println(ClassUtils.getShortCanonicalName(UserDO.class));//返回 UserDO\rSystem.out.println(ClassUtils.getSimpleName(UserDO.class));//返回 UserDO\rSystem.out.println(ClassUtils.getAbbreviatedName(UserDO.class,2));\rClassUtils.getAllSuperclasses(UserDO.class).stream().forEachOrdered(System.out::println);//获取父类\rClassUtils.getAllInterfaces(UserDO.class).stream().forEachOrdered(System.out::println);//获取接口\r ObjectUtils – 用于操作 Java 对象，提供 null 安全的访问和其他一些功能；  UserDO userDO = new UserDO(Zhou_Word.getEnglishName());\rUserDO userDO1 = ObjectUtils.clone(userDO);\ruserDO1 = null;\ruserDO = Preconditions.checkNotNull(userDO, \u0026quot;不能为null\u0026quot;);//不会抛出NullPointerException\r/**如果一个类没有重写toString方法本身，将会通过Object类的toString方法获取对象的字符串对象，*/\rSystem.out.println(ObjectUtils.identityToString(null));//null\rSystem.out.println(ObjectUtils.identityToString(\u0026quot;\u0026quot;));//java.lang.String@12843fce\rSystem.out.println(ObjectUtils.identityToString(Boolean.TRUE));//java.lang.Boolean@3dd3bcd\r/**\r* 累加对象产生的toString\r* 两个参数任意一个为null都会抛出空指针异常\r* buffer-要追加的缓冲区\r* object-要创建对象的toString\r*/\rStringBuffer buffer = new StringBuffer();\rObjectUtils.identityToString(buffer, \u0026quot;\u0026quot;);\rObjectUtils.identityToString(buffer, Boolean.TRUE);\rObjectUtils.identityToString(buffer, 12);\rSystem.out.println(buffer.toString());//java.lang.String@12843fcejava.lang.Boolean@3dd3bcdjava.lang.Integer@97e1986 调用了Object类的toString方法\r//封装类型的数字比较\rInteger a = 10, b = null, c = 15;\r//比较两个封装类型的数字,默认null为小\rObjectUtils.compare(a, b);\r//比较两个封装类型的数字,设置null为大\rObjectUtils.compare(a, b, true);\r//获取最大的值,默认null为最小\rObjectUtils.max(a, b);\r RandomStringUtils – 用于生成随机的字符串；  System.out.println(RandomStringUtils.random(4).length());\rSystem.out.println(RandomStringUtils.random(23));//生成指定长度任意的随机字符\rSystem.out.println(RandomStringUtils.randomNumeric(22));//生成数字组成的随机字符\rSystem.out.println(RandomStringUtils.randomAscii(22));//生成ascii 128内的随机字符\rSystem.out.println(RandomStringUtils.randomAlphabetic(21));//生成大写或者小写或者都有组成的随机字符\r  SerializationUtils – 用于处理对象序列化，提供比一般 Java 序列化更高级的处理能力；\n  StringEscapeUtils – 用于正确处理转义字符，产生正确的 Java 、 JavaScript 、 HTML 、 XML 和 SQL 代码；\n  String str = \u0026quot;thi is a test 这是一个测试\u0026quot;;\rString xml = \u0026quot;\u0026lt;?xml version=\\\u0026quot;1.0\\\u0026quot; encoding=\\\u0026quot;UTF-8\\\u0026quot;?\u0026gt;\\n\u0026quot; +\r\u0026quot;\u0026lt;persons\u0026gt;\\n\u0026quot; +\r\u0026quot; \u0026lt;person id=\\\u0026quot;23\\\u0026quot;\u0026gt;\\n\u0026quot; +\r\u0026quot; \u0026lt;name\u0026gt;张 三\u0026lt;/name\u0026gt;\\n\u0026quot; +\r\u0026quot; \u0026lt;age\u0026gt;26\u0026lt;/age\u0026gt;\\n\u0026quot; +\r\u0026quot; \u0026lt;/person\u0026gt;\\n\u0026quot; +\r\u0026quot; \u0026lt;person id=\\\u0026quot;22\\\u0026quot;\u0026gt;\\n\u0026quot; +\r\u0026quot; \u0026lt;name\u0026gt;李四\u0026lt;/name\u0026gt;\\n\u0026quot; +\r\u0026quot; \u0026lt;age\u0026gt;25\u0026lt;/age\u0026gt;\\n\u0026quot; +\r\u0026quot; \u0026lt;/person\u0026gt;\\n\u0026quot; +\r\u0026quot;\u0026lt;/persons\u0026gt;\u0026quot;;\rSystem.out.println(\u0026quot;用escapeJava方法转义之后的字符串为:\u0026quot; + org.apache.commons.lang.StringEscapeUtils.escapeJava(str));\rSystem.out.println(\u0026quot;用unescapeJava方法反转义之后的字符串为:\u0026quot; + org.apache.commons.lang.StringEscapeUtils.unescapeJava(org.apache.commons.lang.StringEscapeUtils.escapeJava(str)));\rSystem.out.println(\u0026quot;用escapeHtml方法转义之后的字符串为:\u0026quot; + org.apache.commons.lang.StringEscapeUtils.escapeHtml(str));\rSystem.out.println(\u0026quot;用unescapeHtml方法反转义之后的字符串为:\u0026quot; + org.apache.commons.lang.StringEscapeUtils.unescapeHtml(org.apache.commons.lang.StringEscapeUtils.escapeHtml(str)));\rSystem.out.println(\u0026quot;用escapeXml方法转义之后的字符串为:\u0026quot; + org.apache.commons.lang.StringEscapeUtils.escapeXml(xml));\rSystem.out.println(\u0026quot;用unescapeXml方法反转义之后的字符串为:\u0026quot; + org.apache.commons.lang.StringEscapeUtils.unescapeXml(org.apache.commons.lang.StringEscapeUtils.escapeXml(xml)));\rSystem.out.println(\u0026quot;用escapeJavaScript方法转义之后的字符串为:\u0026quot; + org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(str));\rSystem.out.println(\u0026quot;用unescapeJavaScript方法反转义之后的字符串为:\u0026quot; + org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(org.apache.commons.lang.StringEscapeUtils.unescapeJavaScript(str)));\r StringUtils – 处理 String 的核心类，提供了相当多的功能；  System.out.println(StringUtils.isNotEmpty(\u0026quot; \u0026quot;)); //true\rSystem.out.println(StringUtils.isNotBlank(\u0026quot; \u0026quot;));//这个方法里面字符串空白会删除空白 false\rSystem.out.println( StringUtils.repeat( \u0026quot;China \u0026quot;, 5));//将目标字符串累加5次\rSystem.out.println( StringUtils.center( \u0026quot;China\u0026quot;, 10,\u0026quot;*\u0026quot;));//**China*** size=10指的是得到的长度为10 将china用*前后包围然后目标长度截取为10\rSystem.out.println(StringUtils.countMatches( \u0026quot;Chinese People\u0026quot;, \u0026quot;e\u0026quot;));//取得某字符串在另一字符串中出现的次数\rString formatted = \u0026quot; 25 * (30,40) [50,60] | 30\u0026quot;;\rSystem.out.print(\u0026quot;N0: \u0026quot; + StringUtils.substringBeforeLast( formatted, \u0026quot;*\u0026quot; ) );//取得最后一个指定字符串之前的字符串\rSystem.out.print(\u0026quot;, N1: \u0026quot; + StringUtils.substringBetween( formatted, \u0026quot;(\u0026quot;, \u0026quot;,\u0026quot; ) );//取得两字符之间的字符串\rSystem.out.print(\u0026quot;, N2: \u0026quot; + StringUtils.substringBetween( formatted, \u0026quot;,\u0026quot;, \u0026quot;)\u0026quot; ) );\rSystem.out.print(\u0026quot;, N3: \u0026quot; + StringUtils.substringBetween( formatted, \u0026quot;[\u0026quot;, \u0026quot;,\u0026quot; ) );\rSystem.out.print(\u0026quot;, N4: \u0026quot; + StringUtils.substringBetween( formatted, \u0026quot;,\u0026quot;, \u0026quot;]\u0026quot; ) );\rSystem.out.print(\u0026quot;, N5: \u0026quot; + StringUtils.substringAfterLast( formatted, \u0026quot;|\u0026quot; ) );//取得最后一个指定字符串之后的字符串\rSystem.out.println( StringUtils.reverse(\u0026quot;ABCDE\u0026quot;));//颠倒字符串 EDCBA\r根据指定分隔符进行反转，分隔符之间的字符不进行反转\rStringUtils.reverseDelimited(\u0026quot;china\u0026quot;, ',')); // china\rStringUtils.reverseDelimited(\u0026quot;cxhinxa\u0026quot;, 'x')); // axhinxz\rStringUtils.reverseDelimited(\u0026quot;c.hin.a\u0026quot;, '.')); // a.hin.c\rStringUtils.reverseDelimited(\u0026quot;c.hina\u0026quot;, '.')); // hina.c\rSystem.out.println(StringUtils.capitalize(\u0026quot;hello\u0026quot;));//首字母大写\rSystem.out.println(StringUtils.uncapitalize(this.getClass().getSimpleName()));//首字母小写\rSystem.out.println(StringUtils.isAllUpperCase(this.getClass().getSimpleName()));//是否全是大写 false\rSystem.out.println(StringUtils.isAllLowerCase(this.getClass().getSimpleName()));//是否全是小写 false\rSystem.out.println(StringUtils.swapCase(\u0026quot;I am a-A*a\u0026quot;));//大小写转换，空格不动 i AM A-a*A\rSystem.out.println(StringUtils.join(new String[] {\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot; ,\u0026quot;c\u0026quot;},\u0026quot;,\u0026quot;));//分割字符串 a,b,c\r判断字符串中是否包含指定的字符或字符序列\r1:区分大小写\rStringUtils.contains(null, 'a'); // false StringUtils.contains(\u0026quot;china\u0026quot;, 'a');// true\r2:不区分大小写\rStringUtils.containsIgnoreCase(\u0026quot;china\u0026quot;, 'a');// true\rStringUtils.containsIgnoreCase(\u0026quot;china\u0026quot;, 'A');// true\r3:只需要包含任意一个字符即可 判断字符串中是否包含指定字符集合中或指定字符串中任一字符，区分大小写\rStringUtils.containsAny(\u0026quot;abc\u0026quot;, \u0026quot;ab\u0026quot;);// true\rStringUtils.containsAny(\u0026quot;abc\u0026quot;, \u0026quot;ax\u0026quot;);// true\rStringUtils.containsAny(\u0026quot;abc\u0026quot;, \u0026quot;xy\u0026quot;);// false\r4:判断字符串中是否不包含指定的字符或指定的字符串中的字符，区分大小写\rStringUtils.containsNone(null, 'a'); // true\rStringUtils.containsNone(\u0026quot;\u0026quot;, 'a'); // true 注意这里，空串总是返回true\rStringUtils.containsNone(\u0026quot;china\u0026quot;, ' '); // true 注意包含空白符为true\r从字符串中移除匹配的字符或字符序列，如果要移除的字符或字符序列在字符串中不存在，即无匹配，则不进行移除\r1:移除单个字符\rStringUtils.remove(null, 'a')); // null (注意此处及下一行为null)\rStringUtils.remove('china', null) // china StringUtils.remove(\u0026quot;china\u0026quot;, 'i')); // chna\rStringUtils.remove(\u0026quot;china\u0026quot;, 'b')); // china (如果要移除的字符不存在，则返回原字符串)\r2:移除指定字符序列\rStringUtils.remove(\u0026quot;china\u0026quot;, \u0026quot;in\u0026quot;)); // cha\rStringUtils.remove(\u0026quot;china\u0026quot;, \u0026quot;nin\u0026quot;)); // china\r3:移除开头匹配的字符序列\rStringUtils.removeStart(\u0026quot;china\u0026quot;, \u0026quot;ch\u0026quot;)); // ina\rStringUtils.removeStartIgnoreCase(\u0026quot;china\u0026quot;, \u0026quot;CHI\u0026quot;)); // na (忽略大小写)\r4:移除结尾匹配的字符序列\rStringUtils.removeEnd(\u0026quot;china\u0026quot;, \u0026quot;na\u0026quot;)); // chi\rStringUtils.removeEndIgnoreCase(\u0026quot;china\u0026quot;, \u0026quot;NA\u0026quot;)); // chi (忽略大小写)\r5:移除空白字符\rStringUtils.deleteWhitespace(null)); //null\rStringUtils.deleteWhitespace(\u0026quot; c h i\\tn\\ra\u0026quot;)); // china\r SystemUtils – 在 java.lang.System 基础上提供更方便的访问，如用户路径、 Java 版本、时区、操作系统等判断；  System.out.println(SystemUtils.getHostName());//DESKTOP-AS9FA6P\rSystem.out.println(SystemUtils.getUserDir().getPath());//E:\\IdeaProjects\\z-utils\rSystem.out.println(SystemUtils.getUserHome().getPath());//C:\\Users\\noatn\rSystem.out.println(SystemUtils.getJavaHome().getPath());//C:\\Program Files\\Java\\jdk1.8.0_181\\jre\rSystem.out.println(SystemUtils.getJavaIoTmpDir().getPath());//C:\\Users\\noatn\\AppData\\Local\\Temp\rSystem.out.println(SystemUtils.IS_JAVA_1_8);//true\rSystem.out.println(SystemUtils.IS_OS_WINDOWS);//true\rSystem.out.println(SystemUtils.IS_OS_WINDOWS_10);//true\rSystem.out.println(SystemUtils.USER_NAME);//noatn\rSystem.out.println(SystemUtils.USER_DIR);//E:\\IdeaProjects\\z-utils\rSystem.out.println(SystemUtils.USER_HOME);//C:\\Users\\noatn\r  Validate – 提供验证的操作，有点类似 assert 断言；\n  WordUtils – 用于处理单词大小写、换行等。\n  二:org.apache.commons.lang.math\r#\r\r 处理分数的Fraction类；  {\rFraction fraction = Fraction.getFraction(1,2);// first prams 分子 ,second params 分母\rSystem.out.println(fraction.doubleValue());//输出具体值 0.5\rSystem.out.println(fraction.toString());//输出具字符串值 1/2\rSystem.out.println(fraction.toProperString());//输出具字符串值 1/2\r}\r{\r//当第一个参数大于0的情况 (2*3+1) / 3\rFraction fraction = Fraction.getFraction(2,1,3);\rSystem.out.println(fraction.doubleValue());//输出具体值 2.3333333333333335\r//当第一个参数大于0的情况 (-2*3-1) / 3\rfraction = Fraction.getFraction(-2,1,3);\rSystem.out.println(fraction.doubleValue());\rfraction = Fraction.getFraction(\u0026quot;1/2\u0026quot;);//可以自动解析为分子1分母2\rSystem.out.println(fraction.doubleValue());\r}\r{\r//获取绝对值 即|-1| == 1\rSystem.out.println(Fraction.getFraction(-1, 2).abs());\r//两个分数相加\rSystem.out.println(Fraction.getFraction(1, 2).add(Fraction.getFraction(\u0026quot;1/2\u0026quot;)));\r//两个分数相减\rSystem.out.println(Fraction.getFraction(1, 2).subtract(\rFraction.getFraction(1, 2)));\r//两个分数相乘\rSystem.out.println(Fraction.getFraction(1, 2).multiplyBy(\rFraction.getFraction(1, 2)));\r//两个分数相除\rSystem.out.println(Fraction.getFraction(1, 2).divideBy(\rFraction.getFraction(1, 2)));\r//约数\rSystem.out.println(Fraction.getFraction(1, 2).pow(2));\r}\r 处理数值的NumberUtils和IEEE754rUtils类，这里IEEE745r代表的是IEEE 754的标准，是一种浮点数的处理标准。 处理随机数的JVMRandom和RandomUtils类。  // JVMRandom继承了java.util.Random类，其功能和Random差不多，只不过封装了返回不同数据类型的方法而已。而RandomUtils则把JVMRandom的方法静态化了。\rfor (int i = 0; i \u0026lt; 5; i++) {\rSystem.out.println(RandomUtils.nextInt(100));\r}\r 处理数值范围的Range, DoubleRange, FloatRange, IntRange, LangRange, NumberRange类   Range normalScoreRange = new DoubleRange(90, 120);\rdouble score1 = 102.5;\rdouble score2 = 79.9;\rSystem.out.println(\u0026quot;Normal score range is: \u0026quot; + normalScoreRange);//[90.0,120.0] 打印一个范围\rSystem.out.println(\u0026quot;Is \u0026quot; + score1 + \u0026quot; a normal score? \u0026quot; + normalScoreRange.containsDouble(score1));//是否在这个范围 true\rSystem.out.println(\u0026quot;Is \u0026quot; + score2 + \u0026quot; a normal score? \u0026quot; + normalScoreRange.containsDouble(score2));//是否在这个范围 false\rSystem.out.println(normalScoreRange.overlapsRange(new IntRange(92,119)));//此范围是否在我们预定的范围中 true\r三:Commons Collections\r#\r\r CollectionUtils  org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection\u0026lt;?\u0026gt;, java.util.Collection\u0026lt;?\u0026gt;) 集合是否相等\rorg.apache.commons.collections4.CollectionUtils.union(Collection\u0026lt;?\u0026gt; a,Collection\u0026lt;?\u0026gt; b) 合集\rorg.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable\u0026lt;? extends O\u0026gt;, java.lang.Iterable\u0026lt;? extends O\u0026gt;) 差集\rorg.apache.commons.collections4.CollectionUtils.intersection (Collection\u0026lt;?\u0026gt; a,Collection\u0026lt;?\u0026gt; b) 交集\rorg.apache.commons.collections4.CollectionUtils.isSubCollection(Collection\u0026lt;?\u0026gt; a,Collection\u0026lt;?\u0026gt; b) 集合包含\rorg.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable\u0026lt;? extends O\u0026gt;, java.lang.Iterable\u0026lt;? extends O\u0026gt;) 合并\rorg.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection\u0026lt;?\u0026gt; a) 判断是否为null并且是否包含元素\rorg.apache.commons.collections4.CollectionUtils.addIgnoreNull(Collection\u0026lt;T\u0026gt; collection, final T object)添加非空的对象到集合中\r"}),a.add({id:31,href:'/life/docs/operating_system/linux/git_introduction/',title:"git学习",section:"linux学习与使用 ",content:"git学习\r#\r\rgit 区域概念\r#\r\r git分为工作区(我们自己的file)和版本库这其中版本库又包含暂存区(Stage)和分支区(master)    git add ********** 把文件添加到仓库\n  git reset README.md 取消提交到暂存区域\n  git commmit -m \u0026lsquo;xxxx\u0026rsquo; 提交到仓库\n  git diff 查看提交到仓库文件之后文件又被修改的变化\n  git status 查看状态\n  git rm -f gitS.md 强制删除\n  git log 显示从最近到最远的提交日志\n  git log \u0026ndash;pretty=oneline 只显示版本号\n  关于版本回退问题\r#\r\r  git reset \u0026ndash;hard HEAD^ 版本重置为上一个版本\n  git 关于版本处理进行了设置\n  git reset \u0026ndash;hard HEAD^　重置为上一个版本\n   这里解释下HEAD表示当前版本 如最新提交的版本号:3a451d666e6c952e1588117ef18933be489beb18 zch, 上上一个版本就是HEAD^^ 那么假如是重置为上上一个版本那么命令就是git reset \u0026ndash;hard HEAD^^ 那么假如说有100个版本呢?当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100 如:git reset \u0026ndash;hard HEAD~50 往上５０个版本 当然了如果记得具体版本号当然更好了    git reset \u0026ndash;hard 3a451d666e6c952e1588117ef18933be489beb18 这样就可以了,对了这的版本号其实可以不用写全,因为是linux嘛\n  git reflog 记录一天的命令(当天)\n  a249f45 HEAD@{0}: reset: moving to HEAD^\r545bb20 HEAD@{1}: commit: 2018年 03月 12日 星期一 10:17:56\ra249f45 HEAD@{2}: commit: append GPL\r3a451d6 HEAD@{3}: commit (initial): zch\r 你可以发现这里面包含当天所有操作的版本号(因为回退到某个版本之后那个版本号你再用git log就查找不出来了)   git log可以查看提交历史，以便确定要回退到哪个版本 git reflog查看命令历史，以便确定要回到未来的哪个版本。   (假如在工作区的内容已经做了修改与暂存区之间相比有了变化,并且你想要要丢弃这种变化,那么你可以)   git checkout \u0026ndash; gitS.md 抛弃工作区所做的修改　那么工作区就被修改为与暂存区一样了 git checkout \u0026ndash; file命令中的\u0026ndash;很重要，没有\u0026ndash;，就变成了“切换到另一个分支”的命令   关于删除文件\n  假如说你删除了当前工作区的某一个文件比如gitS.md   如进行了这个操作 rm gitS.md(linux 下) 这个时候，Git知道你删除了文件，因此，工作区和版本库就不一致了，git status命令会立刻告诉你哪些文件被删除了(git status) 现在你有两个选择，一是确实要从版本库中删除该文件，那就用命令(git rm gitS.md) (git commit -m \u0026lsquo;yes delete file\u0026rsquo;) 另一种情况是删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本 命令(git checkout \u0026ndash; gitS.md)\n 分支(重点)\r#\r\r git checkout -b dev (创建dev分支，然后切换到dev分支)  git branch dev 创建分支dev\rgit checkout dev 切换到分支dev\r git branch命令查看当前分支   git branch命令会列出所有分支，当前分支前面会标一个*号\n * dev\rmaster\r 可以随便写点内容然后提交 git commit -m \u0026lsquo;branch test\u0026rsquo; 现在，dev分支的工作完成，我们就可以切换回master分支\n  git checkout master 切换到当前分支 (这时查看gitS.md刚刚随便写的内容并没有在file中)   　我们需要与当前分支合并\n  git merge dev (dev与master合并,master表示主分支)   cat gitS.md 就看到我们添加的内容了\n  再次查看当前分支 git branch (可以看到现在的分支已经是主分支了)   dev\r* master\r 删除dev分支(git branch -d dev) 再次查看 git branch (可以看到只是主分支master了)  * master\r分支小结\r#\r\rGit鼓励大量使用分支：\r查看分支：git branch\r创建分支：git branch \u0026lt;name\u0026gt;\r切换分支：git checkout \u0026lt;name\u0026gt;\r创建+切换分支：git checkout -b \u0026lt;name\u0026gt;\r合并某分支到当前分支：git merge \u0026lt;name\u0026gt;\r删除分支：git branch -d \u0026lt;name\u0026gt;\r分支冲突\r#\r\r当新创建了一个分支,并且修改内容提交之后,而后又转回到主分支并且又做了修改并且也提交之后,在这之后又进行了合并分支\r这里我们把新创建分支并且做修改的内容称为a,把转到主分支并且做修改的内容称为b,当且仅当a与b相同的时候,这时会发生冲突\r(因为这样在工作区的物理映射都一致了,ps因为都是由工作区提交到缓存区的嘛)\r这个时候我们需要手动解决冲突问题,只需要在把工作区的内容重新修改(这里是已经合并之后)当然不能和b一致有一点点区别即可\r然后重新提交就好\r分支管理策略\r#\r\r通常，合并分支时，如果可能，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。\r如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。\r 新创建一个分支dev (git checkout -b dev)   (git add gitS.md) (git commit -m \u0026lsquo;add merge\u0026rsquo;) 在切换为主分支 (git checkout master)   合并分支 以前的方式(git merge dev),这种方式上面说了会丢失信息,因此不采用此种方式(git merge \u0026ndash;no-ff -m \u0026lsquo;merge with no-ff\u0026rsquo; dev)这样就留下了合并信息   (git log \u0026ndash;graph \u0026ndash;pretty=oneline \u0026ndash;abbrev-commit)合并信息如下:  * c41b6a7 merge with no-ff\r|\\ | * d93a2e5 add merge\r|/ * 8e4aa4c conflict fixed\r分支策略\r在实际开发中，我们应该按照几个基本原则进行分支管理：\r首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；\r那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，\rBug分支\r#\r\r软件开发中，bug就像家常便饭一样。有了bug就需要修复，在Git中，由于分支是如此的强大，\r所以，每个bug都可以通过一个新的临时分支来修复，修复后，合并分支，然后将临时分支删除。\r当你接到一个修复一个代号101的bug的任务时，很自然地，你想创建一个分支issue-101来修复它，但是，等等，当前正在dev上进行的工作还没有提交\r并不是你不想提交，而是工作只进行到一半，还没法提交，预计完成还需1天时间。但是，必须在两个小时内修复该bug，怎么办？\r幸好，Git还提供了一个stash功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作\r git stash (暂时保存未提交的状态) (git checkout -b issue-101) 说明:却换到此版本之后实际工作区的内容并没有你还没有提交的内容,因此你做出修改  承接上面,关于是否有冲突问题,冲突的原因是你在主分支(master)开发的同时又去修改了项目内容并且和修复bug的分支所做出的修改有相同的地方\r,这时就会产生冲突,在你把bug分支与主分支合并之后并且恰好产生冲突git是会提示的　git会标识出来 这个时侯bug修改的内容已经被添加到了主分支\r因此主分支中关于冲突的部分被git标识了,这个时候我们自己手动修改即可(重复的删除即可,然后在重新提交,检查无误之后删除bug分支)\r  修复完成之后提交 (git add gitS.md) (git commit -m \u0026lsquo;fix bug 101\u0026rsquo;)\n  切换到master分支 (git checkout master)\n  与bug分支合并(git merge \u0026ndash;no-ff -m \u0026ldquo;merged bug fix 101\u0026rdquo; issue-101) 删除issue-101 (git branch -d issue-101)\n  (检查是否有冲突,一般不会有)\n  回到工作的分支上去写代码,这时需要恢复 (git stash pop)||恢复的同时把stash内容也删了\n  注意:可以多次stash，恢复的时候，先用git stash list查看，然后恢复指定的stash，用命令git stash apply stash@{0}或者git stash pop stash@{0}\n  (检查是否有冲突 我自己检查是有冲突的, git给我把恢复的那行(原来的)给标识出来了,然后就删除多余的并且也把标识符也删除然后重新提交即可)\n  强行删除某个分支 (假如某个项目中的某个功能不需要了,并且这个功能还没有提交,那么需要强行删除这个分支)(git branch -D feature-xx)(只需把d改为大写即可)\r#\r\r多人协作\r#\r\r  要查看远程库的信息(git remote) origin ,远程仓库的默认名称是origin\n  查看详细信息(git remote -v)\n  origin	git@github.com:noatnu/docZCH.git (fetch)\rorigin	git@github.com:noatnu/docZCH.git (push)\rpsuh 推送地址,fetch抓取地址(当且仅当你有推送权限才会看到push地址)\r推送分支\r#\r\r 推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上   假如推送本地的主分支 (git push origin master),假如不是主分支,例如要推送的分支是dev,那么 (git push origin dev)  抓取分支\r#\r\r 多人协作时，大家都会往master和dev分支上推送各自的修改 A小伙伴 git clone git@github.com:noatnu/jkblue.git A小伙伴从远程库clone时，默认情况下，A小伙伴只能看到本地的master分支 现在，A小伙伴要在dev分支上开发，就必须创建远程origin的dev分支到本地，于是他用这个命令创建本地dev分支 (git checkout -b dev origin/dev) 相当于把远程仓库与新创建并且已经切换到dev的分支相关联起来 (git checkout -b dev)因为此命令表示创建并且切换,后面origin/dev表示关联起来  标签\r#\r\r 在Git中打标签非常简单，首先，切换到需要打标签的分支上 (git checkout dev) 打标签 (git tag v1.1) 查看标签 git tag 还可以对具体的版本打标签,比如某某版本号是123456 (git tag v1.2 123456) 还可以创建带有说明的标签，用-a指定标签名，-m指定说明文字 (git tag -a v1.2 -m \u0026lsquo;打标签\u0026rsquo; 123456)  提交并推送\r#\r\r首先进入需要提交的那个项目\r将此项目下所有的文件添加到git版本管理系统下,假如你需要其它操作添加，直接正则表达式过滤添加\rgit add ./* 提交到 git 本地仓库\rgit commit -m '2020-01-20 下午推送一次'\r推送\rgit push -u origin master\r如果报错请检查一下推送的分支是否正确\rgit branch\r会这样显示\r----\r* dev\rmarster\r---\r表示当前分值在dev分支\r改为 git push -u origin dev\r看到推送的数据,以及没有出现error等就表示成功\r你可以git status查看下\r直接拉取并合并最新代码\r#\r\r$ git pull origin master // 拉取远端origin/master分支并合并到当前分支\r$ git pull origin dev // 拉取远端origin/dev分支并合并到当前分支\r$ git push origin master // 将当前分支提交到远端origin/master分支\rpush到GitHub的文件要求小于100M\rgit移除文件夹 (-f去掉那么需要 将变更提交到仓库)\r#\r\rgit rm -r -f .idea\ngit移除文件\r#\r\rgit rm -f a.txt\n"}),a.add({id:32,href:'/life/docs/operating_system/linux/gitub_config/',title:"git配置",section:"linux学习与使用 ",content:"zhou@zhou-Lenovo-Z480:~$ git version\rgit version 2.7.4\rzhou@zhou-Lenovo-Z480:~$ ssh -T git@github.com\rWarning: Permanently added the RSA host key for IP address '192.30.255.112' to the list of known hosts.\rPermission denied (publickey).\rzhou@zhou-Lenovo-Z480:~$ git config --global user.name \u0026quot;zhouchenhua\u0026quot;\rzhou@zhou-Lenovo-Z480:~$ git config --global user.email \u0026quot;noatnu@163.com\u0026quot;\rzhou@zhou-Lenovo-Z480:~$ git config --list\ruser.name=zhouchenhua\ruser.email=noatnu@163.com\rzhou@zhou-Lenovo-Z480:~$ ssh-keygen -C ‘noatnu@163.com’ -t rsa\rGenerating public/private rsa key pair.\rEnter file in which to save the key (/home/zhou/.ssh/id_rsa): america347191\rEnter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in america347191.\rYour public key has been saved in america347191.pub.\rThe key fingerprint is:\rSHA256:7WlMe5QL3eMrdG6b7BB/z66zSpwIOBRM0GTD4hK6BW4 ‘noatnu@163.com’\rThe key's randomart image is:\r+---[RSA 2048]----+\r| .B* |\r|. . ..+o |\r|.o o .. |\r|.Eo .. . . . o |\r|.o . o S + = o |\r|. . = B.*.. |\r| B.Boo .|\r| . o.o+=.|\r| .=O*+|\r+----[SHA256]-----+\rroot@zhou-Lenovo-Z480:/home/zhou# cd ~/.ssh\rroot@zhou-Lenovo-Z480:~/.ssh# ls -a\r. .. id_rsa id_rsa.pub\rroot@zhou-Lenovo-Z480:~/.ssh# gedit id_rsa.pub "}),a.add({id:33,href:'/life/docs/operating_system/linux/host%E6%98%A0%E5%B0%84/',title:"host映射",section:"linux学习与使用 ",content:"sudo vi hosts\n127.0.0.1	localhost 127.0.1.1	zhou-Lenovo-Z480\nThe following lines are desirable for IPv6 capable hosts\r#\r\r::1 ip6-localhost ip6-loopback fe00::0 ip6-localnet ff00::0 ip6-mcastprefix ff02::1 ip6-allnodes ff02::2 ip6-allrouters\n#pmcc dev 127.0.0.1 dev.pmcc.com\n"}),a.add({id:34,href:'/life/docs/javadir/middleware/elasticsearch/ik/',title:"ik分词器(analysis)",section:"Elasticsearch",content:"分词器\r#\r\r什么是 Analysis\r#\r\r顾名思义，文本分析就是把全文本转换成一系列单词（term/token）的过程，也叫分词。在 ES 中，Analysis 是通过分词器（Analyzer） 来实现的，可使用 ES 内置的分析器或者按需定制化分析器。\n举一个分词简单的例子：比如你输入 Mastering Elasticsearch，会自动帮你分成两个单词，一个是 mastering，另一个是 elasticsearch，可以看出单词也被转化成了小写的。\n分词器的组成\r#\r\r 分词器是专门处理分词的组件，分词器由以下三部分组成：\n  Character Filters：针对原始文本处理，比如去除 html 标签 Tokenizer：按照规则切分为单词，比如按照空格切分 Token Filters：将切分的单词进行加工，比如大写转小写，删除 stopwords，增加同义语  同时 Analyzer 三个部分也是有顺序的，从图中可以看出，从上到下依次经过 Character Filters，Tokenizer 以及 Token Filters，这个顺序比较好理解，一个文本进来肯定要先对文本数据进行处理，再去分词，最后对分词的结果进行过滤。\nES 分词器\r#\r\r默认分词器 (Stamdard Analyzer)\r#\r\rvar myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;analyzer\u0026#34;: \u0026#34;standard\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;In 2020, Java is the best language in the world.\u0026#34; }); var requestOptions = { method: \u0026#39;GET\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://localhost:9200/_analyze\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); var result = { \u0026#34;tokens\u0026#34;: [ { \u0026#34;token\u0026#34;: \u0026#34;in\u0026#34;, \u0026#34;start_offset\u0026#34;: 0, \u0026#34;end_offset\u0026#34;: 2, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;ALPHANUM\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 0 }, { \u0026#34;token\u0026#34;: \u0026#34;2020\u0026#34;, \u0026#34;start_offset\u0026#34;: 3, \u0026#34;end_offset\u0026#34;: 7, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;NUM\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 1 }, { \u0026#34;token\u0026#34;: \u0026#34;java\u0026#34;, \u0026#34;start_offset\u0026#34;: 9, \u0026#34;end_offset\u0026#34;: 13, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;ALPHANUM\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 2 }, { \u0026#34;token\u0026#34;: \u0026#34;is\u0026#34;, \u0026#34;start_offset\u0026#34;: 14, \u0026#34;end_offset\u0026#34;: 16, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;ALPHANUM\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 3 }, { \u0026#34;token\u0026#34;: \u0026#34;the\u0026#34;, \u0026#34;start_offset\u0026#34;: 17, \u0026#34;end_offset\u0026#34;: 20, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;ALPHANUM\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 4 }, { \u0026#34;token\u0026#34;: \u0026#34;best\u0026#34;, \u0026#34;start_offset\u0026#34;: 21, \u0026#34;end_offset\u0026#34;: 25, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;ALPHANUM\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 5 }, { \u0026#34;token\u0026#34;: \u0026#34;language\u0026#34;, \u0026#34;start_offset\u0026#34;: 26, \u0026#34;end_offset\u0026#34;: 34, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;ALPHANUM\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 6 }, { \u0026#34;token\u0026#34;: \u0026#34;in\u0026#34;, \u0026#34;start_offset\u0026#34;: 35, \u0026#34;end_offset\u0026#34;: 37, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;ALPHANUM\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 7 }, { \u0026#34;token\u0026#34;: \u0026#34;the\u0026#34;, \u0026#34;start_offset\u0026#34;: 38, \u0026#34;end_offset\u0026#34;: 41, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;ALPHANUM\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 8 }, { \u0026#34;token\u0026#34;: \u0026#34;world\u0026#34;, \u0026#34;start_offset\u0026#34;: 42, \u0026#34;end_offset\u0026#34;: 47, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;ALPHANUM\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 9 } ] } elasticsearch-analysis-ik\r#\r\r 中文轻量级分词器\n   下载7.8\n  下载其它版本\n  解压\n  将文件复制到 es的安装目录/plugin/ik下面即可\n 解压后文件树  \\plugins\\ik\\commons-codec-1.9.jar \\plugins\\ik\\commons-logging-1.2.jar \\plugins\\ik\\config\\extra_main.dic \\plugins\\ik\\config\\extra_single_word.dic \\plugins\\ik\\config\\extra_single_word_full.dic \\plugins\\ik\\config\\extra_single_word_low_freq.dic \\plugins\\ik\\config\\extra_stopword.dic \\plugins\\ik\\config\\IKAnalyzer.cfg.xml \\plugins\\ik\\config\\main.dic \\plugins\\ik\\config\\preposition.dic \\plugins\\ik\\config\\quantifier.dic \\plugins\\ik\\config\\stopword.dic \\plugins\\ik\\config\\suffix.dic \\plugins\\ik\\config\\surname.dic \\plugins\\ik\\elasticsearch-analysis-ik-7.8.0.jar \\plugins\\ik\\httpclient-4.5.2.jar \\plugins\\ik\\httpcore-4.4.4.jar \\plugins\\ik\\plugin-descriptor.properties \\plugins\\ik\\plugin-security.policy 到这里已经完成了，不需要去elasticSearch的 elasticsearch.yml 文件去配置\n 重启  重启ElasticSearch\nfuture versions of Elasticsearch will require Java 11; your Java version from [C:\\Program Files\\Java\\jdk1.8.0_321\\jre] does not meet this requirement future versions of Elasticsearch will require Java 11; your Java version from [C:\\Program Files\\Java\\jdk1.8.0_321\\jre] does not meet this requirement Warning: with JDK 8 on Windows, Elasticsearch may be unable to derive correct ergonomic settings due to a JDK issue (JDK-8074459). Please use a newer version of Java. Warning: MaxDirectMemorySize may have been miscalculated due to JDK-8074459. Please use a newer version of Java or set MaxDirectMemorySize explicitly. [2023-07-30T14:32:05,595][INFO ][o.e.n.Node ] [DESKTOP-CCD057N] version[7.8.0], pid[16040], build[default/zip/757314695644ea9a1dc2fecd26d1a43856725e65/2020-06-14T19:35:50.234439Z], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_321/25.321-b07] [2023-07-30T14:32:05,622][INFO ][o.e.n.Node ] [DESKTOP-CCD057N] JVM home [C:\\Program Files\\Java\\jdk1.8.0_321\\jre] [2023-07-30T14:32:05,622][INFO ][o.e.n.Node ] [DESKTOP-CCD057N] JVM arguments [-Des.networkaddress.cache.ttl=60, -Des.networkaddress.cache.negative.ttl=10, -XX:+AlwaysPreTouch, -Xss1m, -Djava.awt.headless=true, -Dfile.encoding=UTF-8, -Djna.nosys=true, -XX:-OmitStackTraceInFastThrow, -Dio.netty.noUnsafe=true, -Dio.netty.noKeySetOptimization=true, -Dio.netty.recycler.maxCapacityPerThread=0, -Dio.netty.allocator.numDirectArenas=0, -Dlog4j.shutdownHookEnabled=false, -Dlog4j2.disable.jmx=true, -Djava.locale.providers=SPI,JRE, -Xms1g, -Xmx1g, -XX:+UseConcMarkSweepGC, -XX:CMSInitiatingOccupancyFraction=75, -XX:+UseCMSInitiatingOccupancyOnly, -Djava.io.tmpdir=C:\\Users\\noatn\\AppData\\Local\\Temp\\elasticsearch, -XX:+HeapDumpOnOutOfMemoryError, -XX:HeapDumpPath=data, -XX:ErrorFile=logs/hs_err_pid%p.log, -XX:+PrintGCDetails, -XX:+PrintGCDateStamps, -XX:+PrintTenuringDistribution, -XX:+PrintGCApplicationStoppedTime, -Xloggc:logs/gc.log, -XX:+UseGCLogFileRotation, -XX:NumberOfGCLogFiles=32, -XX:GCLogFileSize=64m, -XX:MaxDirectMemorySize=536870912, -Delasticsearch, -Des.path.home=D:\\CS\\elasticsearch_or_kibana\\7.8\\elasticsearch-7.8.0, -Des.path.conf=D:\\CS\\elasticsearch_or_kibana\\7.8\\elasticsearch-7.8.0\\config, -Des.distribution.flavor=default, -Des.distribution.type=zip, -Des.bundled_jdk=true] [2023-07-30T14:32:11,928][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [aggs-matrix-stats] [2023-07-30T14:32:11,928][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [analysis-common] [2023-07-30T14:32:11,928][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [constant-keyword] [2023-07-30T14:32:11,928][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [flattened] [2023-07-30T14:32:11,928][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [frozen-indices] [2023-07-30T14:32:11,928][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [ingest-common] [2023-07-30T14:32:11,928][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [ingest-geoip] [2023-07-30T14:32:11,928][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [ingest-user-agent] [2023-07-30T14:32:11,928][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [kibana] [2023-07-30T14:32:11,928][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [lang-expression] [2023-07-30T14:32:11,958][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [lang-mustache] [2023-07-30T14:32:11,960][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [lang-painless] [2023-07-30T14:32:11,962][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [mapper-extras] [2023-07-30T14:32:11,966][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [parent-join] [2023-07-30T14:32:11,966][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [percolator] [2023-07-30T14:32:11,966][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [rank-eval] [2023-07-30T14:32:11,966][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [reindex] [2023-07-30T14:32:11,966][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [repository-url] [2023-07-30T14:32:11,966][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [search-business-rules] [2023-07-30T14:32:11,966][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [searchable-snapshots] [2023-07-30T14:32:11,966][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [spatial] [2023-07-30T14:32:11,966][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [tasks] [2023-07-30T14:32:11,966][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [transform] [2023-07-30T14:32:11,966][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [transport-netty4] [2023-07-30T14:32:11,966][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [vectors] [2023-07-30T14:32:11,982][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-analytics] [2023-07-30T14:32:11,982][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-async-search] [2023-07-30T14:32:11,982][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-autoscaling] [2023-07-30T14:32:11,982][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-ccr] [2023-07-30T14:32:11,982][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-core] [2023-07-30T14:32:11,982][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-deprecation] [2023-07-30T14:32:11,982][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-enrich] [2023-07-30T14:32:11,982][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-eql] [2023-07-30T14:32:11,982][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-graph] [2023-07-30T14:32:11,998][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-identity-provider] [2023-07-30T14:32:11,998][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-ilm] [2023-07-30T14:32:12,005][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-logstash] [2023-07-30T14:32:12,005][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-ml] [2023-07-30T14:32:12,005][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-monitoring] [2023-07-30T14:32:12,005][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-ql] [2023-07-30T14:32:12,005][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-rollup] [2023-07-30T14:32:12,005][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-security] [2023-07-30T14:32:12,005][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-sql] [2023-07-30T14:32:12,014][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-voting-only-node] [2023-07-30T14:32:12,015][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded module [x-pack-watcher] [2023-07-30T14:32:12,020][INFO ][o.e.p.PluginsService ] [DESKTOP-CCD057N] loaded plugin [analysis-ik] [2023-07-30T14:32:12,550][INFO ][o.e.e.NodeEnvironment ] [DESKTOP-CCD057N] using [1] data paths, mounts [[(D:)]], net usable_space [174.3gb], net total_space [443.2gb], types [NTFS] [2023-07-30T14:32:12,550][INFO ][o.e.e.NodeEnvironment ] [DESKTOP-CCD057N] heap size [989.8mb], compressed ordinary object pointers [true] [2023-07-30T14:32:13,010][INFO ][o.e.n.Node ] [DESKTOP-CCD057N] node name [DESKTOP-CCD057N], node ID [Jf6x5_1DTISSmQXznC4zsQ], cluster name [elasticsearch] [2023-07-30T14:32:20,649][INFO ][o.e.x.s.a.s.FileRolesStore] [DESKTOP-CCD057N] parsed [0] roles from file [D:\\CS\\elasticsearch_or_kibana\\7.8\\elasticsearch-7.8.0\\config\\roles.yml] [2023-07-30T14:32:21,746][INFO ][o.e.x.m.p.l.CppLogMessageHandler] [DESKTOP-CCD057N] [controller/8512] [Main.cc@110] controller (64 bit): Version 7.8.0 (Build 58ff6912e20047) Copyright (c) 2020 Elasticsearch BV [2023-07-30T14:32:23,029][INFO ][o.e.d.DiscoveryModule ] [DESKTOP-CCD057N] using discovery type [zen] and seed hosts providers [settings] [2023-07-30T14:32:24,444][INFO ][o.e.n.Node ] [DESKTOP-CCD057N] initialized [2023-07-30T14:32:24,455][INFO ][o.e.n.Node ] [DESKTOP-CCD057N] starting ... [2023-07-30T14:32:26,772][INFO ][o.e.t.TransportService ] [DESKTOP-CCD057N] publish_address {127.0.0.1:9300}, bound_addresses {127.0.0.1:9300}, {[::1]:9300} [2023-07-30T14:32:27,591][WARN ][o.e.b.BootstrapChecks ] [DESKTOP-CCD057N] the default discovery settings are unsuitable for production use; at least one of [discovery.seed_hosts, discovery.seed_providers, cluster.initial_master_nodes] must be configured [2023-07-30T14:32:27,591][INFO ][o.e.c.c.Coordinator ] [DESKTOP-CCD057N] cluster UUID [iYr4n6mARy2LAfFsKzIMOA] [2023-07-30T14:32:27,624][INFO ][o.e.c.c.ClusterBootstrapService] [DESKTOP-CCD057N] no discovery configuration found, will perform best-effort cluster bootstrapping after [3s] unless existing master is discovered [2023-07-30T14:32:27,842][INFO ][o.e.c.s.MasterService ] [DESKTOP-CCD057N] elected-as-master ([1] nodes joined)[{DESKTOP-CCD057N}{Jf6x5_1DTISSmQXznC4zsQ}{8nAsfgHRT72wU_-VwD7IAA}{127.0.0.1}{127.0.0.1:9300}{dilmrt}{ml.machine_memory=17033023488, xpack.installed=true, transform.node=true, ml.max_open_jobs=20} elect leader, _BECOME_MASTER_TASK_, _FINISH_ELECTION_], term: 9, version: 189, delta: master node changed {previous [], current [{DESKTOP-CCD057N}{Jf6x5_1DTISSmQXznC4zsQ}{8nAsfgHRT72wU_-VwD7IAA}{127.0.0.1}{127.0.0.1:9300}{dilmrt}{ml.machine_memory=17033023488, xpack.installed=true, transform.node=true, ml.max_open_jobs=20}]} [2023-07-30T14:32:28,079][INFO ][o.e.c.s.ClusterApplierService] [DESKTOP-CCD057N] master node changed {previous [], current [{DESKTOP-CCD057N}{Jf6x5_1DTISSmQXznC4zsQ}{8nAsfgHRT72wU_-VwD7IAA}{127.0.0.1}{127.0.0.1:9300}{dilmrt}{ml.machine_memory=17033023488, xpack.installed=true, transform.node=true, ml.max_open_jobs=20}]}, term: 9, version: 189, reason: Publication{term=9, version=189} [2023-07-30T14:32:28,857][INFO ][o.e.l.LicenseService ] [DESKTOP-CCD057N] license [ec3ec33c-9703-4a5a-8717-a3ef82d465a1] mode [basic] - valid [2023-07-30T14:32:28,862][INFO ][o.e.x.s.s.SecurityStatusChangeListener] [DESKTOP-CCD057N] Active license is now [BASIC]; Security is disabled [2023-07-30T14:32:28,880][INFO ][o.e.g.GatewayService ] [DESKTOP-CCD057N] recovered [12] indices into cluster_state [2023-07-30T14:32:29,253][INFO ][o.w.a.d.Dictionary ] [DESKTOP-CCD057N] try load config from D:\\CS\\elasticsearch_or_kibana\\7.8\\elasticsearch-7.8.0\\config\\analysis-ik\\IKAnalyzer.cfg.xml [2023-07-30T14:32:29,253][INFO ][o.w.a.d.Dictionary ] [DESKTOP-CCD057N] try load config from D:\\CS\\elasticsearch_or_kibana\\7.8\\elasticsearch-7.8.0\\plugins\\ik\\config\\IKAnalyzer.cfg.xml [2023-07-30T14:32:29,756][INFO ][o.e.h.AbstractHttpServerTransport] [DESKTOP-CCD057N] publish_address {127.0.0.1:9200}, bound_addresses {127.0.0.1:9200}, {[::1]:9200} [2023-07-30T14:32:29,757][INFO ][o.e.n.Node ] [DESKTOP-CCD057N] started [2023-07-30T14:32:36,410][INFO ][o.e.c.r.a.AllocationService] [DESKTOP-CCD057N] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[.kibana_task_manager_1][0]]]). [2023-07-30T14:36:17,444][INFO ][o.e.c.m.MetadataCreateIndexService] [DESKTOP-CCD057N] [book2] creating index, cause [api], templates [], shards [1]/[1], mappings []  测试  var myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;text\u0026#34;: \u0026#34;我是中国人\u0026#34; }); var requestOptions = { method: \u0026#39;POST\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://localhost:9200/book2/_analyze\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); var result = { \u0026#34;tokens\u0026#34;: [ { \u0026#34;token\u0026#34;: \u0026#34;我\u0026#34;, \u0026#34;start_offset\u0026#34;: 0, \u0026#34;end_offset\u0026#34;: 1, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;IDEOGRAPHIC\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 0 }, { \u0026#34;token\u0026#34;: \u0026#34;是\u0026#34;, \u0026#34;start_offset\u0026#34;: 1, \u0026#34;end_offset\u0026#34;: 2, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;IDEOGRAPHIC\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 1 }, { \u0026#34;token\u0026#34;: \u0026#34;中\u0026#34;, \u0026#34;start_offset\u0026#34;: 2, \u0026#34;end_offset\u0026#34;: 3, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;IDEOGRAPHIC\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 2 }, { \u0026#34;token\u0026#34;: \u0026#34;国\u0026#34;, \u0026#34;start_offset\u0026#34;: 3, \u0026#34;end_offset\u0026#34;: 4, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;IDEOGRAPHIC\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 3 }, { \u0026#34;token\u0026#34;: \u0026#34;人\u0026#34;, \u0026#34;start_offset\u0026#34;: 4, \u0026#34;end_offset\u0026#34;: 5, \u0026#34;type\u0026#34;: \u0026#34;\u0026lt;IDEOGRAPHIC\u0026gt;\u0026#34;, \u0026#34;position\u0026#34;: 4 } ] }  使用IK分词器之后，结果如下  var myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;analyzer\u0026#34;: \u0026#34;ik_max_word\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;中华人民共和国\u0026#34; }); var requestOptions = { method: \u0026#39;POST\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://localhost:9200/book2/_analyze\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); var result = { \u0026#34;tokens\u0026#34;: [ { \u0026#34;token\u0026#34;: \u0026#34;中华人民共和国\u0026#34;, \u0026#34;start_offset\u0026#34;: 0, \u0026#34;end_offset\u0026#34;: 7, \u0026#34;type\u0026#34;: \u0026#34;CN_WORD\u0026#34;, \u0026#34;position\u0026#34;: 0 }, { \u0026#34;token\u0026#34;: \u0026#34;中华人民\u0026#34;, \u0026#34;start_offset\u0026#34;: 0, \u0026#34;end_offset\u0026#34;: 4, \u0026#34;type\u0026#34;: \u0026#34;CN_WORD\u0026#34;, \u0026#34;position\u0026#34;: 1 }, { \u0026#34;token\u0026#34;: \u0026#34;中华\u0026#34;, \u0026#34;start_offset\u0026#34;: 0, \u0026#34;end_offset\u0026#34;: 2, \u0026#34;type\u0026#34;: \u0026#34;CN_WORD\u0026#34;, \u0026#34;position\u0026#34;: 2 }, { \u0026#34;token\u0026#34;: \u0026#34;华人\u0026#34;, \u0026#34;start_offset\u0026#34;: 1, \u0026#34;end_offset\u0026#34;: 3, \u0026#34;type\u0026#34;: \u0026#34;CN_WORD\u0026#34;, \u0026#34;position\u0026#34;: 3 }, { \u0026#34;token\u0026#34;: \u0026#34;人民共和国\u0026#34;, \u0026#34;start_offset\u0026#34;: 2, \u0026#34;end_offset\u0026#34;: 7, \u0026#34;type\u0026#34;: \u0026#34;CN_WORD\u0026#34;, \u0026#34;position\u0026#34;: 4 }, { \u0026#34;token\u0026#34;: \u0026#34;人民\u0026#34;, \u0026#34;start_offset\u0026#34;: 2, \u0026#34;end_offset\u0026#34;: 4, \u0026#34;type\u0026#34;: \u0026#34;CN_WORD\u0026#34;, \u0026#34;position\u0026#34;: 5 }, { \u0026#34;token\u0026#34;: \u0026#34;共和国\u0026#34;, \u0026#34;start_offset\u0026#34;: 4, \u0026#34;end_offset\u0026#34;: 7, \u0026#34;type\u0026#34;: \u0026#34;CN_WORD\u0026#34;, \u0026#34;position\u0026#34;: 6 }, { \u0026#34;token\u0026#34;: \u0026#34;共和\u0026#34;, \u0026#34;start_offset\u0026#34;: 4, \u0026#34;end_offset\u0026#34;: 6, \u0026#34;type\u0026#34;: \u0026#34;CN_WORD\u0026#34;, \u0026#34;position\u0026#34;: 7 }, { \u0026#34;token\u0026#34;: \u0026#34;国\u0026#34;, \u0026#34;start_offset\u0026#34;: 6, \u0026#34;end_offset\u0026#34;: 7, \u0026#34;type\u0026#34;: \u0026#34;CN_CHAR\u0026#34;, \u0026#34;position\u0026#34;: 8 } ] }  对于上面两个分词效果的解释：  如果未安装ik分词器，那么，你如果写 “analyzer”: “ik_max_word”，那么程序就会报错，因为你没有安装ik分词器\n如果你安装了ik分词器之后，你不指定分词器，不加上 “analyzer”: “ik_max_word” 这句话，那么其分词效果跟你没有安装ik分词器是一致的，也是分词成每个汉字。\nik分词器的分词类型\r#\r\r  ik_max_word： 会将文本做最细粒度的拆分，比如会将“中华人民共和国国歌”拆分为“中华人民共和国,中华人民,中华,华人,人民共和国,人民,人,民,共和国,共和,和,国国,国歌”，会穷尽各种可能的组合；\n  ik_smart： 会做最粗粒度的拆分，比如会将“中华人民共和国国歌”拆分为“中华人民共和国,国歌”。\n  language 分词器\r#\r\rlanguage 分词器地址\n 一个用于解析特殊语言文本的analyzer集合。（ arabic,armenian, basque, brazilian, bulgarian, catalan, cjk, czech, danish, dutch, english, finnish, french,galician, german, greek, hindi, hungarian, indonesian, irish, italian, latvian, lithuanian, norwegian,persian, portuguese, romanian, russian, sorani, spanish, swedish, turkish, thai.）可惜没有中文。不予考虑\n snowball 分词器\r#\r\rWhitespace 分词器\r#\r\r地址\n"}),a.add({id:35,href:'/life/docs/operating_system/linux/linux%E4%B8%8B%E8%AE%BE%E7%BD%AE%E5%92%8C%E6%9F%A5%E7%9C%8B%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/',title:"Linux下设置和查看环境变量",section:"linux学习与使用 ",content:"Linux的变量种类 按变量的生存周期来划分，Linux变量可分为两类： 1 永久的：需要修改配置文件，变量永久生效。 2 临时的：使用export命令声明即可，变量在关闭shell时失效。\n设置变量的三种方法 1 在/etc/profile文件中添加变量【对所有用户生效(永久的)】 用VI在文件/etc/profile文件中增加变量，该变量将会对Linux下所有用户有效，并且是“永久的”。 例如：编辑/etc/profile文件，添加CLASSPATH变量\nvi /etc/profile\r#\r\rexport CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib\n注：修改文件后要想马上生效还要运行# source /etc/profile不然只能在下次重进此用户时生效。\n2 在用户目录下的.bash_profile文件中增加变量【对单一用户生效(永久的)】 用VI在用户目录下的.bash_profile文件中增加变量，改变量仅会对当前用户有效，并且是“永久的”。 例如：编辑guok用户目录(/home/guok)下的.bash_profile $ vi /home/guok/.bash.profile 添加如下内容： export CLASSPATH=./JAVA_HOME/lib;$JAVA_HOME/jre/lib 注：修改文件后要想马上生效还要运行$ source /home/guok/.bash_profile不然只能在下次重进此用户时生效。\n3 直接运行export命令定义变量【只对当前shell(BASH)有效(临时的)】 在shell的命令行下直接使用[export 变量名=变量值] 定义变量，\n该变量只在当前的shell(BASH)或其子shell(BASH)下是有效的，\nshell关闭了，变量也就失效了，再打开新shell时就没有这个变量，需要使用的话还需要重新定义。\n环境变量的查看 1 使用echo命令查看单个环境变量。例如： echo $PATH 2 使用env查看所有环境变量。例如： env 3 使用set查看所有本地定义的环境变量。\n使用unset删除指定的环境变量 set可以设置某个环境变量的值。清除环境变量的值用unset命令。如果未指定值，则该变量值将被设为NULL。示例如下： $ export TEST=\u0026ldquo;Test\u0026hellip;\u0026rdquo; #增加一个环境变量TEST $ env|grep TEST #此命令有输入，证明环境变量TEST已经存在了 TEST=Test\u0026hellip; unset TEST #删除环境变量TEST $ env|grep TEST #此命令没有输出，证明环境变量TEST已经删除\n常用的环境变量 PATH 决定了shell将到哪些目录中寻找命令或程序 HOME 当前用户主目录 HISTSIZE　历史记录数 LOGNAME 当前用户的登录名 HOSTNAME　指主机的名称 SHELL 当前用户Shell类型 LANGUGE 语言相关的环境变量，多语言可以修改此环境变量 MAIL　当前用户的邮件存放目录 PS1　基本提示符，对于root用户是#，对于普通用户是$\n"}),a.add({id:36,href:'/life/docs/operating_system/linux/linux%E5%91%BD%E4%BB%A4/',title:"linux命令",section:"linux学习与使用 ",content:"linux命令\r#\r\r文件管理\r#\r\r文件基本操作\r#\r\r  less命令 (Q退出less命令)([pagedown]： 向下翻动一页)([pageup]： 向上翻动一页) less ss.md\n  cat命令 (cat -n ss.md \u0026gt; sdfsd.txt)把 ss.md 的文档内容加上行号后输入 sdfsd.txt 这个文档里, 这要注意假如sdfsd.txt先有文档会被清空,另外(cat ss.md)可以把消息打印到输出流中,cat 软盘功能暂时不予以考虑\n  ls命令 (ls -a)显示所有文件及目录包括隐藏文件,相当于la命令,ll显示具体信息\n  touch命令 主要用作创建文件如touch ss.md,(touch -m miss,touch -a miss)可以改变文件的读取时间,另外touch miss也可以改变文件的读取时间, 当且仅当miss不存在的时候会创建miss空文件\n  mkdir命令 主要用作创建文件目录;(mkdir dd)创建一个dd目录,(mkdir -p dd/ffg)在当前目录下建立一个dd目录并且在dd下创建一个ffg目录,假如dd不存在会自动创建的\n  mv命令 (mv missA miss.txt)把missA修改为miss.txt (mv sskg /home/zhou/fontconfig/dgsd/sdfg)把sskg移到sdfg目录 (mv ss.md ~)\n  file命令 (file -c ss.md)详细显示指令执行过程(file -v ss.md)显示版本信息 (tar zcvf ss.tar ss.md,file -z ss.tar)尝试去解读压缩文件的内容\n  find命令 (find . -type f)将目前目录其其下子目录中所有一般文件列出(find . -ctime -20)将目前目录及其子目录下所有最近 20 天内更新过的文件列出 (find /home/zhou/fontconfig -name \u0026lsquo;**.md\u0026rsquo;)任意的以md结尾的文件,-name改为-iname会忽略大小写(find /home/zhou/fontconfig -size 0)所有文件长度为0的普通文件\n  split命令 ( split -2 sdfsd.txt) 每隔２行分割成一个文件\u0026ndash;\u0026gt; 分割后:xaa xab xac xad xae xaf xag\n  pwd命令 (pwd)pwd命令用于显示工作目录\n  rm命令 删除操作 (rm xaa)删除单一文件xaa文本文件,这里也是可以用正则的如rm x** ,(rm -r dgsd)递归删除文件目录dgsd下的所有文件包括其本身; (rm -rf baba)加了一个f此命令表示即使原档案属性设为唯读，亦直接删除，无需逐一确认\n  cp命令 复制或者说是拷贝命令 (cp ss.md s1)注意是在同级目录下 (cp /home/zhou/fontconfig/s1/ss.md ~),将ss.md复制到主home下,这的~可以随便换为其它目录 (cp -a s1 /home/zhou/fontconfig/s2,cp -a s1 s2)当cp的是目录时要加上-a参数,当然如果加上-p就更好了,因为-p表示把file拥有的权限也一起复制 如:(cp -ap s1 /home/zhou/fontconfig/s2),(cp -ap ./* /home/zhou/fontconfig/s3)在某个目录把所有内容都复制到s3下\n  chmod 权限命令 Linux/Unix 的文件调用权限分为三级 : 文件拥有者、群组、其他。利用 chmod 可以藉以控制文件如何被他人所调用。\n  u 表示该文件的拥有者，g 表示与该文件的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。+ 表示增加权限、- 表示取消权限、= 表示唯一设定权限。 r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该文件是个子目录或者该文件已经被设定过为可执行\n  (chmod ugo+r miss.txt)将文件miss.txt 设为所有人皆可读取;(chmod u+x ex1.py)将 ex1.py 设定为只有该文件拥有者可以执行;(chmod 777 file)chmod也可以用数字来表示权限如\n  文本操作\r#\r\r 假如是ubuntu则可以直接使用gedit (sudo apt-get install gedit) vi命令 切换模式(i：光标处开始插入,l：光标所在行首开始插入,a：光标所在行尾开始插入,o：光标下插入新行) 进入编辑模式,当编辑完成时,在按Esc按键退出编辑模式,保存并退出：wq, 不保存退出： q！  备份与压缩\r#\r\r zip (zip -r cc.zip s*)-r递归处理，将指定目录下的所有文件和子目录一并处理 (zip -rP 123456 miss.zip miss.txt)-P加密压缩密码123456 解压 unzip miss.zip zip文件乱码问题 unzip -O cp936 xxx.zip tar (tar zcvf ss.tar.gz miss.txt)压缩 (tar zxvf ss.tar.gz)解压 rar (rar x xxx.rar)解压  系统操作\r#\r\r (shutdown -h now)立即关机 (shutdown +5 \u0026ldquo;system 5mine\u0026rdquo;)指定5分钟后关机 (export -p)列出所有的环境变量 uname -sr 内核版本查看 ubuntu (root密码修改 sudo passwd 输入两次就是root密码)  "}),a.add({id:37,href:'/life/docs/operating_system/linux/nginx/',title:"nginx学习",section:"linux学习与使用 ",content:"nginx学习\r#\r\r基础操作\r#\r\r start ./sbin/nginx stop ./sbin/nginx -s stop quite ./sbin/nginx -s quit   启动成功标志\n Welcome to nginx!\r 默认监听的端口是80 也就是说访问此端口就可以得到启动成功的标识符号\n  简单的负载均衡配置    http 模块中配置  #配置开始 author zhou\rupstream myproject{\rserver 127.0.0.1:8000 weight=3;\rserver 127.0.0.1:8080 weight=10;\rserver 127.0.0.1:8090;\r}\r#配置结束 author zhou\r location模块配置  proxy_pass http://myproject;\r注意:这的myproject要和上面的name一致\r测试结果 (这的测试用到了session的唯一性)\n http://localhost/nginx_test/ sessionId=8D9C4ACEE65EB24301B1C0D9E4CF3A6E\rhttp://localhost:8080/nginx_test/ sessionId=8D9C4ACEE65EB24301B1C0D9E4CF3A6E\rhttp://localhost:8090/nginx_test/ sessionId=7539B2C4AFD433ECEFAC8F2B2EBCC411\r 由于配置了权重 因此大部分是8080端口\n参数解释\r#\r\r  1）down\n表示单前的server暂时不参与负载\n  2）Weight\n默认为1.weight越大，负载的权重就越大。\n  3）max_fails\n允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误\n  4）fail_timeout\nmax_fails 次失败后，暂停的时间。\n  5）Backup\n其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。\n  service nginx start\rservice nginx stop\rnginx\r"}),a.add({id:38,href:'/life/docs/operating_system/linux/notepad++%E5%AE%89%E8%A3%85/',title:"Notepad++ 学习与使用",section:"linux学习与使用 ",content:"Notepad++是一套非常有特色的自由软件的纯文字编辑器(许可证:GPL)。有完整的中文化接口及支持多国语言编写的功能(UTF8 技术)。 它的功能比 Windows 中的 Notepad(记事本)强大，除了可以用来制作一般的纯文字说明文件，也十分适合当作编写电脑程序的编辑器。 Notepad++ 不仅有语法高亮度显示，也有语法折叠功能，并且支持宏以及扩充基本功能的外挂模组。但是可惜的是Notepad++只能在Windows平台下使用。 工作中必须使用Windows时，Notepad++是众多程序员最喜爱的文本编辑器，在Ubuntu下是否能够使用到相同的软件呢？Notepadqq就是这样一款与Notepad++非常接近的编辑器，拥有几乎相同的功能。 如果您是一个Notepad++粉丝，我们推荐您尝试下Notepadqq。\n对于Ubuntu发行版本可以通过PPA安装，命令如下： sudo add-apt-repository ppa:notepadqq-team/notepadqq sudo apt-get update sudo apt-get install notepadqq 类似的，卸载命令如下：\nsudo apt-get remove notepadqq sudo add-apt-repository \u0026ndash;remove ppa:notepadqq-team/notepadqq\n"}),a.add({id:39,href:'/life/docs/javadir/middleware/redis/',title:"Redis 学习与使用",section:"中间件 ",content:"一.Redis介绍\r#\r\r1.1引言\r#\r\r 1:由于用户量大，请求了随之增大，数据压力过大。 2:多台服务器之间数据不同步 3:多台服务器之间的锁已经不存在互斥性了\n #\r\r1.2 NOSQL\r#\r\r redis就是nosql\n  非关系数据库 \u0026gt; not only sql\n 1:key-value redis 2:文档型 solr,Mongodb,ElasticSearch 3:面向列 Hbase(一般大数据) 4:图形化 Neo4j\n  1.3 redis介绍\r#\r\r Redis（Remote Dictionary Server )，即远程字典服务，是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。 Redis是一款基于Key-Value的NOSQL，而且Redis是基于内存存储数据的,Redis还提供了多种持久化机制，Redis还提供了主从、哨兵以及集群的搭建方式，可以更方便的横向扩展以及垂直扩展\n  操作都是原子的\n 所有 Redis 的操作都是原子的，从而确保当两个客户同时访问 Redis 服务器时，得到的是更新后的值（最新值）。在需要高并发的场合可以考虑使用 Redis 的事务，处理一些需要锁的业务。\n  二.Redis安装\r#\r\rredis 注册服务\r#\r\rC:\\Users\\noatn\u0026gt;e:\rE:\\\u0026gt;cd E:\\CS\\Redis-x64-3.2.100\rE:\\CS\\Redis-x64-3.2.100\u0026gt;redis-server.exe service-install redis.windows.conf\r[18580] 27 Apr 09:09:52.679 # Fatal error, can't open config file 'service-install'\rE:\\CS\\Redis-x64-3.2.100\u0026gt;redis-server.exe --service-install redis.windows.conf\r[6244] 27 Apr 09:10:07.336 # Granting read/write access to 'NT AUTHORITY\\NetworkService' on: \u0026quot;E:\\CS\\Redis-x64-3.2.100\u0026quot; \u0026quot;E:\\CS\\Redis-x64-3.2.100\\\u0026quot;\r[6244] 27 Apr 09:10:07.337 # Redis successfully installed as a service.\rE:\\CS\\Redis-x64-3.2.100\u0026gt;\r三.Redis命令\r#\r\r keys * 获取所有的key\rclear 清除屏幕\rquit ,exit 退出\rset name blake 设置值\rsetex ip 5 192.1.1.168 设置值并且设置过期时长\rget name 取出值\rdel name 删除key所对应的值\rexists key 判断是否存在key\rmset key1,key2...设置多个值\rmget key1,key2...取出多个值\rappend age 1 追加key的value\rstrlen key 获取某个key的value的长度\rselect index 选择数据库 (注意redis一共16个数据库 并且从0开始)\rmove key db或者 move key index (redis一共16个数据库 move age 7) 将某个key移动到某个数据库中\rflushdb 清除当前数据库\rflushall 清除16个数据库\rtype key 获取数据类型 (type name == \u0026gt; string)\r3.1 redis存储数据结构\r#\r\r 字符串列表 key-string 无序不重复的字符串集合 key-set 有序不重复的字符串集合 key-list 键、值都为字符串的哈希表 key-hash 有序集合 key-zset  3.2存储结构用处\r#\r\r key-string :最常用的，一般用于存储一个值 key-hash:存储一个对象数据的 key-list:使用list结构实现栈和队列结构 key-set: 交集、差集、并集操作 key-zset : 排行榜,积分存储  "}),a.add({id:40,href:'/life/docs/operating_system/linux/ubuntu16.04%E4%BF%AE%E6%94%B9hosts/',title:"Ubuntu 16.04修改hosts",section:"linux学习与使用 ",content:"IntelliJ IDE运行Tomcat报错解决办法的相关资料,出现“Unable to ping server at localhost:1099”错误解决方法，需要的朋友可以参考下\nsudo gedit /etc/hosts\n"}),a.add({id:41,href:'/life/docs/operating_system/linux/ubuntu%E5%AE%89%E8%A3%85chmsee/',title:"ubuntu安装chmsee",section:"linux学习与使用 ",content:"垃圾的ubuntu 14.04 又一次去掉一些特别好用的软件, 官方给的解释是怕破坏他们系统. 只想说一句 我去年买了个本.\n14.04 之前的版本,如13.10, 12.04 继续能够使用 sudo apt-get install chmsee 来安装.\n14.04 需要下载安装包来安装:\nsudo apt-get install libc6 libchm1 libgcrypt11 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk2.0-0 libpango1.0-0 libwebkitgtk-1.0-0 libxml2 安装依赖包\n(64位) sudo dpkg -i chmsee_1.3.0-2ubuntu2_amd64.deb 安装软件包,下载地址: http://kr.archive.ubuntu.com/ubuntu/pool/universe/c/chmsee/chmsee_1.3.0-2ubuntu2_amd64.deb Ubuntu的官方软件库放心下载.\n(32位) sudo dpkg -i chmsee_1.3.0-2ubuntu2_i386.deb 安装软件包,下载地址: http://kr.archive.ubuntu.com/ubuntu/pool/universe/c/chmsee/chmsee_1.3.0-2ubuntu2_i386.deb Ubuntu的官方软件库放心下载.\n"}),a.add({id:42,href:'/life/docs/operating_system/linux/ubuntu%E6%B8%85%E7%90%86%E7%B3%BB%E7%BB%9F%E5%9E%83%E5%9C%BE/',title:"Ubuntu清理系统垃圾",section:"linux学习与使用 ",content:"1，非常有用的清理命令： sudo apt-get autoclean \u0026ndash;清理旧版本的软件缓存 www.2cto.com\nsudo apt-get clean\u0026ndash;清理所有软件缓存\nsudo apt-get autoremove\u0026ndash;删除系统不再使用的孤立软件\n这三个命令主要清理升级缓存以及无用包的。\n2，清理opera firefox的缓存文件： ls ~/.opera/cache4 ls ~/.mozilla/firefox/*.default/Cache\n3，清理Linux下孤立的包： 图形界面下我们可以用：gtkorphan sudo apt-get install gtkorphan -y 终端命令下我们可以用：deborphan sudo apt-get install deborphan -y\n4，卸载：tracker 这个东西一般我只要安装Ubuntu就会第一删掉tracker 他不仅会产生大量的cache文件而且还会影响开机速度。所以在新得利里面删掉就行。 www.2cto.com\n5，删除多余的内核：一定不要删错哦，切记！！ 打开终端敲命令：dpkg \u0026ndash;get-selections|grep linux 有image的就是内核文件 删除老的内核文件： sudo apt-get remove 内核文件名（例如：linux-image-2.6.27-2-generic） 内核删除，释放空间了，应该能释放130－140M空间。\n最后不要忘了看看当前内核：uname -a 附录： 包管理的临时文件目录: 包在 /var/cache/apt/archives 没有下载完的在 /var/cache/apt/archives/partial\n"}),a.add({id:43,href:'/life/docs/operating_system/linux/ubuntu%E8%BD%AF%E4%BB%B6%E5%8D%B8%E8%BD%BD/',title:"ubuntu软件卸载",section:"linux学习与使用 ",content:"ubuntu软件卸载\n安装Synaptic\nsudo apt-get install synaptic\n"}),a.add({id:44,href:'/life/docs/javadir/thread/glossary/',title:"名词解释",section:"多线程与并发 ",content:"  FIFO队列 (先进先出队列)\n  jni 远程调用 编译器代码\n  LongAdder\n  "}),a.add({id:45,href:'/life/docs/databases/postgresql/postgresql_create%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90/',title:"权限",section:"postgresql学习笔记",content:"权限\r#\r\r 系统权限 role和user都是用户,只不过role属性不能登录当然也可以指定 超级权限 不做权限检查(实际中是很危险的)\n Pg权限分为两部分，一部分是“系统权限”或者数据库用户的属性，可以授予role或user（两者区别在于login权限）；\r一部分为数据库对象上的操作权限。对超级用户不做权限检查，其它走acl。\r对于数据库对象，开始只有所有者和超级用户可以做任何操作，其它走acl。\r在pg里，对acl模型做了简化，组和角色都是role，用户和角色的区别是角色没有login权限。\r超级权限\r#\r\r 创建超级用户(create user alice with superuser password \u0026lsquo;123456\u0026rsquo;;)系统不会做权限操作校验,仅仅是不能够创建用户与删除用户  系统权限\r#\r\r  (create role blake password \u0026lsquo;123456\u0026rsquo;;)(create user bob password \u0026lsquo;123456\u0026rsquo;;)(create database testdb;)\n  (grant all on database testdb to bob;grant all on database testdb to blake;)\n  测试如下 用户bob可以登录而blake不能登录直接抛出了FATL:role blake is not \u0026lsquo;permitted to log in\u0026rsquo;\n  ( drop database testdb;drop role blake;drop user bob;)\n  (create user bob password \u0026lsquo;123456\u0026rsquo;;)(alter user bob set default_transaction_read_only=on;grant all on database testdb to bob;grant select on all tables in schema public to bob; )\n  (revoke all on database testdb from bob;revoke select on all tables in schema public from bob;)删除前撤销(drop user bob)\n  (grant DELETE,UPDATE,SELECT,INSERT on all tables in schema public to bob;)\n  查询\r#\r\r 查询系统中用户的权限(SELECT * FROM pg_roles;) 显示用户和用户的用户属性(\\du) 查看全部可设置的管理权限(\\h)  删除\r#\r\r (drop user bob) (drop role bob)要注意在删除前必须把权限先删除,还有一种笨办法就是把数据库先备份然后在删除这时就可以删除用户了  系统登录\r#\r\r (sudo su postgres -c psql template1)(psql -U alice -d testdb -h localhost -W)参数含义: -U指定用户 -d要连接的数据库 -h要连接的主机 -W提示输入密码。  修改系统密码\r#\r\r (sudo passwd -d postgres)  sudo su postgres -c psql template1\r会出现 postgres=#\r输入postgres=# \\password\r输入２次密码\r然后输入(退出)\rpostgres=# \\q\r"}),a.add({id:46,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/talk_theme/girl/ytaerczr7w/',title:"追女生",section:"聊天话题",content:"男生圈子太小如何才能认识更多的女生\r#\r\r剧本杀\r#\r\r 1 剧本杀圈子女多男少 2 剧本杀相处时间有好几个小时 3 剧本杀中你们会有很多东西可以聊 4 这是一位同玩剧本杀的漂亮小姐姐告诉我的答案 5 我是玩剧本杀找到我老婆的 PS 剧本杀出来前也有跑团和桌游（狼人杀）  陌生搭讪\r#\r\r  认识女生最有效率的方式还是搭讪。但是很多男生一辈子都不敢搭讪女生，脸皮太薄注定会是单身狗。在路上看到喜欢的女生，也只敢远远的看一眼，连走近都不敢。\n  其实在搭讪之前，你可以给自己一个暗示，搭讪成功了就是一段美妙的回忆，失败了也不会就是几秒钟的尴尬。你大胆的走上去就说：“美女，你好。我今天和朋友在这里玩，远远的看到你感觉好有气质，我们能加个微信认识一下吗？”只要你的形象得体，举止大方，70%的女生都不会拒绝你。\n  找对象其实很简单，把自己打扮帅气一点，然后出去逛街，看到喜欢的类型女生就去要微信，别胆怯，一定要大胆上去加她好友\n  首先反观自省，反思自己有没有问题，有问题修正自己，让自己变得更优秀一点，然后试着去找一找，找到合适的，或者喜欢的可以去处一处，多试几次慢慢就会找到合适的对象\n  哪里女生多就去哪里！多参加各种活动！同时是你自己也要内外兼修！\n  1、平价女装商城。\n  2、网红打卡咖啡馆。\n  3、学校附近的商业街。\n  加入一个有趣的俱乐部\n  多参加聚会\n  培养兴趣爱好\n  出去运动和购物\n  图书馆吧\n  追女生必须注意细节\r#\r\r追女生要注意仪式感\r#\r\r  和女生在交往中要时刻注意情绪 时刻注意她是否累了 是否饿了 是否渴了 是否情绪不对 语气一定要平和 总之时刻注意\n  第一次见面 假如帮女孩子买东西 不要说我帮你付钱 而要说 我来我来\n  必须经常打整 自己 和收拾自己的屋子\n  女人都是情绪动物\r#\r\r"}),a.add({id:47,href:'/life/docs/life_and_life/ga2s3gmf/',title:"下班后学习",section:"生活就是生活",content:"下班后学习\r#\r\r建议1\r#\r\r  第一，每天工作休息的时间不要玩手机，抽出5分钟的时间腹式呼吸或者喝水简单运动一下，恢复一下精力。\n  第二，回家之后第一件事情去泡个澡，一般来说泡完澡之后人的精神会好一点。\n  第三，早睡早起规律饮食。\n  建议2\r#\r\r 每天规划出学习多长时间 (做出表格每天是否按时完成 没有是因为什么原因)  建议3\r#\r\r1手机关掉 或者静音放到眼镜看不到的地方\n2.准备好学习用的工具 创造出好的学习环境 保持安静的环境\n3.列出学习时间段该干的事情，严格执行下去\n4.最重要的就是坚持下去 不管什么情况 都要做到坚持 每天坚持下去\n建议4\r#\r\r可以出去做下运动，散下步，打下球之类的，千万不要坐下来，会更累，更不想动\n建议5\r#\r\r冥想\n"}),a.add({id:48,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/ga2s3gmf/',title:"下班后学习",section:"自信",content:"下班后学习\r#\r\r建议1\r#\r\r  第一，每天工作休息的时间不要玩手机，抽出5分钟的时间腹式呼吸或者喝水简单运动一下，恢复一下精力。\n  第二，回家之后第一件事情去泡个澡，一般来说泡完澡之后人的精神会好一点。\n  第三，早睡早起规律饮食。\n  建议2\r#\r\r 每天规划出学习多长时间 (做出表格每天是否按时完成 没有是因为什么原因)  建议3\r#\r\r1手机关掉 或者静音放到眼镜看不到的地方\n2.准备好学习用的工具 创造出好的学习环境 保持安静的环境\n3.列出学习时间段该干的事情，严格执行下去\n4.最重要的就是坚持下去 不管什么情况 都要做到坚持 每天坚持下去\n建议4\r#\r\r可以出去做下运动，散下步，打下球之类的，千万不要坐下来，会更累，更不想动\n建议5\r#\r\r冥想\n"}),a.add({id:49,href:'/life/docs/operating_system/one_chapter/1_1_/',title:"操作系统的概念、功能",section:"第一章 操作系统概述 ",content:"一:大家熟悉的操作系统\r#\r\r二:知识总览\r#\r\r 1:操作系统的概念（定义）   操作系统（Operating System， OS）是指控制和管理整个计算机系统的硬件和软件资源，并合理地组织调 度计算机的工作和资源的分配；以提供给用户和其他软件方便的接口和环境；它是计算机系统中最基本 的系统软件。\n   直观的例子：打开 Windows 操作系统的“任务管理器”（快捷键：Ctrl+Alt+Del）\n  ①操作系统是系统资源的管理者\n  ②向上层提供方便易用的服务\n  ③是最接近硬件的一层软件\n  一台电脑的诞生~\rStep 1：厂家组装一台裸机\rStep 2：出售前安装操作系统\rStep 3：用户安装应用程序（eg：QQ）\rStep 4：使用 QQ 聊天\r 2:操作系统的功能和目标——作为系统资源的管理者   操作系统的功能和目标——向上层提供方便易用的服务  "}),a.add({id:50,href:'/life/docs/computer_network/physical_layer/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/',title:"数据通信基础知识 ",section:"物理层 ",content:"典型的数据通信模型\r#\r\r数据通信相关术语\r#\r\r 通信的目的是传送消息(消息:语音、文字、图像、视频等)。\n   信号:数据的电气/电磁的表现，是数据在传输过程中的存在形式。\n  数字信号/离散信号:代表消息的参数的取值是离散的\n   模拟信号/连续信号:代表消息的参数的取值是连续的   信源:产生和发送数据的源头。 信宿:接收数据的终点。 信道:信号的传输媒介。一般用来表示向某一个方向传送信息的介质，因此一条通信线路往往包含一条发送信道和一条接收信道。   信道  按传输信号分 模拟信道(传送模拟信号) 数字信道(传送数字信号) 按传输介质分 无线信道 有线信道    设计数据通信系统要考虑的三个问题\r#\r\r采用单工通信(只有一个方向)/半双工通信(回合制)/全双工通信(可以同时如擂台上拳击手打击) *\r#\r\r采用串行通信/并行通信\r#\r\r采用同步通信/异步通信\r#\r\r串行传输\u0026amp;并行传输\r#\r\r同步传输\u0026amp;异步传输\r#\r\r"}),a.add({id:51,href:'/life/docs/computer_network/physical_layer/%E7%89%A9%E7%90%86%E5%B1%82%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/',title:"物理层基本概念 ",section:"物理层 ",content:"物理层接口特性\r#\r\r 物理层解决如何在连接各种计算机的传输媒体上传输数据比特流，而不是指具体的传输媒体。 物理层主要任务：确定与传输媒体接口有关的一些特性 ==\u0026gt; 定义标准\n  1.机械特性 定义物理连接的特性，规定物理连接时所采用的规格、接口形状、引线数目、引脚数量、排列情况  2.电器特性 规定传输二进制位时，线路上信号的电压范围、阻抗匹配、传输速率和距离限制。 某网络在物理层规定，信号的电平用+10V~+15V表示二进制0，用-10V~-15V表示二进制1，电线长度限于15m以内 3.功能特性 指明某条线上出现的某一电平表示何种意义，接口部件的信号线的用途。 描述一个物理层接口引脚处于高电平时的含义 4.过程特性 定义各条物理线路的工作规程和时序关系。  "}),a.add({id:52,href:'/life/docs/computer_network/network_architecture/1.1.1%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%A6%82%E5%BF%B5-%E7%BB%84%E6%88%90-%E5%8A%9F%E8%83%BD-%E5%88%86%E7%B1%BB/',title:"计算机概念 组成 功能 分类 * ",section:"网络体系结构",content:"计算机网络\r#\r\r概念\r#\r\r 计算机网络是互连的、自治的计算机集合。  组成\r#\r\r 组成部分:硬件、软件、协议 1 工作方式:边缘部分、核心部分 2 功能组成:通信子网、资源子网  分类\r#\r\r 1 分布范围:广域网、城域网、局域网、个人区域网 2 使用者: 公用网、专用网 3 交换技术:电路交换、报文交换、分组交换 4 拓扑结构:总线型、星型、环型、网状型 5 传输技术:广播式、点对点  功能\r#\r\r 1:数据通信 2:资源共享 3:分布式处理、提高可靠性、负载均衡  "}),a.add({id:53,href:'/life/docs/operating_system/two_chapter/2_1_1/',title:"进程的概念、组成、特征",section:"第二章 进程管理 ",content:""}),a.add({id:54,href:'/life/docs/javadir/middleware/rabbit-mq/work-queues/',title:"work-queues",section:"rabbit-mq",content:"Work Queues\r#\r\r 一个生产者，一个默认的交换机，一个队列，两个消费\n 生产者\r#\r\r 需要再idea.ext.options 中加上 -Deditable.java.test.console=true\n import com.my.common.RabbitMqUtils; import com.rabbitmq.client.Channel; import com.rabbitmq.client.MessageProperties; import org.junit.Test; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import java.util.Scanner; import java.util.concurrent.TimeUnit; public class NewTask { private static final String TASK_QUEUE_NAME = \u0026#34;task_queue\u0026#34;; private final Logger logger = LoggerFactory.getLogger(getClass()); @Test public void acceptProducer()throws Exception{ Channel channel = RabbitMqUtils.getChannel(); channel.queueDeclare(TASK_QUEUE_NAME, true, false, false, null); //从控制台当中接受信息  logger.info(\u0026#34;start\u0026#34;); Scanner scanner = new Scanner(System.in); while (scanner.hasNext()) { String message = scanner.next(); channel.basicPublish(\u0026#34;\u0026#34;, TASK_QUEUE_NAME, MessageProperties.PERSISTENT_TEXT_PLAIN, message.getBytes(\u0026#34;UTF-8\u0026#34;)); logger.info(\u0026#34; [x] Sent \u0026#39;\u0026#34; + message + \u0026#34;\u0026#39;\u0026#34;); } TimeUnit.MINUTES.sleep(2); logger.info(\u0026#34;end\u0026#34;); } } 消费者\r#\r\rimport cn.hutool.core.date.DateUtil; import cn.hutool.json.JSONUtil; import com.my.common.RabbitMqUtils; import com.rabbitmq.client.CancelCallback; import com.rabbitmq.client.Channel; import com.rabbitmq.client.DeliverCallback; import org.junit.Test; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import java.util.concurrent.TimeUnit; public class NewWorker { private final Logger logger = LoggerFactory.getLogger(getClass()); private static final String TASK_QUEUE_NAME = \u0026#34;task_queue\u0026#34;; @Test public void twoWork()throws Exception{ oneWork() ; } @Test public void oneWork() throws Exception{ Channel channel = RabbitMqUtils.getChannel(); logger.info(DateUtil.now() +\u0026#34;等待接收消息....\u0026#34;); //3:推送的消息如何进行消费的接口回调  DeliverCallback deliverCallback = (consumerTag, message) -\u0026gt; { logger.info(\u0026#34;接收时间:\u0026#34;+DateUtil.now()); //consumerTag 消费者标签，用来区分多个消费者  logger.info(\u0026#34;consumerTag:\u0026#34; + consumerTag); logger.info(\u0026#34;properties:\u0026#34; + JSONUtil.toJsonStr(message.getProperties())); logger.info(\u0026#34;envelope:\u0026#34; + JSONUtil.toJsonStr(message.getEnvelope())); logger.info(\u0026#34;message:\u0026#34; + new String(message.getBody())); logger.info(\u0026#34;\u0026#34;); }; //4:取消消费的一个回调接口 如在消费的时候队列被删除掉了  CancelCallback cancelCallback = consumerTag -\u0026gt; { //consumerTag 消费者标签，用来区分多个消费者  logger.info(\u0026#34;consumerTag:\u0026#34; + consumerTag); }; /** * 消费者消费消息 * 1.消费哪个队列 * 2.消费成功之后是否要自动应答 true 代表自动应答 false 手动应答 * 3.消费者未成功消费的回调 */ channel.basicConsume(TASK_QUEUE_NAME,true,deliverCallback,cancelCallback) ; TimeUnit.MINUTES.sleep(2); } } oneWork() twoWork() 分别执行就是两个消费者\n"}),a.add({id:55,href:'/life/docs/javadir/middleware/solr/config/',title:"基本配置",section:"solr",content:"Solr 基本配置\r#\r\r 在 Solr 中有几个配置文件，您将在执行过程中与之交互。这些文件中的很多都是 XML 格式的，尽管与配置设置交互的 API 在需要时往往接受 JSON 以进行编程访问。\n   solr.xml 指定 Solr 服务器实例的配置选项。有关 solr.xml 请参阅Solr 核心和 solr.xml 的更多信息。\n  每个 Solr 核心：\n  core.properties 定义每个核心的特定属性，例如其名称、核心所属的集合、模式的位置和其他参数。有关更多详细信息 core.properties，请参阅定义 core.properties部分。\n  solrconfig.xml 控制高层行为。例如，您可以为数据目录指定一个备用位置。有关更多信息 solrconfig.xml，请参阅配置 solrconfig.xml。\n  managed-schema（或 schema.xml 改为）描述您将要求 Solr 索引的文档。Schema 将文档定义为字段的集合。您可以定义字段类型和字段本身。字段类型定义功能强大，包括有关 Solr 如何处理传入字段值和查询值的信息。有关 Solr 架构的更多信息，请参阅文档、字段和架构设计以及架构 API。\n  data/ 包含低级索引文件的目录。\n    一、 域中常用标签介绍\r#\r\r域（managed-schema）相当于数据库的表字段，用户存放数据，因此用户根据业务需要去定义相关的Field（域），一般来说，每一种对应着一种数据，用户对同一种数据进行相同的操作。 域的常用属性:\n name：指定域的名称 type：指定域的类型 indexed：是否索引 stored：是否存储 required：是否必须 multiValued：是否多值  1、域（managed-schema）\r#\r\rSolr中默认定义唯一主键key为id域\nSolr在删除、更新索引时使用id域进行判断，也可以自定义唯一主键。\n注意在创建索引时必须指定唯一约束\n\u0026lt;field name=\u0026#34;id\u0026#34; type=\u0026#34;long\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;field name=\u0026#34;name\u0026#34; type=\u0026#34;text_smartcn\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;field name=\u0026#34;content\u0026#34; type=\u0026#34;text_ik\u0026#34; multiValued=\u0026#34;true\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; 2、copyField （复制域）\r#\r\rcopyField复制域，可以将多个Field复制到一个Field中，以便进行统一的检索。\n比如，根据关键字只搜索 item_keywords 域的内容就相当于搜索 name、content，即将 name、content 复制到 item_keywords 域中。\n目标域必须是多值的。\n\u0026lt;field name=\u0026#34;item_keywords\u0026#34; type=\u0026#34;text_ik\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;false\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;copyField source=\u0026#34;name\u0026#34; dest=\u0026#34;item_keywords\u0026#34;/\u0026gt; \u0026lt;copyField source=\u0026#34;content\u0026#34; dest=\u0026#34;item_keywords\u0026#34;/\u0026gt; 3、dynamicField（动态字段）\r#\r\r动态字段就是不用指定具体的名称，只要定义字段名称的规则，例如定义一个 dynamicField，name 为*_i，定义它的 type 为 text，那么在使用这个字段的时候， 任何以_i结尾的字段都被认为是符合这个定义的，例如：name_i，gender_i，school_i等。 自定义 Field 名为：product_title_t，“product_title_t” 和 managed-schema 文件中的 dynamicField 规则匹配成功。\n\u0026lt;dynamicField name=\u0026#34;item_spec_*\u0026#34; type=\u0026#34;string\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34; /\u0026gt; 二、Solr 添加中文分词器\r#\r\r其实 Solr 已经自带了中文分词器 lucene-analyzers-smartcn 在解压后 \\solr-8.11\\solr-8.11.0\\contrib\\analysis-extras\\lucene-libs 目录下 lucene-analyzers-smartcn.jar 这就是 Solr 自带的中文分词器，我们只需要将该文件拷贝到 Solr 服务 Jetty 或 Tomcat 的 webapp/WEB-INF/lib/ 目录下就可以了。\ncp /solr-8.11.0/contrib/analysis-extras/lucene-libs/lucene-analyzers-smartcn-8.11.0.jar /solr-8.11.0/server/solr-webapp/webapp/WEB-INF/lib 在你指定 Solr 核心的 conf 目录下 managed-schema 文件中添加以下内容就ok了\n\u0026lt;!-- 配置中文分词器 --\u0026gt; \u0026lt;fieldType name=\u0026#34;text_smartcn\u0026#34; class=\u0026#34;solr.TextField\u0026#34; positionIncrementGap=\u0026#34;100\u0026#34;\u0026gt; \u0026lt;analyzer type=\u0026#34;index\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;org.apache.lucene.analysis.cn.smart.HMMChineseTokenizerFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;analyzer type=\u0026#34;query\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;org.apache.lucene.analysis.cn.smart.HMMChineseTokenizerFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;/fieldType\u0026gt; 如果你觉得 Solr 自带的中文分词器满足不了你预期的分词效果，那你也可以添加外部的分词器。 首先我们先去下载你要添加的外部分词器IK 分词器下载（ik-analyzer-solr）。 在将该文件拷贝到 Solr 服务 Jetty 或 Tomcat 的 webapp/WEB-INF/lib/ 目录下，最后配置在 managed-schema 文件中添加以下内容就ok了\n\u0026lt;!-- ik分词器 --\u0026gt; \u0026lt;fieldType name=\u0026#34;text_ik\u0026#34; class=\u0026#34;solr.TextField\u0026#34;\u0026gt; \u0026lt;analyzer type=\u0026#34;index\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;org.wltea.analyzer.lucene.IKTokenizerFactory\u0026#34; useSmart=\u0026#34;false\u0026#34; conf=\u0026#34;ik.conf\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;analyzer type=\u0026#34;query\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;org.wltea.analyzer.lucene.IKTokenizerFactory\u0026#34; useSmart=\u0026#34;true\u0026#34; conf=\u0026#34;ik.conf\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;/fieldType\u0026gt; 最后在 managed-schema 文件中给要分词的字段指定分词器\n\u0026lt;field name=\u0026#34;name\u0026#34; type=\u0026#34;text_smartcn\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;field name=\u0026#34;content\u0026#34; type=\u0026#34;text_ik\u0026#34; multiValued=\u0026#34;true\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; 注意：indexed=\u0026ldquo;true\u0026rdquo;，solr默认下content这个字段的indexed的值是false，需要改成true，在搜索时这个字段才能用到上面的分词器。\n配置完重启 Solr 就 ok 了。\n三、Solr 配置数据库\r#\r\r1、配置数据源\r#\r\r如果想要导入数据库，需要将相应的数据库驱动的 jar 包导入到 Solr 服务 Jetty 或 Tomcat 的 webapp/WEB-INF/lib/ 目录下。 然后在你自己的核心源文件夹打开 conf 文件夹，我们需要配置 solrconfig.xml，managed-schema 文件增加一个数据库配置文件。\n2、配置 solrconfig.xml\r#\r\r数据库 Solr 的 jar 包引入，找到对应配置位置加入如下配置，在 solrconfig.xml 文件75行左右。\n\u0026lt;lib dir=\u0026#34;${solr.install.dir:../../../..}/dist/\u0026#34; regex=\u0026#34;solr-dataimporthandler-\\d.*\\.jar\u0026#34; /\u0026gt; 增加数据源配置 xml 文件，找到 name 为 /select 的 requestHandler 节点，在上面加入以下配置，其中 config 里面为数据源配置文件名字。\n\u0026lt;requestHandler name=\u0026#34;/dataimport\u0026#34; class=\u0026#34;org.apache.solr.handler.dataimport.DataImportHandler\u0026#34;\u0026gt; \u0026lt;lst name=\u0026#34;defaults\u0026#34;\u0026gt; \u0026lt;str name=\u0026#34;config\u0026#34;\u0026gt;data-config.xml\u0026lt;/str\u0026gt; \u0026lt;/lst\u0026gt; \u0026lt;/requestHandler\u0026gt; 在 Solr 核心 conf 文件夹下新增配置数据源的 xml 文件（也就是 solrconfig.xml 文件中 name 为 /dataimport 的 requestHandler 节点中 config 指定的文件）。\n dataSource：中配置数据库数据 type：为类型 driver：为对应数据库的驱动类 url：为数据库地址 user：为数据库账户 password：为数据库密码 entity：为需要的查询数据源语句  其中 entity 节点下 field 为查出的数据需要向 Solr 中存储的字段已经对应存入到 Solr 中的字段名称。\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; ?\u0026gt; \u0026lt;dataConfig\u0026gt; \u0026lt;dataSource type=\u0026#34;JdbcDataSource\u0026#34; driver=\u0026#34;com.mysql.jdbc.Driver\u0026#34; url=\u0026#34;jdbc:mysql://192.168.1.11:3306/solr_xt?characterEncoding=utf-8\u0026amp;amp;useUnicode=true\u0026amp;amp;zeroDateTimeBehavior=convertToNull\u0026#34; user=\u0026#34;root\u0026#34; password=\u0026#34;root\u0026#34; /\u0026gt; \u0026lt;document\u0026gt; \u0026lt;entity name=\u0026#34;solrTest\u0026#34; query=\u0026#34;SELECT name,content FROM solrTest\u0026#34;\u0026gt; \u0026lt;!-- 查询的数据和数据库索引意义对应 column 是查询的字段 name 是 Solr 索引对应的字段 --\u0026gt; \u0026lt;field column=\u0026#34;id\u0026#34; name=\u0026#34;id\u0026#34;/\u0026gt; \u0026lt;field column=\u0026#34;name\u0026#34; name=\u0026#34;id\u0026#34; /\u0026gt; \u0026lt;field column=\u0026#34;content\u0026#34; name=\u0026#34;title\u0026#34; /\u0026gt; \u0026lt;/entity\u0026gt; \u0026lt;/document\u0026gt; \u0026lt;/dataConfig\u0026gt; 最后记得修改 Solr 核心 core/conf 目录下 managed-schema 文件  标签，新增需要索引的列。\n完成所有配置后记得要重启 Solr 服务。\n四、Solr 配置全量更新\r#\r\r完成以上第2步数据源配置后，直接在 Solr AdminUI 管理页面就行数据全量更新就行了。\n五、Solr 配置增量更新\r#\r\r在做数据增量更新时，需要做增量更新的数据源表几个增量必要条件必须存在。\n 如果只涉及添加，与修改业务，那么数据库里只需额外有一个 timpstamp 字段就可以了，默认值为当前系统时间，CURRENT_TIMESTAMP。 如果还涉及删除业务，那么数据里就需额外再多添加一个字段 isdelete，int 类型的用0,1来标识，此条记录是否被删除。  增量更新就是在全量更新的基础上加上一些配置：\n query：查询数据库表符合记录数据。 deltaQuery：增量索引查询主键ID，注意这个只能返回ID字段。 deltaImportQuery：增量索引查询导入数据。 deletedPkQuery：增量索引删除主键ID查询。  \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; ?\u0026gt; \u0026lt;dataConfig\u0026gt; \u0026lt;!--数据源--\u0026gt; \u0026lt;dataSource type=\u0026#34;JdbcDataSource\u0026#34; driver=\u0026#34;com.mysql.jdbc.Driver\u0026#34; url=\u0026#34;jdbc:mysql://192.168.1.11:3306/solr_xt?characterEncoding=utf-8\u0026amp;amp;useUnicode=true\u0026amp;amp;zeroDateTimeBehavior=convertToNull\u0026#34; user=\u0026#34;root\u0026#34; password=\u0026#34;root\u0026#34;/\u0026gt; \u0026lt;document\u0026gt; \u0026lt;entity name=\u0026#34;solrTest\u0026#34; query=\u0026#34;SELECT id,name,content FROM solrTest where flag = \u0026#39;0\u0026#39;\u0026#34; deltaImportQuery = \u0026#34;SELECT id,name,content FROM solrTest where fid = \u0026#39;${dataimporter.delta.fid}\u0026#39;\u0026#34; deltaQuery = \u0026#34;SELECT id FROM solrTest where flastupdatetime \u0026gt; \u0026#39;${dataimporter.last_index_time}\u0026#39; and flag = \u0026#39;0\u0026#39;\u0026#34; deletedPkQuery = \u0026#34;SELECT id FROM solrTest where flag = \u0026#39;1\u0026#39;\u0026#34; \u0026gt; \u0026lt;!-- 查询的数据和数据库索引意义对应 column 是查询的字段 name 是 Solr 索引对应的字段 --\u0026gt; \u0026lt;field column=\u0026#34;id\u0026#34; name=\u0026#34;id\u0026#34;/\u0026gt; \u0026lt;field column=\u0026#34;name\u0026#34; name=\u0026#34;name\u0026#34;/\u0026gt; \u0026lt;field column=\u0026#34;content\u0026#34; name=\u0026#34;content\u0026#34;/\u0026gt; \u0026lt;/entity\u0026gt; \u0026lt;/document\u0026gt; \u0026lt;/dataConfig\u0026gt; 完成配置在 Solr AdminUI 管理页面就行数据增量更新就行了\n"}),a.add({id:56,href:'/life/docs/python/install/pyecharts/',title:"python pyecharts  ",section:"python 插件学习",content:"pyecharts\r#\r\r Python可视化神器之pyechart\n 参考1 参考2\n"}),a.add({id:57,href:'/life/docs/python/base/pip/',title:"python pip",section:"python 基础学习",content:"安装\r#\r\r目前如果你在Python官网下载最新版本的安装包，都已经自带了该工具\nPython 2.7.9 + 或 Python 3.4+ 以上版本都自带 pip 工具。\n 检测安装  C:\\Users\\noatn\u0026gt; pip --version pip 23.0.1 from c:\\soft\\python\\lib\\site-packages\\pip (python 3.7) C:\\Users\\noatn\u0026gt;  下载安装  可以通过命令 pip \u0026ndash;version 来判断是否已安装： pip \u0026ndash;version\n如果你还未安装，则可以使用以下两种方法来安装：\n1、Python附带了一个ensurepip模块，可以在Python环境中安装pip。cmd输入以下命令\npy -m ensurepip --upgrade 2、还可以下载一个Python脚本，使用命令行引导逻辑来安装pip\n下载脚本 到你的Python文件夹下 win+cmd打开终端，切换至你脚本的目录 输入命令回车\npy get-pip.py 最常用命令\r#\r\r 升级pip  python -m pip install --upgrade pip  显示版本和路径  C:\\Users\\noatn\u0026gt;pip --version pip 23.0.1 from c:\\soft\\python\\lib\\site-packages\\pip (python 3.7) C:\\Users\\noatn\u0026gt;  获取帮助  C:\\Users\\noatn\u0026gt;pip --help Usage: pip \u0026lt;command\u0026gt; [options] Commands: install Install packages. download Download packages. uninstall Uninstall packages. freeze Output installed packages in requirements format. inspect Inspect the python environment. list List installed packages. show Show information about installed packages. check Verify installed packages have compatible dependencies. config Manage local and global configuration. search Search PyPI for packages. cache Inspect and manage pip\u0026#39;s wheel cache. index Inspect information available from package indexes. wheel Build wheels from your requirements. hash Compute hashes of package archives. completion A helper command used for command completion. debug Show information useful for debugging. help Show help for commands. General Options: -h, --help Show help. --debug Let unhandled exceptions propagate outside the main subroutine, instead of logging them to stderr. --isolated Run pip in an isolated mode, ignoring environment variables and user configuration. --require-virtualenv Allow pip to only run in a virtual environment; exit with an error otherwise. --python \u0026lt;python\u0026gt; Run pip with the specified Python interpreter. -v, --verbose Give more output. Option is additive, and can be used up to 3 times. -V, --version Show version and exit. -q, --quiet Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels). --log \u0026lt;path\u0026gt; Path to a verbose appending log. --no-input Disable prompting for input. --proxy \u0026lt;proxy\u0026gt; Specify a proxy in the form scheme://[user:passwd@]proxy.server:port. --retries \u0026lt;retries\u0026gt; Maximum number of retries each connection should attempt (default 5 times). --timeout \u0026lt;sec\u0026gt; Set the socket timeout (default 15 seconds). --exists-action \u0026lt;action\u0026gt; Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort. --trusted-host \u0026lt;hostname\u0026gt; Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS. --cert \u0026lt;path\u0026gt; Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See \u0026#39;SSL Certificate Verification\u0026#39; in pip documentation for more information. --client-cert \u0026lt;path\u0026gt; Path to SSL client certificate, a single file containing the private key and the certificate in PEM format. --cache-dir \u0026lt;dir\u0026gt; Store the cache data in \u0026lt;dir\u0026gt;. --no-cache-dir Disable the cache. --disable-pip-version-check Don\u0026#39;t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index. --no-color Suppress colored output. --no-python-version-warning Silence deprecation warnings for upcoming unsupported Pythons. --use-feature \u0026lt;feature\u0026gt; Enable new functionality, that may be backward incompatible. --use-deprecated \u0026lt;feature\u0026gt; Enable deprecated functionality, that will be removed in the future. C:\\Users\\noatn\u0026gt;  升级 pip  C:\\Users\\noatn\u0026gt;pip install -U pip Requirement already satisfied: pip in c:\\soft\\python\\lib\\site-packages (23.0.1) WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by \u0026#39;ProxyError(\u0026#39;Cannot connect to proxy.\u0026#39;, OSError(0, \u0026#39;Error\u0026#39;))\u0026#39;: /simple/pip/ WARNING: Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by \u0026#39;ProxyError(\u0026#39;Cannot connect to proxy.\u0026#39;, OSError(0, \u0026#39;Error\u0026#39;))\u0026#39;: /simple/pip/ WARNING: Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by \u0026#39;ProxyError(\u0026#39;Cannot connect to proxy.\u0026#39;, OSError(0, \u0026#39;Error\u0026#39;))\u0026#39;: /simple/pip/ WARNING: Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by \u0026#39;ProxyError(\u0026#39;Cannot connect to proxy.\u0026#39;, OSError(0, \u0026#39;Error\u0026#39;))\u0026#39;: /simple/pip/ WARNING: Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by \u0026#39;ProxyError(\u0026#39;Cannot connect to proxy.\u0026#39;, OSError(0, \u0026#39;Error\u0026#39;))\u0026#39;: /simple/pip/ C:\\Users\\noatn\u0026gt; ps:升级需谨慎，经常看到pip提醒升级，然后输入命令回车，系统开始下载最新版安装包，\r准备安装前卸载了旧版pip，然后新版又报错无法安装，只好又重装。\r 安装包  pip install SomePackage # 最新版本 pip install SomePackage==1.0.4 # 指定版本 pip install ‘SomePackage\u0026gt;=1.0.4’ # 最小版本\n比如我要安装sklearn，输入pip install sklearn，就会安装最新版本的包\n 升级包  pip install \u0026ndash;upgrade SomePackage\n升级指定的包，通过使用==, \u0026gt;=, \u0026lt;=, \u0026gt;, \u0026lt; 来指定一个版本号。  卸载包  pip uninstall SomePackage\n 搜索包  pip search SomePackage\n 显示安装包信息  pip show SomePackage\n 列出已安装的包  pip list\nE:\\pythonProjects\\python_first\u0026gt;pip list Package Version ---------- ------- pip 23.0.1 setuptools 41.2.0  查看指定包的详细信息  pip show -f SomePackage\n 查看需要被升级的包  我们需要查看一下现有的这些包中，哪些是需要是被升级的，可以用下面这行命令行来查看\npip list -o\n 查看兼容问题  在下载安装一些标准库的时候，需要考虑到兼容问题，一些标准库的安装可能需要依赖其他的标准库，会存在版本相冲突等问题，我们先用下面这条命令行来检查一下是否会有冲突的问题存在\npip check package_name\n当然要是我们不指定是哪个标准库的话，会检查现在已经安装的所有包中的是否存在版本冲突等问题\npip check\n 指定国内源来安装  我们要是感觉到安装的速度有点慢，可以指定国内的源来安装某个包，例如\npip install -i https://pypi.douban.com/simple/ package_name\n 国内源有  清华：https://pypi.tuna.tsinghua.edu.cn/simple\r阿里云：http://mirrors.aliyun.com/pypi/simple/\r中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/\r华中理工大学：http://pypi.hustunique.com/\r山东理工大学：http://pypi.sdutlinux.org/ 豆瓣：http://pypi.douban.com/simple/\r 下载包但是不安装  要是我们想要下载某个包到指定的路径下，命令行如下\npip download package_name -d \u0026ldquo;某个路径\u0026rdquo;\n例如\npip download requests -d \u0026ldquo;.\u0026rdquo;\n就是在当前的目录下下载requests模块以及其他所要依赖的模块\n 在国内无法安装某些包但是又无法达梯子的情况  比如安装 requests\n正常是 pip install requests 折中方案 pip install requests -i http://pypi.douban.com/simple/ \u0026ndash;trusted-host pypi.douban.com\n//这里注意假如提醒你升级pip 那你升级后在重新安装包 // 有可能是叫你升级(python3版本对应的pip哦)\n 建议使用 豆瓣的 (豆瓣网站就是python涉及到的包多一点) 各个大学可能带科研性质的多一点  "}),a.add({id:58,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E6%B2%9F%E9%80%9A%E6%8A%80%E5%B7%A7/case2/',title:"如何清晰明了的向他人介绍清楚这个问题",section:"沟通技巧",content:" 向别人阐述问题的前提是，阐述者要清楚问题，要对问题形成一个全面系统的了解\n  向对方讲清楚问题，就要有换位思考思维，要从对方的立场去介绍问题。并且，向对方阐述问题的目的是什么？汇报请示、寻求帮助、转述传递，等等。\n  不同的诉求，应采取不用的方式。除此之外，还应当清楚对方的所谓的话语体系，通过对方平常的表达方式、接受方式去讲问题，则会有助于对方接受问题信息准确率的提高。\n  如果是比较重的问题，并且时间允许，建议可先把问题按逻辑写下来，讲之前好好捋捋\n  向同事  ① 界定问题；\n明确问题，明确问题目标，才有可能去有针对性的解决问题。\n② 清楚问题产生的原因；\n事物都有其规律和存在原因，分析问题产生的原因，就能够更加准确地表达问题，解决问题。\n③ 针对问题产生的原因思考解决问题的方案；\n条理清晰，方案明确合理，就可以得到有效的反馈和问题解决进展。\n④ 回收总结；\n最后的闭环，将问题实施解决以后，避免下次再有此类问题产生，可以针对性的回收，并且进行有效改善，这样问题就会被避免掉。\n 向领导  "}),a.add({id:59,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/iqcs36rgjy/j74dbsrtzw/',title:"我无所畏惧，因为",section:"人际剖析",content:"我无所畏惧，因为\r#\r\r稀缺性\n构建自身稀缺性的五个维度：信息、知识、能力、认知和资源\r#\r\r 1、信息﻿  ﻿\n生活中存在信息差。\n搜集高质量信息的能力\n对重要信息的理解\n 2、知识﻿  ﻿\n长期积累，知识体系化，形成跨学科理解\n 3、能力﻿  ﻿ 输出能力、综合能力\n能力是在实践中练习出来的。\n 4、认知﻿  认知就是高维度思想——指路社哲讲堂23、24、30\n认知类型如：站在对方的角度/全局想问题、跳出当下的维度（时间）从你未来的目标逆推现在的行动、站在现在的时间维度预判未来的趋势和风口\n提升认知的方法就是多接触人，尤其是高人\n历史高人：阅读其著作、研究其传记。\n现在高人：花钱买其时间。\n重要的是同领域头部，如果想在这个领域做大做强，就需要将头部研究透彻。\n 5、资源﻿  商业资源：供应商、渠道、客户\n个人资源：钱、人脉、修养/谈资\n只有你能帮到对方的地方才叫做人脉。\n二、其他构成魅力的要素：真实、神性和兽性\r#\r\r﻿\n 真实 ﻿  真实的力量是最强大的\n﻿\n 神性和兽性 ﻿  每个人都有神性和兽性，要利用好这些智慧，就是要记住我们从哪里来（兽性：初始状态、无所畏惧）、去哪里（神性：愿景、目标、使命）\n行动上没必要那么聪明，敢去做行动上的傻子\n当你在行动你所得到的都是答案 ﻿\n 主场 ﻿ 实际上就是环境。  主场能给人力量。\n链接\n"}),a.add({id:60,href:'/life/docs/javadir/middleware/nginx/',title:"Nginx 学习与使用",section:"中间件 ",content:"一、Nginx 简介\r#\r\rNginx (engine x) 是一款轻量级的 Web 服务器 、反向代理服务器及电子邮件（IMAP/POP3）代理服务器。\n前辈总结\r#\r\r  nginx 是一款自由的、开源的、高性能的 HTTP 服务器和反向代理服务器；\n  同时也是一个 IMAP、POP3、SMTP 代理服务器；\n  nginx 可以作为一个 HTTP 服务器进行网站的发布处理，\n  另外 nginx 可以作为反向代理进行负载均衡的实现。\n  二、反向代理\r#\r\r 反向代理（Reverse Proxy）方式是指以代理服务器来接受 internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 internet 上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器\n 要解释反向代理，我们就不得不先说下什么是代理？\n那么什么是代理呢？\n举个例子：代理 就如同生活中的专卖店～客人到 adidas 专卖店买了一双鞋，这个专卖店就是代理，被代理角色就是 adidas 厂家，目标角色就是用户。\n那么什么是反向代理呢？\n我们很多人应该都用过淘宝，要知道每天同时连接到淘宝网站的访问人数已经爆表，单个服务器远远不能满足人民日益增长的购买欲望了，此时就出现了一个大家耳熟能详的名词：分布式部署；\n也就是通过部署多台服务器来解决访问人数限制的问题；淘宝网站中大部分功能也是直接使用 nginx 进行反向代理实现的，并且通过封装 nginx 和其他的组件之后起了个高大上的名字： Tengine\n然后我们一起看个图： 上图表示的是全国各地的用户在淘宝客户端发出请求，经过了 Nginx 反向代理服务器，nginx 服务器接收到之后，按照一定的规则分发给了后端的业务处理服务器进行处理。\n此时～请求的来源也就是客户端是明确的，但是请求具体由哪台服务器处理的并不明确了。Nginx 扮演的就是一个反向代理角色。\n总结下：反向代理，主要用于服务器集群分布式部署的情况下，反向代理隐藏了服务器的信息\n三、正向代理\r#\r\r一般聪明的人会有举一反三的思维，当你听到反向代理，也许就会想有没有正向代理呢？答案是有\n举 个例子：如今的网络环境下，我们如果由于技术需要要去访问国外的某些网站，此时你会发现位于国外的某网站我们通过浏览器是没有办法访问的， 此时大家可能都会用一个操作 FQ（VPN）进行访问，FQ 的方式主要是找到一个可以访问国外网站的代理服务器，我 们将请求发送给代理服务器，代理服务器去访问国外的网站，然后将访问到的数据传递给我\n上述这样的代理模式称为正向代理\n正向代理最大的特点: 客户端非常明确要访问的服务器地址；服务器只清楚请求来自哪个代理服务器，而不清楚来自哪个具体的客户端；正向代理模式屏蔽或者隐藏了真实客户端信息\n正向代理和反向代理一起使用就会像下图这样：\n四、Nginx 负载均衡\r#\r\r想要知道什么是负载均衡，我们就得明白两个概念，什么是负载量？什么是均衡？\n如图\n上面客户端发送的、nginx 反向代理服务器接收到的请求数量，就是我们说的负载量\n什么又是均衡呢？\n请求数量按照一定的规则进行分发到不同的服务器处理的规则，就是一种均衡规则\n所以负载均衡就是：将服务器接收到的请求按照规则分发的过程\n负载均衡在实际项目操作过程中，有硬件负载均衡和软件负载均衡两种\n硬件负载均衡也称为硬负载，特点：造价昂贵成本较高，数据的稳定性安全性好。\n更多的公司考虑到成本原因，会选择使用软件负载均衡，软件负载均衡是利用现有的技术结合主机硬件实现的一种消息队列分发机制。\nnginx 支持的负载均衡调度算法方式如下：\r#\r\r weight 轮询（默认）  接收到的请求按照顺序逐一分配到不同的后端服务器，即使在使用过程中，某一台后端服务器宕机，nginx 会自动将该服务器剔除出队列，请求受理情况不会受到任何影响。 这种方式下，可以给不同的后端服务器设置一个权重值（weight），用于调整不同的服务器上请求的分配率；权重数据越大，被分配到请求的几率越大；该权重值，主要是针对实际工作环境中不同的后端服务器硬件配置进行调整的。\n ip_hash  每个请求按照发起客户端的 ip 的 hash 结果进行匹配，这样的算法下一个固定 ip 地址的客户端总会访问到同一个后端服务器，这也在一定程度上解决了集群部署环境下 session 共享的问题\n fair  智能调整调度算法，动态的根据后端服务器的请求处理到响应的时间进行均衡分配，响应时间短处理效率高的服务器分配到请求的概率高，响应时间长处理效率低的服务器分配到的请求少；结合了前两者的优点的一种调度算法。但是需要注意的是 nginx 默认不支持 fair 算法，如果要使用这种调度算法，请安装 upstream_fair 模块\n url_hash  按照访问的 url 的 hash 结果分配请求，每个请求的 url 会指向后端固定的某个服务器，可以在 nginx 作为静态服务器的情况下提高缓存效率。同样要注意 nginx 默认不支持这种调度算法，要使用的话需要安装 nginx 的 hash 软件包\nNginx 另外一种实现负载均衡的方式\r#\r\r其实关于 Nginx 实现负载均衡，除了上面那种模式外，还有一种 Nginx 处理静态资源实现负载均衡的架构。\n我们先来看看原始的企业架构：\n这种原始架构的特点：\n 单节点 几乎无容灾 负载能力低 维护简单  所以为了改善这种架构，引入了一种动静分离的模式：\n这种架构模式，使用 Nginx 来处理所有的 html,js,css 静态资源请求，这样 Tomcat 压力就会减轻一些，这样操作也能实现一定程度的负载均衡。\n五、Nginx命令\r#\r\rnginx 的使用比较简单，就是几条命令\n 常用到的命令如下：  nginx -s stop 快速关闭Nginx，可能不保存相关信息，并迅速终止web服务。\rnginx -s quit 平稳关闭Nginx，保存相关信息，有安排的结束web服务。\rnginx -s reload 因改变了Nginx相关配置，需要重新加载配置而重载。\rnginx -s reopen 重新打开日志文件。\rnginx -c filename 为 Nginx 指定一个配置文件，来代替缺省的。\rnginx -t 不运行，仅仅测试配置文件。nginx 将检查配置文件的语法的正确性，并尝试打开配置文件中所引用到的文件。\rnginx -v 显示 nginx 的版本。\rnginx -V 显示 nginx 的版本，编译器版本和配置参数。 六、Nginx 实战\r#\r\r我始终认为，各种开发工具的配置还是结合实战来讲述，会让人更易理解\nHttp 反向代理\r#\r\r我们先实现一个小目标：不考虑复杂的配置，仅仅是完成一个 http 反向代理。\nnginx.conf 配置文件如下：\n 注：conf/nginx.conf 是 nginx 的默认配置文件。你也可以使用 nginx -c 指定你的配置文件\n #运行用户\r#user somebody;\r#启动进程,通常设置成和cpu的数量相等\rworker_processes 1;\r#全局错误日志\rerror_log D:/Tools/nginx-1.10.1/logs/error.log;\rerror_log D:/Tools/nginx-1.10.1/logs/notice.log notice;\rerror_log D:/Tools/nginx-1.10.1/logs/info.log info;\r#PID文件，记录当前启动的nginx的进程ID\rpid D:/Tools/nginx-1.10.1/logs/nginx.pid;\r#工作模式及连接数上限\revents {\rworker_connections 1024; #单个后台worker process进程的最大并发链接数\r}\r#设定http服务器，利用它的反向代理功能提供负载均衡支持\rhttp {\r#设定mime类型(邮件支持类型),类型由mime.types文件定义\rinclude D:/Tools/nginx-1.10.1/conf/mime.types;\rdefault_type application/octet-stream;\r#设定日志\rlog_format main '[$remote_addr] - [$remote_user] [$time_local] \u0026quot;$request\u0026quot; '\r'$status $body_bytes_sent \u0026quot;$http_referer\u0026quot; '\r'\u0026quot;$http_user_agent\u0026quot; \u0026quot;$http_x_forwarded_for\u0026quot;';\raccess_log D:/Tools/nginx-1.10.1/logs/access.log main;\rrewrite_log on;\r#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，\r#必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.\rsendfile on;\r#tcp_nopush on;\r#连接超时时间\rkeepalive_timeout 120;\rtcp_nodelay on;\r#gzip压缩开关\r#gzip on;\r#设定实际的服务器列表\rupstream zp_server1{\rserver 127.0.0.1:8089;\r}\r#HTTP服务器\rserver {\r#监听80端口，80端口是知名端口号，用于HTTP协议\rlisten 80;\r#定义使用www.xx.com访问\rserver_name www.helloworld.com;\r#首页\rindex index.html\r#指向webapp的目录\rroot D:\\01_Workspace\\Project\\github\\zp\\SpringNotes\\spring-security\\spring-shiro\\src\\main\\webapp;\r#编码格式\rcharset utf-8;\r#代理配置参数\rproxy_connect_timeout 180;\rproxy_send_timeout 180;\rproxy_read_timeout 180;\rproxy_set_header Host $host;\rproxy_set_header X-Forwarder-For $remote_addr;\r#反向代理的路径（和upstream绑定），location 后面设置映射的路径\rlocation / {\rproxy_pass http://zp_server1;\r}\r#静态文件，nginx自己处理\rlocation ~ ^/(images|javascript|js|css|flash|media|static)/ {\rroot D:\\01_Workspace\\Project\\github\\zp\\SpringNotes\\spring-security\\spring-shiro\\src\\main\\webapp\\views;\r#过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。\rexpires 30d;\r}\r#设定查看Nginx状态的地址\rlocation /NginxStatus {\rstub_status on;\raccess_log on;\rauth_basic \u0026quot;NginxStatus\u0026quot;;\rauth_basic_user_file conf/htpasswd;\r}\r#禁止访问 .htxxx 文件\rlocation ~ /\\.ht {\rdeny all;\r}\r#错误处理页面（可选择性配置）\r#error_page 404 /404.html;\r#error_page 500 502 503 504 /50x.html;\r#location = /50x.html {\r# root html;\r#}\r}\r} 好了，让我们来试试吧：\n启动 webapp，注意启动绑定的端口要和 nginx 中的 upstream 设置的端口保持一致。\n更改 host：在 C:\\Windows\\System32\\drivers\\etc 目录下的 host 文件中添加一条 DNS 记录\n127.0.0.1 www.helloworld.com\n启动前文中 startup.bat 的命令\n在浏览器中访问 www.helloworld.com，不出意外，已经可以访问了。\nHttps 反向代理\r#\r\r一些对安全性要求比较高的站点，可能会使用 HTTPS（一种使用 ssl 通信标准的安全 HTTP 协议）。\n这里不科普 HTTP 协议和 SSL 标准。但是，使用 nginx 配置 https 需要知道几点：\nHTTPS 的固定端口号是 443，不同于 HTTP 的 80 端口\nSSL 标准需要引入安全证书，所以在 nginx.conf 中你需要指定证书和它对应的 key\n其他和 http 反向代理基本一样，只是在 Server 部分配置有些不同。\n#HTTP服务器\rserver {\r#监听443端口。443为知名端口号，主要用于HTTPS协议\rlisten 443 ssl;\r#定义使用www.xx.com访问\rserver_name www.helloworld.com;\r#ssl证书文件位置(常见证书文件格式为：crt/pem)\rssl_certificate cert.pem;\r#ssl证书key位置\rssl_certificate_key cert.key;\r#ssl配置参数（选择性配置）\rssl_session_cache shared:SSL:1m;\rssl_session_timeout 5m;\r#数字签名，此处使用MD5\rssl_ciphers HIGH:!aNULL:!MD5;\rssl_prefer_server_ciphers on;\rlocation / {\rroot /root;\rindex index.html index.htm;\r}\r} 负载均衡\r#\r\r前面的例子中，代理仅仅指向一个服务器。\n但是，网站在实际运营过程中，大部分都是以集群的方式运行，这时需要使用负载均衡来分流。\nnginx 也可以实现简单的负载均衡功能。\n假设这样一个应用场景：将应用部署在 192.168.1.11:80、192.168.1.12:80、192.168.1.13:80 三台 linux 环境的服务器上。网站域名叫 www.helloworld.com，公网 IP 为 192.168.1.11。在公网 IP 所在的服务器上部署 nginx，对所有请求做负载均衡处理（下面例子中使用的是加权轮询策略）。\nnginx.conf 配置如下：\nhttp {\r#设定mime类型,类型由mime.type文件定义\rinclude /etc/nginx/mime.types;\rdefault_type application/octet-stream;\r#设定日志格式\raccess_log /var/log/nginx/access.log;\r#设定负载均衡的服务器列表\rupstream load_balance_server {\r#weigth参数表示权值，权值越高被分配到的几率越大\rserver 192.168.1.11:80 weight=5;\rserver 192.168.1.12:80 weight=1;\rserver 192.168.1.13:80 weight=6;\r}\r#HTTP服务器\rserver {\r#侦听80端口\rlisten 80;\r#定义使用www.xx.com访问\rserver_name www.helloworld.com;\r#对所有请求进行负载均衡请求\rlocation / {\rroot /root; #定义服务器的默认网站根目录位置\rindex index.html index.htm; #定义首页索引文件的名称\rproxy_pass http://load_balance_server ;#请求转向load_balance_server 定义的服务器列表\r#以下是一些反向代理的配置(可选择性配置)\r#proxy_redirect off;\rproxy_set_header Host $host;\rproxy_set_header X-Real-IP $remote_addr;\r#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\rproxy_set_header X-Forwarded-For $remote_addr;\rproxy_connect_timeout 90; #nginx跟后端服务器连接超时时间(代理连接超时)\rproxy_send_timeout 90; #后端服务器数据回传时间(代理发送超时)\rproxy_read_timeout 90; #连接成功后，后端服务器响应时间(代理接收超时)\rproxy_buffer_size 4k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小\rproxy_buffers 4 32k; #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置\rproxy_busy_buffers_size 64k; #高负荷下缓冲大小（proxy_buffers*2）\rproxy_temp_file_write_size 64k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传\rclient_max_body_size 10m; #允许客户端请求的最大单文件字节数\rclient_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数\r}\r}\r} 负载均衡策略\nNginx 提供了多种负载均衡策略，让我们来一一了解一下：\n负载均衡策略在各种分布式系统中基本上原理一致，对于原理有兴趣，不妨参考 负载均衡\n轮询\r#\r\rupstream bck_testing_01 {\r# 默认所有服务器权重为 1\rserver 192.168.250.220:8080\rserver 192.168.250.221:8080\rserver 192.168.250.222:8080\r} 加权轮询\r#\r\rupstream bck_testing_01 {\rserver 192.168.250.220:8080 weight=3\rserver 192.168.250.221:8080 # default weight=1\rserver 192.168.250.222:8080 # default weight=1\r} 最少连接\r#\r\rupstream bck_testing_01 {\rleast_conn;\r# with default weight for all (weight=1)\rserver 192.168.250.220:8080\rserver 192.168.250.221:8080\rserver 192.168.250.222:8080\r} 加权最少连接\r#\r\rupstream bck_testing_01 {\rleast_conn;\rserver 192.168.250.220:8080 weight=3\rserver 192.168.250.221:8080 # default weight=1\rserver 192.168.250.222:8080 # default weight=1\r} IP Hash\r#\r\rupstream bck_testing_01 {\rip_hash;\r# with default weight for all (weight=1)\rserver 192.168.250.220:8080\rserver 192.168.250.221:8080\rserver 192.168.250.222:8080\r} 普通 Hash\r#\r\rupstream bck_testing_01 {\rhash $request_uri;\r# with default weight for all (weight=1)\rserver 192.168.250.220:8080\rserver 192.168.250.221:8080\rserver 192.168.250.222:8080\r} 网站有多个 webapp 的配置\r#\r\r当一个网站功能越来越丰富时，往往需要将一些功能相对独立的模块剥离出来，独立维护。这样的话，通常，会有多个 webapp。\n举个例子：假如 www.helloworld.com 站点有好几个 webapp，finance（金融）、product（产品）、admin（用户中心）。访问这些应用的方式通过上下文(context)来进行区分:\nwww.helloworld.com/finance/\nwww.helloworld.com/product/\nwww.helloworld.com/admin/\n我们知道，http 的默认端口号是 80，如果在一台服务器上同时启动这 3 个 webapp 应用，都用 80 端口，肯定是不成的。所以，这三个应用需要分别绑定不同的端口号。\n那么，问题来了，用户在实际访问 www.helloworld.com 站点时，访问不同 webapp，总不会还带着对应的端口号去访问吧。所以，你再次需要用到反向代理来做处理。\n配置也不难，来看看怎么做吧：\nhttp {\r#此处省略一些基本配置\rupstream product_server{\rserver www.helloworld.com:8081;\r}\rupstream admin_server{\rserver www.helloworld.com:8082;\r}\rupstream finance_server{\rserver www.helloworld.com:8083;\r}\rserver {\r#此处省略一些基本配置\r#默认指向product的server\rlocation / {\rproxy_pass http://product_server;\r}\rlocation /product/{\rproxy_pass http://product_server;\r}\rlocation /admin/ {\rproxy_pass http://admin_server;\r}\rlocation /finance/ {\rproxy_pass http://finance_server;\r}\r}\r} 静态站点\r#\r\r有时候，我们需要配置静态站点(即 html 文件和一堆静态资源)。\n举例来说：如果所有的静态资源都放在了 /app/dist 目录下，我们只需要在 nginx.conf 中指定首页以及这个站点的 host 即可。\n配置如下：\nworker_processes 1;\revents {\rworker_connections 1024;\r}\rhttp {\rinclude mime.types;\rdefault_type application/octet-stream;\rsendfile on;\rkeepalive_timeout 65;\rgzip on;\rgzip_types text/plain application/x-javascript text/css application/xml text/javascript application/javascript image/jpeg image/gif image/png;\rgzip_vary on;\rserver {\rlisten 80;\rserver_name static.zp.cn;\rlocation / {\rroot /app/dist;\rindex index.html;\r#转发任何请求到 index.html\r}\r}\r} 然后，添加 HOST：\n127.0.0.1 static.zp.cn\n此时，在本地浏览器访问 static.zp.cn ，就可以访问静态站点了。\n搭建文件服务器\r#\r\r有时候，团队需要归档一些数据或资料，那么文件服务器必不可少。使用 Nginx 可以非常快速便捷的搭建一个简易的文件服务。\nNginx 中的配置要点：\n 将 autoindex 开启可以显示目录，默认不开启。 将 autoindex_exact_size 开启可以显示文件的大小。 将 autoindex_localtime 开启可以显示文件的修改时间。 root 用来设置开放为文件服务的根路径。 charset 设置为 charset utf-8,gbk;，可以避免中文乱码问题（windows 服务器下设置后，依然乱码，本人暂时没有找到解决方法）。  一个最简化的配置如下：\nautoindex on;# 显示目录\rautoindex_exact_size on;# 显示文件大小\rautoindex_localtime on;# 显示文件时间\rserver {\rcharset utf-8,gbk; # windows 服务器下设置后，依然乱码，暂时无解\rlisten 9050 default_server;\rlisten [::]:9050 default_server;\rserver_name _;\rroot /share/fs;\r} 解决跨域\r#\r\rweb 领域开发中，经常采用前后端分离模式。这种模式下，前端和后端分别是独立的 web 应用程序，例如：后端是 Java 程序，前端是 React 或 Vue 应用。\n各自独立的 web app 在互相访问时，势必存在跨域问题。解决跨域问题一般有两种思路：\nCORS\r#\r\r在后端服务器设置 HTTP 响应头，把你需要允许访问的域名加入 Access-Control-Allow-Origin 中。\njsonp\r#\r\r把后端根据请求，构造 json 数据，并返回，前端用 jsonp 跨域。\n这两种思路，本文不展开讨论。\n需要说明的是，nginx 根据第一种思路，也提供了一种解决跨域的解决方案。\n举例：www.helloworld.com 网站是由一个前端 app ，一个后端 app 组成的。前端端口号为 9000， 后端端口号为 8080。\n前端和后端如果使用 http 进行交互时，请求会被拒绝，因为存在跨域问题。来看看，nginx 是怎么解决的吧：\n首先，在 enable-cors.conf 文件中设置 cors ：\n# allow origin list\rset $ACAO '*';\r# set single origin\rif ($http_origin ~* (www.helloworld.com)$) {\rset $ACAO $http_origin;\r}\rif ($cors = \u0026quot;trueget\u0026quot;) {\radd_header 'Access-Control-Allow-Origin' \u0026quot;$http_origin\u0026quot;;\radd_header 'Access-Control-Allow-Credentials' 'true';\radd_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\radd_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';\r}\rif ($request_method = 'OPTIONS') {\rset $cors \u0026quot;${cors}options\u0026quot;;\r}\rif ($request_method = 'GET') {\rset $cors \u0026quot;${cors}get\u0026quot;;\r}\rif ($request_method = 'POST') {\rset $cors \u0026quot;${cors}post\u0026quot;;\r} 到此，就完成了。\n接下来，在你的服务器中 include enable-cors.conf 来引入跨域配置：\n七:其他\r#\r\r反向代理\r#\r\r case1 基础  \r#HTTP服务器\rserver {\r#监听80端口，80端口是知名端口号，用于HTTP协议\rlisten 80;\r#定义使用www.xx.com访问\rserver_name www.test_hello.com;\r#编码格式\rcharset utf-8;\r#代理配置参数\rproxy_connect_timeout 180;\rproxy_send_timeout 180;\rproxy_read_timeout 180;\rproxy_set_header Host $host;\rproxy_set_header X-Forwarder-For $remote_addr;\r#反向代理的路径（和upstream绑定），location 后面设置映射的路径\rlocation / {\rproxy_pass http://127.0.0.1:8080;\r}\r}\rwindows host修改\rC:\\Windows\\System32\\drivers\\etc\\hosts\r127.0.0.1 www.test_hello.com\r浏览器中输入 www.test_hello.com 被映射为 127.0.0.1 并且被nginx监听到然后请求转发到了http://127.0.0.1:8080\n case2 别名方式   #设定实际的服务器列表\rupstream zp_server1{\rserver 127.0.0.1:8080 ;\r}\r#HTTP服务器\rserver {\r#监听80端口，80端口是知名端口号，用于HTTP协议\rlisten 80;\r#定义使用www.xx.com访问\rserver_name www.test_hello.com;\r#编码格式\rcharset utf-8;\r#代理配置参数\rproxy_connect_timeout 180;\rproxy_send_timeout 180;\rproxy_read_timeout 180;\rproxy_set_header Host $host;\rproxy_set_header X-Forwarder-For $remote_addr;\r#反向代理的路径（和upstream绑定），location 后面设置映射的路径\rlocation / {\rproxy_pass http://zp_server1;\r}\r}\rwindows host修改\rC:\\Windows\\System32\\drivers\\etc\\hosts\r127.0.0.1 www.test_hello.com\r case3 实现负载均衡   upstream load_balance_server {\rip_hash;\r#weigth参数表示权值，权值越高被分配到的几率越大\rserver 192.168.1.11:80 weight=5;\rserver 192.168.1.12:80 weight=1;\rserver 192.168.1.13:80 weight=6;\r}\rip_hash 属于一种实际上有好几种类型\n参考1\n参考2\n"}),a.add({id:61,href:'/life/docs/http/cdn/',title:"cdn",section:"http知识 ",content:"CDN\r#\r\r CDN的全称是Content Delivery Network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输得更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度。\n  CDN的中文名字叫内容分发网络。字面理解就是用来做内容分发的一套网络体系，它是用来提升文件下载速度的一种机制。让用户能够从离自己最近的CDN服务器进行下载，减少路由次数，提升下载速度，缩短传输时间，提升用户使用体验\n CDN的好处\r#\r\r   不用担心自己网站访客，在任何时间，任何地点，任何网络运营商，都能快速打开网站。    各种服务器虚拟主机带宽等采购成本，包括后期运维成本都会大大减少。    给网站直接带来的好处就是：流量，咨询量，客户量，成单量，都会得到大幅度提升。    CDN的价格\r#\r\r提起CDN，一般人都会望而却步，因为CDN太贵，都是大企业才能用得起的贵族式服务，而如今面对中小企业的CDN技术开发已经实现，并进入市场开始运营。\n市面上CDN提供商计费方式多样，有按每月最低消费的，有按带宽收费的，有按请求数收费的，有包月包季包年限制的，还有些大多人看不懂的技术指标收费的，总之比较复杂，CDN服务在所有计费方式中，中小企业一致认为按流量收费最为合理，另外大多按流量计费方式中会有时间限制，规定时间内用不完就会全部作废，对于流量把握不好的中小企业，存在相当一部分浪费。\n技术原理\r#\r\rCDN服务只可以用于静态数据的加速，动态接口不能使用CDN服务。\nCDN的基本原理为反向代理，反向代理（Reverse Proxy）方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个节点服务器。通过部署更多的反向代理服务器，来达到实现多节点CDN的效果。 在描述CDN的实现原理，让我们先看传统的未加缓存服务的访问过程，以便了解CDN缓存访问方式与未加缓存访问方式的差别： [1] 用户提交域名→浏览器对域名进行解析→得到目的主机的IP地址→根据IP地址访问发出请求→得到请求数据并回复 由上可见，用户访问未使用CDN缓存网站的过程为: 1)、用户向浏览器提供要访问的域名； 2)、浏览器调用域名解析函数库对域名进行解析，以得到此域名对应的IP地址； 3)、浏览器使用所得到的IP地址，向域名的服务主机发出数据访问请求； 4)、浏览器根据域名主机返回的数据显示网页的内容。 通过以上四个步骤，浏览器完成从用户处接收用户要访问的域名到从域名服务主机处获取数据的整个过程。CDN网络是在用户和服务器之间增加Cache层，如何将用户的请求引导到Cache上获得源服务器的数据，主要是通过接管DNS实现，下面让我们看看访问使用CDN缓存后的网站的过程：\n通过上图，我们可以了解到，使用了CDN缓存后的网站的访问过程变为： 1)、用户向浏览器提供要访问的域名； 2)、浏览器调用域名解析库对域名进行解析，由于CDN对域名解析过程进行了调整，所以解析函数库一般得到的是该域名对应的CNAME记录，为了得到实际IP地址，浏览器需要再次对获得的CNAME域名进行解析以得到实际的IP地址；在此过程中，使用的全局负载均衡DNS解析，如根据地理位置信息解析对应的IP地址，使得用户能就近访问。 3)、此次解析得到CDN缓存服务器的IP地址，浏览器在得到实际的IP地址以后，向缓存服务器发出访问请求； 4)、缓存服务器根据浏览器提供的要访问的域名，通过Cache内部专用DNS解析得到此域名的实际IP地址，再由缓存服务器向此实际IP地址提交访问请求； 5)、缓存服务器从实际IP地址得得到内容以后，一方面在本地进行保存，以备以后使用，另一方面把获取的数据返回给客户端，完成数据服务过程； 6)、客户端得到由缓存服务器返回的数据以后显示出来并完成整个浏览的数据请求过程。 通过以上的分析我们可以得到，为了实现既要对普通用户透明(即加入缓存以后用户客户端无需进行任何设置，直接使用被加速网站原有的域名即可访问，又要在为指定的网站提供加速服务的同时降低对ICP的影响，只要修改整个访问过程中的域名解析部分，以实现透明的加速服务，下面是CDN网络实现的具体操作过程。 1)、作为ICP，只需要把域名解释权交给CDN运营商，其他方面不需要进行任何的修改；操作时，ICP修改自己域名的解析记录，一般用cname方式指向CDN网络Cache服务器的地址。 2)、作为CDN运营商，首先需要为ICP的域名提供公开的解析，为了实现sortlist，一般是把ICP的域名解释结果指向一个CNAME记录； 3)、当需要进行sortlist时，CDN运营商可以利用DNS对CNAME指向的域名解析过程进行特殊处理，使DNS服务器在接收到客户端请求时可以根据客户端的IP地址，返回相同域名的不同IP地址； 4)、由于从cname获得的IP地址，并且带有hostname信息，请求到达Cache之后，Cache必须知道源服务器的IP地址，所以在CDN运营商内部维护一个内部DNS服务器，用于解释用户所访问的域名的真实IP地址； 5)、在维护内部DNS服务器时，还需要维护一台授权服务器，控制哪些域名可以进行缓存，而哪些又不进行缓存，以免发生开放代理的情况。\n"}),a.add({id:62,href:'/life/docs/javadir/basedir/dw7668daxw/',title:"java类型转换,构造,重要语法",section:"Java基础知识 ",content:"基本类型\r#\r\r 八个基本类型:     基本类型 位数 字节 默认值 取值范围     byte 8 1 0 -128 ~ 127   short 16 2 0 -32768 ~ 32767   int 32 4 0 -2147483648 ~ 2147483647   long 64 8 0l -9223372036854775808 ~ 9223372036854775807   char 16 2 \u0026lsquo;u0000\u0026rsquo; 0 ~ 65535   float 32 4 0f 1.4E-45 ~ 3.4028235E38   double 64 8 0d 4.9E-324 ~ 1.7976931348623157E308   boolean 1  false true、false     基本类型都有对应的包装类型，基本类型与其对应的包装类型之间的赋值使用自动装箱与拆箱完成  Integer x = 2; // 装箱 int y = x; // 拆箱  缓存池  new Integer(123) 与 Integer.valueOf(123) 的区别在于:\n new Integer(123) 每次都会新建一个对象 Integer.valueOf(123) 会使用缓存池中的对象，多次调用会取得同一个对象的引用。  Integer x = new Integer(123); Integer y = new Integer(123); System.out.println(x == y); // false Integer z = Integer.valueOf(123); Integer k = Integer.valueOf(123); System.out.println(z == k); // true valueOf() 方法的实现比较简单，就是先判断值是否在缓存池中，如果在的话就直接返回缓存池的内容。\npublic static Integer valueOf(int i) { if (i \u0026gt;= IntegerCache.low \u0026amp;\u0026amp; i \u0026lt;= IntegerCache.high) return IntegerCache.cache[i + (-IntegerCache.low)]; return new Integer(i); } 在 Java 8 中，Integer 缓存池的大小默认为 -128~127。\nstatic final int low = -128; static final int high; static final Integer cache[]; static { // high value may be configured by property  int h = 127; String integerCacheHighPropValue = sun.misc.VM.getSavedProperty(\u0026#34;java.lang.Integer.IntegerCache.high\u0026#34;); if (integerCacheHighPropValue != null) { try { int i = parseInt(integerCacheHighPropValue); i = Math.max(i, 127); // Maximum array size is Integer.MAX_VALUE  h = Math.min(i, Integer.MAX_VALUE - (-low) -1); } catch( NumberFormatException nfe) { // If the property cannot be parsed into an int, ignore it.  } } high = h; cache = new Integer[(high - low) + 1]; int j = low; for(int k = 0; k \u0026lt; cache.length; k++) cache[k] = new Integer(j++); // range [-128, 127] must be interned (JLS7 5.1.7)  assert IntegerCache.high \u0026gt;= 127; } 编译器会在缓冲池范围内的基本类型自动装箱过程调用 valueOf() 方法，因此多个 Integer 实例使用自动装箱来创建并且值相同，那么就会引用相同的对象。\nInteger m = 123; Integer n = 123; System.out.println(m == n); // true 基本类型对应的缓冲池如下:\n boolean values true and false all byte values short values between -128 and 127 int values between -128 and 127 char in the range \\u0000 to \\u007F  在使用这些基本类型对应的包装类型时，就可以直接使用缓冲池中的对象。\n如果在缓冲池之外：\nInteger m = 323; Integer n = 323; System.out.println(m == n); // false 修饰符\r#\r\rfinal\r#\r\r 被修饰的元素其基本地址不能发生改变\n  1.数据  声明数据为常量，可以是编译时常量，也可以是在运行时被初始化后不能被改变的常量。\n对于基本类型，final 使数值不变； 对于引用类型，final 使引用不变，也就不能引用其它对象，但是被引用的对象本身是可以修改的。(引用类型都是对象 相当于对象的地址不能再发生改变)\nfinal int x = 1; // x = 2; // cannot assign value to final variable \u0026#39;x\u0026#39; final A y = new A(); y.a = 1;  2.方法  声明方法不能被子类重写。 private 方法隐式地被指定为 final，如果在子类中定义的方法和基类中的一个 private 方法签名相同，此时子类的方法不是重写基类方法，而是在子类中定义了一个新的方法。\n 3.类  声明类不允许被继承。\nstatic\r#\r\r 1.静态变量  静态变量: 又称为类变量，也就是说这个变量属于类的，类所有的实例都共享静态变量，可以直接通过类名来访问它；静态变量在内存中只存在一份。\n实例变量: 每创建一个实例就会产生一个实例变量，它与该实例同生共死。\npublic class A { private int x; // 实例变量  private static int y; // 静态变量  public static void main(String[] args) { // int x = A.x; // Non-static field \u0026#39;x\u0026#39; cannot be referenced from a static context  A a = new A(); int x = a.x; int y = A.y; } }  2.静态方法  静态方法在类加载的时候就存在了，它不依赖于任何实例。所以静态方法必须有实现，也就是说它不能是抽象方法(abstract)。\npublic abstract class A { public static void func1(){ } // public abstract static void func2(); // Illegal combination of modifiers: \u0026#39;abstract\u0026#39; and \u0026#39;static\u0026#39; } 只能访问所属类的静态字段和静态方法，方法中不能有 this 和 super 关键字\npublic class A { private static int x; private int y; public static void func1(){ int a = x; // int b = y; // Non-static field \u0026#39;y\u0026#39; cannot be referenced from a static context  // int b = this.y; // \u0026#39;A.this\u0026#39; cannot be referenced from a static context  } } 接口\r#\r\r重要接口的妙处\r#\r\r"}),a.add({id:63,href:'/life/docs/javadir/basedir/io/java-basic-io-nio/',title:"nio",section:"Java IO",content:"Java NIO 简介\r#\r\r1、简介\r#\r\r Java NIO（New IO）是从 Java 1.4 版本开始引入的一个新的 IO API，可以替代标准的 Java IO API。 NIO 与原来的 IO 有同样的作用和目的，但是使用方式完全不同，NIO 支持面向缓冲区的、基于通道的 IO 操作。 NIO 将以更加高效的方式进行文件的读写操作。\n 2、NIO 与 IO 的区别\r#\r\r   IO NIO     面向流 面向缓冲   阻塞IO 非阻塞IO   无 选择器    二、NIO 重要知识点详细介绍\r#\r\r1、通道和缓冲区\r#\r\rJava NIO 系统的核心在于：通道（Channel）和缓冲区（Buffer）。通道表示打开到 IO 设备（例如：文件、套接字）的连接。 若需要使用 NIO 系统，需要获取用于连接 IO 设备的通道以及用于容纳数据的缓冲区。然后操作缓冲区，对数据进行处理。简而言之，Channel 负责传输，Buffer 负责存储\n2、面向流和面向缓冲区解释\r#\r\r传统 IO 流\r#\r\rNIO\r#\r\r3、缓冲区的数据存取\r#\r\r缓冲区（Buffer）：一个用于特定基本数据类型的容器。由 java.nio 包定义的，所有缓冲区都是 Buffer 抽象类的子类。\n1、缓冲区的类型\r#\r\r 缓冲区（Buffer）：在 Java NIO 中负责数据的存取。缓冲区就是数组。用于存储不同类型的数据。根据数据类型的不同（boolean 除外），提供了相应类型的缓冲区：\n  ByteBuffer CharBuffer ShortBuffer IntBuffer LongBuffer FloatBuffer DoubleBuffer  上述缓冲区管理方式几乎一致，都是通过 allocate() 来获取缓冲区\n2、缓冲区存取数据的两个核心方法\r#\r\r put():存入数据到缓冲区中 get():获取缓冲区中的数据  3、缓冲区中的四个核心属性\r#\r\r capacity: 容量，表示缓冲区中最大存储数据的容量。一旦声明不能更改。 limit: 界限，表示缓冲区中可以操作数据的大小。（limit 后的数据不能进行读写） position: 位置，表示缓冲区中正在操作数据的位置。 mark: 标记，表示记录当前 position 的位置。可以通过 reset() 恢复到 mark 的位置。   注： 0 \u0026lt;= mark \u0026lt;= position \u0026lt;= limit \u0026lt;= capacity  参考\n"}),a.add({id:64,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/good_voice/',title:"如何说话好听",section:"自信",content:"case 1\r#\r\r那就说说大多数人都喜欢的温柔通透的声音怎么发吧\n第一你不要端着说话 像没有人自言自语一样放松的说话 声音像沉在腹部\n第二感觉是用声带靠前的位置在发声 找不到就说Mi这个音 熟悉了用这个声带感觉说所有字\n第三你发声时要感觉情绪上升 身体向外伸展 而身体内部是空的\n第四感觉你的声音打在眉心位置 出来 从腹部直接跳到眉心 声带和嘴被忽视 没有任何意识和力量\n第五说话时感觉字是竖起来的 不要咧嘴 要轻柔自然\n第六 学好普通话\u0026hellip;.方言大多数会阻碍唱歌音色很容易改变 发声位置结构改变音色就一定会变\n视频 建立自信\r#\r\r播音系师哥教你如何让“声音变得更加好听”，一学就会！一用就灵，不灵不要币\n表情管理｜变美干货｜纵向微笑vs横向微笑｜如何拥有上镜显瘦的微笑｜播音生\n下面的最靠谱 30天让你拥有好声音（完结）\n说话很累\r#\r\r①憋气，气息不通当我们的气息不顺畅时，我们的传声就会收到阻碍，使得我们口腔里面的部位造成紧张，从而引发一些列的声音问题。\n②咬字器官紧张我们的咬字器官主要有唇、齿、舌、喉、牙等等\u0026hellip;，当我们在咬字的时候，如果出现唇部紧张或者说是舌根紧张等情况，会对我们的发声造成压力，使得我们的声音就会变得僵硬。\n③喉咙没打开，捏着嗓子说话。我们的声带在喉咙里面，如果我们的声带没有合适的工作空间，那么会大大影响声带的振动发声哦！\n④声音虚弱无力，声音漏气。当我们的声带漏气，我们的气息就会没办法高效利用起来，从而浪费掉，产生气息不够用等情况。\n"}),a.add({id:65,href:'/life/docs/english_study/second_language_acquisition/%E6%96%AF%E8%92%82%E8%8A%ACd%E5%85%8B%E6%8B%89%E7%94%B3%E8%AE%BA%E6%96%87/',title:"斯蒂芬•D•克拉申论文 google学术",section:"第二语言习得",content:"原则与实践\r#\r\r第二语言习得\n斯蒂芬·D·克拉申\n南加州大学\n这是 1982 年出版的《原则与实践》的原始版本，仅做了微小的修改。令人欣慰的是，本书中的许多预测都被后来的研究所证实，例如基于可理解输入的方法和屏蔽性主题教学的优越性（ Krashen ，2003）、纠错的无效性（ Truscott，1996，1999），以及“阅读的力量”（ Krashen ，2004）。我认为，后续研究也证实了第 3 章脚注 5 中的选项 3 是正确的，即我们通过可理解的输入获得词汇最好（ Krashen ，1989；2003）。\n我只在一个问题上改变了我的立场：在《原理与实践》的最后，我建议使用一种欺骗形式——学生可能认为他们正在获取词汇或学习主题，但他们不知道，他们正在获取是因为他们同时获得可理解的输入。我现在认为，努力让学生了解语言习得的过程非常重要，这样他们就可以继续提高自己。\nKrashen , S. (1989)我们通过阅读获得词汇和拼写：输入假设的附加证据。现代语言杂志 73, 440-464。\nKrashen , S. (2003) 语言习得和使用的探索：台北讲座。新罕布什尔州朴茨茅斯：海涅曼。\nKrashen , S. (2004)阅读的力量。新罕布什尔州朴茨茅斯：海涅曼。\n特拉斯科特，J.（1996）。反对第二语言写作课语法纠正的案例。语言学习，46 (2), 327-69。\n特拉斯科特，J.（1999）。口语语法纠正有什么问题？加拿大现代语言评论，55(4), 437-56。\n网络版简介\n版权所有 © 1982 斯蒂芬·克拉申\n版权所有。出于所有合理的非商业教育目的，可以免费下载和复制本出版物，前提是不对文本进行任何更改。\n1982 年第一版印刷版，由Pergamon Press Inc.\n印刷版 ISBN 0-08-028628-3 第一个网络版 2009 年 7 月\n我\n致谢\r#\r\r我要感谢许多直接和间接帮助过我的人。我在这里只能提到其中的几个。 Earl Stevick和 Robin Scarcella友善地为我提供了对手稿几乎各个方面的详细评论。我还收到了来自 John Schumann、John Oller 、Adrian Palmer、Tracy Terrell、Andrew Cohen、Steven Sternfeld和Batyia的大量有用反馈 埃尔鲍姆。我相信如果我听从了他们的所有建议，这本书将会更加强大。由于我的家人、我的妻子尤拉、我的孩子黛博拉和丹尼尔、以及我的父母 Leo 和 Julia Krashen的支持和理解，本书的写作任务变得更加容易。我还要感谢南加州大学语言学系的同事们给予我的智力刺激和鼓励。我特别感谢 Larry Hyman、Edward Finegan 、Eugene Briere 、Elaine Andersen、 Elinor Ochs、Edward Purcell、John Hawkins 和 Bernard Comrie 。\n目录\r#\r\r   我。 简介：理论与实践的关系 1     A. 三种方法 2   1. 第二语言习得理论 2   2.应用语言学研究 3   3.来自经验的想法和直觉 3   B. 实践方法之间的相互作用 4   C. 三种方法对方法的看法 6   D. 本书的目标：向教师重新介绍理论并希望重新获得他们的信心 7   笔记 8   二.第二语言习得理论 9   A. 关于第二语言习得的五个假设 10   1.习得与学习的区别 10   2.自然顺序假说 12   (a) 过渡形式 14   3. 监视器假说 15   (a) 显示器使用的个体差异 18   4. 输入假设 20   (a) 假设的陈述 20   (b) 支持假设的证据 22   5. 情感过滤假说 30   B. 第二语言习得的原因变量 32   1. 因果变量 32   2. 语言教学：有帮助吗？ 33   (a) 当语言教学有帮助时 34   (b) 当语言教学无济于事时 35   3. 暴露变量 37   4. 年龄 43   5. 文化适应 45   三．为收购提供投入 57   A. 第二语言课堂的潜力 58   B. 课堂的局限性 59   C. 输出的作用 60   1.“对话”与语言习得 61   2. 输出与学习 61   D. 获取最优输入的特征 62   1. 最优输入是可理解的 63   (a) 如何帮助理解 64   2. 最佳输入是有趣的和/或相关的 66   3. 最佳输入没有按语法顺序排列 68   (a) 违反语法大纲的案例 70   4. 最佳输入量必须充足 71   (a) 初始准备发言的数量要求 71   (b) 较高熟练程度的数量要求 72   E. 鼓励收购的其他特征 73   1. 学生不应该处于防御状态 73   2. 提供工具帮助学生获得更多输入 76   F.“教学”会话能力 78   四．语法的作用，或将语法放在其位置上 83   A. 学习不会成为习得 83   B. 语法的地位 89   1. Monitor使用语法：使用Monitor时 89   2. 可以监控什么 92   (a) 监控器使用不当 94   (b) 规则的可学习性 96   (c) 一些证据 98   (d) 教授“硬性”规则的后果 102   C. 学习的效果：自我纠正的准确性 104   1、影响自校正精度的因素 105   2. 数据 108   D. 意识规则的其他影响 112   E. 规则的提出 113   1. 演绎-归纳问题 113   2. 排序和学习 115   F. 纠错注意事项 116   G. 作为主题的语法 119   五、语言教学方法 125   A. 当今的教学方法 126   1. 语法翻译 127   (a) 最优输入的要求 128   (b) 学习 129   (c) 总结 129   2. 视听语言学 129   (a) 最优输入的要求 130   (b) 学习 132   (c) 总结 132   3. 认知代码 132   (a) 最优输入的要求 133   (b) 学习 134   (c) 摘要 134   4.直接法 135   a)最佳输入的要求 135   b)学习 137   c)总结 137   5.自然方法 137   (a)最佳输入的要求 138   (b) 学习 139   (c)总结 140   6. 总身体反应 140   (a) 最佳输入的要求 140   (b) 学习 142   (c) 总结 142   7.建议百科 142   (a) 最佳输入的要求 144   (b) 学习 146   (c) 总结 146   2. 应用语言学研究 146   1. 方法比较研究回顾 147   1. 美国对 AL、GT 和 CC 的研究 149   2. GUME项目 150   2. 方法比较研究的一些初步结论 151   3. 最近的方法比较研究 155   1. TPR系列 155   2. 其他输入法比较 157   3. 建议百科研究 158   3. 方法 的替代方案 160   1. 教室的功能 160   2. 第二语言课堂及要求 161   3. 替代方案 162   1. 对话 163   2. 阅读乐趣 164   3. 使用主题进行语言教学 167   4. 主题教学的证据：沉浸式课程 170   5. 主题教学的其他可能性 171   4. 对成绩测试的评论 176   1. 测试评估和选择中的正常考虑因素 176   2. 教学价值 177   3. 语言要求 181   4. 大学水平 182 182   5. 材料上的一些差距 182   1. 语言实验室 184   2. 对材料现场测试的评论 185   6. 一些问题 186    参考书目 191\n索引 201\n第一章\r#\r\r简介：理论与实践的关系\n本书的目的是重新审视一个老问题：第二语言教学实践与对第二语言习得过程的了解之间的关系。通常的方法是首先讨论一些研究结果，概述一个可能的理论，然后列出一些含义。我会在某种程度上遵循这个计划。事实上，本书的很大一部分致力于总结我所看到的第二语言习得理论的现状。接下来，我将得出一些关于方法和材料应用的一般性结论，并最终描述有效的材料应该具有哪些特征。\n然而，在进行这项练习之前，重要的是要提前声明“理论”和“理论研究”不应成为决定方法和材料的唯一输入。虽然我在这里强调的是理论及其含义，但仅依赖理论是危险的。在方法论和材料方面至少有三种不同的方式可以得出答案，我们必须考虑所有这些方式。我将在本简介的其余部分简要描述这三个领域，并讨论它们如何相互关联。然后我们将看看每个人对第二语言和外语教学方法的看法。对于那些喜欢早点笑点的人来说，我的观点是，所有三种方法都得出完全相同的答案。解决语言教学问题的方法不在于昂贵的设备、奇异的方法、复杂的语言分析或新的实验室，而在于充分利用我们已有的东西，即语言使用者使用它们进行真正的交流。我还将得出这样的结论：最好的方法也可能是最令人愉快的，而且，尽管看起来很奇怪，当语言用于其设计目的（沟通）时，语言习得就会发生。\nA. 三种方法\r#\r\r1.第二语言习得理论\r#\r\r我们将讨论的第一个领域将是本书的中心焦点，即第二语言习得理论。发展到今天，第二语言习得理论可以被视为“理论语言学”的一部分，即可以不考虑实际应用来研究和发展。与任何科学理论一样，它由一组与实验数据一致的*假设或概括组成。*这些假设可以通过多种方式得出（绝妙的洞察力、梦想等）。然而，他们必须能够预测新数据。换句话说，假设不是对现有数据和观察结果的总结或分类，而是必须通过新数据的核算测试。如果我们当前的假设能够预测新事件，它们就可以生存。如果它们失败了，哪怕只有一次，就必须改变。如果这些改变导致最初的概括发生根本性的变化，那么这些假设可能必须被完全放弃。\n请注意，根据这种科学研究方式，我们永远无法真正证明任何事情！我们只能寻找“佐证”。当我们找不到支持证据，或者找到反证据时，我们的假设就有麻烦了。即使我们确实找到了支持证据，当假设做出了正确的预测时，批评者也总是可以说我们还没有找到“足够的”证据。因此，从专业角度来说，科学家永远无法声明任何事情已经被“证明”。科学家所能做的就是有一个当前的假设，即他或她对测试感兴趣。\n在本书的后面，我将提出一系列假设，这些假设构成了第二语言习得的连贯理论。根据科学方法的规则，它永远是“只是理论”，永远不会被“明确证明”。然而，我将提出的假设已被发现与大量实验数据和其他数据一致，并且在我看来，尚未遇到严重的反例。它们共同构成了我的“立场”。这并不意味着我一定“相信”他们。它的真正含义是，这些假设与现有数据足够一致，值得考虑，并且它们似乎比其他现有概括更好地捕获了数据。\n理论是抽象的，并不试图实践。然而，我希望让读者相信，在第二语言教学中，没有什么比好的理论更实用的了！\n2.应用语言学研究\r#\r\r语言学领域正在进行的大量研究并不是为了支持或攻击任何连贯的理论。相反，这项研究旨在解决社会面临的实际问题。一些例子有望使这一类别变得清晰。\n在我们讨论语言教学时，一个对我们很重要的例子是比较教学方法的实验。很简单，一组学生使用方法A（例如听说）教授外语，另一组学生使用方法B（例如语法翻译）教授同一种语言。这样的实验结果肯定会引起理论家的兴趣，因为特定的理论可能预测使用一种方法学习的学生会比使用另一种方法的学生做得更好。然而，实验本身是为了实际目的而设计的，即决定我们应该在学校中使用哪种方法。\n研究文献包含许多应用语言学实验，研究其他具有非常实际意义的问题，例如：\n用第二语言教学会让孩子更聪明吗？ （或更少\n聪明吗？）\n美国双语教育中的非英语儿童应该开始用母语还是英语阅读？\n3.来自经验的想法和直觉\r#\r\r第三种方法根本不依赖于实验。相反，它依赖于经验丰富的语言教师和外语学生的见解和观察。它由“有效的想法”（Darlene Larson 编辑的TESOL 时事通讯中的专栏名称，由教师发送的教学技术组成）、语言学生的反思（例如“日记研究”）和其他非正式观察组成。虽然研究结果定期发表在专业期刊上，但教师的见解并不容易获得\n访问和共享。语言教学组织经常安排会议，以便经验丰富的教师可以与其他人分享他们的技术和见解（例如，加州 TESOL 组织组织的非常成功的“小型会议”）。既没有预期也没有提供对新技术的实证支持；相反，老师的话通常足以证明一个新想法至少可以在不同的班级中得到尝试。\nB.实践方法之间的相互作用\r#\r\r在讨论每种方法对方法和材料的看法之前，我想提出一个谦虚的建议：三种方法应该互相影响、互相帮助。首先，很明显，研究人员会对应用研究的结果感兴趣，因为此类实验可以为第二语言习得理论提供潜在的证实和反证。同样，应用语言学研究人员理所当然应该关注严格的理论研究，因为成功的理论可能会让研究人员更深入地了解他们的研究结果。\n这似乎也合理地表明，理论和应用语言学的研究人员将从语言教学和研究中受益，以便更深入地了解语言习得过程。同样，人们可能期望从业者对研究结果感兴趣，人们也可能期望研究人员对教师和语言学生的观点非常感兴趣。\n图 1.1 说明了这个理想世界，信息在影响语言教学方法的所有三个领域之间流动。然而，图 1.2 更接近实际情况：如今，这三个领域之间几乎没有互动。\n图 1.1。理论、应用语言学研究、思想和直觉与语言教学实践之间的理想关系。\n4\n图1.2。理论、应用语言学研究、思想和直觉与语言教学实践之间的实际关系。\n现实中，许多研究者不再参与语言教学和语言习得，也不与教师互动。理论研究和应用研究之间的互动也太少；那些寻找最佳方法的人往往很少关心底层理论。也许最明显的是，教师和材料开发人员很少关注任何类型的研究和理论。\n缺乏互动是有充分理由的，尤其是研究人员和教师未能互动。缺乏沟通的原因并非源于教师的反智主义。相反，它们源于过去未能提供相关输入的研究，再加上理论家坚持认为他们的见解是教师行为和教材建设的唯一合法决定因素。换句话说，我们过去是从理论直接走向实践，但根本行不通。\n这种方法的一些著名例子包括在课堂上直接应用行为主义心理学原理，即所谓的听说法。理论家坚持认为对话和模式练习是教授语言的“方式”，并推荐了许多教师和学生认为错误的技巧。最近的“理论应用”可能被称为“应用转换语法”运动，其特点是直接基于理论句法和音系学的当前工作的材料。应用 TG 并没有显着促进语言教学，其原因随着我们的进展将变得清晰。也许它唯一的实际效果是，它不必要地让许多教师感到毫无准备，因为他们没有接受过最新版本的转型理论的培训。 （为了避免读者产生错误的印象，我个人的观点是，转换生成语法，以及\n5\n进步，应该被视为极其重要的贡献，并且很容易超越以前的语言结构理论。我在这里的观点是，第二语言方法和材料并不一定应该直接基于 TG。）\n那么，这两种理论都失败了。第一种是行为主义理论，未能成功应用于语言教学，因为它根本不是一种语言习得理论。第二个，TG，失败了，因为它是一个产品理论，即成人的能力，而不是成人如何获得这种能力的理论。它不是语言习得过程的理论。\n我将在第二章中介绍的“新”理论是第二语言习得理论，并试图处理语言习得的过程，而不是其产物。尽管有这些优点，但在确定第二语言教学的方法和材料时，它只能被视为几种可能的信息来源之一。\n实践者们认为未能使理论“发挥作用”是他们的错，这使得理论家未能提供相关理论更加雪上加霜。他们错误地得出结论，认为正是他们对理论的无知导致这些基于理论的方法失败了。因此，近年来，教师在决定课堂内容时主要依靠第三领域，即他们自己的想法和直觉。教师实际所做的工作不再基于理论或应用研究。材料和许多关于方法论的书籍主要基于似乎在课堂上有效的内容，很少基于理论（回想一下早期基于听说法或 TG 的书籍），并且通常没有经过现场测试。\nC. 三种方法对方法的看法\r#\r\r本书的目的是总结当前的一种理论并阐述该理论对方法的影响。我将在这里简要总结其中的一些含义，预计第三章。当前的理论非常简单地表明，语言习得，无论是第一还是第二，只有在理解真实信息时才会发生，并且当习得者不“处于守势”时（用斯蒂维克的恰当说法来说） 。语言习得不需要大量的\n使用语法规则，并且不需要繁琐的练习。然而，这不会在一夜之间发生。真正的语言习得发展缓慢，即使条件完美，口语技能的出现也明显晚于听力技能。因此，最好的方法是在低焦虑情况下提供“可理解的输入”，其中包含学生真正想听到的信息。这些方法并不强迫学生尽早使用第二语言进行表达，而是允许学生在“准备好”时进行表达，认识到改进来自于提供交际和可理解的输入，而不是来自强迫和纠正表达。\n在本书的几个地方，我将试图表明应用语言学的研究与第二语言习得及其含义的理论研究非常一致。根据比较研究（比较方法 A 和 B，如前所述），“最佳方法”似乎是“输入方法”，即那些专注于在无压力情况下提供可理解输入的方法。\n通过对当前期刊中以教学为导向的论文和教师研讨会上的演讲标题的调查，我们可以了解“想法和直觉”领域认为什么是“最佳方法”。这些年来标题发生了显着变化！十年前，面向教师的文章和演示文稿侧重于语法描述，反映了对产品和演练程序的关注。 1*当前的标题更清楚地反映了促进课堂上的真实交流，帮助学生理解口头和书面输入并参与对话。 2\n在研讨会和小型会议中，我们不再看到有关语法要点或替代练习类型的演示。 “有效的想法”是关于角色扮演、利用报纸作为教具、社会戏剧等的想法。此外，新的方法论的主要目标是降低学生的焦虑（见第三章）。\nD. 本书的目标\r#\r\r本书的主要目标是介绍当前的理论及其含义。然而，还有另一个目标，那就是重新引入 上标数字指的是章节末尾的注释。\n老师们传授理论，希望能再次获得他们的信心。现在是时候再次审视理论了，我们意识到最新的理论可能仍然不是第二语言习得的最终定论。我并不是要求从业者或材料开发人员盲目地遵循理论的所有含义。我只希望我们的结果能够被视为思想以及方法和材料输入的另一个来源，并与实践者根据自己作为语言教师和语言习得者的经验得出的结论相结合。\n笔记\r#\r\r  例如，考虑一下*《语言学习》卷的目录*。 1959 年 9 月 9 日，其中包括：\n《英语语法课上的语法理论与实践》\n“了解法语动词”；\n《名词课与实践教师》\n“西班牙语动词形式中的语素交替”\n《‘ Thechnemes ’与班级活动的节奏》，1962 年第 12 卷，载：\n《生成语法注释参考书目》\n  例如， 1979 年的*《TESOL 季刊》包含以下文章：*\n“使用广播广告作为 ESL 听力课程的补充材料”\n《交际写作》\n“讲笑话作为英语作为第二语言的工具”反映了当前课堂上对沟通的重视。\n（注1和注2当然不能代表该领域的广泛活动样本，但它们具有代表性。近年来，《语言学习》杂志专注于理论和应用研究，而不是教育学。因此，我使用了\nTESOL 季刊，于 1967 年开始出版，目前为当前标题。）\n8\n  第二章\r#\r\r第二语言习得理论\n本章总结了当前的第二语言习得理论。为此，它首先描述了一些非常重要的假设。前三个，即习得与学习的区别、自然顺序假说和监控假说，我们稍微简要地回顾一下，因为它们在其他几本书和专业论文中已经进行了大量的讨论。然而，我们将提供足够的细节，以使外行读者能够很好地了解这些假设以及支持这些假设的现有证据。第四个假设，即输入假设，可能是当今第二语言习得理论中最重要的概念。它很重要，因为它试图回答我们如何习得语言的关键理论问题。它也很重要，因为它可以解决我们在各个级别的第二语言教学中遇到的许多日常问题。在讨论了输入假设之后，我们转向情感过滤器的概念，这是一个关于情感变量如何与第二语言习得过程相关的假设。\n本章的第二部分回顾了被认为与第二语言习得成功相关的各种因素，包括教学、接触第二语言的不同措施以及习得者的年龄。有人声称，这些因素并不是真正的致病因素。虽然它们似乎与习得第二语言的成功或失败有关，但第二语言习得的真正因果变量源自输入假设和情感过滤器——习得者接收和理解的可理解输入的数量，以及情感的强度。过滤器，或采集器对输入“开放”的程度。\nA.关于第二语言习得的五个假设\r#\r\r1.习得与学习的区别\r#\r\r习得与学习的区别也许是这里提出的所有假设中最基本的。它指出成年人有两种不同且独立的方式来发展第二语言的能力。\n第一种方式是语言习得，这个过程与儿童发展母语能力的方式相似，甚至完全相同。语言习得是一个潜意识的过程；语言习得者通常不会意识到他们正在习得语言，而只知道他们正在使用语言进行交流。语言习得的结果，获得的能力，也是潜意识的。我们通常不会有意识地意识到我们所习得的语言的规则。相反，我们对正确性有一种“感觉”。语法句子“听起来”是正确的，或者“感觉”是正确的，而错误则感觉是错误的，即使我们没有有意识地知道违反了什么规则。\n描述习得的其他方式包括内隐学习、非正式学习和自然学习。在非技术语言中，习得是“拾取”一种语言。\n培养第二语言能力的第二种方法是语言学习。今后我们将使用“学习”一词来指代第二语言的有意识知识、了解规则、意识到它们并能够谈论它们。用非技术术语来说，学习是“了解”一种语言，被大多数人称为“语法”或“规则”。一些同义词包括语言的正式知识或显性学习。 1*\n一些第二语言理论家认为儿童可以习得，而成人只能学习。然而，习得学习假说声称，成年人也会习得“习得”语言的能力，这种能力并不会在青春期消失。这并不意味着成年人总是能够达到第二语言的母语水平。这确实意味着成年人可以使用儿童使用的相同自然“语言习得设备”。正如我们稍后将看到的，习得对于成年人来说是一个非常强大的过程。 上标数字指的是章节末尾的注释。\n纠错对潜意识习得影响很小或没有影响，但被认为对有意识学习有用。据推测，纠错可以帮助学习者归纳或“找出”规则的正确形式。例如，如果一个以英语为第二语言的学生说“我每天都去上学”，并且老师通过正确地重复这句话来纠正他或她，那么学习者应该意识到/s/结尾与第三人称而不是第一人称，并改变他或她对规则的有意识的心理表征。这看起来很合理，但纠错在实际操作中是否会产生这种影响尚不清楚（ Fanselow ，1977；Long，1977）。\n儿童语言习得的证据证实，纠错不会在很大程度上影响习得。布朗和他的同事们已经证明，父母实际上只纠正了孩子语言的一小部分（偶尔的发音问题、某些动词和脏话！）。他们从研究中得出的结论是，父母更多地关注孩子所说内容的真实价值，而不是形式。例如，Brown、 Cazden和Bellugi (1973) 报道了这样一个句子：\n她卷我的头发\n“被批准了，因为事实上，母亲正在卷夏娃的头发”（第 330 页）。另一方面，\n沃尔特·迪士尼将于周二上映\n尽管语法正确，但还是被纠正了，因为沃尔特·迪士尼实际上是在周三出现在电视上的。布朗*等人。*得出的结论是，似乎“真理价值，而不是句法良好性，主要支配着父母的明确言语强化——这使得这样一个事实显得有点矛盾，即这种训练计划的通常结果是一个成年人，他的言语高度合乎语法，但不合乎语法。”特别真实”（第330页）。\n习得与学习的区别可能并非第二语言习得所独有。我们当然在学校“学习”了我们第一语言的一小部分（例如，对于大多数人来说，谁/谁的区别），并且在其他领域也做出了类似的区别（例如，参见Reber ，1976年；Hall，1959年；和d\u0026rsquo;Anglejan的评论，1978）。\n2.自然秩序假说\r#\r\r近年来语言习得研究中最令人兴奋的发现之一是发现语法结构的习得以可预测的顺序进行。特定语言的习得者倾向于较早习得某些语法结构，而较晚习得其他语法结构。各个收购方之间的一致性并不总是 100%，但存在明显的、统计上显着的相似之处。\n就自然顺序假说而言，英语也许是研究最多的语言，而在英语的所有结构中，形态学是研究最多的。 Brown (1973) 报告说，学习英语作为第一语言的儿童往往比其他人更早地习得某些语法语素或功能词。例如，渐进标记ing （如“他正在打棒球*”* ）和复数标记 /s/（“两只狗*s* ”）是最先获得的语素，而第三人称单数标记 /s/（如“He live *s* in New York”）和所有格 /s/（“John\u0026rsquo;s *hat* ”）通常是在很晚之后才获得的，从六个月到一年后出现。 de Villiers 和 de Villiers (1973) 从横截面上证实了布朗的纵向结果，表明布朗发现最早获得的物品也是孩子们更容易做对的物品。换句话说，对于那些研究的语素，难度顺序与习得顺序相似。\n布朗的研究结果发表后不久， Dulay和 Burt (1974, 1975) 报告说，学习英语作为第二语言的儿童也表现出语法语素的“自然顺序”，无论他们的母语是什么。儿童第二语言习得顺序与第一语言习得顺序不同，但不同群体的第二语言习得者表现出惊人的相似性。 Dulay和 Burt 的结果得到了许多研究者的证实（Kessler 和Idar ，1977； Fabris ，1978；Makino，1980）。 Dulay和 Burt 使用了 Brown 最初研究的 14 个语素的子集。 Fathman (1975) 通过口语表达测试（SLOPE 测试）证实了儿童第二语言习得的自然顺序，该测试探讨了 20 种不同的结构。\n继Dulay和 Burt 的工作之后，Bailey、Madden 和Krashen (1974) 报告了成人受试者的自然顺序，该顺序非常相似\n儿童第二语言习得中所见的情况相同。正如我们稍后将看到的，这种自然秩序仅在某些条件下出现（或者更确切地说，它仅在某些条件下消失！）。一些确认成人语法语素自然顺序的研究包括 Andersen (1976)，他使用了组合； Krashen 、Houck、 Giunchi 、Bode、Birnbaum 和Strei (1977)，使用了自由言论；还有Christison (1979)，使用言论自由。使用 SLOPE 测试的成人研究也证实了自然顺序并扩大了数据库。 Krashen 、 Sferlazza 、Feldman 和Fathman (1976) 发现了与Fathman (1975) 儿童第二语言顺序类似的顺序， Kayfetz -Fuller (1978) 也使用 SLOPE 测试报告了自然顺序。\n如上所述，第二语言的习得顺序与第一语言的习得顺序不同，但也有一些相似之处。表 2.1，来自Krashen\n(1977 ) ,呈现平均\n表 2.1。英语作为第二语言的语法语素习得的“平均”顺序（儿童和成人）\n笔记：\n 这个顺序源自对第二语言习得的实证研究的分析（ Krashen ，1977 ）。大多数研究表明与平均顺序显着相关。 没有对同一个框中的语素的排序关系做出任何声明。 这里提出的许多关系也适用于儿童的第一语言习得，但有些则不然：一般来说，绑定语素对于第一语言和第二语言习得具有相同的相对顺序（ING、复数、 IR . PAST、REG. PAST、III单数和所有格），而助词和系动词在第一语言习得中往往比在第二语言习得中相对晚一些。  顺序，并显示第一语言顺序的不同。这个平均顺序是对语法语素习得的许多实证研究进行比较的结果。\n虽然英语是学习得最好的语言，但它并不是唯一学习的语言。针对其他语言习得顺序的研究开始出现。 Bruce（1979）关于俄语作为外语的论文和 van Naerssen （1981）关于西班牙语作为外语的尚未发表的论文证实了自然顺序假说对于其他语言的有效性。\n稍后我们将讨论自然顺序假设的教学含义，但是，我应该在这里指出，自然顺序假设的含义并不是我们的教学大纲应该基于这里讨论的研究中发现的顺序，即，我不建议早教ing和晚教第三人称单数/s/。事实上，在我们的目标是语言习得的所有情况下，我们都会找到拒绝语法排序的理由。然而，在我们完成理论基础的奠定之后，我们将在稍后处理这个问题。\n(一)过渡形式\n支持自然顺序假说的研究仅显示了成熟或结构良好的结构出现的顺序。其他研究揭示了收购者走向精通的路径。 （有关评论，请参阅Dulay 、 Burt 和Krashen ，正在出版。 Ravem ， 1974 年； Milon ， 1974 年； Gillis 和 Weber， 1976 年； Cancino 、 Rosansky和 Schumann， 1974 年； Wode ， 1978 年和 Nelson， 1980 年是一些第二语言）这里也存在令人惊讶的一致性——收购者在收购时会犯非常相似的错误，称为发展错误。例如，在习得英语否定时，许多第一语言和第二语言习得者都会经历一个将否定标记放置在句子之外的阶段，如下所示：\n没有妈妈磨它。 （来自 Klima和Bellugi (1966) 对儿童 L1 习得的研究）现在不一样了。 （来自 Ravem (1974) 对儿童的研究\nL2 采集）\n典型的后期阶段是在主语和动词之间放置否定标记，如下所示：\n我不喜欢这个。 （坎奇诺 等人。 (1975) 儿童研究\nL2 采集）\n而且这个没有日历。 （来自Schumann (1978a) 对成人 L2 习得的研究）在达到正确的形式之前。\nwh问题习得的可预测阶段包括一个早期阶段，其中wh词出现在句子的其余部分之前，否则会保留其正常的未倒装形式，如下所示：\n他怎么能当医生呢？ （ Klima和Bellugi ，1966 年，儿童 L1\n收购）\n什么？ （ Ravem ，1974 年，儿童 L2 习得）\n直到后来，获取者才开始颠倒句子的主语和动词。 （详细的评论可以在Dulay找到 等人。 ， 在新闻。）\n已经针对其他语言和其他结构描述了过渡形式。尽管习得者的第一语言是特定的第一语言，但给定目标语言的阶段似乎惊人地相似（尽管特定的第一语言可能会影响某些阶段的持续时间；参见 Schumann，1979）。这种一致性被认为反映了我们所有人的自然语言习得过程的运作。 （有关自然秩序假说的一些当前问题和争议的讨论，请参见Krashen ，1981。）\n3.监控假设\r#\r\r虽然习得与学习的区别声称两个独立的过程在成人中共存，但它并没有说明它们如何在第二语言表现中使用。监控假说认为习得和学习是以非常特定的方式使用的。通常，习得会“启动”我们用第二语言说话，并影响我们的流利程度。学习只有一个功能，那就是作为一个监控者，或者说编辑者。学习的作用只是为了改变我们的言语形式，而后天系统已经“生产”了它。这可能发生在我们说话或写作之前，或之后（自我纠正）。图2.1 模拟了这个过程。\n15\n图 2.1。第二语言生产中的习得和学习。\n有意识的学习只能作为“监视器”使用，它可以在实际说出或写出话语之前或之后改变习得系统的输出。正是后天系统启动了正常、流利的言语表达。\n监视器假说意味着正式规则或有意识的学习在第二语言表现中只发挥有限的作用。随着过去几年研究的进展，这些局限性变得更加明显。第四章回顾的这项研究强烈表明，第二语言表演者只有在满足三个条件时才能使用有意识的规则。这些条件是必要的而非充分的，也就是说，即使满足所有三个条件，表演者也可能无法充分利用他的有意识语法。我在这里列出了这些条件并进行了简要说明。我们将在第四章中更详细地讨论它们：\n 时间。为了有效地思考和使用有意识的规则，第二语言表演者需要有足够的时间。对于大多数人来说，正常的谈话没有足够的时间来思考和使用规则。在谈话中过度使用规则可能会导致麻烦，即犹豫不决的谈话风格和对对话伙伴所说内容的注意力不集中。 注重形式。要有效地使用监视器，时间是不够的。表演者还必须关注形式，或思考正确性（ Dulay和 Burt，1978）。即使我们有时间，我们也可能过于专注于我们所说的话，而没有注意我们是如何说的。 了解规则。这是一个非常艰巨的要求。语言学告诉我们，语言的结构极其复杂，他们声称只描述了最著名语言的一小部分。我们可以确定，我们的学生只接触到该语言全部语法的一小部分，而且我们知道，即使是最好的学生也无法学习他们所接触到的每条规则。  图 2.1 所示的产生式模式的证据最初来自自然顺序研究。 （证实证据有\n有其他来源的研究，例如参见 Bialystok 和Frohlich ，1977、1978a、1978b。）这些研究与这种概括一致：我们看到语法语素的自然顺序，即儿童（第二语言）的难度顺序（类似于习得顺序； Krashen ，1977），当我们在看似“无监控”的情况下测试受试者时，他们专注于沟通而不是形式。当我们对满足三个条件的成人受试者进行测试时，即铅笔和纸“语法”型测试，我们看到“不自然”的顺序，这些顺序不同于儿童 L2 习得顺序或难度顺序。对这一结果的解释是，自然顺序仅反映了后天系统的运作，没有意识语法的侵入，因为成人第二语言习得被认为与儿童（第二）语言习得相似。当我们将人们置于满足这三个条件的情境中，当他们有时间、专注于形式、了解规则时，错误模式就会发生变化，反映出有意识语法的贡献。\n事实似乎是，非自然顺序是某些语素（较晚获得的、更“可学习”的项目）等级上升的结果。在作为第二语言的英语中，当表演者处于可以并执行Monitor 的情况时，我们看到第三人称单数语素和常规过去时的排名上升，两者都是后来获得的，在表 2.1 中的列表中较低，并且在语法和语义上都相对简单。 （参见 Larsen-Freeman，1975 年的研究，第 IV 章表 4.1 中所述；以及 Brown，第 IV 章注释 4 中所述。） 2\n因此，使用有意识的监视器具有允许表演者提供尚未获得的物品的效果。然而，正如我们将在第四章中看到的，大多数监视器用户只能提供某些项目；监视器在语法的某些部分上比其他部分做得更好。具体来说，它似乎可以通过两种不同方式表现出“简单”的规则，从而做得更好。首先，不需要复杂的移动或排列的规则；语法简单的规则。这个意义上的简单规则包括束缚形态，例如英语中的第三人称单数，或法语中的de + le = du缩写。这个意义上的困难规则包括英语中的*wh -*疑问句规则，它要求将疑问词移到前面。\n句子、主语-助动词倒装，以及在某些情况下在正确的位置插入do 。由于其语义属性，规则也可以是简单的和困难的。英语冠词系统很容易正式描述——只需插入或 a或有时名词前什么也没有。但它的语义很难描述（例如，参见 Hawkins，1978）。到目前为止，总结一下，监视器的使用会导致按自然顺序“较晚获得”的项目（表演者已学习但尚未获得的项目）的排名上升。 3只有某些物品可以提升等级，但是，当显示器使用频繁时，这种等级提升足以扰乱自然秩序。 （正如第四章所讨论的，有可能看到某些后期获得的语素的微小变化，这些变化不足以扰乱自然秩序；这可以称为轻度监视器使用。特别参见第四章注释 5。\n正如我们将在第四章中看到的，鼓励显着使用监视器并不容易。实验表明，任何非真正的语法测试都不会以任何方式带出有意识的语法。 Keyfetz (1978) 在 SLOPE 测试中发现了口头和书面版本的自然顺序，表明仅使用书面形式不足以导致不自然的顺序。 Houck、Robertson 和Krashen （1978a）让成人受试者（大学水平的国际学生）纠正他们自己的书面输出，并且仍然发现纠正版本的自然顺序。 Krashen 、Butler、Birnbaum 和 Robertson（1978）发现，即使 ESL 学生用充足的时间写作文并且在指示下要非常“小心”，使用显示器的效果却出奇地轻微。现在最好的假设是，对于大多数人，甚至大学生来说，需要真正的离散点语法类型测试才能满足监视器使用的所有三个条件并鼓励大量使用有意识的语法。\n(a ) 显示器使用的个体差异\n我们在成人第二语言习得和表现中看到的一些个体差异可以通过有意识监控器的差异使用来解释。案例研究表明，表演者可能分为三种基本类型（ Krashen ， 1978； Stafford 和Covitt ，1978； Kounin和Krashen ，1978）。\n 监控过度用户。这些人一直试图监控，表演者不断地用他们对第二语言的有意识的知识来检查他们的输出。结果，这些表演者可能会说话犹豫不决，经常在说话过程中自我纠正，并且过于关注正确性而无法真正流利地说话。  过度使用语法可能有两个不同的原因。过度使用首先可能源于表演者接触第二语言的历史。许多人是纯语法教学的受害者，根本没有机会学习第二语言，并且可能别无选择，只能依赖学习。另一种可能与性格有关。这些过度使用者有机会学习并且实际上可能已经掌握了大量第二语言。他们根本不相信这种获得的能力，只有当他们“只是为了确定”而提及他们的监视器时才会感到安全。\n *监控用户不足。*这些表演者还没有学过，或者即使学过，也不愿意使用他们有意识的知识，即使条件允许。低用户通常不受纠错的影响，只能通过使用正确性的“感觉”（例如“听起来正确”）来自我纠正，并且完全依赖于所获得的系统。  Stafford 和Covitt (1978) 指出，一些使用不足的人只是“口头上”承认有意识语法的价值。他们的主题“我”认为人们需要有意识的规则才能“正确”说话，并且“语法是每种语言的关键”。然而，“我”本人在言语或写作中几乎没有使用有意识的规则。\n *最佳监控用户。*我们的教学目标是培养最佳用户和表演者，他们在适当的时候并且在不干扰沟通的情况下使用监视器。许多最佳用户不会在普通对话中使用语法，因为语法可能会造成干扰。 （一些非常熟练的表演者，例如一些专业的语言学家和语言教师，可能能够在对话中使用大量有意识的知识，例如Rivers，1979，但这很不寻常。我们可能会认为这些人是“超级监视器”用户”，在Yorio ，1978 年之后。）然而，在书面和有计划的演讲中，当有时间时，最佳用户通常会做出  任何修正来提高输出的准确性（例如，参见Krashen和Pon ，1975）。\n因此，Optimal Monitor 用户可以使用他们学到的能力作为他们获得的能力的补充。一些尚未完全掌握第二语言的最佳用户，在言语中偶尔会犯一些小错误，但他们可以如此成功地使用他们有意识的语法，以至于他们常常会产生一种在写作中是母语的错觉。 （这并不意味着有意识的学习可以完全弥补不完整的习得。一些未习得的规则是可以学习的，而另一些则不能。最佳用户能够通过有意识的学习来填补部分空白，但不是全部。\n4. 输入假设\r#\r\r与其他假设相比，我们将花费更多的时间来研究这个假设，原因有两个。首先，这些材料中的大部分内容相对较新，而其他假设已经在几本出版的书籍和文章中进行了描述和讨论。第二个原因是它的重要性，无论是理论还是实践。输入假设试图回答可能是我们领域中最重要的问题，并给出对语言教学的所有领域都有潜在影响的答案。\n重要的问题是：我们如何获得语言？如果监控假设是正确的，即习得是核心而学习是次要的，那么我们教学法的目标应该是鼓励习得。那么我们如何获取的问题就变得至关重要。\n本节的组织如下：在给出任何支持证据之前，我将首先提出输入假设。接下来是对第一语言和第二语言习得研究证据的描述。然后，我们将简要介绍应用语言学研究的证据，第五章将对此进行更详细的讨论。\n(a ) 假设的陈述\n让我们首先重申一下我们如何获得的问题：鉴于自然顺序假设的正确性，我们如何从一个阶段转向另一个阶段？如果收购方处于“第四阶段”，如何才能进入“第五阶段”？更一般地说，我们如何从阶段i开始，我 代表\n当前能力，到i + 1 ，下一个级别？输入假设提出以下主张：从阶段i移动到阶段i + 1的必要（但非充分）条件是获取者理解包含i + 1的输入，其中“理解”意味着获取者专注于含义而不是消息的形式。\n换句话说，只有当我们理解的语言所包含的结构“稍微超出”我们现在的结构时，我们才能获得知识。这怎么可能？我们如何理解包含我们尚未掌握的结构的语言？这个明显悖论的答案是，我们不仅仅使用我们的语言能力来帮助我们理解。我们还利用上下文、我们对世界的了解、我们的语言外信息来帮助我们理解针对我们的语言。\n输入假设与我们在第二语言和外语教学中通常的教学方法背道而驰。正如 Hatch (1978a) 所指出的，我们的假设是我们首先学习结构，然后练习在交流中使用它们，这就是流畅性的发展方式。输入假设的说法恰恰相反。它说我们首先通过“寻求意义”来获得，结果，我们获得了结构！ （有关第一语言习得的讨论，请参阅\n麦克纳马拉，1972。）\n因此，我们可以将输入假设的 (1) 和 (2) 部分表述如下：\n 输入假设与习得有关，与学习无关。 我们通过理解包含结构的语言来获得 它超出了我们当前的能力水平（ i + 1 ）。这是在上下文或语言外信息的帮助下完成的。  输入假设的第三部分表示输入必须包含i + 1才能对语言习得有用，但它不必仅包含i + 1 。它表示，如果收单方理解输入，并且有足够的输入，则将自动提供i + 1 。换句话说，如果通信成功，则提供i + 1 。正如我们稍后将讨论的，这意味着最佳输入甚至不应该尝试故意瞄准i + 1 。我们都熟悉试图故意涵盖i + 1的教学大纲。有一个“当天的结构”，通常教师和学生都认为课程的目的是教授或练习特定的语法项目或结构。一旦这个结构被\n“掌握”，课程大纲进入下一个。这部分输入假设意味着没有必要刻意尝试提供i + *1 。*正如我们稍后将看到的，有理由怀疑它甚至可能有害。\n因此，输入假设的第(3)部分为：\n 当通信成功时，当输入被理解且足够时，将自动提供i + 1 。  输入假设的最后部分指出，口语流利程度不能直接教授。相反，它会随着时间的推移自行“出现”。 4根据这种观点，教授口语的最好方法，也许也是唯一方法，就是提供可理解的输入。当收购方感觉“准备好了”时，早期发言就会出现；然而，对于不同的人来说，这种准备状态到达的时间有所不同。此外，早期的言语通常在语法上不准确。随着收单方听到并理解更多的输入，准确性会随着时间的推移而提高。输入假设的第 (4) 部分因此为：\n 生产能力显现。它不是直接教授的。  (b )支持假设的证据\n *儿童第一语言习得。*输入假设与已知的“看护者言语”非常一致，即父母和其他人在与幼儿交谈时所做的修改。对我们来说，看护者言语最有趣、也许也是最重要的特征是，它不是有意教授语言的尝试。相反，正如 Clark 和 Clark（1977）指出的那样，看守者的言语被修改以帮助理解。看护者说话“更简单”，努力让孩子理解自己。  我们感兴趣的第二个特征是，我们发现看护者的言语虽然在语法上比成人之间的言语更简单，但它是“粗略地调整”到孩子当前的语言能力水平，而不是“微调”。换句话说，看护者的言语并没有根据每个孩子的水平进行精确调整，而是随着孩子的进步而变得更加复杂。粗调的非常好的证据来自 Cross (1977) 和 Newport、 Gleitman的研究\nGleitman (1977) 报告说，输入复杂性与儿童语言成熟度测量之间的相关性虽然是积极的且通常很重要，但通常不是很大。对这一发现的解释是，看护者并没有完全瞄准i + 1 。他们为孩子提供的输入包括i + 1 ，但也包括许多已经获得的结构，加上一些尚未获得的结构（ i + 2 ， i + 3等），并且孩子可能还没有准备好。换句话说，看护者不提供基于语法的教学大纲！ （有关粗调的更完整回顾，请参阅Krashen 1980、1981。）\n我们关心的看守言论的第三个特征被称为“此时此地”原则。众所周知，看护者谈论的主要是孩子能感知到的东西，以及周围环境中的东西。与孩子的对话更有可能涉及房间里正在发生的事情（“看到球了吗？”），而不是房间里和当前不存在的事情（“明天我们在楼上做什么？”）。正如纽波特等人。 (1977)指出，这是一个主题约束——“此时此地”原则反映了看护者和孩子的共同利益。\n虽然没有直接证据表明看护者语音确实比未经修改的输入更有效，但输入假设预测看护者语音对孩子非常有用。首先，它是或旨在是可理解的。 “此时此地”功能提供了额外的语言支持（上下文），帮助孩子理解包含i + 1的话语。正如麦克纳马拉（MacNamara，1972）指出的，孩子并不是先学习语法，然后再用它来理解。孩子首先理解，这有助于他获得语言。\n如前所述，粗调的看护者语音涵盖了孩子的i + 1 ，但并不专门关注i + 1 。输入假设的第 (3) 部分声称这是最优的。粗调对于儿童母语习得具有以下优势：\n  它确保i + 1被覆盖，而无需猜测每个孩子的i + 1是什么。另一方面，故意瞄准i + 1可能会失败！\n  粗略调整的输入将一次为多个孩子提供i + *1 ，只要他们理解所说的内容。*微调输入，即使是准确的（即\n即使它“击中” i + 1 ) ，也只会\ni + 1与输入中强调的内容完全相同的孩子受益。\n  粗略调整的输入提供内置审查。我们不需要关心孩子是否“掌握”了某种结构，孩子是否注意到当天的输入，或者我们是否提供了足够的信息。通过自然的、粗略调整的输入， i + 1将发生并重复发生。\n  换句话说，如果第(3)部分是正确的，如果有足够的自然沟通和理解总是提供i + 1 ，那么看护者就不必担心有意识的编程结构。\n这一定是一件好事！将语法排序的责任添加到父母身份中将使亲子沟通变得不那么自发并且更加困难。\n 第二语言习得的证据：简单的代码。输入假设也适用于第二语言习得。首先，如前所述，第二语言习得者，无论是儿童还是成人，也是一个“习得者”，就像儿童习得第一语言一样。另外，根据假设（2），第二语言和第一语言都有自然的习得顺序，因此我们也可以讨论第二语言习得者的i + *1 。*第三，第二语言习得者也可以接收到儿童所获得的修改输入。  该修改后的输入分为三种类型。外国人谈话的结果是母语人士对其语言能力不强的人进行修改的结果（例如，参见 Hatch、 Shapira和 Gough，1978 年的一些很好的例子）。当使用第二语言时，教师谈话是课堂上的外国人谈话，是课堂管理和解释的语言。第三个简单的代码是中介语谈话，即其他第二语言习得者的讲话。\n虽然这些简单的代码和看守者的讲话之间存在一些差异（Long，1980；Freed，1980），但也有重要的相似之处。与看护者语音的情况一样，外国人谈话和教师谈话5中的修改不是为了语言教学的目的，而是为了交流的目的，帮助第二语言习得者理解所说的内容。其次，现有的研究表明外国人谈话和老师谈话\n粗调到收购方的水平，而不是微调（Freed，1980； Gaies ，1977；有关评论，请参见Krashen ，1980）；更高级的第二语言表演者往往会获得更复杂的输入，但熟练程度和输入复杂性之间的相关性并不完美。\n外国人的谈话和老师的谈话可能并不总是在“此时此地” ， 6但有帮助的母语人士和老师会找到其他方法来使输入内容易于理解。除了语言上的改变之外，它们还利用了习得者对世界的了解，这当然比习得第一语言的孩子的知识更多。此外，教师还使用教学辅助工具，例如图片和现实（参见第三章的讨论）。\n输入假设预测这些简化的代码对于第二语言习得者将非常有用，就像看护者语音被认为对孩子有用一样。 （有关支持这一假设的一些初步案例历史数据，请参阅Krashen ，1980 年、1981 年。）输入假设还预测，自然的、交流的、粗调的、可理解的输入比直接针对i的微调输入具有一些真正的优势。 + 1 ，换句话说，旨在教授当天结构的课堂练习。\n第三章更详细地介绍了违反语法大纲的案例，但这里只是一个简短的总结。这些论点与反对为孩子提供微调输入的论点非常相似：\n 所有学生可能并不处于同一阶段。对于许多学生来说， “当天的结构”可能不是i + 1 。另一方面，通过自然的交流输入，将为每个人提供一些i + 1或其他。 在语法教学大纲中，每个结构仅出现一次。如果学生错过、缺席、不专心，或者根本没有足够的练习（输入），学生可能必须等到明年所有结构都进行复习！另一方面，粗略调整的可理解输入允许自然回顾。 语法教学大纲假设我们知道习得的顺序。当我们依赖于可理解的输入、依赖于粗调的自然交流时，这样的假设是不必要的。 最后，语法教学大纲以及由此产生的语法焦点对可以讨论的内容施加了严重的限制。很多时候，如果我们的潜在动机是实践某种特定的结构，那么讨论或阅读任何真正感兴趣的内容即使不是不可能，也是很困难的。换句话说，语法焦点通常会妨碍使用第二语言进行真正的交流。  如果这些论点是正确的，那就意味着当我们的目标是习得时，我们不应该试图按照自然顺序或任何其他顺序进行教学。 （当目标是有意识学习时，这不一定是正确的；请参阅第四章。）\n(iii)*第二语言习得的证据：沉默期和母语影响。*输入假设也与第二语言习得的其他发现和假设一致。其中一个可以称为“沉默期”，这是儿童第二语言习得中最明显的现象。\n人们经常注意到，在自然、非正式的语言环境中学习第二语言的儿童在第一次接触第二语言后的几个月内可能会说很少的东西。输出通常由记忆的语言和学习的整个句子组成，就好像它们是一个单词一样。例如，Hatch (1972) 报道说，保罗是一位讲中文的五岁孩子，他将英语作为第二语言，但他在美国的最初几个月并没有真正使用“创造性”语言。他唯一的输出是记住句子，例如\n离开这里。\n又到了吃吃喝喝的时间了。\n他显然已经将这些作为一个整体的话语来学习，但没有真正理解它们的组成部分（例如，如果在另一个句子中使用“out”或“time”一词，他可能不会理解它）。无论是在课堂上还是在操场上，这些背下来的句子对保罗来说可能非常有用。 7 当“真正的”语言确实开始出现时，它看起来非常像第一语言的发展，有简短的句子，例如\n这只风筝。\n球号\n根据输入假设对沉默期的解释是直接的——孩子通过倾听、理解周围的语言来建立第二语言的能力。根据输入假设，在通过聆听和理解发展出足够的能力后，口语能力会自行出现。我们应该注意到，有关儿童习得第二语言的案例历史（另见Hakuta ，1974；Ervin-Tripp，1974）一致认为，他们可能需要几个月的时间才能开始说话，而且出现的言语并非没有错误。正如我们将在第三章中看到的，这一发现具有重要的教学考虑。\n成人和正式语言课上的儿童通常不允许有沉默期。他们中的十人在获得足够的句法能力来表达自己的想法之前，就被要求很早就用第二语言进行创作。根据纽马克（ Newmark ，1966）首次提出的假设，在“准备好”之前被要求进行表演的表演者将依赖第一语言规则，也就是说，他们在讲第二语言时将使用第一语言的句法规则。\ni + 1来表达自己但尚未获得它，则习得者将用某些 L1 规则替代第二语言的规则 i + 1 *。*使用的 L1 规则可能与 L2 i + 1非常相似，但也可能在某些方面有所不同。当 L1 和 L2 规则不同时，产生的错误通常称为\n“干扰”。但纽马克认为，这根本不是干涉；而是干涉。这并不是第一语言干扰第二语言表现的结果，而是无知的结果——没有掌握第二语言表现所需的第二语言规则。\n(iv) L2 规则使用的优点和缺点。用某些 L1 规则替代某些i + 1既有优点也有缺点。然而，优点是短期的，而缺点似乎相当严重。\n一个明显的优点是，使用 L1 规则可以让执行者“超越他的能力”，在获得相关的 i+1 规则之前满足 L2 通信的实际需要。当使用的 L1 规则与 L2 中的规则相同（“正迁移”）时，表演者似乎免费获得了一些东西。即使 L1 规则是\n不同，人们可能会说表演者仍然领先，因为很多时候，尽管形式不正确，他仍然可以传达他的观点。\n另一个优点是，使用 L1 规则允许的早期制作也有助于邀请输入——它允许表演者更多地参与对话，这可能意味着更容易理解的输入，从而获得更多的第二语言。\n然而，回到 L1 确实有一些缺点。首先，如上所述，L1 规则可能与 L2 规则不同，并且可能导致错误。有意识的监视器可以在某些情况下注意到并修复这些错误，但不是全部，因为正如我们所见，监视器使用的限制非常严格。因此，使用 L1 规则需要监控者时刻保持警惕，并且是用第二语言生成形式上正确的句子的尴尬方法。 （请注意，根据理论，对此类错误的监视器纠正不会产生习得或永久变化。即使在很长一段时间内有效地完成，它也不会消除 L1 规则。真正的习得仅来自可理解的输入。） 8\n在第二语言表现中使用 L1 规则可能还有另一个严重的缺点。即使 L1 规则与实际的 L2 规则或过渡形式相似，也不清楚这些规则是否会帮助收购方取得进步——它们可能不会在发展序列中取代“真正的”L2 规则。在Krashen (1982) 中，我讨论了获取需要i和i + 1之间的比较的假设（Clark 和 Andersen，1980； Lamendella ，1979）。情况可能是， i和i + 1之间的“距离”不能太大——i和i + 1只能有很小的差异。我假设，过渡形式可能很有用，因为它们可以暂时充当i ，有助于减少i和i + 1之间的距离。\n例如，如果英语的目标规则是否定形式（ i + 1 ，通过输入呈现给系统），则中间形式 no + v （由创造性构造系统内部提供）可能更接近成熟的否定形式。因此，收单方可以在i处使用 no + v ，而不是更原始的否定形式（例如 no + S ）。\n如果过渡形式可以暂时充当i ，那么下一个问题是 L1 规则（即使它们恰好与 L2 规则或过渡形式相似）是否可以执行此功能。答案可能是\n“不”。例如，说西班牙语的人在习得英语的过程中通常会经历很长的一段时间，在此期间他们不会产生英语否定词“+ v” ，这种结构类似于英语作为第一语言和第二语言的过渡形式（Schumann，1979）。可能的情况是，早期的 no + v表现是 L1 规则的使用，而后来的 no + v表现才是真正的中间形式。或许只有后者才能帮助系统“前进”。 9\n总而言之，L1 规则的使用被假设为当生产中需要第二语言规则但又不可用时依赖第一语言知识的结果。它可能会暂时提高生产力，但可能不是第二语言的真正进步。纽马克认为，真正治愈“干扰”的方法不是钻研两种语言之间的对比点（ Newmark and Reibel ，1973，p.239）。练习充其量只能产生学习效果，而且正如我们所见，这只是短期治疗方法。真正的治愈方法“就是治愈无知”（ Newmark ，1966，第81页）：真正的语言习得。只有当获取方获得可理解的输入时，这种情况才会发生。 10 11 12\n（五）*应用语言学研究。*输入假设也与所谓的“方法比较”实验的结果一致。一些学者和学者团体试图通过简单的比较来直接确定哪种教学方法最好。对使用两种不同方法学习第二语言和外语的学生群体进行比较，包括长期和短期研究。我们将在第五章详细介绍这项研究，但我会提前陈述我自己的结论。我阅读的比较更常用方法（音频与语法翻译或认知代码）的研究如下：\n “演绎”方法（先规则，然后练习，例如语法翻译和认知代码）比成人的有声语言教学稍微有效一些。这些差异通常具有统计显着性，但并不巨大。使用这些方法中的任何一种，学生显然都取得了一些进步。 对于青少年来说，没有明显的差异。  我以这种方式解释了未能发现巨大差异的情况：这些研究中比较的方法都没有提供太多可理解的输入！此外，输入假设预测，提供大量可理解输入的方法将比任何旧方法做得更好。\n有几种较新的方法可以做到这一点，例如 Asher 的全面身体反应方法（Asher，1966、1969）和 Terrell 的自然方法（Terrell，1977）。在这些方法中，课堂时间致力于提供可理解的输入，重点是信息而不是形式，并且学生在自己决定“准备好”之前不会用第二语言进行表达。过去十年来，专业文献中不断出现证实这种“输入法”优越性的报告（例如Asher，1972；Gary，1975； Postovsky ，1974；第五章提供了更多详细信息）。 （然而，对可理解输入的关注并不是新方法成功的唯一原因；请参阅下面关于情感的讨论以及第三章和第五章。）\n由于本书的大部分内容旨在讨论第二语言习得理论的含义（第三章、第四章和第五章），因此本节确实应该推迟到以后。然而，我忍不住在这里简单地陈述一个含义，因为在我看来，输入假设的含义对于我们所有对语言习得感兴趣的人来说确实令人兴奋。最重要的是，输入假设预测教室可能是第二语言习得的绝佳场所，至少达到“中级”水平。对于初学者来说，课堂可能比外面的世界好得多，因为外面的世界通常为初学者提供的可理解的输入很少，特别是对于年龄较大的学习者来说（Wagner-Gough and Hatch，1975）。在教室里，我们每天可以提供一小时的可理解的输入，这对于初学者来说可能比外面的要好得多。在讨论情感过滤器之后，我们将对此进行更详细的阐述。\n5.情感过滤假说\r#\r\r情感过滤假说阐述了情感因素如何与第二语言习得过程相关。情感的概念\nDulay和 Burt (1977)提出，与情感变量和第二语言习得领域的理论工作以及本章前面介绍的假设是一致的。\n过去十年的研究证实，多种情感变量与第二语言习得的成功有关（ Krashen 1981 综述）。大多数研究可以归为以下三类之一：\n *动机。*具有高度积极性的表演者通常在第二语言习得方面做得更好（通常但并非总是“综合” 13 ） *自信心。*具有自信和良好自我形象的表演者往往在第二语言习得方面做得更好。 *焦虑。*低焦虑似乎有利于第二语言习得，无论是个人焦虑还是课堂焦虑。  在一些地方，我假设这些态度因素与习得而不是学习直接相关，因为当使用交际型测试、利用后天系统而不是学习系统的测试以及当参加测试的学生在“习得丰富”的情况下使用了该语言，即可理解输入充足的情况。\n情感过滤假说通过假定习得者的情感过滤器的强度或水平各不相同，来捕捉情感变量与第二语言习得过程之间的关系。那些态度对于第二语言习得不是最佳的人不仅会倾向于寻求较少的输入，而且他们还会有很高或很强的情感过滤器——即使他们理解了信息，输入也不会到达大脑的部分负责语言习得的，或称语言习得装置。那些对第二语言习得态度更有利的人不仅会寻求和获得更多的输入，而且他们的过滤器也会较低或较弱。他们会对输入更加开放，并且输入会“更深”（ Stevick ，1976）。\n图 2.2 所示的情感过滤假说声称\n影响是在语言习得装置本身“之外”的。它仍然认为输入是第二语言习得的主要因果变量，情感变量的作用是阻碍或促进输入到语言习得设备的传递。\n过滤器假说解释了为什么获取者可以获得大量可理解的输入，但却停止（有时远远低于）母语者的水平（或“化石化”； Selinker ，1972）。当这种情况发生时，这是由于情感过滤器造成的。\n图 2.2。 “情感过滤器”的操作。\nDulay和 Burt (1977)提出的“情感过滤器”的作用是防止输入被用于语言习得。具有最佳态度（见正文）的收购者被假设具有“低”情感过滤器。鼓励低过滤的课堂是那些促进学生低焦虑的课堂，让学生“不处于防御状态”（ Stevick ，1976）。\n无论如何，这张图并没有削弱情感变量在教育学中的重要性。情感过滤假说意味着我们的教学目标不仅应该包括提供可理解的输入，还应该创造一种鼓励低过滤的环境。正如第五章所讨论的，有几种方法专注于此（例如CounselingLearning和Suggestopedia ）。\n输入假设和情感过滤器的概念以新的方式定义了语言教师。有效的语言老师是能够提供输入并帮助在低焦虑情况下理解的人。当然，许多老师多年来一直对自己的任务有这种感觉，至少在专家告诉他们之前是这样！ 14\nB. 第二语言习得的原因变量\r#\r\r1.因果变量\r#\r\r迄今为止，我们对第二语言习得理论的回顾可以总结如下：\n 习得比学习更重要。  为了获得，需要两个条件。\n  第一个是可理解的（或者更好的是，理解ed ）输入，包含i + 1 ，结构有点超出获取者的当前水平\n  第二个是低或弱的情感过滤器，允许输入“输入”。\n  这相当于说，可理解的输入和过滤的强度是第二语言习得的真正原因。其他变量可能与第二语言的成功有关，也就是说，我们可能会看到其他变量与第二语言成就衡量标准之间呈正相关，但在所有获得语言习得的情况下，分析将表明这种关系可以更好地解释为可理解的输入加上过滤级别。\n在本节中，我们将进行这样的分析，研究已被证明与第二语言习得成功相关的几个因素。我们会看到，它们不仅可以被重新分析，而且可理解的输入+过滤器解释有助于解决研究文献中一些明显的问题和矛盾。\n我们将从语言教学对第二语言习得的影响开始，然后研究与接触相关的变量（在使用该语言的国家居住的时间和报告的第二语言的使用情况），然后转向年龄。最后，我们将考虑舒曼的文化适应假说，看看它是否也可以用这种方式重新分析。\n2.语言教学：有帮助吗？\r#\r\r如果习得更为重要，而学习对第二语言表现的作用较小，并且如果可理解输入和过滤器是第二语言习得的基本因果变量，那么课堂应该只在有利于第二语言习得的环境中提供可理解输入的范围内提供帮助。低过滤器。正如前面提到的，这确实可能是它的主要功能。\n似乎可以合理地假设，课堂对于初学者尤其有价值，因为初学者无法轻易利用非正式环境进行输入。对于那些有能力、有其他可理解的输入来源、并且语言水平足够先进以利用它的人来说，它的价值将较小。\n那么问题就不再是“语言教学有帮助吗？”但\n《语言教学什么时候有用？ 》。一个可能的答案是：当语言教学是低过滤可理解输入的主要来源时，也就是说，对于初学者和没有机会在课堂外获得输入的外语学生来说，语言教学会有所帮助。当有丰富的输入来源时，它的帮助就会减弱。如果研究文献支持这些概括，那么它就证实了这样的概括：语言教学在提供可理解的输入时有助于第二语言习得，这是第二语言习得的真正原因。\n (a ) 当语言教学有帮助时  Brière （1978）调查了 920 名 4 岁到 12 岁的墨西哥本土儿童成功习得西班牙语作为第二语言的因素。西班牙语熟练程度的最佳预测因素之一是乡村学校（ promotoria ）的上课情况。就我们的假设而言，这是有道理的，因为promotoria是西班牙语可理解输入的主要来源，而在课堂外使用西班牙语的机会并不充足。 （另外两个重要的预测因素是父亲说西班牙语的能力和父母对西班牙语的需求。）\n一些成人研究报告称，课堂上接触第二语言的数量与熟练程度之间存在相当大的正相关关系。然而，在每种情况下，都可以认为班级是可理解输入的主要来源。 Krashen 、 Zelinski 、Jones 和Usprich （1978）对纽约皇后学院以英语为第二语言的扩展（晚上和周末）课程的学生进行了测试，并报告了正式学习年限与各种表现之间的密切相关性。 ESL 测试，即：\n测试与正式学习年限的相关性\n密歇根州（拉多）r = 0.50\n成分 r = 0.34\n完形填空 r = 0.47\nKrashen报告，1976）\n所有相关性均非常显着（p \u0026lt; 0.01 或更好）。\n尽管这些学生身在美国并且\n从技术上讲，在第二语言而不是外语环境中，在许多情况下，他们很可能在课堂之外没有丰富的输入源。首先，有些人来这个国家的时间不长，他们主要接触英语是在外语环境中。其次，由于这些人是转校生，而不是普通的走读大学生，因此他们中的许多人很可能在日常生活中很少使用英语，即使他们住在纽约。当我们注意到这些学生在美国的居住时间和熟练程度之间缺乏牢固的关系，并且当我们检查教学对确实拥有丰富输入来源的普通大学生的影响时，这一点在下面得到了证实教室外。 （类似的结果参见Krashen 、 Seliger和 Hartnett，1974 年以及Krashen和Seliger ，1976 年。）\nChihara和Oller (1978) 还报告了正式学习时间和第二语言熟练程度之间的显着相关性，发现完形填空测试的相关性为*r = 0.45，其他指标的结果也类似。*他们的主题是在日本学习英语作为外语的日本人，这是一种明显的外语情境，其中课堂是主要（如果不是唯一）可理解输入的来源。\n (b ) 当语言教学无济于事时  并非所有研究文献都得出这样的结论：语言教学有利于第二语言习得！ （我必须承认，令我惊讶的是，很少有研究调查如此关键的问题！本节中介绍的内容实际上是关于这个问题的全部文献。）对于似乎决定的研究，可以做出一些概括。然而，反对第二语言教学。在所有情况下，学生在课堂外都有丰富的可理解输入来源，并且有足够的能力掌握第二语言，能够利用它，即理解。\n有两项研究涉及儿童第二语言习得，并且都以英语为第二语言。 Fathman (1975) 发现接受 ESL 教学的儿童和未接受 ESL 教学的儿童的英语水平没有显着差异。然而，她研究中的所有孩子\n他们就读于华盛顿特区的英语授课公立学校，并且都已在美国呆了一到三年。可以假设他们从学校和操场获得了可理解的输入，而来自 ESL 课程的额外输入并没有产生什么影响（语法和练习也没有影响！）。\nHale 和Budar (1970) 研究了夏威夷初中的移民青少年。在他们的论文（题为“TESOL 课程是唯一的答案吗？”）中，他们指出科目形成了自然的划分。一组由讲不太通用语言的学生组成。这些学生没有享受正式 ESL 课程的“好处”，并且与讲自己语言的人隔离。第二组由有机会与其他说自己母语的学生交往的学生组成。这些学生确实参加了 ESL 课程。 Hale 和Budar报告说，第一组实际上在英语方面取得了更好的进步，这一发现似乎对 ESL 课程的价值提出了质疑。然而，第一组可能有更容易理解的输入，可能是因为必须与说英语的人以及其他使用英语作为通用语言的非母语人士进行更多的联系*。*这项研究也符合我们的概括，并证实问题不是增加或减少 ESL 或语言教学，而是增加或减少低过滤可理解输入。\n两项成人研究似乎也不利于课堂教学。 Upshur（1968）在密歇根大学的一次特别夏季课程中对三组学习法律的外国学生进行了研究，每组十人。所有学生都参加了以英语为教学语言的研讨会和课程。此外，他们还参加了正式的 ESL 课程，每组根据分班分数而选择不同的课程。 Upshur 对他们整个夏天英语进步的分析显示，他们接受的指导量并没有产生显着影响：ESL 较高的人在整个夏天并不一定比英语水平较低的人学到更多。 Mason (1971) 在夏威夷大学进行的一项研究中，简单地允许一小群中级15级国际学生将所需的 ESL 课程推迟一个学期。他们的 ESL 进步与实际参加该课程的学生进行了比较。梅森报告说两组之间没有显着差异。\n两项成人研究与假设一致。同时\n在这种情况下，学生在课堂之外拥有丰富的可理解的输入来源，并且在这两种情况下，他们都足够先进，能够利用它。\n我由此得出的结论是，语言教学肯定会有所帮助。它的主要功能是为那些无法在其他地方获得信息的人、那些受自身情况（即在课堂之外没有输入源的外语学生）或能力（那些无法理解母语的人）限制的人提供可理解的输入。外面的世界）。虽然它对于那些有其他输入来源的人来说不太有用，但有能力的课堂仍然可以为中级学生做出一些贡献。它可以为监控器的最佳使用提供有意识的学习（参见第四章），并提供工具来帮助收购者更充分地利用外部环境进行进一步的收购（第三章）。表 2.2 总结了本节讨论的研究。 16\n3.曝光变量\r#\r\r已经对第二语言习得的几个暴露变量进行了研究。一些研究表明接触量和熟练程度之间存在明确的关系，而另一些则没有。我们将再次看到，可理解输入加上低过滤器是真正的因果变量这一假设在暴露变量与第二语言习得相关和不相关时都能很好地预测。因此，暴露变量也是间接的，本身并不是因果关系。\n一些研究考察了第二语言环境中的*居住时间（LOR）。*对于那些关于儿童第二语言习得的研究，可以合理地认为，LOR 可能仅仅反映了儿童获得的可理解输入的数量。 （当然，儿童第二语言习得的情况并不总是如此；生活在一个国家的儿童常常无法获得可理解的输入，无论是在学校内还是校外。）因此，我们在这些研究中看到，LOR 与 LOR 之间存在明确的关系。和第二语言能力。\n上面讨论了Fathman (1975)。除了发现正式教学对 ESL 成绩没有影响之外， Fathman还报告说，LOR 确实可以预测她的样本儿童（6 至 14 岁，就读于华盛顿特区公立学校）的英语水平。\n表 2.2。正式教学和第二语言习得\nA 所有受试者都在美国呆过至少一年。\n38\n那些在美国呆了三年的人在 SLOPE 测试中的表现比那些在美国呆了两年的人要好，而这一组人反过来又优于那些只在美国呆了一年的人。\nWalberg、 Hase和 Rasher（1978）研究了在美国生活时间从 0 到 12 岁的讲日语的儿童，其中大多数报告的 LOR 为 3 到 4 年。使用自我报告和教师报告来评估孩子们的英语水平。沃尔伯格*等人。*确实发现了 LOR 与英语作为第二语言的熟练程度之间存在显着关系，但指出通过“收益递减”模型发现了更高的相关性：“对于样本中所有年龄段的儿童，习得最初都以很快的速度进行，但增益的量会随着时间的推移而减少”（第 436 页）。具体来说，“可以估计，在前两个月、接下来的五个月、接下来的一年、接下来的两年和接下来的八年中，获得了相等的……单位”（第436页）。\nEkstrand (1976) 在对瑞典移民儿童的研究中发现 LOR 与儿童第二语言能力之间没有关系。他的研究中 LOR 的中位数仅为 10.5 个月，除非孩子们在该国呆了一定的最短时间（一年？），否则可能不会看到 LOR 效应。 Fathman和 Walberg等人的研究满足了这一条件。研究表明，这可能是由于大约需要一年的时间来抵消年龄较大的儿童在早期习得率方面的优势（ Krashen 、Long 和Scarcella ，1979；另请参见下面关于年龄的讨论）。\n沃尔伯格*等人。*收益递减假说预测 LOR 也存在一个最大值，超过这个值我们就看不到 LOR 和第二语言习得之间的关系。\n其他一些研究的数据证实了这一点。 Seliger 、 Krashen和Ladefoged (1974)、 Oyama\n(1976, 1978) 和Patkowski (1980) 都报告说，LOR 与英语作为第二语言的熟练程度之间没有关系，对不同年龄到达美国的受试者群体（其中一些是儿童和青少年）进行了多种测量。有些是成年人。然而，在所有情况下，都涉及很长的 LOR，最短为五年，大多数更长。\n另外两项研究涉及 LOR 和儿童第二问题\n语言习得将在后续章节中介绍（Ramsey 和 Wright，1974 年；Minoura，1979 年）。\n在我看来，成人对 LOR 和第二语言能力之间关系的研究表明，当有证据表明 LOR 反映了高度互动并因此可理解的输入时，LOR 就“有价值”。然而，由于成人过滤水平的变异性，我们可能预计成人的相关性总体低于儿童（见下面年龄的讨论）。\n充分参与学术环境的国际大学生应该能够让我们知道 LOR 与第二语言熟练程度之间的显着相关性，前提是对足够大范围的 LOR 进行检查，因为学生应该能够获得大量可理解的输入，无论是在校内还是在校外。班级。有两项研究利用了国际学生。 Murakami (1980) 研究了南伊利诺伊大学的 30 名日语学生，发现 ESL 和 LOR 听写测试的成绩之间存在显着相关性 ( r = 0.68)，而完形填空测试则存在正相关但不显着的相关性 ( r = 0.29) ）。这些结果与Oller 、Perkins 和 Murakami (1980) 的结果几乎相同，他们对同样在 SIU 的 182 名学生进行了检查（其中不包括 Murakami 单独研究的 30 名学生） 。他们还报告了 LOR 和听写之间存在显着相关性 ( r = 0.46)，但完型填空没有显着相关性（相关性未报告）。\n我们对皇后学院延伸学生的研究也探讨了 LOR 和熟练程度（如上所述； Krashen 等人。 ，1978）。相关性有时很显着（由于样本量较大），但相关性相当小。\n_________________________________________________\n相关性测度\n_________________________________________________\n0.18 密歇根测试（ Lado ）\n0.22 成分\n0.24 完形填空\n0.014 斜率测试（ Krashen ，1976）\n_________________________________________________\n这些结果是可以预见的。我们预计，与全日制学生相比，扩展学生对英语的接触程度有所不同，而且通常很少。有些人可能在美国生活了很多年，却没有太多可理解的信息。 （也有类似的结果报道\n40\n在 Krashen 、 Seliger和 Hartnett，1974 年，以及Krashen和Seliger ，1976 年。）\n两项研究考察了外语学生的“海外时间”，但环境和结果有所不同。卡罗尔（Carroll，1967）报告说，能够在说该语言的国家度过大三的美国大学外语专业的学生在 FSI 听力理解其余部分中的表现比那些只在国外度过了一个暑假的学生更好。反过来，夏季旅行者的表现优于那些从未出过国的人。这些明确的结果可能反映了这样一个事实：这些学生很可能在国外寻求互动，从而寻求第二语言的可理解输入。\nChihara和Oller (1978)对日本以英语为外语的学生进行了研究。然而，在国外度过的时间和英语测试之间没有发现任何关系（完形填空的r = 0.04，其他测量方法产生类似的结果； Chihara和Oller报告说，国外时间和自我报告的英语水平之间存在更高的相关性； r口语 r = 0.24，听力理解*r = 0.23）。*与卡罗尔的美国外语专业研究相反，在该研究中，习得者每天都与目标语言接触，在这种情况下，国外时间不一定与可理解输入量有直接关系。表 2.3 总结了 LOR 研究。\n，已研究的第二个暴露变量是*第二语言的使用。*一些研究（但令人惊讶的是很少）询问那些自称使用第二语言更多的人是否实际上获得了更多。我们期望“使用”和获取之间存在重要关系，因为使用几乎总是需要可理解的输入。据我所知，在探索这个变量的三项研究中，有两项确实显示出与第二语言熟练程度之间的明确关系。 （未能在每种情况下找到明确的关系可能是由于自我报告的不可靠性；参见Oller和 Perkins，1978。）\n所有检查报告使用情况的研究都涉及成人受试者。 Johnson 和 Krug（1980）对南伊利诺伊大学的 72 名国际学生进行了研究，发现英语熟练程度（通过面试情况下必要场合的语法语素的准确性来衡量）与受试者的英语水平之间存在适度但显着的 0.34 相关性。\n表 2.3。居住时间 (LOR) 和第二语言习得 (SLA)\nCI = 可理解的输入。 b 平均 LOR = 3-4 年。 c LOR 和 SLA 之间没有关系，可能是因为LOR 相对较短。\n报告他们花在说和听英语上的闲暇时间。然而， Oller 、Perkins 和 Murakami (1980) 在检查类似样本时发现，“与英语使用者相处的时间”报告与第二语言熟练程度（通过听写和完型填空语法测试来衡量）之间没有关系。\n正如 Schumann (1978b) 所引用的，海德堡项目研究了预测德国外来工人（讲意大利语和西班牙语）的德语作为第二语言的熟练程度的因素。他们报告说，德语句法熟练程度和与德国人的“休闲接触”之间的相关性为 0.64，德语熟练程度和“工作接触”之间的相关性为 0.53。休闲和工作接触都可以合理地解释为表明可理解的输入。\n4.年龄\r#\r\r人们普遍认为，年龄本身是第二语言熟练程度的预测因素，年轻的习得者比年长的习得者更擅长第二语言习得。然而，可以说，年龄本身并不是第二语言使用率或达到程度的预测因素，而且在这里，一切都归结为可理解输入的数量和情感过滤的水平。\nKrashen 、Long 和Scarcella （1979）回顾了关于年龄和第二语言习得影响的现有实证研究，并得出结论，所有已发表的研究都与这三个概括一致：\n 成人在第二语言发展的早期阶段比儿童更快（时间和接触时间保持不变）。 在时间和接触时间保持不变的情况下，年龄较大的孩子比年龄较小的孩子学得更快。 在童年时期开始自然接触第二语言的习得者通常会比成年后开始自然接触第二语言的习得者获得更高的第二语言熟练程度。  因此，不仅仅是“越年轻越好”：从长远来看，儿童才优于成人。\n对这些观察到的差异的解释似乎最\n合理的涉及输入和情感过滤器的水平或强度。首先，让我们考虑较老的收单机构的费率优势（上面的概括（1）和（2））。 Scarcella和Higa （即将发表）发现，年轻的收购者实际上在区块构建任务中收到了“更简单”的输入，这一结果证实了 Wagner-Gough 和 Hatch (1975) 的观察结果，并且这似乎预示着年轻人的速度更快，而不是较老的收购者。斯卡塞拉和比嘉指出，年龄较大的获取者（青少年）能够更好地调节其投入的数量和质量。他们更擅长鼓励演讲，并让母语人士修改演讲以使其更容易理解。例如，他们可以寻求帮助、改变话题、更好地引导对话。换句话说，他们有更多的“对话能力”。因此，尽管针对年幼的孩子的输入更简单，但年龄较大的获取者实际上可能获得更全面的输入，这可能是他们更快的初始进步的关键因素。\n老收购者在收购率方面具有优势可能还有其他原因。成年人有较早产生语言的手段，即“战胜沉默期”，这意味着与自然语言习得无关，但可能有助于他们参与对话，从而获得可理解的输入。\n我在早期的论文中假设（例如，参见Krashen ，1981），只有在收购者经历了正式的操作之后，才有可能大量使用监视器，这是认知发展的一个阶段，通常发生在青春期左右（ Inhelder和 Piaget，1958）。正如本章前面所讨论的，有意识语法（监视器）的可用性允许成年人使用监视器修复的第一语言规则来产生形式上可接受的话语。虽然使用这种模式不需要可理解的输入，但它有助于获取者尽早交谈，参与对话，从而获得输入，至少其中一些是可理解的。\n对于年龄较大的获取者的速率优势的两种解释都归结为成人和年龄较大的儿童获得可理解输入的能力更强。因此，可理解输入再次被假设为因果变量，而不是年龄本身。\n孩子在最终成就上的优越性被假设是由于青春期左右情感过滤器的加强，\n也可能与正式操作相关的事件（ Krashen ， 1981）。正如其他地方所讨论的，这个假设有几个优点。首先，它声称儿童与成人的成就差异并不是由于“语言习得设备”（LAD）的任何变化，而是由于过滤器，从某种意义上来说，这是一个位于 LAD 外部的因素。其次，这与成年人仍然是“习得者”的说法是一致的，他们保留了儿童拥有的自然语言习得能力。它还允许一些成年人在第二语言方面达到极高水平的能力，甚至可能被视为母语；它预测，这样的“优秀语言学习者”首先将是优秀的习得者，能够以低情感过滤器获得大量可理解的输入。在许多情况下，过滤器只能阻止成人移动最后几英寸。 17 号\n5.文化适应\r#\r\r关于舒曼的文化适应假说也可以提出类似的论点。 Schumann (1978b) 假设文化适应是“第二语言习得的主要偶然变量”（第 29 页）。舒曼认为，“第二语言习得只是文化适应的一个方面，学习者对目标语言群的文化适应程度将决定他习得目标语言的程度”（第34页）。\n虽然文化适应假设似乎考虑了延长逗留情况下的第二语言习得数据，但它很容易用可理解的输入和低过滤级别来表达。适应可以被视为获得可理解的输入和降低过滤器的一种手段。此外，可理解输入假设解释了文化适应并未试图处理的情况下的第二语言习得。\n舒曼定义了两种类型的文化适应：\n“在第一类文化适应中，学习者与 TL 群体在社会上融为一体，因此，与 TL 使用者建立了充分的接触，使他能够获得 TL。此外，他在心理上对 TL 持开放态度，这样他就可以接受 TL 的输入。第二类文化适应具有第一类文化的所有特征，但在这种情况下，学习者将 TL 说话者视为参考\n他有意识或无意识地希望采用其生活方式和价值观的群体。两种类型的文化适应都足以导致 TL 的习得，但做出区分是为了强调与 TL 群体的社会和心理接触是文化适应的重要组成部分（因为它与 SLA 相关），即生活方式的采用和TL群体的价值观（传统上与文化适应概念相关的特征）对于成功获得TL来说并不是必需的”（第29页）。\n因此，第一类文化适应比第二类文化“弱”，因为它不涉及采用新的生活方式。由于舒曼假设第一类文化是成功习得第二语言所必需的一切，因此我们将讨论限制在第一类文化适应上。\n第一类文化适应很容易重述：社会整合及其产生的接触导致可理解的输入，而舒曼所指的开放心理状态相当于低过滤器。舒曼提出的支持文化适应假说的证据可以进行类似的解释。\n前面提到的海德堡项目研究了与外国工人成功掌握德语相关的变量。据报道，与说德语的人的休闲接触量与句法表现相关（ r = 0.64），工作接触量也与句法表现相关（ r = 0.55）。显然，任何一种互动形式都可以有效地促进第二语言习得。 （舒曼指出，“在最好的演讲者中，那些与德国人很少有休闲接触的人都有相当多的工作接触”（第 39 页）；因此，一些获得德语的外来工人在没有太多休闲接触的情况下就这样做了。）这证实了正是交互以及由此产生的可理解输入“导致”了第二语言习得，这一观点与可理解输入加低过滤观点以及文化适应假设一致。\n比提供服务（理发师、厨房帮工等）的工作人员在德语方面做得更好”此外，“在这样的环境中工作的学习者”噪音大或者活动受限都处于劣势”。\n这些结果还表明，那些能够以目标语言进行更多互动的人获得了更多的德语，所有这些都意味着更多的输入满足输入假设的要求。\n舒服_ _ _ _ _ _ _去克莱尔化阶段。 18作为证据，他描述了阿尔贝托（Alberto）的案例，阿尔贝托是一位居住在美国的讲西班牙语的成年人，他似乎与讲英语的人保持着相当大的心理和社会距离 19，并且他的讲话显示出明显的洋泾浜化迹象，即缺乏一些语法语素，疑问句中很少使用倒装，否定句中使用更原始的过渡形式（Schumann，1978a 提供了详细信息）。因此，阿尔贝托符合文化适应假说，因为他几乎没有表现出第二语言习得和文化适应（定义为社会和心理距离的程度）。艾伯特也非常同意这里提出的理论框架以及可理解输入和过滤水平是第二语言习得的主要决定因素的假设。可以说，阿尔贝托几乎没有接受过可理解的英语输入（根据舒曼，1978a，他晚上工作，没有电视机，没有参加 ESL 课程，并且很少努力去认识说英语的人），并且可能有很强的\n情感过滤器也是如此。 20\nStauble , 1978)中报道的史陶布尔的研究对象也被认为是文化适应假说的证据。这三个人都是说西班牙语的人，他们已经在美国生活了很多年，他们的否定能力的发展显然在不同程度上“僵化”了。史陶布尔试图将他们在第二语言习得方面的进展联系起来，这反映在他们用于否定和文化适应的过渡形式上，通过一份非正式问卷调查与英语使用者的社会和心理距离来衡量。 Xavier这个主语在英语否定方面表现出最少的进步，但也表现出最小的社交距离。然而，斯陶布尔的问卷显示，他的心理距离比其他人更大，这与文化适应假说是一致的。帕斯（Paz）是最先进的演讲者，拥有最大的社交距离，但是，随着\n与另一位受试者玛丽亚的心理距离相对较低。斯陶布尔对这些发现的解释是，心理距离可能是文化适应以及语言习得比社交距离更重要的决定因素。\n史陶布尔的数据也可以根据我们的理论框架进行分析。由于所有三个受试者都在美国呆了很多年，所以三个受试者都获得了相当多的可理解的输入（回想一下我们之前的概括，即 LOR 在很长一段时间内不能预测 SLA，这一假设与 Walberg 等人一致） *。*的收益递减假设），足以让“零过滤器”获取者达到母语者的水平。然后，我们可以简单地假设，正是帕斯的较低过滤器（通过较低的心理评分反映出来）使得该收购者取得了更多进展。 21\n最后，可以说可理解输入加上过滤器位置更加通用。文化适应假说预测第二语言的习得仅在移民和长期居留的情况下进行。 （事实上，要求它解释其他情况是不公平的，因为舒曼在他的著作中已经非常清楚地表明，文化适应假设旨在仅在这种情况下解释第二语言习得。）本文中提出的 SLA理论本章不仅可以解释长期居留和移民 SLA，还可以预测课堂上的成功，如第三章、第四章和第五章所述，并且据称适用于所有语言习得。\n文化适应假说有相当大的优点。文化适应可能是降低移民和长期游客的情感过滤和获取投入的最有效方法。图 2.3 试图捕捉第二语言习得与文化适应效果之间的相似之处。 “自由”第二语言习得和连续体的相似之处在于，文化适应可能是两者背后的“动力”。 22克里奥尔语使用者在融入目标文化时逐渐获得了该标准的更接近版本。这种文化适应使他们接触到标准的扬声器，并使他们对输入更加“开放”（降低过滤器）。此外，文化适应可能会“激发”第二语言习得。当个人收购者融入一种文化时，他通过更多的互动获得更多的输入，并且对此更加“开放”。区别\n图 2.3。文化适应、洋泾浜化-去克里奥尔化和第二语言习得。\n第二语言习得和洋泾浜化-去克里奥尔化连续体的相似之处在于，两者都是通过在低过滤情况（框内区域）中提供的可理解输入来进行的。\na Enculturation =“一个人同化自己的文化或其某些部分的过程”，即欧洲精英专业人士在自己的国家学习英语的情况，（有关讨论，请参见 Schumann (1978b)，第 177 页）。 47-48）。\n文化涵化是沿着去克里奥尔化连续体运动的必要动力，而它只是降低过滤器并获得可理解输入的一种方式。输入可以通过文化适应获得，并且有许多技术可以降低与文化适应无关的过滤器。\n笔记\r#\r\r  习得与学习的区别对我来说并不新鲜。其他几位学者发现提出类似的差异很有用。 Bialystock和Frohlich (1972) 区分了“内隐”和“外显”学习，Lawler 和Selinker (1971) 讨论了指导“自动”表现的机制和指导“谜题和问题解决表现”的机制（第 35 页）。此外， Corder (1967) 和Widdowson (1977) 也提出了类似的想法。\n  我们这些在学校学习过具有大量屈折形态的语言的人，使用注重语法准确性的方法，通常对这种现象有第一手的经验。考虑一下德语等语言的语法测试之前会发生什么；学生在参加考试的途中仔细复习屈折变化系统（der-das-die；den-das-die；以及采用不同格的介词列表）。当他们在课堂上坐下来参加测试时，他们会立即在页面一侧写下他们所记住的屈折系统的内容，以便当他们需要正确的标记时，他们可以找到它并使用它。考试结束时，在交卷之前，他们会擦掉笔记。页面一侧的形态很可能是后来获得的，并且对于大多数人来说在快速对话中无法使用。那么，旁边的注释就像一个有意识的监视器，在学生有时间、专注于形式并且可以访问规则的情况下提高输出的准确性；语法测试很好地满足了这些条件。因此，学生在此类测试中的语法准确性方面比在自由对话中表现得更好，较晚获得或尚未获得的可学习项目的排名会上升。\n  在无监视器的条件下，我们将看到更多数量的*过渡形式。*文献与这一假设是一致的，因为成人习得者所注意到的过渡形式都在似乎是非使用者或意识监控器使用不足的受试者中被发现，例如舒曼的阿尔贝托（Schumann，1978）；纳尔逊的麦吉尔大学看门人（纳尔逊，1980）以及哈纳尼亚和格雷德曼的 法特玛（ Hanania和Gradman ，1977）。这是可以预见的，因为假设过渡形式反映了所获得系统的操作。\n  更准确地说，依赖于后天能力的口语技能是随着时间的推移，作为可理解输入的结果而出现的。然而，至少在短期内，似乎至少有两种方法可以击败这个体系。我们可以使用记忆的语言，或例程和模式来进行创作（ Krashen和Scarcella ，1978），我们也可以使用第一语言表面结构加上有意识的语法（L1 加监控模式）来进行创作。正如我们稍后将看到的，这两种在没有获得能力的情况下执行的方法都有缺点和局限性。\n  中介语交谈，即第二语言习得者之间的言语，对于习得可能有用，也可能没有用。据我所知，这是一个重要的问题，专业文献中尚未直接讨论过。支持其对语言习得有用的论点如下：它满足输入假设，因为它意味着\n用于通信，并且可能包含某些收单方的输入i + 1 。另一方面，还有一个问题是，许多中介语谈话的不语法性是否比这些因素更重要。此外，许多中介语对话输入可能过于简单，对于更高级的习得者来说可能不包含i + *1 。*请参阅Krashen (1980, 1981)，了解一些可能阐明这个问题的经验证据的讨论。\n  在最近的一项研究中，M. Long（1980）报告说，外国人谈话话语中包含的标记为现在时的动词并不比母语者与母语者谈话中明显多。因此，用朗的话说，它更多地不是“此时此地”的“现在”。\n  看看孩子们在沉默期间记住的一些句子和短语，就可以证实它们在各种社交场合的实用性。然而，孩子们常常并不总是知道何时以及如何使用它们。一个特别生动的例子是那个孩子，他来美国大约两个月了，他跟我的一个熟人打招呼时说“我踢你屁股”。\n  有意识的监控并不总是能够完全修复受 L1 影响的错误。如果修复工作对于监视器来说太复杂而无法处理，表演者可能会简单地中止整个句子并尝试以更简单的方式表达想法。这可能是回避现象的原因，由Schachter (1974) 首先报告。沙赫特的研究表明，与波斯语和阿拉伯语使用者相比，汉语和日语使用者在英语作为第二语言时产生的关系从句较少，但更为准确。 Schachter将这一结果与 L1-L2 差异联系起来：中文和日语的关系从句构建在中心名词的左侧，而波斯语和阿拉伯语与英语一样，关系从句位于中心名词的右侧。\n沙克特的研究中，讲中文和日文的人有意识地知道正确的英语关系从句规则，但并未获得它。此外，在他们的英语发音中，他们利用了 L1 规则。因此，他们的监视器面临着围绕中心名词移动关系从句的任务，这是一项非常复杂的操作。在许多情况下，受试者只是认为这不值得付出努力！然而，当他们确实提出关系从句时，它们是准确的。在这些情况下，他们不厌其烦地应用了一条困难的规则。\n因此，在有意识地学习但未获得规则的情况下，以及当 L1 和 L2 规则完全不同时，监视器的修复需要困难的心理体操时，可以预测回避。\n如果表演者有意识地不完全了解规则，不足以创造必要的机会，但足以看到他所使用的 L1 规则与正确的目标语言规则之间不匹配，也会预测回避。由于他无法修复但知道存在错误，因此他可以行使选择权来避开该结构。克莱曼的回避数据（ Kleinman ，1977）符合这一描述。他的阿拉伯语受试者表现出避免英语中被动语态的证据，而他的西班牙语和葡萄牙语受试者则避免使用不定式补语和带有不定式补语的句子中的直接宾语代词（例如“我告诉她离开”）。克莱曼认为，在这两种情况下，对比分析都预示着困难。与沙赫特的不同，这些受试者在制作这些结构时并没有异常准确。在这种情况下，有可能是受试者对规则的了解不够完整，无法实现完美修复，所以导致了回避。\n在上述两种情况下，有意识的规则都起到过滤功能，告诉表演者他的 L1 规则与 L2 规则的不同之处。在一种情况下，修复是可能的但很困难，而在另一种情况下，意识规则不允许修复。\n9 基于Hyltenstam 的关于成人获得者获得否定的数据\n瑞典人 ( Hyltenstam , 1977)、 Hammarberg (1979) 认为收购者可以从\n不同的发展阶段取决于他们的第一语言。瑞典语否定习得的正常发展过程包括以下过渡阶段：\n(1a) 要求者将否定标记放在 VP 的所有其他部分之前、助动词和主要动词之前。\n(1b) 习得者将否定标记放在助动词之后、主要动词之前。\n(2) 语后否定。\n在随后的阶段中，收购方更接近瑞典的主句中动词后否定和从句中动词前否定的规则。\n根据Hammarberg 的说法，使用具有前动词否定功能的语言（塞尔维亚-克罗地亚语）的人通常在开始时即第 1a 阶段开始这个发展序列。\n然而，说英语的人似乎是从 1b 开始的。在Hyltenstam 的数据中，我们没有看到说英语的人会产生“ neg + aux”结构。由于 1b“是一种类似英语的解决方案” （第10 页），因此可以假设讲英语的人跳过了（1a）过渡阶段。\n这里有几种可能性。首先，哈马尔伯格的建议可能是正确的。如果是这样，如果获取者可以跳过过渡阶段t j ，当他们的语言具有与t j + 1相同的规则时*，*这意味着*t j*不是必需的 - 它不必充当*i* 。这并不*排除t j*有用的可能性。\n第二种可能性是t j存在，但没有引起观察者的注意。事实上，它可能以t j 的形式出现，但从未被说出。有意识地学习了目标语言规则，或者甚至已经学习了其中一部分规则的成人表演者，也许能够使用有意识的监视器来检测过渡错误，并在表演中避免它们或修复它们（参见脚注 7 关于避免的讨论） 。然而，当这些过渡形式与 L1 规则一致时，他们可能更倾向于接受这些过渡形式，即使它们是错误的（ Schachter 等人。 ，1976）。这可以解释为什么与 L1 规则不同的过渡形式在性能中很少见。但值得注意的是，海尔滕斯坦研究中的塞尔维亚-克罗地亚语使用者确实表现出了明显的1b阶段迹象，这与塞尔维亚-克罗地亚语的任何规则都不相符。\n因此，至少有两种可能性——说英语的人确实跳过了一个阶段，这意味着跳过的阶段可能对进一步的发展并不重要，或者该阶段“在那里”但未被发现，因为它的持续时间很短和/或者它尚未在表演者的输出中使用。与舒曼的发现一致（Schumann，1979），与 L1 规则一致的过渡阶段非常明显，无论是对于塞尔维亚-克罗地亚语使用者（阶段 1a）还是英语使用者（阶段 1b）。正如文中所建议的，在每种情况下，这个阶段可能都是两个阶段合二为一，首先是 L1 规则，然后是“真正的”过渡阶段，只有后者有助于真正的进展继续下去。\n10 一些学者指出，这种转移观点过于强烈，因为它预测了实际上不会发生的“转移”错误的发生。这个问题可以通过对转移设置几个约束来解决，或者在表演者可以用第一语言规则替换某些i + 1 之前必须满足的条件。\nZobl (1980a, b, c ) 指出，L1 规则本身必须是有效的。这说明了法语使用者在学习英语作为第二语言时不会犯这样的错误：\n约翰来了他？法国人之后：\n·维昂·伊尔？\n佐布尔认为，法国的统治在法语中已不再有效。 Zobl引用 Terry（1970）指出，它主要限于现在时态，这表明该规则正在变得无效。\nKellerman (1978) 提出了迁移的另一个条件：执行者必须认为迁移的规则可能是非语言特定的。凯勒曼最初的词汇迁移实验表明，外语学生不太愿意迁移他们认为不太“核心”的单词特征。例如，一个讲荷兰语的英语学生更有可能认为他可以在英语句子中转移荷兰语动词“ brechen ”（中断）：\n他把腿弄折了。比在：\n海浪拍打着岸边。\n语法中也存在类似的限制。凯勒曼报告说，荷兰的英语学生不愿意接受以下荷兰语的直译成英语：\n这本书读得很好。\n显然是因为read的不及物用法被认为是特定于语言的且不常见（另见Jordans和 Kellerman，1978）。\nWode (1978)的工作，并解释了 L1 影响的错误似乎并未发生在收购方发展的所有阶段的发现。 Wode指出，要发生语言间错误，L1 规则及其替代的 L2 规则必须满足“关键相似性度量”（第 116 页）。换句话说，如果要使用 L1 规则，则它之前必须有与它仅有最小差异的 L2 中的某个*i 。*沃德的例子，以德语为第二语言的儿童习得英语为例，很好地说明了这一点。沃德指出，以下错误：\n约翰不去上学\n其中使用类似德语的动词后否定。根据Wode 的说法，这些错误在刚开始的获取者中不会被发现，但只有在获取者达到“辅助否定”阶段并已经产生如下句子后才会出现：\n约翰不能去。\n然后，习得者将否定规则从后助动词过度概括为后动词，并使用第一语言规则。\n  使用 L1 还可以通过另一种方式间接帮助第二语言习得。即使不同语言的形式和含义不相同，同源词的存在也将有助于使输入易于理解。该因素将提高获取率，但不会改变顺序。\n  L1 规则无法促进真正进步的假设意味着，L1 规则的僵化使用是获取的“终点”。这是否意味着单个 L1 错误、某个i + 1的单个长时间替换会停止所有采集？仅当我们接受自然顺序假说的严格线性观点时，才意味着这一点，即收购者按照严格的顺序遵循的只有一个进展流。显然，这不是\n  案例。如果是这样，收购方每次只会向我们显示一个过渡错误！当然，个人会同时向我们展示多种错误类型。这表明多种发展趋势同时发生。这些流似乎是相关的；在一个流中的给定阶段的表演者通常会在另一流中处于可预测的阶段。舒曼（Schumann，1980）为此提供了很好的证据，指出他的主体在否定中处于no + v阶段，很少产生关系从句或没有关系代词的关系从句。对于 L1 习得，Shipley、Smith 和Gleitman (1969) 报告说，动词短语相关项目在习得顺序上相关性相当高，名词短语相关项目也相关，但各组之间的一致性并不高（另请参阅Krashen 、Madden 和Bailey，1975；Andersen，1978，类似的建议）。当然，一个流中的过渡形式或规则很可能可以通过充当i来帮助任何其他流中的过渡形式或规则。如果说在收购方的任何给定时间发生十个并行的开发流，则可能会出现这样的情况：给定的流将以这种方式与其他一些流（但不是全部）交互。\n  “整合”动机是指“像”目标语言使用者的愿望。在外语环境中（例如在加拿大英语国家学习法语），具有更多综合动机的学生通常更优秀，尤其是从长远来看（Gardner 和 Lambert，1972）。在第二语言习得有一定紧迫性和/或不太愿意“整合”的情况下，整合动机的存在可能与第二语言的成就无关。相反，“工具性”动机，即使用语言作为实际手段的愿望，可能会更好地预测成功（ Lukmani ，1972；Gardner 和 Lambert，1972； Oller 、Baca 和 Vigil，1977）。\n  Stevick （1980）提供了一个令人心酸的例子，他的一位学生讲述了他的一个故事：\n“四年前，我一直在寻找任何我能找到的工作。我碰巧找到了一份工作，给来自世界各地、不会说英语的六名女性教授 ESL。我以前从未听说过 ESL。薪水我家很穷，不知道自己是否想从事教师职业，所以我的做法很随意，压力也很小。我的方法通常是想一个话题，介绍一下，然后鼓励每个学生表达自己的想法。情怀。\n尽管我的态度很随意，但教学工作却非常愉快。我对任何面临语言障碍的人深表同情，因为我刚刚作为一个只会说一种语言的人独自环游世界回来。\n前两周的课程结束后，他们的英语都说得相当流利了。我记得一位来自哥伦比亚的女士告诉我，她以前没有说过英语，因为她害怕犯错误。上课一段时间后，她说英语，也犯错误，并不在意。我并不太重视女性取得的进步。我不知道人们需要多长时间才能学习一门语言。\n渐渐地，我变得非常注重职业，并有意识地决定努力成为一名一流的ESL老师。我对自己以随意的方式教授前六名女性感到内疚，我的教学演变成以教科书为主的传统独裁风格。多年来，如果学生花时间讲述个人轶事，我会感到沮丧。\n回顾这四年，我可以看到我的学生成绩逐渐下滑。直到最近，我一直认为我需要更加关注他们的错误，以加快他们的进步。我目前的教学方式绕过了学生；感情和基本需要，重在方法。我从未见过像前六位女士那样的成功。”（摘自Stevick ，1980 年，第 4-5 页）。\n54\n  这里的“中级”意味着了解足够的英语，能够至少承担部分学术负担，但无法“通过”大学英语作为第二语言的要求。大学中级学生的正常情况是，除了一门或多门学科课程外，还必须参加至少一门 ESL 课程。\n  这里引用的研究专门涉及教学对语法和词法习得的影响。直到最近，还很少有人研究教学对发音习得的影响。 Purcell 和Suter (1980) 报告说，英语作为第二语言的发音习得是由以下因素预测的： (1) 习得者的第一语言（阿拉伯语和波斯语使用者优于日语和泰语使用者）； (2) 与英语使用者的互动量； （三）语音能力测试成绩； (4) 说话者对其口音的关注程度。因素（2）似乎与可理解输入有关，而（3）和（4）可能与学习有关。 (1)反映了回归第一语言的后果。然而，ESL 正式课堂培训的数量与发音能力无关，即使课程专门针对发音教学。\n  一些研究似乎表明，到达年龄 (AOA) 可以预测儿童的第二语言能力，也就是说，例如，六岁到达的孩子将比十岁到达的孩子获得更高的熟练程度。虽然与成人群体相比， AOA确实可以预测儿童群体的最终成就，但更仔细的检查表明，AOA本身并不是单独考虑儿童的一个因素。在 AOA 似乎是一个因素的情况下，可以说 LOR 以及最终的 CI 才是真正的致病因素。 Cummins (1980) 对 Ramsey 和 Wright 对加拿大 1,200 名移民儿童的数据进行了这样的重新分析 (Ramsey and Wright, 1974)，并得出了这一结论，指出当 AOA 在 Ramsey 和 Wright 的数据中得到控制时，LOR 较长的儿童的表现在各种任务中表现更好。康明斯还发现，然而，当 LOR 受到控制时，AOA 较小的儿童不一定会更好——在许多情况下，情况恰恰相反。 Minoura（1979）也可以被重新解释。她研究了 44 名在美国生活一到八年的日本儿童。 LOR 预测成绩（ r = 0.79），AOA 也预测成绩（ r = -0.75 ）（使用句子模仿测试）。然而，样本中的所有儿童大约在同一时间抵达美国，因此 LOR 和 AOA 高度相关 ( r = -0.95)。因此，可以说 LOR 以及可理解的输入才是真正的致病因素。 （根据我的计算，当 LOR 的影响被消除时， AOA 和 SLA 之间的相关性降低到r = 0.005！）文中讨论的海德堡项目也报告了 AOA 和 SLA 之间的关系，这次是在成年人中一个小组。这似乎也是一个令人困惑的问题，因为年龄较大的受试者似乎花更少的时间说德语（ AOA 和报告的休闲时间使用德语之间的r = -0.32）。部分相关性消除了与德语使用者互动的影响，将 AOA 和 SLA 之间报告的相关性 (-0.57) 降低至r = -0.49。通过更可靠地衡量受试者实际获得的可理解输入的数量，这个数字可以（而且应该）变得更低。\n  洋泾浜化“当不同语言的使用者进行有限的接触并且辅助沟通工具的发展以促进他们之间的互动时就会发生”。 （舒曼，1978b，第 40 页）。二次杂交是洋泾浜化的一种形式，如果目标语言的“标准形式”可用，就会发生这种形式。只有当说话者与规范的说话者保持社会和心理距离时，这种现象才会持续存在。 （摘自Whinnom ，1971 年，Schumann 引用，1978b）。\n当说克里奥尔语（一种已成为某一群体母语的外来语）的使用者“与说克里奥尔语基本语言的群体获得不同程度的接触”时，去克里奥尔化就会发生（Schumann，第 41 页） 。这是向语言的“标准形式”迈进的过程。克里奥尔主义者指的是去克里奥尔化的几个阶段，从克里奥尔语本身到接近克里奥尔语的 basolect 、 mesolect 、 acrolect ，最后是标准形式。\n  心理距离是由动机、语言和文化冲击以及其他情感变量等因素决定的。社会距离是由社会因素造成的，如习得者和目的语使用者的社会群体的相对支配地位、群体的凝聚力、文化的相似性等。在舒曼看来，造成心理和社会距离的因素“学习者处于一种很大程度上与目标语言输入隔绝和/或在目标语言可用时不注意的情况”（Schumann，1977，第 266-267 页）。\n  同样有趣的是，Alberto 的语法语素难度顺序（一个横截面）与早期提出的“自然顺序”显着相关（ r = 0.73， p \u0026lt; 0.05； Krashen的分析，1977）。这些数据是从他的即兴演讲中收集的。\n  ·斯蒂维克向我指出的那样，这并不是对此结果的唯一解释。帕兹的第二语言习得能力出色可能是其他原因造成的，而较低的心理距离分数可能是其结果而不是原因。\n  或“远程原因”。参见 Schumann (1978b), p. 1 中的讨论。 48.\n  第三章\r#\r\r为输出提供输入\r#\r\r在本章中，我们迈出了从理论到实践的艰难一步。在我们这样做之前，让我提醒读者第一章的要点：我认为理论只是方法和材料的几个可能的决定因素之一。这些影响需要通过进一步的研究（尽管有一些影响确实得到了实证证实）以及教师和学生的经验来证实。 “理想”状态是理论和应用研究人员和实践者相互学习（和获取）的关系。\n我们将在本章中讨论应用的一个方面：如何鼓励潜意识习得。这是一个重要的问题，因为第二语言习得理论的主要含义是习得是核心。因此，我们的主要教学工作需要致力于鼓励语言习得。\n这一部分首先简要讨论输入假设对第二语言课堂的作用和潜力的一些影响，以及与非正式环境相比的局限性。接下来，我们讨论实际产出可以做出的贡献。正如第二章所解释的，假设我们是通过输入（我们读到和听到的）获得的，而不是通过输出（实际说和写的）获得的。然而，产出确实在鼓励收购方面发挥着间接作用。\n本章的主要部分涉及描述什么是“好的输入”，列出了为了鼓励习得而输入应具有的特征。在后续章节中，我们将讨论有意识的语言学习如何融入教学模式，在最后一章中，我们将研究一些常见的语言教学方法和非正式环境的某些方面，看看它们在多大程度上提供了本文讨论的输入。部分和第四章讨论的学习类型。\n本练习的目标是提供一个框架，帮助我们了解材料和方法对第二语言学生的实际作用。这有望有助于发现差距，并为我们提供补充和改进现有材料和技术的方法。\nA. 第二语言课堂的潜力\r#\r\r我们经常听说，你必须“生活在乡村”才能真正熟练掌握第二语言，而且非正式的现实世界环境总是优于课堂或正式环境。正如我们在第二章中看到的，有几项研究似乎支持这一主张。然而，其他研究表明，课堂毕竟确实有帮助。我试图通过假设真正有问题的是*可理解的输入来解决这个明显的冲突。*当课堂成为可理解输入的主要来源时，它是有益的。当获取者在课堂之外拥有丰富的输入来源，并且当他们足够熟练地利用它（即至少理解其中的一部分）时，课堂就不会做出重要的贡献。\n因此，非正式环境的真正优势在于它提供可理解的输入。然而，如果我们在第二语言教室中加入最适合习得的输入，那么我们实际上很可能比非正式环境做得更好，至少达到中级水平。正如我们在第二章中提到的，非正式环境并不总是愿意为年龄较大的第二语言学生提供可理解的输入。正如哈奇和她的同事所指出的，成人的输入在语法上更加复杂，包含更广泛的词汇，处理更复杂的主题，并且通常更难理解。这只是反映了这样一个事实：成人的世界比儿童的世界复杂，我们对成人理解力的期望要高得多。\n对于成人初学者来说，课堂比非正式环境要好得多。在第二语言课堂上，我们有潜力每天提供 40-50 分钟的可理解输入，这些输入将鼓励语言习得。非正式环境中真正的初学者，尤其是如果他或她不是\n擅长对话管理和意义协商的技能（参见本章后面的讨论；还有斯卡塞拉和比嘉，即将出版），可能需要几天甚至几周的时间才能从大量的语言中“挑选出”那么多可理解的输入听到。初学者根本无法理解周围的大部分语言。它将是噪音，无法用于采集。\n因此，第二语言课程的价值不仅在于语法教学，还在于更简单的“老师谈话”，即可理解的输入。只要课程的重点是为习得提供输入，它就可以是快速达到至少中级水平的有效场所。\nB. 课堂的局限性\r#\r\r尽管我对第二语言课堂充满热情，但外部世界在很多方面明显表现出色（或者对外部世界进行一些“修改”，这是我们稍后将讨论的一个令人着迷的替代方案），特别是对于中级第二语言学生来说。首先，很明显，外界可以提供更多的投入。生活在说该语言的国家可以享受全天的第二语言课程！然而，正如我们之前提到的，要使非正式环境发挥作用，输入语言必须易于理解。因此，随着收购方的进步和了解的越来越多，非正式环境将越来越有用。\n其次，正如许多学者指出的那样，无论我们做得多么“自然”，学生在第二语言课堂上所能接触到的话语范围都是相当有限的。尽管我们当然可以超越当前的限制，但课堂根本无法与外部世界的多样性相匹配。\n课堂可能永远无法、也不必完全克服其局限性。它的目标不是取代外部世界，而是让学生能够开始利用外部世界进行进一步的习得，开始理解外部世界所使用的语言。有两种方式：通过提供输入，使学生在语言习得方面取得进展，以便他们至少对某些人理解“真正的”语言\n程度，并通过使学生具备会话能力，即通过为学生提供管理会话的工具，尽管他们的第二语言能力并不完美。我们将在接下来的讨论中回到这两点。\nC. 输出的作用\r#\r\r在描述习得的最佳输入的特征之前需要处理的第二点是输出在语言习得中的作用，最常见的是语音的作用。 1 *\n输入假说提出了一个对某些人来说可能相当引人注目的主张——我们获得口语流利性不是通过练习说话，而是通过理解输入、通过听和读。事实上，从理论上讲，无需说话就可以获得语言。 Lenneberg (1962)在第一语言习得中就证明了这一点，他描述了一个患有先天性构音障碍（一种周围言语器官疾病）的男孩的案例，他永远无法说话。当伦纳伯格测试这个男孩时，他发现这个孩子能够完美地听懂英语口语。换句话说，他没有生产就获得了“能力”。这个孩子在八岁时接受了测试，无法直接判断他的输出不足是否减慢了他的语言习得速度。如果他能够说话，他很可能会更快地掌握语言，因为说话可以对语言习得产生间接贡献。\n输出对语言习得有贡献，但不是直接的：简单地说，你说得越多，就会有越多的人与你交谈！因此，语言习得者的实际讲话将影响人们直接向您输入的数量。\n它还会影响针对收单方的输入的质量对话伙伴经常尝试通过修改他们的言语（“外国人谈话”）来帮助您理解。他们通过看你是否理解所说的话以及听你说话来判断修改的程度。一般来说，犯很多错误、口音很差、犹豫不决的第二语言说话者，通常会比看起来有能力和流利的说话者收到更多经过修改的输入。\n参与对话可能比\n* 上标数字指的是章节末尾的注释。\n“窃听”是为了语言习得。在对话中，第二语言习得者对话题有一定程度的控制，可以向对方发出信号，表明存在理解问题等。换句话说，他可以管理和调节输入，使其更容易理解。窃听就没有这样的控制！但为了参与对话，每个伙伴都必须至少有一些谈话、一些输出。因此，言语的间接贡献。\n1. “对话”和语言习得\r#\r\r一些学者认为“参与对话”负责语言习得。根据上述讨论，我们可以看出，从某种意义上来说，这是正确的。然而，“对话”本身并不是第二语言习得的因果变量。这是获取输入的一种方式，而且是一种非常好的方式。然而，从理论上讲，无需参与对话即可获得知识。 2\n图 3.1 说明了产出对语言习得的间接但通常相当大的贡献。\n图 3.1。输出如何间接促进语言习得。\n可理解的输入负责语言习得的进展。\n由于获得了能力，输出是可能的。\n当表演者讲话时，他们鼓励投入（人们与他们交谈）。这是对话。\n2.产出和学习\r#\r\r学习方面发挥相当直接的作用，尽管即使在这里也没有必要。输出有助于学习，因为它提供了纠错域。当第二语言用户说话或书写时，他或她可能会犯错误。当这个错误被纠正时，据说可以帮助学习者改变他或她对规则的有意识的心理表征或改变规则应用的环境。 （参见第二章假设（1）的讨论。）\n因此，我们可以将“输出方法”与输入方法进行比较\n晋升。我们能否主要通过鼓励生产、很少或没有输入并纠正所有错误来教授语言？这样的技巧，除了让人抓狂之外，完全依赖于学生学习语法的能力。\n这并不是说纠错完全没有用，学习没有价值。学习可以发挥作用，纠错在某些情况下可能有用。我们稍后再回到“学以致用”的问题。\n到目前为止，读者已经看到了足够多的“稍后再讨论这个主题”的承诺，现在是时候转向本章的主要部分了，即第二语言习得的最佳输入的特征的描述，希望本文介绍的承诺已做出的将被保留。\nD. 获取最优输入的特征\r#\r\r我将在本节中尝试提出一组旨在潜意识语言习得的活动或材料应满足的要求。这组特征做出的（可测试的）预测是，完全符合这些特征的活动将鼓励以尽可能快的速度进行获取。不适合其中任何一个的活动可能会导致零获取或很少获取。 （后者，“非常少”，更有可能。“语言习得装置”可能非常强大，即使在成年人中，任何接触语言的结果都可能会发生一些最小的习得。）\n下面描述的特征没有“加权”。没有试图声称其中一个比另一个更重要，尽管可能应该做出这样的声明。我将把这个留给未来的改进。此外，这里并没有试图通过经验证据来“支持”这些结论。它们源自第二语言习得理论，即第二章中提出的假设。这些假设得到了经验证据的支持。换句话说，我们在这里只关注理论的含义。这并不意味着这些特征不能被视为预测并进一步测试；事实上，正如我在第一章中讨论的那样，它们应该得到应用语言学研究以及教师和学生直觉的证实。\n我们分别讨论每个特征，展示什么预测\n每个特征都与方法、材料和非正式输入的不同方面有关。在这些描述之后，我将尝试指出一些新的可能性，并强调一些被忽视的传统输入来源的重要性（第五章）。\n1.最佳输入是可理解的\r#\r\r这显然是最重要的输入特性。这相当于声称，当收购方不理解该消息时，就不会发生收购。换句话说，难以理解的输入或“噪音”不会有帮助。\n将可理解性作为基本且必要（但不是充分）的要求使得一些预测看起来似乎是正确的。它解释了为什么一个人实际上不可能仅仅通过听广播来获得第二语言或外语，除非获得者会说一种非常密切相关的语言。例如，只会说英语的人在广播中听到波兰语时，不会学到任何东西，因为输入的只是“噪音”。 3\n这一要求也解释了教育电视节目在教授外语方面的明显失败。输入根本无法理解。我自己的孩子们多年来忠实地观看了《Ville Allegre》等节目，并学到了和我一样多的东西：他们可以用西班牙语从一数到十，并认识一些单词，如casa和mesa 。可理解性要求预测，一般来说，电视作为语言教师会比广播更成功，但即使是电视在开始阶段也不够。 Ervin-Tripp (1973) 指出，聋哑父母的听力正常的孩子不会从电视或广播中习得语言，这一观察结果与要求 .4 一致。\n这一特征也解释了为什么孩子有时无法掌握家庭语言。我觉得我自己的例子就很典型。多年来，我的父母在家里都说意第绪语，偶尔互相说（诉说秘密），也经常对我的祖父母说。然而，除了一些短语和惯例之外，我和姐姐没能学会意第绪语。另一方面，在许多家庭中，孩子们在成长过程中确实讲着家庭语言和社区语言。似乎至关重要的是家庭语言是否\n是针对儿童的，换句话说，是否试图使语言易于理解。我们通过窃听听到的内容是无法理解的。它涉及的主题不易识别，而且往往超出我们的经验范围。意第绪语中针对我们的语言会被简化，并且与我们更相关，因此更容易理解。\n可理解性要求的另一个预测是“只是说话”或“自由对话”不是语言教学。换句话说，仅仅作为一种语言的母语者本身并不具备成为该语言教师的资格。自觉而广泛的语法知识也不能使一个人成为一名语言教师。相反，好老师的定义特征是能够使非母语人士能够理解输入的内容，无论他或她的目标语言能力水平如何。这自然引出了另一个话题，即教师如何使输入内容易于理解。\n(一)如何帮助理解\n如果我们正确地将可理解性作为习得最佳输入的关键要求，那么如何帮助理解的问题就是第二语言教学的一个非常核心的问题。事实上，理解性要求表明，*第二语言教师的主要职能是帮助输入内容变得可理解，*为成人做“外部世界”不能或不会做的事情。\n教师帮助理解的方式基本上有两种：语言的和非语言的。研究表明，演讲者在语言上做了很多事情，以使能力较差的演讲者更容易理解他们的演讲。 Hatch (1979) 总结了简化输入的语言方面，这似乎可以促进理解。这些特征包括：\n（1）速度更慢，清晰度更清晰，有助于收单机构更容易识别词的边界，并留出更多的处理时间； （2）多使用高频词汇，少使用俚语、习语；\n(3) 句法简化，句子较短。\n这些特征和其他特征对于不同类型的简单代码来说似乎或多或少是常见的，例如看护者语音、外国人语音和教师语音（另见Krashen ，1980），并且显然有助于使输入语言更易于理解。有大量的经验证据表明，这些代码比母语者-母语者的语言明显“简单”，并且，正如第二章中提到的，有证据表明习得者的语言水平与输入语言的复杂性之间存在某种相关性：更先进的收购方往往会获得更复杂的输入。\n这是否意味着教师在与学生交谈时应该有意识地尽量简化言语？他们是否应该考虑放慢速度、使用更常见的词汇、使用更短的句子、更少复杂的语法和更少的嵌入等等？有意识地参考这些“规则”有时可能会有所帮助，但当我们专注于试图让自己被理解时，我们似乎会自动做出这些调整。罗杰·布朗（Roger Brown）在评论第一语言习得中看护者言语的研究时得出了类似的结论。他向那些想知道如何用最短的时间“教”孩子语言的家长提出以下建议：\n相信你的孩子能理解的比他或她能说的更多，并且最重要的是寻求沟通……没有一套关于如何与孩子交谈的规则甚至可以接近你无意识地知道的事情。如果你专注于沟通，其他一切都会水到渠成。 （布朗，1977 年，第 26 页。）\n正如我在多处所论证的那样（ Krashen ，1980，1981），同样的情况也可能适用于语言老师。如果我们注重理解和沟通，我们就能满足最佳输入的句法要求。\n虽然我们让教师不再有意识地控制演讲语法的责任，但其他责任变得更加重要。一是确保输入确实是可以理解的。除了强调和强调其重要性之外，我对理解性检查的文献没有什么惊人的补充。理解检查的范围可以从简单地询问“你明白吗？”开始。有时，通过学生的言语和非言语反应来监控理解情况。\n65\n教师的另一个主要任务是提供鼓励理解的非语言手段。在我看来，为入门课程提供现实和图片形式的语言外支持并不是多余的，而是教师鼓励语言习得的工具中非常重要的一部分。早期第二语言教学中物体和图片的使用与看护者在鼓励第一语言习得时使用“此时此地”相对应，因为它们都有助于习得者理解包含“稍微超出”他们的结构的消息。\n好的老师还会利用学生的世界知识，通过讨论学生熟悉的话题来帮助理解。当然，讨论或阅读完全未知的主题会使信息更难理解。然而，让输入过于“熟悉”是有危险的。如果该消息完全为人所知，则该消息将不会引起兴趣，并且学生可能不会参加。我们希望学生专注于信息，并且必须有一些信息，一些学生真正想听到或读到的信息。这一要求也许是最难满足的一个，我们将在下面讨论特征 II 时对此进行更多讨论。 5\n正如刚才所指出的，理解是语言习得的必要条件，但还不是充分条件。很可能理解输入语言，但无法习得。这可以通过几种不同的方式发生：首先，输入很可能根本不包含i + 1 ，它不包含“有点超出”学生的结构。其次，在许多情况下，我们在理解时并不使用语法——我们通常可以通过词汇或词汇信息加上语言外信息的组合来获取消息。最后，“情感过滤器”可以是“向上”，这可以导致获取者理解输入，甚至是具有i + 1的输入，但不利用它来进一步获取。\n2.最佳输入是有趣的和/或相关的\r#\r\r最佳输入使获取者将注意力集中在消息上，而不是形式上。更进一步，最好的输入是如此有趣和相关，以至于收单方甚至可能“忘记”该消息是用外语编码的。\n创建满足这一特征的材料并提供输入似乎是一项简单而明显的任务，但我的观点是，实际上，这一要求并不容易满足，专业人士也没有认为它是显而易见的。向一群目标、兴趣和背景与老师不同、彼此不同的人介绍和讨论感兴趣的话题是非常困难*的。*我还声称，相关性和兴趣尚未被广泛视为输入的要求，因为许多材料未能满足这一要求。\n很容易想出一些输入的例子，这些例子虽然可以理解，但普遍被认为是无趣且无关紧要的。最明显的例子是模式练习和大多数对话类型的练习。实验证据表明，在模式练习的前几次重复之后，学生很少或根本不注意意义（Lee、McCune 和 Patton，1970），同样的结果很可能适用于死记硬背的对话。出于类似的原因，语法练习也无法作为习得的输入。当然，这些练习的目标不是“习得”，我们将有机会检查这些输入类型是否满足第二语言程序中的其他需求。然而，他们却惨淡地未能满足这一要求。\n不太明显的是“有意义的演习”未能成为采购的最佳输入。 “有意义的训练”与“机械训练”的区别在于，前者要求涉及真正的意义（ Paulston ，1972）。然而，由于有意义的练习旨在提供特定语法结构的练习，因此很难建立真正相关或有趣的信息的交换，例如：\n他早上几点起床？\n他们早上几点起床？\n充其量，语言班的成员对此类信息只有轻微的兴趣。我认为，对于教师来说，将真正有趣或相关的信息嵌入到日常有意义的练习中是一项不可能完成的任务。\n其他一些相当普遍但未达到真正相关性的输入类型是大多数外语学生在入门课程中完成的阅读作业。一般来说，这些选择与学生在业余时间用母语进行的阅读几乎没有相似之处。\n在读者觉得我过于挑剔和不公平之前，我必须说，在我看来，在高中或大学提供的标准美国外语课程中，兴趣相关性要求几乎不可能满足，尤其是当这样的情况时。课程被视为一项要求。在 ESL 情况下更容易满足，因为人们明显需要该语言。例如，在主要由移民组成的班级中，输入通常包含大量对学生“在外面”生存有用的信息。为外国学生开设的大学 ESL 课程通常包括学习技巧、学术英语、大学生活介绍，甚至有用的学术技能。 6 ESL 教师经常以正式或非正式的身份担任朋友和顾问，因此提供大量真正相关的意见。 7 8\n3.最佳输入未按语法顺序排列\r#\r\r输入中是否包含i + *1 。*输入假设的第（3）部分声称，当输入可理解时，当意义成功协商时，在大多数情况下， i + 1将自动出现。 9\n这一要求可以用较弱的形式来表述。 (3)可以改写如下：\n无需刻意包含i + 1 ，因为它会自然发生*。*可能需要使用强形式：最好不要尝试包含*i* + *1*反对故意尝试进行语法排序的论点已在第二章中简要给出，并将在此处进行扩展。\n 如果我们排序，并且每节课或一组课都集中在一个结构上，则假设班级中的每个人都有相同的i + 1 ，即每个人都处于第二语言的相同发展阶段。由于习得率存在个体差异（由于情感过滤器的强度和获得的可理解输入的数量），因此任何班级的所有学生都处于同一阶段的可能性极小。据假设，无序但自然的输入将包含丰富多样的结构——如果它是可理解的，那么每个人都会有i + 1  只要有足够的输入（我们回到下面的数量问题）。\n 当我们尝试呈现“微调”序列时，我们通常会呈现每个结构或规则一次。 （有“回顾”课程，也有回收的尝试，但回顾通常不会贯穿整个活动序列——其目标通常是“提醒”并为据称已经存在的规则提供一些额外的实践“内化”。 10 ) 第一次违反规则的学生会怎样？传统的回顾，旨在提醒，往往没有帮助。在传统的外语学习中，就像在美国所做的那样，学生甚至可能要等到明年，规则才会再次出台。无序的交流输入包含内置评论。如果我们今天错过了进行时，我们不必担心，它将再次成为输入的一部分\u0026hellip;\u0026hellip;一次又一次。因此，可理解的输入保证了我们自然的审查和回收，前提是如上所述，有足够的输入。  有些读者可能觉得我是在陷害、攻击稻草人。可以说，一些基于语法的课程尽管有步调一致的结构方向，但也确实提供了i + 1的输入。虽然可能存在“当日结构”，但并非每个话语都包含目标结构。例如，如果课程的重点是进行时态标记，则课堂输入和阅读中也会使用其他时态。\n情况似乎确实如此，但这种方法确实存在一个问题。如果只注重语法，沟通总是会受到影响，真正有趣的输入总是会减少。教师的思想和教材作者的思想都集中在“情境化”特定结构上，而不是交流思想上。\n正如我的同事史蒂文·斯特恩菲尔德向我指出的那样，这里提出的内容与“情境化”有着根本的不同。语境化涉及为语法规则或词汇项的呈现创造一个*现实的语境。*教师心目中的目标是学习或掌握规则或单词。这里提出的是，在教师和学生的心目中，目标就是想法、信息。\n这种反对意见可以概括如下：\n 基于语法的教学大纲的导向降低了可理解输入的质量并扭曲了交际焦点。教师将关注他们如何说话，阅读选择将旨在包括x个结构y的例子以及一定的词汇样本，确保语言枯燥乏味。 还有一个问题是语法序列试图猜测习得的顺序。几年前，我建议（ Krashen 等人。 ，1975）认为自然秩序假说的一个应用是遵循自然秩序构建“自然教学大纲”。我的立场改变了。正如法斯曼（Fathman，1979）所指出的，自然秩序假说的实际意义可能在于它告诉我们语言习得的基本过程。现在在我看来，我们不应该试图按照类似于第二章表 2 给出的顺序（或根据任何其他语法顺序）进行教学。  据称，可理解的输入将自动遵循自然顺序，只要我 将提供+1（以及许多其他结构） 。\n现在，我们总结了自然输入（健康食品的均衡饮食）相对于固定语法教学大纲（单一甚至多种维生素疗法）的优势。 11\n(a ) 违反语法大纲的案例\n__________________________________________________________________语法教学大纲（有意的交际输入（ i + 1包括尝试提供i + 1 ）自然地，给出足够的输入）\n_________________________________________________________________________\n 并非所有学生都在 1。将为所有学生提供i + 1  同一个阶段。对于许多学生来说，最终一天的学生结构可能不是i + 1 。\n 每个结构仅呈现 2 个。自然而广泛的审查。一次。 （有关“审查”的讨论，请参阅文本。） 3. 语法焦点可能会妨碍学生真实、自然交流的有意识焦点。而老师则是思想的交流。 假设我们知道 4 的顺序。不假设我们知道获取的顺序。收购。  _________________________________________________________________________\n4.最佳输入量必须充足\r#\r\r由于缺乏数据，很难说要达到特定的第二语言习得熟练程度需要多少可理解/低过滤输入。然而，我们现在已经足够了解，可以有信心地说，该行业严重低估了在第二语言习得中达到中等或“中等”熟练程度所需的可理解输入的数量。\n关于数量的理论论证源自前面的讨论。我假设如果满足两个条件，自然交际输入可以为所有学生提供i + 1 ；\n 输入没有受到人为限制（话语类型范围有限） 供应量充足。  显然，五分钟的演讲或单段阅读几乎没有机会包含给定学生的i + 1 。我建议，与其更仔细地针对学生的需求，也不是“过度个性化”教学，增加可理解输入的数量要容易得多。同样，如果有足够的，将提供i + 1 ，并且将一遍又一遍地提供。\n如上所述，我们没有足够的数据来自信地说明达到给定阶段需要多少输入。然而，文献确实为我们提供了足够的证据来陈述一些初步假设。下面，我们简要研究一下文献中关于达到最初的“准备说话”阶段和更高级水平的含义。\n(a ) 初始准备发言的数量要求\n需要多少投入才能结束“沉默期”？需要多少输入才能使第二语言习得者能够利用习得的能力产生话语？\n阿舍尔在“全面身体反应”教学方面的工作，这种方法要求学生服从第二语言给出的命令，通常带有“全面身体反应”（例如站起来），这让我们了解了初始说话需要多少输入准备状态。\n正如我们将在第五章中看到的，全面身体反应的主要优点可能是它提供集中的可理解输入的能力。 Asher 在几篇论文（第五章中进行了评论）中指出，TPR 学生通常在经过大约 10 个小时的“全面身体反应”输入后就可以开始用目标语言进行创作。 12\n非正式语言习得研究呈现出乍一看似乎不同的景象。儿童非正式第二语言习得中的“沉默期”可能会持续长达六个月！在此期间，除了例行公事和一些模式之外，孩子可能很少会使用第二语言。与亚瑟观察到的十个小时就足够相比，“自然”沉默期更长可能是因为孩子在自然环境中接受的大量输入可能是不可理解的。正如本章前面所述，“正式教学”的主要优点可能是它有可能在早期阶段提供可理解的输入，使学习者能够开始利用自然环境。儿童非正式第二语言习得过程中长时间的沉默期可能进一步证明非正式环境在早期阶段效率低下。 13\n(b ) 较高熟练程度的数量要求\n我们对达到更高水平的能力所需的低过滤/可理解输入的数量知之甚少。我们可以从美国外交学院的图表中得到一些想法，该图表估算了在不同外语中达到 FSI 2+ 等级所需的课程时间（2+ 的定义是“最低专业能力和工作专业能力之间的中间水平”） ”，Diller，1978，第 100 页）适用于以英语为母语的成人。根据外交学院的估计（转载于 Diller，1978 年），德语、法语和意大利语等欧洲语言需要大约 720 小时的课堂时间才能让“普通”学生达到 2+ 水平，而更多“异国”语言（如阿拉伯语、韩语和中文）需要 1950 小时的上课时间。 14\n然而，这些数字可能代表上限。它们基于“课堂时间”，如果采用传统方法，可能不需要最佳输入。换句话说，我们可以做得更好。\n“投入多少？”仍然是一个实证问题，一个可能可以通过研究得到充分回答的问题。更准确地说，我们想知道：“学生需要多少低过滤/可理解的输入才能获得足够的第二语言能力，以便他们能够利用非正式环境继续提高？”尽管我们目前缺乏数据，但我现在清楚的是，我们没有使用足够的可用教学时间来提供可理解的输入，并且如果我们更加注重输入。\n在结束本节之前，我应该指出，我的建议并不新鲜：与Newmark (1971) 一样，我建议广泛精读辩论中的“广泛”方面是正确的，即学生从阅读中获益更多理解意义和阅读大量材料，比纽马克所说的对困难段落进行“密码分析解码”，学生从参与对话中获得更多，很多对话，而不是集中的听力理解练习。\n现在我们讨论程序应该包含的另外两个功能，如果它们是为了鼓励语言习得的话。\nE. 鼓励收购的其他特征\r#\r\r1.学生不应处于防守状态\r#\r\r“防守”一词出自史蒂维克 著名的书《*记忆、意义和方法》。*对我来说，这意味着方法和材料不应该成为对学生能力或先前经验的测试，不应该仅仅揭示弱点，而应该帮助学生获得更多知识。\n更一般地说，我们谈论的是保持情感过滤器“低”，确保学生对输入持开放态度。可能的情况是，如果我们使用的程序对于输入假设是“正确的”，并且满足最优输入的所有其他特征，那么所产生的输入类型以及不断发展的课堂程序将满足这一要求：好并有助于保持过滤器较低。在本节中，我将尝试概述一些执行此操作的一般程序和实践。\n首先，我很抱歉在这个问题上喋喋不休，如果我们专注于提供可理解的输入，重点是消息而不是形式，这本身就会导致低过滤。如果所讨论的主题非常有趣，并且易于理解，那么通常与语言课相关的大部分“压力”就会“消失”，焦虑就会降低，并且习得就会产生。正如前面提到的，我认为一个理想的目标是学生在某种意义上“忘记”该消息实际上是用另一种语言编码的。\n其次，在学生“准备好”之前，我们将能够通过不坚持过早制作来保持过滤器的低水平。语言教师（和学生）将第二语言习得的进展与口语流利程度联系起来（“你会说法语吗？”），其逻辑结果是我们希望我们的学生从一开始就说话。我个人的观点是，在学生通过可理解的输入建立起足够的能力之前，强制早期产出可能是语言课上最令人焦虑的事情！虽然有些学生可能想尽快开口说话，但另一些学生可能会感到不太安全，直到他们积累了更多的能力。换句话说，静默期的长度是可变的（见注12）；亚瑟的十小时估计可能是“平均”，但这并不是一成不变的。一个安全的程序就是不要强迫学生说话，让学生决定何时开始说话。\n与演讲准备工作密切相关的是错误和纠错问题。第二语言习得研究清楚地告诉我们，错误是不可避免的，而且在早期阶段错误会很多。为了给读者一个估计，在我们在皇后学院进行的一项实验中，我们发现ESL学生在我们的扩展课程分班考试中所写的作文中大约每五个单词就有一个错误（ Krashen） 等人。 ，1978）。成绩好的学生平均每十个单词就有一个错误，最差的学生平均每两个单词就有一个错误！提高过滤器的一个可靠方法是尝试纠正错误，尤其是在开始阶段，尤其是在口语中！不幸的是，纠错是该行业对错误的典型反应，在我看来，这是一个严重的错误。有几个原因可以解释为什么这是一个错误。我们在这里关注可能是纠错中最严重的缺陷，即情感过滤器的影响。\n纠错具有立竿见影的效果，使学生处于防御状态。它鼓励学生采取一种策略，尽量避免错误，避免困难的结构，少关注意义，多关注形式。它可能会扰乱交流的整个交流焦点。在我经常用来说明输入假设如何应用于课堂教学的演示中，我深刻地体会到了这一点。在我借用史蒂文·斯特恩菲尔德的演示中，我告诉观众我将给他们上两门外语课（我通常使用德语）。对于第一节课，我只是开始说话，说“我现在要给你上德语课，但首先让我告诉你一些关于德语的事情，等等。”这完全是用德语完成的，对于那些从未接触过德语的观众来说几乎完全无法理解。第二课是这样的：\n这是我的鞋。 （指着鞋子）\n这是我的手。 （指手）\n这是我的头。 （指着头）\n这是一个头。 （在板上画图）\n这里有两只眼睛。 （画眼睛，举起两根手指）\n这里有一张嘴。 （画在嘴里）\n这是一支香烟。 （吸一口烟）\n你有烟给我吗？ （走到班员面前，做出抽烟的动作，指着自己。 ）\n第二课的要点是，虽然它可能不是很有趣，但由于简单的语言、额外的语言支持等，它还是很容易理解的。还有尝试通过画一个有趣的头来降低过滤器并要了一支烟。在本简短课程之后的讨论中，我解释了这些事情，并声称如果在一段时间内提供此类输入，语音就会自行出现。我们感兴趣的是观众的反应：这是一种如释重负的感觉。讲座结束后，有几个人走过来对我说：“当你说要给我们上语言课时，我非常紧张。我担心你会打电话给我，我就不得不说些什么。” ，我就会犯错误。”这告诉我，即使是专业的语言教师，语言课程也会引起恐惧，这也是原因之一\n75\n是我们对早说话的坚持和对错误的态度。为什么要让学生承受连我们自己都感到不愉快的程序呢？\n关于纠错的话题还有很多话要说；它有一些优点，也有一些缺点，我们稍后在讨论课堂上的有意识学习时会讨论这些。这里需要说的是，纠错并不是提高第二语言表现的基本机制；它不是提高第二语言表现的基本机制。相反，根据该理论，我们通过可理解的输入来获取信息。由于过度使用纠正会对习得产生负面影响，而且纠错对语言习得没有直接好处（见第二章，假设一的讨论），安全的做法就是在交际型活动中完全消除纠错，特雷尔自然疗法中使用的一种方法取得了巨大成功。无需纠错，进步就会到来，甚至可能来得更快，因为输入将“进入”，过滤器将降低，学生将摆脱防御。\n2.提供工具帮助学生获得更多投入\r#\r\r我们的责任超越了语言课堂。 15事实上，正如我之前所说，我们的任务是为学生提供他们需要的工具，让他们在没有我们的情况下继续进步。我们需要提供足够的输入，以便他们能够获得开始利用非正式环境（外部世界）所需的语言能力。换句话说，他们需要对第二语言有足够的了解，以便能够理解非课堂语言的重要部分。然而，到目前为止，培养他们的语言能力还不够。\n即使我们确实成功地将学生带到这个阶段，他们在使用外部语言时也会遇到问题。他们仍然无法理解他们听到的大部分输入，即使它被修改了。他们会发现自己无言以对，并且会在各个层面上犯错误。如果我们只专注于提供纯粹“语言”能力的输入，我们就会让学生避免与母语人士接触，因为担心他们听不懂对他们所说的内容，并且当他们从事英语学习时会遇到真正的问题。谈话，包括寻找词语时痛苦的沉默、由于误解而造成的困惑和尴尬等。\n我想这就是美国外语教学的典型情况。经过两年的指导，愿意与所学语言的使用者进行对话的学生是很少见的！这个问题的解决方案是为我们的学生提供克服这些困难所需的工具，使他们能够进行对话。通过为他们提供管理对话的方法，我们可以允许他们参与对话，尽管他们有不足之处，从而帮助他们继续改进。我们可以让他们做好准备，因为他们肯定无法找到正确的单词，他们不会理解所有内容，并且我们可以帮助确保他们继续获得可理解的输入。\n学生需要哪些工具来管理对话，从而继续在课堂外获得输入？换句话说，我们怎样才能帮助我们的学生在能力不完美的情况下进行交谈呢？\nScarcella （即将发表）指出，会话能力至少可以通过两种方式帮助获取者获得更易于理解的输入：帮助控制输入数量的设备，以及帮助控制质量的设备*。*前者有助于获取者获得更多输入，后者有助于使输入易于理解\n包含在数量类别下的会话能力的组成部分包括开始会话的方式（问候）和保持会话继续的方式（例如礼貌公式）。斯卡塞拉的实验对象米格尔，一位 21 岁的人，以英语为第二语言，尽管“语言”能力有限，但非常擅长这些会话能力工具，如以下简短摘录所示：\n米格尔：嗨！你好吗？\nNS ：好的。\n米格尔：有什么新鲜事吗？\nNS ：不多。今天进行了测试。\n米盖尔：哦，那太糟糕了。什么测试？\n米格尔通过使用一些精心挑选的例程，能够发起并维持对话。然而，像米格尔这样的第二语言表演者并不常见，因为研究表明，第二语言习得者在会话能力方面往往存在令人惊讶且严重的差距（见上图）。\n有多种技术可用于使输入更容易理解，并控制输入的质量。也许最明显的就是简单地向母语人士寻求帮助，“让母语人士解释对话的部分内容\u0026hellip;\u0026hellip;通过使用话语设备”（ Scarcella ，第 5 页）。这些设备的范围包括通过重复来关注单个问题单词\n它，如\nNS ：萨尔瓦多·达利还出版了一本烹饪书，因为他是一位伟大的烹饪专家。\n米格尔：（一脸困惑）：食谱？\nNS ：（拿起一本食谱）：来自马克西姆之类的地方的食谱。 （ Scarcella ，第 5 页）诸如“什么？”或“我不明白”之类的话语。\n斯卡塞拉还指出，通过使用“反向通道提示”可以提高输入质量，这些提示可以为母语人士提供证据，表明对话伙伴确实在关注对话。这些包括诸如“嗯”、“是的”等言语暗示，以及诸如在适当时间点头和目光注视行为等非言语暗示。\n最后，还有一些对话策略可以避免难以理解的输入，包括将主题更改为更容易理解或更熟悉的内容的方法。 Scarcella 的主题 Miguel 在这方面非常擅长，如下所示：\nNS ：……我也喜欢古典音乐——贝多芬、舒伯特——你知道那种东西。米盖尔：你弹钢琴吗？\n乔：是的。\n米格尔：我也是。\nF.“教学”会话能力\r#\r\r了解会话能力的组成部分是一回事。培养学生的会话能力是另一回事。这里需要问的问题是会话能力是习得的还是获得的。\n我认为，有很好的论据来反对所有会话能力都是可以学习的假设（另见Scarcella中的讨论，\n即将推出）。首先，它太复杂了。正如斯卡塞拉指出的：\n“大多数话语规则和策略都非常复杂，其特点是词汇、发音和韵律特征，非语言交流的特征，也许在较小程度上还有句法特征。此外，所有这些特征都可能根据社会的不同而变化。例如，有些问候语在某些情况下是合适的，但在其他情况下则不然。有时会大声喊叫，有时会说得很生硬。在任何特定情况下，合适的问候语取决于多种因素。这些因素包括：问候、一天中的时间、地点和互动、在场的其他人以及预期的互动类型（愉快、轻蔑等）”（第 10 页）。\n其次，即使学生设法学习了一些会话能力规则，他们也不会总是在需要时可用：在没有监视器的情况下。\n最有可能的是，必须获得会话能力的非普遍性方面。最初的假设是，它们的获取方式与语法相同，通过可理解的输入，并且本章提出的要求也需要满足才能获取会话能力，考虑到时间和话语的限制，这是一项非常困难的任务。教室。\n然而，可以直接教授一小部分会话管理工具，无论是作为规则还是作为记忆的例程，只要它们易于学习（请参阅后面的学习部分）。其中包括开始对话的例程、一些暂停过滤器以及寻求帮助的表达方式（ Scarcella ，第 11 页）。此外，近年来还推出了许多课堂内和课外活动来鼓励会话能力。\n我在本节中的主要观点是，会话能力为学生提供了管理会话所需的工具，因此是教学的重要组成部分，因为它有助于确保语言习得在课堂外以及教学计划结束后进行。我们的责任并不随着学期的结束而结束：事实上，在我看来，语言教学的目的是为学生提供他们所需要的东西，以便他们在没有我们的情况下也能取得进步。\n笔记\r#\r\r  正如第二章所详述的，语音产生可以来自三个不同来源中的任何一个。首先，我们可以利用我们获得的能力，如第二章中的生产监控模型所示。根据投入假设，这种生产需要一些时间来发展。另一种方法是通过记忆的模式和例程（参见Krashen和Scarcella ，1978）。第三种方法是广泛使用第一语言结构，如第二章所述。后两种言语产生方法是“无能力表演”的方法（借用R. Clark的术语）。第二语言表演者可以使用这些方法非常快速地“学会说话”，并且他们受到某些技巧的明确鼓励。然而，它们的模式受到严格限制。 （参见第二章中的讨论， Krashen和Scarcella ，1978 年，以及Krashen 1981 年。）\n  这就提出了一个有趣的问题：参与对话对于真正成功的第二语言习得是否*实际上是必要的。*可能是这样。除了作为获取可理解输入的有效手段之外，对话还提供了一些其他真正的优势，随着我们继续讨论本章，这些优势将变得更加清晰。斯卡塞拉（即将发表）指出，“沟通能力”的许多方面可能无法仅通过观察和输入来获得（见本章后面的讨论）。此外，斯卡塞拉指出，真正的对话需要“高度的个人参与”，即斯特维克（Stevick，1976 ）所说的“深度”和较低的情感过滤器。\n  在对科幻小说文献的评论中，哈奇（Hatch，1976）指出了几个例子，在这些例子中，作者假设可以通过收听无线电广播来获得人类语言。然而，即使是这些作者似乎也明白，通过聆听难以理解的输入来获取语言是只有某些拥有不同且明显优越的“语言获取设备”的外星人才拥有的能力。\n  有一些轶事表明人们通过电视学会了第二语言。例如，拉森-弗里曼（Larsen-Freeman，1979）引用了一个讲德语的人通过电视学习荷兰语的例子。这一点也不奇怪，因为荷兰语的输入对于使用这种密切相关的语言的人来说是可以理解的。请注意，我并不是说从电视中获取语言是*不可能的。*我只是说，可理解的输入对于习得是必要的，而电视为初学者提供的可理解的输入很少。中级学生可能会从电视甚至广播中受益匪浅。\n  教师帮助学生理解包含“超出”他们的结构的信息的另一种方法是强调词汇。 Evelyn Hatch 和我都提出了近年来增加词汇量的论点（Hatch，1978a； Krashen ，1981），我认为我们的论点是相似的。虽然词汇知识可能不足以理解所有信息，但毫无疑问，词汇量的增加有助于学习者更多地理解所听到或读到的内容（参见 Ulijn 和Kempen ， 1976 ； Macha ，1979，关于词汇的作用）在阅读理解中）。因此，更多的词汇应该意味着更多的对输入的理解和更多的语法习得。这种“新观点”与之前的立场有很大不同。语言教师被告知要限制新词汇的引入，以重点关注语法。现在我们说词汇学习实际上有助于语法的习得。\n然而，我并不清楚这一立场的实际影响。我们是否应该单独教授词汇以增加可理解的输入量？\n不幸的是，很少有研究直接探讨如何\n  词汇最好是习得的，最重要的是，保留的。教师之间存在一些共识，认为词汇应该在上下文中教授，而不是通过死记硬背列表（参见Celce -Murcia 和Rosenzweig ，1979，了解几种技巧），但甚至可能出现这样的情况：词汇不应该直接教授根本！情况可能是这样的：如果我们提供足够多的可理解的输入，词汇的习得实际上就会水到渠成。\n让我以非正式实验的形式重申这一建议：给定十分钟的学习时间（等公共汽车等），对于有兴趣长期保留词汇的语言习得者来说，哪种活动更有用？\n  使用闪存卡或一些等效技术死记硬背列表。\n  回顾一个仔细包含“新词”的故事（情境化）。\n  出于乐趣而阅读，仅尝试理解信息，仅当新单词似乎对含义至关重要或获取者对其含义感到好奇时才查找新单词。\n方法（3）依靠可理解的输入以足够的频率提供新词汇，并帮助习得者确定含义。在方法（3）中，没有有意识地关注词汇，只关注意义。预测（希望？）是真正重要的单词会自然地再次出现，并且它们的含义将通过上下文变得越来越明显。它并不排除学习者偶尔浏览一下字典或偶尔听听老师的定义可能会有所帮助的可能性。\n  例如，南加州大学的美国语言学院为外国学生提供打字课程以及英语作为第二语言的课程。\n  大学层面可能还有更多机会为第二语言习得者提供最佳输入，我们将在第五章中讨论。\n  对于一些监视器用户和语言学家来说，奇怪的是，明确的语法信息是有趣且相关的，因为这些获取者相信这将有助于他们的表现。在这种情况下，媒介就是消息。如果关于目标语言结构的课程用目标语言教授，并且学生是“分析”类型，那么这门课程就会成功。 （参见Krashen 1980 和第五章中的评论。）\n  也有例外，即可理解输入的示例，其中i + 1可能不存在。这些包括话语有限的情况，以及在语言的许多工具性使用中，熟悉一些例程和模式可能足以成功沟通（例如与加油站服务员、职员等打交道）。\n  在我的解释中，“内化”似乎意味着获得首先学到的规则，其中学习被认为导致了随后的习得。根据第二章提出的第二语言习得理论，这种情况不会发生。我已经在几篇技术论文中讨论过这一点（ Krashen ，1977），并将在后面的部分中回顾这一点。\n  我想到的另一个类比是“霰弹枪”与单发子弹。前者击中目标的机会更大。\n  Varvel (1979) 描述了正式教学中持续相当长的沉默期（Silent Way 方法），这表明成人在语言课上的沉默期持续时间可能存在相当大的个体差异：\n“有一位来自台湾的女士，几周后在课堂上仍然保持沉默。她从不说话，被叫到时也只会小声回答，只说要求的内容。然而，很明显，她是其中的一员。她是班上最专心的学生，对正在做的事情有清晰的了解，并且似乎很享受这堂课。她对学习内容和学习方式也抱有积极的态度。在任何时候，她都不会被迫积极参与。\n“然后在学校第九周的一天，她坐在前排，整整一个小时都积极参与。从那时起，她继续以更有限的方式积极参与，有时帮助别人，也被别人帮助。 ..”（第 491 页）\n虽然该学生的沉默可能还有其他原因，但这个例子表明应该尊重沉默期，并且有些学生比其他学生更晚做好演讲准备。\n  在给予相同数量的可理解输入的情况下，由于其他原因，孩子在第二语言习得中的沉默期可能会比成人的平均沉默期更长。我在这里建议的是，如果孩子听到的更多输入是可以理解的，那么孩子第二语言习得的沉默期就不会那么长。\n  请注意，如果我们假设自然环境中的获取者每天接收大约两个小时的可理解输入，则 720 小时相当于“国外”大约一年。这假设课堂时间=可理解的输入，这对于 FSI 图所基于的传统方法来说可能并不正确。然而，这符合非正式接受的想法，即出国一年将导致欧洲语言相当流利。\n  本节中包含的材料只是我从与 Steven Sternfeld 、Robin Scarcella和Batyia的讨论中学到的内容的总结。 埃尔鲍姆。我不仅感谢他们提供的信息和智力刺激，还感谢他们的耐心。\n  第四章\r#\r\r语法的作用，或将语法放在其位置上\n现在应该很明显，本书所采取的立场是，第二语言教学应侧重于鼓励习得，提供刺激所有正常人都拥有的潜意识语言习得潜力的输入。然而，这并不意味着没有意识学习的空间。有意识的学习确实有作用，但它不再是剧中的主角。本节的目的是讨论这个角色是什么，我们如何将有意识的学习或“语法”放在第二语言程序中的适当位置。\nA. 学习不会成为习得\r#\r\r第二章试图阐明学习在第二语言表现的理论模型中做什么和不做什么。根据绩效监控模型，有意识的学习充当编辑者、监控者的角色，“纠正”所获得系统的输出中的错误，或者更确切地说，纠正执行者认为是错误的内容。这可能发生在说出或写下句子之前，也可能发生在之后。因此，对规则的有意识的了解并不影响我们的流利程度，也不会引发言语。\n还需要说明的非常重要的一点是，学习不会“转化为”习得。我们首先学习新规则，最终通过实践掌握它的想法很普遍，并且对某些人来说似乎是直观上显而易见的。当我还是TESL的学生时，我第一次看到这个习得过程的模型，当时看起来非常明智。我想，这正是我自己学习语言的方式。我认为卡罗尔从当时新的“认知代码”学派的角度对语言学习如何进行的描述是深刻的见解：\n“一旦学生对语言结构有了适当程度的认知控制，在有意义的情境中使用该语言的能力就会自动发展”（Carroll，1966，第 102 页） 。\n正如上一节注释10中提到的，这种将学习到的规则转化为习得规则的过程称为“内化”。\n尽管我们感觉内化确实发生了，但该理论预测它不会发生，除非是以一种微不足道的方式。根据第二章中提出的理论，语言习得以一种方式发生，即当习得者理解包含习得者“应该”习得的结构（其“ i + 1 ”处的结构）的输入时。\n不需要事先有意识地了解规则。 （有意识的规则可能“帮助”语言习得的微不足道的意义是，如果表演者使用规则作为监视器，并始终将其应用到自己的输出中。由于我们了解自己的输出，因此表演者的可理解输入的一部分将包括具有这种结构的话语。当表演者“准备好”掌握这个已经学过的规则的那一天到来时，他自己的表演将有资格作为“ i + 1 ”处的可理解输入。换句话说，自我刺激！）\n除了该理论没有直接预测学习需要先于习得这一事实之外，从观察第二语言表演者的角度来看，维持这一立场有很好的理由。\n首先，我们经常看到习得是在从未发生过学习的情况下发生的。有许多表演者可以用第二语言使用复杂的结构，但他们没有意识到并且从未了解过规则。第二语言习得文献中有几个案例说明了这一现象，我认为这是很常见的。\n伊芙琳·哈奇 (Evelyn Hatch) 的学生辛迪·斯塔福德 (Cindy Stafford) 和金杰·科维特 (Ginger Covitt)采访了一位这样的第二语言表演者“V”，他是加州大学洛杉矶分校 (UCLA) 的 ESL 学生，他在英语方面表现出了相当的能力，但他承认，他能有意识地控制很少（如果有的话）的规则。 。这\n以下交流来自对“V”的采访，采访发生在其中一位作者正在审查他的作文错误时（来自 Stafford 和Covitt ，1978；也被Krashen引用，1978）：\n面试官：（当你写作文时）……你会想到语法规则吗？你认为“我应该在这里使用现在时还是现在进行时会更好\u0026hellip;\u0026hellip; ”\nV ：“我不参考书本之类的东西，你知道。我只是参考这个，呃，我的判断，以及……感觉我写的是对还是错。因为我真的不知道知道\u0026hellip;什么、在哪里、到底如何\u0026hellip;语法规则是如何运作的。\n在随后的采访中，一位调查员问道：\n面试官：你认为语法规则有用吗？\n五：有用吗？是的。当你想写作时，它们非常有用。\n采访者：但是你写的时候不会用到它们。\nV ：是的，我知道。我不使用它们\u0026hellip;我不知道如何使用它们。\n意识语法“使用不足”的另一个很好的例子是洪（Hung），由科恩和罗宾斯（Cohen and Robbins，1976）研究，他指出：\n“我从来没有教过任何语法。我想我只是从来没有把规则学得那么好。我知道每次我说的都是相当正确的，所以我从不考虑语法。我只是写下我觉得喜欢的东西。每次我写一些东西我只是停止思考。我不知道该应用哪一条（规则）”（第 59 页）。\n不仅洪先生所说的内容具有启发性，而且他说话的*方式也具有启发性。*这段话肯定有错误，但也有对相当复杂的语法的控制和真正的自我表达能力。 （当然，并非所有使用不足的人都会成功；例如，参见舒曼在《舒曼》（1978a）中对阿尔贝托的描述。）如果必须首先考虑有意识的规则，那么我们如何解释 V、Hung 等案例？ （有关其他案例历史，请参见Krashen ，1978 年；Stafford 和Covitt ，1978 年； Kounin和Krashen 1978 年。）除非所有此类案例都可以被证明是使用第一语言或例程和模式的实例，否则此类语言的存在案例表明，先前的有意识学习对于语言习得来说并不是必要的。\n其次，我们还看到学习似乎永远不会成为习得。许多优秀的 ESL 表演者虽然掌握了大量英语，但也知道许多有意识的规则。然而，他们在语言上相当简单的规则上犯了他们认为是“粗心”的错误。当表演者已经学会了规则但尚未掌握它时，就会发生这种情况。这种情况通常发生在晚习得的项目上，例如英语中规则动词的第三人称单数结尾（“他每天都去上班。”）。特别有趣的是，这些表演者可能已经知道这个规则，并且已经练习了很多年。即使经过数千次正确的重复，并且对规则有透彻的理解，这些表演者仍然在某些项目上犯“粗心”的错误。在这些情况下，阻止学习“成为”获取的是这样一个事实：学习到的规则仍然超出了获取者的i + 1 。\n一个很好地说明这种情况的案例是“P”（ Krashen和Pon ，1975）。 P 是一位优秀的 Monitor 用户（最佳用户，如第二章所述），是一位拥有语言学荣誉学士学位的成年人，他的书面英语看起来几乎像母语一样。然而，在随意的谈话中，P 偶尔会在她已经有意识地了解了二十年的“简单”规则上犯下“粗心”的错误。因此，即使是学识渊博、实践良好的规则也可能无法转化为习得。\n对 P 问题的一个解释是，她在随意交谈中错过的项目是那些后来获得的项目，而她的获得虽然非常先进，但在句法和词法方面还没有完成最后几步。不过，她已经很好地掌握了这些规则，并且能够在她可以监控的情况下提供这些规则。\n怀疑习得是否需要先前学习的第三个原因是，即使是最好的学习者也只能掌握语言规则的一小部分。正如前面所讨论的（假设 3，第二章），即使是专业语言学家也承认，即使是研究得最好的语言，他们的自觉知识也是不完美的，每期语言理论技术期刊都会报道新规则的发现。经过多年的分析，语言学家经常成功地描述许多第二语言表演者已经获得的东西。\n我对这些现象的解释是，虽然学习通常可能先于习得，但事实并非如此，事实上甚至可能没有直接帮助。相反，我们沿着相当可预测的自然顺序获得，并且\n当我们收到可理解的输入时就会发生这种情况。有时，我们在掌握某些规则之前就先学习了它们，这给我们一种错觉，认为学习实际上导致了习得。\n专业的语言教师对语言结构着迷，并从掌握和使用有意识的规则中获得乐趣，甚至常常没有意识到无需事先有意识的学习就可以习得。这也是我未经检验的假设。前面描述的过程一度对我来说似乎是正确和合理的：一般意义上的语言学习是当一个人首先有意识地掌握一个规则，然后一次又一次地练习，直到“自动”为止时发生的。 （这实际上是演绎学习；还有另一种可能性，即“归纳”学习；见下面的讨论。）语言学的伟大贡献是发现和描述规则，“应用语言学家”可以将这些规则传递给语言教师，语言教师反过来，可以向学生讲述它们。\n当我在皇后学院的“高级”成人教育班教授英语作为第二语言时，一次经历帮助我改变了想法。作为团队的一员，我的责任是“结构”。由于我当时是皇后区英语语言学院的院长，我觉得有必要提供一系列令人印象深刻的课程，以证明我对这门学科的控制。因此，我选择专注于动词系统，并对所有时态进行了完整的调查。\n本课程的第一课集中于现在进行时。我的目标是告诉我的学生，现在进行时具有三个含义：（1）当前的、正在进行的、即将完成的动作，（2）过去一段时间之前开始的动作，可能会也可能不会此刻正在进行，并将在将来的某个时候结束，以及（3）将来时。我使用熟悉的时间流程图来说明这一点\n并通过显示诸如这样的句子\n约翰正在拉小提琴。\n存在三种歧义：\n 另一个房间传来的噪音是什么？ （约翰正在拉小提琴。） 约翰今年夏天在做什么？ （他正在为当地交响乐团拉小提琴。） 约翰明天要做什么？ （他在才艺表演中拉小提琴。）  我的高级 ESL 学生中没有一个有意识地知道这条规则。事实上，很少有人这样做。我在给 ESL 教师的讲座中多次介绍过这个例子，我经常问那些有意识地“知道”渐进式是三种模棱两可规则的人举手。很少有人这样做，而那些确实知道的人通常刚刚在课堂上讲完。\n非常有趣的是，相当多的学生有过“尤里卡”的经历。当我解释完规则后，他们会说：“是的……这三个方面是模棱两可的……怎么样？”，或者会做出类似的评论。我的解释是，这些学生已经下意识地习得了进行时及其三种含义，并且正在确认他们习得的正确性。换句话说，我成功地在已经存在习得的地方提供了学习。\n关于这一现象，我想指出几点。首先，我的学生显然在没有学过这条规则的情况下就已经掌握了它。 （可以说，他们曾经知道但已经忘记了，并且这种临时学习对于获得规则至关重要，或者至少是有用的。这是可能的，但不太可能，因为通常不会教授所有这三个功能。另一种不太可能的可能性是从第一语言迁移。那个学期我学生的大多数第一语言都没有进行时。）其次，那些学到了他们已经学到的东西的人认为他们从课堂上学到了很多东西。这种知识对于很多人（包括我）来说都是非常满意的。然而，它不是语言教学，尽管它有一定的价值。 （我们将在本章后面回到这个主题，我将其称为“语言欣赏”。）\n学习有时先于实时获取：一条规则\n88\n最终获得的可能曾经只是习得的。正如我在其他地方所坚持的那样（ Krashen ，1977），这种情况确实会发生，但绝不证明预先学习对于习得的必要性。仅仅因为事件A先于事件B并不能证明A引起了B。我们看到很多不学习而习得的例子，学习（即使是经过良好实践的非常好的学习）并没有成为习得，并且在学习之前获得了规则知识。\nB. 语法的地位\r#\r\r“语法”这个术语我将用作有意识学习的同义词，它在第二语言教学计划中具有两种可能的作用。首先，它可以作为监视器使用，并带来一些好处。我们将在接下来的部分中更详细地讨论这种用法。语法的第二个用途是作为主题，或用于“语言欣赏”（有时称为“语言学”），我们稍后将讨论这个角色。这两个角色都不是必不可少的，也不是教学计划的核心部分，但两者都有其功能。\n将讨论与Monitor使用语法教学相关的几个问题：何时可以使用规则，应该或可以学习哪些规则，Monitor使用的效果是什么，以及我们对Monitor效率的期望。\n1. 显示器使用语法：使用显示器时\n正如第二章（假设 3）所述，我们的教学目标之一是鼓励最佳的显示器使用。我们希望我们的学生在不妨碍交流的情况下利用有意识的规则来提高语法准确性。换句话说，最佳监控用户知道何时使用有意识的规则。\n正如前面提到的，成功使用 Monitor 的必要条件之一就是*时间。*记住并应用有意识的规则需要真正的处理时间。我们不应该期望大多数学生在口头对话中成功地将有意识的规则应用到他们的输出中——显然，时间很少。那些试图在谈话中思考和利用有意识的规则的人会面临两个风险。首先，轮到他们发言时，他们往往会花太多时间，而且说话犹豫不决，通常很难听清。其他过度使用的\n89\n监控者为了避免这种情况，请在对话伙伴说话时计划他们的下一句话。他们的输出可能是准确的，但他们常常没有足够注意对方所说的话！\n有些人比其他人更善于使用监控，并且实际上可能能够成功地“在线”使用相当数量的有意识规则。大多数人在随意交谈时试图进行监听时，都会冒着严重危及谈话成功的风险。 （在自由对话中监控的成功使用还取决于其他因素——一是规则的难度或复杂性，我们将在下面讨论。第二是主题：我发现更容易关注我所讲内容的形式。当我谈论我非常熟悉并且之前讨论过的事情时用第二语言说，例如第二语言习得。）\n监听器的使用场合是表演者有时间的时候，比如在写作和准备好的演讲中。如前所述，仅仅给表演者时间并不能确保他们会使用有意识的监视器；因此，第二章的条件2：表演者必须思考正确性或注重形式。如果有时间，并且专注于形式，有些人可以利用有意识的语法来发挥巨大的优势。对于第二语言表演者已经掌握了几乎所有第二语言语法但仍然存在一些差距的情况，有意识语法的使用可以填补许多未习得的项目。至少在书面上，这偶尔会产生类似本地语言的准确性。\n我经常将上面讨论的“P”称为能够做到这一点的表演者。尽管她有口音，而且在自由言论中偶尔会出现词法错误，但 P 的写作（在课堂上完成）几乎完美无缺。我认识许多专业人士也以这种方式使用有意识的语法，语言学同事的说话略有缺陷，但他们的写作几乎没有错误。一些非常有趣的案例涉及语法专家、形式语言学专家和学者，他们当然有意识地知道他们在自由对话中违反的许多规则。我个人认识的两个案例，实际上都发表了严重依赖英语的语法理论论文，证明他们对英语句法的掌握很深透。然而，在不受监督的自由言论中，第三人称单数逐渐消失，所有格标记偶尔会被使用\n以英文发表了他们目前的所有工作，并且没有咨询任何人来检查他们的论文是否有错误，这也没有必要。\n我自己的经历或许对读者有所帮助。在撰写本文时，我的法语作为第二语言的水平为“中级”。 （根据我的定义，这意味着，只要他做出一些补偿，我就可以与只会说法语的人轻松地交谈。我不能很好地窃听，并且在广播和电影方面遇到一些麻烦。另外，我的输出是相当流畅，但并非没有错误。）这个级别的许多人，包括我自己，都会在易于描述的规则上犯错误，但显然是相当晚才获得的。我注意到的这样一个规则是简单收缩规则： 德+乐=杜。\n我和我在南加州大学学习中级法语的同学偶尔会在自由对话中错过这一点。然而，当我写法语时，我每次都写对了。 （当我有意识地使用法语语法知识时，我的准确性或难度顺序会发生变化。正确应用de + le = du规则会将此项从难度顺序中的较低位置提升到接近顶部的位置。这正是我试图做到的在第一章假设 3 中，在讨论受监控条件下自然顺序的扭曲时说。我与普通受试者的不同之处在于，我不需要离散点语法测试来将我的注意力集中在形式上。这本书的大多数读者可能是也像这样。）\n这种行为是自然而正常的。在我看来，可悲的是，老师们期望在不受监控的情况下完美地表演这些简单但晚习得的项目。即使是相当有能力的第二语言使用者，例如 P，也会在对话中“错过”此类项目。然而，我们经常看到初学者，即几乎不能用目标语言交谈的学生，在所谓的“交际”练习中努力达成正确的主谓一致，担心老师的严厉纠正。造成这种折磨的原因首先是语言简单性和习得顺序之间的混淆——并不是说语言越简单的东西习得越早。一些非常“简单”的规则可能是最后才获得的。二、原因也是没有辨别\n91\n在获取和学习之间，未能意识到对某个项目的有意识的知识与表演者在不受监控的言语中使用它的能力没有关系。这种能力来自习得，而习得来自可理解的输入，而不是纠错。这种处理的结果充其量是过度使用监视器。最坏的情况是，它会导致建立如此强大的情感过滤器，以至于无法获取。\n2.可以监控什么\n监视器使用的条件三（第二章，假设 3）与讨论这一点相关。为了让表演者成功监控，他们必须知道他们所应用的规则。为了扩展第二章中提出的观点，让我尝试说明这一要求如何极大地限制了监视器的使用。让这个圆圈代表一种明确描述的语言（例如英语）的所有规则：\n现在让我们考虑一下最优秀的语言学家“知道”或已经成功描述的所有英语规则。杰斯佩森（曾经）知道多少规则，诺姆·乔姆斯基等学者描述了多少英语？虽然乔姆斯基经常说他和他的同事只描述了英语的“片段”，但我们将给予正式语言学家以无罪推论，并将他们的成就表示为第一个圆圈的适当子集\n现在让我们考虑一下“应用语言学家”所知道的规则，这里的应用语言学家是指以研究语言为任务的学者。\n工作，并将其呈现给语言老师，也许也呈现给语言学生。让下图中额外的小圆圈代表应用语言学家所知道的内容。这必须是正式语言学家所知道的内容的适当子集，因为理论家的全职工作是寻找新规则，而应用语言学家则花费大量时间来解释这项工作：\n下一个圆圈代表最有知识的语言老师所知道的所有规则。这将是上图中引入的圆的真子集。毕竟，除了研究应用语言学工作之外，教师还有很多事情要做：\n还有一个圆圈代表最好的老师实际教授的语法规则的数量。反过来，这是他们所知道的圈子集的适当子集，因为教师无疑只会向学生展示他们知识的一部分：\n接下来我们再画一个圆圈，它代表最优秀的学生实际成功学习的所有规则。我们甚至应该放入\n一圈是学生可以作为精神包袱牢记在心并在表演中实际使用的所有规则：\n到现在为止，我们已经缩小到一个非常小的圈子，甚至让每个小组都讨论了无罪推论。即使我们最好的学生也能够作为有意识的监视器来学习和利用语言语法的一小部分。\n我们可以为某些人画一个更小的圆圈。正如我们在第二章对个体差异的讨论中看到的，一些表演者要么不太愿意，要么不太能够利用有意识的规则。与专业语言学家或语言教师相反的极端（例如，参见Yorio ，1978），我们有使用不足的监视器，即通过“感觉”进行所有自我纠正的表演者，并且无法控制有意识的语法。也许更极端的是不称职的监视器用户，表演者认为他知道规则，但他们（或至少其中许多规则）是错误的。这可能仅仅是一个命名问题（例如斯塔福德和科维特的主题一直提到“死对象”而不是直接对象），但可能更严重。我们应该意识到，即使对于我们看来非常简单的规则，以及对于执行者可能已经获得并可以在不受监控的情况下使用的规则，也可能存在混淆。这些案例生动地说明了习得和学习之间的对比。\n(a ) 监控器使用不当\nSeliger (1979) 报告了一个简单但有趣的实验，该实验证实了不称职的 Monitor 用户的存在。任务是命名：向受试者展示图片，并要求用英语说出图片中的物体是什么（例如，这是一支笔）。 Seliger记录了受试者是否应用了“a/ an ”规则，以及当后面的名词以元音开头时他们是否正确使用了an 。完成任务后，然后询问受试者是否注意到有时\n被要求，有时被要求。如果他们说他们确实注意到了，他们就会被要求给出这种区别的理由。 （在所有情况下， a或an都是必需的。没有零同质异形体是合适的情况。） Seliger 的受试者包括 29 名单语英语儿童，年龄 3 至 10.8 岁，11 名“双语”儿童，年龄 4 至 10 岁，以及纽约皇后学院的 15 名成人 ESL 学生。\n在我的解释中，这项研究将习得和学习进行了对比。 1 * 受试者在图片命名任务中的重点是提供词汇。他们没有事先被告知语法准确性是一个问题，当然也没有提前提出或讨论规则。那么，该任务鼓励使用所获得的系统；它相对“不受监控”。这种解释与第二章中回顾的证据一致，第二章得出的结论是，对于大多数受试者，需要使用诸如离散点语法测试之类的设备故意将受试者集中在形式上，以便广泛使用有意识的语法。当然，由于这项任务是一项“实验”，因此某些受试者很可能比平时更加小心。关于a和 的直接问题的结果 然而，研究表明，受试者在识别图片时不太可能获得很多有意识的知识。\n塞利格报告说，图片识别表现与受试者能否说出规则之间“没有关系”！许多受试者并没有“按照他们所说的去做”。如果他们对任务后问题的回答代表有意识的学习，那么这个结果证实了某些人的学习是多么有限。让我们检查一下结果。\n正如我们从第二章中关于年龄的讨论中所期望的那样，没有一个双语儿童对 a/an 产生了正确的有意识的规则。这与预形式运算儿童对语法的元意识不太广泛的说法是一致的。据推测，监视器广泛使用的潜力将在青春期左右随着正式手术而出现。\n在成年人中，四人中的三人“知道”该规则（可以在测试后用语言表达）“在图片测试中没有提供任何实例来表明他们理解如何使用该规则”（第 364 页）。换句话说，这些受试者已经学会了a/an 的区别，但没有学会\n* 上标数字指的是章节末尾的注释。\n获得了它。此外，他们无法将这种有意识的知识应用到图片识别任务中，因为成功使用监视器的必要条件没有得到满足（条件三 = 知道规则，已满足，但一 = 时间，二 = 专注于形式） ， 不是）。这种情况与上面描述的de + le = du情况完全相同。我预测，这三个学生在不同条件下都会在该项目上表现良好，即如果进行离散点语法测试，将他们的重点放在形式上，包含以下项目：\n最后，这里最有趣的是，两个孩子和一个成人在图片识别测试中表现良好，但产生了错误的规则（例如“你使用an来表示活的东西”）。儿童受试者让人想起文献中的其他案例，可能只是反映了儿童无法诱导或学习正确的意识规则（例如，在一项研究中，一名儿童在学习法语作为第二语言时，认为女性性别是“一切又好又漂亮”（ Kenyeres和Kenyeres ，引自 Hatch，1978b）。在测试中表现完美的成年人可能会被归类为“不称职”的监视器用户。这个受试者已经获得了 a/an 规则，但还没有学习正确。事实上，他没有将有意识的规则应用于表现，这对他有利！我预测这样的受试者在专注于形式的测试中表现会更差。（我不想暗示某些学习者会得到所有规则都是错误的，而其他规则则都是正确的。显然，许多学习者已经学会了一些规则，有些是正确的，有些规则是错误的。）\n值得注意的是，这个学生没能学到大多数老师认为非常简单的规则，但他显然已经学会了。这说明了习得和学习的独立性，以及对于某些表演者来说学习是多么有限。 2\n(b )规则的可学习性\n我们发现使用意识监控器的能力存在相当大的个体差异。范围来自专业语言学家，他们\n也许能够有意识地学习许多非常复杂的规则，甚至在使用第二语言执行时应用它们，以监视用户不足和不称职的错误规则用户。尽管存在这种差异，我们仍然可以开始描述大多数成年人可以学习的规则类型，认识到即使对于超级监视器用户（参见例如Yorio ，1978），这组规则也将只是一个规则总数的一小部分。语言。\n专业文献支持我认为最合理的假设：“可学习性”与语言的简单性有关，无论是形式上的还是功能上的。我们可以学习并牢记在心以用作监控者的规则并不是最早获得的规则，也不是那些对于沟通很重要的规则。相反，它们是简单的规则，最容易描述和记住的规则。\n我已经在其他出版物中指出过（首先在Krashen中讨论过） 等人。 ，1978），简单性至少可以用两种方式定义，并且这两种定义在这里都是相关的。首先，规则在形式上可以很简单。相对简单规则的例子包括我们的老朋友，英语中规则动词的第三人称单数结尾，以及de + le = du 。这些规则仅需要添加绑定语素（变形）或收缩操作。对于有意识的监控者来说，简单的删除也可能并不困难。\n对于监视器来说，其他语法操作似乎更困难。在对话过程中，甚至在撰写内容时，“在头脑中”很难将成分从句子的一个部分移动到另一个部分。可能的情况是，大多数人要么习得了需要大量运动和秩序变化的规则，要么从未很好地执行过。这适用于英语中wh疑问句的构成等规则，可能涉及以下单独的操作： (1) 将wh词放在前面； (2) 进行主助倒装，除非有助动词； (3) 进行“支援”； (4) 正确地表达“do”的时态和数词。这是很多需要记住的事情，特别是当学习者脑子里有其他事情时，包括记住语法的其他部分（他可能还监视发音和语法）并尝试与母语人士保持对话。\n（读者可能会说，通过一点练习和良好的教学，他同时做所有这些事情没有问题\n其他人也可以。如果您的想法是这样，那么您可能是 Monitor 的超级用户。这种兴趣和能力可能是最初让你进入语言科学的原因，并让你对像这本书这样的书感兴趣。你并不典型。其他读者可能会争辩说，使问题形成等规则自动化的方法是一次学习和练习一个组件，直到它们变得自动化。这正是本节开头所回顾的“学习成为习得”的论点。我认为，在这种方法似乎有效的情况下，会发生以下两种情况之一：（1）习得是单独发生的，并且赶上了学生的学习水平；此外，收购之前的学习在帮助收购发展方面没有发挥任何直接作用。 (2) 成功的学习者是超级监视器用户并且非常不典型。）\n简单性还需要根据含义来定义。如果规则的含义微妙且难以解释，那么形式上简单的规则就不容易学习。第三人称单数词尾和de + le = du的形式和含义都很简单。另一方面，虽然英语中定冠词和不定冠词的形式非常简单，但a和的许多用法 它们非常复杂。我们当然不能指望 ESL 学习者理解、记住并有意识地应用霍金斯 (Hawkins, 1978) 中包含的描述，这是一本专门介绍英文文章的完整卷。我们还可以找到标点符号的例子。诸如“每个句子的第一个字母大写”之类的规则在形式上和功能上都很简单。然而，逗号和分号的一些用法很难描述，可能需要掌握才能有效使用。\n(c )一些证据\n据我所知，还没有研究直接探讨哪些结构可以被不同的学生群体学习，哪些不能。然而，有几篇论文提供的证据与“只有“简单”规则才能被大多数人学会”的说法非常一致。\n研究和案例提供了一种证据，告诉我们第二语言学生会犯什么样的“粗心”错误，这些错误涉及学生正式学习过的规则以及\n专注于形式，他们就可以自我纠正。用我们的话来说，这些是已经学会但尚未习得的规则。在所有情况下，它们似乎都是后来获得的、形式上简单的规则，主要涉及束缚形态。 P，我们之前讨论过的最佳监控用户，在一些简单的项目上犯了很多错误，例如规则动词的第三人称单数结尾，在计数和质量名词中使用“much”和“many”，以及不规则过去时等错误。 Cohen 和 Robbins (1976) 中描述的两个最佳监视器用户也在此类项目上犯了他们自己所谓的“粗心”错误。\nUe -Lin 和 Eva 是加州大学洛杉矶分校 (UCLA) 的汉语 ESL 学生，她们在使用晚期获得的第三人称单数 /s/ 时遇到了问题。 Ue -Lin 解释说，这一遗漏“是一个粗心的错误，因为她报告知道规则”（Cohen 和 Robbins，1976 年，第 55 页）。同样，“当向伊娃展示包含s删除的句子时，她实际上能够识别错误并立即提供 s 。当被要求解释为什么她省略s时，她回答说：‘可能只是粗心。’”（第 58 页） 。伊娃对省略常规过去式 / ed / 也有类似的解释：当她在该表格上遇到一个错误时，也被认为是后天获得的（假设 3，第二章），她能够提供正确的形式。修正完一句话后。 ”伊娃说，她按照自己说话的方式写下了这句话：“一方面，有时我会用我说话的方式写一些东西。我们说一句话或多或少都是漫不经心的。但如果我花点时间，有时复习一下，那就容易多了……'。”（第 58 页）。我的解释是，在给定的时间里，伊娃能够获得她有意识的英语知识，或监视器，对于这种后来获得的简单规则可以有效的程序。\n伊娃接触过相当多的英语，被科恩和罗宾斯认为是进步的。她在澳大利亚生活了两年半，从五年级开始学习英语（在科恩和罗宾斯学习时，她是大学三年级学生）。她还认为自己是一个“优秀的语言学习者”。然而，就连伊娃也对语言老师看来很简单的规则感到困惑。在解释她的错误时（“我已经和西尔维娅谈过了”），她将错误归因于对规则的不清楚。她说：\n“是的，我学到了。这只是我不擅长的事情。我认为主要是\n问题是我只是学习规则——一两年，在我上学的整个时间里……对我来说，这永远不够训练”（Cohen 和 Robbins，第 58 页）。这证实了之前提出的观点，并表明虽然监控器的使用可能仅限于非后天获得的简单规则，但即使是“好的”学习者也可能只能使用和回忆我们提供的规则的一小部分，即使是那些对我们来说似乎很透明的规则。3\nDuskova (1969)的一项研究也证实，对于许多人来说，意识监控的句法领域由相对简单但较晚获得的项目组成。 Duskova调查了 50 名学习英语 (EFL) 的捷克大学学生的书写错误。杜斯科娃指出，“……许多反复出现的错误……并没有反映出真正的知识缺陷，因为大多数学习者都知道相关规则并且可以轻松应用它，但机械操作尚未自动运行”（第 16 页） 。达斯科娃指出，这种概括尤其适用于形态错误。例子包括名词复数的省略（我必须承认，在语法语素中相对较早获得）。杜斯科娃指出，对于复数“……当向学习者指出时，学习者就会意识到这一点，并且能够自己纠正”（第 20 页）。另一个例子是主谓一致的错误。同样，对于这个错误，“当学习者的注意力被吸引到他犯了错误的事实时，他通常能够纠正它”（第20页）。此类的其他错误类型包括过去分词和不定式的混淆、不规则动词的错误以及形容词-名词数量上的一致（例如，thisworkers）。用我们的话来说，这些错误反映了未能有意识地应用规则，未能有效监控。杜斯科娃告诉我们，学生们“当然可以为这些错误类型制定规则”。\n第二章中描述的语素研究也有助于这一点。你可能还记得第二章，“自然秩序”的变化或干扰被解释为对意识语法的入侵。值得注意的是订单是如何受到影响的。在 Larsen-Freeman 的研究中（Larsen-Freeman，1975），在受监控和不受监控的条件下呈现了语素顺序（分别是离散点铅笔和纸语法测试以及双语语法测量）。在无监视器条件下， LarsenFreeman获得了以下命令（表 4.1），这是相当“自然”的。\n表4.1\n在无监视器条件下获得的语素顺序（Larsen-Freeman，1975）\n系词_\n冠词助动词短复数规则过去第三人称单数不规则过去长复数所有格\n将此与监控条件中发现的不自然顺序进行比较（表 4.2）。 （我们以写作任务为例；拉森-弗里曼的“阅读”任务给出了类似的结果。）\n表4.2\n在监控条件下获得的语素顺序（Larsen-Freeman，1975；写作）\n系动词辅助 第三人称单数ing规则过去时 不规则过去冠词 长复数 短复数 所有格\n这些顺序的不同很大程度上是由于两个语素（常规过去时和第三人称单数标记）的相对排名的增加，两者都是较晚获得的，或者在无监控自然顺序中的相对准确度顺序较低。这种解释与这样的说法是一致的：当表演者专注于形式时，他们可以提高未习得但已学过的语法部分的准确性。 4\n更多的证据来自我们的作曲研究（ Krashen 、Butler、Birnbaum 和 Robertson，1978）。我们要求南加州大学的 ESL 学生在两种条件下写作文——“自由”（说明是在五分钟内写出尽可能多的内容）和“编辑”（说明是要仔细注意语法和拼写，并“采取你的方式”）。时间”）。这两种条件都产生了语法语素的自然顺序，我们将其解释为表明很少有干预\n101\n有意识的监视器。我们假设，这是因为我们的受试者主要关注这两种情况下的沟通，尽管我们在第二种情况下给出了相反的指示。\n，对我们的数据的仔细分析确实表明在编辑条件下第三人称单数有所增加（由于强制性场合太少，我们没有分析常规过去时）。这种上升还不足以扰乱自然秩序，但足以建议使用一些监视器。我们再次看到了较晚获得的简单物品的差异。 （注入一个更理论的观点，也许对语素自然和非自然顺序的正确解释是，非自然顺序，如 Larsen-Freeman (1975) 反映了大量的监视器使用。某些项目的增加而排名没有变化，如我们的作文研究，可能会反映光监视器的使用。）表 4.3 显示了编辑条件下第三人称单数语素的这一小改进。 5 6\n表4.3\n语法语素的自由和编辑条件的准确性差异\n____________________________________________________________________\n语素 自由 I 编辑 I 自由 II 编辑 II\n__ ing 0.87 0.85 0.88 0.82 系词 0.79 0.95 0.86 0.85 复数 0.82 0.82 0.77 0.78 冠词 0.86 0.85 0.76 0.83 助词 0.82 0.79 0.77 0.76 过去不规则词 0.69 0. 81 0.82 0.77 第三人称单数 0.54 0.61 0.32 0.65 __ 免费：“尽可能多地写”五分钟后。\n编辑：“仔细注意语法和拼写，慢慢来”。\nI：相同的受试者（ n = 58）执行了这两种条件。\nII：针对不同的情况选择不同的科目。\n每个语素至少由 100 个必选场合表示。\n(d ) 教授“硬性”规则的后果\nFelix（1980）向我们展示了当学生被要求学习对他们来说太难的规则时会发生什么，这些规则不仅难以学习而且还没有获得。这些学生不仅被要求学习困难的规则，还被要求在无人监控的情况下使用它们。菲利克斯旁听了十岁和十一岁的英语课程\n岁的德国学生。他的许多有趣的观察之一是：教师教授并要求正确使用省略句（例如在交流中：它是一只狗吗？是的，它是*）* 。尽管这种类型的问答对话“每天都在密集训练”（第 8 页），菲利克斯报告说，在近三个月的时间内，仅随机提供了正确的省略句（即，它是一只狗？是的，它不是）！\n这个结果是可以预见的：这条规则实在是太难学了，还没有被掌握。菲利克斯指出，根据研究文献，省略句“直到相对较晚的时候才出现”（第 9 页）。即使输入包含此类句子（假设输入是可理解的、有趣的等；参见第三章），这种结构也远远超出了这些学生的i + 1范围。\n菲利克斯还报告说，老师们勇敢地尝试教授*“do* ”支持和英语否定规则，但收效甚微。这些也是相当困难的。菲利克斯发现，学生们会在课堂上说出这样的句子：\n 它是 不，我的牛。 她不吃苹果吗？  这两个句子都可以解释为依赖于在没有意识语法的帮助下所获得的东西。为了充分理解这些错误的重要性，我们首先需要简要回顾一下关于非正式语言习得中否定习得的知识（另见第二章）。在儿童 L1、儿童 L2 和成人 L2 习得中存在以下阶段（以下是简化；有关详细信息，请参阅Dulay 、Burt 和Krashen正在出版）：\n 否定标记位于句子之外，如下所示：  禁止擦拭手指 佩戴手套 禁止（来自Klima和Bellugi的示例，1966 年）\n 否定标记位于主语和动词之间，如下所示：  他没有咬你\n他不小，他很大\n 获得后辅助否定；标记现在出现在助动词之后，如下所示：  那不是我\n我没抓住它\nFelix 的例子（1）似乎是第二阶段类型的过渡形式。这个“错误”是所有收购方（或几乎所有收购方）在完全获取正确形式之前都要经历的典型中间阶段。因此，这种错误类型的出现与这样的假设是一致的：这些孩子，即使他们在教室里，至少在某种程度上正在经历正常的语言习得，并且在课堂言语中依赖于习得的语言（请注意，德语否定总是动词后和助词后）。\n根据菲利克斯的说法，句子（2）不是一个是/否问题！菲利克斯坚持认为这是一个消极的声明（“她不吃苹果”）。因此，与句子 (1) 的情况一样，Felix 将这个错误解释为一种过渡形式，这是第一阶段的一个例子，不充当单词素否定标记。 （在自然第一语言和第二语言习得的第二阶段中，“不”执行相同的功能是很常见的，例如“我无法解释”之类的句子，其中“不”充当否定标记；参见，例如Cancino 、 Rosansky和 Schumann，1974）。孩子选择*“不”* （而不是*“不*”）是由于课堂上提供的特定类型的输入，即语法练习中“*不”*出现的频率非常高。\n这样的解释不仅指出了潜意识习得的现实性和力量，而且还证实了有意识学习是相当有限的，并且除了某些条件外，习得是大多数第二语言表现的原因。\nC. 学习的效果：自我纠正的准确性\r#\r\r本章前面的部分讨论了执行者何时进行监控以及哪些规则可用于监控。现在我们转向监控效果如何的问题：第二语言表演者通过参考有意识的语法可以在多大程度上提高准确性？\n104\n通过观察优秀的表演者自我纠正自己的语言输出的能力，我们可以对有意识语法的效率进行一些近似。诺埃尔·霍克（Noel Houck）向我指出，自我纠正（与“其他纠正”相对，或者纠正别人的输出，包括在测试中发现错误的活动），是调查监视器强度的最有效的研究对象，因为这就是显示器在实际性能中实际所做的事情。\n一些研究已经检验了自我纠正的有效性，但在调查数据并得出结论之前，我们需要简要了解一些导致自我纠正准确性变化的因素。\n1.影响自校正精度的因素\n首先，从第二章的讨论可以看出，自我修正效率存在个体差异。在自我纠正涉及有意识的监控者的情况下，如果监控者使用程度和能力存在个体差异，这将反映在自我纠正效率上。在所有其他条件（见下文）保持不变的情况下，我们可能期望作为最佳监视器用户的专业语言学家（例如“P”，来自Krashen和Pon ，1975）比其他表演者更好的表现。\n其次，我们可能会期望变化取决于表演者试图纠正输出的哪些方面。正如我们上面所讨论的，监视器似乎最适合简单的词法，对于复杂的语法可能效率较低，并且在语法的其他部分可能会遇到更多问题（不幸的是，甚至没有足够的数据来推测可学习性）大部分语法的内容；有关会话能力各方面可学习性的非常简短的讨论，请参见第三章）。\n自校正效率也会根据执行条件的不同而有所不同。 Houck、Robertson 和Krashen (1978b) 区分了以下条件。首先，有“言论自由”，或者说自然的对话。 （从某种意义上说，“自由写作”属于这一类别，从另一种意义上说，它不属于这一类别，因为有些人会认为书面形式自动需要更多地关注形式。）在“言论自由”中，自我纠正取决于表演者，并没有特别关注\n形式。相反，在大多数情况下，重点是沟通。在这种情况下查看语法结构中的错误时，我们会期望自然的难度顺序。\n第二个条件，朝着更加注重形式的方向发展，可以被称为“小心”说话或写作。这大致相当于Krashen中编辑的条件 等人。 （1978），如前所述，当说话者或作家试图“正确”地说话或写作时，就会发生这种情况。 （我们必须把这个条件细分为两个子条件，一是认真说，一是认真写，预计写作时会有更多的自我修正。）\n条件（1）和（2）涵盖了现实世界非正式沟通中的大多数情况。然而，我们可以指定语言教学中通常使用的其他条件，使表演者更加关注形式。在条件（3）中，学生被告知存在错误，但不知道错误在哪里或违反了什么规则。这大致相当于作文批改，学生只是被告知他们的论文中有一些错误，需要更正。\n注重形式的条件除了告诉学生存在错误之外，还向他们指示错误在哪里。该条件（条件（4））对应于教师在错误处划线的作文纠正。 Houck等人表示，更加专注。 ，是条件（5），其中提供了违反规则的存在、位置和描述，如此类反馈：\n我们越接近条件（5），有意识的监控器的预测效果就越大，出现“不自然”顺序错误的可能性就越大。根据第二章总结并在本章再次讨论的研究，我们看到条件（1）（言论自由、BSM、自由作文）和（2）（编辑写作）的自然顺序，但可能会看到监视器的一些影响条件 (2)（即Krashen中第三人称单数准确性的提高 等人。 ，1978）。拉森-弗里曼非自然序是在与条件（4）类似的条件下产生的（但见本章注4）。\n表 4.4 总结了这五个条件。\n表 4.4第二语言表现自纠条件\n___________________________________________________________________________________\n说明： (1) (2) (3) (4) (5)\n无 重写 正确正确 更正此错误此错误此错误使用此规则___________________________________________________________________________________ 包括错误：\n存在 否否是是 是的\n地点 否否 否是是\n违反规则 否否 不 否是\n___________________________________________________________________________________\n 言论或写作自由。 谨慎的演讲或写作 来源：Houck、Robertson 和Krashen (1978b)。  有一些研究可以让我们了解自我纠正在此处描述的某些条件下的效率，告诉我们表演者的错误中有多少百分比实际上是自我纠正的。因此，它们告诉我们有关监视器效率的一些信息，因为它们报告了表演者的自我纠正在多大程度上提高了输出准确性。然而，从某种意义上说，它们可能并不能真正显示出监视器的有效性。他们低估了监视器的使用，因为它们没有表明隐蔽的自我纠正，即在说出或写出话语之前进行的纠正（回想一下，在第二章的图一中，有两个可能的箭头从监视器通向输出）另一方面，报告成功自我纠正百分比的研究也高估了实际有意识的监视器使用量，因为自我纠正也可以完成单独使用获得的系统，凭自己的“感觉”来判断正确性。这就是表演者在纠正口误时用母语所做的事情。\n解释此类研究的另一个问题是，我们并不真正知道受试者是否确实有机会学习成功自我纠正所需的所有规则。我们是否在研究学习效率和/或表演者应用他们有意识地知道的知识的能力？\n因此，自我纠正研究并没有为我们提供准确的图片，但结果对于对自我纠正的整体效率感兴趣的教师非常有用，并且它们可能为我们提供有意识学习和监控的效率的近似值。\n数据\n表 4.5 和图 4.1 总结了我可以获得的有关自我纠正的文献。除了两个例外，所有这些都涉及大学水平的 ESL 学生，我们预计他们已经接受过相当多的正式英语语法教学。一项研究的主题是我们的老朋友“P”，一位语言学家。 Fathman 的受试者（ Fathman ，1980）被描述为 20 名成年人“在美国学习英语作为第二语言，主要在非正式环境中”和 20 名成年人“在正式环境中学习英语，主要在墨西哥”（第 3 页，手稿）。\n表 4.5成人英语作为第二语言表现的自我纠正准确性\n___________________________________________________________________________________\n研究条件1错误类型分析结果\n（自我纠正错误的百分比）\n___________________________________________________________________________________\n Schlue (1977) Stream All 语法，语音形态的 7.2% (99/1101)  (1)\n Fathman (1980) SLOPE 测试，形态学2 a。 “非正式”成人口头（见正文）= 20% 访谈，(13/65)  图 B. “正式成人”描述 = 32% (46/144)\n(1)\n Schlue (1977) 听所有语法，31%  自己的形态学演讲录音带（2）\n 霍克*等人。*检查九个语素 17.5% (36.5/236)  (1978a) 自己讲话的转录3\n(2)\n 怀特 (1977) 检查形态学 A. b. 52% (53/102) 的转录本语法 B． 27% (6/22) 对 c 做出回应。 “遗漏” C． 53% (23/43) BSM 4 (4) d．词汇 D. 9% (1/11)  _____________\n47% (83/178)\n Krashen和检查形态，95% (76/80)  Pon (1975) 转录5语法\n(4)\n___________________________________________________________________________________\n 括号内的数字是指表4.4中的条件。  “几乎所有未更正的错误都与动词有关，例如：省略系词和遗漏错误使用词形变化”。 受试者自己转录磁带。 E 转录磁带（“\u0026hellip;（S）出现了一些错误”）。 E = 主题转录磁带。    图 4.1。自校正精度。\n1：施鲁（ 1977）。\n2a、2b：法斯曼（ 1980）。\n3：施鲁（ 1977）。\n4：霍克等人。 （1978a）。\n5：白色（ 1977）。\n6：克拉申和庞（ 1975）。\n（见表4.5）\n至于语言分析的领域，一项研究（Houck et al. ，1978a）仅关注九个语法语素，而其他研究则涵盖了一般的形态和语法。\n很难说任何研究是否真正满足条件（1）的描述，因为在所有情况下，受试者都知道他们正在接受测试，并且调查的重点是他们言语的质量和准确性。因此， Fathman (1980) 和Schlue (1977) 可能高估了“言论自由”中自我交流的准确性，并且可能确实属于条件（2）。\n图 4.1 试图说明条件和受试者的差异如何影响自我校正的准确性，并为我们提供了我们可以期待的画面，至少在句法和词法领域。首先，它表明，培训和学生类型确实会产生影响：\n110\n法斯曼的“正式”学生比她的非正式学生纠正自己错误的比例更高，而我们的科目“P”表现优于所有人。这也与当我们更加关注形式时准确性会提高的假设是一致的。可以很容易地进行进一步的研究来填补图中的漏洞；他们还希望控制熟练程度，因为所犯错误的绝对数量和自我纠正的准确性之间可能存在关系。由于观察到的人格和回避行为之间的关系，控制第一语言和人格的某些方面也是可取的（ Kleinman ，1977）。\n这些研究得出的最重要的结果可能是，自我纠正永远不会是完美的，永远不会达到一些老师认为可接受的表现，除非一个非常好的学习者遇到了自己的错误！事实上，许多老师认为自我纠正应该是100 %，学生应该能够随时运用所学的知识。 7\n如果第二语言表演者在自我纠正中不注重形式，他们会做什么？几项研究均属于条件（2），表明修订通常旨在提高沟通效率，而不仅仅是形式。哈桑（Hassan，1979 年 Hatch 中引用）指出了 ESL 学生对作文的第二稿和第三稿所做的修改。哈桑报告说，学生“主要集中在词汇选择上，添加了一些小细节，并进行了较少的更改，从而导致了语法的整体改进”（Hatch，1979，第 136 页）。 Schlue (1977) 得出了类似的结论，指出“她的受试者似乎非常仔细地监控自己的言语，但不是为了语法的正确性。他们的言语意识大部分集中在他们传达信息的成功或失败上。因此，他们他们非常关心诸如词汇选择的适当性之类的事情……即使在自我分析活动中，也常常很难让受试者关注形式而不是词汇和发音……”（第 343 页） 。 Houck、Robertson 和Krashen （1978a）还指出，受试者所做的许多更正“显然是为了提高可理解性，而不是语法形式”（第 337 页）。\n到目前为止总结一下：我们对何时可以监控、他可以监控什么的描述\n监控，以及监控所有的语言效果\n得出类似的结论。有意识语法的使用是有限的。不是每个人都监视。那些只在某些时候进行监控的人，并且仅将监控用于语法的子部分。正如我们刚才所看到的，自我校正对准确性的影响不大。第二语言表演者通常只能自我纠正一小部分错误，即使刻意关注形式（条件 2 至 4），即使我们只考虑语法的最简单方面。\nD. 意识规则的其他影响\r#\r\r我们坚持认为，有意识语法的使用仅限于容易学习、后习得的规则、简单的形态添加，这些对传达说话者或作者的信息没有做出压倒性的贡献。对于大多数人来说，只能学习和使用“本地”规则（Burt 和Kiparsky ，1972）。当然，由于存在其他时态和语用知识标记，说英语的人可以很好地理解缺少第三人称单数标记的句子，并且可以很好地丢弃常规的过去式结尾。\n然而，当时间允许、规则的使用不干扰沟通时，应用这些规则还是有一定实际价值的。提供这些本地项目，尽管它们可能对交流做出很小的贡献，但可以使写作和演讲更加优美，它增加了对许多第二语言学生来说可能非常重要的美容效果。\n事实上，在高级第二语言课程中，提供这种润色可能会成为主要目标，这对许多学生来说是非常合理的。 “高级”第二语言习得者，尤其是那些已经在目标语言国家生活了几年的人，可能已经习得了大量但不是全部的第二语言，足以满足交际需要，但仍然达不到母语人士的标准。他们的主要需求可能是有意识地使用规则来补充他们所获得的能力，使他们在第二语言中看起来像在第一语言中一样受过教育。\n我并不反对这种语法教学。不公平的是，在开始的语言课程中，对那些无法理解第二语言中最简单信息的学生来说，强调沟通上不重要的、晚习得的项目的准确性。\n112\nE. 规则的提出\r#\r\r关于如何呈现语法规则的文章已经有相当多的文章了。一个问题是规则是否应该“直接”给出（演绎），或者是否应该要求学生自己找出规则（归纳）。另一个问题是顺序——哪些规则应该首先提出，和/或更强调哪些规则。我将对这些问题的评论仅限于第二语言习得理论对这些问题的影响。\n1.演绎-归纳问题\n多年来，这个问题一直是第二语言习得教学文献中关注的问题之一。对于许多学者和教师来说，演绎教学似乎更合理——为什么要让学生猜测规则呢？提供清晰的解释并让他们练习，直到规则“内化”。认知代码教学以及语法翻译都是“规则优先”演绎方法的例子。\n归纳教学的支持者认为，确保学习的最佳方法是让学生自己制定规则。归纳教学很像语言学中的规则编写。学习者获得一个语料库，必须发现其中的规律性。\n在进行有关这个问题的一些研究之前，有必要澄清一个要点：归纳学习和演绎学习都是*学习。*两者都与潜意识语言习得没有任何直接关系。归纳学习与习得表面上很相似，并且在文献中偶尔会与习得相混淆。如表 4.6 所示，两种电感\n表 4.6习得和归纳学习：\n相同点和不同点\n_________________________________________________________________\n习得归纳学习\n_________________________________________________________________\n数据第一，规则遵循 数据第一，规则遵循\n规则是潜意识的 规则是有意识的\n注重意义 注重形式\n进展缓慢 可能发生得很快\n需要大量数据 接触少量数据后可能发生 _________________________________________________________________\n113\n学习和习得首先共享数据或输入的特征，其次才是“规则”。然而，存在深刻而根本的差异。当目标是归纳学习时，重点是形式，学习者尝试分析所呈现数据的形式方面。当目标是获取时，获取者尝试理解输入中包含的消息。而且，两个进程制定的“规则”是不同的。归纳学习的规则是语言概括的有意识的心理表征——获得的规则不是有意识的（但是，我们当然可以在以后学习我们所获得的东西；见下文），而是通过对正确性的“感觉”来体现。此外，归纳学习，因为它是有意识地解决问题，所以可能发生得非常快——熟练的学生只需几个例子就可以“看到”规律性。然而，获取总是需要时间并且需要大量的输入数据。正如第二章所讨论的，要获得一条规则，需要的不仅仅是一个段落和一些练习。\n因此，从第二语言习得理论的角度来看，演绎归纳争论并不是第二语言教育学的核心争论，因为它只关注哪种学习方式最好。然而，这个问题具有一定的意义，并且与此争议相关的一些建议和实验结果也很有趣。\n有人建议（ Hammerly ，1975）某些结构“最适合演绎方法，而其他结构\u0026hellip;\u0026hellip;可以通过归纳方法很好地学习”（第 17 页）。 Seliger (1975) 提供的数据表明，随着时间的推移，采用演绎方法可以更好地保留记忆。哈特尼特的数据支持这样的假设，即在演绎外语课程中取得成功的学生与在归纳课程中取得成功的学生采用不同的神经机制，演绎学习者更倾向于左脑、分析性思考者，而归纳学习者则更倾向于右脑、类比思考者。哈内特，1974 年；克拉申、塞利格和哈内特，1974 年）。\n如果对规则呈现的偏好存在个体差异，如果有些人首先喜欢规则，而另一些人则喜欢自己解决问题，那么在语言教学计划的语法部分坚持“错误”的方法可能会引起焦虑并强化情感。筛选。 8\n114\n第二章提出的第二语言习得理论对这个问题仅做出了间接贡献。最重要的贡献是它坚持演绎法和归纳法都是以学习为导向的。用于规则练习（演绎）或规则搜索（归纳）的“练习”将不是习得的最佳输入，因为学生的注意力主要集中在形式而不是信息上。\n2.排序和学习\n我在第三章中指出，当目标是习得时，语法排序是不可取的。然而，当目标是有意识学习时，我们应该按某种顺序一次提出一个规则，这似乎是合理的（“规则隔离”； Krashen和Seliger ；1975）。已经提出了测序的几个基本原理。我们（ Krashen 、Madden 和 Bailey，1975）曾经提出过自然顺序本身，但我不再认为它是习得或学习排序的正确基础。其他建议包括出现频率、语法简单性和“实用性”（例如，参见 Larsen 1975）。 （我的印象是，尽管存在这些选项，并且在专业文献中对它们进行了相当广泛的讨论，但绝大多数文本都使用某种版本的语言简单性，从形式上不太复杂到更复杂的结构。）\n如本文所述，第二语言习得理论尚未对确切的学习顺序做出预测。然而，它确实预测了有关可以学习的规则集的一些内容。首先，如果语法教学的目标实际上是为学生提供一个监视器，正如我们在本章前面讨论的那样，那么简单性将发挥重要作用。我们只能教那些可以学习的东西，而且，更限制了设置，什么是可携带的，什么是可以在学生头脑中随身携带的。 （这两个要求需要区分——学习规则并不总是意味着能够在性能中使用它，即使条件有利于监视器的使用。）正如我们上面所看到的，在讨论用户不足和不称职的监视器的情况下对于用户来说，作为一个职业，我们高估了大多数人可以学到的东西，以及他们在绩效中可以保留和使用的东西。即使是最佳用户，“优秀的语言学习者”也有远远低于许多教师期望的局限性。\n其次，除非我们的目标是语言欣赏（见下文），否则我们不必教授学生已经掌握的规则。那么，我们如何知道要教哪些项目呢？可以想象，我们可以对每个学生进行详细的错误分析，比较学习和习得的测试结果，确定那些已经习得但尚未学习的项目，并只关注这组项目。这是可能的，但可能没有必要。 “自然秩序”研究至少可以为我们提供一些我们需要的信息。虽然第二语言习得者之间存在一些个体差异，但我们对某些结构的“早期”习得和“较晚”习得的内容有很好的了解。例如，我们可以相当肯定，ESL 初学者不会习得第三人称单数 /s/ 或所有格 /s/。我认为应用语言学的一个非常有价值的目标是尝试描述这套通常是后天习得但可学习的规则，超越我们现在所知的少数语素和结构。\n因此，要学习的规则应该满足以下三个要求：\n 可学习的 便携式 3. 尚未获得  然后，排序问题就变成或简化为确定应该首先提出满足所有这三个要求的规则。因此，这仍然是一个问题，但我们通过限制必须排序的项目集来解决这个问题。\nF. 纠错注意事项\r#\r\r与有意识学习相关的另一个争议是纠错问题。 Henrickson （1978）列出了“五个基本问题”并回顾了解决这些问题的文献：\n  错误应该被纠正吗？\n  如果是这样，什么时候应该纠正错误？\n  哪些学习者的错误应该被纠正？\n  学习者的错误应该如何纠正？\n  谁应该纠正学习者的错误？\n116\n  第二语言习得理论对其中四个问题有“答案”，这些答案和本书中的所有其他含义一样，本身就是假设。在这种情况下，我预测如果按照下面描述的原则进行纠错，将会是有效的。\n 错误应该被纠正吗？  根据这里提出的第二语言习得理论，当纠错“起作用”时，它是通过帮助学习者改变他或她对规则的有意识的心理表征来实现的。换句话说，它通过告知学习者他或她当前版本的有意识规则是错误的来影响学习能力。因此，第二语言习得理论意味着，当目标是学习时，错误确实应该被纠正（但不是所有时候；见下文；并且不是所有规则，即使目标是学习）。然而，该理论认为，纠错对于采集没有用。根据输入假设，当获取者理解输入的含义时，而不是当他们产生输出并关注形式时，获取就会发生。\n 什么时候应该纠正错误？  亨德里克森（Hendrickson）继Birckbichler （1977）之后，建议一般错误纠正仅限于“操作性语法练习”——在“交际练习”期间可以容忍更多错误。\n第二语言习得理论的含义是相似的。如果纠错是为了学习，那么，纠错的条件就应该与利用学习的条件相同——我们应该把学生的注意力集中在形式上，只有当他们有时间、有时间的时候才纠正他们的错误。转移注意力不影响沟通。这意味着在自由对话中不会出现错误纠正，但允许在书面作业和语法练习中进行错误纠正。这正是自然方法中特雷尔的程序（在第五章中描述）。\n  哪些错误应该被纠正？\n亨德里克森回顾了三个假设并认为它们都是合理的。\n  我们应该纠正“全局”错误，即干扰通信或妨碍消息清晰度的错误（Burt 和Kiparsky ，1972 ）。此类错误应优先予以纠正。\n 最受污名化、引起最不利反应的错误是最需要纠正的。 应优先考虑最常发生的错误。    在上一节中，描述了监视器的语言领域。我建议我们根据以下特征限制有意识地学习监视器使用规则：要学习的规则应该是（1）可学习的，（2）可移植的，以及（3）尚未获得的。如果纠错确实只影响有意识的语法，这些特征也可能描述哪些错误应该被纠正。也许我们应该只纠正反映可用作有意识监控器一部分的规则的错误。\n这似乎对纠正错误的问题做出了微不足道的贡献。然而，许多老师试图指出或纠正所有错误。该建议大大减少了任务的规模。在由可学习、可移植和尚未习得这三个特征定义的小集合中，我们仍然必须做出决定，这里的考虑因素例如频率、对沟通的贡献和易怒性可能是相关的。然而，总体任务大大减少。\n 错误应该如何纠正？  亨德里克森回顾了几种纠错方法，包括两种最广泛使用的方法：\n 提供正确的形式（“直接”更正）。  发现（归纳）方法。    他指出，很少有研究能够证明一种方法的优越性。一些研究表明，直接修正并不是特别有效；在教学计划中直接纠正口头和书面输出的学生并没有产生更少的错误（Hendrickson，1976，1977b，引用于 Hendrickson，1978；Cohen 和 Robbins，1976） 。亨德里克森指出，这可能是由于\n缺乏一致和系统的纠正（ Allwright ，1975；Cohen 和 Robbins，1976）。\n只有满足以下条件，纠错才会显示出积极的结果：\n 纠正的错误仅限于可学习和可移植的规则。  在允许使用监视器的条件下纠正错误。这将使学习者有时间重新考虑所违反的规则。 评估纠错效果的措施是在允许使用监视器的条件下进行的，以便让学习者有时间参考他或她的有意识的知识。 主题是“监视器用户”（即他们不是监视器的低级用户）。    我预测，在这些条件下不进行纠错将不会“起作用”；即使满足上述所有条件，我也不看好纠错的效果。正如监视器使用条件一样，它们是必要的，但不是充分的——即使在“最佳”条件下，纠正最简单的规则，对于最注重学习的学生来说，教师的纠正也不会产生不辜负学生期望的结果。许多导师。\nB. 作为主题的语法\r#\r\r正如前面提到的（第 88 页），“语法”在教学计划中还有另一个位置，这个位置并不总是与它作为有意识的监控器的用途明确区分开来。这是作为主题的语法。\n本身的研究感兴趣。他们也可能对语言变化、方言等感兴趣。对于一些学生来说，特别令人满意的是学习已经习得的知识，即本节前面描述的尤里卡现象（第 88 页）。我的学生们认识到他们已经掌握了英语中现在进行时的三种用法，他们对拥有与潜意识知识相对应的意识知识感到非常满意和高兴。他们还认为我是一位出色的语文老师，为他们提供了这种见解！\n提供与先前习得相对应的学习有其优点，但我不认为这是语言教学——它不是习得的输入（尽管课堂讨论的语言可能是；见下文），而且它也没有提供有用的学习可以用作采集的补充，作为监视器。然而，它可能有一个目的：它可以向语言年龄的学生证明习得是真实的，并且是可以信任的。因此，指出所获得的东西可能会激发人们对获得过程的更多信心，并降低情感过滤器。因此，这可能是过度使用监视器的部分解决方法。\n对语言结构及其如何随时间（历史语言学）和社会变化的研究具有许多高中和大学水平的语言课程可能希望包含在课程中的一般教育优势和价值。然而，应该明确的是，教授第二语言的复杂事实不是语言教学，而是“语言欣赏”或语言学。\n然而，在一种情况下，将语法作为主题进行教学可以导致语言习得：当目标语言用作教学媒介时。当学生对“语法”这一主题感兴趣时，习得就发生在这些课程中。通常，当这种情况发生时，教师和学生都相信形式语法的学习对于第二语言习得至关重要，并且教师善于用目标语言进行解释以便学生理解。换句话说，在这种情况下，教师的谈话满足了习得输入的要求，如第三章所述：输入是可理解的并且被认为是相关的。解释语言的过滤器很低，因为学生的有意识努力通常集中在主题、正在谈论的内容上，而不是媒介上。\n这是一个微妙的点。事实上，老师和学生都在欺骗自己。他们认为，学生在第二语言习得方面取得的进步是由学科本身，即语法学习决定的，但实际上，他们的进步来自于媒介，而不是信息。就第二语言习得而言，只要需要广泛使用目标语言，任何引起他们兴趣的主题都可以。\n这可能是许多基于语法的成功的基础和解释\n接近。它们是用目标语言教授的，这为习得提供了可理解的输入，只要学生相信有意识的语法对他有好处，输入就是相关且有趣的。 （有关此类的进一步讨论，请参阅Krashen ，1980。）\n笔记\r#\r\r  我应该指出，这不是塞利格的解释。参见注2。\n  塞利格将他的结果解释为与第二章中提出的第二语言习得理论相反。他对测试的解释和理论都与我的不同。他认为测试情境是“正式的”，并且“不是自然语境中的语言样本”（第 362 页）。正如文中提到的，我认为这种分析有一定道理。然而，受试者的表现与测试主要利用采集的假设相一致——这得到了数据的支持，并且与只有在满足几个必要条件时才会使用显示器的假设相一致，如第二章所述并重复在这一章当中。更奇怪的是他对习得学习区别和监控假说的解释：他声称，他的结果与“监控理论”相反，因为监控理论认为“学习者按照他们所说的去做”，而他的数据表明事实并非如此。他的数据确实证实了表演者并不总是按照他们所说的去做，但是“监控理论”没有，也从来没有声称人们按照他们所说的去做。\n塞利格在同一篇论文中概述了他自己的立场。他断言，教学规则“最有可能充当促进学习者关注必须诱导的真实语言概念的标准属性的机制”（第 368 页）。它们充当“习得促进者”并“使归纳假设检验过程更加高效”（第 368 页）。不幸的是，塞利格通过描述他的假设来提供的内容仅此而已，他将其作为监控理论的替代方案。他也没有提供任何实证支持他的立场。此外，这个假设还存在一个严重的问题：如果规则学习经常出错（我们同意这一点），那么它如何作为采集聚焦设备有用呢？此外，正如我们在本节前面所看到的，习得之前不需要有意识的学习。相反，现有的证据支持这样的假设：只有当获取者的注意力集中在消息上而不是输入的形式上时，获取才会发生。根据输入假说，意识规则不利于习得。收购是通过完全不同的途径进行的。另类假设必须处理支持输入假设的证据，以及习得不需要先前学习的论点。\n  在我们得出伊娃和于林只是需要更多练习和学习的结论之前，请考虑一下他们是更好的学习者之一的可能性。科恩和罗宾斯的主题洪（Hung）是监视器的“低度使用者”，在第三人称单数 /s/ 和 /- ed / 上也犯了错误，这与此类项目通常是后期获得的假设一致。然而，根据与玉琳和伊娃的合同，洪不能按规则自我纠正。当面对他删除的第三人称单数 /s/ 时，他说道：“我想我只是从来没有很好地学过这条规则，所以我只是写下我觉得喜欢的东西。” （第 52 页）。此外，“当遇到他写的一个出现删除错误的句子时*（* ‘他灰心丧气’），洪提供了*ed* ，但他评论道：‘我不明白\n121\n为什么’。”（第 53 页）。洪还指出，他很难发现自己输出中的错误。洪被多次引用说他不注重形式：“我不在乎语法（第 50 页）\u0026hellip;我只是从来没有学得那么好\u0026hellip;我只是写下我的感受（第 59 页）\u0026hellip;当我学习英语时，我感到有点无聊”（第 59 页） 51). 同样，许多人尽管在课堂上有所了解，但实际上对我们看来简单的规则一无所知。\n  在最近的一项研究中，J. Brown (1980) 进行了语法类型测试，其格式与拉森-弗里曼的测试非常相似。受试者只需提供一个语素，如：\n  我昨天和约翰__________（谈话）。\n该测试在玛丽蒙特帕洛斯维迪斯学院对 66 名使用多种第一语言的 ESL 学生进行，没有时间限制。这是布朗报告的难度顺序：\n辅助正确率96%\n系词 94.2%\n常规过去92%\n复数 91.8%\n（默认艺术）88.2%\n不规则过去时 88% a ( indef art) 86.6% Ø (art) 85.8% 所有格 80.2% ing 80.2% 第三人称唱 77%\nBrown 报告称，与 Andersen，1978 相比，该顺序与其他第二语言语素顺序显着相关（rho = 0.73）。与其他研究的分析有所不同，文章的同种异形体是单独呈现的；然而，它们的排名顺序非常接近。\n由于分数紧密相连，布朗的顺序很难解释。该顺序似乎与文献中的其他 L2 顺序相似，但有两个例外： ing异常低，而常规过去式异常高（参见第二章假设 2）。常规过去时的高排名与我的假设是一致的，即这种格式鼓励监视器的使用，这导致晚获得但易于学习的语素的排名的准确性跃升。对于ing相对较差的表现，我没有方便的解释，也无法解释第三人称单数在此监控测试中的低排名。布朗与其他研究的高度相关性与我的一些主张相反，但过去的增长却并非如此。\n  Monitorfree研究中第三人称单数的准确性与“自由”条件下的作文研究中发现的准确性非常相似。在 Bailey、Madden 和Krashen （1974）中，使用 BSM，第三人称单数准确性为 0.41，而在Krashen Houck、 Giunchi 、Bode、Birnbaum 和Strei （1977）中，使用自由言语，该语素的准确性为 0.36。与表 4.3 相比，两个自由条件下的精度分别为 0.54 和 0.32，在编辑条件下分别达到 0.61 和 0.65。这种相似性与以下假设一致：编辑的条件涉及轻微的监视器使用，并且后期获得的简单项目最容易受到影响。\n  在关注常规过去时和第三人称单数时，我绝不希望暗示这些是唯一可以有意识监控的语法点。他们是，\n122\n相反，这是可以监控的典型内容，并且很容易跟踪多项研究，因为它们经常被提及和分析。\n  其他几项研究也涉及监控能力，但不关注自我纠正。如前所述， Krashen 、Butler、Birnbaum 和 Robertson（1978）要求南加州大学的 ESL 学生用英语写“自由”和“编辑”作文（条件 1 和 2）。在这两种情况下，都发现了自然顺序，在编辑条件下第三人称单数语素略有增加。所分析的六个语素的编辑条件总体提高了 6%，对于整个群体来说，根据第一语言存在一些个体差异，波斯语使用者的效率最高，显示编辑的准确性提高了 16%健康）状况。这是与文本中描述的不同的衡量标准，因为受试者写了全新且不同的文章。 Tucker 和Sarofin （1979）向开罗美国大学的 18 名“高级中级”阿拉伯语学生展示了 14 个异常句子。学生们被要求“在错误下方画一条线，如果可以的话就纠正它”（第32页）。这对应于条件(3)。纠正错误的比例范围为 33% 到 83%，具体取决于错误，其中“数字”的错误最容易纠正（如 * 所以我听取了父母的建议） 。\nLightbown 、 Spada和 Wallace (1980) 也为我们对显示器效率的了解做出了贡献。他们对魁北克的 6、8 和 10 年级 EFL 学生进行了英语语法判断测试。受试者被要求圈出句子中的错误并写出正确的形式。该研究重点关注这些结构：\n复数/s/\n占有欲/s/\n第三人称单数/s/\n可收缩系词 /s/\n可收缩辅助/s/\nBe ，用于表达年龄（例如，我六岁。对于讲法语的人来说，这被认为是一个问题结构。）\n地点介词（他们要去上学。）\n该测试共进行了三次，前两次仅相隔两周，第三次则在五个月后、暑假结束后进行。在第一和第二次管理之间，测试中使用的规则在课堂上进行了复习。灯弓 等人。报告从时间 I 到时间 II 取得了一些进步——课堂复习使 8 年级和 10 年级的学生有了适度但显着的 11% 的进步，相比之下，对照组学生在没有复习的情况下简单地重新参加测试，提高了 3%，提高了 7%对于六年级学生（六年级未进行任何对照）。五个月后的第三次管理中，分数回落到第一管理和第二管理之间的水平。\n光弓的结果 *等人。*与文本中报告的内容一致，尽管任务不是自我纠正，而是纠正提交给学生的错误，如塔克和萨拉芬那样。尽管经过两到六年的正式学习，而且所涉及的结构相当简单，但学生们只能纠正大约 1/4 到 1/3 的错误。该任务对应于表 4.4 中的条件 (3)。\n课堂上复习规则也起到了一定的作用，暑假后大部分都消失了。我同意Lightbown的观点 *等人。*的解释是“第二届政府的改进是基于暂时保留在意识水平但尚未完全获得的知识的应用”。第三次管理的结果表明，所学到的知识是多么短暂。\n灯弓 *等人。*还提供单个结构的结果分析。他们注意到\n123\n受试者从时间 I 到时间 II 在 be/have 规则和第三人称单数方面取得了显着（“戏剧性”）的进步。他们指出，这支持了我的假设，即更简单的规则更容易有意识地学习，因为这两个规则的描述相对简单。不太透明的规则也有了显着的改进，即使用方位介词和复数，这看起来很“容易”，但并没有显示出很大的进步。\n/s/ 语素的难度顺序符合第二章中提出的自然顺序，证实了自然顺序本身的可靠性，以及需要超过条件（3）才能显着扰乱自然顺序的主张（即条件（ 3）对形式的关注不够强烈）。 （有关课堂输入对语素顺序影响的讨论，请参阅正在出版的Lightbown 。）\n8 在较早的论文中（ Krashen 、 Seliger和 Hartnett，1974），我们提出了一个折衷方案：教授规则优先，这将满足演绎学生的需求。归纳法的学生可以简单地忽略规则的呈现。 “练习”对于演绎学生来说可以作为规则应用（监控）的练习，对于归纳学生来说可以作为规则搜索的练习。可以在练习后（重新）陈述该规则，对演绎学生进行回顾并确认归纳学生的假设。\n124\n  第五章\r#\r\r语言教学方法\n第三章和第四章专门讨论了第二语言习得理论的一般含义。第三章描述了习得的最佳输入的特征，假设当提供以下输入时语言习得效果最好：\n 易于理解 与收购方感兴趣和/或相关。 没有按语法顺序排列。 提供足够的数量。  此外，这种输入的呈现方式不应使收购方“处于守势”；它不应该提高或加强情感过滤。此外，还需要为收购方提供工具，帮助他们获得更多来自外界的投入。\n第四章试图“以学为本”。只有在不干扰沟通的情况下才应使用有意识的规则。此外，对于大多数人来说，只有一小部分语法既可以学习又可以“移植”。对于专业语言学家和语言教师来说似乎非常透明的规则甚至对于“优秀的语言学习者”来说也可能相当不透明。我们还得出结论，就句法准确性而言，学习的效果相当有限，但有意识规则的应用可能会提供对某些语言学生来说很重要的装饰效果。第四章还讨论了有意识语法可以作为主题进行教学的事实；如果用目标语言教授这样的课程，就会产生习得结果。然而，这种“语言欣赏”功能需要与语法监控功能区分开来。\n本章第一部分的目标是分析一些当前的方法\n根据第三章和第四章的结论，对语言教学进行了阐述。然后，该分析的结果将与“方法比较”领域中应用语言学研究的结果进行比较。我的解释是，在这种情况下，当前的第二语言习得理论和应用语言学研究得出了非常相似的结论。\n下一节将研究传统课堂的一些替代方案，这些替代方案似乎比任何传统课堂方法都具有更好地满足输入要求#2（“有趣/相关”要求）的优势。接下来，简要讨论这些想法对第二语言测试的影响。我建议我们需要仔细考虑我们的成绩测试对学生和教师行为的影响。我们测试的目标是：当学生“为测试而学习”时，他们应该做一些鼓励或导致第二语言习得的事情。本章的最后几节讨论了我认为材料上的一些差距，以及实施此处提出的建议时遇到的一些实际问题。\nA. 当今的教学方法\r#\r\r第三章和第四章的结论可以总结为图5.1中的矩阵。我们可以简单地问，对于每种课堂教学方法，它在多大程度上满足了最佳输入的要求，以及在多大程度上将学习放在了适当的位置。我们将回顾最广泛使用的方法：语法翻译、听说语言、认知代码教学和直接方法的一种版本。然后我们将介绍一些新方法，阿舍尔的全面身体反应方法、特雷尔的自然方法和洛扎诺夫的方法 建议百科。 （几个非常有趣的方法没有包括在内，例如Gattegno的Silent Way和Curren的Counseling-Learning方法。这是由于几个因素造成的，包括我自己对这些方法不熟悉，缺乏将这些方法与其他方法进行比较的经验数据，以及Stevick出色的分析的可用性（ Stevick ，1980）。）每次分析开始时提供的简要说明并不是对每种方法的完整和充分的描述，而只是为了告知读者\n图 5.1。方法和材料的评估方案最佳输入的要求\n 易于理解 有趣/相关 不按语法顺序排列 数量 过滤级别（“脱离防御”） 提供对话管理工具  学习\n受限于：\n 某些规则；那些是  可学习的 便携的 尚未获得   某些人（“监控用户”） 某些情况  时间 注重形式    我对每种方法的理解是什么。还应该指出的是，这种分析假设这些方法以其纯粹的形式使用，我确信这种情况不会在每个教室中发生。\n1:语法翻译\r#\r\r 1).语法翻译  虽然存在一些差异，但语法翻译通常包括以下活动：\n  语法规则的解释，带有例句。\n  词汇，以双语列表的形式呈现。\n  阅读选择，强调上面（1）中提出的规则和（2）中提出的词汇。\n  旨在提供课程语法和词汇练习的练习。这些练习强调有意识\n控制（ Krashen和Seliger ，1975意义上的“关注” ）并包括从 L1 到 L2 和 L2 到 L1 的两个方向的翻译。\n  大多数语法翻译课程都是为外语教学而设计的，并以学生的母语授课。现在我们根据图 5.1 中的矩阵来分析语法翻译。\n 2).最佳输入的要求   *可以理解。*只能说语法翻译提供了可理解输入的碎片。标准句通常是可以理解的，但重点完全在于形式，而不是意义。阅读选择是主要来源，但提供的选择几乎总是太困难，通常需要纽马克（1966）所说的“密码分析解码”。学生被迫逐字阅读，因此很少能完全专注于信息。练习中使用的句子可能是可以理解的，但在这里，就像在模型句子中一样，它们的目的是让学生将注意力集中在形式上。 *有趣/相关。*通常，特别是近年来，人们会尝试在阅读选择中提供感兴趣的主题，但通常的主题远远达不到遗忘原则（第三章）。他们显然没有抓住学生的注意力，以至于他们忘记了这是用另一种语言写的——法国之旅的报告，即使包括卢浮宫，通常也不会提供大多数高中和大学所不具备的信息。美国的学生都渴望获得。 *没有按语法顺序排列。*当然，语法翻译是按语法顺序排列的，大多数文本试图从作者认为简单的规则转向更复杂的规则。每节课都会介绍一定的规则，并且这些规则在课程中占主导地位。 *数量。*如上所述，语法翻译无法提供大量可理解的输入。此外，模型句子、阅读材料和练习中的少量可理解输入很少由教师用目标语言讲授来补充。 *情感过滤级别。*在第三章中，假设鼓励低过滤的一种方法是“真实”输入假设。  语法翻译几乎违反了输入假设的每个组成部分，因此预计这种方法将具有使学生“处于防御状态”的效果。学生应该能够立即产出，并且完全准确。有人指出，正如 Rivers，1968 年指出的那样，一些不太愿意学习语法的学生（使用不足）的焦虑程度也会升高。\n *对话管理工具。*语法翻译不会明确或暗示地试图帮助学生管理与母语人士的对话。 学习  语法翻译隐含地假设有意识地控制语法对于掌握是必要的。换句话说，学习需要先于习得。这一假设需要介绍和解释所有目标结构。因此，正如第四章所建议的，要学习的规则集不限于那些可学习的、可移植的和尚未获得的规则。没有尝试考虑监视器使用中的个体差异，也没有尝试指定何时使用规则，隐含的假设是所有学生都能够始终使用所有规则！\n 3).总结  如果上述分析正确，语法翻译应该会导致获得的能力非常低；可用的可理解的输入面临着高度的情感过滤，并且学习被过分强调了。\n2.视听语言学\r#\r\r以下是有声语言教学的共同特征。同样，实践中可能存在很大差异。课程通常以对话开始，其中包含课程的结构和词汇。学生应模仿对话并\n最终 记住它（称为“ mim-mem ”）。通常，班级先以小组形式练习对话，然后再分成小组练习。对话之后是对对话中介绍的结构进行模式练习。练习的目的是“强化习惯”，使模式“自动化”。\nLado （1964）指出，听说模式练习将学生的注意力从新结构上*转移开。*例如，学生可能认为他正在练习中学习词汇，例如：\n那是一个 __________。 （钥匙、刀、铅笔等）\n（由图片提示，如Lado和 Fries，1958）但实际上，根据听说理论，学生正在使模式自动化。\n有四种基本的练习类型：简单重复、替换（如上例）、转换（例如将肯定句改为否定句）和翻译。\n演练结束后，一些音频课程会提供解释。根据听语言学的支持者的说法，解释是对所练习内容的描述，而不是对要说什么的规定。因此，所提出的“规则”不应被视为有关如何执行的说明。解释部分被认为是可选的，因为用我们的术语来说，它是“语言欣赏”。\n 最佳输入的要求   *可以理解。*可以认为，听说方法确实提供了可理解的输入。大多数学生当然可以理解对话和模式练习，尽管一些理论家表示，在课程的早期部分，实际理解是不必要的，纯粹的机械练习是有用的。\n  有趣/相关。虽然拉多（Lado，1964）建议对话包含“有用”的语言，适合年龄且自然，但大多数对话都远远达不到真正的兴趣和相关性的标准。当然，大多数模式练习并不试图满足这一要求。\n130\n  *没有按语法顺序排列。*听说教学有一个清晰的顺序，通常基于语言的简单性，但也受到频率和对比分析难度预测的影响。与语法翻译的情况一样，整个课程以“当天的结构”为主。\n  *数量。*虽然听语言教学能够用听-口语言来填满整个课时，但很可能会认为听语言教学以及其他方法都不能满足这一要求（见下文）。例如，虽然对话的呈现可能会占用一整段时间，但学生们很少花时间专注于一遍又一遍地呈现的信息。目标是记住对话，而不是理解信息。模式练习在理论上也可能是可以理解的，但学生在最初几次重复后可能不会注意到意义（Lee、McCune 和 Patton，1970）。事实上，根据一些实践者的说法，模式实践背后的想法是完全避免意义。对于对话和模式练习，与真实交流所提供的各种各样的内容相比，整个小时可能只需要几个句子或模式。\n  *情感过滤级别。*音频教学违反了输入假设的几个方面：预期立即产生，并且预期不会出现错误。过度使用练习和重复以及不允许学生在早期阶段接触书面文字等程序也可能会增加焦虑（例如，参见 Schumann 和 Schumann (1978) 第 5-6 页）。\n  *对话管理工具。*听语言学在这一类别中比语法翻译做得稍好一些，因为对话确实包含可用于邀请输入并控制其质量的材料。然而，对话对于自由对话和真正的对话管理的适用性可能是有限的。大多数对话实际上都是脚本，并不是为了协商意义而设计的。\n   学习  从理论上讲，有意识的学习并不是听说主义的明确目标。相反，我们的目标是让学生过度学习各种模式，以便直接在表演中使用。然而，在实践中，听说教学常常导致归纳学习，学生试图在对话和模式练习的基础上制定出有意识的规则，而解释部分则用于确认或否定他的猜测。因此，没有明确尝试将学习限制为可学习、可移植且尚未获得的规则，也没有任何尝试鼓励仅在某些情况下使用规则。尽管模式练习试图让学生远离规则，但完全正确的要求可能会鼓励始终使用监视器。\n概括\n一些习得应该是使用音频-语言方法的结果，但远不及使用低过滤器提供大量可理解和有趣/相关输入的其他方法所获得的结果。对话和模式的饮食有时会被理解并处于i + 1 ，因此可能会导致一些习得。如果按照计划学习，学生最终会得到一些在对话中偶尔使用的句子和模式，并且在某种程度上也服务于对话管理的目标。隐含地鼓励归纳学习（这可能会提高一些演绎学习者的过滤器；参见第五章），但没有尝试限制要学习哪些规则或何时应用它们。\n3.认知代码\r#\r\r认知代码与语法翻译有一些相似之处，但也有一些不同之处。虽然语法翻译的目标基本上是帮助学生阅读目标语言的文学作品，但认知代码试图帮助学生掌握所有四种技能，即除了阅读和写作之外的口语和听力。然而，就认知代码假定“能力先于能力”而言，假设是相似的。\n能力”不是乔姆斯基（1965）最初定义的母语者的隐性知识，而是有意识的知识。正如第三章中提到的，认知代码假设“一旦学生对语言结构进行适当程度的认知控制，在有意义的情况下使用语言就会自动发展能力”（Carroll，1966，第102页）。换句话说，学习变成了习得。\n与语法翻译一样，课程从规则的解释开始，这通常是在外语环境中用学生的第一语言完成的。接下来是练习，这些练习旨在帮助学生有意识地练习规则。换句话说，监视器的使用得到了积极的推广。练习之后是标记为“沟通能力”的活动。该术语在文献中以多种方式使用；在认知代码文献中，它似乎与“流畅”同义。这些活动提供了在上面引用卡罗尔的话中提到的有意义的情况下的练习，包括对话、游戏、角色扮演活动等。\n 最佳输入的要求  可以理解。与语法翻译的情况一样，解释和练习部分将提供很少的可理解的输入，因为焦点始终是形式而不是含义。认知代码的“交流能力”部分有望提供更大量的可理解输入，但如果活动受到将“日常规则”置于情境中的愿望的限制，这种潜力就会减弱。正如第三章所述，这种做法限制了所使用的结构（这可能会导致学生无法获得他需要的i + 1 ），限制了可以讨论的内容，并扰乱了交流的自然性。 *有趣/相关。*当然，这取决于为交际能力部分选择的活动。然而，无论选择什么，目标仍然是学习特定结构，因此几乎不可能满足遗忘原则。 *没有按语法顺序排列。*认知代码，就像语法翻译一样，是有顺序的，当天的结构主导了课程的所有部分。 *数量。*由于交际能力部分，与语法翻译相比，认知代码中有更多的可理解输入。然而，它并没有达到课堂充满可理解的输入并完全关注信息的理想，因为交际能力部分只是课程的一部分，即使在这里，重点也在于形式。 *情感过滤级别。*对所有输出进行纠错是大多数认知代码课堂的一部分，学生应该立即进行生产，并且预计这种生产将是准确的。这预示着许多学生的过滤率很高。 *对话管理工具。*目前还没有宣布尝试提供这一点，但交际能力部分的某些活动很可能会提供其中一些工具。   学习  与语法翻译的情况一样，认知代码的假设是每个人都可以完成有意识的学习，所有规则都是可以学习的，并且有意识的知识应该随时可用。我们只能得出结论，认知代码鼓励过度使用监视器，除非一旦结构变得自动化，所有规则都会“消失”。\n 概括  认知代码应该比语法翻译提供更大量的可理解输入，从而提供更多的习得，但还远远不能发挥课堂的潜力。与语法翻译一样，学习被过分强调。\n4.直接法\r#\r\r“直接法”一词被用来指代第二语言教学的许多不同方法。我在这里将用它来特指 de Sauzé 的方法及其当前版本，即普契尼和哈梅尔的法语方法（参见*《Langue et Langage* 》），以及 Barcia 开发的西班牙语的类似版本。\n据我了解，以下是直接法的特点。首先，所有的讨论，所有的课堂语言，都是目标语言。这包括用于课堂管理的练习语言和教师谈话。该方法侧重于语法归纳教学。教学的目标是让学生猜测或找出语言规则。为了帮助归纳，教师提出一些有趣且有意义的问题，然后使用学生的回答来提供目标结构的示例。如果做得好，它可以给直接方法会话带来对话类的气氛。让我重复一下我最喜欢的早期论文中的例子（ Krashen ，1980），我的一位老师在直接法法语课上使用过这个例子。本练习的目的是教授连词“ bien ” que ”，并且它的存在要求以下动词是虚拟语气：\n老师：Fait - il beauaujour\u0026rsquo;dhui ？\n学生：不， Il ne fait pas beau ajourd\u0026rsquo;hui 。\n老师: Irez-vous 事后和加重;周末的海滩吊坠？\n学生： Oui , j\u0026rsquo;irai 事后和加重;周末海滩吊坠。\n老师: Irez-vous \u0026amp; agrave ;拉普拉日 比恩 qu\u0026rsquo;il ne fasse pas beau？\n学生： Oui , j\u0026rsquo;irai \u0026amp; agrave ;拉普拉日 比恩 奎勒 不\u0026hellip;\n我的老师将这个特殊的例子用于一个坚定的海滩游客，并且通常会尝试根据学生的兴趣定制问题。\n直接法坚持准确性，错误在课堂上纠正。经过上述几次交流后，当老师认为已经给出了足够的例子时，就会用目标语言讨论和解释该规则。\n(a )最优输入的要求\r#\r\r *可以理解。*直接法，坚持使用  了解目标语言，提供大量可理解的输入。与自然法的情况一样，整个时期都充满了目标语言的使用以及各种主题和结构的使用。\n *有趣/相关。*如上所述，我们试图让课堂上的语言使用引起学生的兴趣。然而，本课的目标是语法教学，正如前面所讨论的，这对可以讨论的内容施加了很大的限制。讨论总是有意义的，但很少是真正的交流。根据普契尼和哈梅尔的手册，诸如此类的句子：  埃斯特斯 阙 沃特雷 裤子 美东时间 老 欧 内夫？ (198)\nMangez-vous des胡萝卜？ (236)\n准备晚餐 沃特雷 家庭？ (237)\n埃斯特斯 阙 你 你 拉塞兹 每天的晨祷？ (297)\n建议帮助学生归纳各个语法点。与依赖情境化的其他方法一样（参见例如静默方式的讨论），所有讨论都嵌入语法点的要求使得这一要求很难满足。\n *没有按语法顺序排列。*直接方法是严格排序的，这扭曲了真实沟通的努力。 *数量。*如上所述，直接方法和任何课堂方法一样可以满足这一要求，用可理解的输入填充整个小时。 *情感过滤级别。*在早期阶段对语法准确性的坚持、纠错的使用以及课程的语法重点可能会导致除了最专注的监视器用户之外的所有人的焦虑和高度过滤。 *对话管理工具。*学生获得了在课堂上用目标语言进行互动的工具——他们很快就能与老师展开讨论并提出问题  关于语法。其中一些会话能力，或者更好的“课堂能力”在外面会很有用，但有些则不会。没有明确的目标是提供与更有能力的母语人士对话的工具。\n(二)学习\r#\r\r直接法假定有意识的控制对于习得是必要的，所有学生都可以随时获取有意识的语法知识。它要求从一开始就完全控制口语表达中的后期获得结构（例如性别），因此可能鼓励过度使用语法。\n(三)总结\r#\r\r与许多竞争对手相比，直接方法提供了更多的可理解输入。然而，它仍然是基于语法的，这限制了它提供真正有趣的消息的能力，并导致监视器的过度使用。据非正式报告称，直接法对于某些人群非常成功，尤其是那些对语言学习有内在动机并且认为有意识语法学习至关重要的学生。对于这些学生来说，语法的归纳学习本身就很有趣，并且提供了所有必要的兴趣。换句话说，语法是主题。 SLA 理论预测，习得来自于用于呈现语法的教师演讲。 （参见第四章的讨论，以及Krashen ，1980。）\n5.自然方法\r#\r\r自然法是由加州大学欧文分校的特雷西·特雷尔（Tracy Terrell）开发的，用于大学和高中的外语教学。虽然最初独立于“监控理论”而发展，但其后来的发展和阐述受到了本书中提出的第二语言习得理论的影响。该方法可以用以下原则来描述：\n Classtime主要致力于为习得提供输入。 老师在课堂上只讲目标语言。学生可以使用第一语言或第二语言。如果他们选择用第二语言回答，除非沟通受到严重损害，否则他们的错误不会得到纠正。 家庭作业可能包括正式的语法作业。批改作业时采用纠错方法。 课程的目标是“语义的”；活动可能涉及使用某种结构，但目标是让学生能够谈论想法、执行任务和解决问题。  (a )最优输入的要求\r#\r\r *可以理解。*自然方法课堂实践的全部目标是提供可理解的输入。 Natural Approach 教师利用现实、图片和学生先前的知识，使他们的演讲从第一天起就易于理解。 *有趣/相关。*对于外语课来说，这是一个严重的问题。自然的  该方法试图通过使用特雷尔术语“情感获取活动”（改编自克里斯滕森）来吸引学生的兴趣，鼓励学生讨论个人感兴趣的话题（例如“假设你是一个名人，并且有一篇关于你。至少讲述文章中提到的关于你自己的一件事\u0026hellip;\u0026hellip;”）。在自然法的早期阶段，课堂讨论的重点是个人信息，目标是建立集体感觉。随后，学生们讨论他们过去的历史，最终他们能够谈论他们对未来的希望和计划。\n *没有按语法顺序排列。*课程的重点不是语法的呈现。某些结构在某些阶段有被更频繁使用的趋势，但没有刻意的排序。 *数量。*由于整个课堂充满了可理解的内容  输入，自然法和任何外语教学方法一样可以满足这一要求。\n *情感过滤级别。*由于自然方法试图保持输入假设的“真实性”，因此减少或消除了许多焦虑来源。在学生觉得自己准备好了之前，他们不必用第二语言进行创作。课堂上不会进行表格纠错。此外，还尝试讨论学生感兴趣的话题。与大多数其他方法相比，这预测的过滤强度较低。 *对话管理工具。*一些对话管理工具以非常简短的对话形式提供，旨在帮助学生与母语人士就可预测和常见的话题进行对话。此外，从一开始就向学生介绍有助于他们控制教师输入的短语和表达方式（例如“我不明白”、“_________ 是什么意思？”等） 。  (二)学习\r#\r\r自然方法的设计与已知的显示器功能一致。课堂上缺乏纠错是一种认识，即在使用有意识语法时存在限制：学生只能在家里、有时间、专注于形式以及知道时使用监视器，或者正在学习一条规则。在大学阶段，语法作业被分配给每个人，但可以想象的是，自然方法可以适应监视器使用的变化，为不足或最佳用户提供不同数量的作业或不同类型的作业。虽然对儿童进行的实验很少，但 SLA 理论预测，年龄较小的孩子不会从语法作业中受益，而年龄较大的儿童和青少年可能能够处理有限的数量。 （有关更多详细信息，请参阅 Terrell，1977。）\n(三)总结\r#\r\r自然方法刻意努力满足学习和习得的所有要求。根据 SLA 理论，它唯一的弱点是它仍然是一种课堂方法，对于一些学生来说，这阻碍了有趣和相关主题的交流（见下面的讨论）。\n6.总体身体反应\r#\r\r这种独特的方法由 James Asher 开发，并在他的许多期刊论文和书籍中进行了描述（Asher，1977a）。全面身体反应（TPR）基本上包括服从教练给出的涉及明显身体反应的命令。例如，老师说“站起来”，全班就站起来。随着课程的进展，命令变得越来越复杂，Asher 声称很有可能将大量语法嵌入到命令的形式中。学生只有在“准备好”时才说话，这通常发生在 10 小时左右的教学中，并且由学生命令组成。在典型的 TPR 课程中（如 Asher、 Kusudo和 de la Torre，1974 年所述），前几个月（本例中为 45 小时）将包括 70% 的听力理解（服从命令）、20% 的口语和 10% 的理解。 ％ 读写。 Asher (1977b ) 列出了TPR 系统的三个原则：\n 延迟学生的言语，直到对口语的理解“已被广泛内化”（第1041页）。 “通过教师以祈使句的方式表达对口语的理解”（第 1041 页）。 “期望在理解口语的某个时刻，学生会表现出‘准备’说话”（第 1041 页）。 1 *  (a )最优输入的要求\r#\r\r( i )易于理解。 TPR满足这个要求。学生所需的总身体反应实际上是他对教师话语的理解的体现。事实上，可以说 TPR 对于第二阶段的理解或进步来说并不是必需的。\n* 上标数字指的是章节末尾的注释。\n140\n语言习得，但仅仅表明输入已被理解。 Asher 自己的研究支持这样的观点：TPR 的使用并不是必需的。对儿童（Asher，1966；Asher 和 Price，1967）和成人（ Kunihira和 Asher，1965；Asher，1965、1969）进行的一系列研究表明，仅观察 TPR 的学生与在测试中执行 TPR 的学生表现一样好需要 TPR。观察和执行 TPR 的两组学生的表现都优于在测试中写出答案的学生。这表明阿舍尔的第二条原则可能不是必要的，而可能只是一种有效的手段，可以让学生专注于输入并让他们积极参与。\n 有趣/相关。 TPR 技术的新颖性可能极大地提高了课堂体验的趣味性。然而，如果一个人坚持 100% 时间产生命令的要求，那么可能很难保持兴趣（亚瑟没有推荐这样做）。 *没有按语法顺序排列。*根据Asher的描述，每节课在TPR中确实都有语法重点。换句话说，命令将各个语法点置于上下文中。如前所述，这可能会阻碍满足上述要求 2 的努力。然而，TPR 方法本身并不需要注重语法。 数量。 TPR 可以用命令形式的可理解输入来填充整个课堂时间。因此它有可能完全满足这一要求。 情感过滤级别。 TPR 对降低学生焦虑做出了一项非常重要的贡献：在学生自己决定准备好之前，不会要求他们用第二语言进行创作。换句话说，他们被允许一段沉默期。 Asher 没有明确说明 TPR 中是否需要对早期学生输出进行纠错；这可能因老师而异。有人指出，  然而，立即产生明显的身体反应的必要性可能会引起一些学生的焦虑。\n 对话管理工具。 Asher 的论文中没有明确提及这一点。  (二)学习\r#\r\rTPR的假设是语法将通过归纳学习，即学生将在课堂活动中找出规则的正确形式。就本书提出的理论而言，这可以解释为声称大部分语法将在归纳学习的技术意义上获得和/或归纳学习。 （有关归纳学习和习得之间差异的讨论，请参阅第四章。）对听力理解和言语延迟的强调本身就可以防止有意识学习的误用：学生往往不会以不恰当的方式监控自己的输出形式。如果生产需求较少，他们不会使用不适合监视器使用的规则。\n(三)总结\r#\r\r第二语言习得理论预测 TPR 应该导致大量的语言习得，并且不应该鼓励过度使用有意识的监控。 TPR 的使用确保了学生的积极参与，帮助老师知道话语何时被理解，还提供了上下文来帮助学生理解他们听到的语言。它可能无法完全满足有趣/相关的要求，首先，因为它是一种课堂方法，其次，因为连续使用祈使句和课程的语法重点所施加的限制。然而，它应该比音频语言和语法翻译等方法做得更好。\n7.建议百科\r#\r\r根据我在现有资料中读到的内容，保加利亚索非亚洛扎诺夫暗示学研究所举办的“经典”暗示百科课程包括以下内容。课程授予\n小组为单位，每次约 12 名学生，并且是密集型的，一个月内每天聚会四个小时。根据班克罗夫特（Bancroft，1978）的说法，每节四小时的课程由三个部分组成：\n  复习，通过传统的对话、游戏、戏剧等方式完成。它可能包括一些练习和纠错，但不包括使用语言实验室或模式练习。\n  新材料的呈现。新材料以基于学生熟悉的情况的对话形式引入。班克罗夫特指出，“新材料以某种传统的方式呈现，并有必要的语法和翻译”（第 170 页）。对话很长。根据 Bushman 和 Madsen (1976) 的说法，它们有 10 到 14 页。\n  Suggestopedia的“真正原创功能” （Bancroft ，第 170 页），并且本身分为两部分。第一部分，主动降神会，老师朗读对话，学生跟着课文进行深沉而有节奏的瑜伽呼吸。这些活动是协调的：“根据学生的呼吸，老师按照以下顺序和时间朗读语言材料：保加利亚语（L1 ）翻译（两秒）；外语短语（四秒）；暂停（两秒）。在朗读外语短语时，学生屏住呼吸四秒钟，查看文本的适当部分，并在心里重复给定的短语或 FL 中的词组。呼吸的保留或暂停可以极大地促进“（Bancroft，第 171 页）。\n第二部分被称为降神会的被动部分或转换部分，涉及音乐。\n  中心活动是教师“带着情感语调”朗读对话（Bancroft，第 171 页）。当演奏巴洛克音乐时，学生们“闭上眼睛冥想课文”。音乐选择是专门选择的，以有助于“放松和冥想的状态……这对于无意识地吸收语言材料是必要的” （Bancroft ，第 172 页）。\n洛扎诺夫方法的三个要素被认为对于系统有效运行至关重要：(1) 有吸引力的教室（配有软软材料）\n照明）和愉快的课堂气氛； (2)教师具有充满活力的个性，能够表演材料并激发学生学习； (3) 学生处于放松的警觉状态……”（第 172 页）。\n在Suggestopedia中，班级的每个成员都被赋予了一个新的名字和扮演的角色，“克服抑制”（第 170 页）。当我们根据获取的输入要求进行分析时，我们将在下面讨论其他Suggestopedia技术和态度。\n(a )最优输入的要求\r#\r\r *可以理解。*一些Suggestopedia程序是专门为帮助输入的理解而设计的。最初的对话是基于学生熟悉的情况，在第一部分中使用学生的第一语言在一定程度上是合理的，因为它可以帮助学生确认他确实理解了以目标语言呈现的文本（ Racle ， 1979 年，第 100 页）。 *有趣/相关。*对话主题的设计不仅具有内在兴趣，而且具有一定的实用价值并与学生的需求相关。渥太华公共服务委员会开设了一门旨在向加拿大讲英语的公务员教授法语的 Suggestopedia 课程，其目的是考虑学生的兴趣及其在办公室环境中的交际需求（公共服务委员会，1975 年） 。此外， Racle于 1979 年引用的诺瓦科夫 (Novakov ) 指出（并翻译成法语） ，“ LesContextesprésentées 松特 典型,雷勒斯,大陆 联合国消息和儿子 旅行体验的过程,很方便_ _ 勒尔 活动”（第 99 页）。 *过滤级别。*虽然Suggestopedia试图实现上面和下面讨论的其他目标，但它的主要重点和最大的明显成功就在这里。实际上， Suggestopedia的每个功能都旨在让学生放松、减少焦虑、消除心理障碍并建立信心。这里仅举几个例子：  教室的设计旨在创造“一个愉快而温暖的环境”（公共服务委员会，1975，第29页）。学生们坐在舒适的椅子上，围成一圈，以“鼓励非正式接触和自由自然的交流”（Bushman 和 Madsen，\n1976 年，第 17 页。 32）。人们认为，传统课堂“让人想起许多先前学习努力的挫折、失败和人为”（Bushman 和 Madsen，第 32 页）。\n特殊的呼吸练习的目标是提高精神警觉性和减轻紧张感。班克罗夫特报告说，除了瑜伽呼吸之外，美国对建议百科的改编还利用体育锻炼（伸展和弯曲）和“平静心灵的练习”来帮助学生达到所需的放松警觉状态。\n音乐也被用作降低焦虑和紧张的一种手段，并诱导放松的警觉状态，这被认为是第二语言习得的最佳状态（参见 Racle ，1980，第 73-74 页）。\n另一个关键建议想法是教师的行为。 Suggestopedia认为教师的“权威”非常重要（“是方法的一个组成部分，而不仅仅是教师的一个理想特征”； Stevick ，1980，第 238 页）。教师的行为旨在建立学生对自己习得第二语言的潜力和方法本身的信心；教师应该自信，但不要专横，实行严格的全面控制，但也要鼓励学生的主动性（有关精彩的讨论，请参阅Stevick ，1980，第2章和第18章）。\n *没有按语法顺序排列。*在第一个月的强化课程中，我们有意尝试包含一定量的语法（ Racle ，1978，第 95 页列出了法语涵盖的结构）。然而，情况似乎并非遵循严格的顺序。我读过的Suggestopedia上的所有作者都强调，从一开始，重点就是交流，对话似乎并不关注特定的语法点。根据布什曼和马德森的说法，“对话是围绕共同主题松散聚集的漫无目的的对话，涵盖了很大的领域，并且具有相当大的内置冗余”（第 33 页）。用我们的话来说， Suggestopedia似乎依赖于成功沟通所提供的语法结构网络。 数量。 Suggestopedia似乎也满足这个要求。虽然有一些第一语言的解释，但漫长而多样的对话在会议中占主导地位，既作为纯粹的输入，又作为第二语言交流使用的基础。 *对话管理工具。*这一点没有明确提及，但可能会被涵盖，因为对话试图做到现实。加拿大公共服务委员会课程中使用的文本显然是为了允许和促进公共服务办公室以及其他地方的对话而设计的。然而，没有明确提及为学生提供与更有能力的演讲者交谈所需的工具。  (二)学习\r#\r\r根据 Bushman 和 Madsen (1976) 的说法，“内容先于形式。准确的发音和语法将在适当的时候出现”（第 32 页）。虽然每节课的第一部分都有纠错和语法解释，但Suggestopedia中的语法使用显然不会干扰交流。\n(三)总结\r#\r\r虽然我试图将我所理解的Suggestopedia系统纳入我的模式，并且省略了Suggestopedia哲学的几个方面的提及，而其实践者无疑会认为这些方面非常重要，但Suggestopedia似乎非常接近于完全匹配最优输入的要求。洛扎诺夫可能会考虑调用超记忆或超级记忆，或者“消除暗示”限制的元素，用我们的话来说，是降低情感过滤器并允许潜意识语言习得系统满负荷或接近满负荷运行的条件。和效率。 Suggestopedia似乎也将语法放在了适当的位置。\nB. 应用语言学研究\r#\r\r现在我们尝试通过“应用语言学研究”对教学方法进行实证检验。我在第一章中将应用语言学研究定义为旨在解决实际问题的研究，或者\n不参考基础理论。应用语言学研究的一部分包括语言教学方法的实证比较，本节的目的是回顾这些研究的主要发现，以得出以下几点：\n  当语法翻译、认知代码和听说语言等旧方法相互比较时，我们看到\n很小，或者在功效方面没有差异。在一些研究中，认知代码显示出非常轻微的优势\n成人学生与听语学生相比，青少年学生没有差异。\n  对于新方法来说，数据并不像我们希望的那么丰富，但我们得到的结果与我们上一节的理论分析非常一致。较新的方法（例如总体身体反应）比旧方法产生明显更好的结果。\n  我们得出的结论是，我们认为旧方法之间几乎没有什么区别，因为它们都未能满足最佳输入的许多要求，并且过分强调有意识的学习。进行方法比较测试的新方法更好地满足了要求，并且也表现出优于竞争对手的效果。\n1.方法比较研究回顾\r#\r\r在直接进行研究之前，应该指出，课堂研究虽然经常产生有价值且有趣的数据，但不会产生“权威”数据。这是因为，在几乎所有情况下，许多“混杂变量”使我们无法得出这样的结论：一定是某种特定的治疗或方法导致了所获得的结果。在这里列出一些潜在的混淆可能会很有用。\n如果方法 A 的学生在成绩测试中比方法 B 的学生表现更好，假设他们一开始是平等的，那么造成这种差异的可能是*老师而不是实际的方法。*即使同一位老师教授两个班级，该老师也可能更喜欢其中一种方法而不是另一种，或者甚至可能更喜欢一个班级的学生！ A班可能是一大早上课，B班则在午饭后开始上课。于是，A班的同学们\n表 5.1。美国外语教学方法比较研究\n___________________________________________________________________________________\n学习方法 TL n 测试：口语 LC阅读 写作对方法的态度 _______________________________________________________________________________________\nScherer \u0026amp; GT, AL 德国130、150 第一年：AL AL GT GT AL\nWertheimer 二年级： nd AL和GT AL\nChastain \u0026amp; CC, AL 西班牙语51, 48 年 1: AL和CC CC\n沃尔德霍夫1 35, 31 第二年：AL nd ND ND\nMueller CC, AL 法语不是 CC CC 抄送 给予CC （较少辍学） ___________________________________________________________________________________\nAL = 听说\nGT = 语法翻译\nCC = 认知代码nd = 无差异\n1 包括 Chastain 和Woerdehoff (1968) 以及 Chastain (1970)。\n可能会更加警觉。 B 级可能位于运动场附近，会造成更多干扰。文本可能会有所作为。学生方面也可能存在选择偏差；有些人可能故意报读A班，因为他们知道它很“特别”。老师当然可以添加其他潜在的混淆。 （有关更多技术讨论，请参阅 Campbell 和 Stanley，1963 年。）\n许多方法论问题都可以减少。如果方法 A在许多研究中始终表现得更好，涉及不同学校的不同教室和许多学生，也就是说，如果 A 在使用各种措施的各种条件下确实优于，那么课堂实验的结果至少值得考虑，特别是如果它们与其他来源（例如第二语言习得理论）得出的结论一致。\n(a )美国的AL、GT、CC研究\r#\r\r表5.1总结了几种教学方法的比较，这些比较都持续了一两年。这些研究都涉及美国的外语教学，将听说系统与语法翻译（GT）或认知代码（CC）进行比较。\nScherer 和 Wertheimer (1964) 在一年后发现听语言 (AL) 和语法翻译 (GT) 之间存在一些差异，这些差异似乎反映了每种方法所强调的模式。这些差异在第二年后减弱，子测试的综合分数显示两种方法之间没有显着差异。结论是，学生往往在教学方法强调的那些领域表现良好。\nChastain 和Woerdehoff (1968) 以及 Chastain (1970) 在比较听说教学和认知代码教学后发现了类似的结果，一年后发现了一些差异，这些差异似乎可以追溯到所使用的方法中强调的那些技能，但没有差异第二年后。 Chastain (1970) 还指出，男性往往在 AL 部分表现更好，而女性在 CC 部分表现更好。我们稍后会回到这些有趣的发现。\nMueller (1971) 将他的研究限制为一年，比较 AL 和 CC\n教学。对于测试的技能，CC 课程表现出色，而 AL 课程的得分达到国家 (MLA) 标准。之前的研究结果迫使我们思考这种优势是否会在第二年保持下去。\n表 5.2 让我们了解一种方法相对于另一种方法的优越程度。显而易见的是，这两种方法都取得了一些进展。学生在课程结束时的表现比开始时要好。虽然差异有时很显着，但肯定不会很大。\n表5.2\n比较方法研究显示的优越程度（美国系列）\n____________________________________________________________________________\n听力\nMLA 合作测试：阅读1写作1比较。口语2\n____________________________________________________________________________\n铝 26 59 25 51\nCC 30 64 26 49\n____________________________________________________________________________\n1： 有利于 CC 的显着差异。\n2： 显着差异有利于 AL。\n来源：Chastain 和Woerdehoff (1968) 在大学西班牙语学习一年后进行的测试。\n(b ) GUME项目\r#\r\r第一组研究通过能力测试考察了一两年内的语言教学效果。另一组研究则侧重于较短时间跨度的特定结构。这些研究是 GUME 项目的成果，该项目研究瑞典的英语作为外语的问题。 GUME 项目研究总结于表 5.3。\nGUME 项目旨在将 AL 型教学与“认知”方法进行比较，后者与认知代码系统非常相似。我不会逐项展示他们的结果，而是尝试总结总体结果；感兴趣的读者可以参阅表 5.3 了解详细信息，或参阅研究本身（特别参见 von Elek和Oskarsson ， 1975 年，对成人研究的完整回顾）。\n150\n简而言之，GUME 项目发现他们所谓的“隐式”方法（类似于 AL）和“显式”方法（类似于针对青少年受试者的 CC）之间没有总体差异。对于成人受试者，发现显式方法更好一些。成人的差异具有统计学意义，但不是很大。\n埃莱克和奥斯卡森研究中的女性，这一发现与 Chastain (1970) 类似。 von Elek和Oskarsson 的研究中，有一个班级被描述为“语言智力”低于标准（von Elek和Oskarsson ，1975，第 29 页），据报道，他们比使用显式方法的其他班级遇到了更多的麻烦。\n除了显式方法和隐式方法的简单比较之外，von Elek和Oskarsson还比较了这些方法的各种组合。他们发现 IMEX（见表 5.3）优于单独的 IM；换句话说，为完全基于模式练习的方法添加一些语法解释是有帮助的（参见表 5.3 的脚注二）。然而，EXIM 并不优于 EX：在认知方法中添加模式练习并没有帮助。\n表 5.4 的目的是让读者了解 GUME 研究中针对成人受试者的显式方法所显示的优越程度。与上一节描述的美国研究的情况一样，差异并不大。显然，两个群体都取得了进步。\n2.方法比较的一些初步结论\r#\r\r学习\n总的来说，美国和瑞典的研究表明，他们研究的方法之间即使有差异，也只有很小的差异。无论采用何种方法，学生至少都会取得一些进步，这一结果在语言教学领域引起了两种不同的反应。 Stevick (1976) 注意到了隐含的矛盾，他以谜语的形式表述了这一点：\n“在语言教学领域，方法A是方法B的逻辑矛盾：如果A所声称的假设是正确的，那么B就行不通，反之亦然。然而\n表 5.3。 GUME项目研究比较教学方法\n___________________________________________________________________________________\n学习方法 学生材料 结果\n___________________________________________________________________________________\nOlsson, 1969 隐式1年龄 14 一种结构 无差异\nEX 瑞典语（被动）\n前英语\nLevin, 1972 内隐年龄 14-15 没有总体差异；\nEX 英语“高级”组在 EX 瑞典语 EX 瑞典语中表现出色\nLevin, 1972 隐式 13 岁 无总体差异；\nEX 瑞典语“能干”的学生表现良好\nEX 英语 和 EX 瑞典语，\n但能力较差\nVon Elek \u0026amp; IM 2成人 十节课 明确 明显更好\n奥斯卡森，EX n = 125\n1975年\nVon Elek \u0026amp; IM Adults同上EXPLICIT 明显更好\n奥斯卡森，前 N = 91\n1975年\nVon Elek和 IM 12 岁 同上 无差异，因为低\n奥斯卡森EX 表演之一\n1975 显式类\n___________________________________________________________________________________\n152\n表 5.3.\u0026ndash;续\n___________________________________________________________________________________\n学习方法 学生材料 结果\n___________________________________________________________________________________\nVon Elek \u0026amp; EX、IM、成人 4 节课程，EX 优于 IM；\nOskarsson , EXIM, IMEX 3 n = 277 2 结构 IMEX 优于 IM，\n1975 年 ，但并不重要；\nEX 优于 EXIM\n（未预测）\nVon Elek和 EX，IM，12 岁 4 节关于女孩倾向于顺从的课程\nOskarsson 、EXIM、IXEM n = 335 2 个成人模式结构\n1975 年 （见上文）但是男孩\n不_\n___________________________________________________________________________________\n1： IM =“隐式”（仅限模式演练）。 EX =“显式”（模式练习与解释相结合）。 EX 瑞典语 = 瑞典语解释。\nEX 英语 = 英语解释。\n2：IM =“结构化和分级模式练习，根据投射在班级前面屏幕上的情景图片进行\u0026hellip;\u0026hellip;没有明确的解释，与源语言的比较或翻译练习”（von Elek和Oskarsson ， 1975 年，第 16 页）。 EX =“向学生提供了有关正在练习的结构的句法特征的明确信息\u0026hellip;与瑞典语中的相应结构进行了比较\u0026hellip;语法是演绎式的\u0026hellip;在主要练习该结构之前给出了解释和指示正在研究中……练习大多是填空式或翻译式……没有进行任何模式练习”（von Elek和Oskarsson ，1975 年，第 16-17 页）。\n3：IMEX = 与 IM 相同，但添加了说明。 EXIM = 与 EX 相同，但增加了口腔模式练习。\n153\n表 5.4\n比较方法研究显示的优越程度（GUME项目）\n_________________________________________________________________\n小组测试 预测试 SD 后测试 SD 进度\n_________________________________________________________________\nIMA 26.94 8.61 33.00 9.31 6.06\n 23.75 7.64 27.53 7.79 3.78 5.86 3.40 9.40 4.16 3.54  前 25.71 6.61 36.59 9.17 10.88\n 21.82 5.19 29.18 8.14 7.36 5.65 3.28 11.84 4.39 6.19  _________________________________________________________________\n测试说明：\nA: 60 题：学生听口语对话。他们选择三个选项之一来填补上次交流中缺失的部分（不超过两个单词）。\nB：50项：描述为“普通多项选择测试”\n（第 66 页）\nC：20项：笔试生产；学生“填写不完整英语句子中的关键要素。每个句子的含义都通过完整的瑞典语等效词或治愈词来澄清”（第66页）。来源：Von Elek和Oskarsson (1972)。\n一位同事在 A 方面取得了优异的成绩，而另一位同事在 B 方面取得了优异的成绩。这怎么可能？”（第 104 页）。\n为了将这个谜题应用到比较方法研究的结果中，我们可以问，假设学习成为习得的认知方法如何能够给出与听说教学相媲美的结果，而听说教学的基础是我们通过条件反射和条件反射来学习语言的假设。习惯强化。\n在转向可能的答案之前，应该指出的是，人们有不同的反应：并不是每个人都看到了斯蒂维克所看到的矛盾。许多方法学家和教师简单地认为解决方案就是折衷主义，选择每个系统的某些部分，并相信答案必须在中间的某个地方。尽管这听起来很公正，但在我看来，这常常导致教师从每个部分中选择最差的部分，最不可能鼓励语言习得的部分：来自听说系统的模式练习，以及来自认知和语法的规则解释。翻译方法！\n在我的解释中，使用听说法、语法翻译和认知代码的方法比较研究的结果与上一节中提出的这些方法的理论分析非常一致：根据这种分析，这些方法都没有特别有效。鼓励潜意识语言习得的有效工作，尽管每一个都会提供至少一些，并且认知\n154\n方法将允许更多的学习。这预示着老年受试者和更“语言”的青少年在有效性上接近相似，并且认知系统表现出轻微的优越性。它还预测其他方法应该做得更好。不幸的是，我们没有所有较新方法的详细方法比较数据，但有一些可用，并且结果与此预测相当一致。\n3.最近的方法比较研究\r#\r\r我们现在转向涉及更新方法的研究，根据第二语言习得理论，比语法翻译、听语或认知代码有更好的成绩单的方法。我们没有对每种方法进行比较的详细报告，并且一些新方法从未经过测试。然而，已经进行的研究表明，那些提供更多习得所需输入并且“将语法放在其位置”的方法优于旧方法。\n(一)TPR系列\r#\r\r阿舍尔（Asher）在将他的方法进行实证检验方面做了彻底的工作。他将 TPR 与使用外语课程和第二语言课程、使用儿童和使用成人的其他方法进行了比较。这是一个简短的调查。\n成人 TPR 系列始于 Asher (1972)，它将 TPR 德语课程的学生与“标准”大学课程的对照进行了比较。 Asher 报告说，仅接受了 32 小时的 TPR 教学后，TPR 学生在听力理解测试中的表现就超过了接受了 150 小时课堂教学的对照组，而在阅读和写作测试中则与对照组持平。亚瑟的学生进步速度快了近五倍！这与旧的比较方法实验中观察到的非常小的差异形成鲜明对比，这些实验比较了听语、认知代码和语法翻译。\nAsher、 Kusudo和 de la Torre (1974) 将大学一年级学习西班牙语的 TPR 学生与 AL 对照组进行了比较。经过 45 小时的 TPR 教学后，学生的听力理解成绩超过了对照组（接受了 150 小时），并且在阅读测试（ Pimsleur西班牙语能力测试）中的表现与对照组相当。\n经过 45 小时的额外教学后，TPR 学生在西班牙语水平测试中的表现超出了第 50 个百分点，该测试是专为所有技能 150 小时的学生而设计的\nAsher (1977a) 将 30 名使用 TPR 的 ESL 学生与使用有声语言教学的对照组进行了比较，并报告说，TPR 学生的表现优于接受相同训练量（120 小时）但从更高级别课程开始的对照组。\nTPR 研究也以儿童为受试者进行。 Asher（1977b）实际上是三个实验合二为一，所有实验都涉及五年级到九年级的西班牙语作为外语。在实验一中，将六年级的 TPR 班级以及由七年级和八年级学生组成的班级与九年级对照进行了比较。这些控件涵盖了类似的材料，但它们的教学重点是重复以及阅读和写作的正式教学，“强调西班牙语语法”。所有小组总共有40个小时的上课时间。所有 TPR 班级（总共七个不同的班级）都超出了书面作品测试的控制范围（受试者被要求根据漫画写一个短篇故事，并根据产生的有意义的表达的数量进行评分）。\n在实验二中，将五年级至八年级的九个小学 TPR 班级和一个成人教育 TPR 班级与七至九年级的两个对照班级进行了比较。这次，TPR 班只有 20 个小时的教学时间，而对照组则有 200 个小时的教学时间，与实验一中描述的类似。所使用的测试是“西班牙听力图片测试”，要求学生判断给定句子是否正确。或与图片相关的错误。除五年级外，所有 TPR 班级在 100 小时后的表现都优于对照组，而成人班级仅在 20 小时后，在 200 小时后的表现就优于对照组。使用阅读测试获得了类似的结果。\n在实验三中，对五年级和六年级的 TPR 班和对照班进行了流利程度测试的比较（例如，“写出尽可能多的西班牙语命令或句子……”）。两组的上课时间相同。 TPR 学生在两项流畅性任务上的表现均明显优于对照组。\nTPR结果清晰一致，TPR的优越性相当惊人。即使是没有被证明是优越的一个子组（上面实验 II 中的 5 级）也可以解释：TPR 的优势被以下事实所抵消：对照组\n年龄较大，而且，正如第二章中提到的，年龄较大的孩子获得速度更快（ Krashen 、Long 和Scarcella ，1979）。\n(二)其他输入法比较\r#\r\r人们已经进行了各种研究来检验 TPR 等方法的有效性，这些方法专注于提供可理解的输入，并且不强制早期生产。上一节中没有对这些方法进行分析，因为它们不是“标准”或广泛使用的，但它们强化了 TPR 的情况，以及允许静默期的方法比没有静默期的方法效果更好的假设，即使当直接测试“口语能力”时。\n加里（Gary，1975）对在五个月内学习西班牙语作为外语的儿童进行了研究。她的实验组在前 14 周内完全不说话，但必须做出“积极回应”以证明其理解力。此外，在接下来的七周的大部分时间里，他们都没有被迫说话。尽管对照组在口语方面有更多的“练习”，但实验组在听力理解方面优于对照组，而在口语方面则相同。\nPostovsky ，1974）让国防语言学院的学生参加为期 12 周的强化课程，每天 6 小时，在相当标准的视听课程中学习俄语。 “实验”小组在前四个星期内没有发言，但写下了他们的回应。四个星期后将两组合并。期中时，实验组在阅读、写作和口语测试中表现出色（特别是在“语法控制”和“朗读”方面），12周后，他们的听力理解能力明显更好。\nSwaffer和 Woodruff（1978）研究了德克萨斯大学一年级大学德语课程的效果。与刚才引用的研究的情况一样，他们的方法并不完全是本章第一部分中描述的任何标准方法，但它非常适合为习得提供最佳输入并将学习放在适当位置的要求。课程的前四个星期以 TPR 为基础，重点转向阅读“全球意义”（第 28 页）。在课程的前两周，学生根本不需要说德语，“此后，学生被鼓励在自愿的基础上说”（第28页）。此外，“公开更正\n初学者的制作错误保持在最低限度”（第 28 页）。通过使用放松练习和瑜伽呼吸，进一步鼓励低过滤强度。此外，“除了简短（五分钟）的问答在每个小时结束时，德语是唯一的教学语言”（第 28 页）。没有使用练习，唯一教授的语法是那些“被认为对听力和阅读理解至关重要的功能”（第 30 页）。因此，斯瓦弗和伍德拉夫的方法似乎提供了可理解的数量输入，使用鼓励较低情感过滤的技术，并且不鼓励过度使用监视器。\nSwaffer和 Woodruff 计划通过多种方式进行了评估，所有这些都清楚地表明该方法比其他方法有了巨大的改进。首先，与往年相比，更多的学生继续学习第二学期德语。其次，德语课程采用新的教学方式，得到了学生更好的评价。第三，完成课程的学生在现代语言协会阅读和听力测试中的表现远高于国家标准（70% 和 69%），最后，学生对自己能力的自我报告在我看来是惊人的：78% 的学生完成第一年学业的学生“表示相信他们至少在大部分时间能够阅读德语并掌握主要思想”（第 32 页）； 48% 的人表示，他们至少在大部分时间都能听懂德语。我不知道最后一个问题的控制数据，但根据经验，这些回答非常不寻常。 2\n(c )建议百科研究\r#\r\r虽然有报道称学生每天使用Suggestopedia学习 1000 个单词，但在正常的一个月强化课程中，学生学习的单词约为 2000 个。洛扎诺夫表示，“完成课程后，学生可以在自己的词汇能力范围内自由表达自己的想法，并可以阅读报纸和书籍。” （采访发表在Pravda上，重印在 Ostrander 和 Schroeder 上，1976 年，第 74 页）这些都是出色的成绩，但并不是超人——如前所述，这个月的课程相当密集，每天上课 4 小时，每周 6 天。一周，总共近100小时。仅就学时而言，这相当于大学一年多的学习时间。如果同学们确实可以\n洛扎诺夫的方法可能与其他“输入法”一样成功，例如斯瓦弗和伍德拉夫使用的方法，他们报告了类似的结果。\nBushman 和 Madsen (1976)在杨百翰大学进行的一项小规模研究中对Suggestopedia进行了实验测试。 （ Lozanov进行了广泛的实验，据报道证明了Suggestopedia相对于 AL 类方法的优越性。我无法获得这些研究的详细信息。有关非常批判性的评论，请参见Scovel ，1979。）杨百翰大学的六个不同课程，教授芬兰语作为一门外语，每个班平均有七名学生使用。两个对照班使用“完整”的Suggestopedia治疗方法进行教学，另外两个班则使用改良的治疗方法。修改后的Suggestopedia课程遵循了Suggestopedia的所有方面，但缺少音乐、安乐椅和“客厅环境”。他们在普通教室举行。每个班级接受 10 个小时的教学并涵盖类似的语言材料。为了控制教师效应，两名教师教授了所有三种治疗方法。\nSuggestopedia学生在词汇测试中的表现明显优于对照组，并且在“交流”测试中“大大优于”。 （在这项测试中，学生根据他们向母语人士传达信息的成功程度进行评分。）在语法测试或发音测试中， Suggestopedia课程和对照之间没有显着差异；这一结果支持了以下假设： Suggestopedia优于对照组，因为对照组以模式练习和重复练习的形式进行了更多的发音和语法练习。\n建议组和对照组之间测量的影响没有差异。这在某种程度上与加拿大公共服务委员会关于为期一个月的法语课程的报告相冲突。他们报告说，人们对语言学习的态度发生了变化（这里使用的“学习”是一般意义上的），甚至“人本身发生了真正的、彻底的改变”（第33页）。\n加拿大研究人员报告称，正如洛扎诺夫在建议百科中所主张的那样\n“学生发现了自己的新能力，意识到自己能够做什么，认识到自己的创造力和潜力的程度；他“发现了自己”，这给了他更多的自信和自信”（第 17 页）。 33）。用我们的话来说，他们开始意识到自己的第二语言习得能力的现实，以及这种能力在成年人中仍然非常强大的事实。\nC. 方法的替代方案\r#\r\r上一节试图展示几件事。首先，我们可以根据第三章中提出的最佳输入要求和第四章中提出的有意识语法规则教学标准来分析所有常用的课堂第二语言教学方法。其次，我们发现某些方法比其他方法更好地满足这些要求和标准。第三，有人声称，现有的应用语言学研究表明，那些在方法比较研究中表现出优越性的方法更接近于满足第二语言习得理论得出的标准。\n从这项调查和回顾中我们可以得出的结论是，没有一种教学方法，也没有一种明显是最好的方法。然而，有些方法显然比其他方法更有效，这里提出的主张是，任何成功的第二语言教学计划都适用相同的基本原则，即第三章和第四章中概述的原则。\n本节的目的是探索超越课堂方法帮助人们学习第二语言的方法。在接下来的部分中，我将回顾我所认为的课堂的基本功能，以及所有课堂方法固有的一些局限性。接下来，我将讨论语言教学中的一些可能性，这些可能性与我对课堂作用的看法是一致的，同时也绕过或避免了课堂方法中出现的一些问题。\n1.课堂的功能\r#\r\r很简单，第二语言或外语教室的作用是让学生能够开始使用外部环境。\n进一步习得第二语言的世界。正如第二章所述，这意味着我们必须为学生提供足够的可理解的输入，使他们的第二语言能力达到能够开始理解“外部”听到的语言、阅读和参与对话的程度。由于他们无法完全胜任，我们还需要为他们提供鼓励和规范投入的工具。\n换句话说，所有第二语言课程都是过渡性的，不能指望任何第二语言课程能够完成全部工作。正如第三章所讨论的，当学习者尚不具备理解外部提供的输入的能力时，第二语言课程最好被视为在早期阶段获得可理解输入的场所。\n2.第二语言课堂和要求#2\r#\r\r正如我们所看到的，许多较新的方法都做出了勇敢的尝试来满足第三章的要求#2，以提供真正有趣且相关的输入。自然方法试图通过关注个人主题、通过让学生自己发表意见来进行社区语言学习来做到这一点。关于如何解决谈论什么的问题，文献中还包含许多其他有用且有趣的建议： Stevick （1980）对第二语言学生使用诗歌的可能性进行了精彩的讨论，Winn-Bell Olsen（1977）则许多其他建议。\n然而，任何在第二语言课堂上满足要求 2 的尝试都存在两个基本问题。首先，某些人感兴趣的东西可能对其他人不感兴趣。斯蒂维克在他的诗歌实验中注意到了这一点：一位尝试诗歌的老师指出，对于她的学生来说，“诗歌不是他们的事；他们更喜欢政治”（第225页）。斯蒂维克还指出，一些学生可能会反对人文主义方法，例如社区语言学习，这种方法可以促进个人成长和第二语言习得：“有些（学生）\u0026hellip;\u0026hellip;会热切地接受‘人文’语言课程作为舞台，或者作为一种媒介，在其中寻找新的冒险，发现自己和他人，并且他们可以继续变得比以前更好。然而，他们中的其他人可能会认为语言课不是一个他们选择面对疏远或个人价值观的问题……他们可能只是想受到良好的教育……我们必须尊重这个决定”（第293页）。\n也许更根本的问题是，许多学生和教师将第二语言课堂视为人工语言环境，而不管其试图促进“真正的”交流。事实上，它是一间教室，并且该课程被称为“西班牙语”或“英语”，这一事实本身可能会破坏满足第二个要求的任何努力，并可能阻止学生完全专注于所讲内容的含义。换句话说，过滤器在某种程度上可能总是“向上”，许多学生永远不会对所说的内容如此感兴趣，以至于忘记了它是用第二语言写的。\n课堂还有其他一些与未能完全满足要求二无关的局限性。正如第三章所提到的，无论演示如何多样化，无论角色扮演活动中使用了多少种不同的情况，课堂实际上都无法提供第二语言真正能力所必需的各种第二语言使用。课堂也无法提供第二语言真正高级能力所需的输入量。当我们考虑教室的用途时，这些都不是真正的问题。如果学生能够过渡到现实世界，如果学生能够开始使用外部进行可理解的输入，那么就会提供数量和多样性。\n3.其他选择\r#\r\r我们将在接下来的章节中研究一些可能的替代方案和补充，并且像我们之前对语言教学方法所做的那样，根据第二语言习得理论的预测对其进行分析，并调查有哪些经验证据可以证实这些方法方法是有效的。我们将首先看看第二语言课堂的一些非常明显的补充活动、对话（真实的事情，与目标语言的母语人士）和快乐阅读，然后转向一些在某些情况下取得真正成功的想法和计划这可以扩展到其他情况。\n(一)对话\r#\r\r在做出“与母语人士对话”有利于第二语言习得的预测之前，我需要以有限的方式定义对话：这里的对话仅指与有动机尝试帮助第二语言习得者理解的母语人士的互动，以及谁真正对收购方感兴趣。换句话说，如果有必要，可以与“外国人谈话”，以及与真正的或潜在的朋友、商业伙伴等进行对话。\n我们不会试图证明这种对话对有意识的学习有任何影响。只有当对话伙伴是语言老师和/或习得者是一位极其有天赋的归纳学习者时，才有可能。然而，事实似乎确实如此，以这种方式定义的对话对潜意识习得具有最大的影响。以下分析表明，对于大多数外行人来说，这是完全显而易见的，即与有兴趣与您互动并试图帮助您理解他在说什么的人进行对话，有利于第二语言的习得。\n最佳输入的要求\n *可以理解。*如果意义能够成功协商，如果对话伙伴能够调整他的言语，使用语言外的信息和上下文，如果接受者有足够的语言能力并且可以调节输入的质量，那么对话中提供的输入将是可以理解的。 *有趣/相关。*在我们考虑过的所有方法中，对话最有可能满足这一要求。它最有可能完全专注于消息，并使获取者忘记输入是另一种语言。 *没有按语法顺序排列。*这个要求显然是满足的。 *数量。*对话当然有可能满足这一要求，具体取决于收购方的个人情况。 *过滤强度。*在与有同情心的母语人士自由交谈时，过滤强度应该较低。一般来说，形式上很少或根本没有纠错，大多数人并不像语言老师那样要求完美的准确性或完整的话语。谈话的主题当然是不可预测的，但通常比课堂上发生的任何事情都更有趣，这也将有助于降低焦虑水平和低过滤性。在自由对话中，一个可能引发紧张的因素是收购方有可能“陷入困境”，并且不理解对他说的话。如果他做好了准备，如果他拥有对话管理工具并且愿意使用它们，那么这就不是什么问题了。 *对话管理工具。*对话将使收购方有机会练习他所学到的工具，并可能为他提供获得新工具的最佳机会。  (b ) 阅读乐趣\r#\r\r与上一节中介绍的对话的情况一样，我将以特殊的方式定义“阅读”。我的意思不是精读、分析书面散文、阅读然后回答内容问题，或者阅读作为讨论或写作作业的准备。这里要分析的阅读类型很广泛，并且涉及学生为了乐趣而用其母语阅读的主题。这完全是自愿的。在进行快乐阅读时，读者可以选择跳过他们认为太困难或不太有趣的整个部分（例如小说中的详细描述）。他们甚至可以选择放下书或故事，读完几页后选择另一本书或故事。如果他们认为自己遵循了要点，他们可以跳过他们不理解的单词，当然，他们可以选择查找每个单词，如果这是他们的风格的话。\n换句话说，我们正在考虑纯粹的快乐阅读。读什么取决于学生以及他可以读到的内容。对某些人来说，它可能是悬疑小说，对另一些人来说，可能是科幻小说，对另一些人来说，可能是漫画书。唯一的要求是故事或主要思想是可以理解的，并且主题是学生真正感兴趣的，他会用他的母语阅读。\n我不会试图证明快乐阅读对学习有任何影响。正如上一节中的对话所做的那样，分析将仅限于愉悦阅读对习得的影响。\n最佳输入的要求\n *可以理解。*我们将快乐阅读定义为可理解的阅读，所以这里没有问题。然而，我想指出的是，快乐阅读是通过读者自己选择段落和文本以及拒绝太难的阅读材料而变得可以理解的。因此，快乐阅读的成功取决于读者是否愿意寻找适合他水平的材料并拒绝超出他水平的材料。 *有趣/相关。*这里定义的阅读根据定义是有趣且相关的，因为学生可以选择（必须行使）只阅读个人感兴趣的内容。 *没有按语法顺序排列。*除非学生坚持阅读专门准备的教学材料，否则满足此要求。 *数量。*阅读当然有可能满足这一要求。唯一的问题是实际问题：材料的可用性、成本和学生的时间。 *过滤级别。*如果学生能够找到易于理解且有趣的材料，那么这个要求就很容易满足。不会因难以理解的消息而感到沮丧，不会过早要求输出，也不会过早要求语法准确性。快乐的读者应该完全摆脱防御。 *对话管理工具。*如果阅读的文本包含一些对话，愉悦的阅读甚至可能有助于满足这一要求。  在这一点上，我想谈谈关于快乐阅读的个人观察。在过去的几年里，我一直在尝试提高我的法语水平，主要是通过阅读乐趣，这一尝试取得了成功。主要是通过输入，我的能力从“高级初学者”提高到“高级中级”。我对中级水平的定义如下：只需要母语人士进行一些“降档”即可轻松交谈，并且能够在没有字典的情况下阅读大多数文本，而不必知道每个单词。我现在不需要字典就可以阅读大量法语，甚至从中获得真正的乐趣。作为 Monitor 用户和对语言结构有着内在兴趣的人，我偶尔会看语法书（那些在高中时给我带来很多麻烦的书）。令我惊讶的是，我发现初级语法书末尾的阅读段落仍然给我带来麻烦！我发现它们比“原始”、未经编辑的法语、为母语人士编写的法语更难。 “教学”段落对中级学生来说更困难的原因是它们充满了虚拟语气、条件过去式、未来式 anterieur ，以及各种不常见的词汇！在阅读这些段落时，我发现它们很难理解，而且非常令人沮丧：这些主题甚至没有一点兴趣，当我遇到一个又一个我不认识的单词时，我感觉我的情感过滤器上升了。我意识到我在为二年级学生设计的课文上遇到了麻烦，这进一步加剧了我的挫败感！\n这一经验表明，我们的中级学生可能比我们的教学材料更容易找到真实的文本，出于兴趣和乐趣而阅读。此外，如果上述分析是正确的，那么自由的快乐阅读可能会导致更多的语言习得。\n对于那些反对语言课程阅读应仅限于经典、严肃文学的人，我只能说，阅读“文学”的能力将通过第二阶段高水平能力的发展而得到促进。语言。我个人同意那些认为大学语言教学的主要目标是研究第二语言文学的人的观点。然而，我不认为我们需要立即从严肃文学开始。花几个月的时间免费阅读更简单的材料可能是让学生明白要点的最快方法\n在那里他们可以用第二语言阅读伟大的文学作品，而没有严重的语言障碍。\n概括\n对话和娱乐阅读都有可能很好地满足获取最佳输入的要求。我们得出的结论是，用第二语言进行有趣的对话，以及出于乐趣而阅读一些东西，都是极好的语言课程。对于数以百万计仅使用这些“方法”获得语言并且学得很好的人来说，这并不奇怪。\n(c ) 使用主题进行语言教学\r#\r\r课堂教学的另一类替代方案涉及在第二语言课堂上使用主题，使用第二语言作为载体，作为演示和解释的语言。我所说的主题教学并不是所谓的沉浸式教学，即将第二语言学生与母语学生混合在一起。我的意思是为第二语言学生开设的特殊课程，没有以英语为母语的学生作为学生参加的课程，教师会进行一些语言和文化调整以帮助学生理解。\n在本节中，我们首先根据第二语言习得理论的预测，对学科教学进行熟悉的分析。与对话和愉悦阅读的情况一样，我们不会试图声称主题教学以任何方式有助于有意识的学习。然后，我们将转向主题教学的几个具体表现：加拿大和美国正在进行的成功的沉浸式课程，以及在第二语言情境中使用主题的一些未经尝试的可能性。\n最优输入的要求\n *可以理解。*主题教学只有在可理解的范围内才能用于习得。这意味着不同的科目可能对不同年级的学生更有用。  水平。 Cazden (1979) 指出，人们可以证明数学是在二语习得不完善的情况下进行教学的理想选择。词汇量有限，互动需求比其他一些学科少，并且需要大量的语言外支持来帮助理解。 （然而，她指出，复杂的“故事问题”可能对初级学生来说是一个障碍。）第二语言熟练程度较高的学生可以处理在时间和空间上更加移位的主题，这些主题提供的具体指涉较少，例如历史和文学。重点不仅在于第二语言学生可以在主题课程中生存，而且还在于他们将获得可理解的输入，这将有助于他们在第二语言方面取得更大的进步。\n可理解性要求反对沉浸，反对在第二语言习得者达到更高熟练程度之前将第二语言习得者与母语人士混合：母语习得者的存在确保中间习得者听到的很大一部分语言将无法理解。\n *有趣/相关。*主题可能并不总是有趣，但它是相关的。当学生专注于主题时，他们很可能会关注所呈现的语言形式。主题提供了一个很好的机会来满足“遗忘原则”，即学生如此专注至于所说的内容，他不知道是如何说的。 *没有按语法顺序排列。*这个要求也明显得到满足。事实上，很难想象主题教学不符合这一要求。这需要超越我们最疯狂的梦想的背景。 *数量。*显然，通过这种方式提供大量输入具有潜力。第二语言的主题教学自动达到了用可理解的输入填满整个课时的教学理想。 *过滤强度。*主题教学可能涉及，事实上  需要一定程度的焦虑。然而，如果信息是可以理解的，那么这种焦虑就不是针对其呈现的语言。学科教师可以通过以下方式使语言部分相对轻松并进行过滤：\n 确保消息的可理解性； 不要求过早生产； 不要求学生完全语法准确性。  主题第二语言教师可能会考虑需要较少语言表达的测试程序（简短的答案而不是长篇论文），以及考虑学生语言能力的课堂讨论程序（不纠正形式上的错误，甚至允许在实际情况下使用 L1） ，如自然方法中所示）。要记住的一点是，进一步的语言习得需要更容易理解的输入，来自老师的谈话和阅读，而不是来自生产的要求。\n(vi)*会话管理工具。*主题教学可能无法提供维持外部对话所需的工具，但它可以导致在另一种文化中学习和获得学术交流能力。在一个完全由移民和外国学生组成的班级中，教师可以意识到学术行为中的文化差异，并通过学习来教授课堂行为，以了解课堂行为的明显方面（教师进入房间时站立或不站立；什么样的行为）。交作业的纸张等）或获取，以了解更微妙的方面。\n概括\n因此，主题教学具有鼓励语言习得的全部潜力。这可能是一个很好的地方，需要指出的是，我所说的主题教学并不是指“特殊用途英语”或“学术目的英语”。据我了解，ESP 和 EAP 是标准语言教学课程，其教学大纲基于对学生将面临的任务和他们将需要的语言的分析（例如，参见 Robinson，1980） 。主题教学出现\n对我来说，这是根本不同的，尽管它可能满足 ESP 的许多设计目标。 ESP 需要对子领域的句法、词汇和话语进行详细分析，并将其制定为教学大纲并一点一点地呈现，而主题教学只关注主题、要学习的信息或技能，假设是大部分语法、词汇和谈话风格将与主题一起获得。 （这个想法对于 ESP 来说并非完全陌生；一些 ESP 课程强调“真实的活动”。例如，参见 Robinson，第 39 页； Widdowson ，在 Robinson，第 23 页中引用。）\n(d ) 主题教学的证据：沉浸式课程\r#\r\r浸入式双语课程已经证明了利用主题进行第二语言习得的可能性。在沉浸式课程中，最初单语多数儿童以少数语言接受教育（加拿大英语国家为法语；美国为西班牙语）。他们的学术科目完全用第二语言教授。在所谓的“完全早期沉浸”中，第二语言的输入从幼儿园开始。在孩子们接受了至少一年的第二语言教学之后，后期沉浸式课程可能会稍后开始。\n沉浸式项目在很多方面似乎都取得了成功。已发表的许多报告一再证实，沉浸式学生获得了高水平的第二语言能力（虽然他们可能达不到母语水平，但他们的表现优于上过标准外语课程的同龄人），他们取得了正常的进步在学校里，他们在学科方面的表现与单语者一样好，而且他们在第一语言发展方面并不落后于同龄人（有关评论，请参阅 Lambert 和 Tucker，1972 年；Swain，1974 年）。\nCohen 和 Swain (1976) 在许多其他类型的双语项目缺乏成功的情况下讨论了这些成功。在沉浸式项目与其他项目的差异中，沉浸式项目的这些特征可能有助于解释其成功。 Cohen 和 Swain 指出，在早期沉浸式教育中，“所有幼儿园学生在 L1 中都是单语的。本质上，成功的项目是从语言隔离开始的”（第 47 页）。如上所述，这增加了学生的机会\n获得可理解的输入，因为教师无法仅对母语人士评估他们的讲话，从而将第二语言习得者抛在后面。\n科恩和斯温指出了其他几个因素，用我们的话来说，这些因素导致沉浸式项目中的情感过滤较低。语言隔离“消除了学生对不太熟练的表演者的嘲笑”（第47页），教师有积极的期望，并且该计划是自愿的。此外，“在幼儿园，孩子们被允许用 L1 说话，直到他们准备好用 L2 说话”（第 48 页）。因此，允许一段静默期。\n需要强调的是，沉浸式体验并不能让这些学生达到母语水平，而且沉浸式学生的第二语言能力可能存在差距，特别是在休闲对话的互动能力方面。 （参见Conners 、Menard 和 Singh，1978，他们报告了沉浸式学生在这方面遇到的问题；另一方面，参见Bruck 、Lambert 和 Tucker，1974，关于沉浸式儿童在这方面可以做什么的报告。）认为这些差距的存在只是因为第二语言输入不包括来自同龄人的输入。沉浸式儿童仅在课堂上从老师那里听到第二语言。考虑到这一限制，他们的成就是显着的。\n沉浸式课程向我们展示了当社会和心理问题被消除或减少时，主题教学在语言上的可能性。他们提供了强有力的经验证据，表明只要输入内容易于理解，主题教学不仅可以教授主题，还可以教授其所用的语言。\n(e ) 主题教学的其他可能性\r#\r\r主题教学没有理由不能扩展到其他第二语言习得领域，并至少用来补充第二语言课堂，并为从语言课堂到现实世界的艰难过渡提供一些帮助。大学就是这样的领域之一。我将在这里讨论美国大学的情况，但这些原则可以推广到任何招收大量第二语言使用者的高等教育情况。\n几乎每所美国大型大学都有 ESL 课程。当然，他们的质量参差不齐，从优秀到不合格，但无论质量如何，我感觉外国学生都将他们视为障碍。此外，ESL 仅在理论和应用研究都认为不相关的级别上被认为是无关紧要的：即“中级”级别。许多外国学生在能够在正常班级中生存后就不再需要ESL，但善意的管理人员认为，为了外国学生自身的保护，他们的英语能力水平应该更高。\n应用研究证实，中级 ESL 并没有什么成效。第二章回顾了 Upshur (1968) 和 Mason (1971) 的研究，这些研究表明，当学生就读普通班级（仅包括该级别的学生）时，额外的 ESL 没有帮助。\n对于一些“优秀的语言学习者”（获得者）来说，这个问题的答案很可能是取消“ESL”要求或降低英语水平或所需的熟练程度。然而，对于其他人来说，这并不是最好的解决方案。 ESL 管理人员认为一些学生需要“更多”的感觉是相当真实和合理的。很多时候，学生只能在语言要求很低的课堂上生存，和/或他们最终严重依赖母语帮助，以文本或同学的形式。\n主题教学可能是这个“过渡”问题的部分答案。我的建议是，大学考虑为国际学生开设主题课程，国际学生实际上是“隔离”的课程，在外国学生可能入学的所有领域提供，并在自愿的基础上提供。此类课程将给予全额学分并涵盖常规主题。主要的区别在于学生可能不熟悉美国的学术实践。 3\n课堂上没有母语人士将有助于确保输入内容的可理解性，就像沉浸式输入比沉浸式输入更容易理解一样。课堂演示的复杂程度以及课外阅读的数量和复杂程度都将根据班级的语言水平进行调节。其他有助于理解的修改也是可能的：\n我们预计对学生产出的要求会降低，包括对错误的容忍度（随着时间的推移，其中许多错误将通过更易于理解的输入来消除）以及需要简短答案代替长论文的测试。\n国际课程不仅可以考虑并帮助消除语言缺陷，还可以帮助填补国际学生的其他知识空白。他们可以提供无焦虑或至少低焦虑的美国式教育的初步接触。学生将能够了解美国课堂风格行为的微妙之处，并了解其国家课堂上可接受的行为与美国大学所期望的行为之间存在的许多明显差异。换句话说，国际课程可以为学生提供一些课堂交际能力的工具。 4 5\n *新英格兰问题。*国际学生还可以向外国学生填写针对母语人士和美国学生的课程中预设的文化信息。南加州大学历史系的托马斯·贾布隆斯基（Thomas Jablonski）在过去三年里一直专门为国际学生教授美国历史课程，他向我指出，许多国际学生缺乏美国教授认为理所当然的信息。一个明显的例子是他发现他的许多学生并不清楚新英格兰在哪里，而这一信息对于特定的演示至关重要。像这样的信息差距并不明显，而且可能比比皆是。他们更有机会参加国际课程，因为国际课程鼓励学生提问，而教师的预设较少。 *ESL 在学科教学中的作用。*国际课程的建立并不意味着 ESL 的终结，尽管它可能会导致我们的 ESL 产品进行一些修改，并有望得到改进。  首先，虽然我们可以想象将主题课程“降低”到尽可能低的语言熟练程度，但我们可能总是需要在初级阶段开设第二语言课程。能力和指导（即可理解的）有多少是一个经验问题\n输入）在学生开始特殊主题课程之前是必要的，但在大多数情况下，一开始就需要普通课程。 6\n其次，正如第四章所讨论的，语言的许多方面是可以有意识地学习的，无论是“语法”（对大多数学生来说主要是形态学）还是话语（写作细节的有意识规则，包括标点符号和组织）。\n此外，很大一部分外国学生可能希望比课堂上能学到更多的英语，以促进参与美国的社交生活。专注于提供沟通能力和对话管理工具的中级课程对于具有更多综合倾向和/或计划在美国长期居留的学生非常有帮助。\n此外，ESL 教师可以发挥有用的作用，为教授国际部分的学科教师提供协助和咨询。\n图 5.2 展示了 ESL 部分和学术部分之间可能的交互的模式。\n图 5.2。大学国际学生课程的 ESL 和学术部分\n_______________________________________________________________________________\n水平 ESL 部分 学术部分\n_______________________________________________________________________________\n开始课堂语言教学，无\n关注普遍感兴趣的话题；大学简介\n生活\n中级选修课程\n 英语语法（监控）主题课程 文体学（可学习）（可选） 对话（见正文） 高级 无 主题的常规部分  物质课程_______________________________________________________________________________\n有关初级和中级级别之间过渡的建议，请参阅注释 6。\n(iii)*应用语言学研究的需要。*如果我只是断言上述国际学生计划是\n174\n对于我们在美国大学的留学生问题的“答案”，我会重蹈过去的覆辙，声称我们只需要查阅理论，就能得出正确的实践形式。回到第一章的信息，这还不够。至少需要用实证数据来回答以下问题：\n 国际班的学生会学到更多的英语吗？ 他们学习的科目是否与选择参加标准课程的人一样多？ 从长远来看，他们的学习是否会取得更大的成功？ 他们在学术环境中感到更舒服吗？  显然，这些问题的答案将具有理论和实践意义。\n(iv)*成人ESL 和主题。*美国的 ESL 专业已经在为美国成年移民设计的课程中尝试一种“成人教育”级别的主题教学形式。 （这是教师和管理人员不等待理论和研究，而是自己发现“有效方法”的另一个例子；有关讨论，请参阅第一章。）S. Brown（1979）描述了在洛杉矶进行的一项此类实验。\n虽然布朗学校的 ESL 教学的一部分是“更传统的语法导向”风格的课程，但学生们也会参加持续两到四个星期的涵盖“生活情境”主题的单元。例子包括使用社区服务（邮局、图书馆等）、消费者教育、就业（涵盖分类广告、职业介绍所、工会等）、家庭生活（例如结婚请柬、生日聚会等）、公民身份（例如交通和停车罚单、投票、税收等）以及其他“生活状况”。教师可以利用嘉宾演讲、电影、实地考察和商业材料来帮助学生了解新国家的“生活机制”。\n同样，与通常的情况一样，目前还没有证据证实此类程序的实用性。然而，第一章中介绍的程序的三个灵感来源中的两个，即第二语言习得理论和教师洞察力/直觉，预测这些程序除了具有明显的实用价值外，还将对语言习得发挥巨大作用，只要因为输入是可以理解的。 7\nD. 对成绩测试的评论\r#\r\r在本节中，我们将考虑第二语言习得理论对测试的影响。我将首先简要回顾一下我们通常认为与选择第二语言成绩测试相关的内容，以及我们选择的测试选项类型。正如之前描述语言教学系统的情况一样，这样做并不是为了提供新信息，而是为了建立一套共同的假设；因此，我假设您对第二语言测试的标准文献有一定的了解（例如 Harris，1969； Valette ，1977； Oller ，1979）。然后我将重点关注一个主要考虑因素，即Oller (1979) 所说的测试的“教学价值”，并建议如果我们认真对待测试的这一属性，第二语言习得理论就会严重限制我们在成绩测试选择方面的选择。\n1.测试评估和选择的一般考虑因素\r#\r\r有关测试和测量的标准文献告诉我们，好的测试需要满足一定的标准。它必须可靠，也就是说，它必须在不同条件下始终给出相同的结果。它还必须是有效的，也就是说，它应该真正测量它应该测量的东西。测试专家还建议我们确保测试实用、经济、易于评分且易于解释（Harris，1969，第 21-22 页）。哈里斯还建议我们考虑测试的表面效度，“测试对考生、测试管理员、教育工作者等而言的外观”（第 21 页），并指出如果测试看起来不一项有效的措施，无论现实中是否有效，学生和老师都不会认真对待。\n第二语言课程的教师和管理人员现在有多种测试可供选择。测试通常根据其使用的方式（阅读、写作、口语、听力）及其在离散点/综合连续体中的位置进行分类。离散点测试是尝试“一次将注意力集中在一个语法点”的测试（ Oller ，1979，第 37 页）。极端离散点测试需要至少了解包含测试项目的句子之外的上下文。这是离散点项目的示例：\n玛丽自 1960 年起在纽约__________。\n 活着 曾经住过 生活  另一方面，综合测试并不试图一次专注于语言的一个方面；根据Oller (1979) 的说法，“离散项目试图一次一点地测试语言知识，而综合测试则试图评估学习者同时使用许多位的能力，并且可能同时练习语言的几个假定组成部分。语法系统，也许不止一种传统上认可的技能或技能的各个方面”（第 37 页）。通常被认为是综合性测试的例子包括阅读理解、完形填空测试、听写、作文和口头交流测试。\n2.教学价值\r#\r\r我在这里只想集中讨论一种测试的一个方面，即成绩测试的教学价值，并仅提出一点。测试对课堂行为有巨大影响，需要选择测试来鼓励学生参与有助于他们获得更多语言的活动。教学价值标准可能比上面列出的标准更重要。\n简而言之，所选的测试类型对班级影响巨大。如果学生事先知道将用什么样的考试来衡量他们在课程中的成绩，他们自然会倾向于为考试而学习，而教师也会感到应试教学的压力。我建议我们利用这种自然趋势，选择能够鼓励学生做好准备的测试，而这本身就会导致更多的第二语言习得。 8\nJones（1979）给出了一个很好的例子来说明利用这种趋势的结果，他称之为“反冲”效应。在教授大学水平的基础德语课程时，他决定进行口语期中考试，一个简短的（五分钟）对话完成于 一对一的基础上。琼斯在这次测试中指出，他的学生中很少有人精通社交沟通领域：“当我向他们打招呼、询问他们过得怎么样或道别时，他们中的大多数人没有任何反应，但\n尽管他们在课堂上练习过这些协议，但还是发出了尴尬的笑声”（第 56 页）。\n这次期中经历对班级的影响是惊人的：“第一次口试后不久，助教告诉我，学生们要求在课堂上进行更多的口语练习。第二次考试时情况就大不相同了。他们在等待很明显，他们在很短的时间内为口语能力的提高付出了巨大的努力。这次测试不仅给了我关于他们的语言能力的重要信息，而且还对他们花时间进行了激励。更多的时间来培养这项重要技能”（第 56-57 页）。\n如果琼斯的口试未达到通常的可靠性标准怎么办？例如，如果评级是由几位评委做出的，而他们的评判者之间的可靠性未达到要求的水平，该怎么办？我建议，在某些情况下，强大的反冲洗效应可能足以弥补这个问题。\n我在这里所说的基本问题是，某些类型的测试中的练习并不一定会导致更多地习得第二语言。当根据可靠性和有效性进行判断时，这个因素消除了一些具有非常良好记录的测试。例如，没有证据表明在课堂上练习完形填空有助于学生掌握更多语言，或提高完形填空测试的表现。另一方面，有充分的证据表明，参与对话以及出于内容或乐趣而阅读确实有助于学生习得语言。对话练习提供可理解的输入，帮助学生获得与母语人士对话所需的工具，从而获得更多的输入和更多的语言习得。正如我们在本章前面所看到的，阅读内容也是一种获取满足最佳获取输入要求的输入的有效方法。\n我建议，成绩测试应该满足这个要求：准备测试或为测试而学习，显然应该鼓励学生做一些可以提供更容易理解的输入的事情，以及在课程结束时获得更多输入的工具。这大大减少了我们的选择，但从真正意义上来说，也简化了成就测试的任务。让我们首先看看这种哲学在外语测试领域可能产生什么后果。\n外语课程中的成绩测试试图评估学生是否满足特定课程的要求，有时还评估学生是否满足机构的语言要求。我将依次处理这些情况。\n对于外语课，我只看到两个选择。其中之一是相当传统的：\n阅读理解。如果学生事先知道他们将接受阅读理解测试，即要求他们阅读几篇短文并回答有关所读内容的一般性问题，他们就会被鼓励去阅读。我们将鼓励他们以最简单、最明显的方式准备考试，并寻找第二语言的阅读机会。只要他们知道他们会看到各种各样的文章（关于不同主题），并且只要问题集中在文章的“要点”上并且不依赖于一个特定的单词或结构，那么它肯定会是出于乐趣和兴趣而进行的一般阅读将为他们准备这样的测试。我们将鼓励教师提供易于理解的阅读材料，并鼓励学生走出课堂寻找补充材料。最重要的是，如果他们阅读，他们将获得更多的目标语言。\n阅读理解测试特别有用，因为购买或构建满足上述统计要求的测试通常没有问题。标准文献对构建阅读测试有许多建议（例如，参见 Harris，1969，第 6 章），并且可以轻松获得可靠性度量和各种类型的有效性度量。可以构建实用且具有明显表面效度的阅读测试。\n第二种测试更复杂，但是目前我没有看到其他有效的选择。我们需要的是一项鼓励学生参与对话的测试，这需要使用沟通能力的工具。许多标准口语测试都无法做到这一点。学生回答问题的测试不需要交互能力，学生简单说话甚至提问的测试也不需要交互能力。我们需要的是对对话管理的真正考验。\n我将尝试粗略地描述对话管理测试的样子：理想情况下，测试人员和学生都将参与有关真实事物的对话，该问题是\n必须解决，一个需要讨论的话题。其次，将根据学生管理对话和沟通的能力来评估，而不是语法准确性。例如，如果学生在找词方面遇到困难，导致他只能尴尬地沉默，那么他就会被降级。如果学生能够用适当的填充物“掩盖”问题（稍等一下……我想说的是……你怎么说……？），他不仅不会受到惩罚，反而会受到惩罚。因有能力让谈话继续下去而不失去发言权而获得评分！学生也会因礼貌和得体而获得好评，因为最少的这些知识对于成功的对话是绝对必要的。最重要的是，他们将因成功沟通、成功完成沟通交流而受到赞扬。能够让考官帮助他们的学生也会获得更高的评分，因为从长远来看，那些能够引出所需词汇并帮助母语人士为他们提供可理解的输入的学生将在第二语言习得方面取得更大的成功。 9\n可以预见，人们可能会对这样的测试计划提出反对意见。最明显的是，可以说，这样的测试，尤其是第二个测试，对语法准确性的发展没有任何帮助，只会鼓励草率的演讲，对语言采取自由放任的“一切都可以”的态度，并建立永久性的坏习惯。然而，第二语言习得理论做出了截然不同的预测：如果此类测试鼓励学生参与对话并培养管理对话的技能，他们将为语法准确性的发展做出巨大贡献。事实上，从长远来看，它们也许会比任何其他类型的测量方法更加准确！他们将为学生提供获得可理解的输入所需的工具，这反过来又会导致后续的语言习得和学期结束后的改进。\n会话管理测试很难可靠地评分，并且由于这种不可靠性，它可能无法达到可接受的有效性标准。培训评估者将很困难，也很难发明讨论的话题。尽管如此，它还是有希望刺激学生发展对话技能，使他们能够\n使用该语言，从而有助于确保学期结束后第二语言习得的持续进展。\n人们还可能会争辩说至少应该包括一些语法测试。正如第二章所强调的，我们并没有拒绝形式语法的教学。它有其作为监视器的用途，使用监视器时不会干扰通信。因此，它是教学计划的一部分。因此，我们是否也应该测试语法，以测试学生在有利于使用监视器的条件下监控其输出的能力？\n这一论点一度在我看来似乎有道理。特雷西·特雷尔（Tracy Terrell）向我提出了对语法测试的反驳，我认为他是对的：如果我们允许语法测试，它就会发展并很快主导测试项目，从而主导课程。虽然有限的语法测试与语法的有限作用是一致的，但教师和管理人员确实存在恢复旧方法并逐渐恢复专门测试语法的危险！\n3.语言要求\r#\r\r许多大学和一些高中仍然有语言要求。这通常表示为在给定时间（两到四个学期）内学习外语的必要性。然而，如果课堂的目标是让学生能够通过使用外部世界或课堂外的资源继续学习语言，这表明我们应该考虑测试学生，看看他们是否已经达到了这个级别：他们能否继续获得可理解的输入？探讨这一点的测试可能与上一节中提出的具有最大教育价值的测试相同：阅读理解和会话管理不仅是最适合学期末进行的成绩测试，而且也可能是最适合的测试。适当的离校考试。测试只问这些问题：学生能否很好地阅读第二语言，以便他可以阅读文本而无需过度查阅词典，也不会造成过度的痛苦，即无需纽马克所说的“密码分析解码” 。他能够与愿意提供帮助的母语人士进行有效沟通吗？\n当然，我留下了许多尚未解决的严重问题，例如要阅读和讨论的主题范围、同源语言（因此更容易理解）和更外来语言的熟练程度要求相同的问题，以及如何通过水平决心，决意，决定。一些应用研究最终可能有助于解决这些问题；然而目前，格式似乎很明确。\n4.大学级别 ESL\r#\r\r本卷中提出的第二语言习得理论对于大学水平的 ESL 测试这一难题并没有给出神奇而明显的答案。此类测试的目的是确定学生是否具备足够的英语能力以英语学习。众所周知，“反冲”效应多年来一直是该领域的一个问题：许多外国学生专门为托福考试而学习，并通过专门为此目的设计的课程来帮助他们做到这一点（参见 Wiggon 中的讨论， 1979）。\n应用我们之前使用的相同论点，强调测试的教学价值，我们得出的结论是，主题测试在这个级别上也将是有益的。这说起来容易做起来难。为国际学生设计所有学科的标准化主题测试成本高昂。正如前面几节所述，国际课程可能是朝这个方向迈出的一步，只要它们使用主题测试作为期末考试；学生能否摆脱 ESL 要求至少部分取决于他通过国际课程的能力。\nE. 材料上的一些差距\r#\r\r如果我们在本卷中得出的结论是正确的，则意味着我们的材料存在一些相当严重的缺陷。在列出我认为这些差距在哪里之前，让我首先指出，材料需要满足与方法相同的要求，如第三章和第四章所列。如果材料应该帮助学生习得语言，那么它们应该提供可理解的、有趣的/相关的输入，并且本身不按语法顺序排列，或者应该为学生提供获得此类输入的方法。如果材料旨在帮助语言学习，那么它们\n应侧重于可学习、可移植等规则。虽然学习材料可能受到批评，但我的印象是，不乏用于此目的的材料，并且当前的文本对于第二语言和语言的语言学习部分可能有用。外语课程。因此，我们将重点关注需要开发哪些类型的材料来鼓励收购。\n我希望新材料的设计能够满足基本需求，帮助初级和中级学生在课堂外获得可理解的输入。这对于外语学生来说是一个明显的问题，对于“异域”语言的学生来说尤其重要。这也是通用语言学生和第二语言学生面临的主要问题；初级水平的学生不具备与母语人士进行对话的能力，并且无法理解广播和电视或轻松阅读。除了课堂提供的输入之外，我们还需要材料来让学生能够利用外部世界。\n一种明显且方便的可理解输入来源是阅读。正如本章前面所讨论的，快乐阅读非常符合作为习得输入的要求。我们今天面临的问题是，为第二语言学生设计的读物不符合这些要求。当前可用的东西通常是不可理解的；正如前面提到的，许多外语学生遇到的唯一阅读是充满复杂词汇和语法的段落。它几乎总是按语法顺序排列的；作者小心翼翼地只包含学生应该已经学习或正在学习的语法。此外，根本没有足够的阅读量。\n第二语言学生需要大量可理解的、有趣的阅读材料，足够他可以每天晚上出于乐趣和/或兴趣阅读一小时，如果他愿意的话，可以持续几个月。\n当前的一些文本的方向是正确的，但它们在几个方面存在缺陷。\n 使用练习和问题来测试学生的内容并训练他们所使用的语法和词汇。当然，教师可以随意忽略这些练习，但它们常常占据读者的大部分页面。虽然可以说练习可以提供  学习，而文本提供习得，我认为尝试以这种方式将两者结合起来是危险的做法。首先，回答内容问题的必要性可能会破坏阅读的乐趣。其次，他们鼓励阅读更多形式而不是内容。\n读者中发现的许多练习背后的假设似乎是学生需要“复习”和“练习”新的词汇和语法，否则他们不会记住它。在我看来，这是一个自我实现的预言。通过较少的练习，学生可以阅读更多内容，并且有更好的机会在文本中遇到这些项目。通过过度的练习，我们可能会破坏学生为了快乐和对第二语言的兴趣而阅读的欲望，从而确保许多人实际上永远不会再看到新的结构和单词。\n 目前的读者根本没有提供足够的内容。部分问题在于其中包含练习，这占用了宝贵的空间。未来的读者将是厚重的、充满阅读量的、主题多样的。学生将能够选择他们的主题。为此，他们需要有很多选择。仅仅包括一个关于法国葡萄酒之乡的故事、另一个关于体育的故事和一个神秘故事是不够的。 最后，这类读者的作者需要摆脱每一行、每一段落都必须计数的幻想，并引入一些新的结构或词汇项。正如本书多次强调的那样，这种语法上的强调将严重扭曲任何编写感兴趣的内容的尝试。我们不必担心每一行。如果我们提供足够的可理解的输入，学生需要的一切都会在那里。  1.语言实验室\r#\r\r正如许多读者所知，应用语言学文献中对语言实验室的优点进行了大量的讨论和争论。在我看来，这不是实验室“好”或“坏”的问题，而只是它是否可以用来提供对习得有用的输入，从而补充我们在课堂和阅读中可以提供的内容。 。\n实验室不仅可以这样使用，而且看起来也是如此\n从技术上讲，使用实验室作为提供可理解输入的手段比用于其他目的要容易得多。语言实验室的传统使用给教师带来了巨大的技术和教学负担：教师需要监控学生的输出并纠正他们的错误。使用实验室作为可理解输入的来源会更容易。这里有一些可能性：录音故事，配有图片以帮助理解并增加乐趣，课堂式讲座，辅以讲义（关于真实主题，旨在补充国际课程，而不是关于化学或化学历史的随机方面的示例讲座）一个假装的王国）、广播节目、广告等。换句话说，是可理解的输入，带有简单的理解帮助。\n在我看来，实验室应该是一种资源，学生可以在方便的时候去获取有关各种主题的意见。实验室的旧观点以及警惕的教官不允许这样做。 10\n2.对材料现场测试的评论\r#\r\r这种稍微新的材料方法可能也需要一种稍微新的现场测试方法。我想我可以通过几年前与一家活跃于 ESL 和外语材料领域的出版社代表的对话来最好地说明这一点。他来找我是因为我们在语法结构习得顺序方面的工作（例如 Bailey、Madden 和Krashen ，1974 年； Krashen 等人。 ，1978；克拉申 等人。 ，1976年； Houck、Roberson 和Krashen ，1978a) 认为我们的工作以及其他研究人员所做的类似工作可能会给他的作者提供更好的顺序来供读者参考。他认为，为学生设计的读物需要对结构进行控制，这是一个既定事实，而我们的自然顺序研究将为此提供优越的基础。例如，第一本书将仅包含那些被发现是早期获得的结构，第二本书将在自然顺序上稍微靠后的位置添加这些结构，等等。\n我在本书中多次反对这种哲学。正如Stevick （1980）指出的那样，它导致了一种“语言上防腐且情感上贫瘠”的风格（第 203 页；另请参阅他的精彩讨论，\n第 203-204 页）。我向该出版商的代表提出了我反对这种方法的论点，并询问他的读者经历了哪种形式的现场测试。他的回应是，语言分析被认为是足够的：他的出版社为作家提供了指南，指出不同级别应包含哪些结构。如果提议的文本确实只包含这些结构，则它们被认为是有价值的并且已经通过了测试。他来见我的目的是按照自然顺序修改这本指南。\n这是开发和现场测试读者的另一种方法，该方法与本书阐述的理念一致。第一步是聘请真正有兴趣讲述或重述故事、对观众感兴趣并同情观众的作家。他们只是简单地写作，专注于故事，使用他们直觉上认为需要讲述的内容并使其易于理解（回想一下布朗给父母的建议，在第 65 页重复）。现场测试不是句法分析。这样做是为了回答以下问题：目标受众是否理解它？他们喜欢吗？他们觉得有趣吗？他们会自己阅读（而不是作为作业）吗？如果这些问题的答案是肯定的，第二语言习得理论告诉我们， i + 1将会存在，阅读在语言上是适当的，它将帮助读者习得更多的目标语言。\n我们可以将类似的标准应用于其他类型的材料，即之前推荐的实验室材料，以及旨在帮助教授主题的材料（参见注释 10）。它们可以理解吗？它们有趣/相关吗？等等_只有学生和语言习得者才能回答这些问题。\n我们也不要忘记所有材料都需要提出的明显问题：\n它们真的能提高目标语言的熟练程度吗？该理论预测，如果材料满足我们的要求，这种情况就会发生，但是，正如第一章所强调的，这还不够。应用语言学研究需要证实这一点。\nF、一些问题\r#\r\r即使这里提出的理论是完全正确的，并且我的应用建议实际上是适当的，但也有一些\n在结论之前需要提及的严重问题。这些都与教师和学生接受语言习得为首要，以及将可理解的输入作为鼓励语言习得的手段有关。这些问题是由于习得与学习在两个主要方面有所不同：习得缓慢且微妙，而学习快速且对于某些人来说是显而易见的。\n获取需要时间；在九个月的时间里，每周需要花费超过五个小时才能获得虚拟语气。事实上，这可能需要数年时间。另一方面，优秀的语言学家可以在很短的时间内有意识地学到很多东西。而且，当我们获得某些东西时，我们几乎没有意识到它。从某种意义上说，感觉好像它一直存在，任何人都可以做。学习就不一样了。有些人从学习和使用有意识的规则中获得巨大的乐趣，我就是其中之一！ “掌握”法语虚拟语气对我来说非常令人满意，每次我计划并说出诸如“Il faut”之类的句子时，我都会重新点燃这种胜利感。 阙 j\u0026rsquo;aille ”。像我们这样的人有时很难理解这种令人愉悦的活动并不是真正的语言习得。\n这导致了一个主要问题。语言课程和课本是由像我们这样的人设计的，他们学得很快，并从中获得满足（ Stevick 的“G 组”，第 253 页； Stevick ，1980）。然而，我们绝大多数的学生并不像我们那样对语言结构感兴趣，而是在别处寻找乐趣！\n但是，那些相信我们、只接受有意识的语法和练习作为语言课核心、并期望所有错误都得到纠正的学生呢？（参见 Cathcart 和 Olsen，1976 年） ？我只能推荐两种解决方案，一种是长期的，一种是短期的。如果这本书的要点是正确的，从长远来看，这些学生和他们的老师都会受到教育。然而，想法变化缓慢，需要一些短期解决方案。托尼·普范库什（Tony Pfannkuche）建议，其中之一是在语言教学计划中或之前开设一门关于语言习得的短期课程。我认为这是合理的，特别是如果我们将高中和大学的语言要求视为包括有关如何获得任何语言的技能和信息，而不仅仅是课堂上介绍的语言。另一种方法是欺骗，我个人在课堂上不会使用这种方法。我们可以教词汇或\n语法，而且只要是用目标语言完成的，就会发生大量的习得，媒介就是消息。我们可以进行情景教学，为学生提供有用的简短对话，满足学习和记忆语言的渴望，但同时提供可理解的输入。最后，主题国际课程还将为学生提供可理解的输入，无论他是否相信潜意识习得。\n我认为我对语言习得理论及其应用提出了保守的观点，保守是指它试图与我所知道的所有经验数据保持一致。这与历史上成千上万的人习得第二语言的方式是一致的，而且在许多情况下习得得很好。当他们专注于其他事情时，当他们获得有趣或需要的信息，或者与他们喜欢在一起的人互动时，他们获得了第二语言。\n笔记\r#\r\r  这些原则源自 Asher 认为的儿童语言习得的三个关键要素：\n 听后说：“听力理解可能为未来掌握口语绘制了蓝图”（第1041页）。 “……当成年人通过命令操纵婴儿的身体行为时，可能会获得对口语的理解……” “……听力技能可能会让孩子做好说话的准备……随着理解力的发展，孩子会自发地开始说出话语，达到说话的准备状态”（第 1041 页）。    虽然严格来说不是一个方法比较实验，但纽马克的最小语言\nNewmark (1971)中报道的大学外语教学教学计划引起了人们极大的兴趣。纽马克的学生一周的教学时间如下：与母语人士进行三个小时的对话；两个小时的泛读（“为了鼓励扫描和快速阅读，作业的长度故意长于学生的冷冻分析学习能力（10-20页） ，而阅读考试则故意鼓励快速粗略阅读”，第16页）；在实验室进行三个小时的对话工作；四个小时的“学习”型活动（传统语法的学习、普通语言学的阅读和讨论）。显然，前三个部分侧重于习得，会话部分和广泛的阅读作业提供了可理解的输入。纽马克报告说，他的学生在参加他的课程一年后，在阅读方面连续两年都达到了 MLA 的标准。\n  在某些情况下，国际课程不切实际或不可能。一个例子是基础科学的大型讲座。一种可能性是国际讨论部分和/或“讲座前”部分，其中解释困难的词汇，并提前讨论讲座的主题。\n  在某些情况下，国际课程不切实际或不可能。一个例子是基础科学的大型讲座。一种可能性是国际讨论部分和/或“讲座前”部分，其中解释困难的词汇，并提前讨论讲座的主题。\n  能够在讲座中做笔记。\n  能够在书面、文字材料上做笔记。\n  能够在时间压力下组织论文类试题并准确写作。\n  能够识别和理解客观类型测试问题中隐含的思维策略（第 79 页）。\n可以说，国际班为学习技能的获得提供了一个自然的教学大纲。上述需求以及需求调查未预测到的其他需求都将得到满足（示例见脚注五）。其次，国际学生可能不认为“学习技能”课程对他们的需求至关重要，也不认为对他们的教育计划有直接贡献（尽管施瓦贝指出，她在加州大学戴维斯分校的学生似乎对她的课程更有动力和兴趣） ESL 诊所比常规 ESL 课程）。它们可能只是学生追求自己的主要兴趣之前需要克服的另一个障碍。\n这种论证和推测需要辅以应用层面的研究，以确定最好的方法是单独的临床、单独的国际课程还是某种组合。\n  为了给出课堂/学术行为中易于学习的方面的具体例子，格洛丽亚·海勒（Gloria Heller）向我指出，她的几个 ESL 学生会在三环笔记本纸上交作业，并将环放在错误（右侧）的一侧（在我们认为是纸张的背面）。这个微不足道的错误可能会被解释为在常规课堂上马虎的表现，并且可能不会被纠正。它将在国际学生的课堂上得到预期或至少得到纠正，并且是一个简单、可学习的规则的好例子，它能带来真正的改变。使用纸张正确的一面可能不会使学生成为更好的学生或提高他对主题的掌握，但会影响他在老师眼中的形象。因此，“学习”课堂和学术行为的小方面可能与学习语言的后天获得的方面（第四章）具有相似的功能：它们对于交流可能不是必需的，但添加“润色”，通常会产生重要的装饰效果。\n  这是一个可能的夏季强化课程，适用于在自己的国家接受过几年正式英语教学但尚未准备好用英语进行学术工作的国际学生。该计划的目标是提供与学生的需求和兴趣非常相关且语言上可理解的领域的主题教学\n  课程作业，由学科教师教授。学生从包含以下课程的列表中选择课程：\n  数学复习，从代数到微积分。\n  计算机操作（不是编程） 。\n  美国消费者经济学（《西尔维娅·波特》），包括信贷、银行、购物策略等。\n189\n  英语语法（“语言欣赏”，或语言学） 。\n  供监控使用的英语语法。\n  一旦达到一定程度的流利程度，与经验丰富的外国学生（英语）和对同一学习领域感兴趣的母语人士进行讨论小组可以补充正式课程。\n我的预测是，这样的课程将比标准强化课程带来更多的英语习得，被国际学生认为更具相关性，并且对于促进学生在其专业领域的教育进步具有相当大的价值。\n    在有足够学生支持此类课程的地区，其他形式的主题教学也应在成人 ESL 中发挥作用，包括为移民或非英语母语人士开设的与工作相关的课程，以及感兴趣的主题，例如美国文学简介、美国体育、烹饪等。重点是，只要输入内容易于理解并且学生真正对该主题感兴趣，任何主题都会有效。\n  正如卡罗尔（Carroll，1980）指出的那样：“学生自然会调整自己的学习努力，以便在测试中取得最大成功，如果测试衡量的目标在某些方面与教学目标不同，学生就会努力实现目标“这些目标，而不太关注实现其他目标。外部考试的性质往往会影响教师本身的行为。我们有时抱怨教师除了‘为考试而教学’之外什么也不做”（第528页）。\n  我没有完全令人满意的主题可以表明是“真实的”并且提出了需要解决的实际问题。在加州大学伯克利分校（教育部）与 Karl Scheville 的“PEFL”项目的咨询会议中，我觉得我们已经接近开发一些项目。这是一个例子。考官和学生的情况如下：他们是兄弟姐妹，和一个大家庭一起住在一个小公寓里。所有的孩子共用卧室。大哥决定要一间自己的房间。需要召开家庭会议来决定该怎么做，因为如果兄弟得逞，其他家庭成员就会受到难以忍受的空间限制。考官和学生讨论情况，目的是向家庭推荐可能的解决方案。这个话题不是“真实的”，因为它是一个人为的情况，但在我们的排练中，我们发现可以激发一些有趣的来回讨论。\n  我之前提出的国际课程，即针对国际学生的主题课程的特殊部分，也可能受益于特殊材料。这些可能包括阅读难度稍低的领域的文本、现有文本的补充，以及如刚才提到的附有笔记的录音讲座。\n190\n  参考书目\r#\r\rALLWRIGHT, R. (1975) 语言教师处理错误的研究中的问题。 M. Burt 和 H. Dulay （主编）《*第二语言学习、教学和双语教育的新方向》。*华盛顿特区：TESOL。第 96-109 页。\nANDERSEN, R. (1976)波多黎各的功能性习得层次结构研究。论文在第 10 届 TESOL 年度会议上发表，纽约州纽约市，1976 年 3 月\nANDERSEN, R. (1978)第二语言研究的蕴涵模型。语言学习 28 ：221-282。\nASHER, J. (1965)总体身体反应策略：在学习俄语中的应用。国际应用语言学评论 3 ：291-300。\nASHER, J. (1966)总体身体反应的学习策略：回顾。现代语言杂志 50 ：79-84。\nASHER, J. (1969)第二语言学习的总体身体反应方法。现代语言杂志 53 ：3-17。\nASHER, J. (1972) 儿童第一语言作为第二语言学习的模型。现代语言杂志 56 ：133-139。\nASHER, J. (1977a)通过行动*学习另一种语言：完整的教师指南。*加利福尼亚州洛斯加托斯：Sky Oaks Productions。\nASHER, J. (1977b) 儿童学习另一种语言：发展假设。儿童发展 48 ：1040-1048。\nASHER, J. 和 Price, B. (1967)总体身体反应的学习策略：一些年龄差异。儿童发展 38 ：1219-1227。\nASHER, J.、KUSUDO, J. 和 DE LA TORRE, R. (1974) 通过命令学习第二语言：第二次现场测试。现代语言杂志 58 ：24-32。\nBAILEY, N.、MADDEN, C. 和 KRASHEN, S. (1974)成人第二语言学习中是否存在“自然顺序”？语言学习 21 ：235-243。\nBANCROFT, J. (1978) Lozanov方法及其在美国的改编。现代语言杂志 62 ：167-174。\nBIALYSTOCK, E. 和 FROHLICH, M. (1977) 课堂环境中第二语言学习的各个方面。双语工作论文 13 ：1-26。\nBIALYSTOCK, E. 和 FROHLICH, M. (1978a)听力语法测试：描述和含义。双语工作论文 15 ：15-35。\nBIALYSTOCK, E. 和 FROHLICH, M. (1978b) 第二语言学习中课堂成绩的变量。现代语言杂志 62 ：327-335。\nBIRKBICHLER, D. (1977) 沟通及其他。 J. Phillips（主编） *《语言联系：从课堂到世界》。*伊利诺伊州斯科基：国家教科书。第 53-94 页。\nBRIERE, E. (1978) 影响墨西哥本土儿童学习西班牙语作为第二语言的变量。语言学习28 ：159-174。\nBROWN, J. (1980)语素组相互作用的解释。论文于 1980 年2 月在加州大学洛杉矶分校洛杉矶第二语言习得研究论坛上发表。\nBROWN, R. (1973)*第一语言。*剑桥：哈佛出版社。\n191\n布朗，R. (1977) 简介。在 C. Snow 和 C. Ferguson（主编）《*与孩子们交谈》中。*纽约：剑桥大学出版社。第 1-27 页。\nBROWN, R.、CAZDEN, C. 和 BELLUGI, U. (1973)儿童语法从 I 到 III。 C. Ferguson 和 D. Slobin （主编） *《儿童语言发展研究》。*纽约：霍尔特·莱因哈特和温斯顿。第 295-333 页。\nBROWN, S. (1979) 生活情境：将社区资源纳入成人 ESL 课程。 CATESOL 临时论文 5 ：48-65。\nBRUCE, L. (1979)俄语作为外语的成人学生对语法语素的习得。南加州大学语言学系硕士论文。\nBRUCK, M.、LAMBERT, W. 和 TUCKER, GR (1974) 小学年级的双语教育：圣兰伯特项目和七年级。语言学习24 ：183-204。\n伯特，M. 和基帕斯基，C. (1972 *) Gooficon ：英文维修手册。*马萨诸塞州罗利：纽伯里之家。\nSuggestopedia的描述和评估——一种新的教学方法。 J. Fanselow和 R. Crymes （编辑）*关于 TESOL \u0026lsquo;76。*华盛顿：TESOL。第 29-38 页。\nCAMPBELL, D. 和 STANLEY, J. (1963)*研究实验和准实验设计。*纽约：兰德·麦克纳利。\nCANCINO, H.、ROSANSKY, E 和 SCHUMANN, J. (1975)以西班牙语为母语的人对英语辅助语的习得。对外英语教学季刊 9 ：421-430。\n卡罗尔，J. (1966)心理学理论和教育研究对外语教学的贡献。 A. Valdman （主编） *《语言教学趋势》。*纽约：麦格劳-希尔。第 93-106 页。\nCARROLL, J. (1967)语言专业大学毕业时达到的外语熟练程度。外文年鉴 1 ：131-151。\nCARROLL, J. (1980) 外语测试：持续存在的问题。载于 K. Croft（主编） *《英语作为第二语言的读物》。*马萨诸塞州剑桥：温思罗普。第 518-530 页。\nCATHCART, R. 和 OLSEN, J. (1976) 教师和学生对纠正课堂对话错误的偏好。 J. Fanselow和 R. Crymes （编辑）*关于 TESOL \u0026lsquo;76。*华盛顿；对外英语教学。第 41-53 页。\nCAZDEN, C. (1979) 双语教育的课程/语言环境。 E. Briere （主编）*双语环境中的语言发展。*加利福尼亚州波莫纳：国家多语言多元文化材料开发中心。第 129-138 页。\nCELCE-MURCIA, M. 和 ROSENZWEIG, F. (1979) 在 ESL 课堂上教授词汇。 M. Celce -Murcia 和 L. McIntosh（主编） *《英语作为第二语言或外语教学》。*马萨诸塞州罗利：纽伯里大厦。第 241-257 页。\nCHASTAIN, K. (1970)比较听说习惯理论和认知代码学习理论的方法论研究：延续。现代语言杂志 54 ：257-266。\nCHASTAIN, K. 和 WOERDEHOFF, F. (1968)一项比较听说习惯理论和认知代码学习理论的方法论研究。现代语言杂志 52 ：268-279。\nCHIHARA, T. 和 OLLER, J. (1978) EFL 的态度和熟练程度：对成年日语使用者的社会语言学研究。语言学习 28 ：55-68。\nCHOMSKY, N. (1965)*句法理论的各个方面。*剑桥：麻省理工学院出版社。\nCHRISTISON, M. (1979) 成人第二语言习得的自然排序。对外英语教学季刊 13 ：122。\nCLARK, E. 和 ANDERSEN, E. (1980) 自发修复：习得语言过程中的意识。儿童语言开发论文和报告。 16 ：1-12。\n克拉克，H. 和克拉克，E. (1977)*心理学和语言。*纽约：哈考特·布雷斯·约万诺维奇。\nCOHEN, A. 和 ROBBINS, M. (1976)评估中介语表现：选择错误、学习者特征和学习者解释之间的关系。语言学习 26 ：45-66。\nCOHEN, A. 和 SWAIN, M. (1976) 双语教育：北美背景下的“沉浸式”模式。对外英语教学季刊 10 ：45-53。\nCORDER, SP (1967)学习者错误的重要性。国际应用语言学评论 5 ：161-170。\nCROSS, T. (1977) 母亲的言语调整：选定的儿童听众变量的贡献。见 C.斯诺和 C.弗格森，《*与孩子们交谈》。*纽约：剑桥大学出版社。第 151-188 页。\nd\u0026rsquo;ANGLEJAN , A. (1978) 课堂内外的语言学习。 J. Richards（主编） *《理解第二语言和外语学习》。*马萨诸塞州罗利：纽伯里之家。第 218-236 页。\nDE VILLERS, P. 和 DE VILLERS, J. (1973) 儿童言语中语法语素习得的横断面研究。心理语言学研究杂志 2 ：267-278。\nDILLER, K. (1978)*语言教学争议。*马萨诸塞州罗利：纽伯里大厦。\nDULAY, H. 和 BURT, M. (1974) 儿童第二语言习得的自然序列。语言学习 24 ：37-53。\nDULAY, H. 和 BURT, M. (1975)发现儿童第二语言习得通用策略的新方法。载于 D. Dato （主编）《*发展心理语言学：理论与应用》。*乔治城大学语言和语言学圆桌会议。华盛顿：乔治城大学出版社。第 209-233 页。\nDULAY, H. 和 BURT, M. (1977) 关于语言习得创造力的评论。 M. Burt、H. Dulay和 M. Finnochiaro （主编）*关于英语作为第二语言的观点。*纽约：摄政王。第 95-126 页。\nDULAY, H. 和 BURT, M. (1978)口语熟练程度和优势评估的一些指南。对外英语教学季刊 12 ：177-192。\nDULAY, H.、BURT, M. 和 KRASHEN, S.*语言二。*纽约：牛津。在新闻。\nDUSKOVA, L. (1969)论外语学习中的错误来源。国际应用语言学评论 4 ：11-36。\nEKSTRAND, L. (1976) 年龄和居住时间是与流动儿童适应相关的变量，特别是第二语言学习。载于 G. Nickel（主编）*第四届国际应用语言学大会论文集。*卷。 3.斯图加特：大学 出版社，第 179-197 页。\nERVIN-TRIPP, S. (1973)第一年和第二年的一些策略。 A. Dil （主编） *《语言习得和交际选择》。*斯坦福：斯坦福大学出版社。第 204-238 页。\nERVIN-TRIPP, S. (1974)第二语言学习和第一语言一样吗？对外英语教学季刊 8 ：111-127。\nFABRIS, M. (1978)儿童第二语言学习者对英语语法函子的习得。对外英语教学季刊 12 ：482。\nFANSELOW, J. (1977)口语工作中错误的处理。外文年鉴 10 ：583-593。\nFATHMAN, A. (1975)年龄与第二语言生成能力之间的关系。语言学习 25 ：245-266。\nFATHMAN, A. (1979)语素顺序研究对于第二语言学习的价值。双语工作论文18 ：179-199。\nFATHMAN, A. (1980) 年龄和环境对第二语言口语能力的影响。论文于 1980 年2 月在加州大学洛杉矶分校洛杉矶第二语言研究论坛上发表。\nFELIX, S. (1980)正式教学对第二语言学习的影响。论文于 1980 年2 月在加州大学洛杉矶分校洛杉矶第二语言研究论坛上发表。\nFREED, B. (1980) 与外国人交谈与与儿童交谈：异同。 R. Scarcella和 S. Krashen （主编）*第二语言习得研究。*马萨诸塞州罗利：纽伯里大厦。第 19-27 页。\nGAIES, S. (1977)正式语言学习中语言输入的本质：ESL 教师课堂语言中的语言和交际策略。 HD Brown、C. Yorio和 R. Crymes （主编）《*英语作为第二语言的教学与学习：研究与实践的趋势》。*华盛顿：TESOL。第 204-212 页。\nGARDNER, R. 和 LAMBERT, W. (1972)*第二语言学习的态度和动机。*马萨诸塞州罗利：纽伯里大厦。\nGARY, JO (1975) 第二语言学习初始阶段的口语练习延迟。 M. Burt 和 M. Dulay （主编）*关于 TESOL \u0026lsquo;75：第二语言学习、教学和双语教育的新方向。*华盛顿：TESOL。第 89-95 页。\nGILLIS, M. 和 WEBER, R. (1976)日语儿童英语中句子形态的出现。语言学习26 ：77-94。\nHAKUTA, K. (1974)关于学习英语作为第二语言的日本女孩语法语素发展的初步报告。双语工作论文 3 ：18-43。\nHALE, T. 和 BUDAR, E. (1970) TESOL 课程是唯一的答案吗？现代语言杂志 54 ：487-492。\nHALL, E. (1959) *《无声的语言》。*康涅狄格州格林威治：福西特。\nB . (1979) 中介语的语内、语间和发展解决方案。论文发表于第五届斯堪的纳维亚语言学会议， Frostvallen ，1979 年 4 月。\nHAMMERLY, H. (1975)演绎/归纳争议。现代语言杂志 五十九：15-18。\nHANANIA, E. 和 GRADMAN, H. (1977) 英语结构的习得：英语环境中以成人为母语的人的案例研究。语言学习 27 ：75-92。\nHARRIS, D. (1969)*测试英语作为第二语言。*纽约。麦格劳·希尔。\nHARTNETT, D. (1974)认知风格和半球偏好与演绎和归纳第二语言学习的*关系。*加州大学洛杉矶分校英语系（TESL）硕士论文。\nHATCH, E. (1972)第二语言学习的一些研究。加州大学洛杉矶分校英语作为第二语言教学工作论文 6 ：29-36。\nHATCH, E. (1976) 外层空间的语言。论文发表于 UCLA-USC 第二语言习得论坛，秋季，1976 年。\nHATCH, E. (1978a) 话语分析和第二语言习得。 E. Hatch（主编） *《第二语言习得》。*马萨诸塞州罗利：纽伯里大厦。第 401-435 页。\nHATCH, E. (1978b) 简介。 E. Hatch（主编） *《第二语言习得》。*马萨诸塞州罗利：纽伯里大厦。第 1-18 页。\nHATCH, E. (1979) 谨慎应用。第二语言习得研究 2 ：123-143。\nHATCH, E.、SHAPIRA, R. 和 GOUGH, J. (1978)“外国人谈话”话语。 ITL：应用语言学评论 39-40 ：39-60。\nHAWKINS, J. (1978)*确定性和不定性：指称和语法预测的研究。*伦敦：克鲁姆·赫尔姆。\nHENDRICKSON, J. (1978) 外语教学中的纠错：最新理论、研究和实践。载于 K. Croft（主编） *《英语作为第二语言的读物》。*马萨诸塞州剑桥：温思罗普。第 153-175 页。\nHOUCK, N.、ROBERTSON, J. 和 KRASHEN, S. (1978)关于有意识语法的领域：纠正和未纠正的 ESL 学生转录的语素顺序。对外英语教学季刊 12 ：335-339。\nHOUCK, N.、ROBERTSON, J. 和 KRASHEN, S. (1978b)纠错过程中会发生什么。摘要提交给 1978 年 TESOL 会议。\n中介语语法变异中的暗示模式。语言学习 27 ：383-411。\nINHELDER, B. 和 PIAGET, J. (1958) *《从童年到青春期逻辑思维的成长》 。*纽约：基础书籍。\nJOHNSON, T. 和 KRUG, K. (1980) 综合性和工具性动机：寻找措施。 J. Oller和 K. Perkins（主编）的*语言测试研究。*马萨诸塞州罗利：纽伯里大厦。第 241-249 页\nJONES, R. (1979) 第二语言能力的表现测试。 E. Briere和 F. Hinofotis （主编） *《语言测试中的概念》。*华盛顿：TESOL。第 50-57 页。\nJORDENS, P. 和 KELLERMAN, E. (1978) 第二语言学习迁移策略的调查。论文于 1978 年 8 月蒙特利尔 AILA 会议上发表。\nKAYFETZ, J. (Fuller) (1978)*成人英语学习者作为第二语言的自然序列和监控序列。*博士论文。佛罗里达州立大学。\nKELLERMAN, E. 1978）让学习者休息一下：母语直觉作为可迁移性预测的来源。双语工作论文 15 ：59-92。\nKESSLER, C. 和 IDAR, I. (1977)越南儿童对英语句法结构的习得。论文在加州大学洛杉矶分校洛杉矶第二语言习得论坛上发表，1977 年。\nKLEINMAN, H. (1977) 成人第二语言习得中的回避行为。语言学习 27 ：93-107。\nKLIMA, E. 和 BELLUGI, U. (1966) 儿童言语中的句法规律。 J. Lyons 和 R. Wales（主编）*心理语言学论文。*爱丁堡：爱丁堡大学出版社。第 183-208 页。\nKOUNIN, T. 和 KRASHEN, S. (1978) 从两个不同的方向探讨母语者的能力。 C. Blatchford 和 J. Schachter （编辑）*关于 TESOL \u0026lsquo;78：EFL 政策、计划、实践。*华盛顿：TESOL。第 205-212 页。\nKRASHEN, S. (1976) 语言学习和语言习得中的正式和非正式语言环境。 TESOL 季刊157-168。\nKRASHEN, S. (1977)与监控模型有关的一些问题。 HD Brown、C. Yorio和 R. Crymes （主编）*关于 TESOL \u0026lsquo;77：英语作为第二语言的教学和学习：研究和实践的趋势。*华盛顿：TESOL。第 144-158 页。\nKRASHEN, S. (1978) 监视器使用的个体差异。 W. Ritchie（主编） *《第二语言学习原理》。*纽约：学术出版社。第 175-183 页。\nKRASHEN, S. (1980)简单代码在第二语言习得中的理论和实践相关性。 R. Scarcella和 S. Krashen （主编）*第二语言习得研究。*马萨诸塞州罗利：纽伯里大厦。第 7-18 页。\nKRASHEN, S. (1981)*第二语言习得和第二语言学习。*牛津：佩加蒙出版社。\nKRASHEN, S. (1982)纽马克的“无知假说”和当前的第二语言习得理论。未发表的手稿。\nKRASHEN, S.、SELIGER, H. 和 HARTNETT, D. (1974)关于第二语言学习的两项研究。批判 文学 3 ：220-228。\nKRASHEN, S. 和 PON, P. (1975)对高级 ESL 学习者的错误分析。双语工作论文 7 ：125-129。\nKRASHEN, S.、MADDEN, C. 和 BAILEY, N. (1975) 语法排序的理论方面。 M. Burt 和 H. Dulay （主编）《*第二语言学习、教学和双语教育》。*华盛顿：TESOL。第 44-54 页。\nKRASHEN, S. 和 SELIGER, H. (1975)正式教学的基本特征。对外英语教学季刊 9 ：173-183。\nKRASHEN, S. 和 SELIGER, H. (1976)正式和非正式语言环境的作用是成人第二语言学习。国际心理语言学杂志 3 ：15-21。\nKRASHEN, S.、SFERRLAZZA、V. FELDMAN, L. 和 FATHMAN, A. (1976) 成人在 SLOPE 测试中的表现：成人第二语言习得自然顺序的更多证据。语言学习 26 ：145-151。\nKRASHEN, S.、HOUCK, N.、GIUNCHI, P、BODE, S.、BIRNBAUM, R. 和 STREI, J. (1977) 使用自由言语的成人第二语言表演者的语法语素的难度顺序。对外英语教学季刊 11 ：338-341。\nKRASHEN, S.、BUTLER, J.、BIRNBAUM, R. 和 ROBERTSON, J. (1978) 关于语言习得和语言学习的两项研究。 ITL：应用语言学评论 39-40 ：73-92。\nKRASHEN, S. 和 SCARCELLA, R. (1978)关于语言习得和表现的惯例和模式。语言学习 28 ：283-300。\nKRASHEN, S.、ZELINSKI, S.、JONES, C. 和 USPRICH, C. (1978) 教学有多重要？英语教学期刊 32 ：257-261。\nKRASHEN, S.、LONG, M. 和 SCARCELLA, R. (1979) 第二语言习得的年龄、比率和最终成就。对外英语教学季刊 13 ：573-582。\nKUNIHARA, S. 和 ASHER, J. (1965)总体身体反应策略：在学习日语中的应用。国际应用语言学评论 4 ：277-289。\nLADO, R. (1964)*语言教学：科学方法。*纽约：麦格劳·希尔。\nLADO, R. 和 FRIES, C. (1958)*英语强化课程。*安娜堡：密歇根大学出版社。\nLAMBERT, W. 和 TUCKER, GR (1972)*儿童双语教育。*马萨诸塞州罗利：纽伯里大厦。\nLAMENDELLA, J. (1979) 1979 年 TESOL 夏季学院的讲座，加州大学洛杉矶分校，英语272K。\nLARSEN, D. (1975) 语法结构排序的重新评估。*关于 TESOL \u0026lsquo;74。*华盛顿：TESOL。\nLARSEN-FREEMAN, D. (1975)英语作为第二语言的成人学习者对语法语素的习得。博士论文，密歇根大学。\nLARSEN-FREEMAN, D. (1979)输入在第二语言习得中的重要性。论文发表于美国语言学会，洛杉矶， 1979 年12 月。\nLAWLER, J 和 SELINKER L. (1971)关于第二语言习得的悖论、规则和研究。语言学习。 21：27-43。\nLEE, R.、 McCUNE , L. 和 PATTON, L. (1970) 发音测试中不同反馈模式的生理反应。对外英语教学季刊 4 ：117-122。\nLENNEBERG, E. (1962) 在没有说话能力的情况下理解语言：案例报告。异常与社会心理学杂志 65 ：419-425。\nLEVIN, L. (1972)*外语教学比较研究。*斯德哥尔摩： Almqvist和Wiksell 。\nLIGHTBOWN, P.、SPADA, N. 和 WALLACE, R. (1980)教学对儿童和青少年 ESL 学习者的一些影响。 R. Scarcella和 S. Krashen （主编）*第二语言习得研究。*马萨诸塞州罗利：纽伯里之家。第 162-172 页。\nLIGHTBOWN, P.探索第二语言习得中的发展序列和教学序列之间的关系。在 H. Seliger和 M. Long（主编） *《课堂语言习得和使用：新视角》中。*马萨诸塞州罗利：纽伯里大厦。在新闻。\nLoCOCO , V. (1975)对西班牙语和德语学习者错误的分析。双语工作文件 7 ：96-124。\nLONG, M. (1980)*输入、交互和第二语言习得。*博士。论文，加州大学洛杉矶分校。\nLUKMANI, Y. (1972) 学习动机和语言能力。语言学习 22 ：261-273。\nMACHA, D. (1979) 非母语学生一年级英语作文的阅读理解。对外英语教学季刊 13 ：425-427。\nMaCNAMARA , J. (1972) 婴儿语言学习的认知基础。心理评论 79 ：1-14。\nMAKINO, T. (1980)*日本青少年英语语素的习得顺序。*东京：筱崎少林出版社。\nMASON, C. (1971)英语作为外语的强化训练与大学生的相关性。语言学习 21 ：197-204。\nMILON, J. (1974)第二语言学习者英语否定的发展。对外英语教学季刊 8 ：137-143。\nMINOURA, Y. (1979)通过多变量分析检验文化适应在第二语言习得中的作用。论文发表于 TESOL 夏季会议，加州大学洛杉矶分校，1979 年 7 月。\nMUELLER, T. (1971)两种学习模型的有效性：听说习惯理论和认知代码学习理论。 P. Pimsleur和 T. Quinn（主编） 《*第二语言学习心理学》 。*剑桥：剑桥大学出版社，第 113-122 页。\nMURAKAMI, M. (1980) 日语母语者的 ESL 进步的行为和态度相关性。 J. Oller和 K. Perkins（主编）的*语言测试研究。*马萨诸塞州罗利：纽伯里大厦。第 227-232 页。\nNELSON, J. (1980)*成人非正式第二语言学习者的语言系统。*博士论文，麦吉尔大学。\nNEWMARK, L. (1966) 如何不干扰语言学习。语言学习：个体和过程。国际美国语言学杂志 40 ：77-83。\nNEWMARK, L. (1971) 最小语言教学计划。 P. Pimsleur和 T. Quinn（主编） 《*第二语言学习心理学》 。*剑桥：剑桥大学出版社。第 11-18 页。\nNEWMARK, L. 和 REIBEL, D. (1973) 语言学习的必要性和充分性。在 M. Lester（主编） *《应用转换语法读物》中。*纽约：霍尔特·莱因哈特·温斯顿。第 220-244 页。\nNEWMARK, E.、GLEITMAN, H. 和 GLEITMAN, L. (1977) 母亲，我宁愿自己做：母亲言语风格的一些影响和非影响。在 C. Snow 和 C. Ferguson（主编）《*与孩子们交谈》中。*剑桥：剑桥大学出版社。第 109-149 页。\nOLLER, J. (1979)*学校语言测试。*伦敦：朗曼斯。\n西南部墨西哥裔美国人的社会语言学研究。对外英语教学季刊 11 ：173-183。\n自我报告的情感变量的方差来源。 J. Oller和 K. Perkins（主编） *《教育中的语言：测试测试》。*罗利·马：纽伯里之家。第 103-122 页。\nOLLER, J.、PERKINS, K. 和 MURAKAMI, M. (1980)与 ESL 学习相关的七种学习者变量。 J. Oller和 K. Perkins（主编）的*语言测试研究。*罗利·马：纽伯里之家。第 233-240 页。\nOLSSON, M. (1969)内隐和外显：应用心理语言学实验，评估英语作为外语的语法结构教学的不同方法。 GUME 报告#3，哥德堡教育学院。瑞典。\n奥斯特兰德 (OSTRANDER), S. 和施罗德 (SCHROEDER, L. )（编辑）( 1976) *ESP 论文。*纽约：矮脚鸡图书。\nOYAMA, S. (1976) 习得非母语语音系统的敏感时期。心理语言学研究杂志 5 ：261-285。\nOYAMA, S. (1978)敏感期和言语理解。双语工作论文 16 ：1-17。\nPATKOWSKI, M. (1980)第二语言语法习得的敏感期。语言学习 30 ：449-472。\nPAULSTON, C. (1972) 结构模式练习：分类。外文年鉴 4 ：187-193。\nPOSTOVSKY, V. (1974) 第二语言学习开始时口语练习延迟的影响。现代语言杂志 58 ：229-239。\n加拿大公共服务委员会，工作人员发展处，研究部，建议百科计划 (1975)使用建议百科方法的教学经验。加拿大渥太华。\n普尔塞尔， E.. SUTER , R. (1980) 发音准确性的预测因素：重新检查。语言学习 30 ：271-287。\nRACLE, G. (1979)心理学 深奥的知识 德尔朗日。中等的 4 ：91-110。\nRACLE, R. (1980)心理学 深奥的知识 德尔朗日。 （套房）。中等的 5 ：73-83。\nRAMSEY, C. 和 WRIGHT, E. (1974) 年龄和第二语言学习。社会心理学杂志 94 ：115-121。\nRAVEM, R. (1974)第一和第二语言学习者中wh问题的发展。 J. Richards（主编） *《错误分析：第二语言学习的观点》。*伦敦：朗文。第 134-155 页。\nREBER, A. (1976) 合成语言的内隐学习：教学集的作用。实验心理学杂志：人类记忆与学习。 2 ：88-95。\nRIVERS, W. (1968)*外语技能教学。*芝加哥：芝加哥大学出版社。\nRIVERS, W. (1979)外语习得：真正的问题所在。应用语言学 1 ：48-57。\nROBINSON, P. (1980) *ESP：特定用途英语。*牛津：佩加蒙出版社。\nSCARCELLA, R. 培养第二语言的会话能力。即将推出。\nSCARCELLA, R. 和 HIGA, C. 第二语言习得中的输入和年龄差异。 S. Krashen 、R. Scarcella和 M. Long（主编）《*第二语言习得中的儿童与成人差异》。*马萨诸塞州罗利：纽伯里大厦。即将推出。\nSCHACHTER, J. (1974)错误分析中的错误。语言学习 24 ：204-214。\nSCHACHTER, J.、TYSON, A. 和 DIFFLEY, F. (1976) 学习者的语法直觉。语言学习 26 ：67-76。\nSCHERE, G. 和 WERTHEIMER, M. (1964)*外语教学中的心理语言学实验。*纽约：麦格劳·希尔。\nSCHLUE, K. (1977)中介语的内部观点。载于 C. Henning（主编）*洛杉矶第二语言研究论坛论文集。*加州大学洛杉矶分校 TESL 系。第 342-348 页。\n舒曼，J. (1978a) *洋泾浜化进程。*马萨诸塞州罗利：纽伯里之家。\nSCHUMANN, J. (1978b)第二语言习得的文化适应模型，载于 R. Gingras ( Ed.)*第二语言习得和外语教学。*弗吉尼亚州阿灵顿：应用语言学中心。第 27-50 页。\nSCHUMANN, J. (1979)西班牙语使用者对英语否定的习得：文献综述。 R. Andersen（主编）《*西班牙语和英语作为第一和第二语言的习得和使用》 。*华盛顿：TESOL。\nSCHUMANN, J. (1980)第二语言学习者对英语关系从句的习得。 R. Scarcella和 S. Krashen （主编）*第二语言习得研究。*马萨诸塞州罗利：纽伯里大厦。第 118-131 页。\nSCHUMANN, J. 和 SCHUMANN, F. (1977) 语言学习者的日记：第二语言学习的内省研究。 HD Brown、C. Yorio和 R. Crymes （主编）*关于 TESOL \u0026lsquo;77：英语作为第二语言的教学、研究和实践趋势。*华盛顿：TESOL。第 209-249 页。\nSCHWABE, T. (1978) 美国教育机构中 ESL 学生的生存英语。 CATESOL 临时论文4 ：79-87。\n斯科维尔 (T. SCOVEL) (1979)格奥尔基 Lozanov ：暗示学和暗示学概述。对外英语教学季刊 13 ：255-266。\nSELIGER, H. (1975) 语言教学中的归纳法和演绎法：重新审视。国际应用语言学评论 13 ：1-18。\nSELIGER, H. (1979)论语言教学中语言规则的本质和功能。对外英语教学季刊 13 ：359-369。\nSELIGER, H.、KRASHEN, S. 和 LADEFOGED, P. (1975) 第二语言学习中获得类似母语口音的成熟限制。语言科学 36 ：209-231。\nSELINKER, L. (1972)中介语 国际应用语言学评论 10 ：209-231。\nSHIPLEY, E.、SMITH, C. 和 GLEITMAN, L. (1969) 语言习得研究：对命令的自由反应。语言 45 ：322-342。\nSTAFFORD, C. 和 COVITT, G. (1978) 监测成人第二语言生产中的使用情况。 ITL：应用语言学评论 39-40 ：103-125。\nSTAUBLE, A. (1978)去克里奥尔化过程：第二语言发展模型。语言学习 28 ：29-54。\nSTEVICK, E. (1976)*记忆、意义和方法。*马萨诸塞州罗利：纽伯里大厦。\nSTEVICK, E. (1980)*教学语言：一种方式。*马萨诸塞州罗利：纽伯里大厦。\nSWAFFER, J. 和 WOODRUFF, M. (1978) 理解语言：专注于阅读。现代语言杂志 62 ：27-32。\nSWAIN, M. (1974) 加拿大各地的法语浸入式项目：研究结果。加拿大现代语言评论 31 ：117-129。\nTERRELL, T. (1977)第二语言习得和学习的自然方法。现代语言杂志 6 ：325-337。\nTUCKER, GR 和 SAROFIM, M. (1979) 调查埃及 EFL 学生的语言可接受性。对外英语教学季刊 13 ：29-39。\nULUN, J. 和 KEMPEN, G. (1976)第一语言在第二语言阅读理解中的作用——一些实验证据。*第四届国际应用语言学大会论文集。*斯图加特： HochschulVerlag 。第 495-507 页。\nUPSHUR, J. (1968)外语教与学关系的四个实验。语言学习 18 ：111-124。\nVALETTE, R. (1977)*现代语言测试。*纽约：哈考特·布雷斯·约万诺维奇。\n范纳尔森，M. (1981) 博士论文，南加州大学语言学系。\nVARVEL, T. (1979) 沉默之道：灵丹妙药还是白日梦？对外英语教学季刊 13 ：493-494。\nvon ELEK, T. 和 OSKARSSON, M. (1975)*外语教学中的比较方法实验。*教育研究部。蒙达尔（哥德堡）教育学院。瑞典。\nWAGNER-GOUGH, J. 和 HATCH, E. (1975)输入数据在第二语言习得研究中的重要性。语言学习 25 ：297-308。\nWALBURG, H.、HASE, K. 和 PINZUR RASHER, S. (1978) 英语习得是经验而不是年龄的递减函数。对外英语教学季刊 12 ：427-437。\nWHITE, L. (1977) 英语作为第二语言的成人学习者的错误分析和错误纠正。双语工作论文 13 ：42-58。\nWIDDOWSON, H. (1977)简化的重要性。第二语言习得研究1.\nWIGGIN, B. (1979) 对托福考试的评论。对外英语教学季刊 13 ：292-294。\nWINN-BELL OLSEN, J. (1977) *ESL 课堂的沟通启动和其他活动。*旧金山：阿莱梅尼出版社。\nWODE, H. (1976) 自然 L2 习得的发展序列。 E. Hatch（主编） *《第二语言习得》。*马萨诸塞州罗利：纽伯里大厦。第 101-117 页。\nYORIO, C. (1978) 第二语言使用者/学习者的自白。论文于 1978 年 4 月在墨西哥城举行的第 12 届 TESOL 年度大会上发表。\nZOBL, H. (1980a) 发育和转移错误；它们的共同基础以及（可能）对后续学习的不同影响。对外英语教学季刊 14 ：469-479。\nZOBL, H. (1980b) 接触引起的语言变化、学习者语言以及修改后的 CA 的潜力。论文在加州大学洛杉矶分校洛杉矶第二语言习得研究论坛上发表。\nZOBL, H. (1980c)第一语言的形式和发展选择性对第二语言习得的影响。语言学习 30 ：43-57。\n指数\r#\r\r适应 45-50\n成绩测试176-182\n习得（定义） 10 不是学习的结果 83-89 与归纳学习不同 113 特征 18\n情感过滤器 30-32、73-76、128、131、134、136、139、\n141-142、144-145、164、165、168-169\n43-45岁、95岁\n视听语言学129-132, 149-154\n回避51\n反冲洗效果 177-178、182\n“粗心”错误 86、99\n看门人讲话 22-24、64-65\n课堂，30、33-37、58-60 的角色\n认知代码 84、113、132-134、149-154\n对话 61, 163-164\n会话管理 44, 59, 61, 76-79, 129,\n131、134、135-136、139、142、164、165、169\n咨询学习 32, 126\n演绎学习 87, 113-115\n直接法135-137\n纠错 11、61、74-76、91-92、116-119、138、\n139 , 141\n“尤里卡”经历88\n曝光37-43\n外国人谈话 24, 60, 64-65, 163\n忘记原则 66、133、168\n第一语言的影响 27-28\n语法排序\n（用于获取）14、25-26、68-70、128、131、134、136、\n138、141、145、163、165、168 _\n（学习用）115-116\n语法教学 81, 88, 89, 112, 113-115, 119-121, 137\n语法翻译 127-129, 149-154\nGUME项目150-154\n沉浸式 170-171\n归纳学习 11, 87, 113-115, 132, 135, 142\n输入假设 20-30, 60\n中介语谈话24\n内化 81, 84\n学习（定义）10、16、83-124、129、132、134、137、\n139、142、187 _\n语言实验室184-185\n材料 182-186\n方法比较 147-160\n监测假设 15-20\n监视器使用 89-104\n自然方法 76, 117, 137-140\n自然顺序 12, 13, 14, 17, 101, 116, 124, 185\n输出 60-62、74\n愉快阅读 164-167, 183-184\n   输入数量 71、128、131、134、136、    138-139、141、163、165、168、184\n自我修正104-112\n静默期 26-27、71-72、81、157、171\n寂静之路126\n主题教学 167-175\n建议百科32, 142-146, 158-160 教师, 64-66 的功能\n教师讲座 24, 64-65, 137\n总体身体反应 140-142, 155-157\n过渡表格 14、51-52\n词汇80-81\n原文\n"}),a.add({id:66,href:'/life/docs/english_study/jkdy8dwywm/',title:"零基础如何开始着手学习英语",section:"英语学习",content:"只要你坚持学 哪怕不能一次性通过考试 但是你的成绩一定会进步的\r#\r\r观点1\r#\r\r心态要做好准备，单词是学英语的基础，学一门语言是循序渐进的过程），见效慢，不要总想着一夜之间就能背下所有单词、一个月就能把英语说成母语。保持平常心。我说汉语这么多年，有时候还是会写错别字呀~\n1.这个视频只适合真英语零基础的朋友，向他们提供一个可执行的自学英语。（零基础：不认识音标、看不进语法书，单词量很少）\n2.学习的次序：先背单词，有一定单词量后（两三个月即可），再学语法（看语法书的同时，通过练习题或阅读文章巩固能力）。也有人边阅读边学单词，但在我不认识单词的时候，阅读效率很低；在有单词基础后，阅读效率更高。\n3.是否看网课：可以先看着试试，如果发觉自己无法理解老师的话，还是回归到最基础的单词，先积累单词才能更好地理解课程讲解。（我在背完单词，看了一点点语法书后，再在B站看了一些语法视频，感觉效果更好）\n4.零基础的学生：以12月的四级/六级考试为目标，设定150-200个/天的单词，坚持到考前，如果有收获就继续下去。\n5.不要因为“害怕自己学不好、背单词总是记不住”的焦虑影响自己学习，记住一个单词都是收获。\n6.遵循记忆的客观规律：遗忘是正常的，短时记忆的内容要通过反复编码才能存入长时记忆，所以坚持复习，不要轻易终止。（背单词难的不是“单词”，难的是坚持）\n单词软件：扇贝单词（墨墨、百词斩都还可以）\n语法书：《赖世雄经典语法》（我在16年买的，现在封面换了。这本书讲得很细，起点很低，但“缺点”也是太厚啦！）\n文章阅读软件：扇贝系列的软件都不错（我也没用过别的）\n方法没有好坏，每个人的认知风格都不同，没有优劣之分，适合自己的才是最好的。但学习有一个原则：任何方法，必须执行、坚持执行才可以见效。\n观点3\r#\r\r 新概念英语1 和新概念2 也是重复学习反复复习  观点2\r#\r\r 着重点：从音标\u0026amp;单词开始； - 每天学习1~2小时； - 学习时常：1～2个月。  音标怎么练？  网上找音标视频or app； 熟悉音标，熟悉到看到一个陌生单词就能把它念出来。   词汇怎么练？  1.单独时间专门背单词；碎片化时间反复温习； 2.使用UP推荐的词根词缀去背单词 or 使用app背单词； 3.背单词时，最好边念边背，根据音节进行记忆，有辅助效果； 4.高频背单词(如一天复习个56次)，而不是长时间死磕在一个单词上； 5.生活中碰到不会的单词，记下来，拿回去背。身边软件改成英文版的。 6.推荐使用阅读记忆法。即可以巩固语法，也可巩固单词。        自己总结\n  不管什么方法都尽量去围绕 语音 单词 语法 这三个方面(前期)\n  大量的重复 一直坚持下去\n  不断的总结\n  第一步要么是强行被单词要么是把音标学得非常好 第二步要么是巩固单词要么巩固单词的基础上连带着巩固音标\n  "}),a.add({id:67,href:'/life/docs/c-plus/',title:" c++",section:"Docs",content:"目录\r#\r\r  基础语法\n  包管理/构建\n  "}),a.add({id:68,href:'/life/docs/javadir/thread/tool/semaphore_exchanger/',title:"Semaphore和Exchanger",section:"并发工具 ",content:"Semaphore\r#\r\r1、Semaphore 是什么\r#\r\r Semaphore 通常我们叫它信号量， 可以用来控制同时访问特定资源的线程数量，通过协调各个线程，以保证合理的使用资源\n  可以把它简单的理解成我们停车场入口立着的那个显示屏，每有一辆车进入停车场显示屏就会显示剩余车位减1，每有一辆车从停车场出去，显示屏上显示的剩余车辆就会加1，当显示屏上的剩余车位为0时，停车场入口的栏杆就不会再打开，车辆就无法进入停车场了，直到有一辆车从停车场出去为止\n 2、使用场景\r#\r\r 通常用于那些资源有明确访问数量限制的场景，常用于限流\n  比如：数据库连接池，同时进行连接的线程有数量限制，连接不能超过一定的数量，当连接达到了限制数量后，后面的线程只能排队等前面的线程释放了数据库连接才能获得数据库连接。\n  比如：停车场场景，车位数量有限，同时只能容纳多少台车，车位满了之后只有等里面的车离开停车场外面的车才可以进入\n  20辆小轿车 3个车位 当车停入车位算抢占成功到释放出车位完成一个完整动作 锁定的位数 必然使用车位才合理 餐厅能够容纳16个人同时吃饭 但是吃饭的人总数有200个人 同意锁定的位数 也必然是16个餐位\n 3、Semaphore常用方法说明\r#\r\racquire() 获取一个令牌，在获取到令牌、或者被其他线程调用中断之前线程一直处于阻塞状态。 ​ acquire(int permits) 从此信号量获取给定数目的令牌，在提供这些许可前一直将线程阻塞，或者线程已被中断。 acquireUninterruptibly() 获取一个令牌，在获取到令牌之前线程一直处于阻塞状态（忽略中断）。 tryAcquire() 尝试获得令牌，返回获取令牌成功或失败，不阻塞线程。 ​ tryAcquire(long timeout, TimeUnit unit) 尝试获得令牌，在超时时间内循环尝试获取，直到尝试获取成功或超时返回，不阻塞线程。 ​ release() 释放一个令牌，唤醒一个获取令牌不成功的阻塞线程。 ​release(int permits) 释放给定数目的令牌，将其返回到信号量。 hasQueuedThreads() 等待队列里是否还存在等待线程。 ​ getQueueLength() 获取等待队列里阻塞的线程数。 ​ drainPermits() 清空令牌把可用令牌数置为0，返回清空令牌的数量。 ​ availablePermits() 返回可用的令牌数量。 4、用semaphore 实现停车场提示牌功能\r#\r\r 每个停车场入口都有一个提示牌，上面显示着停车场的剩余车位还有多少，当剩余车位为0时，不允许车辆进入停车场，直到停车场里面有车离开停车场，这时提示牌上会显示新的剩余车位数\n   业务场景 ：\n  1、停车场容纳总停车量10。\n  2、当一辆车进入停车场后，显示牌的剩余车位数响应的减1.\n  3、每有一辆车驶出停车场后，显示牌的剩余车位数响应的加1。\n  4、停车场剩余车位不足时，车辆只能在外面等待。\n  public class TestCar { ​ //停车场同时容纳的车辆10  private static Semaphore semaphore=new Semaphore(10); ​ public static void main(String[] args) { ​ //模拟100辆车进入停车场  for(int i=0;i\u0026lt;100;i++){ ​ Thread thread=new Thread(new Runnable() { public void run() { try { System.out.println(\u0026#34;====\u0026#34;+Thread.currentThread().getName()+\u0026#34;来到停车场\u0026#34;); if(semaphore.availablePermits()==0){ System.out.println(\u0026#34;车位不足，请耐心等待\u0026#34;); } semaphore.acquire();//获取令牌尝试进入停车场  System.out.println(Thread.currentThread().getName()+\u0026#34;成功进入停车场\u0026#34;); Thread.sleep(new Random().nextInt(10000));//模拟车辆在停车场停留的时间  System.out.println(Thread.currentThread().getName()+\u0026#34;驶出停车场\u0026#34;); semaphore.release();//释放令牌，腾出停车场车位  } catch (InterruptedException e) { e.printStackTrace(); } } },i+\u0026#34;号车\u0026#34;); ​ thread.start(); ​ } ​ } } ​ 5、Semaphore实现原理\r#\r\r   Semaphore初始化    Semaphore semaphore=new Semaphore(2);   1、当调用new Semaphore(2) 方法时，默认会创建一个非公平的锁的同步阻塞队列。\n  2、把初始令牌数量赋值给同步队列的state状态，state的值就代表当前所剩余的令牌数量。\n  初始化完成后同步队列信息如下图：\n    获取令牌    semaphore.acquire();   1、当前线程会尝试去同步队列获取一个令牌，获取令牌的过程也就是使用原子的操作去修改同步队列的state ,获取一个令牌则修改为state=state-1。\n  2、 当计算出来的state\u0026lt;0，则代表令牌数量不足，此时会创建一个Node节点加入阻塞队列，挂起当前线程。\n  3、当计算出来的state\u0026gt;=0，则代表获取令牌成功。\n  源码：\n  /** * 获取1个令牌 */ public void acquire() throws InterruptedException { sync.acquireSharedInterruptibly(1); } /** * 共享模式下获取令牌，获取成功则返回，失败则加入阻塞队列，挂起线程 * @param arg * @throws InterruptedException */ public final void acquireSharedInterruptibly(int arg) throws InterruptedException { if (Thread.interrupted()) throw new InterruptedException(); //尝试获取令牌，arg为获取令牌个数，当可用令牌数减当前令牌数结果小于0,则创建一个节点加入阻塞队列，挂起当前线程。  if (tryAcquireShared(arg) \u0026lt; 0) doAcquireSharedInterruptibly(arg); } /** * 1、创建节点，加入阻塞队列， * 2、重双向链表的head，tail节点关系，清空无效节点 * 3、挂起当前节点线程 * @param arg * @throws InterruptedException */ private void doAcquireSharedInterruptibly(int arg) throws InterruptedException { //创建节点加入阻塞队列  final Node node = addWaiter(Node.SHARED); boolean failed = true; try { for (;;) { //获得当前节点pre节点  final Node p = node.predecessor(); if (p == head) { int r = tryAcquireShared(arg);//返回锁的state  if (r \u0026gt;= 0) { setHeadAndPropagate(node, r); p.next = null; // help GC  failed = false; return; } } //重组双向链表，清空无效节点，挂起当前线程  if (shouldParkAfterFailedAcquire(p, node) \u0026amp;\u0026amp; parkAndCheckInterrupt()) throw new InterruptedException(); } } finally { if (failed) cancelAcquire(node); } }  线程1、线程2、线程3、分别调用semaphore.acquire(),整个过程队列信息变化如下图：    释放令牌    semaphore.release();   当调用semaphore.release() 方法时\n  1、线程会尝试释放一个令牌，释放令牌的过程也就是把同步队列的state修改为state=state+1的过程\n  2、释放令牌成功之后，同时会唤醒同步队列中的一个线程。\n  3、被唤醒的节点会重新尝试去修改state=state-1 的操作，如果state\u0026gt;=0则获取令牌成功，否则重新进入阻塞队列，挂起线程。\n  源码：\n  /** * 释放令牌 */ public void release() { sync.releaseShared(1); } /** *释放共享锁，同时会唤醒同步队列中的一个线程。 * @param arg * @return */ public final boolean releaseShared(int arg) { //释放共享锁  if (tryReleaseShared(arg)) { //唤醒所有共享节点线程  doReleaseShared(); return true; } return false; } /** * 唤醒同步队列中的一个线程 */ private void doReleaseShared() { for (;;) { Node h = head; if (h != null \u0026amp;\u0026amp; h != tail) { int ws = h.waitStatus; if (ws == Node.SIGNAL) {//是否需要唤醒后继节点  if (!compareAndSetWaitStatus(h, Node.SIGNAL, 0))//修改状态为初始0  continue; unparkSuccessor(h);//唤醒h.nex节点线程  } else if (ws == 0 \u0026amp;\u0026amp; !compareAndSetWaitStatus(h, 0, Node.PROPAGATE)); } if (h == head) // loop if head changed  break; } }  继上面的图，当我们线程1调用semaphore.release(); 时候整个流程如下图  Exchanger\r#\r\r 类 Exchanger的功能可以使2个线程之间传输数据,它比生产者/消费者模式使用的wait/notify要更加方便\n 类定义\r#\r\rpublic class Exchanger\u0026lt;V\u0026gt; 类继承\r#\r\rjava.lang.Object ↳ java.util.concurrent.Exchanger\u0026lt;V\u0026gt; 当一个线程调用exchange方法后将进入等待状态，直到另外一个线程调用exchange方法，双方完成数据交换后继续执行\r#\r\r  exchange(v x)：阻塞当前线程，直到另外一个线程调用exchange方法或者当前线程被中断\n  exchange(v x, long timeout, timeunit unit)：阻塞当前线程，直到另外一个线程调用exchange方法或者当前线程被中断或者等待超时\n  举例\n  import java.util.concurrent.Exchanger; public class ExchangerDemo { public static void main(String[] args) { Exchanger\u0026lt;String\u0026gt; stringExchanger = new Exchanger\u0026lt;\u0026gt;(); ThreadA threadA = new ThreadA(stringExchanger, \u0026#34;线程A\u0026#34;); ThreadB threadB = new ThreadB(stringExchanger, \u0026#34;线程B\u0026#34;); threadA.start(); threadB.start(); } public static class ThreadA extends Thread { private Exchanger\u0026lt;String\u0026gt; stringExchanger; @Override public void run() { try { System.out.println(\u0026#34;当前线程\u0026#34; + getName() + \u0026#34;获取到\u0026#34; + stringExchanger.exchange(\u0026#34;a\u0026#34;)); } catch (InterruptedException e) { e.printStackTrace(); } } public Exchanger\u0026lt;String\u0026gt; getStringExchanger() { return stringExchanger; } public void setStringExchanger(Exchanger\u0026lt;String\u0026gt; stringExchanger) { this.stringExchanger = stringExchanger; } public ThreadA(Exchanger\u0026lt;String\u0026gt; stringExchanger, String name) { this.stringExchanger = stringExchanger; this.setName(name); } } public static class ThreadB extends Thread { private Exchanger\u0026lt;String\u0026gt; stringExchanger; @Override public void run() { try { System.out.println(\u0026#34;当前线程\u0026#34; + getName() + \u0026#34;获取到\u0026#34; + stringExchanger.exchange(\u0026#34;b\u0026#34;)); } catch (InterruptedException e) { e.printStackTrace(); } } public Exchanger\u0026lt;String\u0026gt; getStringExchanger() { return stringExchanger; } public void setStringExchanger(Exchanger\u0026lt;String\u0026gt; stringExchanger) { this.stringExchanger = stringExchanger; } public ThreadB(Exchanger\u0026lt;String\u0026gt; stringExchanger, String name) { this.stringExchanger = stringExchanger; this.setName(name); } } } //当前线程线程B获取到a //当前线程线程A获取到b  Exchanger在两个线程需要交换对象的时候非常好用  "}),a.add({id:69,href:'/life/docs/%E8%84%9A%E6%9C%AC/npm%E6%A8%A1%E5%9D%97%E5%AE%89%E8%A3%85%E6%9C%BA%E5%88%B6%E7%AE%80%E4%BB%8B/',title:"node js - npm ",section:"脚本",content:" npm 是 Node 的模块管理器，功能极其强大。它是 Node 获得成功的重要原因之一\n  假如是nodejs 高版本 那么不需要再安装npm了因为node js已经包含了npm  一、从 npm install 说起\r#\r\r npm install 命令用来安装模块到node_modules目录。  $ npm install \u0026lt;packageName\u0026gt;   安装之前，npm install会先检查，node_modules目录之中是否已经存在指定模块。如果存在，就不再重新安装了，即使远程仓库已经有了一个新版本，也是如此。\n  如果你希望，一个模块不管是否安装过，npm 都要强制重新安装，可以使用-f 或 \u0026ndash;force 参数。\n  $ npm install \u0026lt;packageName\u0026gt; --force 二、npm update\r#\r\r 如果想更新已安装模块，就要用到npm update命令。  $ npm update \u0026lt;packageName\u0026gt;  它会先到远程仓库查询最新版本，然后查询本地版本。如果本地版本不存在，或者远程版本较新，就会安装。  三、registry\r#\r\r  npm update命令怎么知道每个模块的最新版本呢？\n  答案是 npm 模块仓库提供了一个查询服务，叫做 registry 。以 npmjs.org 为例，它的查询服务网址是 https://registry.npmjs.org/ 。\n  这个网址后面跟上模块名，就会得到一个 JSON 对象，里面是该模块所有版本的信息。比如，访问 https://registry.npmjs.org/react，就会看到 react 模块所有版本的信息。\n  它跟下面命令的效果是一样的。\n  $ npm view react # npm view 的别名 $ npm info react $ npm show react $ npm v react 四、缓存目录\r#\r\r  npm install或npm update命令，从 registry 下载压缩包之后，都存放在本地的缓存目录。\n  这个缓存目录，在 Linux 或 Mac 默认是用户主目录下的.npm目录，在 Windows 默认是%AppData%/npm-cache。通过配置命令，可以查看这个目录的具体位置。\n  $ npm config get cache $HOME/.npm  你最好浏览一下这个目录。  $ ls ~/.npm # 或者 $ npm cache ls  你会看到里面存放着大量的模块，储存结构是{cache}/{name}/{version}。  $ npm cache ls react ~/.npm/react/react/0.14.6/ ~/.npm/react/react/0.14.6/package.tgz ~/.npm/react/react/0.14.6/package/ ~/.npm/react/react/0.14.6/package/package.json  .npm目录保存着大量文件，清空它的命令如下。  $ rm -rf ~/.npm/* # 或者 $ npm cache clean 五、模块的安装过程\r#\r\r 总结一下，Node模块的安装过程是这样的。  1:发出npm install命令\r2:npm 向 registry 查询模块压缩包的网址\r3:下载压缩包，存放在~/.npm目录\r4:解压压缩包到当前项目的node_modules目录\r 注意，一个模块安装以后，本地其实保存了两份。一份是~/.npm目录下的压缩包，另一份是node_modules目录下解压后的代码。 但是，运行npm install的时候，只会检查node_modules目录，而不会检查~/.npm目录。也就是说，如果一个模块在～/.npm下有压缩包，但是没有安装在node_modules目录中，npm 依然会从远程仓库下载一次新的压缩包。 这种行为固然可以保证总是取得最新的代码，但有时并不是我们想要的。最大的问题是，它会极大地影响安装速度。即使某个模块的压缩包就在缓存目录中，也要去远程仓库下载，这怎么可能不慢呢？ 另外，有些场合没有网络（比如飞机上），但是你想安装的模块，明明就在缓存目录之中，这时也无法安装。\n "}),a.add({id:70,href:'/life/docs/plan/dir/saxr6jwscz/',title:"2022-10-25计划",section:"计划 ",content:" 运动方面     星期一 星期二 星期三 星期四 星期五 星期六 星期天     在家做运动 在家做运动 在家做运动 在家做运动 外面跑步 外面跑步 外面跑步     朗读     星期一 星期二 星期三 星期四 星期五 星期六 星期天     每天十分钟 每天十分钟 每天十分钟 每天十分钟 每天十分钟 每天十分钟 每天十分钟    "}),a.add({id:71,href:'/life/docs/operating_system/windows/dos_basic/',title:"DOS基本命令 ",section:"windows学习与使用 ",content:"DOS基本命令\r#\r\r wing+r ==\u0026gt; cmd 进入dos控制台   打开屏幕键盘  C:\\Users\\noatn\u0026gt;osk;\r dos各种操作查看参数用法 command params ==? command /?  C:\\Users\\noatn\u0026gt;cd /?\r显示当前目录名或改变当前目录。\rCHDIR [/D] [drive:][path]\rCHDIR [..]\rCD [/D] [drive:][path]\rCD [..]\r.. 指定要改成父目录。\r键入 CD drive: 显示指定驱动器中的当前目录。\r不带参数只键入 CD，则显示当前驱动器和目录。\r使用 /D 开关，除了改变驱动器的当前目录之外，\r还可改变当前驱动器。\r如果命令扩展被启用，CHDIR 会如下改变:\r当前的目录字符串会被转换成使用磁盘名上的大小写。所以，\r如果磁盘上的大小写如此，CD C:\\TEMP 会将当前目录设为\rC:\\Temp。\rCHDIR 命令不把空格当作分隔符，因此有可能将目录名改为一个\r带有空格但不带有引号的子目录名。例如:\rcd \\winnt\\profiles\\username\\programs\\start menu\r与下列相同:\rcd \u0026quot;\\winnt\\profiles\\username\\programs\\start menu\u0026quot;\r在扩展停用的情况下，你必须键入以上命令。\r  显示文件夹列表 dir\n  改变目录 cd\n  返回上一级目录 cd ..\n  返回根目录 cd \\\n  创建子目录 md\n  删除目录 rd\n  清理屏幕 cls\n  cd s ==\u0026gt; 按住tab键切换\n  DOS窗口中创建用户并设定为管理员\r#\r\r 查看本机用户数量 net user  PS E:\\\u0026gt; net user; \\\\DESKTOP-GN2SF7M 的用户帐户\r-------------------------------------------------------------------------------\rAdministrator DefaultAccount Guest\rWDAGUtilityAccount zch\r命令成功完成。\r 创建一个新用户 net user name password /add  PS E:\\\u0026gt; net user blake 123456 /add ; 命令成功完成。\r 提升到管理员权限 net localgroup administrators 用户名 /add  PS E:\\\u0026gt; net localgroup administrators blake /add; 命令成功完成。\rPS E:\\\u0026gt;  删除某个用户名 net user user1 /del  PS E:\\\u0026gt; net user alice /del 命令成功完成。\rPS E:\\\u0026gt;  修改用户密码 net user user1 （直接输入新密码）即可  PS E:\\\u0026gt; net user alice 000000 命令成功完成。\rPS E:\\\u0026gt;  dos备份磁盘   XCOPY D: E:\\backup /s/e/c/h/j/g\rPS E:\\\u0026gt; XCOPY D: E:\\kao /e/h/k/y/c\r"}),a.add({id:72,href:'/life/docs/operating_system/windows/hksdjahjra/',title:"DOS基本命令 (新) ",section:"windows学习与使用 ",content:"命令格式\r#\r\r  命令 子命令 参数 操作 选项\n  /? /help 获取详细的帮助信息\n  D:\\data\\game\\temp\u0026gt;net user /help 此命令的语法是: NET USER [username [password | *] [options]] [/DOMAIN] username {password | *} /ADD [options] [/DOMAIN] username [/DELETE] [/DOMAIN] username [/TIMES:{times | ALL}] username [/ACTIVE: {YES | NO}] NET USER 将创建并修改计算机上的用户帐户。在不使用命令开关的情况下， 将列出计算机的用户帐户。用户帐户信息存储在用户帐户数据库中。 username 为可添加、删除、修改或查看的用户帐户的名称。用户帐户名称 最多可以有 20 个字符。 password 指定或更改用户帐户的密码。密码的长度必须符合 NET ACCOUNTS 命令的 /MINPWLEN 选项所设置的最小长度。 最多可以有 14 个字符。 * 生成密码提示。在密码提示下键入密码时，将不会显示密码。 /DOMAIN 在当前域的域控制器上执行此操作。 /ADD 向用户帐户数据库添加用户帐户。 /DELETE 从用户帐户数据库删除用户帐户。 选项 如下所示: 选项 描述 -------------------------------------------------------------------- /ACTIVE:{YES | NO} 激活或取消激活帐户。如果该帐户处于非激活状态， 用户将无法访问服务器。默认设置为“YES”。 /COMMENT:\u0026#34;text\u0026#34; 提供有关用户帐户的描述性注释。请将文本用引号 括起来。 /COUNTRYCODE:nnn 使用操作系统国家/地区代码执行指定的语言文件， 以显示用户帮助和错误消息。值 0 表示使用默认 的国家/地区代码。 /EXPIRES:{date | NEVER} 如果设置了日期，可导致帐户过期。 NEVER 将帐户设置为无时间限制。 过期日期采用格式 mm/dd/yy(yy)。 月份可以是一个数字、完整字母拼写， 或使用三个字母的缩写。年份可以使用两位数字 或四位数字。使用斜线(/)(不留空格) 将日期的各个部分隔开。 /FULLNAME:\u0026#34;name\u0026#34; 用户的全名(而不是用户名)。请将该名称用引号 括起来。 /HOMEDIR:pathname 用户的主目录设置路径。该路径必须存在。 /PASSWORDCHG:{YES | NO} 指定用户是否可以更改其密码。默认设置 为“YES”。 /PASSWORDREQ:{YES | NO} 指定用户帐户是否必须拥有密码。 默认设置为“YES”。 /LOGONPASSWORDCHG:{YES|NO} 指定用户是否应在下次登录时更改其密码。 默认设置为“NO”。 /PROFILEPATH[:path] 为用户登录配置文件设置路径。 /SCRIPTPATH:pathname 用户登录脚本的位置。 /TIMES:{times | ALL} 登录小时数。TIMES 表示为 day[-day][,day[-day]],time[-time][,time [-time]]，增量限制为 1 小时。 日期可以是完整拼写，也可以是缩写。 小时可以是 12 或 24 小时表示法。对于 12 小时表示法，请使用 am、pm、a.m. 或 p.m。ALL 表示用户始终可以登录， 空白值表示用户始终不能登录。使用逗号将日期和时 间隔开，使用分号将多个日期和时间隔开。 /USERCOMMENT:\u0026#34;text\u0026#34; 允许管理员添加或更改帐户的用户注释。 /WORKSTATIONS:{computername[,...] | *} 列出用户可用于登录到网络的计算机，最多为八台。 如果 /WORKSTATIONS 没有列表，或其列表为 *， 则用户可以通过任何计算机登录到网络。 NET HELP 命令 | MORE 显示帮助内容，一次显示一屏。 批处理文件参数传递\r#\r\r  .bat文件接受参数%num%\n  %1 %2 接收用户输入的数据绑定到参数中的位置\n  @cho off echo %1 echo %2 pause 依据上面命令创建 PbiMCTGrJW.bat D:\\IdeaProjects\\lifeDoc\\tool_java_fun_project\\source_dir\\content\\docs\\operating_system\\windows\\bat\u0026gt;PbiMCTGrJW.bat 11 22 11 22 @echo off rem 创建一个用户 net user %1 %2 /add pause 注释\r#\r\r rem 后面跟注释就是  启动新窗口\r#\r\rD:\\data\\game\\temp\u0026gt;start \u0026#34;my shell\u0026#34; 调用其它bat文件\r#\r\r call_fun.bat  ipconfig start \u0026#34;call window\u0026#34;  调用  @echo off rem 这次我们来编写批处理文件中调用其它批处理文件 call call_fun.bat pause 任务列表\r#\r\rtasklist tasklist /? TASKLIST [/S system [/U username [/P [password]]]] [/M [module] | /SVC | /V] [/FI filter] [/FO format] [/NH] 描述: 该工具显示在本地或远程机器上当前运行的进程列表。 参数列表: /S system 指定连接到的远程系统。 /U [domain\\]user 指定应该在哪个用户上下文执行这个命令。 /P [password] 为提供的用户上下文指定密码。如果省略，则 提示输入。 /M [module] 列出当前使用所给 exe/dll 名称的所有任务。 如果没有指定模块名称，显示所有加载的模块。 /SVC 显示每个进程中主持的服务。 /APPS 显示 Microsoft Store 应用及其关联的进程。 /V 显示详细任务信息。 /FI filter 显示一系列符合筛选器 指定条件的任务。 /FO format 指定输出格式。 有效值: \u0026#34;TABLE\u0026#34;、\u0026#34;LIST\u0026#34;、\u0026#34;CSV\u0026#34;。 /NH 指定列标题不应该 在输出中显示。 只对 \u0026#34;TABLE\u0026#34; 和 \u0026#34;CSV\u0026#34; 格式有效。 /? 显示此帮助消息。 筛选器: 筛选器名称 有效运算符 有效值 ----------- --------------- -------------------------- STATUS eq, ne RUNNING | SUSPENDED NOT RESPONDING | UNKNOWN IMAGENAME eq, ne 映像名称 PID eq, ne, gt, lt, ge, le PID 值 SESSION eq, ne, gt, lt, ge, le 会话编号 SESSIONNAME eq, ne 会话名称 CPUTIME eq, ne, gt, lt, ge, le CPU 时间，格式为 hh:mm:ss。 hh - 小时， mm - 分钟，ss - 秒 MEMUSAGE eq, ne, gt, lt, ge, le 内存使用(以 KB 为单位) USERNAME eq, ne 用户名，格式为 [域\\]用户 SERVICES eq, ne 服务名称 WINDOWTITLE eq, ne 窗口标题 模块 eq, ne DLL 名称 注意: 当查询远程计算机时，不支持 \u0026#34;WINDOWTITLE\u0026#34; 和 \u0026#34;STATUS\u0026#34; 筛选器。 Examples: TASKLIST TASKLIST /M TASKLIST /V /FO CSV TASKLIST /SVC /FO LIST TASKLIST /APPS /FI \u0026#34;STATUS eq RUNNING\u0026#34; TASKLIST /M wbem* TASKLIST /S system /FO LIST TASKLIST /S system /U 域\\用户名 /FO CSV /NH TASKLIST /S system /U username /P password /FO TABLE /NH TASKLIST /FI \u0026#34;USERNAME ne NT AUTHORITY\\SYSTEM\u0026#34; /FI \u0026#34;STATUS eq running\u0026#34; "}),a.add({id:73,href:'/life/docs/javadir/basedir/jsp_dir/jsp_el%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/',title:"EL基础教程 ",section:"jsp 基础知识 ",content:"EL基础教程\r#\r\rEl标签语法\r#\r\r ${参数名}\n EL标签的功能\r#\r\r  可以访问JSP中不同的域的对象    可以访问JavaBean中的属性    可以访问集合元素    支持简单的运算操作   访问JSP中不同的域的对象\r#\r\r\u0026lt;%\rpageContext.setAttribute(\u0026quot;name1\u0026quot;, \u0026quot;zhangsan\u0026quot;);\rrequest.setAttribute(\u0026quot;name2\u0026quot;, \u0026quot;lisi\u0026quot;);\rsession.setAttribute(\u0026quot;name3\u0026quot;, \u0026quot;wangwu\u0026quot;);\rapplication.setAttribute(\u0026quot;name4\u0026quot;, \u0026quot;liuliu\u0026quot;);\r%\u0026gt;\r\u0026lt;!--范围.参数名 --\u0026gt;\r${pageScope.name1 } ${requestScope.name2 } ${sessionScope.name3 }\r${applicationScope.name4 }\r\u0026lt;br\u0026gt;\r\u0026lt;!-- 直接写参数名称 --\u0026gt;\r${name1 } ${name2 } ${name3 } ${name4 }\r 访问JavaBean中的属性\r#\r\r\u0026lt;%\rUser user=new User(\u0026quot;zhangsan\u0026quot;,20,\u0026quot;北京\u0026quot;);\rrequest.setAttribute(\u0026quot;user\u0026quot;, user);\r%\u0026gt;\ruser name:${user.name }\u0026lt;br\u0026gt; user age:${user.age }\u0026lt;br\u0026gt; user address:${user.address }\r 访问集合元素\r#\r\r\u0026lt;%\r//数组\rint[] array=new int[]{1,2,3};\r//列表\rList list=new ArrayList();\rlist.add(\u0026quot;list1\u0026quot;);\rlist.add(20);\rlist.add(true);\rpageContext.setAttribute(\u0026quot;array\u0026quot;, array);\rpageContext.setAttribute(\u0026quot;list\u0026quot;, list);\r%\u0026gt;\r数组:${array[0] },${array[1] },${array[2] }\u0026lt;br\u0026gt; List列表:${list }\u0026lt;br\u0026gt;\r 简单的运算操作\r#\r\r算术运算符:\n2+3=${2+3 }\r2-3=${2-3 }\r2*3=${2*3 }\r2/3=${2/3 }\r 逻辑运算符:\ntrue\u0026amp;\u0026amp;false=${true\u0026amp;\u0026amp;false }	true||false=${true||false }	!true=${!true }	 关系运算符:\n2==5 ${2==5 }\r2!=5 ${2!=5 }\r2\u0026gt;5 ${2\u0026gt;5 }\r2\u0026lt;5 ${2\u0026lt;5 }\r2\u0026gt;=5 ${2\u0026gt;=5 }\r2\u0026lt;=5 ${2\u0026lt;=5 }\r 其他运算符:\n\u0026lt;%\rUser user=new User();\rUser user1=new User(\u0026quot;zhangsan\u0026quot;,20,\u0026quot;北京\u0026quot;);\rString arr=new String();\rString[] arr1=new String[]{\u0026quot;one\u0026quot;,\u0026quot;two\u0026quot;};	pageContext.setAttribute(\u0026quot;user\u0026quot;, user);\rpageContext.setAttribute(\u0026quot;user1\u0026quot;, user1);\rpageContext.setAttribute(\u0026quot;arr\u0026quot;, arr);	pageContext.setAttribute(\u0026quot;arr1\u0026quot;, arr1);\r%\u0026gt;\ruser 是否为空:${empty user }\rarr 是否为空:${empty arr }\ruser1 是否为空:${empty user1 }\rarr1 是否为空:${empty arr1 }\r三元目运算符2\u0026lt;5?yes:no:${2\u0026lt;5?\u0026quot;yes\u0026quot;:\u0026quot;no\u0026quot; }\ruser1.address:${user1.address }\rarr1[1]:${arr1[1] }\r EL标签的隐形变量\r#\r\r  page \u0026lt;==============================\u0026gt; pageScope    request \u0026lt;============================\u0026gt; requestScope    session \u0026lt;============================\u0026gt; sessionScope    application \u0026lt;=========================\u0026gt; applicationScope    request.getParameter(String name) \u0026lt;=======\u0026gt; param   A.jsp\n\u0026lt;form action=\u0026quot;B.jsp\u0026quot; method=\u0026quot;get\u0026quot;\u0026gt;\r\u0026lt;input name=\u0026quot;name\u0026quot;\u0026gt;\u0026lt;br\u0026gt; \u0026lt;input type=\u0026quot;submit\u0026quot;\u0026gt;\r\u0026lt;/form\u0026gt;\r B.jsp\n${param.name }\r  request.getParameterValues(String name) \u0026lt;==\u0026gt; paramValues   A.jsp\n\u0026lt;form action=\u0026quot;B.jsp\u0026quot; method=\u0026quot;get\u0026quot;\u0026gt;\r\u0026lt;input name=\u0026quot;name\u0026quot;\u0026gt;\u0026lt;br\u0026gt; \u0026lt;input name=\u0026quot;name\u0026quot;\u0026gt;\u0026lt;br\u0026gt;\r\u0026lt;input type=\u0026quot;submit\u0026quot;\u0026gt;\r\u0026lt;/form\u0026gt;\r B.jsp\n${paramValues.name[0] },${paramValues.name[1] }\r  request.getHeader(String name) \u0026lt;=========\u0026gt; header    request.getHeaderNames() \u0026lt;=============\u0026gt; headerValues    所有请求cookie \u0026lt;=====================\u0026gt; cookie    application.getInitParameter(String name) \u0026lt;==\u0026gt; initParam    pageContext   ${pageContext.request.queryString}\u0026lt;!-- 获取请求名参数 --\u0026gt;\r${pageContext.request.requestURL}\u0026lt;!-- 获取请求的URL --\u0026gt;\r${pageContext.request.contextPath }\u0026lt;!-- 获取服务应用的名称 --\u0026gt;\r${pageContext.request.method }\u0026lt;!-- 获取http提交方法 --\u0026gt;\r${pageContext.request.protocol }\u0026lt;!-- 获取使用的协议 --\u0026gt;\r${pageContext.request.remoteUser }\u0026lt;!-- 获取登录用户名 --\u0026gt;\r${pageContext.request.remoteAddr }\u0026lt;!-- 获取登录用户IP地址 --\u0026gt;\r${pageContext.session.id }\u0026lt;!-- 获取session的ID --\u0026gt;\r${pageContext.servletContext.serverInfo }\u0026lt;!-- 获取主机端的服务信息 --\u0026gt;\r "}),a.add({id:74,href:'/life/docs/javadir/groovy/groovy%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/',title:"groovy 数据类型 ",section:"groovy 学习与使用 ",content:"Groovy 数据类型\r#\r\r 在任何编程语言中，需要使用各种变量来存储各种类型的信息。变量只是保留值的存储位置,这意味着，当你创建一个变量，你保留在内存中的一些空间来存储与变量相关的值。\n  您可能喜欢存储各种数据类型的信息，如字符串，字符，宽字符，整数，浮点数，布尔值等。基于变量的数据类型，操作系统分配内存并决定什么可以存储在保留的存储器中。\n 内置数据类型\r#\r\r byte -这是用来表示字节值。例如2。 short -这是用来表示一个短整型。例如10。 int -这是用来表示整数。例如1234。 long -这是用来表示一个长整型。例如10000090。 float -这是用来表示32位浮点数。例如12.34。 double -这是用来表示64位浮点数，这些数字是有时可能需要的更长的十进制数表示。例如12.3456565。 char -这定义了单个字符文字。例如“A”。 Boolean -这表示一个布尔值，可以是true或false。 String -这些是以字符串的形式表示的文本。例如，“Hello World”的  绑定值\r#\r\r   类型 值     byte -128到127   short -32,768到32,767   int 2,147,483,648 到,147,483,647   long -9,223,372,036,854,775,808到+9,223,372,036,854,775,807   float 1.40129846432481707e-45到3.40282346638528860e + 38   double 4.94065645841246544e-324d 到1.79769313486231570e + 308d    包装器类型\r#\r\r java.lang.Byte java.lang.Short java.lang.Integer java.lang.Long java.lang.Float java.lang.Double     名称 描述 例如     java.math.BigInteger 不可变的任意精度的有符号整数数字 30克   java.math.BigDecimal 不可变的任意精度的有符号十进制数 3.5克    package gr.h1\r//Example of a int datatype\rint x = 5;\r//Example of a long datatype\rlong y = 100L;\r//Example of a floating point datatype\rfloat a = 10.56f;\r//Example of a double datatype\rdouble b = 10.5e40;\r//Example of a BigInteger datatype\rBigInteger bi = 30g;\r//Example of a BigDecimal datatype\rBigDecimal bd = 3.5g; //加上这个g也没事的 这是groovy特有的如java中的double a = 3.232d\rBigDecimal bd2 = 235.2323552;\rprintln(x);\rprintln(y);\rprintln(a);\rprintln(b);\rprintln(bi);\rprintln(bd);\rprintln(bd2);\r5\r100\r10.56\r1.05E41\r30\r3.5\r235.2323552\r"}),a.add({id:75,href:'/life/docs/python/base/lambda_or_function/',title:"python 函数",section:"python 基础学习",content:"function\r#\r\r 函数是一种仅在调用时运行的代码块\n  创建函数  在 Python 中，使用 def 关键字定义函数\ndef fun1(): print(\u0026#34;这是一个函数\u0026#34;) def fun2 (): pass fun2() fun1()  默认参数值  def funX(a = \u0026#39;zkdsh\u0026#39;): print(a) funX()  返回值  def addFun(x,y): return x + y print(f\u0026#34;addFun 调用 {addFun(2,3)}\u0026#34;) Lambda\r#\r\rlambda 函数是一种小的匿名函数。\nlambda 函数可接受任意数量的参数，但只能有一个表达式\n 语法  lambda arguments : expression\r 简单尝试  import random import math fun1 = lambda a, b: print(a + b) fun1(random.randrange(1, 100), random.randrange(1, 100)) def fun (x = 0,y = 0): return lambda : math.pow(x,2)+math.pow(y,2) # 函数 value1 = fun(3,4) print(value1) # 再次调用函数 print(value1()) print(math.pow(3,2)+math.pow(4,2)) # 开平方 print(math.pow(math.pow(3,2)+math.pow(4,2),0.5)) # 开平方 print(math.sqrt(math.pow(3,2)+math.pow(4,2)))  lambad 妙用  def myfunc(n): return lambda a : a * n mytripler = myfunc(3) print(mytripler(11)) "}),a.add({id:76,href:'/life/docs/python/install/',title:"python 插件学习",section:" python",content:"目录\r#\r\r  pyqt5介绍\n  pyqt5布局\n  pyqt5 皮肤和图标\n  pyqt5\n  NumPy\n  pyinstaller 打包\n  "}),a.add({id:77,href:'/life/docs/javadir/thread/',title:"多线程与并发 ",section:" Java技术栈",content:"目录\r#\r\r  名词解释\n  CAS简单模拟\n  关键名词解释\n  jol\n  Unsafe\n  ReentrantLock\n  java重复加锁\n  Park\n  线程最佳实践\n  "}),a.add({id:78,href:'/life/docs/computer_network/physical_layer/',title:"物理层 ",section:"计算机网络 ",content:" 物理层基本概念 数据通信基础知识  "}),a.add({id:79,href:'/life/docs/operating_system/two_chapter/',title:"第二章 进程管理 ",section:"计算机操作系统",content:"进程管理\r#\r\r目录\r#\r\r  2.1_1_进程的概念、组成、特征\n  2.1_2_进程的状态与转换\n  2.1_3_进程控制\n  2.1_4_进程通信\n  2.1_5_线程概念与多线程模型\n  2.2_1_处理机调度的概念、层次\n  2.2_2_进程调度的时机、切换与过程、方式\n  2.2_3_调度算法的评价指标\n  "}),a.add({id:80,href:'/life/docs/databases/mysql/',title:"mysql学习笔记",section:" 数据库",content:"mysql学习笔记\r#\r\rwindows下 Mysql安装\r#\r\rWin10一台电脑安装多个版本的Mysql\r#\r\rwindows下 Mysql安装的一些问题解决方法\r#\r\rcentos7安装多个mysql\r#\r\rmysql查询数据准备\r#\r\rmysql查询\r#\r\rmysql新查询\r#\r\rmysql视图\r#\r\rmysql触发器\r#\r\rmysql正则表达式\r#\r\rmysql事务\r#\r\rmysql函数\r#\r\rmysql存储过程\r#\r\rmysql存储函数\r#\r\rmysql用户与权限\r#\r\rmysql整理\r#\r\rmysql存储引擎\r#\r\rmysql运维\r#\r\r开发规范\r#\r\r数据库设计三范式\r#\r\rmysql索引\r#\r\rMySQL分库分表原理\r#\r\rmysql优化\r#\r\r"}),a.add({id:81,href:'/life/docs/databases/postgresql/',title:"postgresql学习笔记",section:" 数据库",content:"postgresql学习笔记\r#\r\rpostgresql用户与权限\r#\r\r"}),a.add({id:82,href:'/life/docs/codereview/design_pattern/simple_factory/',title:"创建型 - 简单工厂(Simple Factory)",section:"设计模式",content:"简单工厂\r#\r\r"}),a.add({id:83,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/2021-04%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/',title:"学习计划",section:"自我提升",content:"  Java 消息中间件 RabbitMq 和 kafka (建议学习RabbitMq)\n  web socket or spring socket\n  springboot (spring cloud考虑)\n  redis (深入使用)\n  mysql 这次复习以往 突破 存储和锁 如行锁\n  java 并发(深入)\n  nio netty\n  "}),a.add({id:84,href:'/life/docs/codereview/specification2/',title:"编码规范",section:"编码",content:"编码规范\r#\r\r空格空行:\r#\r\r 1.代码中禁止出现无意义空行. 2.尽量使用注释来代替空行,实在不需要注释的地方,并且与上文逻辑有明显区分的可使用空行分隔 3.在该打空格的地方必须打空格,比如运算符前后,等号前后,for循环中的分号后,if或者for等关键字后可以不打空格. 4.空格和缩进格式可使用Ctrl+K+F让VS使用默认的格式进行调整.  命名规范:\r#\r\r 1.类名命名单词首字母大写. 2.类成员变量以m开头,后面的单词首字母大写,必须保证单词拼写正确. 3.函数中的临时变量以小写开头,后面的单词首字母大写. 4.函数名首字母小写. 5.部分情况下使用缩写时允许以大写字母开头,但是仍需要尽量避免这种情况. 6.回调函数以on开头,非回调函数禁止以on开头.且回调函数权限为protected. 7.以set开头的函数应该只用于根据参数设置成员变量的值,而不能做其他的事情. 8.以get开头的函数尽量不要在函数内对成员变量有修改. 9.明确is,if,can此类单词的含义,is是否,if如果,can能否,一般用于获取一个bool状态时尽量使用is 10.枚举名为全大写,单词之间以下划线分隔. 11.枚举值为全大写,单词之间以下划线分隔,可以不使用枚举名首字母为前缀.  代码结构:\r#\r\r 1.类成员变量写在类的开头,并且访问权限为保护. 2.不允许在函数之间插入成员变量定义. 3.类函数写在成员变量之后,先写公有函数,然后加分割线,再写保护的函数. 4.不允许出现不同访问权限的函数混合排布. 5.如果一个函数的代码只有一行,则可以将整个函数写成一行,比如简单的的get和set函数 6.if下必须添加大括号,即使只有一行也需要添加大括号.  常量:\r#\r\r 1.禁止在代码中出现意义不明的数字,需要定义常量或者枚举来代替. 2.非显示类的字符串必须定义为常量.比如某个资源的名字等 3.不需要使用readonly标识运行时常量,一般只使用编译时常量即可  注释:\r#\r\r 1.提交的代码中禁止出现被注释的代码. 2.禁止使用除了双斜杠以外的注释形式.比如/**/局部注释,///注释 3.行注释双斜杠后需要加一个空格. 4.在代码逻辑不是非常浅显易懂的地方应该添加相应的注释,提高代码阅读效率. 5.尽量在成员变量后添加注释,用于说明此变量用处,以及使用方式等等. 6.成员变量注释或者枚举类型的注释需要对齐.  其他:\r#\r\r"}),a.add({id:85,href:'/life/docs/databases/mysql_163%E8%AF%BE%E5%A0%82/',title:"网易云课堂MySQL微专业学习笔记",section:" 数据库",content:"网易云课堂MySQL微专业学习笔记\r#\r\r 但愿可以不弃坑。\n 目录\r#\r\r 数据库基础  1.1-认识MySQL 1.2-轻松安装MySQL 1.3-MySQL数据库连接 1.4-SQL语言入门 1.5-认识DBA   MySQL数据库对象与应用  2.1-MySQL数据类型 2.2-MySQL数据对象 2.3-MySQL权限管理 2.4-SQL语言进阶 2.5-内置函数 2.6-触发器与存储过程 2.7-MySQL字符集 2.8程序连接MySQL 2.9-DAO框架的使用   MySQL事务与存储引擎  3.1-数据库事务 3.2-存储引擎概述 3.3-InnoDB存储引擎 3.4-InnoDB事务锁   MySQL应用优化  4.1-MySQL索引优化与设计 4.2-MySQL数据库设计 4.3-MySQL容量评估 4.4-MySQL性能测试   MySQL运维实践  5.1-MySQL日志系统 5.2-MySQL数据备份 5.3-MySQL数据恢复 5.4-MySQL线上部署 5.5-MySQL主从复制 5.6-MySQL日常运维 5.7-MySQL参数调优    "}),a.add({id:86,href:'/life/docs/javadir/middleware/elasticsearch/elasticsearch-cluster/',title:"(集群)",section:"Elasticsearch",content:"elasticsearch-cluster\r#\r\rCluster集群\r#\r\r 一个ElasticSearch集群由一个或多个节点(Node)组成，每个集群都有一个共同的集群名称作为标识。\n Node节点\r#\r\r一个ElasticSearch实例即一个Node，一台机器可以有多个实例，正常使用下每个实例应该会部署在不同机器上。ElasticSearch的配置文件中可以通过node.master、node.data来设置节点类型。\n　node.master：表示节点是否具有称为主节点的资格\n　true代表的是有资格竞选主节点\n　false代表的是没有资格竞选主节点\n　node.data：表示节点是否存储数据\nNode节点组合\r#\r\r主节点+数据节点(master+data)\r#\r\r 节点即有称为主节点的资格，又存储数据\n node.master: true\rnode.data: true\r数据节点(data)\r#\r\r 节点没有成为主节点的资格，不参与选举，只会存储数据\n node.master: false\rnode.data: true\r客户端节点(client)\r#\r\r 不会成为主节点，也不会存储数据，主要是针对海量请求的时候，可以进行负载均衡\n node.master: false\rnode.data: false\r分片\r#\r\r每个索引有一个或多个分片，每个分片存储不同的数据。分片可分为主分片(primary shard)和复制分片(replica shard)，复制分片是主分片的拷贝。默认每个主分片有一个复制分片，一个索引的复制分片的数量可以动态地调整，复制分片匆匆不与它的主分片在同一个节点上。\n配置\r#\r\r 约定 配三台服务器\n 第一个节点\r#\r\r# ======================== Elasticsearch Configuration =========================\r#\r# NOTE: Elasticsearch comes with reasonable defaults for most settings.\r# Before you set out to tweak and tune the configuration, make sure you\r# understand what are you trying to accomplish and the consequences.\r#\r# The primary way of configuring a node is via this file. This template lists\r# the most important settings you may want to configure for a production cluster.\r#\r# Please consult the documentation for further information on configuration options:\r# https://www.elastic.co/guide/en/elasticsearch/reference/index.html\r#\r# ---------------------------------- Cluster -----------------------------------\r#\r# Use a descriptive name for your cluster:\r#\r#集群名称，三台集群，要配置相同的集群名称！！！\r#cluster.name: my-application\rcluster.name: my-bootstrap\r#\r# ------------------------------------ Node ------------------------------------\r#\r# Use a descriptive name for the node:\r#\r#node.name: node-1\r#节点名称\rnode.name: node-1\r#是不是有资格主节点\rnode.master: true\r#是否存储数据\rnode.data: true\r#最⼤集群节点数\rnode.max_local_storage_nodes: 3 #网关地址\rnetwork.host: localhost\r#\r# Add custom attributes to the node:\r#\r#node.attr.rack: r1\r#\r# ----------------------------------- Paths ------------------------------------\r#\r# Path to directory where to store the data (separate multiple locations by comma):\r#\r#path.data: /path/to/data\r#\r# Path to log files:\r#\r#path.logs: /path/to/logs\r#\r# ----------------------------------- Memory -----------------------------------\r#\r# Lock the memory on startup:\r#\r#bootstrap.memory_lock: true\r#\r# Make sure that the heap size is set to about half the memory available\r# on the system and that the owner of the process is allowed to use this\r# limit.\r#\r# Elasticsearch performs poorly when the system is swapping the memory.\r#\r# ---------------------------------- Network -----------------------------------\r#\r# Set the bind address to a specific IP (IPv4 or IPv6):\r#\r#network.host: 192.168.0.1\r#\r# Set a custom port for HTTP:\r#\r#http.port: 9200\r# http端口 (对外端口)\rhttp.port: 9200\r#内部节点之间沟通端⼝\rtransport.tcp.port: 9300\r#\r# For more information, consult the network module documentation.\r#\r# --------------------------------- Discovery ----------------------------------\r#\r# Pass an initial list of hosts to perform discovery when this node is started:\r# The default list of hosts is [\u0026quot;127.0.0.1\u0026quot;, \u0026quot;[::1]\u0026quot;]\r#\r#discovery.seed_hosts: [\u0026quot;host1\u0026quot;, \u0026quot;host2\u0026quot;]\r# es7.x之后新增的配置，写入候选主节点的设备地址，在开启服务后可以被选为主节点\rdiscovery.seed_hosts: [\u0026quot;127.0.0.1:9300\u0026quot;, \u0026quot;127.0.0.1:9301\u0026quot;, \u0026quot;127.0.0.1:9302\u0026quot;]\r#\r# Bootstrap the cluster using an initial set of master-eligible nodes:\r#\r#cluster.initial_master_nodes: [\u0026quot;node-1\u0026quot;, \u0026quot;node-2\u0026quot;]\r# es7.x之后新增的配置，初始化一个新的集群时需要此配置来选举master\rcluster.initial_master_nodes: [\u0026quot;node-1\u0026quot;, \u0026quot;node-2\u0026quot;, \u0026quot;node-3\u0026quot;]\r#\r# For more information, consult the discovery and cluster formation module documentation.\r#\r# ---------------------------------- Gateway -----------------------------------\r#\r# Block initial recovery after a full cluster restart until N nodes are started:\r#\r#gateway.recover_after_nodes: 3\r#\r# For more information, consult the gateway module documentation.\r#\r# ---------------------------------- Various -----------------------------------\r#\r# Require explicit names when deleting indices:\r#\r#action.destructive_requires_name: true\rbootstrap.system_call_filter: false\rhttp.cors.allow-origin: \u0026quot;*\u0026quot;\rhttp.cors.enabled: true\rhttp.cors.allow-headers : X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization\rhttp.cors.allow-credentials: true\r第二个节点\r#\r\r# ======================== Elasticsearch Configuration =========================\r#\r# NOTE: Elasticsearch comes with reasonable defaults for most settings.\r# Before you set out to tweak and tune the configuration, make sure you\r# understand what are you trying to accomplish and the consequences.\r#\r# The primary way of configuring a node is via this file. This template lists\r# the most important settings you may want to configure for a production cluster.\r#\r# Please consult the documentation for further information on configuration options:\r# https://www.elastic.co/guide/en/elasticsearch/reference/index.html\r#\r# ---------------------------------- Cluster -----------------------------------\r#\r# Use a descriptive name for your cluster:\r#\r#集群名称，三台集群，要配置相同的集群名称！！！\r#cluster.name: my-application\rcluster.name: my-bootstrap\r#\r# ------------------------------------ Node ------------------------------------\r#\r# Use a descriptive name for the node:\r#\r#node.name: node-1\r#节点名称\rnode.name: node-2\r#是不是有资格主节点\rnode.master: true\r#是否存储数据\rnode.data: true\r#最⼤集群节点数\rnode.max_local_storage_nodes: 3 #网关地址\rnetwork.host: localhost\r#\r# Add custom attributes to the node:\r#\r#node.attr.rack: r1\r#\r# ----------------------------------- Paths ------------------------------------\r#\r# Path to directory where to store the data (separate multiple locations by comma):\r#\r#path.data: /path/to/data\r#\r# Path to log files:\r#\r#path.logs: /path/to/logs\r#\r# ----------------------------------- Memory -----------------------------------\r#\r# Lock the memory on startup:\r#\r#bootstrap.memory_lock: true\r#\r# Make sure that the heap size is set to about half the memory available\r# on the system and that the owner of the process is allowed to use this\r# limit.\r#\r# Elasticsearch performs poorly when the system is swapping the memory.\r#\r# ---------------------------------- Network -----------------------------------\r#\r# Set the bind address to a specific IP (IPv4 or IPv6):\r#\r#network.host: 192.168.0.1\r#\r# Set a custom port for HTTP:\r#\r#http.port: 9200\r# http端口 (对外端口)\rhttp.port: 9201\r#内部节点之间沟通端⼝\rtransport.tcp.port: 9301\r#\r# For more information, consult the network module documentation.\r#\r# --------------------------------- Discovery ----------------------------------\r#\r# Pass an initial list of hosts to perform discovery when this node is started:\r# The default list of hosts is [\u0026quot;127.0.0.1\u0026quot;, \u0026quot;[::1]\u0026quot;]\r#\r#discovery.seed_hosts: [\u0026quot;host1\u0026quot;, \u0026quot;host2\u0026quot;]\r# es7.x之后新增的配置，写入候选主节点的设备地址，在开启服务后可以被选为主节点\rdiscovery.seed_hosts: [\u0026quot;127.0.0.1:9300\u0026quot;, \u0026quot;127.0.0.1:9301\u0026quot;, \u0026quot;127.0.0.1:9302\u0026quot;]\r#\r# Bootstrap the cluster using an initial set of master-eligible nodes:\r#\r#cluster.initial_master_nodes: [\u0026quot;node-1\u0026quot;, \u0026quot;node-2\u0026quot;]\r# es7.x之后新增的配置，初始化一个新的集群时需要此配置来选举master\rcluster.initial_master_nodes: [\u0026quot;node-1\u0026quot;, \u0026quot;node-2\u0026quot;, \u0026quot;node-3\u0026quot;]\r#\r# For more information, consult the discovery and cluster formation module documentation.\r#\r# ---------------------------------- Gateway -----------------------------------\r#\r# Block initial recovery after a full cluster restart until N nodes are started:\r#\r#gateway.recover_after_nodes: 3\r#\r# For more information, consult the gateway module documentation.\r#\r# ---------------------------------- Various -----------------------------------\r#\r# Require explicit names when deleting indices:\r#\r#action.destructive_requires_name: true\rbootstrap.system_call_filter: false\rhttp.cors.allow-origin: \u0026quot;*\u0026quot;\rhttp.cors.enabled: true\rhttp.cors.allow-headers : X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization\rhttp.cors.allow-credentials: true\r第三个节点\r#\r\r# ======================== Elasticsearch Configuration =========================\r#\r# NOTE: Elasticsearch comes with reasonable defaults for most settings.\r# Before you set out to tweak and tune the configuration, make sure you\r# understand what are you trying to accomplish and the consequences.\r#\r# The primary way of configuring a node is via this file. This template lists\r# the most important settings you may want to configure for a production cluster.\r#\r# Please consult the documentation for further information on configuration options:\r# https://www.elastic.co/guide/en/elasticsearch/reference/index.html\r#\r# ---------------------------------- Cluster -----------------------------------\r#\r# Use a descriptive name for your cluster:\r#\r#集群名称，三台集群，要配置相同的集群名称！！！\r#cluster.name: my-application\rcluster.name: my-bootstrap\r#\r# ------------------------------------ Node ------------------------------------\r#\r# Use a descriptive name for the node:\r#\r#node.name: node-1\r#节点名称\rnode.name: node-3\r#是不是有资格主节点\rnode.master: true\r#是否存储数据\rnode.data: true\r#最⼤集群节点数\rnode.max_local_storage_nodes: 3 #网关地址\rnetwork.host: localhost\r#\r# Add custom attributes to the node:\r#\r#node.attr.rack: r1\r#\r# ----------------------------------- Paths ------------------------------------\r#\r# Path to directory where to store the data (separate multiple locations by comma):\r#\r#path.data: /path/to/data\r#\r# Path to log files:\r#\r#path.logs: /path/to/logs\r#\r# ----------------------------------- Memory -----------------------------------\r#\r# Lock the memory on startup:\r#\r#bootstrap.memory_lock: true\r#\r# Make sure that the heap size is set to about half the memory available\r# on the system and that the owner of the process is allowed to use this\r# limit.\r#\r# Elasticsearch performs poorly when the system is swapping the memory.\r#\r# ---------------------------------- Network -----------------------------------\r#\r# Set the bind address to a specific IP (IPv4 or IPv6):\r#\r#network.host: 192.168.0.1\r#\r# Set a custom port for HTTP:\r#\r#http.port: 9200\r# http端口 (对外端口)\rhttp.port: 9202\r#内部节点之间沟通端⼝\rtransport.tcp.port: 9302\r#\r# For more information, consult the network module documentation.\r#\r# --------------------------------- Discovery ----------------------------------\r#\r# Pass an initial list of hosts to perform discovery when this node is started:\r# The default list of hosts is [\u0026quot;127.0.0.1\u0026quot;, \u0026quot;[::1]\u0026quot;]\r#\r#discovery.seed_hosts: [\u0026quot;host1\u0026quot;, \u0026quot;host2\u0026quot;]\r# es7.x之后新增的配置，写入候选主节点的设备地址，在开启服务后可以被选为主节点\rdiscovery.seed_hosts: [\u0026quot;127.0.0.1:9300\u0026quot;, \u0026quot;127.0.0.1:9301\u0026quot;, \u0026quot;127.0.0.1:9302\u0026quot;]\r#\r# Bootstrap the cluster using an initial set of master-eligible nodes:\r#\r#cluster.initial_master_nodes: [\u0026quot;node-1\u0026quot;, \u0026quot;node-2\u0026quot;]\r# es7.x之后新增的配置，初始化一个新的集群时需要此配置来选举master\rcluster.initial_master_nodes: [\u0026quot;node-1\u0026quot;, \u0026quot;node-2\u0026quot;, \u0026quot;node-3\u0026quot;]\r#\r# For more information, consult the discovery and cluster formation module documentation.\r#\r# ---------------------------------- Gateway -----------------------------------\r#\r# Block initial recovery after a full cluster restart until N nodes are started:\r#\r#gateway.recover_after_nodes: 3\r#\r# For more information, consult the gateway module documentation.\r#\r# ---------------------------------- Various -----------------------------------\r#\r# Require explicit names when deleting indices:\r#\r#action.destructive_requires_name: true\rbootstrap.system_call_filter: false\rhttp.cors.allow-origin: \u0026quot;*\u0026quot;\rhttp.cors.enabled: true\rhttp.cors.allow-headers : X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization\rhttp.cors.allow-credentials: true\rKibana\r#\r\r Kibana是一个Web应用程序，你可以通过5601来访问它。 7.x的版本已经是极简风格了，左侧的菜单栏也都是极简的图标风格，但是主要的功能如下： Kibana可视化管理页面详细使用说明 使用浏览器访问例如：localhost:5601 默认端口，进入首页 Discover：日志管理视图 主要进行搜索和查询 Visualize：统计视图 构建可视化的图表 Dashboard：仪表视图 将构建的图表组合形成图表盘 Timelion：时间轴视图 随着时间流逝的数据 APM：性能管理视图 应用程序的性能管理系统 Canvas：大屏展示图 Dev Tools： 开发者命令视图 开发工具 Monitoring：健康视图 请求访问性能预警 Management：管理视图 管理工具  # Kibana is served by a back end server. This setting specifies the port to use.\r#server.port: 5601\r# Specifies the address to which the Kibana server will bind. IP addresses and host names are both valid values.\r# The default is 'localhost', which usually means remote machines will not be able to connect.\r# To allow connections from remote users, set this parameter to a non-loopback address.\r#server.host: \u0026quot;localhost\u0026quot;\r# Enables you to specify a path to mount Kibana at if you are running behind a proxy.\r# Use the `server.rewriteBasePath` setting to tell Kibana if it should remove the basePath\r# from requests it receives, and to prevent a deprecation warning at startup.\r# This setting cannot end in a slash.\r#server.basePath: \u0026quot;\u0026quot;\r# Specifies whether Kibana should rewrite requests that are prefixed with\r# `server.basePath` or require that they are rewritten by your reverse proxy.\r# This setting was effectively always `false` before Kibana 6.3 and will\r# default to `true` starting in Kibana 7.0.\r#server.rewriteBasePath: false\r# The maximum payload size in bytes for incoming server requests.\r#server.maxPayloadBytes: 1048576\r# The Kibana server's name. This is used for display purposes.\r#server.name: \u0026quot;your-hostname\u0026quot;\r# The URLs of the Elasticsearch instances to use for all your queries.\r#elasticsearch.hosts: [\u0026quot;http://localhost:9200\u0026quot;]\relasticsearch.hosts: [\u0026quot;http://127.0.0.1:9200\u0026quot;, \u0026quot;http://127.0.0.1:9201\u0026quot;, \u0026quot;http://127.0.0.1:9202\u0026quot;]\r# When this setting's value is true Kibana uses the hostname specified in the server.host\r# setting. When the value of this setting is false, Kibana uses the hostname of the host\r# that connects to this Kibana instance.\r#elasticsearch.preserveHost: true\r# Kibana uses an index in Elasticsearch to store saved searches, visualizations and\r# dashboards. Kibana creates a new index if the index doesn't already exist.\r#kibana.index: \u0026quot;.kibana\u0026quot;\r# The default application to load.\r#kibana.defaultAppId: \u0026quot;home\u0026quot;\r# If your Elasticsearch is protected with basic authentication, these settings provide\r# the username and password that the Kibana server uses to perform maintenance on the Kibana\r# index at startup. Your Kibana users still need to authenticate with Elasticsearch, which\r# is proxied through the Kibana server.\r#elasticsearch.username: \u0026quot;kibana_system\u0026quot;\r#elasticsearch.password: \u0026quot;pass\u0026quot;\r# Enables SSL and paths to the PEM-format SSL certificate and SSL key files, respectively.\r# These settings enable SSL for outgoing requests from the Kibana server to the browser.\r#server.ssl.enabled: false\r#server.ssl.certificate: /path/to/your/server.crt\r#server.ssl.key: /path/to/your/server.key\r# Optional settings that provide the paths to the PEM-format SSL certificate and key files.\r# These files are used to verify the identity of Kibana to Elasticsearch and are required when\r# xpack.security.http.ssl.client_authentication in Elasticsearch is set to required.\r#elasticsearch.ssl.certificate: /path/to/your/client.crt\r#elasticsearch.ssl.key: /path/to/your/client.key\r# Optional setting that enables you to specify a path to the PEM file for the certificate\r# authority for your Elasticsearch instance.\r#elasticsearch.ssl.certificateAuthorities: [ \u0026quot;/path/to/your/CA.pem\u0026quot; ]\r# To disregard the validity of SSL certificates, change this setting's value to 'none'.\r#elasticsearch.ssl.verificationMode: full\r# Time in milliseconds to wait for Elasticsearch to respond to pings. Defaults to the value of\r# the elasticsearch.requestTimeout setting.\r#elasticsearch.pingTimeout: 1500\r# Time in milliseconds to wait for responses from the back end or Elasticsearch. This value\r# must be a positive integer.\r#elasticsearch.requestTimeout: 30000\r# List of Kibana client-side headers to send to Elasticsearch. To send *no* client-side\r# headers, set this value to [] (an empty list).\r#elasticsearch.requestHeadersWhitelist: [ authorization ]\r# Header names and values that are sent to Elasticsearch. Any custom headers cannot be overwritten\r# by client-side headers, regardless of the elasticsearch.requestHeadersWhitelist configuration.\r#elasticsearch.customHeaders: {}\r# Time in milliseconds for Elasticsearch to wait for responses from shards. Set to 0 to disable.\r#elasticsearch.shardTimeout: 30000\r# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying.\r#elasticsearch.startupTimeout: 5000\r# Logs queries sent to Elasticsearch. Requires logging.verbose set to true.\r#elasticsearch.logQueries: false\r# Specifies the path where Kibana creates the process ID file.\r#pid.file: /var/run/kibana.pid\r# Enables you specify a file where Kibana stores log output.\r#logging.dest: stdout\r# Set the value of this setting to true to suppress all logging output.\r#logging.silent: false\r# Set the value of this setting to true to suppress all logging output other than error messages.\r#logging.quiet: false\r# Set the value of this setting to true to log all events, including system usage information\r# and all requests.\r#logging.verbose: false\r# Set the interval in milliseconds to sample system and process performance\r# metrics. Minimum is 100ms. Defaults to 5000.\r#ops.interval: 5000\r# Specifies locale to be used for all localizable strings, dates and number formats.\r# Supported languages are the following: English - en , by default , Chinese - zh-CN .\ri18n.locale: \u0026quot;zh-CN\u0026quot;\r  索引模式\n 添加索引\n   Discover 中\n 利用添加的索引模式 查看数据\n   其它\r#\r\r 检查集群健康状态  var requestOptions = { method: \u0026#39;GET\u0026#39;, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://localhost:9200/_cat/health?v\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); /* epoch timestamp cluster status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent 1690721429 12:50:29 my-bootstrap green 3 3 20 10 0 0 0 0 - 100.0% */  获取集群中节点的列表  var requestOptions = { method: \u0026#39;GET\u0026#39;, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://localhost:9200/_cat/nodes?v\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); /* ip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name 127.0.0.1 29 68 20 dilmrt - node-1 127.0.0.1 16 68 12 dilmrt - node-3 127.0.0.1 31 68 17 dilmrt * node-2 */  获取所有分片的信息参数  var requestOptions = { method: \u0026#39;GET\u0026#39;, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://localhost:9200/_cat/indices?v\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); /* health status index uuid pri rep docs.count docs.deleted store.size pri.store.size green open .kibana-event-log-7.8.0-000001 leckoQnzTWycaQi_rIvmoQ 1 1 1 0 10.6kb 5.3kb green open book2 KRexSOorR1it17bSClzGSg 1 1 0 0 416b 208b green open cars 8wWe-fscTLO9VYEi_fNm-Q 1 1 8 0 10.4kb 5.2kb green open .apm-custom-link IZVh3QEtTb-QDl5go8UP8g 1 1 0 0 416b 208b green open .kibana_task_manager_1 wxKwqAHySzOXSPL3f-DHlA 1 1 5 0 29kb 14.5kb green open .apm-agent-configuration Hb1HIqQLSoOaj_Ke50JThQ 1 1 0 0 416b 208b green open .kibana_1 BpEJkkh2RCKpWKMfBgBaBw 1 1 26 7 138kb 69kb green open user pawJ4cqlRlqZd2xNWe4ppw 1 1 4 0 10.1kb 5kb green open shopping KLV8BfnjR1awSNnTXiWrJg 1 1 1 0 16.5kb 8.2kb */  单个节点信息  var requestOptions = { method: \u0026#39;GET\u0026#39;, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://localhost:9200?pretty\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); /* { \u0026#34;name\u0026#34;: \u0026#34;node-1\u0026#34;, \u0026#34;cluster_name\u0026#34;: \u0026#34;my-bootstrap\u0026#34;, \u0026#34;cluster_uuid\u0026#34;: \u0026#34;uS-eNJGZRYaxbZoB0AAxZQ\u0026#34;, \u0026#34;version\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;7.8.0\u0026#34;, \u0026#34;build_flavor\u0026#34;: \u0026#34;default\u0026#34;, \u0026#34;build_type\u0026#34;: \u0026#34;zip\u0026#34;, \u0026#34;build_hash\u0026#34;: \u0026#34;757314695644ea9a1dc2fecd26d1a43856725e65\u0026#34;, \u0026#34;build_date\u0026#34;: \u0026#34;2020-06-14T19:35:50.234439Z\u0026#34;, \u0026#34;build_snapshot\u0026#34;: false, \u0026#34;lucene_version\u0026#34;: \u0026#34;8.5.1\u0026#34;, \u0026#34;minimum_wire_compatibility_version\u0026#34;: \u0026#34;6.8.0\u0026#34;, \u0026#34;minimum_index_compatibility_version\u0026#34;: \u0026#34;6.0.0-beta1\u0026#34; }, \u0026#34;tagline\u0026#34;: \u0026#34;You Know, for Search\u0026#34; } */ 参考1\n"}),a.add({id:87,href:'/life/docs/javadir/tooldoc/aspose/',title:"Aspose",section:"Java公共库文档总结 ",content:"Aspose.word组件介绍\r#\r\r1.基本介绍\r#\r\r Aspose.Words是一个商业.NET类库，可以使得应用程序处理大量的文件任务。Aspose.Words支持Doc，Docx，RTF，HTML，OpenDocument，PDF，XPS，EPUB和其他格式。使用Aspose.Words可以在不使用Microsoft.Word的情况下生成、修改、转换和打印文档。在项目中使用Aspose.Words可以有以下好处。\n 1.1丰富的功能集\r#\r\r 其丰富的功能特性主要有以下4个方面:\n   格式转换。Aspose.Words具有高质量的文件格式转换功能，可以和Doc，OOXL，RTF，TXT等格式互相转换。\n  文档对象模型。通过丰富的API以编程方式访问所有的文档元素和格式，允许创建，修改，提取，复制，分割，加入，和替换文件内容。\n  文件渲染。可以在服务器端转换整个文档或者页面为PDF，XPS，SWF格式，同样可以转换文档页面为图像格式，或者.NET Graphics对象，这些功能和Microsoft.Word是一样的。\n  报表。可以从对象或者数据源填充模版生成文件。\n  1.2不需要Microsoft.Word\r#\r\r Aspose.Words可以在没有安装Microsoft Office的机器上工作。所有的Aspose组件都是独立，不需要微软公司的授权。总之， Aspose.Words在安全性、稳定性、可扩展性、速度、价格和自动化功能方面，是一个很不错的选择。\n 1.3独立的平台\r#\r\r Aspose.Words可以运行在Windows，Linux和Mac OS操作系统上面。可以使用Aspose.Words去创建32位或者64位的.NET应用程序，包括Asp.NET、WCF、WinForm等等，还可以使用Com组件在Asp、Perl、PHP和Python语言中使用，同样可以在Mono平台上使用Aspose.Words建立.NET应用程序。\n 1.4性能和可伸缩性\r#\r\r Aspose.Words可以运行在服务器和客户端，它是一个独立的.NET程序集，可以被任何.NET应用程序复制和部署。使用Aspose.Words可以在短时间内产生成千上万的文档，可以打开文档，并修改格式和内容，填充数据并保存。Aspose.Words是多线程安全的，不同的线程在同一时间处理不同的文档。\n 1.5最小的学习曲线\r#\r\r 虽然Aspose.Words拥有150多个公共类和枚举类型，但是Aspose.Words的学习曲线很小因为Aspose.Words的API是围绕下列目标精心设计的：\n   借鉴一些著名的API设计经验，如Microsoft Word。\n  借鉴.NET框架设计指南的经验。\n  提供易于使用的详细的文档元素操作文档。\n   以前在项目中使用Microsoft Word的开发者，可以在Aspose.Words中找到很多熟悉的类、方法和属性。\n 2.文档对象模型概述\r#\r\r2.1 DOM介绍\r#\r\r Aspose.Words的文档对象模型(以下简称DOM)是一个Word文档在内存中的映射，Aspose.Words的DOM可以编程读取、操作和修改Word文档的内容和格式。理解DOM的结构和相应的类型，是使用Aspose.Words灵活编程的基础，这一点非常重要。下面的一个Word文档例子和其结构如下图所示:\n 当上述文档被Aspose.Words的DOM读取时，会创建如下结构的树形对象:\n从上图的结构和对应的Word文档，我们可以看到大概的DOM中相关对象的结构，有了这些基本概念，就可以很流程的操作Word文档了。Document, Section, Paragraph, Table, Shape, Run 以及图中的其他椭圆形的都是Aspose.Words对象，这些对象具有树形的层级结构，图中的注释同样说明这些文档对象树中的对象具有多个属性。\nAspose.Words中的DOM有以下特点：\n  所有的节点(node)类最终都继承于Node类，它是Aspose.Words DOM的基本类型。\n  节点可以包含(嵌套)其他节点，例如Section和Paragraph都继承自CompositeNode类，而CompositeNode类来源与Node类。\n  2.2 Node类型\r#\r\r当Aspose.Words读取Word文档到内存中时，不同类型的文档元素被不同的类型对象来替代，每一个文本框的text, paragraph, table, section都是Node对象,甚至文档本身都是一个Node。Aspose.Words为每一种文档节点类型都定义了一个类。\n下面是一个UML类图，表示DOM中不同node类型之间的关系。抽象类的名字用斜体表示。注意，Aspose.Words DOM中同样包括了一些非节点类型的类，例如Style, PageSetup, Font等等，它们没有在这幅图里面显示。\n看看这些主要的类及作用\n   Aspose.Words类 类别 描述     Document Document Document对象是文档树的根节点，提供访问整个文档的入口   Section Document Section对象对应一个文档中的一节   Body Document 是一节中的主要文本容器   HeaderFooter Document 一节中的特殊页眉或者页脚容器   GlossaryDocument Document 代表一个Word文档中词汇表的根条目   BuildingBlock Document 代表一个词汇表文档，如构件，自动图文集或一个自动更正条目   Paragraph Text 一个文本段落，保护内联的节点   Run Text 一个格式一致的文本块   BookmarkStart Text 一个书签的起点标记   BookmarkEnd Text 一个书签的结束标记   FieldStart Text 一个特殊的字符指定一个单词字段的开始   FieldStart Text 一个特殊的字符指定一个单词字段的开始   FieldSeparator Text 单词字段的分隔符   FieldEnd Text 一个特殊的字符指定一个单词字段的结束   FormField Text 一个表单字段   SpecialChar Text 特殊字符类型，没有具体的   Table Tables Word文档中的表格   Row Tables 一个表格对象的行   Cell Tables 表格行的单元格   Shape Shapes Word文档中的图像，形状，文本框或者OLE对象   GroupShape Shapes 一组Shapes对象   DrawingML Shapes 一个文档中的Sharp或者图像，图表   Footnote Annotations 文档中包括文本的脚注或者尾注   Comment Annotations 文档中包含文本的注释   CommentRangeStart Annotations 一个相关的注释区域的开始   CommentRangeEnd Annotations 一个相关的注释区域的结束   SmartTag Markup 在一个段落内围绕一个或多个内嵌结构的智能标记   CustomXmlMarkup Markup 文档中的某些结构的自定义XML标记   StructuredDocumentTag Markup 文档中的一种结构化的文档标签（内容控制）   OfficeMath Math 代表Office的数学对象，如函数，方程或者矩阵    2.3组成模式\r#\r\rAspose.Words文档的结构树非常重要，下面的设计吐可以更清晰的理解各个节点之间的包含关系。\n2.3.1 Document and Section\r#\r\r文档和节：\n从上图可以看出：\n  一个Document有1个或者多个Section(节)节点；\n  Section有1个Body(正文)，没有或者有多个HeaderFooter节点；\n  Body和HeaderFooter可以包含多个块级节点；\n  1个Document能够有一个GlossaryDocument.1个Word文档包含1个或多个节，一个节可以定义自己的页码，边距，方向，以及页眉页脚的文字；一个节保护主要的问题，如页眉，页脚(首页，奇数页，偶数页)。\n  2.3.2 Block-level节点\r#\r\rBlock-level节点的关系图如下所示：\n  Block-level元素可以出现在文档中的很多地方，如Body的子节点，脚注，评论，单元格其他元素。\n  最重要的Block-level节点是表格和段落；\n  1个表格有0行或者多行；\n  CustomXmlMarkup 和StructuredDocumentTag可以包含其他Block-level节点；\n2.3.3 Inline-level节点\r#\r\r从上面的图表可以看到下列关系：\n  Paragraph是最经常出现的Inline-level节点；\n  Paragraph可以包含不同的Run格式节点；也可以包含书签(bookmarks)和注释(annotations)\n  Paragraph还可以包含形状，图像，绘图对象等，以及智能标签；\n  2.3.4 表格行单元格\r#\r\rTable可以包含很多行，行可以包含单元格，单元格可以包括block-level节点。\n2.4 设计模式与导航\r#\r\rAspose.Words将文档表示为一个有节点组成的树，因此就可以在节点之间互相切换。Aspose.Words提供了一个“文档浏览器”(DocumentExplorer)，这是一个项目例子Demo。如下图所示：\n可以通过Node类的ParentNode属性来访问上级节点，因此很方便获取父节点。文档对象模型是有大量的对象组合而成，他们的关系如下：\n  Node类是所有节点类的基类；\n  CompositeNode类是组合节点的基类；\n  Node类的中，没有子节点管理的接口，子节点管理的方法只出现在CompositeNode；\n  从Node类中移除子节点管理的方法，更干净，可以减少很多额外的转换；\n  3.参考\r#\r\r 官方参考 网络来源重要 网络来源2 网络来源3 网络来源4 网络来源5 网络来源6相对重要 网络来源7相对重要 应用aspose.word破解版实现word转pdf github地址重要 github地址2 github地址3 github地址4 github地址5  "}),a.add({id:88,href:'/life/docs/javadir/thread/essential_glossary/',title:"关键名词解释",section:"多线程与并发 ",content:"锁分类\r#\r\r轻量级锁\r#\r\r Displaced Mark Word(置换标记字)   线程在执行同步块之前,JVM会先在当前线程的栈帧中创建用于存储记录的空间,并将对象头中的Mark Word复制到锁记录中,官方称为Displaced Mark Word 。然后线程尝试使用CAS将对象头中的Mark Word替换为指向锁记录的指针。如果成功,当前线程获得锁,如果失败,表示其他线程竞争锁,当前线程便尝试 使用自旋来获取锁。\n 白话\r#\r\r在进入同步块之前JVM会在当前线程的\u0026#34;栈帧中申请并创建锁记录的空间,接着把对象头的标识符写到锁记录中\u0026#34; 然后使用CAS将当前线程的锁记录的地址(指针)替换掉锁对应的对象中的标识符,CAS操作成功表示获得锁CAS 操作失败尝试使用自旋(就是在当前进程并且执行代码块的线程内的时间片下空循环烧CPU反正现代计算机大多都是多核处理器在短时间内不会太影响其他任务处理)来获取锁 锁的撤销\r#\r\r要想撤销轻量级锁(解锁) 对象头中标识符必须设回为Displaced Mark Word 因此使用CAS操作将Displaced Mark Word替换回到对象头里面,成功那么撤销成功,失败说明有其它线程还在竞争此对象的锁这个时候 锁就会立即膨胀成重量级锁,后续的加锁和解锁都按照重量级锁的操作来 偏向锁\r#\r\r 当一个线程访问同步块(部分文档和解释说也包括同步方法)并获取锁时,会在对象头和栈帧中的锁记录里存在存储偏向锁的线程ID, 以后该线程在进入和退出同步块时不需要进行CAS操作来加锁和解锁,只需要简单测试一下对象头的Mark Word里是否存储着指向当前线程的偏向锁 .如果测试成功,表示已经获取到了锁。如果测试失败,则需要再测试一下Mark word中偏向锁的标识符是否设置成1:如果没有设置,则使用CAS竞争锁; 如果设置了,则尝试使用CAS将对象头的偏向锁指向当前线程(实际就是在对象头锁记录存入线程标识的数据,当然顺带栈帧记录也得存入有关的锁记录数据)\n 白话\r#\r\r当只有一个线程或者多个线程中最先执行到同步块的时候 这个时候测试完没有偏向锁立即设置完对应的标识记录和锁记录就开始执行同步代码了, 假如下次再进入并且锁没有升级那么仅仅简单测试通过又继续执行了 在这最开始到结束全程没有各种加锁操作甚至连CAS都很有可能没有(是有可能有CASC操作的这涉及到偏向锁的撤销机制) 相比同步操作消耗很少 因此很划算的 当有多个线程竞争锁的时候 这个时候系统检测到了并且达到了锁升级的约束条件那么就会立即执行升级操作即便获得执行条件正在的线程 (当然必须等执行线程中的某个原子操作或者若干原子操作组成的原语)也要对锁记录进行升级然后才开始升级 优点: 把整个同步都消除掉，连CAS操作都不去做了，优于轻量级锁 缺点: 如果程序中大多数的锁都总是被多个不同的线程访问，那偏向锁就是多余的   偏向锁是JDK6时加入的一种锁优化机制\n  锁的撤销\n  偏向锁使用了一种等到竞争出现才释放锁的机制,所以当其他线程尝试竞争偏向锁时,持有偏向锁的线程才会释放锁。偏向锁的撤销, 需要等待全局安全点(在这个时间点上没有正在执行的字节码)。它会首先暂停拥有偏向锁的线程,然后检查持有偏向锁的线程是否活着, 如果线程不处于活动状态,则将对象头设置成无锁状态;如果线程仍然活着,拥有偏向锁的栈会被执行,遍历偏向对象的锁记录, 栈中的锁记录和对象头的mark word要么重新偏向于其它线程,要么恢复到无锁或者标记对象不适合作为偏向锁,最后唤醒暂停的线程。  关闭锁  可以考虑通过JVM参数关闭偏向锁 -XX:-UseBiasedLocking=false 重量级锁\r#\r\r 重量级锁是一种称谓  synchronized是通过对象内部的一个叫做监视器锁 （monitor）来实现的，监视器锁本身依赖底层的操作系统的 Mutex Lock来实现。操 作系统实现线程的切换需要从用户态切换到核心态，成本非常高。这种依赖于操作系 统 Mutex Lock来实现的锁称为重量级锁。为了优化synchonized，引入了轻量级锁， 偏向锁  Java中的重量级锁： synchronized  自旋锁 || 适应性自旋锁\r#\r\r 自旋是一种技术理念,使线程忙等待,只需要让线程执行一个忙循环(自旋)。 现在绝大多数的计算机都是多核处理器,如果物理机器有一个以上的处理器或者处理器核心, 能让两个或以上的线程同时并行执行,就可以让后面请求锁的那个线程\u0026quot;稍等一会\u0026quot;, 但不放弃处理器的执行时间,看看持有锁的线程是否很快就会释放锁。\n  自旋锁的优点  避免了线程切换的开销。挂起线程和恢复线程的操作都需要转入内核 态中完成，这些操作给Java虚拟机的并发性能带来了很大的压力。  自旋锁的缺点  占用处理器的时间，如果占用的时间很长，会白白消耗处理器资源， 而不会做任何有价值的工作，带来性能的浪费。因此自旋等待的时间必须有一定的限 度，如果自旋超过了限定的次数仍然没有成功获得锁，就应当使用传统的方式去挂起 线程。  自旋次数默认值  0次，可以使用参数-XX:PreBlockSpin来自行更改。  自适应自旋  自适应意味着自旋的时间不再是固定的，而是由前一次在同一个锁上的 自旋时间及锁的拥有者的状态来决定的。有了自适应自旋，随着程序运行时间的增长 及性能监控信息的不断完善，虚拟机对程序锁的状态预测就会越来越精准。  Java中的自旋锁： CAS操作中的比较操作失败后的自旋等待。  悲观锁\r#\r\r 悲观锁是一种悲观思想，即认为写多读少，遇到并发写的可能性高，每次去拿数据的时候都认为其他线程会修改，所以每次读写数据都会认为其他线程会修改，所以每次读写数据时都会上锁。其他线程想要读写这个数据时，会被这个线程block，直到这个线程释放锁然后其他线程获取到锁。\n 白话\r#\r\r首先主观判断是需要写的操作高于读操作，因为你经常去写 假如你使用乐观锁那样烧cpu的方式进行那么非常浪费资源(计算机世界中CPU也是资源,甚至时间都是), 然后线程申请锁的时候要么被阻塞要么拿到锁(加锁成功) 拿到锁的继续执行没拿到的立即阻塞进入阻塞队列中等待 等待唤醒的时机 最后说下 悲观锁中如果存在数据库操作不管你是关系数据库,非关系数据库或者NOSQL这些 要小心数据处理的操作 特别是多个服务器对应到一个数据库或者多个服务器对应多个数据库等 要么你的数据处理在某个时刻只会运行在一台服务器上要么数据运行到多台服务器的时候在某个唯一服务器上进行唯一运行检验 实现例子\r#\r\r 关系型数据库锁机制  行锁、表锁、读锁、写锁  Java 里面的同步 synchronized 关键字的实现  乐观锁\r#\r\r 乐观锁是一种乐观思想，假定当前环境是读多写少，遇到并发写的概率比较低，读数据时认为别的线程不会正在进行修改（所以没有上锁）。写数据时，判断当前 与期望值是否相同，如果相同则进行更新（更新期间加锁，保证是原子性的）\n 白话\r#\r\r当以这种模式运行时 我们预估大多数都能够实现 那么就以烧CPU轮询方式进行 在 当前运行的进程内的并且运行的线程一直轮询 只要不被阻塞或者其他什么引起线程不执行了就一直轮训知道成功为止 稍微提一下 必须满足运行的当前进程被操作系统调度进入CPU运行 因为操作系统内核对所有进程有一套调度算法一个进程正在执行中即便没有执行完也有可能被暂停,如时间片已经用完 实现例子\r#\r\r CAS 实现  Java 中java.util.concurrent.atomic包下面的原子变量使用了乐观锁的一种 CAS 实现方式 CAS，比较并替换，比较当前值（主内存中的值），与预期值（当前线程中的值，主内存中值的一份拷贝）是否一样，一样则更新，否则继续进行CAS操作  版本号控制  般是在数据表中加上一个数据版本号 version 字段，表示数据被修改的次数。 当数据被修改时，version 值会 +1。当线程 A 要更新数据时，在读取数据的同时也会读取 version 值， 在提交更新时，若刚才读取到的 version 值与当前数据库中的 version 值相等时才更新，否则重试更新操作，直到更新成功 互斥锁\r#\r\r 互斥锁与悲观锁、独占锁同义，表示某个资源只能被一个线程访问，其他线程不能访问\n  读-读互斥 读-写互斥 写-读互斥 写-写互斥  公平锁\r#\r\r 公平锁是一种思想： 多个线程按照申请锁的顺序来获取锁。在并发环境中，每个线程 会先查看此锁维护的等待队列，如果当前等待队列为空，则占有锁，如果等待队列不 为空，则加入到等待队列的末尾，按照FIFO的原则从队列中拿到线程，然后占有锁。\n 非公平锁\r#\r\r 非公平锁是一种思想： 线程尝试获取锁，如果获取不到，则再采用公平锁的方式。多 个线程获取锁的顺序，不是按照先到先得的顺序，有可能后申请锁的线程比先申请的 线程优先获取锁。\n  优点： 非公平锁的性能高于公平锁。 缺点： 有可能造成线程饥饿（某个线程很长一段时间获取不到锁） Java中的非公平锁：synchronized是非公平锁，ReentrantLock通过构造函数指定该锁是公平的还是非公平的，默认是非公平的。  分段锁\r#\r\r 分段锁是一种机制： 最好的例子来说明分段锁是ConcurrentHashMap。\n  ConcurrentHashMap原理  它内部细分了若干个小的 HashMap，称之为段 (Segment)。 默认情况下一个 ConcurrentHashMap 被进一步细分为 16 个段，既 就是锁的并发度。如果需要在 ConcurrentHashMap 添加一项key-value，并不是将 整个 HashMap 加锁，而是首先根据 hashcode 得到该key-value应该存放在哪个段 中，然后对该段加锁，并完成 put 操作。在多线程环境中，如果多个线程同时进行 put操作，只要被加入的key-value不存放在同一个段中，则线程间可以做到真正的并 行。  线程安全  ：ConcurrentHashMap 是一个 Segment 数组， Segment 通过继承 ReentrantLock 来进行加锁，所以每次需要加锁的操作锁住的是一个 segment，这 样只要保证每个 Segment 是线程安全的，也就实现了全局的线程安全 读写锁\r#\r\r 读写锁是一种技术  通过ReentrantReadWriteLock类来实现。为了提高性能， Java 提供了读写锁，在读的地方使用读锁，在写的地方使用写锁，灵活控制，如果没有写 锁的情况下，读是无阻塞的，在一定程度上提高了程序的执行效率。 读写锁分为读锁 和写锁，多个读锁不互斥，读锁与写锁互斥，这是由 jvm 自己控制的 读锁\r#\r\r 允许多个线程获取读锁，同时访问同一个资源  写锁\r#\r\r 只允许一个线程获取写锁，不允许同时访问同一个资源  如何使用  /* 创建一个读写锁* 它是一个读写融为一体的锁，在使用的时候，需要转换*/ private ReentrantReadWriteLock rwLock = new ReentrantReadWriteLock(); /*获取读锁和释放读锁*/ //获取读锁 rwLock.readLock().lock(); // 释放读锁 rwLock.readLock().unlock(); /*获取写锁和释放写锁*/ //创建一个写锁 rwLock.writeLock().lock(); //写锁 释放 rwLock.writeLock().unlock(); 共享锁\r#\r\r  共享锁是一种思想： 可以有多个线程获取读锁，以共享的方式持有锁。和乐观锁、读写锁同义。\n  Java中用到的共享锁：ReentrantReadWriteLock(读锁)\n  独占锁\r#\r\r  独占锁是一种思想： 只能有一个线程获取锁，以独占的方式持有锁。和悲观锁、互斥锁同义\n  Java中用到的独占锁： synchronized，ReentrantLock\n  同步锁\r#\r\r  同步锁与互斥锁同义，表示并发执行的多个线程，在同一时间内只允许一个线程访问共享数据\n  Java中的同步锁： synchronized\n  死锁\r#\r\r 死锁是一种现象   如线程A持有资源x，线程B持有资源y，线程A等待线程B释放资源y，线程B等待线程A释放资源x，两个线程都不释放自己持有的资源，则两个线程都获取不到对方的资源，就会造成死锁\n  Java中的死锁不能自行打破，所以线程死锁后，线程不能进行响应。所以一定要注意程序的并发场景，避免造成死锁\n 锁粗化\r#\r\r 锁粗化是一种优化技术  如果一系列的连续操作都对同一个对象反复加锁和解锁，甚\r至加锁操作都是出现在循环体体之中，就算真的没有线程竞争，频繁地进行互斥同步\r操作将会导致不必要的性能损耗，所以就采取了一种方案：把加锁的范围扩展（粗\r化）到整个操作序列的外部，这样加锁解锁的频率就会大大降低，从而减少了性能损\r耗。\r锁消除\r#\r\r 锁消除是一种优化技术  就是把锁干掉。当Java虚拟机运行时发现有些共享数据不会\r被线程竞争时就可以进行锁消除。\r那如何判断共享数据不会被线程竞争？\r利用逃逸分析技术：分析对象的作用域，如果对象在A方法中定义后，被作为参数传递\r到B方法中，则称为方法逃逸；如果被其他线程访问，则称为线程逃逸。\r在堆上的某个数据不会逃逸出去被其他线程访问到，就可以把它当作栈上数据对待，\r认为它是线程私有的，同步加锁就不需要了\r获取锁的某些方式\r#\r\r 仅仅是加锁过程中一个或者一些操作\n CAS\r#\r\r lock cmpxchgq (比较并交换指令) java调用链 普通api =\u0026gt; java Unsafe =\u0026gt; native cpp =\u0026gt; 操作系统指令 这里要注意即使是c++也不是真正底层 实际是通过操作系统执行中央处理器并做一些处理后得到的结果   CAS，即Compare and Swap，是基于硬件级别的指令实现的同步原语，Java并发包java.utile.concurrent许多同步类基于CAS构建，因此可见CAS的重要性；\n 处理器（包括 Intel 和 Sparc 处理器）使用的最通用的方法是实现名为比较并转换或CAS的原语，在 Intel 处理器中， 比较并交换通过指令的 cmpxchg系列实现。CAS 操作包含三个操作数 —— 内存位置（V）、预期原值（A）和新值(B)。 如果内存位置的值V与预期原值A相匹配，那么处理器会自动将该位置值V更新为新值B，否则，处理器不做任何操作，整个操作保证了原子性，即在对比V==A后、 设置V=B之前不会有其他线程修改V的值。  Unsafe提供CAS操作的native方法  /** 拿对象o在内存偏移offset处的对象与expected比较，如果相等，则设置o.offset=x并返回true，否则返回false */ public final native boolean compareAndSwapObject(Object o, long offset, Object expected, Object x); /** 拿对象o在内存偏移offset处的long值与expected比较，如果相等则设置o.offset=x */ public final native boolean compareAndSwapLong(Object o, long offset, long expected, long x); /** 拿对象o在内存偏移offset处的int值与expected比较，如果相等则设置o.offset=x */ public final native boolean compareAndSwapInt(Object o, long offset, int expected, int x); /** 获取字段f的偏移量 */ public native long objectFieldOffset(Field f); /** 获取静态field在对象中的偏移量 */ public native long staticFieldOffset(Field f);   例子1\n  AbstractQueuedSynchronizer类中用到CAS实现state值的更新\n  long stateOffset = unsafe.objectFieldOffset (AbstractQueuedSynchronizer.class.getDeclaredField(\u0026#34;state\u0026#34;)); // CAS方式修改state字段的值 protected final boolean compareAndSetState(int expect, int update) { return unsafe.compareAndSwapInt(this, stateOffset, expect, update); }  Unsafe提供给atomic原子类调用的方法  public final int getAndAddInt(Object o, long offset, int delta) { int v; do { // 获取内存中的值  v = getIntVolatile(o, offset); } while (!compareAndSwapInt(o, offset, v, v + delta)); return v; } public final long getAndAddLong(Object o, long offset, long delta) public final int getAndSetInt(Object o, long offset, int newValue) public final long getAndSetLong(Object o, long offset, long newValue) public final Object getAndSetObject(Object o, long offset, Object newValue) 此外，Unsafe类还基于这几个native方法封装了几个给atomic原子类调用的方法： 拿getAndAddInt分析，首先取内存中的值，然后执行CAS操作，如果成功则返回修改前的值； 如果取完内存值后执行CAS失败，比如被其他线程修改了值，则重新取内存中的值，继续CAS，直到成功， 如果竞争比较激烈，可能会循环次数过多；这里可以引申出乐观锁悲观锁的含义， 比如某个线程要对变量进行add操作，悲观锁认为期间一定会有其他线程修改变量，于是会在整个修改期间加锁，比如synchronized； 而乐观锁认为不会有其他线程修改变量，getAndAddInt正是乐观锁，用CAS代替锁，如果出现竞争，则用自旋的方式等待；  CAS在原子类中的应用—AtomicInteger为例  // AtomicInteger可以理解为在并发场景下基于CAS乐观锁实现了int共享变量更新的线程安全，常见方法如下 public final int getAndSet(int newValue) { return unsafe.getAndSetInt(this, valueOffset, newValue); } public final boolean compareAndSet(int expect, int update) { return unsafe.compareAndSwapInt(this, valueOffset, expect, update); } public final int getAndIncrement() { return unsafe.getAndAddInt(this, valueOffset, 1); } public final int getAndDecrement() { return unsafe.getAndAddInt(this, valueOffset, -1); }  CAS存在的问题    1:效率问题：前面提到，如果存在多个线程竞争，可能导致CAS失败，此时可能需要循环（自旋）执行CAS，竞争激烈情况下会对性能有一定影响；\n  2:ABA问题：CAS过程中其他线程把变量从A改成B，然后又改回A，CAS判断值没变于是执行更新操作，但事实上值是被修改了的，与设计原语不符，atomic包引入AtomicStampReference类解决ABA问题，每次变量更新的时候，将变量的版本号+1，之前的ABA问题中，变量经过两次操作以后，变量的版本号就会由1变成3，也就是说只要线程对变量进行过操作，变量的版本号就会发生更改，从而解决了ABA问题；但实际应用中ABA问题如果对业务逻辑不会造成影响，可以忽略\n  AQS\r#\r\r AQS全称AbstractQueuedSynchronizer，即抽象的队列同步器，是一种用来构建锁和同步器的框架\n 基于AQS构建同步器\r#\r\r ReentrantLock Semaphore CountDownLatch ReentrantReadWriteLock SynchronusQueue FutureTask  优势\r#\r\r AQS 解决了在实现同步器时涉及的大量细节问题，例如自定义标准同步状态、FIFO 同步队列。 基于AQS来构建同步器可以带来很多好处。它不仅能够极大地减少实现工作，而且也不必处理在多个位置上发生的竞争问题。  AQS核心知识\r#\r\rAQS核心思想\r#\r\r如果被请求的共享资源空闲，则将当前请求资源的线程设置为有效的工作线程，并且将共享资源设置为锁定状态。 如果被请求的共享资源被占用，那么就需要一套线程阻塞等待以及被唤醒时锁分配的机制， 这个机制AQS是用CLH队列锁实现的，即将暂时获取不到锁的线程加入到队列中。如图所示  Sync queue： 同步队列，是一个双向列表。包括head节点和tail节点。head节点主要用作后续的调度   Condition queue： 非必须，单向列表。当程序中存在cindition的时候才会存在此列表  AQS设计思想\r#\r\r 1:AQS使用一个int成员变量来表示同步状态 2:使用Node实现FIFO队列，可以用于构建锁或者其他同步装置 3:AQS资源共享方式：独占Exclusive（排它锁模式）和共享Share（共享锁模式）   AQS它的所有子类中，要么实现并使用了它的独占功能的api，要么使用了共享锁的功能，而不会同时使用两套api，即便是最有名的子类ReentrantReadWriteLock也是通过两个内部类读锁和写锁分别实现了两套api来实现的\n state状态\r#\r\r  state状态使用volatile int类型的变量，表示当前同步状态。state的访问方式有三种\n  getState()\n  setState()\n  compareAndSetState()\n  AQS中Node常量含义\r#\r\r CANCELLED  waitStatus值为1时表示该线程节点已释放（超时、中断），已取消的节点不会再阻塞  SIGNAL  waitStatus为-1时表示该线程的后续线程需要阻塞，即只要前置节点释放锁，就会通知标识为 SIGNAL 状态的后续节点的线程  CONDITION  waitStatus为-2时，表示该线程在condition队列中阻塞（Condition有使用）  PROPAGATE  waitStatus为-3时，表示该线程以及后续线程进行无条件传播（CountDownLatch中有使用）共享模式下， PROPAGATE 状态的线程处于可运行状态  同步队列为什么称为FIFO呢？  因为只有前驱节点是head节点的节点才能被首先唤醒去进行同步状态的获取。当该节点获取到同步状态时，它会清除自己的值，将自己作为head节点，以便唤醒下一个节点  Condition队列 (单向队列)   Condition队列也是FIFO。调用ConditionObject.signal()方法，能够唤醒firstWaiter节点，将其添加到同步队列末尾\n 除了同步队列之外，AQS中还存在Condition队列，这是一个单向队列。调用ConditionObject.await()方法， 能够将当前线程封装成Node加入到Condition队列的末尾，然后将获取的同步状态释放（即修改同步状态的值，唤醒在同步队列中的线程）  自定义同步器的实现   在构建自定义同步器时，只需要依赖AQS底层再实现共享资源state的获取与释放操作即可。自定义同步器实现时主要实现以下几种方法：\n  isHeldExclusively()：该线程是否正在独占资源。只有用到condition才需要去实现它。 tryAcquire(int)：独占方式。尝试获取资源，成功则返回true，失败则返回false。 tryRelease(int)：独占方式。尝试释放资源，成功则返回true，失败则返回false。 tryAcquireShared(int)：共享方式。尝试获取资源。负数表示失败；0表示成功，但没有剩余可用资源；正数表示成功，且有剩余资源。 tryReleaseShared(int)：共享方式。尝试释放资源，如果释放后允许唤醒后续等待结点返回true，否则返回false  AQS实现细节\r#\r\r 线程首先尝试获取锁，如果失败就将当前线程及等待状态等信息包装成一个node节点加入到FIFO队列中。 接着会不断的循环尝试获取锁，条件是当前节点为head的直接后继才会尝试。如果失败就会阻塞自己直到自己被唤醒。而当持有锁的线程释放锁的时候，会唤醒队列中的后继线程。\n 独占模式下的AQS\r#\r\r 所谓独占模式，即只允许一个线程获取同步状态，当这个线程还没有释放同步状态时，其他线程是获取不了的，只能加入到同步队列，进行等待   很明显，我们可以将state的初始值设为0，表示空闲。当一个线程获取到同步状态时，利用CAS操作让state加1，表示非空闲，那么其他线程就只能等待了。释放同步状态时，不需要CAS操作，因为独占模式下只有一个线程能获取到同步状态。ReentrantLock、CyclicBarrier正是基于此设计的\n  例如,ReentrantLock，state初始化为0，表示未锁定状态。A线程lock()时，会调用tryAcquire()独占该锁并将state+1    独占模式下的AQS是不响应中断的，指的是加入到同步队列中的线程，如果因为中断而被唤醒的话，不会立即返回，并且抛出InterruptedException。而是再次去判断其前驱节点是否为head节点，决定是否争抢同步状态。如果其前驱节点不是head节点或者争抢同步状态失败，那么再次挂起\n  独占模式获取资源-acquire方法\n  acquire以独占exclusive方式获取资源。如果获取到资源，线程直接返回，否则进入等待队列，直到获取到资源为止，且整个过程忽略中断的影响。源码如下\n  public final void acquire(int arg) { if (!tryAcquire(arg) \u0026amp;\u0026amp; acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) selfInterrupt(); }  流程图    调用自定义同步器的tryAcquire()尝试直接去获取资源，如果成功则直接返回；\n  没成功，则addWaiter()将该线程加入等待队列的尾部，并标记为独占模式；\n  acquireQueued()使线程在等待队列中休息，有机会时（轮到自己，会被unpark()）会去尝试获取资源。获取到资源后才返回。如果在整个等待过程中被中断过，则返回true，否则返回false。\n  如果线程在等待过程中被中断过，它是不响应的。只是获取资源后才再进行自我中断selfInterrupt()，将中断补上\n  独占模式获取资源-tryAcquire方法\n  tryAcquire尝试以独占的方式获取资源，如果获取成功，则直接返回true，否则直接返回false，且具体实现由自定义AQS的同步器实现的\n  protected boolean tryAcquire(int arg) { throw new UnsupportedOperationException(); }   独占模式获取资源-addWaiter方法\n  根据不同模式(Node.EXCLUSIVE互斥模式、Node.SHARED共享模式)创建结点并以CAS的方式将当前线程节点加入到不为空的等待队列的末尾(通过compareAndSetTail()方法)。如果队列为空，通过enq(node)方法初始化一个等待队列，并返回当前节点\n  /** * 参数 * @param mode Node.EXCLUSIVE for exclusive, Node.SHARED for shared * 返回值 * @return the new node */ private Node addWaiter(Node mode) { //将当前线程以指定的模式创建节点node  Node node = new Node(Thread.currentThread(), mode); // Try the fast path of enq; backup to full enq on failure  // 获取当前同队列的尾节点  Node pred = tail; //队列不为空，将新的node加入等待队列中  if (pred != null) { node.prev = pred; //CAS方式将当前节点尾插入队列中  if (compareAndSetTail(pred, node)) { pred.next = node; return node; } } //当队列为empty或者CAS失败时会调用enq方法处理  enq(node); return node; }  其中，队列为empty，使用enq(node)处理，将当前节点插入等待队列，如果队列为空，则初始化当前队列。所有操作都是CAS自旋的方式进行，直到成功加入队尾为止  private Node enq(final Node node) { //不断自旋  for (;;) { Node t = tail; //当前队列为empty  if (t == null) { // Must initialize  //完成队列初始化操作，头结点中不放数据，只是作为起始标记，lazy-load，在第一次用的时候new  if (compareAndSetHead(new Node())) tail = head; } else { node.prev = t; //不断将当前节点使用CAS尾插入队列中直到成功为止  if (compareAndSetTail(t, node)) { t.next = node; return t; } } } } }   独占模式获取资源-acquireQueued方法\n  acquireQueued用于已在队列中的线程以独占且不间断模式获取state状态，直到获取锁后返回。主要流程:\n  结点node进入队列尾部后，检查状态；\n  调用park()进入waiting状态，等待unpark()或interrupt()唤醒；\n   final boolean acquireQueued ( final Node node, int arg) { //是否已获取锁的标志，默认为true 即为尚未  boolean failed = true; try { boolean interrupted = false;//等待中是否被中断过的标记  for (;;) { final Node p = node.predecessor(); //获取前节点  // 如果当前节点已经成为头结点，尝试获取锁（tryAcquire）成功，然后返回 if (p == head \u0026amp;\u0026amp; tryAcquire(arg)) { setHead(node); p.next = null;  help GC failed = false; return interrupted; } shouldParkAfterFailedAcquire根据对当前节点的前一个节点的状态进行判断，对当前节点做出不同的操作 parkAndCheckInterrupt让线程进入等待状态，并检查当前线程是否被可以被中断 if (shouldParkAfterFailedAcquire(p, node) \u0026amp;\u0026amp; parkAndCheckInterrupt()) interrupted = true; } } finally { //将当前节点设置为取消状态；取消状态设置为1 if (failed) cancelAcquire(node); } }  }   独占模式释放资源-release方法\n  release方法是独占exclusive模式下线程释放共享资源的锁。它会调用tryRelease()释放同步资源，如果全部释放了同步状态为空闲（即state=0）,当同步状态为空闲时，它会唤醒等待队列里的其他线程来获取资源。这也正是unlock()的语义，当然不仅仅只限于unlock()\n  public final boolean release(int arg) { if (tryRelease(arg)) { Node h = head; if (h != null \u0026amp;\u0026amp; h.waitStatus != 0) unparkSuccessor(h); return true; } return false; }   独占模式释放资源-tryRelease方法\n  tryRelease()跟tryAcquire()一样实现都是由自定义定时器以独占exclusive模式实现的。因为其是独占模式，不需要考虑线程安全的问题去释放共享资源，直接减掉相应量的资源即可(state-=arg)。而且tryRelease()的返回值代表着该线程是否已经完成资源的释放，因此在自定义同步器的tryRelease()时，需要明确这条件，当已经彻底释放资源(state=0)，要返回true，否则返回false\n  protected boolean tryRelease(int arg) { throw new UnsupportedOperationException(); }  ReentrantReadWriteLock的实现  protected final boolean tryRelease(int releases) { if (!isHeldExclusively()) throw new IllegalMonitorStateException(); //减掉相应量的资源(state-=arg)  int nextc = getState() - releases; //是否完全释放资源  boolean free = exclusiveCount(nextc) == 0; if (free) setExclusiveOwnerThread(null); setState(nextc); return free; }   独占模式释放资源-unparkSuccessor\n  unparkSuccessor用unpark()唤醒等待队列中最前驱的那个未放弃线程，此线程并不一定是当前节点的next节点，而是下一个可以用来唤醒的线程，如果这个节点存在，调用unpark()方法唤醒\n  private void unparkSuccessor(Node node) { //当前线程所在的结点node  int ws = node.waitStatus; //置零当前线程所在的结点状态，允许失败  if (ws \u0026lt; 0) compareAndSetWaitStatus(node, ws, 0); //找到下一个需要唤醒的结点  Node s = node.next; if (s == null || s.waitStatus \u0026gt; 0) { s = null; // 从后向前找  for (Node t = tail; t != null \u0026amp;\u0026amp; t != node; t = t.prev) //从这里可以看出，\u0026lt;=0的结点，都是还有效的结点  if (t.waitStatus \u0026lt;= 0) s = t; } if (s != null) //唤醒  LockSupport.unpark(s.thread); }   共享模式下的AQS\n  共享模式，当然是允许多个线程同时获取到同步状态,共享模式下的AQS也是不响应中断的\n   很明显，我们可以将state的初始值设为N（N \u0026gt; 0），表示空闲。每当一个线程获取到同步状态时，就利用CAS操作让state减1，直到减到0表示非空闲，其他线程就只能加入到同步队列，进行等待。释放同步状态时，需要CAS操作，因为共享模式下，有多个线程能获取到同步状态。CountDownLatch、Semaphore正是基于此设计的\n  例如，CountDownLatch，任务分为N个子线程去执行，同步状态state也初始化为N（注意N要与线程个数一致）:     共享模式获取资源-acquireShared方法\n  acquireShared在共享模式下线程获取共享资源的顶层入口。它会获取指定量的资源，获取成功则直接返回，获取失败则进入等待队列，直到获取到资源为止，整个过程忽略中断\n  public final void acquireShared(int arg) { if (tryAcquireShared(arg) \u0026lt; 0) doAcquireShared(arg); }   流程：\n  先通过tryAcquireShared()尝试获取资源，成功则直接返回；\n  失败则通过doAcquireShared()中的park()进入等待队列，直到被unpark()/interrupt()并成功获取到资源才返回(整个等待过程也是忽略中断响应)。\n  共享模式获取资源-tryAcquireShared方法\n  tryAcquireShared()跟独占模式获取资源方法一样实现都是由自定义同步器去实现。但AQS规范中已定义好tryAcquireShared()的返回值：\n   负值代表获取失败； 0代表获取成功，但没有剩余资源；   正数表示获取成功，还有剩余资源，其他线程还可以去获取。  protected int tryAcquireShared(int arg) { throw new UnsupportedOperationException(); }   共享模式获取资源-doAcquireShared方法\n  doAcquireShared()用于将当前线程加入等待队列尾部休息，直到其他线程释放资源唤醒自己，自己成功拿到相应量的资源后才返回\n  private void doAcquireShared(int arg) { //加入队列尾部  final Node node = addWaiter(Node.SHARED); //是否成功标志  boolean failed = true; try { //等待过程中是否被中断过的标志  boolean interrupted = false; for (;;) { final Node p = node.predecessor();//获取前驱节点  if (p == head) {//如果到head的下一个，因为head是拿到资源的线程，此时node被唤醒，很可能是head用完资源来唤醒自己的  int r = tryAcquireShared(arg);//尝试获取资源  if (r \u0026gt;= 0) {//成功  setHeadAndPropagate(node, r);//将head指向自己，还有剩余资源可以再唤醒之后的线程  p.next = null; // help GC  if (interrupted)//如果等待过程中被打断过，此时将中断补上。  selfInterrupt(); failed = false; return; } } //判断状态，队列寻找一个适合位置，进入waiting状态，等着被unpark()或interrupt()  if (shouldParkAfterFailedAcquire(p, node) \u0026amp;\u0026amp; parkAndCheckInterrupt()) interrupted = true; } } finally { if (failed) cancelAcquire(node); } }   共享模式释放资源-releaseShared方法\n  releaseShared()用于共享模式下线程释放共享资源，释放指定量的资源，如果成功释放且允许唤醒等待线程，它会唤醒等待队列里的其他线程来获取资源\n  public final boolean releaseShared(int arg) { //尝试释放资源  if (tryReleaseShared(arg)) { //唤醒后继结点  doReleaseShared(); return true; } return false; }  独占模式下的tryRelease()在完全释放掉资源（state=0）后，才会返回true去唤醒其他线程，这主要是基于独占下可重入的考量；而共享模式下的releaseShared()则没有这种要求，共享模式实质就是控制一定量的线程并发执行，那么拥有资源的线程在释放掉部分资源时就可以唤醒后继等待结点。\n   共享模式释放资源-doReleaseShared方法\n  doReleaseShared()主要用于唤醒后继节点线程,当state为正数，去获取剩余共享资源；当state=0时去获取共享资源\n  private void doReleaseShared() { for (;;) { Node h = head; if (h != null \u0026amp;\u0026amp; h != tail) { int ws = h.waitStatus; if (ws == Node.SIGNAL) { if (!compareAndSetWaitStatus(h, Node.SIGNAL, 0)) continue; //唤醒后继  unparkSuccessor(h); } else if (ws == 0 \u0026amp;\u0026amp; !compareAndSetWaitStatus(h, 0, Node.PROPAGATE)) continue; } // head发生变化  if (h == head) break; } } 其它\r#\r\r同步术语\r#\r\r  volatile类型的变量\n  显示锁 Explicit Lock\n  原子变量\n  synchronized\r#\r\r  synchronized是Java中的关键字 用来修饰方法、对象实例。属于独占锁、悲观锁、 可重入锁、非公平锁。\n  1.作用于实例方法时，锁住的是对象的实例(this)；\n  2.当作用于静态方法时，锁住的是 Class类，相当于类的一个全局锁，会锁所有调用该方法的线程；\n  3.synchronized 作用于一个非 NULL的对象实例时，锁住的是所有以该对象为锁的代码块。 它有多个队列，当多个线程一起访问某个对象监视器的时候，对象监视器会将这些线程存储在不同的容器中。\n  每个对象都有个 monitor 对象， 加锁就是在竞争 monitor 对象，代码块加锁是在代码块前后分别加上 monitorenter 和 monitorexit 指令来实现的，方法加锁是通过一个标记位来判断的。\n  Lock和synchronized的区别\r#\r\rLock： 是Java中的接口，可重入锁、悲观锁、独占锁、互斥锁、同步锁。\r#\r\r 1.Lock需要手动获取锁和释放锁。就好比自动挡和手动挡的区别 2.Lock 是一个接口，而 synchronized 是 Java 中的关键字 synchronized 是内置的语言实现。 3.synchronized 在发生异常时，会自动释放线程占有的锁，因此不会导致死锁现象发生；而 Lock 在发生异常时，如果没有主动通过 unLock()去释放锁，则很可能造成死锁现象，因此使用 Lock 时需要在 finally 块中释放锁。 4.Lock 可以让等待锁的线程响应中断，而 synchronized 却不行，使用synchronized 时，等待的线程会一直等待下去，不能够响应中断。 5.通过 Lock 可以知道有没有成功获取锁，而 synchronized 却无法办到。 6.Lock 可以通过实现读写锁提高多个线程进行读操作的效率。  synchronized的优势：\r#\r\r 足够清晰简单，只需要基础的同步功能时，用synchronized。 Lock应该确保在finally块中释放锁。如果使用synchronized，JVM确保即 使出现异常，锁也能被自动释放。 使用Lock时，Java虚拟机很难得知哪些锁对象是由特定线程锁持有的。  ReentrantLock 和synchronized的区别\r#\r\r ReentrantLock是Java中的类 ： 继承了Lock类，可重入锁、悲观锁、独占锁、互斥锁、同步锁。  相同点\r#\r\r 1.主要解决共享变量如何安全访问的问题 2.都是可重入锁，也叫做递归锁，同一线程可以多次获得同一个锁， 3.保证了线程安全的两大特性：可见性、原子性。  不同点\r#\r\r 1.ReentrantLock 就像手动汽车，需要显示的调用lock和unlock方法，synchronized 隐式获得释放锁。 2.ReentrantLock 可响应中断， synchronized 是不可以响应中断的，ReentrantLock 为处理锁的不可用性提供了更高的灵活性 3.ReentrantLock 是 API 级别的， synchronized 是 JVM 级别的 4.ReentrantLock 可以实现公平锁、非公平锁，默认非公平锁，synchronized 是非公平锁，且不可更改。 5.ReentrantLock 通过 Condition 可以绑定多个条件  "}),a.add({id:89,href:'/life/docs/databases/',title:" 数据库",section:"Docs",content:" 数据库，简而言之可视为电子化的文件柜——存储电子文件的处所，用户可以对文件中的数据进行新增、查询、更新、删除等操作。\n 目录\r#\r\r 数据库基础  1.1-认识MySQL 1.2-轻松安装MySQL 1.3-MySQL数据库连接 1.4-SQL语言入门 1.5-认识DBA   MySQL数据库对象与应用  2.1-MySQL数据类型 2.2-MySQL数据对象 2.3-MySQL权限管理 2.4-SQL语言进阶 2.5-内置函数 2.6-触发器与存储过程 2.7-MySQL字符集 2.8程序连接MySQL 2.9-DAO框架的使用   MySQL事务与存储引擎  3.1-数据库事务 3.2-存储引擎概述 3.3-InnoDB存储引擎 3.4-InnoDB事务锁   MySQL应用优化  4.1-MySQL索引优化与设计 4.2-MySQL数据库设计 4.3-MySQL容量评估 4.4-MySQL性能测试   MySQL运维实践  5.1-MySQL日志系统 5.2-MySQL数据备份 5.3-MySQL数据恢复 5.4-MySQL线上部署 5.5-MySQL主从复制 5.6-MySQL日常运维 5.7-MySQL参数调优    "}),a.add({id:90,href:'/life/docs/operating_system/one_chapter/1_2_/',title:"操作系统的特征",section:"第一章 操作系统概述 ",content:"一:知识总览\r#\r\r二:分类描述\r#\r\r 1:操作系统的特征——并发   2:操作系统的特征——共享   3:操作系统的特征——并发和共享的关系   4:操作系统的特征——虚拟   5:操作系统的特征——异步   总结  "}),a.add({id:91,href:'/life/docs/computer_network/network_architecture/1.1.2%E6%A0%87%E5%87%86%E5%8C%96%E5%B7%A5%E4%BD%9C%E5%8F%8A%E7%9B%B8%E5%85%B3%E7%BB%84%E7%BB%87/',title:"标准的分类",section:"网络体系结构",content:"标准的分类\r#\r\r法定标准\r#\r\r 由权威机构制定的正式的、合法的标准 OSI  事实标准\r#\r\r 某些公司的产品在竞争中占据了主流 ， TCP/IP 时间长了，这些产品中的协议和技术就成了标准  RFC\r#\r\r  因特网标准的形式 (4个阶段)\n  1:因特网草案\n  2:建议标准\n  3:草案标准\n  4:因特网标准\n  国际标准化组织 ISO (最重要)\r#\r\r国际电信联盟 ITU\r#\r\r国际电气电子工程协会 IEEE\r#\r\r"}),a.add({id:92,href:'/life/docs/operating_system/two_chapter/2_1_2/',title:"进程的状态与转换",section:"第二章 进程管理 ",content:""}),a.add({id:93,href:'/life/docs/javadir/middleware/solr/javaapi/',title:"Java API SolrJ 的使用",section:"solr",content:"Java API SolrJ 的使用\r#\r\r一、SolrJ 简介\r#\r\rSolrJ 是操作 Solr 的 Java 客户端，它提供了增加、修改、删除、查询 Solr 索引的 Java 接口。通过 SolrJ 提供的 API 接口来操作 Solr 服务，SolrJ 底层是通过使用 httpClient 中的方法来完成 Solr的操作。\n二、SolrJ 核心类 SolrClient\r#\r\r  SolrClient 有一些具体的实现，每个实现都针对不同的使用模式或弹性模型：\n  HttpSolrClient- 面向以查询为中心的工作负载，但也是一个很好的通用客户端。直接与单个 Solr 节点通信。\n  Http2SolrClient- 利用 HTTP/2 的异步、非阻塞和通用客户端。这个类是实验性的，因此它的 API 可能会在 SolrJ 的次要版本中更改或删除。\n  LBHttpSolrClient- 在 Solr 节点列表之间平衡请求负载。根据节点健康状况调整“服务中”节点列表。\n  LBHttp2SolrClient- 就像 LBHttpSolrClient 而是使用 Http2SolrClient。这个类是实验性的，因此它的 API 可能会在 SolrJ 的次要版本中更改或删除。\n  CloudSolrClient- 面向与 SolrCloud 部署通信。使用已经记录的 ZooKeeper 状态来发现请求并将其路由到健康的 Solr 节点。\n  ConcurrentUpdateSolrClient- 面向以索引为中心的工作负载。在将更大的批次发送到 Solr 之前在内部缓冲文档。\n  ConcurrentUpdateHttp2SolrClient- 就像 ConcurrentUpdateSolrClient 而是使用 Http2SolrClient。这个类是实验性的，因此它的 API 可能会在 SolrJ 的次要版本中更改或删除。\n    SolrJ 所有 API 接口Solr 8.11.0 solr-solrj API。\n三、SolrClient 类的简单使用（增删改查）\r#\r\r在使用前先引入 SolrJ 依赖\n\u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.apache.solr\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;solr-solrj\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;8.11.0\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt;  1、添加文档  @Test public void testAdd() throws Exception{ //1.创建连接 	HttpSolrClient solrServer = new HttpSolrClient.Builder(\u0026#34;http://localhost:8983/solr/solrTest\u0026#34;).build(); for (int i = 1; i \u0026lt;= 10; i++){ //2.创建一个文档对象 	SolrInputDocument inputDocument = new SolrInputDocument(); //向文档中添加域以及对应的值(注意：所有的域必须在schema.xml中定义过,前两篇导入时已定义) 	inputDocument.addField(\u0026#34;id\u0026#34;, i); inputDocument.addField(\u0026#34;name\u0026#34;, \u0026#34;名称\u0026#34;+i); inputDocument.addField(\u0026#34;content\u0026#34;, \u0026#34;内容\u0026#34;+i); //3.将文档写入索引库中 	solrServer.add(inputDocument); }	//4.提交 	solrServer.commit(); }  2、更新文档(其实更新的内容不存在则是新增)  @Test public void testUpdate() throws Exception{ //1.创建连接 	HttpSolrClient solrServer = new HttpSolrClient.Builder(\u0026#34;http://localhost:8983/solr/solrTest\u0026#34;).build(); //2.创建一个文档对象 	SolrInputDocument inputDocument = new SolrInputDocument(); inputDocument.addField(\u0026#34;id\u0026#34;, \u0026#34;1\u0026#34;); //修改id为1的信息(信息存在则更新，不存在则新增) 	inputDocument.addField(\u0026#34;name\u0026#34;, \u0026#34;名称1\u0026#34;); inputDocument.addField(\u0026#34;content\u0026#34;, \u0026#34;内容1\u0026#34;); //3.将文档写入索引库中 	solrServer.add(inputDocument); //4.提交 	solrServer.commit(); }  3、查询单个  @Test public void testQuery() throws Exception{ //1.创建连接 	HttpSolrClient solrServer = new HttpSolrClient.Builder(\u0026#34;http://localhost:8983/solr/solrTest\u0026#34;).build(); //2.创建查询语句 	SolrQuery query = new SolrQuery(); //3.设置查询条件 	query.set(\u0026#34;q\u0026#34;, \u0026#34;id:1\u0026#34;); //4.执行查询 	QueryResponse queryResponse = solrServer.query(query); //5.取文档列表(public class SolrDocumentList extends ArrayList\u0026lt;SolrDocument\u0026gt;) 	SolrDocumentList documentList = queryResponse.getResults(); for (SolrDocument solrDocument : documentList) { System.out.println(\u0026#34;id:\u0026#34;+solrDocument.get(\u0026#34;id\u0026#34;)+\u0026#34; \u0026#34;); System.out.println(\u0026#34;名称:\u0026#34;+solrDocument.get(\u0026#34;name\u0026#34;)+\u0026#34; \u0026#34;); System.out.println(\u0026#34;内容:\u0026#34;+solrDocument.get(\u0026#34;content\u0026#34;)+\u0026#34; \u0026#34;); } }  4、多条件查询带分页  @Test public void testQueryByCon() throws Exception{ //创建连接 	HttpSolrClient solrServer = new HttpSolrClient.Builder(\u0026#34;http://localhost:8983/solr/solrTest\u0026#34;).build(); //创建查询语句 	SolrQuery query = new SolrQuery(); //设置查询条件  //设置查询关键字 	query.set(\u0026#34;q\u0026#34;, \u0026#34;*称\u0026#34;); //按照id降序排列 	query.setSort(\u0026#34;id\u0026#34;, SolrQuery.ORDER.desc); //分页条件  query.setStart(0); query.setRows(2); //默认在名称域进行查询 	query.set(\u0026#34;df\u0026#34;, \u0026#34;name\u0026#34;); //设置高亮  solrQuery.setHighlight(true); //设置高亮的字段  solrQuery.addHighlightField(\u0026#34;name,content\u0026#34;); //设置高亮的样式  solrQuery.setHighlightSimplePre(\u0026#34;\u0026lt;font color=\u0026#39;red\u0026#39;\u0026gt;\u0026#34;); solrQuery.setHighlightSimplePost(\u0026#34;\u0026lt;/font\u0026gt;\u0026#34;); //执行查询 	QueryResponse queryResponse = solrServer.query(query); //返回高亮显示结果  Map\u0026lt;String, Map\u0026lt;String, List\u0026lt;String\u0026gt;\u0026gt;\u0026gt; highlighting = queryResponse.getHighlighting(); //获取文档列表 	SolrDocumentList documentList = queryResponse.getResults(); System.out.println(\u0026#34;总记录数:\u0026#34; + documentList.getNumFound()); for (SolrDocument solrDocument : documentList) { System.out.println(\u0026#34;id:\u0026#34;+solrDocument.get(\u0026#34;id\u0026#34;)+\u0026#34; \u0026#34;); System.out.println(\u0026#34;名称:\u0026#34;+solrDocument.get(\u0026#34;name\u0026#34;)+\u0026#34; \u0026#34;); System.out.println(\u0026#34;内容:\u0026#34;+solrDocument.get(\u0026#34;content\u0026#34;)+\u0026#34; \u0026#34;); } }  5、删除文档  /** * 根据id删除文档 */ @Test public void testDeleteById() throws Exception{ //1.创建连接 	HttpSolrClient solrServer = new HttpSolrClient.Builder(\u0026#34;http://localhost:8983/solr/solrTest\u0026#34;).build(); //2.删除文档 	solrServer.deleteById(\u0026#34;1\u0026#34;); //3.提交 	solrServer.commit(); } /** * 根据条件删除文档 */ @Test public void testDeleteById() throws Exception{ //1.创建连接 	HttpSolrClient solrServer = new HttpSolrClient.Builder(\u0026#34;http://localhost:8983/solr/solrTest\u0026#34;).build(); //2.删除文档 	solrServer.deleteByQuery(\u0026#34;name:名称\u0026#34;); //3.提交 	solrServer.commit(); } "}),a.add({id:94,href:'/life/docs/javadir/middleware/rabbit-mq/publish-subscribe/',title:"Publish/Subscribe",section:"rabbit-mq",content:"Publish/Subscribe (发布/订阅)\r#\r\r 一个生产者，一个交换机，两个队列，两个消费者\n  生产者是发送消息的用户应用程序。 队列是存储消息的缓冲区。 消费者是接收消息的用户应用程序。  创建 扇形交换机(fanout)\r#\r\rRabbitMQ 中消息传递模型的核心思想是生产者 从不将任何消息直接发送到队列。实际上，很多时候 生产者甚至不知道消息是否会传递给任何所有队列\n有几种可用的交换类型：direct, topic, headers , fanout 本次使用 fanout并且使用它的日志\nchannel.exchangeDeclare(\u0026#34;logs\u0026#34;, \u0026#34;fanout\u0026#34;); fanout 交换非常简单。正如您可能从 名称，它只是将收到的所有消息广播到所有队列让它知道\n临时队列\r#\r\rString queueName = channel.queueDeclare().getQueue(); 绑定\r#\r\r我们已经创建了一个扇出交换和一个队列。现在我们需要 告诉交换机将消息发送到我们的队列。这种关系 交换和队列之间称为绑定。\nchannel.queueBind(queueName, \u0026#34;logs\u0026#34;, \u0026#34;\u0026#34;); 从现在开始，日志交换会将消息附加到我们的队列中。\n将一切整合在一起\r#\r\r发出日志消息的生产者程序看起来不多 与上一教程不同。最重要的变化是 我们现在希望将消息发布到我们的日志交换，而不是 无名者。我们需要在发送时提供一个路由密钥，但它 对于扇出交换，将忽略值。下面是 EmitLog.java 程序的代码：\n生产者\r#\r\rpackage com.ng.my.publish_subscribe; import com.my.common.RabbitMqUtils; import com.rabbitmq.client.Channel; import com.rabbitmq.client.MessageProperties; import org.junit.Test; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import java.util.Scanner; import java.util.concurrent.TimeUnit; /** * @author : chengdu * @date : 2023/8/20-08 **/ public class EmitLog { private final Logger logger = LoggerFactory.getLogger(getClass()); private static final String EXCHANGE_NAME = \u0026#34;logs\u0026#34;; @Test public void acceptProducer()throws Exception{ Channel channel = RabbitMqUtils.getChannel(); //创建交换机 并指定广播模式  channel.exchangeDeclare(EXCHANGE_NAME, \u0026#34;fanout\u0026#34;); //从控制台当中接受信息  logger.info(\u0026#34;start\u0026#34;); Scanner scanner = new Scanner(System.in); while (scanner.hasNext()) { String message = scanner.next(); logger.info(\u0026#34; [x] Sent \u0026#39;\u0026#34; + message + \u0026#34;\u0026#39;\u0026#34;); //将消息推入到广播模式的交换机中  channel.basicPublish(EXCHANGE_NAME, \u0026#34;\u0026#34;, null, message.getBytes(\u0026#34;UTF-8\u0026#34;)); System.out.println(\u0026#34; [x] Sent \u0026#39;\u0026#34; + message + \u0026#34;\u0026#39;\u0026#34;); } TimeUnit.MINUTES.sleep(2); logger.info(\u0026#34;end\u0026#34;); } } 消费者\r#\r\rpackage com.ng.my.publish_subscribe; import com.my.common.RabbitMqUtils; import com.rabbitmq.client.Channel; import com.rabbitmq.client.DeliverCallback; import org.junit.Test; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import java.util.concurrent.TimeUnit; /** * @author : chengdu * @date : 2023/8/20-08 **/ public class ReceiveLogs { private final Logger logger = LoggerFactory.getLogger(getClass()); private static final String EXCHANGE_NAME = \u0026#34;logs\u0026#34;; @Test public void executeWork() throws Exception{ Channel channel = RabbitMqUtils.getChannel(); channel.exchangeDeclare(EXCHANGE_NAME, \u0026#34;fanout\u0026#34;); //创建一个具有随机名称的队列，或者， 甚至更好 - 让服务器为我们选择一个随机队列名称 (这也是为什么发布的时候压根没有指定 路由key)  String queueName = channel.queueDeclare().getQueue(); channel.queueBind(queueName, EXCHANGE_NAME, \u0026#34;\u0026#34;); logger.info(\u0026#34;queueName:\u0026#34;+queueName); System.out.println(\u0026#34; [*] Waiting for messages. To exit press CTRL+C\u0026#34;); DeliverCallback deliverCallback = (consumerTag, delivery) -\u0026gt; { String message = new String(delivery.getBody(), \u0026#34;UTF-8\u0026#34;); System.out.println(\u0026#34; [x] Received \u0026#39;\u0026#34; + message + \u0026#34;\u0026#39;\u0026#34;); }; //队列名称,自动应答  channel.basicConsume(queueName, true, deliverCallback, consumerTag -\u0026gt; { }); TimeUnit.MINUTES.sleep(2); logger.info(\u0026#34;end\u0026#34;); } } 总结\r#\r\r生产者将消息推送到广播模式的交换机中 消费者自己创建随机队列 然后将随机队列与广播模式的交换机绑定 最后就是可以直接处理了\n"}),a.add({id:95,href:'/life/docs/python/install/numpy/',title:"python NumPy  ",section:"python 插件学习",content:"NumPy\r#\r\r什么是 NumPy\r#\r\rNumPy 是用于处理数组的 python 库。\n它还拥有在线性代数、傅立叶变换和矩阵领域中工作的函数。\nNumPy 由 Travis Oliphant 于 2005 年创建。它是一个开源项目，您可以自由使用它。\nNumPy 指的是数值 Python（Numerical Python）\n为何使用 NumPy？\r#\r\r在 Python 中，我们有满足数组功能的列表，但是处理起来很慢。\nNumPy 旨在提供一个比传统 Python 列表快 50 倍的数组对象。\nNumPy 中的数组对象称为 ndarray，它提供了许多支持函数，使得利用 ndarray 非常容易。\n数组在数据科学中非常常用，因为速度和资源非常重要。\n数据科学：计算机科学的一个分支，研究如何存储、使用和分析数据以从中获取信息。\n"}),a.add({id:96,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/iqcs36rgjy/tbwyjex4gc/',title:"从此你不再受伤害",section:"人际剖析",content:"从此你不再受伤害\r#\r\r一:痛苦的本质是什么\r#\r\r没有痛苦就没有快乐 如果我从来都不饿,那么对我来说就不是快乐\n痛苦越大,快乐也就越大; 莫大的快乐一定是因为,你之前莫大的痛苦而这个痛苦被解决的那一瞬间你感到莫大的快乐 所以快乐和痛苦相互转化 或者说它们本身就是同一件事情\n痛苦不就是需求得到满足吗 那么如果你的需求很容易或者很快就得到满足 这不就是快乐吗 当你的需求能够很容易就得到满足 你不会陷入快乐,你会陷入无聊,然后你无聊之后你又会想找刺激,刺激里面一定包含痛苦 所以我们人就是不断在无聊和痛苦之间相互摇摆,然后在这个相互摇摆之间 某个微妙的平衡点 我们感到一瞬间的快乐 当你真正理解快乐就是瞬间,并且它只能是瞬间,而痛苦才是常态,你会很神奇地发现 你的人生就会变得不那么痛苦 有一些人活得非常痛苦 他们整天抱怨 觉得命运对他们非常不公平 为什么别人都活得那么快乐 但是自己却总是那么痛苦 但是你所理解地别人活得快乐,也是因为你从朋友圈里面 看到了别人分享的那些瞬间\n二:如何应对他人的攻击和批评\r#\r\r从此你的境界会永远高于那些骂你的人,而你不会被他们的言辞所伤害 这并不意味着我们不回击,我们可以和他们吵 ,但是我们回击是为了教会他人和我们相处的正确方式 也就是我们利用我们的愤怒 来让他人知道 他们和我们原先交流的方式是有问题的 但是并不意味着我们内心真正地破碎或者失控 在这个部分也会阐述所谓地“情商”\n三:攻击与指责\r#\r\r当他人批评攻击我们 我们该怎样应对 首先百分之八十情况下 大部分都对我们构成不了实质伤害,而是我们自己加于自己的一些伤害 比如说有些人非常在意他人的看法,但是很多时候他人 对你的负面看法是你自己想象出来的 而他人实际上并没有那个意思,我唱歌唱得不好听我还上台去唱,那我就是丢人现眼 但是其实很多时候观众根本就不care,你唱得还不好 他们只是想被娱乐而已 好,就算有人不喜欢你 不喜欢 它其实是一种非常私人得、内心得想法 你是管不到这种事情 或者说你也没有权力去管 别人喜不喜欢你 如果他不喜欢你 导致他做出了对你伤害性得行为 这种事情我们另谈,但是你没有必要管得这么宽,管道别人心里 究竟是对你什么样的看法 因为他确实有这样的自由\n扮演角色\r#\r\r当一个人在攻击和批评你的时候,他到底攻击 批评的是什么\n在你的认知里一个封闭的高铁空间内,大家都是奔波的旅人 需要一个舒适的休息环境 在这个环境内 其实大家都需要扮演好\u0026quot;有素质的乘客\u0026quot; 这个角色,也就意味着你不能抽烟 不能在车厢内大声喧哗或者发出给其他乘客 带来困扰性的声音,当有人没有扮演好这个角色 你会感到生气 所以其实你的攻击并不上升到对那个人 本身的攻击 而只停留于对他这个角色的攻击 而你希望的 也仅仅是他扮演好他的角色 其实 放眼到其他所有的场景都是一样的 , 就是他人在攻击或者批评你的时候 他们都不是在攻击你的本人,而是在攻击你没有扮演好你的角色, 他们想要的也只是你扮演好你的角色 他们 攻击不到你 因为他们并不知道真正的你是谁 真正的你是你所有角色的总和 但是我们在不同人或者不同场景中 势必要扮演不同的角色\n"}),a.add({id:97,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E6%B2%9F%E9%80%9A%E6%8A%80%E5%B7%A7/case3/',title:"怎样把事情说清楚，清晰表达的能力",section:"沟通技巧",content:"一:(金字塔原理)\r#\r\r如果你有15秒时间，你就讲结论和一级论点，如果有1分钟就把二级论点也讲了，如果还有时间就把剩下的每级论点依次讲出来。用这样的逻辑方式表达，就叫用最简单的话把一件事情说清楚。\n 结论先行  这几乎是金字塔原理最重要的一个概念。给领导汇报工作、表达自己的观点、回复别人问题都要用到，先说结论。\n但不是什么时候都要先说结论的。比如对方并不了解你所说问题的背景，你就要先把背景说完再说你的结论。\n自上而下表达，自下而上思考  自上而下表达，前面已经说了，从结论开始一级一级往下叙述就ok，这样可以让对方快速明白你的逻辑。\n自下而上思考，我说个我做调研的例子。\n假设我需要调研香飘飘奶茶一年为什么能卖出几亿杯，我就到网上去找所有有关香飘飘的信息，这些是金字塔最底层的点，然后我再将相关的点集合在一起，比如营销相关的，产品相关的，运营相关的，再接着给每一个模块分类，最后再得出结论。\n论点要尽量穷尽，且相互独立  比如我觉得你人很好，那我就要尽量去把证明你好的品质全部列出来：真诚、善良、勇敢、浪漫和诚实。所谓相互独立就是彼此没有交集，我前面罗列的“真诚”和“城市”有些类似，所以就要去掉一个。\n二:理清问题,分层次说\r#\r\r清晰的表达，是一种可迁移的能力！\n有时候，对某件事我们有很多想法，却一直讲不清楚。例如，为了做好一项工作报告，我们找了很多资料，想到了很多自以为精妙的观点，结果汇报结束后，却感觉报告效果不佳。\n造成这种现象的原因有哪些？大致有两方面原因：\n第一方面，想法很多，却讲不清楚。我们找了很多资料，想到了很多精妙的观点，但因为理不清楚这些资料如何组合，没考虑清楚要如何清晰地表达这件事，结果没汇报清晰。\n第二方面，你表达清晰了，对方却没抓住重点。\n想要表达清晰，大多数人会采用两种方法：\n1、做加法。既然三言两语讲不清楚，那我就多说，直到说清楚为止。这种方式，一方面会给听你说话的人造成较大负担，他必须全程听完才可能明白你的想法；第二方面，讲得太多，会把你要表达的重点意思掩盖了。\n2、分要点。把要说的内容分“第一、第二、第三”。很多优秀的表达者都习惯用这种方式表达，但使用这种表达方式之前，你需要清楚自己的分点原则，否则也只是徒有其表，无法达到表达清晰的目标。\n想要清晰表达，我们应该如何做？\n首先，需要做到知己知彼。\n当我们要讲一件事情时，对方对这件事完全不了解，结果你直接说出自己的观点和具体措施，想想对方会是什么感受？听得一头雾水。\n同样，当我们要讲一件事情时，对方已经考虑得非常全面，结果你讲的观点对方还认为不如他的理解，想想对方会是什么反应？不愿意听。\n所以，当你要表达之前，需要做到知己知彼。如果你摸清对方对此事的理解程度、态度、顾虑等，那么你的表达将更有针对性、可信性，效果将更加好。\n其次，清晰表达，不是要你讲清楚，而是要让对方听明白。\n永远记住，表达的本质，不是要你说得顺畅，而是要让对方听得明白、理解到位。所以，在思考如何清晰表达的时候，你的重点不是“我应该如何讲好”，而应该考虑“怎样讲，对方能听明白”。\n"}),a.add({id:98,href:'/life/docs/algorithm/alg-sort/',title:"常见排序算法知识体系",section:"数据结构与算法",content:"知识体系系统性梳理\r#\r\r排序 - 冒泡排序(Bubble Sort)\r#\r\r 它是一种较简单的排序算法。它会遍历若干次要排序的数列，每次遍历时，它都会从前往后依次的比较相邻两个数的大小；如果前者比后者大，则交换它们的位置。这样，一次遍历之后，最大的元素就在数列的末尾！ 采用相同的方法再次遍历时，第二大的元素就被排列在最大元素之前。重复此操作，直到整个数列都有序为止  排序 - 快速排序(Quick Sort)\r#\r\r 它的基本思想是: 选择一个基准数，通过一趟排序将要排序的数据分割成独立的两部分；其中一部分的所有数据都比另外一部分的所有数据都要小。然后，再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。  排序 - 插入排序(Insertion Sort)\r#\r\r 直接插入排序(Straight Insertion Sort)的基本思想是: 把n个待排序的元素看成为一个有序表和一个无序表。开始时有序表中只包含1个元素，无序表中包含有n-1个元素，排序过程中每次从无序表中取出第一个元素，将它插入到有序表中的适当位置，使之成为新的有序表，重复n-1次可完成排序过程。  排序 - Shell排序(Shell Sort)\r#\r\r 希尔排序实质上是一种分组插入方法。它的基本思想是: 对于n个待排序的数列，取一个小于n的整数gap(gap被称为步长)将待排序元素分成若干个组子序列，所有距离为gap的倍数的记录放在同一个组中；然后，对各组内的元素进行直接插入排序。 这一趟排序完成之后，每一个组的元素都是有序的。然后减小gap的值，并重复执行上述的分组和排序。重复这样的操作，当gap=1时，整个数列就是有序的。  排序 - 选择排序(Selection sort)\r#\r\r 它的基本思想是: 首先在未排序的数列中找到最小(or最大)元素，然后将其存放到数列的起始位置；接着，再从剩余未排序的元素中继续寻找最小(or最大)元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。  排序 - 堆排序(Heap Sort)\r#\r\r 堆排序是指利用堆这种数据结构所设计的一种排序算法。堆是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。  排序 - 归并排序(Merge Sort)\r#\r\r 将两个的有序数列合并成一个有序数列，我们称之为\u0026quot;归并\u0026quot;。归并排序(Merge Sort)就是利用归并思想对数列进行排序。  排序 - 桶排序(Bucket Sort)\r#\r\r 桶排序(Bucket Sort)的原理很简单，将数组分到有限数量的桶子里。每个桶子再个别排序（有可能再使用别的排序算法或是以递归方式继续使用桶排序进行排序）  排序 - 基数排序(Radix Sort)\r#\r\r 它的基本思想是: 将整数按位数切割成不同的数字，然后按每个位数分别比较。具体做法是: 将所有待比较数值统一为同样的数位长度，数位较短的数前面补零。然后，从最低位开始，依次进行一次排序。这样从最低位排序一直到最高位排序完成以后, 数列就变成一个有序序列  目前优先学习数据结构\r#\r\r 动态数组 链表 栈 队列 树 图 堆 哈希表 递归、递归优化 二分查找、二分查找优化  "}),a.add({id:99,href:'/life/docs/algorithm/data-structure/',title:"数据结构",section:"数据结构与算法",content:"数据结构\r#\r\r   容器 底层数据结构 时间复杂度 有无序 可不可重复 其他     array 数组 随机读改 O(1) 无序 可重复 支持随机访问   vector 数组 随机读改、尾部插入、尾部删除 O(1)头部插入、头部删除 O(n) 无序 可重复 支持随机访问   deque 双端队列 头尾插入、头尾删除 O(1) 无序 可重复 一个中央控制器 + 多个缓冲区，支持首尾快速增删，支持随机访问   forward_list 单向链表 插入、删除 O(1) 无序 可重复 不支持随机访问   list 双向链表 插入、删除 O(1) 无序 可重复 不支持随机访问   stack deque / list 顶部插入、顶部删除 O(1) 无序 可重复 deque 或 list 封闭头端开口，不用 vector 的原因应该是容量大小有限制，扩容耗时   queue deque / list 尾部插入、头部删除 O(1) 无序 可重复 deque 或 list 封闭头端开口，不用 vector 的原因应该是容量大小有限制，扩容耗时   priority_queue vector + max-heap 插入、删除 O(log2n) 有序 可重复 vector容器+heap处理规则   set 红黑树 插入、删除、查找 O(log2n) 有序 不可重复    multiset 红黑树 插入、删除、查找 O(log2n) 有序 可重复    map 红黑树 插入、删除、查找 O(log2n) 有序 不可重复    multimap 红黑树 插入、删除、查找 O(log2n) 有序 可重复    unordered_set 哈希表 插入、删除、查找 O(1) 最差 O(n) 无序 不可重复    unordered_multiset 哈希表 插入、删除、查找 O(1) 最差 O(n) 无序 可重复    unordered_map 哈希表 插入、删除、查找 O(1) 最差 O(n) 无序 不可重复    unordered_multimap 哈希表 插入、删除、查找 O(1) 最差 O(n) 无序 可重复     顺序结构\r#\r\r顺序栈（Sequence Stack） SqStack\r#\r\r顺序栈数据结构和图片\ntypedef struct { ElemType *elem; int top; int size; int increment; } SqStack; 队列（Sequence Queue）\r#\r\r队列数据结构\ntypedef struct { ElemType * elem; int front; int rear; int maxSize; }SqQueue; 非循环队列\r#\r\r非循环队列图片\nSqQueue.rear++\n循环队列\r#\r\r循环队列图片\nSqQueue.rear = (SqQueue.rear + 1) % SqQueue.maxSize\n顺序表（Sequence List）SqList\r#\r\r顺序表数据结构和图片\ntypedef struct { ElemType *elem; int length; int size; int increment; } SqList; 链式结构 LinkList\r#\r\r链式数据结构\n链队列（Link Queue）\r#\r\r链队列图片\n线性表的链式表示\r#\r\r单链表（Link List）\r#\r\r单链表图片\n双向链表（Du-Link-List）\r#\r\r双向链表图片\n循环链表（Cir-Link-List）\r#\r\r循环链表图片\n哈希表 HashTable\r#\r\r概念\r#\r\r哈希函数：H(key): K -\u0026gt; D , key ∈ K\n构造方法\r#\r\r 直接定址法 除留余数法 数字分析法 折叠法 平方取中法  冲突处理方法\r#\r\r 链地址法：key 相同的用单链表链接 开放定址法  线性探测法：key 相同 -\u0026gt; 放到 key 的下一个位置，Hi = (H(key) + i) % m 二次探测法：key 相同 -\u0026gt; 放到 Di = 1^2, -1^2, ..., ±（k)^2,(k\u0026lt;=m/2） 随机探测法：H = (H(key) + 伪随机数) % m    线性探测的哈希表数据结构\r#\r\r线性探测的哈希表数据结构和图片\ntypedef char KeyType; typedef struct { KeyType key; }RcdType; typedef struct { RcdType *rcd; int size; int count; bool *tag; }HashTable; 递归\r#\r\r概念\r#\r\r函数直接或间接地调用自身\n递归与分治\r#\r\r 分治法  问题的分解 问题规模的分解   折半查找（递归） 归并排序（递归） 快速排序（递归）  递归与迭代\r#\r\r 迭代：反复利用变量旧值推出新值 折半查找（迭代） 归并排序（迭代）  广义表\r#\r\r头尾链表存储表示\r#\r\r广义表的头尾链表存储表示和图片\n// 广义表的头尾链表存储表示 typedef enum {ATOM, LIST} ElemTag; // ATOM==0：原子，LIST==1：子表 typedef struct GLNode { ElemTag tag; // 公共部分，用于区分原子结点和表结点  union { // 原子结点和表结点的联合部分  AtomType atom; // atom 是原子结点的值域，AtomType 由用户定义  struct { struct GLNode *hp, *tp; } ptr; // ptr 是表结点的指针域，prt.hp 和 ptr.tp 分别指向表头和表尾  } a; } *GList, GLNode; 扩展线性链表存储表示\r#\r\r扩展线性链表存储表示和图片\n// 广义表的扩展线性链表存储表示 typedef enum {ATOM, LIST} ElemTag; // ATOM==0：原子，LIST==1：子表 typedef struct GLNode1 { ElemTag tag; // 公共部分，用于区分原子结点和表结点  union { // 原子结点和表结点的联合部分  AtomType atom; // 原子结点的值域  struct GLNode1 *hp; // 表结点的表头指针  } a; struct GLNode1 *tp; // 相当于线性链表的 next，指向下一个元素结点 } *GList1, GLNode1; 二叉树 BinaryTree\r#\r\r性质\r#\r\r 非空二叉树第 i 层最多 2(i-1) 个结点 （i \u0026gt;= 1） 深度为 k 的二叉树最多 2k - 1 个结点 （k \u0026gt;= 1） 度为 0 的结点数为 n0，度为 2 的结点数为 n2，则 n0 = n2 + 1 有 n 个结点的完全二叉树深度 k = ⌊ log2(n) ⌋ + 1 对于含 n 个结点的完全二叉树中编号为 i （1 \u0026lt;= i \u0026lt;= n） 的结点  若 i = 1，为根，否则双亲为 ⌊ i / 2 ⌋ 若 2i \u0026gt; n，则 i 结点没有左孩子，否则孩子编号为 2i 若 2i + 1 \u0026gt; n，则 i 结点没有右孩子，否则孩子编号为 2i + 1    存储结构\r#\r\r二叉树数据结构\ntypedef struct BiTNode { TElemType data; struct BiTNode *lchild, *rchild; }BiTNode, *BiTree; 顺序存储\r#\r\r二叉树顺序存储图片\n链式存储\r#\r\r二叉树链式存储图片\n遍历方式\r#\r\r 先序遍历 中序遍历 后续遍历 层次遍历  分类\r#\r\r 满二叉树 完全二叉树（堆）  大顶堆：根 \u0026gt;= 左 \u0026amp;\u0026amp; 根 \u0026gt;= 右 小顶堆：根 \u0026lt;= 左 \u0026amp;\u0026amp; 根 \u0026lt;= 右   二叉查找树（二叉排序树）：左 \u0026lt; 根 \u0026lt; 右 平衡二叉树（AVL树）：| 左子树树高 - 右子树树高 | \u0026lt;= 1 最小失衡树：平衡二叉树插入新结点导致失衡的子树：调整：  LL型：根的左孩子右旋 RR型：根的右孩子左旋 LR型：根的左孩子左旋，再右旋 RL型：右孩子的左子树，先右旋，再左旋    其他树及森林\r#\r\r树的存储结构\r#\r\r 双亲表示法 双亲孩子表示法 孩子兄弟表示法  并查集\r#\r\r一种不相交的子集所构成的集合 S = {S1, S2, \u0026hellip;, Sn}\n平衡二叉树（AVL树）\r#\r\r性质\r#\r\r | 左子树树高 - 右子树树高 | \u0026lt;= 1 平衡二叉树必定是二叉搜索树，反之则不一定 最小二叉平衡树的节点的公式：F(n)=F(n-1)+F(n-2)+1 （1 是根节点，F(n-1) 是左子树的节点数量，F(n-2) 是右子树的节点数量）  平衡二叉树图片\n最小失衡树\r#\r\r平衡二叉树插入新结点导致失衡的子树\n调整：\n LL 型：根的左孩子右旋 RR 型：根的右孩子左旋 LR 型：根的左孩子左旋，再右旋 RL 型：右孩子的左子树，先右旋，再左旋  红黑树\r#\r\r红黑树的特征是什么？\r#\r\r 节点是红色或黑色。 根是黑色。 所有叶子都是黑色（叶子是 NIL 节点）。 每个红色节点必须有两个黑色的子节点。（从每个叶子到根的所有路径上不能有两个连续的红色节点。）（新增节点的父节点必须相同） 从任一节点到其每个叶子的所有简单路径都包含相同数目的黑色节点。（新增节点必须为红）  调整\r#\r\r 变色 左旋 右旋  应用\r#\r\r 关联数组：如 STL 中的 map、set  红黑树、B 树、B+ 树的区别？\r#\r\r 红黑树的深度比较大，而 B 树和 B+ 树的深度则相对要小一些 B+ 树则将数据都保存在叶子节点，同时通过链表的形式将他们连接在一起。  B 树（B-tree）、B+ 树（B+-tree）\r#\r\rB 树、B+ 树图片\n特点\r#\r\r 一般化的二叉查找树（binary search tree） “矮胖”，内部（非叶子）节点可以拥有可变数量的子节点（数量范围预先定义好）  应用\r#\r\r 大部分文件系统、数据库系统都采用B树、B+树作为索引结构  区别\r#\r\r B+树中只有叶子节点会带有指向记录的指针（ROWID），而B树则所有节点都带有，在内部节点出现的索引项不会再出现在叶子节点中。 B+树中所有叶子节点都是通过指针连接在一起，而B树不会。  B树的优点\r#\r\r对于在内部节点的数据，可直接得到，不必根据叶子节点来定位。\nB+树的优点\r#\r\r 非叶子节点不会带上 ROWID，这样，一个块中可以容纳更多的索引项，一是可以降低树的高度。二是一个内部节点可以定位更多的叶子节点。 叶子节点之间通过指针来连接，范围扫描将十分简单，而对于B树来说，则需要在叶子节点和内部节点不停的往返移动。   B 树、B+ 树区别来自：differences-between-b-trees-and-b-trees、B树和B+树的区别\n 八叉树\r#\r\r八叉树图片\n八叉树（octree），或称八元树，是一种用于描述三维空间（划分空间）的树状数据结构。八叉树的每个节点表示一个正方体的体积元素，每个节点有八个子节点，这八个子节点所表示的体积元素加在一起就等于父节点的体积。一般中心点作为节点的分叉中心。\n用途\r#\r\r 三维计算机图形 最邻近搜索  其它参考\r#\r\rjavaguide\njavabetter\ninterview\n"}),a.add({id:100,href:'/life/docs/algorithm/data-structure/array/',title:"数组",section:"数据结构",content:"数组\r#\r\r数组的优点:\r#\r\r 存取速度快  数组的缺点:\r#\r\r 事先必须知道数组的长度 插入删除元素很慢 空间通常是有限制的 需要大块连续的内存块 插入删除元素的效率很低  "}),a.add({id:101,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/gsmgajphs7/',title:"看书看到大脑疲劳以后，应如何快速恢复大脑状态",section:"自我提升",content:" 看书看到大脑疲劳以后，应如何快速恢复大脑状态  参考1\r#\r\r 很多工作狂人都希望能够不浪费生命里的每一分钟，但从神经生物学的角度这是不实际的，就和CPU在高速运转时会发热一样，大脑在学习思考的时候也会产生大量的代谢废物，这些有害的蛋白如果不被及时清理，想要继续高效工作就很困难，而脑脊液会在大脑中循环，通过和脑间液交换物质，把废物带走，但是这个过程在清醒时并不快，睡眠时会清理得更快\n   一些可行的建议\n  运动 有研究表明，运动会促进大脑和外围组织发生细胞自噬，就是说，运动可以促进神经元自己把废物给吞掉，然后降解，所以你可以在学习疲劳后运动一会儿再接着学习。\n  睡觉 之前说了，睡觉时清除代谢废物的速度是比醒着的时候快的，所以你可以小睡一会儿再接着学习。\n  营养 大脑是一个非常昂贵的器官，消耗大量能量，所以保证充足的营养也是高效学习的一个基本条件。\n  咖啡及类似的提高神经系统兴奋性的药物 咖啡因和腺嘌呤核苷类似，都可以和腺嘌呤核苷受体结合，而当腺嘌呤核苷与它的受体结合后可以减缓神经细胞的活动，一般在睡眠时两者结合。咖啡因与腺嘌呤核苷受体结合后不促使细胞活动降低，相反地，它阻止腺嘌呤核苷与它的接受器结合，其结果是神经细胞活动增高。不过它的作用很短暂，而且会对腺嘌呤核苷更加敏感，也就会越来越困，并不是持久之计。\n  参考2\r#\r\r 大脑一直刻意地紧着一根弦看书，很累，并并不是专注地读书时进入的精神内敛的状态，用坏脑子，用坏眼睛。而大脑疲惫的时候，是需要通过脑脊液冲刷掉有害蛋白，去修复大脑\n 最常用的办法就是呼吸和冥想 ，我记得最重要的事：呼吸是正念的矛，不要评判自己，不要过度批判自己。\n静坐，步行冥想，这是解决自动运行状态的，仔细感受脚底与地面接触的感觉，试着感受走路身体的每一位的感觉，这种将注意力集中在自己身体每个部位，给自己做的每个动作贴标签，这是一种非常简单的脱离自动驾驶的办法，如果你要想养成一个习惯，给自己一个板机，我一洗澡就要睡觉，一戴上手表就学习，这是一种非常重要的办法\n学会睡觉，就寝和睡觉的时间要确定\n上床之前把一天的担心写在纸上，不然要一直记在心里，可以轻松很多\n早上起来要晒太阳，会很大程度解决你的疲劳感，中午可以睡觉，不要超过半小时，不然会进入深度睡眠区\n避免睡前一小时吃东西，不要在床上看手机看电脑，要让大脑记住床是睡觉的地方\n心里很烦睡不着觉，慈悲心正念能够有效地给变你跟别人的关系，先呼吸十分钟，想象自己要关心的人的对象，注意的感觉，感受你的心跳加速，希望你能避开风险，希望你幸福安心，希望你健健康康，你需要更多地观爱，这个办法很有效地放松大脑，有效地释放善意很有办法\n疲劳会以缺乏善意的方式来表现\n学会接触大自然，能够把自己从日常工作学习中解放出来，接触非人工产物\n接触美的事物\n压力呼吸化法。这是消解焦虑很好的办法。内心的反映，身体的变化，用一句话来描述压力的成因。像平常一样把注意力集中在呼吸上，你试着把集中在呼吸上的扩散出来，想象自己身体每个部位呼吸，无精打采，你的身体会撞到平常不会撞的地方，注意力不集中，治疗身体疲劳，终究是大脑和内心的恶问题\n参考\n"}),a.add({id:102,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/hw2jindwcd/',title:"100篇锻炼口才表达能力的绕口令（精选版）",section:"自信",content:"1、初入江湖：化肥会挥发\n2、小有名气：黑化肥发灰，灰化肥发黑\n3、名动一方：黑化肥发灰会挥发；灰化肥挥发会发黑\n4、天下闻名：黑化肥挥发发灰会花飞；灰化肥挥发发黑会飞花\n5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞；灰黑化肥会挥发发黑灰为讳飞花\n6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞；灰黑化肥会会挥发发黑灰为讳飞花化为灰　7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞；灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰\n8、喇嘛和哑巴\n打南边来了个喇嘛，手里提拉着五斤鳎(tǎ) 目。打北边来了个哑巴，腰里别着个喇叭。\n南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。\n哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。\n喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。\n喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。\n9、六十六头牛\n六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。\n六十六篓油，堆在六十六间楼；六十六头牛，扣在六十六棵垂杨柳。\n忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。\n10、老六放牛\n柳林镇有个六号楼，刘老六住在六号楼。\n有一天，来了牛老六，牵了六只猴；来了侯老六，拉了六头牛；来了仇老六，提了六篓油；来了尤老六，背了六匹绸。\n牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。\n牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。\n11、天上七颗星\n天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。\n吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。\n12、连念七遍就聪明\n天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。\n呼噜呼噜扇灭七盏灯，噯唷噯唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。\n13、司小四和史小世\n司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。\n司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。\n史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。\n司小四说我四十四斤四两西红柿可以增加营养防近视，\n史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。\n14、酸枣子\n山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。\n山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子，\n山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。\n山下三小子，又找山上三老子，借三斗三升酸枣子，\n山上三老子，还没有三斗三升酸枣子，\n只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。\n过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。\n15、墙上一根钉\n墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。\n掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。\n瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。\n16、板凳与扁担\n板凳宽，扁担长。\n扁担没有板凳宽，\n板凳没有扁担长。\n扁担在绑在板凳上，\n板凳不让扁担绑在板凳上，\n扁担偏要扁担绑在板凳上。\n17、白老八\n白老八门前栽了八颗白果树，\n从北边飞来了八个白八哥儿不知在哪住。\n白老八拿了八个巴达棍儿要打八个白八哥儿，\n八个八哥儿飞上了八颗白果树，\n不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，\n还是打着了八颗白果树。\n18、鹅和鸽\n天上一群大白鸽，河里一群大白鹅。\n白鸽尖尖红嘴壳，白鹅曲项向天歌。\n白鸽剪开云朵朵，白鹅拨开浪波波。\n鸽乐呵呵，鹅活泼波，\n白鹅白鸽碧波男天真快乐。\n19、水连天\n天连水，水连天，\n水天一色望无边，\n蓝蓝的天似绿水，\n绿绿的水如蓝天。\n到底是天连水，\n还是水连天？\n20、买菜\n小艾和小戴，一起去买菜。\n小艾把一斤菜给小戴，\n小戴有比小艾多一倍的菜；\n小戴把一斤菜给小艾，\n小艾、小戴就有一般多的菜。\n21、猫鼻子\n白猫黑鼻子，\n黑猫白鼻子；\n黑猫的白鼻子，\n碰破了白猫黑鼻子\n白猫的黑鼻子破了\n剥了秕谷壳儿补鼻子；\n黑猫的白鼻子不破\n不剥秕谷壳儿补鼻子。\n22、倒吊鸟\n梁上两对倒吊鸟，\n泥里两对鸟倒吊。\n可怜梁上的两对倒吊鸟，\n惦着泥里的两对鸟倒吊，\n可怜泥里的两对鸟倒吊，\n也惦着梁上的两对倒吊鸟。\n23、兜装豆\n兜里装豆，\n豆装满兜，\n兜破漏豆。\n倒出豆，补破兜，\n补好兜，又装豆，\n装满兜，不漏豆。\n24、两只鹅\n河边两只鹅，\n一同过了河；\n白鹅去拾草，\n黑鹅来搭窝。\n冬天北风刮，\n草窝真暖和，\n住在草窝里，\n哦哦唱支歌。\n25、四个头\n天上有日头，\n地下有石头，\n嘴里有舌头，\n瓶口有塞头。\n天上是日头不是石头，\n地下是石头不是日头，\n嘴里是舌头不是塞头，\n瓶中是塞头不是舌头。\n26、一个人\n这边一个人，\n挑了一挑瓶。\n那边一个人，\n担了一挑盆。\n瓶碰烂了盆，\n盆碰烂了瓶。\n卖瓶买盆来赔盆，\n卖盆买瓶来赔瓶。\n瓶不能赔盆，\n盆不能赔瓶。\n27、一场空\n抬头看，满天星，\n低头看，一道坑。\n坑里看，栽满葱，\n葱上看，冻着冰。\n屋里看，点着灯，\n墙上看，钉的钉。\n钉上看，挂的弓，\n弓上看，卧的鹰。\n寒冬天，刮大风，\n刮散了，满天星。\n28、学捏梨\n盘里放着一个梨，\n桌上放块橡皮泥。\n小丽用泥学捏梨，\n眼看着梨手捏泥，\n比比，真梨、假梨差不离。\n29、小花鼓\n一面小花鼓，\n鼓上画老虎。\n妈妈用布来补。\n到底是布补鼓，\n还是布补虎。\n30、分果果\n多多和哥哥，\n坐下分果果。\n哥哥让多多，\n多多让哥哥。\n都说要小个，\n外婆乐呵呵。\n31、嘴和腿\n嘴说腿，腿说嘴，\n嘴说腿爱跑腿，\n腿说嘴爱卖嘴。\n光动嘴不动腿，\n光动腿不动嘴，\n不如不长腿和嘴。\n32、瓦打马\n路上跑来马，\n撞上路边瓦，\n瓦打坏马，\n马踏碎瓦，\n瓦要马赔瓦，\n马要瓦赔马。\n33、画葫芦\n胡图用笔画葫芦，\n葫芦画得真糊涂，\n糊涂不能算葫芦，\n要画葫芦不糊涂，\n胡图决心不糊涂，\n画出一只大葫芦。\n34、好孩子\n张家有个小英子，\n王家有个小柱子。\n张家的小英子，\n自己穿衣洗袜子，\n天天扫地擦桌子，\n王家的小柱子，\n捡到一只皮夹子，\n还给后院大婶子。\n小英子，小柱子，\n他们都是好孩子。\n35、小牛赔油\n小牛放学去打球，\n踢倒老刘一瓶油，\n小牛回家取来油，\n向老刘道歉又赔油\n老刘不要小牛还油\n小牛硬要把油还给老刘，\n老刘夸小牛，\n小牛直摇头，\n你猜老刘让小牛还油，\n还是不让小牛还油。\n36、秃丫头\n从南来了个秃丫头\n胳膊上挎着个破笆斗，\n里头有堆羊骨头，\n伸手拿骨头，\n送在口里啃骨头。\n地下有块破砖头，\n绊倒了秃丫头，\n撒了羊骨头。\n37、补裤\n一块土粗布，\n一条粗布裤，\n哥哥屋里补布裤，\n飞针走线自己做。\n粗布裤上补粗布，\n土粗布补粗布裤，\n哥哥穿上粗布裤，\n艰苦朴素牢记住。\n38、藤绳挂风灯\n藤绳挂风灯，\n风更猛，\n风更增，\n灯碰藤绳藤碰灯。\n39、鸟和猫\n树上一只鸟，\n地上一只猫。\n地上的猫想咬树上的鸟，\n树上的鸟想啄猫的毛。\n40、送花\n华华有两朵红花\n红红有两朵黄花\n华华想要黄花，\n红红想要红花，\n华华送给红红一朵红花，\n红红送给华华一朵黄花。\n41、颠倒歌\n咬牛奶，喝面包，\n夹着火车上皮包。\n东西街，南北走，\n出门看见人咬狗。\n拿起狗来打砖头，\n又怕砖头咬我手。\n42、狗与猴\n树上卧只猴，\n树下蹲条狗。\n猴跳下来撞了狗，\n狗翻起来咬住猴，\n不知是猴咬狗，\n还是狗咬猴。\n43、白家伯伯\n北贫坡上白家有个伯伯，\n家里养着一百八十八只白鹅，\n门口种着一百八十八棵白果，\n树上住着一百八十八只八哥。\n八哥在白果树上吃白果，\n白鹅气得直叫：我饿！我饿！\n44、白石搭\n白石白又滑，\n搬来白石搭白塔。\n白石塔，\n白石塔，\n白石搭石塔，\n白塔白石搭。\n搭好白石塔，\n白塔白又滑。\n45、青龙洞\n青龙洞中龙做梦，\n青龙做梦出龙洞，\n做了千年万载梦，\n龙洞困龙在深洞。\n自从来了新愚公，\n愚公捅开青龙洞，\n青龙洞中涌出龙，\n龙去农田做农工。\n46、煤和灰\n东边一堆煤，\n西边一堆灰。\n先用车推煤，\n再用车推灰。\n烧煤变成灰，\n煤灰来自煤。\n煤堆变灰堆，\n灰堆赛煤堆。\n有煤就有灰，\n你说对不对？\n47、羊和狼\n东边来了一只小山羊，\n西边来了一只大灰狼，\n一起走到小桥上，\n小山羊不让大灰狼\n大灰狼不让小山羊\n小山羊叫大灰狼让小山羊，\n大灰狼叫小山羊让大灰狼，\n羊不让狼，\n狼不让羊，\n扑通一起掉到河中央。\n48、汤烫塔\n老唐端蛋汤，\n踏凳登宝塔，\n只因凳太滑，\n汤洒汤烫塔。\n49、小道上\n小王的姜撞翻老杨的缸，\n老杨的缸碰倒小王的姜。\n小王放下姜去扶老杨的缸，\n老杨放下缸去帮小王装姜。\n50、看豆豆\n小妞妞围个圆兜兜\n牛头沟边看豆豆，\n忽听沟前喊抓牛，\n妞妞怕牛牛踩豆豆\n紧紧抓住牛牛不松手。\n51、白果树\n我从伯伯门前过，\n看见伯爹伯妈门前种着白果树，\n白果树上站着百十百个白斑鸠，\n我就拣了百十百块白石头，\n打那百十百个白斑鸠。\n52、麻字谣\n麻家爷爷挑着一对麻叉口，\n走到麻家婆婆的家门口。\n麻家婆婆的一对麻花狗，\n咬破了麻家爷爷的麻叉口。\n麻家婆婆拿来麻针、麻线，\n来补麻家爷爷的麻叉口。\n53、盆和瓶\n桌上放个盆，\n盆里有个瓶，\n砰砰啪啪，\n啪啪砰砰，\n不知是瓶碰盆，\n还是盆碰瓶。\n54、老鼠嗅着油豆香\n油一缸，豆一筐，\n老鼠嗅着油豆香。\n爬上缸，跳进筐，\n偷油偷豆两头忙。\n又高兴，又慌张，\n脚一滑，身一晃，\n“扑通”一声跌进缸。\n55、造房子\n捡颗方石子，\n在地上画个方格子\n画好了格子造房子\n画个大方格子造个大房子，\n画个小方格子造个小房子，\n楼上的房子分给鸽子，\n楼下的房子分给小兔子。\n56、鹅过河\n哥哥弟弟坡前坐，\n坡上卧着一只鹅，\n坡下流着一条河，\n哥哥说：宽宽的河，\n弟弟说：白白的鹅。\n鹅要过河，\n河要渡鹅。\n不知是鹅过河，\n还是河渡鹅\n57、画狮子\n有个好孩子，\n拿张图画纸，\n来到石院子，\n学画石狮子。\n一天来画一次石狮子，\n十天来画十次石狮子。\n次次画石狮子，\n天天画石狮子，\n死狮子画成了“活狮子”。\n58、捉壁虎\n李虎捉壁虎，\n本是虎捉虎，\n李虎满屋转，\n壁虎不敢咬李虎，\n李虎也捉不住壁虎。\n59、比锤\n炉东有个锤快锤，\n炉西有个锤锤快，\n两人炉前来比赛，\n不知是锤快锤比锤锤快锤得快？\n还是锤锤快比锤快锤锤得快？\n60、换斑竹\n斑竹林里头有干斑竹，\n包谷林里头有干包谷。\n潘家三虎走进包谷林，\n掰了一担干包谷，\n回家路过斑竹林，\n换了三根干斑竹。\n61、斗放豆\n黑豆放在黑豆里，\n黑豆里边放黑豆，\n黑豆放黑豆，\n黑豆放黑豆，\n不知黑豆放黑豆，\n还是黑豆放黑豆。\n62、石榴树上结辣椒\n颠倒话，话颠倒，\n石榴树上结辣椒。\n东西大路南北走，\n碰见兔子去咬狗。\n拿住狗，打砖头，\n砖头咬住我的手。\n63、碰碰车\n碰碰车，车碰碰，\n坐着朋朋和平平。\n平平开车碰朋朋，\n朋朋开车碰平平，\n不知是平平碰朋朋，\n还是朋朋碰平平。\n64、小猪\n小猪扛锄头，\n吭哧吭哧走。\n小鸟唱枝头，\n小猪扭头瞅，\n锄头撞石头，\n石头砸猪头。\n小猪怨锄头，\n锄头怨猪头。\n65、捉兔子\n一位爷爷他姓顾，\n上街打醋又买布。\n买了布，打了醋，\n回头看见鹰抓兔。\n放下布，搁下醋，\n上前去追鹰和兔，\n飞了鹰，跑了兔。\n打翻醋，醋湿布。\n66、窝和锅\n树上一个窝，\n树下一口锅，\n我掉下来打着锅，\n窝和锅都破，\n锅要窝赔锅，\n窝要锅赔窝，\n闹了半天，\n不知该锅赔窝，\n还是窝赔锅。\n67、花鸭与彩霞\n水中映着彩霞，\n水面游着花鸭。\n霞是五彩霞，\n鸭是麻花鸭。\n麻花鸭游进五彩霞，\n五彩霞网住麻花鸭。\n乐坏了鸭，\n拍碎了霞，\n分不清是鸭还是霞。\n68、蚕和蝉\n这是蚕，\n那是蝉，\n蚕常在叶里藏，\n蝉常在林里唱。\n69、南南有个篮篮\n南南有个篮篮，篮篮装着盘盘，\n盘盘放着碗碗，碗碗盛着饭饭。\n南南翻了篮篮，篮篮扣了盘盘，\n盘盘打了碗碗，碗碗撒了饭饭。\n70、小三登山\n三月三，小三去登山；\n上山又下山，下山又上山；\n登了三次山，跑了三里三；\n出了一身汗，湿了三件衫；\n小三山上大声喊，离天只有三尺三。\n71、玻璃杯和白开水\n玻璃杯倒进白开水，\n白开水倒进玻璃杯。\n玻璃杯倒进白开水就成了装白开水的玻璃杯。\n装白开水的玻璃杯倒进白开水，\n白开水倒进装白开水的玻璃杯。\n72、小华和胖娃\n小华和胖娃，两人种花又种瓜，\n小华会种花不会种瓜，\n胖娃会种瓜不会种花，\n小华教胖娃种花，\n胖娃教小华种瓜。\n73、八十八岁公公\n八十八岁公公门前有八十八棵竹，\n八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。\n八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，\n八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，\n不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿\n74、教练和主力\n男教练是女教练，\n吕教练是男教练，\n男教练不是男教练，\n吕教练不是女教练。\n蓝南是男篮主力，\n吕楠是女篮主力，\n吕教练在男篮训练蓝南，\n蓝教练在女篮训练吕楠。\n75、石小四和史肖石\n石小四，史肖石，一同来到阅览室。\n石小四年十四，史肖石年四十。\n年十四的石小四爱看诗词，\n年四十的史肖石爱看报纸。\n年四十的史肖石发现了好诗词，\n忙递给年十四的石小四，\n年十四的石小四见了好报纸，\n忙递给年四十的史肖石。\n76、牛驮油\n九十九头牛，\n驮着九十九个篓。\n每篓装着九十九斤油。\n牛背油篓扭着走，\n油篓磨坏篓漏油，\n九十九斤一个篓，\n还剩六十六斤油。\n你说漏了几十几斤油？\n77、任命、人名\n任命是任命，\n人名是人名，\n任命人名不能错，\n错了人名错任命。\n78、六叔和六舅\n好六叔和好六舅，\n借给六斗\n六升绿绿豆。\n打罢秋，接住豆，\n再还六叔六舅六斗六升绿绿豆。\n79、王婆夸瓜又夸花\n王婆卖瓜又卖花，\n一边卖来一边夸，\n又夸花，又夸瓜，\n夸瓜大，大夸花，\n瓜大，花好，笑哈哈。\n80、九个酒迷喝醉酒\n九月九，九个酒迷喝醉酒。\n九个酒杯九杯酒，九个酒迷喝九口。\n喝罢九口酒，又倒九杯酒。\n九个酒迷端起酒，“咕咚、咕咚”又九口。\n九杯酒，酒九口，喝罢九个酒迷醉了酒。\n81、胡苏夫和吴夫苏\n胡庄有个胡苏夫，\n吴庄有个吴夫苏。\n胡庄的胡苏夫爱读诗书，\n吴庄的吴夫苏爱读古书，\n胡苏夫的书屋摆满了诗书，\n吴夫苏的书屋放满了古书。\n82、小秋和小牛\n小妞妞，叫小秋，梳着两个小抓鬏，\n小胖胖，叫小牛，穿着一个小兜兜。\n小秋帮着小牛记扣扣，\n小牛帮小秋剥豆豆，\n小秋、小牛手拉手，\n一块儿玩，一块儿走。\n83、数狮子\n公园有四排石狮子，\n每排是十四只大石狮子，\n每只大石狮子背上是一只小石狮子，\n每只大石狮子脚边是四只小石狮子，\n史老师领四十四个学生去数石狮子，\n你说共数出多少只大石狮子和多少只小石狮子？\n84、酒换油\n一葫芦酒九两六，\n一葫芦油六两九。\n六两九的油，\n要换九两六的酒，\n九两六的酒，\n不换六两九的油。\n85、多少罐\n一个半罐是半罐，\n两个半罐是一罐；\n三个半罐是一罐半，\n四个半罐是两罐；\n五个半罐是两罐半，\n六个半罐是三满罐；\n七个、八个、九个半罐，\n请你算算是多少罐。\n86、两个排\n营房里出来两个排，\n直奔正北菜园来，\n一排浇波菜，二排砍白菜。\n剩下八百八十八棵大白菜没有掰。\n一排浇完了波菜，\n又把八百八十八棵大白菜掰下来；\n二排砍完白菜，\n把一排掰下来的八百八十八棵大白菜背回来。\n87、补皮裤\n出西门走七步，\n扒鸡皮补皮裤，\n不知是皮裤补鸡皮，\n还是鸡皮补皮裤？\n88、蜂和蜜\n蜜蜂酿蜂蜜，\n蜂蜜养蜜蜂。\n蜜养蜜蜂蜂酿蜜，\n蜂酿蜂蜜蜜养蜂。\n89、小毛与花猫\n小毛抱着花猫，花猫用爪抓小毛，\n小毛用手拍花猫，花猫抓破了小毛，\n小毛打疼了花猫，小毛哭，花猫叫，\n小毛松开了花猫，花猫跑离了小毛。\n90、小花猫\n小花猫爱画画，先画一朵腊梅花，\n又画一个小喇叭，带着腊梅花，\n吹着小喇叭，回家去见妈妈，\n妈妈见了笑哈哈。\n91、铜勺铁勺舀油\n铜勺舀热油，铁勺舀凉油。\n铜勺舀了热油舀凉油，\n铁勺舀了凉油舀热油。\n一勺热油一勺凉油，\n热油凉油都是油。\n92、八座屋\n八只小白兔，\n住在八棱八角八座屋。\n八个小孩要逮八只小白兔，\n吓得小白兔，\n不敢再住八棱八角八座屋。\n93、小花猫\n小花猫爱画画，\n先画一朵腊梅花，\n又画一个小喇叭，\n带着腊梅花，\n吹着小喇叭，\n回家去见妈妈，\n妈妈见了笑哈哈。\n94、四和十\n四和十，十和四，十四和四十，\n四十和十四。\n说好四和十得靠舌头和牙齿，\n谁说四十是细席，\n他的舌头没用力；谁说十四是适时，\n他的舌头没伸直。认真学，常练习，\n十四、四十、四十四。\n95、黄狗咬我手\n清早上街走，走到周家大门口，\n门里跳出一只大黄狗，\n朝我哇啦哇啦吼。\n我拾起石头打黄狗，\n黄狗跳上来就咬我的手。\n也不知我手里的石头\n打没打着周家的大黄狗，\n周家的大黄狗咬没咬着我的手？\n96、藤萝花和喇叭花\n华华园里有一株藤萝花,\n佳佳园里有一株喇叭花。\n佳佳的喇叭花，\n绕住了华华的藤萝花，\n华华的藤萝花，\n缠住了佳佳的喇叭花。\n也不知道是藤萝花先绕住了喇叭花，\n还是喇叭花先缠住了藤萝花。\n97、花青蛙\n花青蛙，叫呱呱，\n西瓜地里看西瓜，\n西瓜夸青蛙背背花，\n青蛙夸西瓜长得大。\n98、蒜拌面\n蒜拌面，面拌蒜，\n吃蒜拌面算蒜瓣；\n面拌蒜，蒜拌面，\n蒜吃蒜瓣面拌蒜。\n99、白庙、白猫、白帽\n山顶有座白庙，\n白庙里有只白猫。\n白庙外有顶白帽，\n白猫看见了白猫，\n叨着白帽跑进了白庙。\n100、瘸子\n北边来了一个瘸子\n背着一捆橛子。\n南边来了一个瘸子\n背着一筐茄子。\n背橛子的瘸子打了背茄子的瘸子一橛子。\n背茄子的瘸子打了背橛子的瘸子一茄子。\n"}),a.add({id:103,href:'/life/docs/http/dns/',title:"DNS",section:"http知识 ",content:"DNS\r#\r\rDNS 是互联网核心协议之一。不管是上网浏览，还是编程开发，都需要了解一点它的知识。\n本文详细介绍DNS的原理，以及如何运用工具软件观察它的运作。我的目标是，读完此文后，你就能完全理解DNS\n一、DNS 是什么？\r#\r\rDNS （Domain Name System 的缩写）的作用非常简单，就是根据域名查出IP地址。你可以把它想象成一本巨大的电话本。\n举例来说，如果你要访问域名math.stackexchange.com，首先要通过DNS查出它的IP地址是151.101.129.69。\n二、查询过程\r#\r\r虽然只需要返回一个IP地址，但是DNS的查询过程非常复杂，分成多个步骤。\n工具软件dig可以显示整个查询过程。\n$ dig math.stackexchange.com DNS大全\r#\r\r 公共DNS服务器地址大全     服务商 云公共DNS服务器IP大全 云公共DNS服务器IP大全     114DNS 114.114.114.114 114.114.115.115   DNSPod DNS+ 119.29.29.29 182.254.116.116   电信/移动/铁通 101.226.4.6 218.30.118.6   DNS 派 联通 123.125.81.6 140.207.198.6   cnnicDNS 1.2.4.8 210.2.4.8   2001:dc7:1000::1     GoogleDNS 8.8.8.8 8.8.4.4   2001:4860:4860::8888 2001:4860:4860::8844    CloudflareDNS 1.1.1.1 1.0.0.1   2606:4700:4700::1111 2606:4700:4700::1001    IBM Quad9DNS 9.9.9.9    2620:fe::fe 2620:fe::9    DNS.SB 185.222.222.222 185.184.222.222   2a09:: 2a11::    OpenDNS 208.67.222.222 208.67.220.220   2620:0:ccc::2 2620:0:ccd::2    V2EXDNS 199.91.73.222 178.79.131.110   阿里云DNS 223.5.5.5 223.6.6.6   2400:3200::1 2400:3200:baba::1    腾讯云DNS 183.60.83.19 183.60.82.98   百度云DNS 180.76.76.76 2400:da00::6666   微软云DNS 4.2.2.1 4.2.2.2   华为云DNS 122.112.208.1 139.9.23.90   114.115.192.11 116.205.5.1    116.205.5.30 122.112.208.175    139.159.208.206     中華電信DNS 168.95.192.1 168.95.1.1   香港宽频DNS 203.80.96.10 203.80.96.9   赛门铁克诺顿DNS 199.85.126.10 199.85.127.10   oracle+dynDNS 216.146.35.35 216.146.36.36   瑞士瑞信银行DNS 64.6.64.6 64.6.65.6     中国电信DNS服务器地址大全     省市 中国电信DNS服务器IP大全 中国电信DNS服务器IP大全     中国电信IPv6DNS 240e:4c:4008::1 240e:4c:4808::1   安徽电信DNS 61.132.163.68 202.102.213.68   北京电信DNS 219.141.136.10 219.141.140.10   重庆电信DNS 61.128.192.68 61.128.128.68   福建电信DNS 218.85.152.99 218.85.157.99   甘肃电信DNS 202.100.64.68 61.178.0.93   广东电信DNS 202.96.128.86 202.96.128.166   202.96.134.133 202.96.128.68    202.96.154.8 202.96.154.15    广西电信DNS 202.103.225.68 202.103.224.68   贵州电信DNS 202.98.192.67 202.98.198.167   河南电信DNS 222.88.88.88 222.85.85.85   黑龙江电信DNS 219.147.198.230 219.147.198.242   湖北电信DNS 202.103.24.68 202.103.0.68   湖南电信DNS 59.51.78.211 59.51.78.210   222.246.129.80     江苏电信DNS 218.2.2.2 218.4.4.4   61.147.37.1 218.2.135.1    江西电信DNS 202.101.224.69 202.101.226.68   内蒙古电信DNS 219.148.162.31 222.74.39.50   山东电信DNS 219.146.1.66 219.147.1.66   陕西电信DNS 218.30.19.40 61.134.1.4   上海电信DNS 202.96.209.133 116.228.111.118   202.96.209.5 180.168.255.118    四川电信DNS 61.139.2.69 218.6.200.139   天津电信DNS 219.150.32.132 219.146.0.132   云南电信DNS 222.172.200.68 61.166.150.123   浙江电信DNS 202.101.172.35 61.153.177.196   61.153.81.75 60.191.244.5      中国联通DNS服务器地址大全     省市 中国联通DNS服务器IP大全 中国联通DNS服务器IP大全     中国联通IPv6DNS 2408:8899::8 2408:8888::8   北京联通DNS 123.123.123.123 123.123.123.124   202.106.0.20 202.106.195.68    重庆联通DNS 221.5.203.98 221.7.92.98   广东联通DNS 210.21.196.6 221.5.88.88   河北联通DNS 202.99.160.68 202.99.166.4   河南联通DNS 202.102.224.68 202.102.227.68   黑龙江联通DNS 202.97.224.69 202.97.224.68   吉林联通DNS 202.98.0.68 202.98.5.68   江苏联通DNS 221.6.4.66 221.6.4.67   内蒙古联通DNS 202.99.224.68 202.99.224.8   山东联通DNS 202.102.128.68 202.102.152.3   202.102.134.68 202.102.154.3    山西联通DNS 202.99.192.66 202.99.192.68   陕西联通DNS 221.11.1.67 221.11.1.68   上海联通DNS 210.22.70.3 210.22.84.3   四川联通DNS 119.6.6.6 124.161.87.155   天津联通DNS 202.99.104.68 202.99.96.68   浙江联通DNS 221.12.1.227 221.12.33.227   辽宁联通DNS 202.96.69.38 202.96.64.68     中国移动DNS服务器地址大全     省市 中国移动DNS服务器IP大全 中国移动DNS服务器IP大全     中国移动IPv6DNS 2409:8088::a 2409:8088::b   安徽移动DNS 211.138.180.2 211.138.180.3   山东移动DNS 218.201.96.130 211.137.191.26   218.201.124.18 218.201.124.19    山西移动DNS 211.138.106.2 211.138.106.3   211.138.106.18 211.138.106.19    211.138.106.7     江苏移动DNS 221.131.143.69 112.4.0.55   221.130.13.133 211.103.55.50    221.130.56.241 211.103.13.101    211.138.200.69     浙江移动DNS 211.140.13.188 211.140.188.188   211.140.10.2     湖南移动DNS 211.142.210.98 211.142.210.99   211.142.210.100 211.142.210.101    211.142.236.87     湖北移动DNS 211.137.58.20 211.137.64.163   211.136.17.107 211.136.20.203    江西移动DNS 211.141.90.68 211.141.90.69   211.141.85.68     陕西移动DNS 211.137.130.3 211.137.130.19   218.200.6.139     四川移动DNS 211.137.82.4    重庆移动DNS 218.201.4.3 218.201.21.132   218.201.17.2     北京移动DNS 221.130.33.52 221.130.33.60   211.136.28.231 211.136.28.234    211.136.28.237 211.136.28.228    221.130.32.103 221.130.32.100    221.130.32.106 221.130.32.109    221.176.3.70 221.176.3.73    221.176.3.76 221.176.3.79    221.176.3.83 221.176.3.85    221.176.4.6 221.176.4.9    221.176.4.12 221.176.4.15    221.176.4.18 221.176.4.21    211.138.30.66     天津移动DNS 211.137.160.50 211.137.160.185   上海移动DNS 211.136.112.50 211.136.150.66   广东移动DNS 211.136.192.6 211.136.20.204   211.139.163.6 211.139.136.68    211.136.18.171     广西移动DNS 211.138.245.180 211.136.17.108   211.139.5.30     贵州移动DNS 211.139.5.29 211.139.5.30   福建移动DNS 211.138.151.161 211.138.156.66   218.207.217.241 218.207.217.242    211.143.181.178 211.143.181.179    218.207.128.4 218.207.130.118    211.138.145.194     河北移动DNS 211.143.60.56 211.138.13.66   甘肃移动DNS 218.203.160.194 218.203.160.195   黑龙江移动DNS 211.137.241.34 211.137.241.35   吉林移动DNS 211.141.16.99 211.141.0.99   辽宁移动DNS 211.137.32.178 211.140.197.58   云南移动DNS 211.139.29.68 211.139.29.69   211.139.29.150 211.139.29.170    218.202.1.166     海南移动DNS 221.176.88.95 211.138.164.6   内蒙古移动DNS 211.138.91.1 211.138.91.2   新疆移动DNS 218.202.152.130 218.202.152.131   西藏移动DNS 211.139.73.34 211.139.73.35   青海移动DNS 211.138.75.123    香港移动DNS 203.142.100.18 203.142.100.21    html转markdown\n参考\n"}),a.add({id:104,href:'/life/docs/english_study/second_language_acquisition/use/',title:"习得 ",section:"第二语言习得",content:"认知派、社会派\r#\r\r习得的五个假设\r#\r\r习得-学得假说\r#\r\r习得与学习的区别也许是这里提出的所有假设中最基本的。它指出成年人有两种不同且独立的方式来发展第二语言的能力。\n第一种方式是语言习得，这个过程与儿童发展母语能力的方式相似，甚至完全相同。语言习得是一个潜意识的过程；语言习得者通常不会意识到他们正在习得语言，而只知道他们正在使用语言进行交流。语言习得的结果，获得的能力，也是潜意识的。我们通常不会有意识地意识到我们所习得的语言的规则。相反，我们对正确性有一种“感觉”。语法句子“听起来”是正确的，或者“感觉”是正确的，而错误则感觉是错误的，即使我们没有有意识地知道违反了什么规则。\n描述习得的其他方式包括内隐学习、非正式学习和自然学习。在非技术语言中，习得是“拾取”一种语言。\n培养第二语言能力的第二种方法是语言学习。今后我们将使用“学习”一词来指代第二语言的有意识知识、了解规则、意识到它们并能够谈论它们。用非技术术语来说，学习是“了解”一种语言，被大多数人称为“语法”或“规则”。一些同义词包括语言的正式知识或显性学习。\n一些第二语言理论家认为儿童可以习得，而成人只能学习。然而，习得学习假说声称，成年人也会习得“习得”语言的能力，这种能力并不会在青春期消失。这并不意味着成年人总是能够达到第二语言的母语水平。这确实意味着成年人可以使用儿童使用的相同自然“语言习得设备”。\n自然顺序假说\r#\r\r年来语言习得研究中最令人兴奋的发现之一是发现语法结构的习得以可预测的顺序进行。特定语言的习得者倾向于较早习得某些语法结构，而较晚习得其他语法结构。各个收购方之间的一致性并不总是 100%，但存在明显的、统计上显着的相似之处。\n就自然顺序假说而言，英语也许是研究最多的语言，而在英语的所有结构中，形态学是研究最多的。 Brown (1973) 报告说，学习英语作为第一语言的儿童往往比其他人更早地习得某些语法语素或功能词。例如，渐进标记ing （如“他正在打棒球*”* ）和复数标记 /s/（“两只狗*s* ”）是最先获得的语素，而第三人称单数标记 /s/（如“He live *s* in New York”）和所有格 /s/（“John\u0026rsquo;s *hat* ”）通常是在很晚之后才获得的，从六个月到一年后出现。 de Villiers 和 de Villiers (1973) 从横截面上证实了布朗的纵向结果，表明布朗发现最早获得的物品也是孩子们更容易做对的物品。换句话说，对于那些研究的语素，难度顺序与习得顺序相似。\n布朗的研究结果发表后不久， Dulay和 Burt (1974, 1975) 报告说，学习英语作为第二语言的儿童也表现出语法语素的“自然顺序”，无论他们的母语是什么。儿童第二语言习得顺序与第一语言习得顺序不同，但不同群体的第二语言习得者表现出惊人的相似性。 Dulay和 Burt 的结果得到了许多研究者的证实（Kessler 和Idar ，1977； Fabris ，1978；Makino，1980）。 Dulay和 Burt 使用了 Brown 最初研究的 14 个语素的子集。 Fathman (1975) 通过口语表达测试（SLOPE 测试）证实了儿童第二语言习得的自然顺序，该测试探讨了 20 种不同的结构。\n继Dulay和 Burt 的工作之后，Bailey、Madden 和Krashen (1974) 报告了成人受试者的自然顺序，该顺序非常相似\n儿童第二语言习得中所见的情况相同。正如我们稍后将看到的，这种自然秩序仅在某些条件下出现（或者更确切地说，它仅在某些条件下消失！）。一些确认成人语法语素自然顺序的研究包括 Andersen (1976)，他使用了组合； Krashen 、Houck、 Giunchi 、Bode、Birnbaum 和Strei (1977)，使用了自由言论；还有Christison (1979)，使用言论自由。使用 SLOPE 测试的成人研究也证实了自然顺序并扩大了数据库。 Krashen 、 Sferlazza 、Feldman 和Fathman (1976) 发现了与Fathman (1975) 儿童第二语言顺序类似的顺序， Kayfetz -Fuller (1978) 也使用 SLOPE 测试报告了自然顺序。\n如上所述，第二语言的习得顺序与第一语言的习得顺序不同，但也有一些相似之处。表 2.1，来自Krashen\n(1977 ) ,呈现平均\n表 2.1。英语作为第二语言的语法语素习得的“平均”顺序（儿童和成人）\n监控假设\r#\r\r虽然习得与学习的区别声称两个独立的过程在成人中共存，但它并没有说明它们如何在第二语言表现中使用。监控假说认为习得和学习是以非常特定的方式使用的。通常，习得会“启动”我们用第二语言说话，并影响我们的流利程度。学习只有一个功能，那就是作为一个监控者，或者说编辑者。学习的作用只是为了改变我们的言语形式，而后天系统已经“生产”了它。这可能发生在我们说话或写作之前，或之后（自我纠正）。图2.1 模拟了这个过程。\n有意识的学习只能作为“监视器”使用，它可以在实际说出或写出话语之前或之后改变习得系统的输出。正是后天系统启动了正常、流利的言语表达。\n监视器假说意味着正式规则或有意识的学习在第二语言表现中只发挥有限的作用。随着过去几年研究的进展，这些局限性变得更加明显。第四章回顾的这项研究强烈表明，第二语言表演者只有在满足三个条件时才能使用有意识的规则。这些条件是必要的而非充分的，也就是说，即使满足所有三个条件，表演者也可能无法充分利用他的有意识语法。我在这里列出了这些条件并进行了简要说明。我们将在第四章中更详细地讨论它们：\n 时间。为了有效地思考和使用有意识的规则，第二语言表演者需要有足够的时间。对于大多数人来说，正常的谈话没有足够的时间来思考和使用规则。在谈话中过度使用规则可能会导致麻烦，即犹豫不决的谈话风格和对对话伙伴所说内容的注意力不集中。 注重形式。要有效地使用监视器，时间是不够的。表演者还必须关注形式，或思考正确性（ Dulay和 Burt，1978）。即使我们有时间，我们也可能过于专注于我们所说的话，而没有注意我们是如何说的。 了解规则。这是一个非常艰巨的要求。语言学告诉我们，语言的结构极其复杂，他们声称只描述了最著名语言的一小部分。我们可以确定，我们的学生只接触到该语言全部语法的一小部分，而且我们知道，即使是最好的学生也无法学习他们所接触到的每条规则。  输入假设\r#\r\r与其他假设相比，我们将花费更多的时间来研究这个假设，原因有两个。首先，这些材料中的大部分内容相对较新，而其他假设已经在几本出版的书籍和文章中进行了描述和讨论。第二个原因是它的重要性，无论是理论还是实践。输入假设试图回答可能是我们领域中最重要的问题，并给出对语言教学的所有领域都有潜在影响的答案。\n重要的问题是：我们如何获得语言？如果监控假设是正确的，即习得是核心而学习是次要的，那么我们教学法的目标应该是鼓励习得。那么我们如何获取的问题就变得至关重要。\n本节的组织如下：在给出任何支持证据之前，我将首先提出输入假设。接下来是对第一语言和第二语言习得研究证据的描述。然后，我们将简要介绍应用语言学研究的证据，第五章将对此进行更详细的讨论。\n(a ) 假设的陈述\n让我们首先重申一下我们如何获得的问题：鉴于自然顺序假设的正确性，我们如何从一个阶段转向另一个阶段？如果收购方处于“第四阶段”，如何才能进入“第五阶段”？更一般地说，我们如何从阶段i开始，我 代表\n当前能力，到i + 1 ，下一个级别？输入假设提出以下主张：从阶段i移动到阶段i + 1的必要（但非充分）条件是获取者理解包含i + 1的输入，其中“理解”意味着获取者专注于含义而不是消息的形式。\n换句话说，只有当我们理解的语言所包含的结构“稍微超出”我们现在的结构时，我们才能获得知识。这怎么可能？我们如何理解包含我们尚未掌握的结构的语言？这个明显悖论的答案是，我们不仅仅使用我们的语言能力来帮助我们理解。我们还利用上下文、我们对世界的了解、我们的语言外信息来帮助我们理解针对我们的语言。\n输入假设与我们在第二语言和外语教学中通常的教学方法背道而驰。正如 Hatch (1978a) 所指出的，我们的假设是我们首先学习结构，然后练习在交流中使用它们，这就是流畅性的发展方式。输入假设的说法恰恰相反。它说我们首先通过“寻求意义”来获得，结果，我们获得了结构！ （有关第一语言习得的讨论，请参阅\n麦克纳马拉，1972。）\n因此，我们可以将输入假设的 (1) 和 (2) 部分表述如下：\n 输入假设与习得有关，与学习无关。 我们通过理解包含结构的语言来获得 它超出了我们当前的能力水平（ i + 1 ）。这是在上下文或语言外信息的帮助下完成的。  输入假设的第三部分表示输入必须包含i + 1才能对语言习得有用，但它不必仅包含i + 1 。它表示，如果收单方理解输入，并且有足够的输入，则将自动提供i + 1 。换句话说，如果通信成功，则提供i + 1 。正如我们稍后将讨论的，这意味着最佳输入甚至不应该尝试故意瞄准i + 1 。我们都熟悉试图故意涵盖i + 1的教学大纲。有一个“当天的结构”，通常教师和学生都认为课程的目的是教授或练习特定的语法项目或结构。一旦这个结构被\n“掌握”，课程大纲进入下一个。这部分输入假设意味着没有必要刻意尝试提供i + *1 。*正如我们稍后将看到的，有理由怀疑它甚至可能有害。\n因此，输入假设的第(3)部分为：\n 当通信成功时，当输入被理解且足够时，将自动提供i + 1 。  输入假设的最后部分指出，口语流利程度不能直接教授。相反，它会随着时间的推移自行“出现”。 4根据这种观点，教授口语的最好方法，也许也是唯一方法，就是提供可理解的输入。当收购方感觉“准备好了”时，早期发言就会出现；然而，对于不同的人来说，这种准备状态到达的时间有所不同。此外，早期的言语通常在语法上不准确。随着收单方听到并理解更多的输入，准确性会随着时间的推移而提高。输入假设的第 (4) 部分因此为：\n 生产能力显现。它不是直接教授的。  (b )支持假设的证据\n *儿童第一语言习得。*输入假设与已知的“看护者言语”非常一致，即父母和其他人在与幼儿交谈时所做的修改。对我们来说，看护者言语最有趣、也许也是最重要的特征是，它不是有意教授语言的尝试。相反，正如 Clark 和 Clark（1977）指出的那样，看守者的言语被修改以帮助理解。看护者说话“更简单”，努力让孩子理解自己。  我们感兴趣的第二个特征是，我们发现看护者的言语虽然在语法上比成人之间的言语更简单，但它是“粗略地调整”到孩子当前的语言能力水平，而不是“微调”。换句话说，看护者的言语并没有根据每个孩子的水平进行精确调整，而是随着孩子的进步而变得更加复杂。粗调的非常好的证据来自 Cross (1977) 和 Newport、 Gleitman的研究\nGleitman (1977) 报告说，输入复杂性与儿童语言成熟度测量之间的相关性虽然是积极的且通常很重要，但通常不是很大。对这一发现的解释是，看护者并没有完全瞄准i + 1 。他们为孩子提供的输入包括i + 1 ，但也包括许多已经获得的结构，加上一些尚未获得的结构（ i + 2 ， i + 3等），并且孩子可能还没有准备好。换句话说，看护者不提供基于语法的教学大纲！ （有关粗调的更完整回顾，请参阅Krashen 1980、1981。）\n我们关心的看守言论的第三个特征被称为“此时此地”原则。众所周知，看护者谈论的主要是孩子能感知到的东西，以及周围环境中的东西。与孩子的对话更有可能涉及房间里正在发生的事情（“看到球了吗？”），而不是房间里和当前不存在的事情（“明天我们在楼上做什么？”）。正如纽波特等人。 (1977)指出，这是一个主题约束——“此时此地”原则反映了看护者和孩子的共同利益。\n虽然没有直接证据表明看护者语音确实比未经修改的输入更有效，但输入假设预测看护者语音对孩子非常有用。首先，它是或旨在是可理解的。 “此时此地”功能提供了额外的语言支持（上下文），帮助孩子理解包含i + 1的话语。正如麦克纳马拉（MacNamara，1972）指出的，孩子并不是先学习语法，然后再用它来理解。孩子首先理解，这有助于他获得语言。\n如前所述，粗调的看护者语音涵盖了孩子的i + 1 ，但并不专门关注i + 1 。输入假设的第 (3) 部分声称这是最优的。粗调对于儿童母语习得具有以下优势：\n  它确保i + 1被覆盖，而无需猜测每个孩子的i + 1是什么。另一方面，故意瞄准i + 1可能会失败！\n  粗略调整的输入将一次为多个孩子提供i + *1 ，只要他们理解所说的内容。*微调输入，即使是准确的（即\n即使它“击中” i + 1 ) ，也只会\ni + 1与输入中强调的内容完全相同的孩子受益。\n  粗略调整的输入提供内置审查。我们不需要关心孩子是否“掌握”了某种结构，孩子是否注意到当天的输入，或者我们是否提供了足够的信息。通过自然的、粗略调整的输入， i + 1将发生并重复发生。\n  换句话说，如果第(3)部分是正确的，如果有足够的自然沟通和理解总是提供i + 1 ，那么看护者就不必担心有意识的编程结构。\n这一定是一件好事！将语法排序的责任添加到父母身份中将使亲子沟通变得不那么自发并且更加困难。\n 第二语言习得的证据：简单的代码。输入假设也适用于第二语言习得。首先，如前所述，第二语言习得者，无论是儿童还是成人，也是一个“习得者”，就像儿童习得第一语言一样。另外，根据假设（2），第二语言和第一语言都有自然的习得顺序，因此我们也可以讨论第二语言习得者的i + *1 。*第三，第二语言习得者也可以接收到儿童所获得的修改输入。  该修改后的输入分为三种类型。外国人谈话的结果是母语人士对其语言能力不强的人进行修改的结果（例如，参见 Hatch、 Shapira和 Gough，1978 年的一些很好的例子）。当使用第二语言时，教师谈话是课堂上的外国人谈话，是课堂管理和解释的语言。第三个简单的代码是中介语谈话，即其他第二语言习得者的讲话。\n虽然这些简单的代码和看守者的讲话之间存在一些差异（Long，1980；Freed，1980），但也有重要的相似之处。与看护者语音的情况一样，外国人谈话和教师谈话5中的修改不是为了语言教学的目的，而是为了交流的目的，帮助第二语言习得者理解所说的内容。其次，现有的研究表明外国人谈话和老师谈话\n粗调到收购方的水平，而不是微调（Freed，1980； Gaies ，1977；有关评论，请参见Krashen ，1980）；更高级的第二语言表演者往往会获得更复杂的输入，但熟练程度和输入复杂性之间的相关性并不完美。\n外国人的谈话和老师的谈话可能并不总是在“此时此地” ， 6但有帮助的母语人士和老师会找到其他方法来使输入内容易于理解。除了语言上的改变之外，它们还利用了习得者对世界的了解，这当然比习得第一语言的孩子的知识更多。此外，教师还使用教学辅助工具，例如图片和现实（参见第三章的讨论）。\n输入假设预测这些简化的代码对于第二语言习得者将非常有用，就像看护者语音被认为对孩子有用一样。 （有关支持这一假设的一些初步案例历史数据，请参阅Krashen ，1980 年、1981 年。）输入假设还预测，自然的、交流的、粗调的、可理解的输入比直接针对i的微调输入具有一些真正的优势。 + 1 ，换句话说，旨在教授当天结构的课堂练习。\n情感过滤假说\r#\r\r情感过滤假说阐述了情感因素如何与第二语言习得过程相关。情感的概念\nDulay和 Burt (1977)提出，与情感变量和第二语言习得领域的理论工作以及本章前面介绍的假设是一致的。\n过去十年的研究证实，多种情感变量与第二语言习得的成功有关（ Krashen 1981 综述）。大多数研究可以归为以下三类之一：\n *动机。*具有高度积极性的表演者通常在第二语言习得方面做得更好（通常但并非总是“综合” 13 ） *自信心。*具有自信和良好自我形象的表演者往往在第二语言习得方面做得更好。 *焦虑。*低焦虑似乎有利于第二语言习得，无论是个人焦虑还是课堂焦虑。  在一些地方，我假设这些态度因素与习得而不是学习直接相关，因为当使用交际型测试、利用后天系统而不是学习系统的测试以及当参加测试的学生在“习得丰富”的情况下使用了该语言，即可理解输入充足的情况。\n情感过滤假说通过假定习得者的情感过滤器的强度或水平各不相同，来捕捉情感变量与第二语言习得过程之间的关系。那些态度对于第二语言习得不是最佳的人不仅会倾向于寻求较少的输入，而且他们还会有很高或很强的情感过滤器——即使他们理解了信息，输入也不会到达大脑的部分负责语言习得的，或称语言习得装置。那些对第二语言习得态度更有利的人不仅会寻求和获得更多的输入，而且他们的过滤器也会较低或较弱。他们会对输入更加开放，并且输入会“更深”（ Stevick ，1976）。\n名词\r#\r\r  可理解性输入\n  技能培养\n   比如写字\n 其它\r#\r\r  输入必须是有趣的,否则就没人注意到它\n  输入要有效不仅需要有趣,引人入胜的非常的有趣,有趣到让你都忘记了,当下周围世界其它的事物\n  "}),a.add({id:105,href:'/life/docs/javadir/basedir/java-basic-x-exception/',title:"异常机制详解",section:"Java基础知识 ",content:'异常介绍\r#\r\r Java异常是Java提供的一种识别及响应错误的一致性机制，java异常机制可以使程序中异常处理代码和正常业务代码分离，保证程序代码更加优雅，并提高程序健壮性。本文综合多篇文章后，总结了Java 异常的相关知识，希望可以提升你对Java中异常的认知效率\n \rmermaid.initialize({\r"flowchart": {\r"useMaxWidth":true\r},\r"theme": "default"\r}\r)\rgraph LR\rThrowable -- Exception\rThrowable -- Exception -- RuntimeException\rThrowable -- Exception -- 非运行时异常\rThrowable -- Error -- IOError\rThrowable -- Error -- ThreadDeath\rThrowable -- Error -- AssertionError\rThrowable\nThrowable 是 Java 语言中所有错误与异常的超类。Throwable 包含两个子类：Error（错误）和 Exception（异常），它们通常用于指示发生了异常情况。T hrowable 包含了其线程创建时线程执行堆栈的快照，它提供了 printStackTrace() 等接口用于获取堆栈跟踪数据等信息\r\rError（错误）\nError 类及其子类：程序中无法处理的错误，表示运行应用程序中出现了严重的错误。此类错误一般表示代码运行时 JVM 出现问题。 通常有 Virtual MachineError（虚拟机运行错误）、NoClassDefFoundError（类定义错误）等。 比如 OutOfMemoryError：内存不足错误；StackOverflowError：栈溢出错误。此类错误发生时，JVM 将终止线程。 这些错误是不受检异常，非代码性错误。因此，当此类错误发生时，应用程序不应该去处理此类错误。按照Java惯例，我们是不应该实现任何新的Error子类的！\r\rException（异常）\r#\r\r 程序本身可以捕获并且可以处理的异常。Exception 这种异常又分为两类：运行时异常和编译时异常\n 运行时异常 都是RuntimeException类及其子类异常，如NullPointerException(空指针异常)、IndexOutOfBoundsException(下标越界异常)等，这些异常是不检查异常，程序中可以选择捕获处理，也可以不处理。这些异常一般是由程序逻辑错误引起的，程序应该从逻辑角度尽可能避免这类异常的发生。\r运行时异常的特点是Java编译器不会检查它，也就是说，当程序中可能出现这类异常，即使没有用try-catch语句捕获它，也没有用throws子句声明抛出它，也会编译通过。\r\r\r非运行时异常 （编译异常） 是RuntimeException以外的异常，类型上都属于Exception类及其子类。从程序语法角度讲是必须进行处理的异常，如果不处理，程序就不能编译通过。如IOException、SQLException等以及用户自定义的Exception异常，一般情况下不自定义检查异常\r\r\r\r可查的异常（checked exceptions）和不可查的异常（unchecked exceptions）\r#\r\r 可查异常（编译器要求必须处置的异常）：  正确的程序在运行中，很容易出现的、情理可容的异常状况。可查异常虽然是异常状况，但在一定程度上它的发生是可以预计的，而且一旦发生这种异常状况，就必须采取某种方式进行处理。除了RuntimeException及其子类以外，其他的Exception类及其子类都属于可查异常。这种异常的特点是Java编译器会检查它，也就是说，当程序中可能出现这类异常，要么用try-catch语句捕获它，要么用throws子句声明抛出它，否则编译不会通过。\n 不可查异常(编译器不要求强制处置的异常)  包括运行时异常（RuntimeException与其子类）和错误（Error）\n异常基础\r#\r\r异常关键字\r#\r\r try – 用于监听。将要被监听的代码(可能抛出异常的代码)放在try语句块之内，当try语句块内发生异常时，异常就被抛出。 catch – 用于捕获异常。catch用来捕获try语句块中发生的异常。 finally – finally语句块总是会被执行。它主要用于回收在try块里打开的物力资源(如数据库连接、网络连接和磁盘文件)。只有finally块，执行完成之后，才会回来执行try或者catch块中的return或者throw语句，如果finally中使用了return或者throw等终止方法的语句，则就不会跳回执行，直接停止。 throw – 用于抛出异常。 throws – 用在方法签名中，用于声明该方法可能抛出的异常。  异常的申明(throws)\r#\r\r在Java中，当前执行的语句必属于某个方法，Java解释器调用main方法执行开始执行程序。 若方法中存在检查异常，如果不对其捕获，那必须在方法头中显式声明该异常，以便于告知方法调用者此方法有异常，需要进行处理。 在方法中声明一个异常，方法头中使用关键字throws，后面接上要声明的异常。若声明多个异常，则使用逗号分割。如下所示：\npublic static void method() throws IOException, FileNotFoundException{ //something statements } 注意：若是父类的方法没有声明异常，则子类继承方法后，也不能声明异常。\n通常，应该捕获那些知道如何处理的异常，将不知道如何处理的异常继续传递下去。传递异常可以在方法签名处使用 throws 关键字声明可能会抛出的异常。\nprivate static void readFile(String filePath) throws IOException { File file = new File(filePath); String result; BufferedReader reader = new BufferedReader(new FileReader(file)); while((result = reader.readLine())!=null) { System.out.println(result); } reader.close(); } Throws抛出异常的规则：\n  如果是不可查异常（unchecked exception），即Error、RuntimeException或它们的子类，那么可以不使用throws关键字来声明要抛出的异常，编译仍能顺利通过，但在运行时会被系统抛出。\n  必须声明方法可抛出的任何可查异常（checked exception）。即如果一个方法可能出现受可查异常，要么用try-catch语句捕获，要么用throws子句声明将它抛出，否则会导致编译错误\n  仅当抛出了异常，该方法的调用者才必须处理或者重新抛出该异常。当方法的调用者无力处理该异常的时候，应该继续抛出，而不是囫囵吞枣。\n  调用方法必须遵循任何可查异常的处理和声明规则。若覆盖一个方法，则不能声明与覆盖方法不同的异常。声明的任何异常必须是被覆盖方法所声明异常的同类或子类。\n  异常的抛出(throw)\r#\r\r如果代码可能会引发某种错误，可以创建一个合适的异常类实例并抛出它，这就是抛出异常。如下所示：\npublic static double method(int value) { if(value == 0) { throw new ArithmeticException(\u0026#34;参数不能为0\u0026#34;); //抛出一个运行时异常  } return 5.0 / value; } 大部分情况下都不需要手动抛出异常，因为Java的大部分方法要么已经处理异常，要么已声明异常。所以一般都是捕获异常或者再往上抛。\n有时我们会从 catch 中抛出一个异常，目的是为了改变异常的类型。多用于在多系统集成时，当某个子系统故障，异常类型可能有多种，可以用统一的异常类型向外暴露，不需暴露太多内部异常细节。\nprivate static void readFile(String filePath) throws MyException { try { // code  } catch (IOException e) { MyException ex = new MyException(\u0026#34;read file failed.\u0026#34;); ex.initCause(e); throw ex; } } 异常的自定义\r#\r\r习惯上，定义一个异常类应包含两个构造函数，一个无参构造函数和一个带有详细描述信息的构造函数（Throwable 的 toString 方法会打印这些详细信息，调试时很有用）, 比如上面用到的自定义MyException：\npublic class MyException extends Exception { public MyException(){ } public MyException(String msg){ super(msg); } // ... } 异常的捕获\r#\r\r异常捕获处理的方法通常有：\n try-catch try-catch-finally try-finally try-with-resource  try-catch\r#\r\r在一个 try-catch 语句块中可以捕获多个异常类型，并对不同类型的异常做出不同的处理\nprivate static void readFile(String filePath) { try { // code  } catch (FileNotFoundException e) { // handle FileNotFoundException  } catch (IOException e){ // handle IOException  } } 同一个 catch 也可以捕获多种类型异常，用 | 隔开\nprivate static void readFile(String filePath) { try { // code  } catch (FileNotFoundException | UnknownHostException e) { // handle FileNotFoundException or UnknownHostException  } catch (IOException e){ // handle IOException  } } try-catch-finally\r#\r\r 常规语法  try { //执行程序代码，可能会出现异常 } catch(Exception e) { //捕获异常并处理 } finally { //必执行的代码 }  执行的顺序   当try没有捕获到异常时：try语句块中的语句逐一被执行，程序将跳过catch语句块，执行finally语句块和其后的语句；\n  当try捕获到异常，catch语句块里没有处理此异常的情况：当try语句块里的某条语句出现异常时，而没有处理此异常的catch语句块时，此异常将会抛给JVM处理，finally语句块里的语句还是会被执行，但finally语句块后的语句不会被执行；\n  当try捕获到异常，catch语句块里有处理此异常的情况：在try语句块中是按照顺序来执行的，当执行到某一条语句出现异常时，程序将跳到catch语句块，并与catch语句块逐一匹配，找到与之对应的处理程序，其他的catch语句块将不会被执行，而try语句块中，出现异常之后的语句也不会被执行，catch语句块执行完后，执行finally语句块里的语句，最后执行finally语句块后的语句；\n     一个完整的例子  private static void readFile(String filePath) throws MyException { File file = new File(filePath); String result; BufferedReader reader = null; try { reader = new BufferedReader(new FileReader(file)); while((result = reader.readLine())!=null) { System.out.println(result); } } catch (IOException e) { System.out.println(\u0026#34;readFile method catch block.\u0026#34;); MyException ex = new MyException(\u0026#34;read file failed.\u0026#34;); ex.initCause(e); throw ex; } finally { System.out.println(\u0026#34;readFile method finally block.\u0026#34;); if (null != reader) { try { reader.close(); } catch (IOException e) { e.printStackTrace(); } } } } try-finally\r#\r\r 可以直接用try-finally吗？ 可以。\n try块中引起异常，异常代码之后的语句不再执行，直接执行finally语句。 try块没有引发异常，则执行完try块就执行finally语句。\ntry-finally可用在不需要捕获异常的代码，可以保证资源在使用后被关闭。例如IO流中执行完相应操作后，关闭相应资源； 使用Lock对象保证线程同步，通过finally可以保证锁会被释放；数据库连接代码时，关闭连接操作等等。\n//以Lock加锁为例，演示try-finally ReentrantLock lock = new ReentrantLock(); try { //需要加锁的代码 } finally { lock.unlock(); //保证锁一定被释放 } finally遇见如下情况不会执行\n 在前面的代码中用了System.exit()退出程序。 finally语句块中发生了异常。 程序所在的线程死亡。 关闭CPU。  try-with-resource\r#\r\r try-with-resource是Java 7中引入的，很容易被忽略。\n 上面例子中，finally 中的 close 方法也可能抛出 IOException, 从而覆盖了原始异常。 JAVA 7 提供了更优雅的方式来实现资源的自动释放，自动释放的资源需要是实现了 AutoCloseable 接口的类。\n 代码实现  private static void tryWithResourceTest(){ try (Scanner scanner = new Scanner(new FileInputStream(\u0026#34;c:/abc\u0026#34;),\u0026#34;UTF-8\u0026#34;)){ // code  } catch (IOException e){ // handle exception  } }  看下Scanner  public final class Scanner implements Iterator\u0026lt;String\u0026gt;, Closeable { // ... } public interface Closeable extends AutoCloseable { public void close() throws IOException; } try 代码块退出时，会自动调用 scanner.close 方法，和把 scanner.close 方法放在 finally 代码块中不同的是，若 scanner.close 抛出异常，则会被抑制，抛出的仍然为原始异常。被抑制的异常会由 addSusppressed 方法添加到原来的异常，如果想要获取被抑制的异常列表，可以调用 getSuppressed 方法来获取。\n异常基础总结\r#\r\r try、catch和finally都不能单独使用，只能是try-catch、try-finally或者try-catch-finally。 try语句块监控代码，出现异常就停止执行下面的代码，然后将异常移交给catch语句块来处理。 finally语句块中的代码一定会被执行，常用于回收资源 。 throws：声明一个异常，告知方法调用者。 throw ：抛出一个异常，至于该异常被捕获还是继续抛出都与它无关。  java编程思想一书中，对异常的总结。\n 在恰当的级别处理问题。（在知道该如何处理的情况下了捕获异常。） 解决问题并且重新调用产生异常的方法。 进行少许修补，然后绕过异常发生的地方继续执行。 用别的数据进行计算，以代替方法预计会返回的值。 把当前运行环境下能做的事尽量做完，然后把相同的异常重抛到更高层。 把当前运行环境下能做的事尽量做完，然后把不同的异常抛到更高层。 终止程序。 进行简化（如果你的异常模式使问题变得太复杂，那么用起来会非常痛苦）。 让类库和程序更安全。  常用的异常\r#\r\r在Java中提供了一些异常用来描述经常发生的错误，对于这些异常，有的需要程序员进行捕获处理或声明抛出，有的是由Java虚拟机自动进行捕获处理。Java中常见的异常类:\n  RuntimeException\n java.lang.ArrayIndexOutOfBoundsException 数组索引越界异常。当对数组的索引值为负数或大于等于数组大小时抛出。 java.lang.ArithmeticException 算术条件异常。譬如：整数除零等。 java.lang.NullPointerException 空指针异常。当应用试图在要求使用对象的地方使用了null时，抛出该异常。譬如：调用null对象的实例方法、访问null对象的属性、计算null对象的长度、使用throw语句抛出null等等 java.lang.ClassNotFoundException 找不到类异常。当应用试图根据字符串形式的类名构造类，而在遍历CLASSPAH之后找不到对应名称的class文件时，抛出该异常。 java.lang.NegativeArraySizeException 数组长度为负异常 java.lang.ArrayStoreException 数组中包含不兼容的值抛出的异常 java.lang.SecurityException 安全性异常 java.lang.IllegalArgumentException 非法参数异常    IOException\n IOException：操作输入流和输出流时可能出现的异常。 EOFException 文件已结束异常 FileNotFoundException 文件未找到异常    其他\n ClassCastException 类型转换异常类 ArrayStoreException 数组中包含不兼容的值抛出的异常 SQLException 操作数据库异常类 NoSuchFieldException 字段未找到异常 NoSuchMethodException 方法未找到抛出的异常 NumberFormatException 字符串转换为数字抛出的异常 StringIndexOutOfBoundsException 字符串索引超出范围抛出的异常 IllegalAccessException 不允许访问某类异常 InstantiationException 当应用程序试图使用Class类中的newInstance()方法创建一个类的实例，而指定的类对象无法被实例化时，抛出该异常    异常实践\r#\r\r  只针对不正常的情况才使用异常\n  尽量使用标准的异常\n  对异常进行文档说明\n  在 Javadoc 添加 @throws 声明，并且描述抛出异常的场景。\n/** * Method description * * @throws MyBusinessException - businuess exception description */ public void doSomething(String input) throws MyBusinessException { // ... }  不要在finally块中使用return  try块中的return语句执行成功后，并不马上返回，而是继续执行finally块中的语句，如果此处存在return语句，则在此直接返回，无情丢弃掉try块中的返回点。\nprivate int x = 0; public int checkReturn() { try { // x等于1，此处不返回  return ++x; } finally { // 返回的结果是2  return ++x; } } '}),a.add({id:106,href:'/life/docs/python/',title:" python",section:"Docs",content:"Python 简介\r#\r\rPython 是一个高层次的结合了解释性、编译性、互动性和面向对象的脚本语言。\nPython 的设计具有很强的可读性，相比其他语言经常使用英文关键字，其他语言的一些标点符号，它具有比其他语言更有特色语法结构。\n Python 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。 Python 是交互式语言： 这意味着，您可以在一个 Python 提示符 \u0026raquo;\u0026gt; 后直接执行代码。 Python 是面向对象语言: 这意味着Python支持面向对象的风格或代码封装在对象的编程技术。 Python 是初学者的语言：Python 对初级程序员而言，是一种伟大的语言，它支持广泛的应用程序开发，从简单的文字处理到 WWW 浏览器再到游戏。  Python 发展历史\r#\r\rPython 是由 Guido van Rossum 在八十年代末和九十年代初，在荷兰国家数学和计算机科学研究所设计出来的。\nPython 本身也是由诸多其他语言发展而来的,这包括 ABC、Modula-3、C、C++、Algol-68、SmallTalk、Unix shell 和其他的脚本语言等等。\n像 Perl 语言一样，Python 源代码同样遵循 GPL(GNU General Public License)协议。\n现在 Python 是由一个核心开发团队在维护，Guido van Rossum 仍然占据着至关重要的作用，指导其进展。\nPython 2.7 被确定为最后一个 Python 2.x 版本，它除了支持 Python 2.x 语法外，还支持部分 Python 3.1 语法。\nPython 特点\r#\r\r1.易于学习：Python有相对较少的关键字，结构简单，和一个明确定义的语法，学习起来更加简单。\n2.易于阅读：Python代码定义的更清晰。\n3.易于维护：Python的成功在于它的源代码是相当容易维护的。\n4.一个广泛的标准库：Python的最大的优势之一是丰富的库，跨平台的，在UNIX，Windows和Macintosh兼容很好。\n5.互动模式：互动模式的支持，您可以从终端输入执行代码并获得结果的语言，互动的测试和调试代码片断。\n6.可移植：基于其开放源代码的特性，Python已经被移植（也就是使其工作）到许多平台。\n7.可扩展：如果你需要一段运行很快的关键代码，或者是想要编写一些不愿开放的算法，你可以使用C或C++完成那部分程序，然后从你的Python程序中调用。\n8.数据库：Python提供所有主要的商业数据库的接口。\n9.GUI编程：Python支持GUI可以创建和移植到许多系统调用。\n10.可嵌入: 你可以将Python嵌入到C/C++程序，让你的程序的用户获得\u0026quot;脚本化\u0026quot;的能力。\n目录\r#\r\r 基础  html转markdown\n"}),a.add({id:107,href:'/life/docs/javadir/thread/cas/',title:"cas",section:"多线程与并发 ",content:"概念\r#\r\r CAS即Compare and Swap，是基于硬件级别的指令实现的同步原语，Java并发包java.utile.concurrent许多同步类基于CAS构建，因此可见CAS的重要性  模拟\r#\r\r 有安全问题的一段code  public class Demo1 { public static void main(String[] args) throws Exception { long startTime = System.currentTimeMillis(); Demo_B demo_b = new Demo_B(); final int len = 10000000; Thread t1 = new Thread(() -\u0026gt; { for (int i = 0; i \u0026lt; len; i++) { demo_b.increase(); } }); t1.start(); for (int i = 0; i \u0026lt; len; i++) { demo_b.increase(); } t1.join(); long endTime = System.currentTimeMillis(); System.out.println(demo_b.getNumber()); System.out.println(String.format(\u0026#34;time:%s\u0026#34;, (endTime - startTime))); } } class Demo_B { private int number = 0; public void increase() { number++; } public int getNumber() { return this.number; } }  run print result  14023046 time:58  在不改变代码顺序的情况下通过对Demo_B的实例方法进行同步加锁操作  class Demo_B { private int number = 0; public synchronized void increase() { number++; } public int getNumber() { return this.number; } }  run print result  20000000 time:615  通过 AtomicInteger 改造  class Demo_B { AtomicInteger atomicInteger = new AtomicInteger(0); public void increase() { atomicInteger.incrementAndGet(); } public int getNumber() { return atomicInteger.get(); } } 20000000 time:271  使用 AtomicInteger 自己实现incrementAndGet  class Demo_B { final AtomicInteger atomicInteger = new AtomicInteger(0); public void increase() { int oldValue = 0; do { oldValue = atomicInteger.get(); } while (!atomicInteger.compareAndSet(oldValue , oldValue+1)); } public int getNumber() { return atomicInteger.get(); } } 20000000 time:605 -- 自己搞的时间还多了些 我猜是AtomicInteger的incrementAndGet已经内置了以后 执行会比我目前的运行量少 虽然它也是调用compareAndSet  Unsafe 方法介绍  /** * @param var1: 那个对象 *@param var2: 对象中的域的位置 *@param var3 : 需要比较的值 *@param var4 : 设置之后的值 */ public final native boolean compareAndSwapInt(Object var1, long var2, int var4, int var5) public final native boolean compareAndSwapObject(Object var1, long var2, Object var4, Object var5) public final native boolean compareAndSwapLong(Object var1, long var2, long var4, long var6) //var1：要修改的对象起始地址 如：0x00000111  //var2：需要修改的具体内存地址 如100 。0x0000011+100 = 0x0000111就是要修改的值的地址  //注意没有var3  //var4：期望内存中的值，拿这个值和0x0000111内存中的中值比较，如果为true，则修改，返回ture,否则返回false，等待下次修改。  //var5：如果上一步比较为ture，则把var5更新到0x0000111其实的内存中。  //原子操作，直接操作内存。  使用Unsafe 改造  class Demo_B2 { //jdk级别代码才能这样 因为这个级别的会涉及到绕过jvm所以得另寻出路  final Unsafe unsafe = Unsafe.getUnsafe(); private volatile int value = 0; public void increase() { int oldValue = 0; long valueOffset = 0l; do { try { valueOffset = unsafe.objectFieldOffset(this.getClass().getField(\u0026#34;value\u0026#34;)); } catch (NoSuchFieldException e) { e.printStackTrace(); } } while (!unsafe.compareAndSwapInt(this, valueOffset, oldValue, oldValue + 1)); } public int getNumber() { return value; } }  执行直接报错  Exception in thread \u0026#34;main\u0026#34; java.lang.SecurityException: Unsafe at sun.misc.Unsafe.getUnsafe(Unsafe.java:90) -- unsafe 提供了非常底层，操作内存，线程的方法,unsafe 对象不能直接获取，只能通过反射获取  使用Unsafe 改造(修正后)  class Demo_B2 { //jdk级别代码才能这样 因为这个级别的会涉及到绕过jvm所以得另寻出路  final static Unsafe unsafe = UnsafeAccessor.getUnsafe(); private volatile int value = 0; //内存偏移量地址(相对地址)  private long valueOffset = 0l; public void increase() { if (valueOffset == 0l) { try { valueOffset = unsafe.objectFieldOffset(Demo_B2.class.getDeclaredField(\u0026#34;value\u0026#34;)); } catch (NoSuchFieldException e) { e.printStackTrace(); } } int oldValue = 0; do { oldValue = value; } while (!unsafe.compareAndSwapInt(this, valueOffset, oldValue, oldValue + 1)); } public int getNumber() { return value; } } final class UnsafeAccessor { private static Unsafe unsafe; static { try { //这个名字是 theUnsafe 里面的不要随便写  Field unsafeFile = Unsafe.class.getDeclaredField(\u0026#34;theUnsafe\u0026#34;); unsafeFile.setAccessible(true); //因为是静态属性  unsafe = (Unsafe) unsafeFile.get(null); } catch (Exception e) { } } public static Unsafe getUnsafe() { return unsafe; } }  使用LongAdder 改造  //分段处理  /** * Adds the given value. * * @param x the value to add */ public void add(long x) { Cell[] as; long b, v; int m; Cell a; if ((as = cells) != null || !casBase(b = base, b + x)) { boolean uncontended = true; if (as == null || (m = as.length - 1) \u0026lt; 0 || (a = as[getProbe() \u0026amp; m]) == null || !(uncontended = a.cas(v = a.value, v + x))) longAccumulate(x, null, uncontended); } } import java.util.concurrent.atomic.LongAdder; public class Demo3 { public static void main(String[] args) throws Exception { long startTime = System.currentTimeMillis(); Demo_B3 demo_b = new Demo_B3(); final int len = 10000000; Thread t1 = new Thread(() -\u0026gt; { for (int i = 0; i \u0026lt; len; i++) { demo_b.increase(); } }); t1.start(); for (int i = 0; i \u0026lt; len; i++) { demo_b.increase(); } t1.join(); long endTime = System.currentTimeMillis(); System.out.println(demo_b.getNumber()); System.out.println(String.format(\u0026#34;time:%s\u0026#34;, (endTime - startTime))); } } class Demo_B3 { private volatile int value = 0; private LongAdder longAdder = new LongAdder() ; public void increase() { longAdder.increment(); } public int getNumber() { return longAdder.intValue(); } } "}),a.add({id:108,href:'/life/docs/javadir/thread/tool/countdownlatch_cyclicbarrier/',title:"CountDownLatch 和 CyclicBarrier",section:"并发工具 ",content:" CountDownLatch是减法操作 CyclicBarrier具有CountDownLatch的所有功能\n CountDownLatch\r#\r\r  CountDownLatch中count down是倒数的意思，latch则是门闩的含义。整体含义可以理解为倒数的门栓,所以当门打开时,N个人是不能进屋的,也就是N个线程是不能继续向下运行的,支持这样的特性可以控制线程执行任务的时机,使线程以 \u0026ldquo;组团\u0026quot;的方式一起执行任务\n   CountDownLatch中count down是倒数的意思，latch则是门闩的含义。整体含义可以理解为倒数的门栓，似乎有一点“三二一，芝麻开门”的感觉。CountDownLatch的作用也是如此，在构造CountDownLatch的时候需要传入一个整数n，在这个整数“倒数”到0之前，主线程需要等待在门口，而这个“倒数”过程则是由各个执行线程驱动的，每个线程执行完一个任务“倒数”一次。总结来说，CountDownLatch的作用就是等待其他的线程都执行完任务，必要时可以对各个任务的执行结果进行汇总，然后主线程才继续往下执行\n   CountDownLatch主要有两个方法：countDown()和await()。countDown()方法用于使计数器减一，其一般是执行任务的线程调用，await()方法则使调用该方法的线程处于等待状态，其一般是主线程调用。这里需要注意的是，countDown()方法并没有规定一个线程只能调用一次，当同一个线程调用多次countDown()方法时，每次都会使计数器减一；另外，await()方法也并没有规定只能有一个线程执行该方法，如果多个线程同时执行await()方法，那么这几个线程都将处于等待状态，并且以共享模式享有同一个锁。\n   await()方法 一般是使用者或者主线程调用 countDown()方法 子任务线程组调用\n  第一个例子\n  import java.util.concurrent.CountDownLatch; public class CountDownLatchExample2 { public static class MyService { private CountDownLatch downLatch = new CountDownLatch(1) ; public void testMethod(){ try { System.out.println(\u0026#34;任务执行开始前!\u0026#34;); //await()方法则使调用该方法的线程处于等待状态，其一般是主线程调用  downLatch.await(); System.out.println(\u0026#34;任务执行结束!\u0026#34;); } catch (InterruptedException e) { e.printStackTrace(); } } public void downMethod(){ System.out.println(\u0026#34;任务执行开始\u0026#34;); System.out.println(\u0026#34;MyService.downMethod\u0026#34;); //线程数器减一  downLatch.countDown(); } } public static class MyThread extends Thread { private MyService myService; public MyThread(MyService myService) { super(); this.myService = myService; } @Override public void run() { myService.testMethod(); } } public static void main(String[] args)throws InterruptedException { MyService myService = new MyService(); MyThread myThread = new MyThread(myService) ; myThread.start(); //暂停2秒钟  Thread.sleep(2000); //如果不调用 downMethod 方法 那么计数器就不会减一 那么主线程将一直处于等待状况  myService.downMethod(); } } /* 任务执行开始前! 任务执行开始 MyService.downMethod 任务执行结束! */  第二个例子 裁判员等待 所有运动员到场馆中  import java.util.Arrays; import java.util.concurrent.CountDownLatch; public class CountDownLatchExample3 { public static void main(String[] args) { String[] names = new String[]{\u0026#34;姚明\u0026#34;, \u0026#34;易建联\u0026#34;, \u0026#34;李宁\u0026#34;, \u0026#34;邓亚萍\u0026#34;}; new Referee(names).start(); } //裁判员  public static class Referee extends Thread { private String[] names; public Referee(String[] names) { this.names = names; } @Override public void run() { try { System.out.println(\u0026#34;运动员名单\u0026#34; + Arrays.toString(names)); CountDownLatch countDownLatch = new CountDownLatch(names.length); for (String name : names) { Athletes athletes = new Athletes(countDownLatch, name); athletes.start(); } countDownLatch.await(); System.out.println(\u0026#34;所有运动员都已经到齐了!\u0026#34;); } catch (InterruptedException e) { e.printStackTrace(); } } } //运动员  public static class Athletes extends Thread { private CountDownLatch countDownLatch; private String name; public Athletes(CountDownLatch countDownLatch, String name) { this.countDownLatch = countDownLatch; this.name = name; } @Override public void run() { System.out.println(\u0026#34;运动员\u0026#34; + this.name + \u0026#34;到了\u0026#34;); this.countDownLatch.countDown(); } } } /* 运动员名单[姚明, 易建联, 李宁, 邓亚萍] 运动员姚明到了 运动员易建联到了 运动员李宁到了 运动员邓亚萍到了 所有运动员都已经到齐了! * */  第三个例子是对第二个例子的改进 假如某个运动员超过了比赛的时间那么我们就取消该运动员的此次比赛资格  import java.util.Arrays; import java.util.concurrent.CountDownLatch; import java.util.concurrent.TimeUnit; public class CountDownLatchExample4 { public static void main(String[] args) { String[] names = new String[]{\u0026#34;姚明\u0026#34;, \u0026#34;易建联\u0026#34;, \u0026#34;李宁\u0026#34;, \u0026#34;邓亚萍\u0026#34;}; new Referee(names).start(); } //裁判员  public static class Referee extends Thread { private String[] names; public Referee(String[] names) { this.names = names; } @Override public void run() { try { System.out.println(\u0026#34;运动员名单\u0026#34; + Arrays.toString(names)); CountDownLatch countDownLatch = new CountDownLatch(names.length); for (String name : names) { Athletes athletes = new Athletes(countDownLatch, name); athletes.start(); } countDownLatch.await(2, TimeUnit.SECONDS); System.out.println(\u0026#34;比赛开始!\u0026#34;); } catch (InterruptedException e) { e.printStackTrace(); } } } //运动员  public static class Athletes extends Thread { private CountDownLatch countDownLatch; private String sportsName; public Athletes(CountDownLatch countDownLatch, String name) { this.countDownLatch = countDownLatch; this.sportsName = name; } @Override public void run() { if (\u0026#34;李宁\u0026#34;.equals(this.sportsName)) { System.out.println(\u0026#34;运动员\u0026#34; + this.sportsName + \u0026#34;路上堵车不能按时到达\u0026#34;); try { Thread.sleep(4000); } catch (InterruptedException e) { e.printStackTrace(); } } System.out.println(\u0026#34;运动员\u0026#34; + this.sportsName + \u0026#34;到了\u0026#34;); this.countDownLatch.countDown(); } } } /* 运动员名单[姚明, 易建联, 李宁, 邓亚萍] 运动员姚明到了 运动员易建联到了 运动员邓亚萍到了 运动员李宁路上堵车不能按时到达 比赛开始! 运动员李宁到了 * */  第五个例子 某个方法很慢 很慢  import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.web.context.request.RequestAttributes; import org.springframework.web.context.request.RequestContextHolder; import java.util.concurrent.CountDownLatch; import java.util.concurrent.TimeUnit; public class CountDownLatchExample5 { private final Logger logger = LoggerFactory.getLogger(getClass()) ; public static void main(String[] args) { new CountDownLatchExample5().execute(); } public void execute(){ //最多等待2.5秒  CountDownLatch countDownLatch = new CountDownLatch(1); try { countDownLatch.await(2500, TimeUnit.MILLISECONDS); } catch (InterruptedException e) { logger.error(e.getMessage()); } RequestAttributes attributes = RequestContextHolder.getRequestAttributes(); Object obj = new Object() ; //真实项目考虑这样  /* taskExecutor.execute(() -\u0026gt; { // 把旧RequestAttributes放到新线程的RequestContextHolder中 RequestContextHolder.setRequestAttributes(attributes); //写你的业务 myService(obj) ; countDownLatch.countDown(); }); * **/ //现在模拟这样写  new Thread(() -\u0026gt; { // 把旧RequestAttributes放到新线程的RequestContextHolder中  RequestContextHolder.setRequestAttributes(attributes); //写你的业务  myService(obj) ; countDownLatch.countDown(); }).start(); //finish  System.out.println(\u0026#34;执行结束\u0026#34;); } private void myService(Object obj){ try { Thread.sleep(1000*10); } catch (InterruptedException e) { logger.error(e.getMessage()); } System.out.println(\u0026#34;执行了业务方法\u0026#34;); } } CyclicBarrier(sai k li c bai ri er 赛克利克百瑞尔)\r#\r\r 类CyclicBarrier 不仅有 CountDownLatch 所具有的功能 ,还可以实现屏障等待功能(阶段性同步),它在使用上的意义在于可以循环地实现线程要一起做任务的目标,而不仅仅像类CountDownLatch一样仅仅支持一次线程与同步阻塞的特性\n  第一个例子 美国往事 中 有四个年轻人 他们在一个存钱箱里存放他们所有的积蓄 当用钱的时候必须四个人都在场 才能打开  import java.util.concurrent.BrokenBarrierException; import java.util.concurrent.CyclicBarrier; public class CyclicBarrierDemo1 { public static void main(String[] args) { String[] nameList = new String[]{\u0026#34;面条\u0026#34;, \u0026#34;麦克斯\u0026#34;, \u0026#34;吉米\u0026#34;, \u0026#34;Teenager\u0026#34;}; CyclicBarrier keyObj = new CyclicBarrier(4, (() -\u0026gt; { System.out.println(\u0026#34;所有人到齐打开存钱箱\u0026#34;); })); for (String name : nameList) { new AmericaMan(keyObj, name).start(); } } public static class AmericaMan extends Thread { private CyclicBarrier keyObj; private String firstName; public AmericaMan(CyclicBarrier keyObj, String firstName) { this.keyObj = keyObj; this.firstName = firstName; } @Override public void run() { try { double v = Math.random() * 3000; Thread.sleep((long) v); System.out.println(this.firstName + \u0026#34;已经到现场了\u0026#34;); this.keyObj.await(); } catch (InterruptedException e) { e.printStackTrace(); } catch (BrokenBarrierException e) { e.printStackTrace(); } } } } /* 吉米已经到现场了 面条已经到现场了 麦克斯已经到现场了 Teenager已经到现场了 所有人到齐打开存钱箱 * */  第二个例子 有一些工人要去附件一家餐厅吃饭 但是餐厅不单独接待个人 至少需要4个人才能接待 因此 工人得互相凑对  import java.util.Arrays; import java.util.concurrent.BrokenBarrierException; import java.util.concurrent.ConcurrentLinkedQueue; import java.util.concurrent.CyclicBarrier; import java.util.concurrent.atomic.AtomicInteger; public class CyclicBarrierDemo2 { private static ConcurrentLinkedQueue\u0026lt;String\u0026gt; linkedQueue = new ConcurrentLinkedQueue\u0026lt;\u0026gt;(); public static void main(String[] args) { String[] names = new String[]{\u0026#34;小罗伯特·唐尼\u0026#34;, \u0026#34;艾玛·沃特森\u0026#34;, \u0026#34;艾玛·斯通\u0026#34;, \u0026#34;斯嘉丽·约翰逊\u0026#34;, \u0026#34;艾薇儿\u0026#34;, \u0026#34;阿兰·德龙\u0026#34;, \u0026#34;布雷特·道顿\u0026#34;, \u0026#34;莫蕾娜·巴卡林\u0026#34;, \u0026#34;费尔南达·塔瓦雷\u0026#34;, \u0026#34;杰夫·高布伦\u0026#34;, \u0026#34;纳帅尼尔·布佐尼\u0026#34;, \u0026#34;爱丽丝\u0026#34;}; AtomicInteger atomicInteger = new AtomicInteger(0); CyclicBarrier cyclicBarrier = new CyclicBarrier(4, () -\u0026gt; { System.out.println(\u0026#34;接待第\u0026#34; + atomicInteger.incrementAndGet() + \u0026#34;桌\u0026#34;); System.out.println(\u0026#34;人员:\u0026#34;+Arrays.toString(linkedQueue.toArray())); linkedQueue.clear(); }); for (String name : names) { // try { // //这里一定延迟一下 // Thread.sleep(1); // } catch (InterruptedException e) { // e.printStackTrace(); // } // new Worker(name, cyclicBarrier).start();  Worker worker = new Worker(name, cyclicBarrier); worker.start(); try { worker.join(10); } catch (InterruptedException e) { e.printStackTrace(); } } } public static class Worker extends Thread { private String firstName; private CyclicBarrier objKey; public Worker(String firstName, CyclicBarrier objKey) { this.firstName = firstName; this.objKey = objKey; this.setName(firstName); } @Override public void run() { try { System.out.println(this.firstName + \u0026#34;就位\u0026#34;); linkedQueue.add(this.firstName); //到达 屏障点  this.objKey.await(); //屏障点 结束  System.out.println(this.firstName + \u0026#34;开始就餐\u0026#34;); } catch (InterruptedException e) { e.printStackTrace(); } catch (BrokenBarrierException e) { e.printStackTrace(); } } } } /* 小罗伯特·唐尼就位 艾玛·沃特森就位 艾玛·斯通就位 斯嘉丽·约翰逊就位 接待第1桌 人员:[小罗伯特·唐尼, 艾玛·沃特森, 艾玛·斯通, 斯嘉丽·约翰逊] 斯嘉丽·约翰逊开始就餐 小罗伯特·唐尼开始就餐 艾玛·沃特森开始就餐 艾玛·斯通开始就餐 艾薇儿就位 阿兰·德龙就位 布雷特·道顿就位 莫蕾娜·巴卡林就位 接待第2桌 人员:[艾薇儿, 阿兰·德龙, 布雷特·道顿, 莫蕾娜·巴卡林] 莫蕾娜·巴卡林开始就餐 艾薇儿开始就餐 阿兰·德龙开始就餐 布雷特·道顿开始就餐 费尔南达·塔瓦雷就位 杰夫·高布伦就位 纳帅尼尔·布佐尼就位 爱丽丝就位 接待第3桌 人员:[费尔南达·塔瓦雷, 杰夫·高布伦, 纳帅尼尔·布佐尼, 爱丽丝] 爱丽丝开始就餐 费尔南达·塔瓦雷开始就餐 纳帅尼尔·布佐尼开始就餐 杰夫·高布伦开始就餐 * */  重要解释  Thread.sleep(1); worker.join(10); 是为了 让线程打印执行连续 把上面的取消 你会发现就不再连续了 但是每一个名字还是 会在屏障点 出现一次 并且 依然是4个线程执行后触发动作 只是名字出现不再连贯了 CountDownLatch 和 CyclicBarrier 的比较\r#\r\rCountDownLatch 是线程组之间的等待，即一个(或多个)线程等待N个线程完成某件事情之后再执行；而 CyclicBarrier 则是线程组内的等待，即每个线程相互等待，即N个线程都被拦截之后，然后依次执行。\nCountDownLatch 是减计数方式，而 CyclicBarrier 是加计数方式。\nCountDownLatch 计数为0无法重置，而 CyclicBarrier 计数达到初始值，则可以重置。\nCountDownLatch 不可以复用，而 CyclicBarrier 可以复用。\n"}),a.add({id:109,href:'/life/docs/plan/dir/cahh4sbqzx/',title:"2023-01-18待处理任务清单",section:"计划 ",content:"待处理任务清单\r#\r\r  java类型转换,构造,重要语法\n  异常机制详解\n  反射机制详解\n  注解机制详解\n  泛型机制详解\n  nginx 学习\n  mycat学习\n  RocketMQ 学习\n  python学习\n  英语学习\n  c++学习\n  科目三学习\n  科目四学习\n  口才练习\n  锻炼身体\n  dos学习\n  linux shell centos安装软件学习\n  人际关系 剖析 笔记撰写\n  社哲讲堂 剖析 笔记撰写\n  计算机网络 笔记撰写\n  计算机操作系统 笔记撰写\n  "}),a.add({id:110,href:'/life/docs/operating_system/windows/dos_file/',title:"DOS基本文件操作命令 ",section:"windows学习与使用 ",content:"DOS基本文件操作命令\r#\r\r  wing+r ==\u0026gt; cmd 进入dos控制台\n  D:\n  进入D盘\r cd命令  CD命令是更改目录命令 如果要进入D盘不用这个命令直接输入 D: 回车 即可\r例如:\rC:\\Users\\HP\u0026gt;D:\rD:\\\u0026gt;\rD:\\\u0026gt;dir\r驱动器 D 中的卷是 新加卷\r卷的序列号是 DAB4-11FE\rD:\\ 的目录\r2019-10-10 14:15 \u0026lt;DIR\u0026gt; 360极速浏览器下载\r2020-01-13 13:47 \u0026lt;DIR\u0026gt; BaiduNetdiskDownload\r2020-01-20 13:59 \u0026lt;DIR\u0026gt; CS\r2019-12-13 16:53 \u0026lt;DIR\u0026gt; data\r2020-02-10 15:55 \u0026lt;DIR\u0026gt; IdeaProjects\r2019-12-06 15:01 \u0026lt;DIR\u0026gt; log\r2019-10-23 10:40 \u0026lt;DIR\u0026gt; MailMasterData\r2019-09-29 10:43 \u0026lt;DIR\u0026gt; output\r2020-01-13 13:40 \u0026lt;DIR\u0026gt; soft\r2020-02-04 17:43 \u0026lt;DIR\u0026gt; temp\r2020-01-15 18:05 \u0026lt;DIR\u0026gt; ultraeditWork\r2019-12-10 09:47 \u0026lt;DIR\u0026gt; workspace\r0 个文件 0 字节\r12 个目录 463,738,040,320 可用字节\rD:\\\u0026gt;cd CS\rD:\\CS\u0026gt; /*进入了CS目录**/\r cd .. (进入当前磁盘的上一级)  \r类似于 linux 下的cd ~\rzch@zch MINGW64 /d/data\r$ cd ~\r已经在某个磁盘下的情况下可以用cd 进入目录\rC:\\Users\\noatn\u0026gt;cd d:\\tencent\rC:\\Users\\noatn\u0026gt;cd C:\\Users\\noatn\\.android\rC:\\Users\\noatn\\.android\u0026gt;\r这里进入d盘失败但是成功进入了C盘预计的目录\r 创建文件 echo \u0026gt;fileName或者 echo [this content] \u0026gt; fileName  \recho \u0026gt;d.txt;\r============\u0026gt;\rE:\\temp\u0026gt;echo \u0026gt;d.txt;\rE:\\temp\u0026gt;dir\r驱动器 E 中的卷是 新加卷\r卷的序列号是 64E8-4ABF\rE:\\temp 的目录\r2020/02/14 18:56 \u0026lt;DIR\u0026gt; .\r2020/02/14 18:56 \u0026lt;DIR\u0026gt; ..\r2020/02/14 18:56 3 d.txt\r1 个文件 3 字节\r2 个目录 264,645,689,344 可用字节\r 查看文件内容 type fileName  E:\\temp\u0026gt;type d.txt\rthis is a text file\r 创建目录 md pathName  E:\\temp\u0026gt;md cc\rE:\\temp\u0026gt;dir\r驱动器 E 中的卷是 新加卷\r卷的序列号是 64E8-4ABF\rE:\\temp 的目录\r2020/02/14 19:02 \u0026lt;DIR\u0026gt; .\r2020/02/14 19:02 \u0026lt;DIR\u0026gt; ..\r2020/02/14 19:02 \u0026lt;DIR\u0026gt; cc\r2020/02/14 18:59 19 d.txt\r1 个文件 19 字节\r3 个目录 264,645,689,344 可用字节\r 复制文件 copy fileName path+fileName  E:\\temp\u0026gt;copy d.txt E:\\temp\\cc;\r已复制 1 个文件。\r 深复制 XCOPY  H:\\\u0026gt;xcopy /?\r复制文件和目录树。\rXCOPY source [destination] [/A | /M] [/D[:date]] [/P] [/S [/E]] [/V] [/W]\r[/C] [/I] [/Q] [/F] [/L] [/G] [/H] [/R] [/T] [/U]\r[/K] [/N] [/O] [/X] [/Y] [/-Y] [/Z] [/B] [/J]\r[/EXCLUDE:file1[+file2][+file3]...]\rsource 指定要复制的文件。\rdestination 指定新文件的位置和/或名称。\r/A 仅复制有存档属性集的文件，\r但不更改属性。\r/M 仅复制有存档属性集的文件，\r并关闭存档属性。\r/D:m-d-y 复制在指定日期或指定日期以后更改的文件。\r如果没有提供日期，只复制那些\r源时间比目标时间新的文件。\r/EXCLUDE:file1[+file2][+file3]...\r指定含有字符串的文件列表。每个字符串\r在文件中应位于单独的一行。如果任何\r字符串与复制文件的绝对路径的任何部分相符，\r则排除复制该文件。例如，\r指定如 \\obj\\ 或 .obj 的字符串会分别\r排除目录 obj 下面的所有文件或带有\r.obj 扩展名的所有文件。\r/P 创建每个目标文件之前提示你。\r/S 复制目录和子目录，不包括空目录。\r/E 复制目录和子目录，包括空目录。\r与 /S /E 相同。可以用来修改 /T。\r/V 验证每个新文件的大小。\r/W 提示你在复制前按键。\r/C 即使有错误，也继续复制。\r/I 如果目标不存在，且要复制多个文件，\r则假定目标必须是目录。\r/Q 复制时不显示文件名。\r/F 复制时显示完整的源文件名和目标文件名。\r/L 显示要复制的文件。\r/G 允许将加密文件复制到\r不支持加密的目标。\r/H 也复制隐藏文件和系统文件。\r/R 覆盖只读文件。\r/T 创建目录结构，但不复制文件。不\r包括空目录或子目录。/T /E 包括\r空目录和子目录。\r/U 只复制已经存在于目标中的文件。\r/K 复制属性。一般的 Xcopy 会重置只读属性。\r/N 用生成的短名称复制。\r/O 复制文件所有权和 ACL 信息。\r/X 复制文件审核设置(隐含 /O)。\r/Y 取消提示以确认要覆盖\r现有目标文件。\r/-Y 要提示以确认要覆盖\r现有目标文件。\r/Z 在可重新启动模式下复制网络文件。\r/B 复制符号链接本身与链接目标。\r/J 复制时不使用缓冲的 I/O。推荐复制大文件时使用。\r开关 /Y 可以预先在 COPYCMD 环境变量中设置。\r这可能被命令行上的 /-Y 覆盖。\r 深复制 案例  \rH:\\\u0026gt;XCOPY Java学习相关电子书籍 E:\\temp\\mess\r不加参数只是复制了文件，并没有复制要复制的文件夹里的文件夹\r接下来复制一个包含子文件夹的案例\rH:\\\u0026gt;XCOPY Java学习相关电子书籍 E:\\temp\\aess /s/e\r目标 E:\\temp\\aess 是文件名\r还是目录名\r(F = 文件，D = 目录)? d\rJava学习相关电子书籍\\Algorithms 4th Edition.pdf\rJava学习相关电子书籍\\Core Java. Volume II. Advanced Features, 8th Edition.pdf\rJava学习相关电子书籍\\Core.Java.Volume.I.Fundamentals,8th.Edition.pdf\rJava学习相关电子书籍\\Effective.Enterprise.Java.pdf\rJava学习相关电子书籍\\Flex+白皮书.pdf\rJava学习相关电子书籍\\Flex3高级图表开发指南.pdf\rJava学习相关电子书籍\\Google笔试题.pdf\rJava学习相关电子书籍\\head first javascript中文版.pdf\rJava学习相关电子书籍\\Head First Java中文版(深入浅出Java)[零基础推荐].pdf\rJava学习相关电子书籍\\Head First Servlet JSP(清晰中文版).PDF\rJava学习相关电子书籍\\Head First 设计模式.pdf\rJava学习相关电子书籍\\HttpClient入门.pdf\rJava学习相关电子书籍\\ibatis开发指南.pdf\rJava学习相关电子书籍\\J2EE反模式.pdf\rJava学习相关电子书籍\\Java Collections中的Fail Fast机制.pdf\rJava学习相关电子书籍\\Java Network Programming.pdf\rJava学习相关电子书籍\\Java Web动态图表编程.pdf\rJava学习相关电子书籍\\Java Web开发典型模块大全.pdf\rJava学习相关电子书籍\\Java 编程思想 -- 面向对象逻辑思维.pdf\rJava学习相关电子书籍\\Java.Rules中文版.pdf\rJava学习相关电子书籍\\Java.Web服务开发.pdf\rJava学习相关电子书籍\\JAVA2核心技术第1卷.基础知识7th.pdf\rJava学习相关电子书籍\\Java2网络协议技术内幕.pdf\rJava学习相关电子书籍\\JavaScript王者归来.pdf\rJava学习相关电子书籍\\JavaScript高级程序设计（第3版）中文 高清 完整 (1).pdf\rJava学习相关电子书籍\\JAVA与XML.pdf\rJava学习相关电子书籍\\JAVA优化编程.pdf\rJava学习相关电子书籍\\java入门到详解[推荐].pdf\rJava学习相关电子书籍\\java华为面试题.pdf\rJava学习相关电子书籍\\Java基础与案例开发详解.pdf\rJava学习相关电子书籍\\java基础教程(强烈推荐).pdf\rJava学习相关电子书籍\\Java夜未眠_程序员的心声.pdf\rJava学习相关电子书籍\\java实例详解.pdf\rJava学习相关电子书籍\\Java并发程序设计教程.pdf\rJava学习相关电子书籍\\Java开发利器Myeclipse全面详解.pdf\rJava学习相关电子书籍\\Java开发实战经典.pdf\rJava学习相关电子书籍\\Java数据结构和算法.pdf\rJava学习相关电子书籍\\Java数据结构和算法中文第二版[jb51.net].pdf\rJava学习相关电子书籍\\Java最著名的开源项目.pdf\rJava学习相关电子书籍\\Java核心技术 卷1 基础知识 原书第9版.pdf\rJava学习相关电子书籍\\JAVA核心技术卷2：高级特征.pdf\rJava学习相关电子书籍\\java核心技术，完整中文版.pdf\rJava学习相关电子书籍\\Java线程.pdf\rJava学习相关电子书籍\\Java经典问题答案.pdf\rJava学习相关电子书籍\\Java经典问题答案（带书签）.pdf\rJava学习相关电子书籍\\Java编程及相关书籍.O\u0026amp;#39;Reilly.Creating.Effective.Javahelp.pdf\rJava学习相关电子书籍\\Java编程指南.pdf\rJava学习相关电子书籍\\Java编程规范.pdf\rJava学习相关电子书籍\\Java编辑思想（第四版）..pdf\rJava学习相关电子书籍\\Java网络socket编程详解.pdf\rJava学习相关电子书籍\\Java网络编程技术与实践.pdf\rJava学习相关电子书籍\\Java虚拟机规范（Java SE 7）.pdf\rJava学习相关电子书籍\\Java解惑(中文).pdf\rJava学习相关电子书籍\\Java设计模式之抽象工厂模式.pdf\rJava学习相关电子书籍\\Java语言导学(第3版)CN.pdf\rJava学习相关电子书籍\\Java语言规范中文版(第三版).pdf\rJava学习相关电子书籍\\JAVA面向对象编程(孙卫琴).pdf\rJava学习相关电子书籍\\Java项目开发案例全程实录_第二版_.pdf\rJava学习相关电子书籍\\JDK1.5的泛型实现.pdf\rJava学习相关电子书籍\\jQuery基础教程第四版 (2).pdf\rJava学习相关电子书籍\\jQuery技术内幕：深入解析jQuery架构设计与实现原理.pdf\rJava学习相关电子书籍\\JSTL标签.pdf\rJava学习相关电子书籍\\Oracle与SQLServe..pdf\rJava学习相关电子书籍\\oracle存储过程超详细使用手册..pdf\rJava学习相关电子书籍\\Oracle数据库性能优化.pdf\rJava学习相关电子书籍\\Python Programming With The Java Class Libraries - A Tutorial For Building Web And Enterprise Applications With Jython..pdf\rJava学习相关电子书籍\\Spring.2.0核心技术与最佳实践.廖雪峰.扫描版.pdf\rJava学习相关电子书籍\\Spring基础教程.pdf\rJava学习相关电子书籍\\SPRING开发指南.pdf\rJava学习相关电子书籍\\SSH基础知识 常用命令 配置实例.pdf\rJava学习相关电子书籍\\Struts 2 in Action.pdf\rJava学习相关电子书籍\\Struts中文手册.pdf\rJava学习相关电子书籍\\The Java Virtual Machine Specification, Java SE 7 Edition.pdf\rJava学习相关电子书籍\\Thinking.In.Java(中文版).pdf\rJava学习相关电子书籍\\Windows API开发详解 函数、接口、编程实例.pdf\rJava学习相关电子书籍\\[21天学通Java.6(第5版)].Rogers.Cadenhead\u0026amp;Laura.Lemay.扫描版.pdf\rJava学习相关电子书籍\\[Flex.3实战].（美）艾哈迈德，（美）赫希，（美）阿比德.扫描版.pdf\rJava学习相关电子书籍\\[Java并发编程实践].(Java.Concurrency.in.Practice).Brian.Goetz.文字版(1).pdf\rJava学习相关电子书籍\\[JAVA消息服务].（美）Mark.Richards,.Richard.Monson-Haefel,.David.A.Chappell.文字版.pdf\rJava学习相关电子书籍\\[Java编程及相关书籍].O\u0026amp;#39;Reilly.Creating.Effective.Javahelp.pdf\rJava学习相关电子书籍\\[Java网络编程(第3版,2004)].(Java.Network.Programming).Elliotte.Rusty.Harold.文字版.pdf\rJava学习相关电子书籍\\[Java语言程序设计].(Introduction.to.Java.Programming,.Brief.Version,.8ed),.Liang,.文字版.pdf\rJava学习相关电子书籍\\[代码大全2中文版(完整清晰版)].pdf\rJava学习相关电子书籍\\《Effective JavaScript》扫描版（中文） (3).pdf\rJava学习相关电子书籍\\《SQL查询的艺术》.(张权,郭天娇).[PDF]@jb51.net.pdf\rJava学习相关电子书籍\\《经典JavaEE企业应用实战》 (1).pdf\rJava学习相关电子书籍\\中兴面试题.pdf\rJava学习相关电子书籍\\初学者第1章 对象入门.pdf..pdf\rJava学习相关电子书籍\\北京中软笔试题.pdf\rJava学习相关电子书籍\\华为试题.pdf\rJava学习相关电子书籍\\基于MVC的JavaScript Web富应用开发(完整版).pdf\rJava学习相关电子书籍\\大话数据结构.pdf\rJava学习相关电子书籍\\大话设计模式(1).pdf\rJava学习相关电子书籍\\大话设计模式.pdf\rJava学习相关电子书籍\\实用J2EE设计模式编程指南.pdf\rJava学习相关电子书籍\\实用算法基础教程.pdf\rJava学习相关电子书籍\\广东北电面试题.pdf\rJava学习相关电子书籍\\快速软件开发..pdf\rJava学习相关电子书籍\\排序算法汇总.pdf\rJava学习相关电子书籍\\新手学Java 7编程（第5版）.pdf\rJava学习相关电子书籍\\深入JAVA虚拟机.pdf\rJava学习相关电子书籍\\深入JAVA虚拟机第二版.pdf\rJava学习相关电子书籍\\深入体验Java Web开发内幕——核心基础.pdf\rJava学习相关电子书籍\\深入体验Javaweb开发内幕（高级特性）.pdf\rJava学习相关电子书籍\\深入学习：JFC SWING—JAVA 基础类组件集.pdf\rJava学习相关电子书籍\\王牌1 Java SE 类库查询手册.pdf\rJava学习相关电子书籍\\王牌2 学习成果检测——【练一练】答案.pdf\rJava学习相关电子书籍\\王牌3 Eclipse常用快捷键.pdf\rJava学习相关电子书籍\\王牌4 Eclipse提示与技巧.pdf\rJava学习相关电子书籍\\王牌5 Java程序员职业规划.pdf\rJava学习相关电子书籍\\王牌6 Java程序员面试技巧.pdf\rJava学习相关电子书籍\\王牌7 Java常见面试题.pdf\rJava学习相关电子书籍\\王牌8 扫雷英雄榜——Java常见错误及解决方案.pdf\rJava学习相关电子书籍\\王牌9 优秀程序员之路——Java开发经验及技巧大汇总.pdf\rJava学习相关电子书籍\\百度试题.pdf\rJava学习相关电子书籍\\第10章 Java IO系统.pdf\rJava学习相关电子书籍\\第11章 运行期类型鉴定.pdf\rJava学习相关电子书籍\\第12章 传递和返回对象.pdf\rJava学习相关电子书籍\\第13章 创建窗口和程序片.pdf\rJava学习相关电子书籍\\第14章 多线程.pdf\rJava学习相关电子书籍\\第15章 网络编程(1).pdf\rJava学习相关电子书籍\\第16章 设计范式.pdf\rJava学习相关电子书籍\\第17章 项目.pdf\rJava学习相关电子书籍\\第2章 一切都是对象.pdf\rJava学习相关电子书籍\\第3章 控制程序流程.pdf\rJava学习相关电子书籍\\第4章 初始化和清除.pdf\rJava学习相关电子书籍\\第5章 隐藏实施过程.pdf\rJava学习相关电子书籍\\第6章 类再生.pdf\rJava学习相关电子书籍\\第7章 多形性.pdf\rJava学习相关电子书籍\\第8章 对象的容纳.pdf\rJava学习相关电子书籍\\第9章 异常差错控制.pdf\rJava学习相关电子书籍\\算法与数据结构-实用算法基础教程.pdf\rJava学习相关电子书籍\\算法导论.pdf\rJava学习相关电子书籍\\精通JavaScript动态网页编程(实例版).pdf\rJava学习相关电子书籍\\精通JavaScript（中文清晰优化版）.pdf\rJava学习相关电子书籍\\精通spring - Mastering Spring.pdf\rJava学习相关电子书籍\\精通Struts基于MVC的Java Web设计与开发(1).pdf\rJava学习相关电子书籍\\精通Struts基于MVC的Java Web设计与开发.pdf\rJava学习相关电子书籍\\经典查询练手.pdf\rJava学习相关电子书籍\\编程之美-完整版.pdf\rJava学习相关电子书籍\\网易笔试题.pdf\rJava学习相关电子书籍\\网站开发前台后台技术指南.pdf\rJava学习相关电子书籍\\罗时飞.精通spring.pdf\rJava学习相关电子书籍\\腾讯试题.pdf\rJava学习相关电子书籍\\解析Java虚拟机器开发：权衡优化、高效和安全的最优方案.pdf\rJava学习相关电子书籍\\计算机导论与JavaScript编程(第3版).pdf\rJava学习相关电子书籍\\设计模式：Java语言中的应用.pdf\rJava学习相关电子书籍\\迅雷笔试题.pdf\rJava学习相关电子书籍\\重构-改善既有代码的设计.pdf\rJava学习相关电子书籍\\重构_改善既有代码的设计[高清版]..pdf\rJava学习相关电子书籍\\附录A 使用非JAVA代码.pdf\rJava学习相关电子书籍\\附录B 对比C++和java.pdf\rJava学习相关电子书籍\\附录C Java编程规则.pdf\rJava学习相关电子书籍\\附录D 性能.pdf\rJava学习相关电子书籍\\附录E 关于垃圾收集的一些话.pdf\rJava学习相关电子书籍\\高效程序员的45个习惯：敏捷开发修炼之道.pdf\rJava学习相关电子书籍\\黑客入门(超级详细版).pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\100道趣题.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\15天学会jQuery(0-5).pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\15天学会jQuery(11-15).pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\15天学会jQuery(6-10).pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\15天学会jquery(完整版).pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\css权威指南.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\CSS禅意花园.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\CSS网站布局实录 （第二版）.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\Head First HTML与CSS、XHTML （中文版）.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\HTML5高级程序设计 [西林街 - 千万亿网盘资源 www.xilinjie.com].pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\HTML_5从入门到精通.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\JavaScript DOM编程艺术（中文第二版）.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\JavaScript.DOM高级程序设计.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\JavaScript设计模式.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\JavaScript语言精粹_修订版.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\JavaScript高级程序设计（第3版）中文 高清 完整.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\JQUERY权威指南（完整版）.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\ppk谈JavaScript.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\Secrets of the JavaScript Ninja.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[HTML5游戏开发].(Jeanine Meyer).徐阳等.扫描版.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[HTML5资料]Canvas入门基础教程.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[JavaScript高级程序设计(第2版)].（美）泽卡斯.扫描版.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[jQuery攻略].(印)哈瓦尼.扫描版.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[JQuery菜鸟到忍者].Sitepoint.jQuery.Novice.to.Ninja.Feb.2010.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[ppk谈JavaScript].(荷)科克.扫描版(第一部分).pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[web开发CSS系列].Apress.Pro.CSS.Techniques.Nov.2006.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[web开发CSS系列].SitePoint.Everything.You.Know.About.CSS.is.Wrong.Oct.2008.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[web开发CSS系列].The.Art.and.Science.of.CSS.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[web开发CSS系列].The.Principles.of.Beautiful.Web.Design.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[web开发CSS系列].The.Ultimate.CSS.Reference.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[web开发CSS系列].UIdesignForMereMortals.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[web开发CSS系列].WebDevelopmentSolutions.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[大家网]高性能网站建设指南[www.TopSage.com].pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[深入浅出Javascript].O'reilly.Head.First.Javascript.Jan.2008.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[精通CSS高级Web标准解决方案].CSS.Mastery.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[网页重构xhtml.css].Ajax.In.Action.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[网页重构xhtml.css].Bulletproof_Web_Design.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[网页重构xhtml.css].css.hack.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[网页重构xhtml.css].css.mastery.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[高性能网站建设指南——前端工程师技能精粹(英文原版)].O'Reilly.High.Performance.Web.Sites.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[高性能网站建设进阶指南].(Even.Faster.Web.Sites).Steve.Souders.文字版.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\[高流量网站的CSS设计].(Pro.CSS.for.High.Traffic.Websites).A.Kennedy\u0026amp;I.d.Leon.文字版.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\大巧不工Web前端设计修炼之道 [西林街 - 千万亿网盘资源 www.xilinjie.com].pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\悟透JavaScript.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\淘宝的HTML5实践.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\用AngularJS开发下一代Web应用.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\瞬间之美 Web界面设计如何让用户心动.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\精彩绝伦的CSS.pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\精通JavaScript(图灵计算机科学丛书).pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\网站重构—应用Web标准进行设计[中文版].pdf\rJava学习相关电子书籍\\JavaWEB(htmi,css）、JavaScript、jQuery等相关书籍\\高性能JavaScript.pdf\r复制了 208 个文件\rJavaWEB(htmi,css）、JavaScript、jQuery等相关书籍 这个就是子文件夹\rxcopy D:\\CS E:\\kk\\ /s/c\r 文件重命名命令 ren sourceFileName targetFileName  E:\\temp\\cc\u0026gt;ren d.txt d2.txt;\rE:\\temp\\cc\u0026gt;type d2.txt\rthis is a text file\r 文件移动命令(剪贴命令) move fileName path+FileName  E:\\temp\\cc\u0026gt;move d2.txt E:\\temp\\kk\r移动了 1 个文件。\r 文件删除操作 del fileName  E:\\temp\\kk\u0026gt;dir\r驱动器 E 中的卷是 新加卷\r卷的序列号是 64E8-4ABF\rE:\\temp\\kk 的目录\r2020/02/14 19:10 \u0026lt;DIR\u0026gt; .\r2020/02/14 19:10 \u0026lt;DIR\u0026gt; ..\r2020/02/14 18:59 19 d2.txt\r1 个文件 19 字节\r2 个目录 264,645,689,344 可用字节\rE:\\temp\\kk\u0026gt;del d2.txt\rE:\\temp\\kk\u0026gt;dir\r驱动器 E 中的卷是 新加卷\r卷的序列号是 64E8-4ABF\rE:\\temp\\kk 的目录\r2020/02/14 19:12 \u0026lt;DIR\u0026gt; .\r2020/02/14 19:12 \u0026lt;DIR\u0026gt; ..\r0 个文件 0 字节\r2 个目录 264,645,689,344 可用字节\r 删除特定文件夹下的文件  E:\\temp\u0026gt;del kk\rE:\\temp\\kk\\*, 是否确认(Y/N)? Y\r删除kk文件夹下所以的文件\r 文件夹删除 rd /s path  E:\\temp\\kk\u0026gt;rd /s dg\rdg, 是否确认(Y/N)? Y\r 文件夹删除 rd path  PS E:\\temp\u0026gt; dir 目录: E:\\temp\rMode LastWriteTime Length Name\r---- ------------- ------ ----\rd----- 2020/2/15 10:40 cc\rd----- 2020/2/15 12:01 kk\r-a---- 2020/2/14 18:59 19 d2.txt\rPS E:\\temp\u0026gt; rd cc  dos命令下正则表达式有效  D:\\ter\u0026gt;del *.txt ;\r"}),a.add({id:111,href:'/life/docs/javadir/basedir/jsp_dir/jsp_jstl_core%E6%A0%87%E7%AD%BE%E5%BA%93/',title:"jsp jstl core 标签库 ",section:"jsp 基础知识 ",content:"JSTL标签库\r#\r\rJSTL主要有五大类标签库\n core标签库(核心标签库),包括通用标签(输出标签),流程控制和循环控制标签 fmt标签库,包括格式化,国际格式化标签等 fn标签库,函数标签库 XML标签库,关于XML操作的标签库 SQL标签库,操作数据库标签  core标签库用法\r#\r\r使用core标签前必须添加taglie指令\n %@ taglib prefix=\u0026ldquo;c\u0026rdquo; uri=\u0026ldquo;http://java.sun.com/jsp/jstl/core\u0026quot; %\u0026gt;\n  \u0026lt;c:set\u0026gt;在某个范围设定某个值   \u0026lt;c:set value=\u0026ldquo;表达式\u0026rdquo; var=\u0026ldquo;varname\u0026rdquo; [scope=\u0026ldquo;request|page|session|application\u0026rdquo;]\u0026gt;\u0026lt;/c:set\u0026gt;\n \u0026lt;c:set value=\u0026quot;${1+2 }\u0026quot; var=\u0026quot;variable\u0026quot;\u0026gt;\u0026lt;/c:set\u0026gt;\r${variable }\r \u0026lt;c:out\u0026gt;把表达式的结构输出到页面中   \u0026lt;c:out value=\u0026ldquo;表达式\u0026rdquo; [escapeXml=\u0026ldquo;true|false\u0026rdquo;]\u0026gt;\u0026lt;/c:out\u0026gt;\n \u0026lt;c:set value=\u0026quot;${1+2 }\u0026quot; var=\u0026quot;variable\u0026quot;\u0026gt;\u0026lt;/c:set\u0026gt;\r\u0026lt;c:out value=\u0026quot;${variable }\u0026quot;\u0026gt;\u0026lt;/c:out\u0026gt;\r \u0026lt;c:if\u0026gt;条件判断   \u0026lt;c:if test=\u0026ldquo;判断条件\u0026rdquo; [var=\u0026ldquo;varname\u0026rdquo;] [scope=\u0026ldquo;request|page|session|application\u0026rdquo;]\u0026gt; 条件为真执行的语句 \u0026lt;/c:if\u0026gt;\n \u0026lt;c:if test=\u0026quot;${1\u0026lt;2 }\u0026quot; var=\u0026quot;result\u0026quot;\u0026gt;\r\u0026lt;c:out value=\u0026quot;${result }\u0026quot;\u0026gt;\u0026lt;/c:out\u0026gt;\r\u0026lt;/c:if\u0026gt;\r \u0026lt;c:choose\u0026gt;,\u0026lt;c:when\u0026gt;,\u0026lt;c:otherwise\u0026gt;流程控制标签   \u0026lt;c:choose\u0026gt; \u0026lt;c:when test=\u0026ldquo;表达式\u0026rdquo;\u0026gt; 表达式为真执行的语句 \u0026lt;/c:when\u0026gt; [\u0026lt;c:otherwise\u0026gt; 表达式为假执行的语句 \u0026lt;/c:otherwise\u0026gt;] \u0026lt;/c:choose\u0026gt;\n  \u0026lt;c:when\u0026gt;必须在\u0026lt;c:otherwise\u0026gt;前边,\u0026lt;c:choose\u0026gt;可以添加多个\u0026lt;c:choose\u0026gt;,类似于if else if写法\n \u0026lt;c:set value=\u0026quot;8\u0026quot; var=\u0026quot;variable1\u0026quot;\u0026gt;\u0026lt;/c:set\u0026gt;\r\u0026lt;c:set value=\u0026quot;9\u0026quot; var=\u0026quot;variable2\u0026quot;\u0026gt;\u0026lt;/c:set\u0026gt;\r\u0026lt;c:choose\u0026gt;\r\u0026lt;c:when test=\u0026quot;${variable1%2==0 }\u0026quot;\u0026gt;\r\u0026lt;c:out value=\u0026quot;variable1:偶数\u0026quot;\u0026gt;\u0026lt;/c:out\u0026gt;\r\u0026lt;c:choose\u0026gt;\r\u0026lt;c:when test=\u0026quot;${variable2%2==0 }\u0026quot;\u0026gt;\r\u0026lt;c:out value=\u0026quot;variable2:偶数\u0026quot;\u0026gt;\u0026lt;/c:out\u0026gt;\r\u0026lt;/c:when\u0026gt;\r\u0026lt;c:otherwise\u0026gt;\r\u0026lt;c:out value=\u0026quot;variable2:奇数\u0026quot;\u0026gt;\u0026lt;/c:out\u0026gt;\r\u0026lt;/c:otherwise\u0026gt;\r\u0026lt;/c:choose\u0026gt;\r\u0026lt;/c:when\u0026gt;\r\u0026lt;c:otherwise\u0026gt;\r\u0026lt;c:out value=\u0026quot;variable1:奇数\u0026quot;\u0026gt;\u0026lt;/c:out\u0026gt;\r\u0026lt;/c:otherwise\u0026gt;\r\u0026lt;/c:choose\u0026gt;\r \u0026lt;c:forEach\u0026gt;迭代标签   \u0026lt;c:forEach [var=\u0026ldquo;varname\u0026rdquo;] [varStatus=\u0026ldquo;varStatusName\u0026rdquo;] [begin=\u0026ldquo;开始\u0026rdquo;] [end=\u0026ldquo;结束\u0026rdquo;] [step=\u0026ldquo;步数\u0026rdquo;]\u0026gt; java or html code \u0026lt;/c:forEach\u0026gt;\n \u0026lt;table\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;行号1\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;行号2\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;当前迭代项\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;是否第一项\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;是否最后一项\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;结果\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;c:forEach var=\u0026quot;i\u0026quot; varStatus=\u0026quot;j\u0026quot; begin=\u0026quot;1\u0026quot; end=\u0026quot;10\u0026quot; step=\u0026quot;2\u0026quot;\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;${j.index }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${j.count }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${j.current }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${j.first }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${j.last }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${i }\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/c:forEach\u0026gt;\r\u0026lt;/table\u0026gt;\r  \u0026lt;c:forEach item=\u0026ldquo;collection\u0026rdquo; [varStatus=\u0026ldquo;varStatusName\u0026rdquo; [begin=\u0026ldquo;开始\u0026rdquo;] [end=\u0026ldquo;结束\u0026rdquo;] [step=\u0026ldquo;步数\u0026rdquo;]]\u0026gt; java or heml code \u0026lt;/c:forEach\u0026gt;\n \u0026lt;%\rList list=new ArrayList();\rlist.add(\u0026quot;zhangsan\u0026quot;);\rlist.add(\u0026quot;lisi\u0026quot;);\rlist.add(\u0026quot;wangwu\u0026quot;);\rlist.add(\u0026quot;liuliu\u0026quot;);\rpageContext.setAttribute(\u0026quot;collection\u0026quot;, list);\r%\u0026gt;\r\u0026lt;table\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;行号1\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;行号2\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;当前迭代项\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;是否第一项\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;是否最后一项\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;姓名\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;c:forEach items=\u0026quot;${collection }\u0026quot; var=\u0026quot;i\u0026quot; varStatus=\u0026quot;j\u0026quot;\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;${j.index }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${j.count }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${j.current }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${j.first }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${j.last }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${i }\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/c:forEach\u0026gt;\r\u0026lt;/table\u0026gt;\r \u0026lt;c;forTokens\u0026gt;字符串分割标签   \u0026lt;c:forTokens items=\u0026ldquo;字符串\u0026rdquo; delims=\u0026ldquo;分割符\u0026rdquo; [var=\u0026ldquo;別名\u0026rdquo;] [varStatus=\u0026ldquo;varStatusName\u0026rdquo;] [begin=\u0026ldquo;开始\u0026rdquo;] [end=\u0026ldquo;结束\u0026rdquo;] [step=\u0026ldquo;步数\u0026rdquo;]\u0026gt; java or html code \u0026lt;/c:forTokens\u0026gt;\n \u0026lt;table\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;行号1\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;行号2\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;当前迭代项\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;是否第一项\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;是否最后一项\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;子字符串\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;c:forTokens items=\u0026quot;this is a jstl code\u0026quot; delims=\u0026quot; \u0026quot; var=\u0026quot;i\u0026quot; varStatus=\u0026quot;j\u0026quot;\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;${j.index }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${j.count }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${j.current }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${j.first }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${j.last }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${i }\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/c:forTokens\u0026gt;\r \r\u0026lt;c;remove\u0026gt;删除某个范围内的值   \u0026lt;c:remove var=\u0026ldquo;varname\u0026rdquo; [scope=\u0026ldquo;request|page|session|application\u0026rdquo;]/\u0026gt;\n \u0026lt;%\rpageContext.setAttribute(\u0026quot;varname1\u0026quot;, \u0026quot;one\u0026quot;);\rrequest.setAttribute(\u0026quot;varname2\u0026quot;, \u0026quot;two\u0026quot;);\rsession.setAttribute(\u0026quot;varname3\u0026quot;, \u0026quot;three\u0026quot;);\rapplication.setAttribute(\u0026quot;varname4\u0026quot;, \u0026quot;four\u0026quot;);\r%\u0026gt;\r\u0026lt;table\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;th\u0026gt;pageContext\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;request\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;session\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;application\u0026lt;/th\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;${varname1 }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${varname2 }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${varname3 }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${varname4 }\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/table\u0026gt;\r\u0026lt;c:remove var=\u0026quot;varname1\u0026quot;/\u0026gt;\r\u0026lt;c:remove var=\u0026quot;varname2\u0026quot;/\u0026gt;\r\u0026lt;c:remove var=\u0026quot;varname3\u0026quot;/\u0026gt;\r\u0026lt;c:remove var=\u0026quot;varname4\u0026quot;/\u0026gt;\r\u0026lt;c:out value=\u0026quot;删除后\u0026quot;\u0026gt;\u0026lt;/c:out\u0026gt;\u0026lt;br\u0026gt;\r\u0026lt;table\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;th\u0026gt;pageContext\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;request\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;session\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;application\u0026lt;/th\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;${varname1 }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${varname2 }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${varname3 }\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;${varname4 }\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/table\u0026gt;\r \u0026lt;c:catch\u0026gt;抛出异常标签   \u0026lt;c:catch [var=\u0026ldquo;varname\u0026rdquo;]\u0026gt; code \u0026lt;/c:catch\u0026gt;\n \u0026lt;c:catch var=\u0026quot;error\u0026quot;\u0026gt;\r\u0026lt;%\rint[] arr=new int[4];\rint j=arr[5];\r%\u0026gt;\r\u0026lt;/c:catch\u0026gt;\r\u0026lt;c:out value=\u0026quot;错误信息:${error }\u0026quot;\u0026gt;\u0026lt;/c:out\u0026gt;\u0026lt;br\u0026gt;\r\u0026lt;c:catch var=\u0026quot;error1\u0026quot;\u0026gt;\r\u0026lt;%\rint j=5/0;\r%\u0026gt;\r\u0026lt;/c:catch\u0026gt;\r\u0026lt;c:out value=\u0026quot;错误信息:${error1 }\u0026quot;\u0026gt;\u0026lt;/c:out\u0026gt;\r \u0026lt;c:param\u0026gt;向导入的页面传入参数,与\u0026lt;c:import\u0026gt;结合使用   \u0026lt;c:param name=\u0026ldquo;paramName\u0026rdquo; value=\u0026ldquo;paramValue\u0026rdquo;\u0026gt;\u0026lt;/c:param\u0026gt;\n \u0026lt;c:import\u0026gt;导入静|动态文件   \u0026lt;c:import url=\u0026ldquo;url\u0026rdquo; [context=\u0026ldquo;context\u0026rdquo;] [var=\u0026ldquo;varname\u0026rdquo;] [scope=\u0026ldquo;request|page|session|application\u0026rdquo;] [charEncoding=\u0026ldquo;coding\u0026rdquo;]\u0026gt; [\u0026lt;c:param name=\u0026ldquo;paramName\u0026rdquo; [value=\u0026ldquo;valueName\u0026rdquo;]\u0026gt;\u0026lt;/c:param\u0026gt;] \u0026lt;/c:import\u0026gt;\n \u0026lt;c:import url=\u0026quot;https://www.baidu.com/s\u0026quot;\u0026gt;\r\u0026lt;c:param name=\u0026quot;wd\u0026quot; value=\u0026quot;java\u0026quot;/\u0026gt;\r\u0026lt;/c:import\u0026gt;\r \u0026lt;c:redirect\u0026gt;重定向另一个页面   \u0026lt;c:redirect url=\u0026ldquo;url\u0026rdquo; [contex=\u0026ldquo;context\u0026rdquo;]\u0026gt; [\u0026lt;c:param name=\u0026ldquo;paramName\u0026rdquo; [value=\u0026ldquo;valueName\u0026rdquo;]\u0026gt;\u0026lt;/c:param\u0026gt;] \u0026lt;/c:redirect\u0026gt;\n \u0026lt;c:redirect url=\u0026quot;https://www.baidu.com/s\u0026quot;\u0026gt;\r\u0026lt;c:param name=\u0026quot;wd\u0026quot; value=\u0026quot;java\u0026quot;/\u0026gt;\r\u0026lt;/c:redirect\u0026gt;  \u0026lt;c:url\u0026gt;生成一个url   \u0026lt;c:url value=\u0026ldquo;url\u0026rdquo; [context=\u0026ldquo;context\u0026rdquo;] var=\u0026ldquo;varname\u0026rdquo; [scope=\u0026ldquo;request|page|session|application\u0026rdquo;]\u0026gt; [\u0026lt;c:param name=\u0026ldquo;paramName\u0026rdquo; [value=\u0026ldquo;valueName\u0026rdquo;]\u0026gt;\u0026lt;/c:param\u0026gt;] \u0026lt;/c:url\u0026gt;\n \u0026lt;c:url value=\u0026quot;https://www.baidu.com/s\u0026quot; var=\u0026quot;varname\u0026quot;\u0026gt;\r\u0026lt;c:param name=\u0026quot;wd\u0026quot; value=\u0026quot;java\u0026quot;\u0026gt;\u0026lt;/c:param\u0026gt;\r\u0026lt;/c:url\u0026gt;\r\u0026lt;c:out value=\u0026quot;${varname }\u0026quot;\u0026gt;\u0026lt;/c:out\u0026gt;\r\u0026lt;br\u0026gt;\r\u0026lt;c:url value=\u0026quot;/index.jsp\u0026quot; var=\u0026quot;varname\u0026quot;\u0026gt;\u0026lt;/c:url\u0026gt;\r\u0026lt;c:out value=\u0026quot;${varname }\u0026quot;\u0026gt;\u0026lt;/c:out\u0026gt;\r 表格合并   \u0026lt;div class=\u0026quot;page-inner mt--5\u0026quot; style=\u0026quot;margin-bottom: 1rem;\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;row mt--2\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;col-md-12\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;card full-height\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;card-header\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;card-head-row\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;card-title\u0026quot;\u0026gt;工作事项配置\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;card-body\u0026quot;\u0026gt;\r\u0026lt;form class=\u0026quot;form-horizontal\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;row form-group\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;col-md-12\u0026quot;\u0026gt;\r\u0026lt;table class=\u0026quot;table table-bordered table-striped\u0026quot;\u0026gt;\r\u0026lt;thead\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;th\u0026gt;阶段\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;工作事项\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;名称\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;排序\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;责任人\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;描述\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;编辑\u0026lt;/th\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/thead\u0026gt;\r\u0026lt;tbody\u0026gt;\r\u0026lt;c:forEach items=\u0026quot;${projectWorkStageConfigVoList}\u0026quot; var=\u0026quot;ProjectWorkStageConfigVo\u0026quot; varStatus=\u0026quot;StatusWorkStageConfigVo\u0026quot;\u0026gt;\r\u0026lt;c:forEach items=\u0026quot;${ProjectWorkStageConfigVo.projectPhaseConfigVoList}\u0026quot; var=\u0026quot;ProjectPhaseConfigVo\u0026quot; varStatus=\u0026quot;StatusPhaseConfigVo\u0026quot;\u0026gt;\r\u0026lt;c:forEach items=\u0026quot;${ProjectPhaseConfigVo.projectPhaseConfigList}\u0026quot; var=\u0026quot;ProjectPhaseConfig\u0026quot; varStatus=\u0026quot;StatusConfig\u0026quot;\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;c:choose\u0026gt;\r\u0026lt;c:when test=\u0026quot;${ StatusConfig.first \u0026amp;\u0026amp; StatusPhaseConfigVo.first}\u0026quot;\u0026gt;\r\u0026lt;td rowspan=\u0026quot;${fn:length(ProjectWorkStageConfigVo.projectPhaseConfigVoList) * fn:length(ProjectPhaseConfigVo.projectPhaseConfigList)}\u0026quot;\u0026gt;\r${ProjectWorkStageConfigVo.workStageName}\r\u0026lt;/td\u0026gt;\r\u0026lt;/c:when\u0026gt;\r\u0026lt;/c:choose\u0026gt;\r\u0026lt;c:choose\u0026gt;\r\u0026lt;c:when test=\u0026quot;${ StatusConfig.first}\u0026quot;\u0026gt;\r\u0026lt;td rowspan=\u0026quot;${fn:length(ProjectPhaseConfigVo.projectPhaseConfigList)}\u0026quot;\u0026gt;\r${ProjectPhaseConfigVo.projectPhaseName}\r\u0026lt;/td\u0026gt;\r\u0026lt;/c:when\u0026gt;\r\u0026lt;/c:choose\u0026gt;\r\u0026lt;td \u0026gt;${ProjectPhaseConfig.parName} \u0026lt;/td\u0026gt;\r\u0026lt;td \u0026gt;${ProjectPhaseConfig.sorting} \u0026lt;/td\u0026gt;\r\u0026lt;td \u0026gt;${ProjectPhaseConfig.parValues} \u0026lt;/td\u0026gt;\r\u0026lt;td \u0026gt;${ProjectPhaseConfig.remark} \u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;\r\u0026lt;button type=\u0026quot;button\u0026quot; onclick=\u0026quot;editProjectPhaseConfig('${ProjectPhaseConfig.id}');\u0026quot;\rstyle=\u0026quot;margin-left: 5px;\u0026quot;\rclass=\u0026quot;btn btn-primary btn-xs tooltips\u0026quot;\rdata-placement=\u0026quot;bottom\u0026quot; data-original-title=\u0026quot;编辑\u0026quot;\u0026gt;\r\u0026lt;i class=\u0026quot;fa fa-pen\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;\r\u0026lt;/button\u0026gt;\r\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/c:forEach\u0026gt;\r\u0026lt;/c:forEach\u0026gt;\r\u0026lt;/c:forEach\u0026gt;\r\u0026lt;/tbody\u0026gt;\r\u0026lt;/table\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/form\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r"}),a.add({id:112,href:'/life/docs/python/base/set/',title:"python set",section:"python 基础学习",content:"集合（Set）\r#\r\r 集合是无序和无索引的集合。在 Python 中，集合用花括号编写\n  无法通过引用索引来访问 set 中的项目，因为 set 是无序的，项目没有索引\n  集合一旦创建，无法更改项目，但是可以添加新项目\n import random import time import datetime set1 = {random.random() * 100, time.time_ns(), datetime.datetime.year, datetime.datetime.month, datetime.datetime.day} print(f\u0026#34;set1:{set1}\u0026#34;) for x in set1: print(x) # print(set1[0]) # del set1[0] 添加 / 添加多个\r#\r\r 集合不能空 否则add会出问题的\n import datetime import random nowDate = datetime.datetime.now() set2 = {nowDate.year, nowDate.month, nowDate.day} print(set2) set2.add(\u0026#34;kk\u0026#34;) print(set2) set3 = {random.random() * 100, \u0026#34;vvv\u0026#34;} set2.update(set3) print(set2) pop-随机删除\r#\r\r 随机删除一个元素，并且返回删除的结果。pop不能指定参数，也就是不能指定想要删除的元素\n import datetime import random nowDate = datetime.datetime.now() setX = {\u0026#34;0\u0026#34;} # 集合不能空 否则add会出问题的 setX.add(\u0026#34;hh\u0026#34;) setX.add(random.random()) setX.add(random.randrange(int(random.random() * 100), int(random.random() * 100)+100)) setX.add(random.randrange(int(random.random() * 99), int(random.random() * 100)+100)) setX.add(random.randrange(int(random.random() * 98), int(random.random() * 100)+100)) setX.add(random.randrange(int(random.random() * 97), int(random.random() * 100)+100)) setX.add(random.randrange(int(random.random() * 96), int(random.random() * 100)+100)) setX.add(random.randrange(int(random.random() * 95), int(random.random() * 100)+100)) print(setX) print(setX.pop()) print(setX) remove-指定删除\r#\r\r 删除的元素必须在集合中。如果不存在，则会报错\n import datetime import random setX = {\u0026#34;0\u0026#34;,\u0026#34;a\u0026#34;} for xx in range(1, 300, 5): setX.add(random.randrange(int(random.random() * xx), int(random.random() * xx+100)+100)) setX.add(\u0026#34;v\u0026#34;) print(setX) setX.remove(\u0026#34;v\u0026#34;) print(setX) discard-指定删除\r#\r\r 指定删除某个元素，如果元素不存在，也不会报错\n set1 = {\u0026#39;c\u0026#39;, \u0026#39;html\u0026#39;, \u0026#39;java\u0026#39;, \u0026#39;javascript\u0026#39;, \u0026#39;python\u0026#39;} print(set1) set1.discard(\u0026#34;1\u0026#34;) print(set1) clear-清空集合\r#\r\rset1 = {\u0026#39;c\u0026#39;, \u0026#39;html\u0026#39;, \u0026#39;java\u0026#39;, \u0026#39;javascript\u0026#39;, \u0026#39;python\u0026#39;} print(set1) set1.discard(\u0026#34;1\u0026#34;) print(set1) set1.clear() print(set1) in-元素判断\r#\r\rset2 = {1,2,3} print(f\u0026#34; in的用法:{1 in set2}\u0026#34;) union-并集\r#\r\rset1 = {2,3,4} set2 = {4,5,6} set3 = set1.union(set2) print(set3) difference-差集、补集\r#\r\rset1 = {1,2,3} set2 = {2,3} set3 = set1.difference(set2) print(f\u0026#34;set1: {set1}\u0026#34;) print(f\u0026#34;set2: {set2}\u0026#34;) print(f\u0026#34;set3: {set3}\u0026#34;) intersection-交集\r#\r\rset1 = {1,2,3} set2 = {1,2} set3 = set1.intersection(set2) print(f\u0026#34;set3: {set3}\u0026#34;) 参考\n"}),a.add({id:113,href:'/life/docs/python/base/module/',title:"python 模块介绍",section:"python 基础学习",content:"模块介绍\r#\r\rtime模块\r#\r\rdatetime模块\r#\r\rrandom 模块\r#\r\ros 模块\r#\r\rsys 模块\r#\r\rjson 和 pickle 模块\r#\r\rhashlib和hmac 模块\r#\r\rlogging 模块\r#\r\rnumpy 模块\r#\r\rpandas 模块\r#\r\rmatplotlib 模块\r#\r\rre 模块\r#\r\rtyping 模块\r#\r\rcollections 模块\r#\r\rpathlib 模块\r#\r\rpathlib 是 Python 内置库，Python 文档给它的定义是 Object-oriented filesystem paths（面向对象的文件系统路径）。pathlib 提供表示文件系统路径的类，其语义适用于不同的操作系统。路径类在纯路径之间划分，纯路径提供纯粹的计算操作而没有 I / O，以及具体路径，它继承纯路径但也提供 I / O 操作。\n对于这繁琐而又冗余的话，听起来一定让人不习惯。那就对了，因为这是使用谷歌翻译直译过来的，说到这我怎么感觉我要回去偷偷补个英语，但是注意了，接下来大白话的语述并不影响你去了解并使用他。\nos 和 pathlib.Path 的区别\n相对于 os 模块的 path 方法，Python3 标准库 pathlib 模块的 Path 对路径的操作会更简单。\n 获取当前文件路径  # python语言实现 # /Users/mac/test.py import os print(os.getcwd()) # \u0026#39;/Users/mac\u0026#39; # 在 pathlib 模块中，通过 Path.cwd() 方法可以直接获取当前文件路径 # python语言实现 # /Users/mac/test.py import pathlib print(pathlib.Path.cwd()) # PosixPath(\u0026#39;/Users/mac\u0026#39;)  获取上层/上层目录  # python语言实现 # /Users/mac/test.py import os print(os.path.dirname(os.getcwd()))  路径拼接 如果你要在他父目录中拼接路径，通过 os 模块你可能需要写这么一长串代码  print(os.path.join(os.path.dirname(os.getcwd()), \u0026#39;路径拼接\u0026#39;, \u0026#39;真麻烦\u0026#39;)) # D:\\pythonProjects\\t2\\路径拼接\\真麻烦 当你使用 pathlib 的时候，我们一起来感受他的便捷之处吧！\n# python语言实现 # /Users/mac/test.py import os import pathlib paths = (\u0026#39;路径拼接\u0026#39;, \u0026#39;真麻烦\u0026#39;) print(pathlib.Path.cwd().parent.joinpath(*paths)) # /Users/路径拼接/真麻烦 shutil 模块\r#\r\rxml 模块\r#\r\rsubprocess 模块\r#\r\rconfigparser模块\r#\r\rPython 常用模块小结\r#\r\r参考1\n参考2\npython常用第三方库、框架、工具 \n"}),a.add({id:114,href:'/life/docs/javadir/thread/tool/',title:"并发工具 ",section:"多线程与并发 ",content:"目录\r#\r\r  ThreadLocal\n  Semaphore和Exchanger\n  CountDownLatch和CyclicBarrier\n  Phaser\n  Executor\n  Future和Callable\n  CompletionService\n  ExecutorService\n  Fork_Join\n  并发集合框架\n  "}),a.add({id:115,href:'/life/docs/operating_system/three_chapter/',title:"第三章 内存管理 ",section:"计算机操作系统",content:"内存管理\r#\r\r"}),a.add({id:116,href:'/life/docs/databases/oracle/',title:"oracle",section:" 数据库",content:"oracle 学习笔记\r#\r\r 检查oracle 密码过期策略  SELECT * FROM dba_profiles WHERE profile=\u0026#39;DEFAULT\u0026#39; AND resource_name=\u0026#39;PASSWORD_LIFE_TIME\u0026#39;;  将密码有效期由默许的180天修改成“无穷制”，修改以后不需要重启动数据库，会立即生效  ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;  下面看下解决Oracle11g密码180天过期，账号锁住的问题\n  1、查看用户的proifle是哪一个，通常为default：  SELECT username,PROFILE FROM dba_users;  2、查看指定概要文件（如default）的密码有效期设置：  SELECT * FROM dba_profiles s WHERE s.profile=\u0026#39;DEFAULT\u0026#39; AND resource_name=\u0026#39;PASSWORD_LIFE_TIME\u0026#39;;  3、将密码有效期由默许的180天修改成“无穷制”：  ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;  4、消除账号锁定  alter user sys account unlock; "}),a.add({id:117,href:'/life/docs/codereview/design_pattern/factory_method/',title:"创建型 - 工厂方法(Factory Method)",section:"设计模式",content:"工厂方法\r#\r\r"}),a.add({id:118,href:'/life/docs/math/',title:"数学",section:"Docs",content:"MarkDown数学公式\r#\r\r 数学是所有自然科学的灵魂\n 一、常用符号\r#\r\r 内联公式  在MarkDown语法中可以书写数学公式，书写数学公式必须要有一个入口——内联公式。\n{{\u0026lt; katex display \u0026gt;}} 数学公式 {{\u0026lt; /katex \u0026gt;}} 常用符号\r#\r\r   名称 实例 预览 注释     上下标 a^n_m  上标^用于指数，下标用于角标   正负号（±） a \\pm b a±b    乘 \\times ×    除 \\dlv ÷    根号 \\sqrt  根号下(a-b)   大于 \\gt ＞    小于 \\lt ＜    大于等于 \\ge ≥    小于等于 \\le ≤    正无穷 \\infty ∞    负无穷 -\\infty -∞    分数 \\dfrac{a}  a分之b   省略号 \\cdots \u0026hellip;     三角函数\r#\r\r   数学表达式 代码     sinθ \\sin   cosθ \\cos   tanθ \\tan   cotθ \\cot    矢量、累加累乘、极限\r#\r\r   数学表达式 代码     矢量 \\vec{}   累加（求和∑） \\sum_{}^{}   累乘（求积∏） \\prod_{}^{}   极限 \\lim_{}    希腊字母表\r#\r\r   代码 预览 代码 预览     \\alpha α \\pi π   \\beta β \\rho ρ   \\gamma γ \\xi ξ   \\delta δ \\nu ν   \\epsilon  \\upsilon υ   \\varepsilon ε \\varphi φ   \\eta η \\chi χ   \\theta θ \\psi ψ   \\kappa κ \\omega ω   \\iota ι \\Omega Ω   \\zeta  \\Gamma Γ   \\lambda λ \\Delta Δ   \\mu μ     \\phi φ \\Phi Φ    方程组、表达条件式\r#\r\r方程组\r#\r\r\r\r\\[\r\\begin{cases}\r3x \u0026#43; 5y \u0026#43; z \\\\\r7x - 2y \u0026#43; 4z \\\\\r-6x \u0026#43; 3y \u0026#43; 2z\r\\end{cases}\r\\]\r\r表达条件式\r#\r\r\r\\[\rf(n) =\r\\begin{cases} n/2, \u0026amp; \\text{if }n\\text{ is even} \\\\\r3n\u0026#43;1, \u0026amp; \\text{if }n\\text{ is odd}\r\\end{cases}\r\\]\r\r   property description     border-bottom-right-radius Defines the shape of the bottom-right    格式\r#\r\r代码块内多行代码对齐\r#\r\r\r\\[\r\\begin{aligned}\ra \u0026amp;= b \u0026#43; c \\\\\r\u0026amp;= d \u0026#43; e \u0026#43; f\r\\end{aligned}\r\\]\r\r间隔（空格、跟随）\r#\r\r跟随 \\!\n无空格 小空格\\, 中空格\\; 大空格\\\n真空格\\quad 双真空格 \\qquad\n\r\\[\ra\\!b \u0026#43; ab \u0026#43; a\\,b \u0026#43; a\\;b \u0026#43; a\\ b \u0026#43; a\\quad b \u0026#43; a\\qquad b\r\\]\r\r矩阵\r#\r\r简单矩阵\r#\r\r 简单矩阵事例1  使用 \\begin{matrix} ... \\end{matrix} 生成，每一行以 \\\\ 结尾表示换行，各元素间以 \u0026amp; 隔开，右边的数学公式代码块序号用 \\tag{n} 表示。\n\r\\[\r\\begin{matrix}\r1 \u0026amp; 2 \u0026amp; 3\\\\\r4 \u0026amp; 5 \u0026amp; 6\\\\\r7 \u0026amp; 8 \u0026amp; 9\\\\\r\\end{matrix}\r\\tag{简单矩阵 - 事例1}\r\\]\r\r 简单矩阵事例二（带括号）  \r\\[\r\\left\\{\r\\begin{matrix}\r1 \u0026amp; 2 \u0026amp; 3\\\\\r4 \u0026amp; 5 \u0026amp; 6\\\\\r7 \u0026amp; 8 \u0026amp; 9\\\\\r\\end{matrix}\r\\right\\}\r\\tag{带有大括号的矩阵}\r\\]\r\ror\n\r\\[\r\\begin{Bmatrix}\r1 \u0026amp; 2 \u0026amp; 3 \\\\\r4 \u0026amp; 5 \u0026amp; 6 \\\\\r7 \u0026amp; 8 \u0026amp; 9\r\\end{Bmatrix} \\tag{6}\r\\]\r\r中括号\n\r\\[\r\\left[\r\\begin{matrix}\r1 \u0026amp; 2 \u0026amp; 3 \\\\\r4 \u0026amp; 5 \u0026amp; 6 \\\\\r7 \u0026amp; 8 \u0026amp; 9\r\\end{matrix}\r\\right]\r\\tag{中括号}\r\\]\r\r或\n\r\\[\r\\begin{bmatrix}\r1 \u0026amp; 2 \u0026amp; 3 \\\\\r4 \u0026amp; 5 \u0026amp; 6 \\\\\r7 \u0026amp; 8 \u0026amp; 9\r\\end{bmatrix} \\tag{6}\r\\]\r\r小括号\n\r\\[\r\\left(\r\\begin{matrix}\r1 \u0026amp; 2 \u0026amp; 3 \\\\\r4 \u0026amp; 5 \u0026amp; 6 \\\\\r7 \u0026amp; 8 \u0026amp; 9\r\\end{matrix}\r\\right)\r\\tag{小括号}\r\\]\r\r包含省略号和希腊字母\n行省略号 \\cdots，列省略号\\vdots，斜向省略号（左上至右下）\\ddots\n\r\\(\r\\left\\{\r\\begin{matrix}\r1 \u0026amp; 2 \u0026amp; \\cdots \u0026amp; 5 \\\\\r6 \u0026amp; 7 \u0026amp; \\cdots \u0026amp; 10 \\\\\r\\vdots \u0026amp; \\vdots \u0026amp; \\ddots \u0026amp; \\vdots \\\\\r\\alpha \u0026amp; \\alpha\u0026#43;1 \u0026amp; \\cdots \u0026amp; \\alpha\u0026#43;4 \\end{matrix}\r\\right\\}\r\\)\r\r表格\r#\r\r\r\\(\r\\begin{array}{|c|c|c|}\r\\hline 2\u0026amp;9\u0026amp;4\\\\\r\\hline 7\u0026amp;5\u0026amp;3\\\\\r\\hline 6\u0026amp;1\u0026amp;8\\\\\r\\hline\r\\end{array}\r\\)\r\r\r\\(\r\\begin{array}{cc|c}\rA\u0026amp;B\u0026amp;F\\\\\r\\hline 0\u0026amp;0\u0026amp;0\\\\\r0\u0026amp;1\u0026amp;1\\\\\r1\u0026amp;0\u0026amp;1\\\\\r1\u0026amp;1\u0026amp;1\\\\\r\\end{array}\r\\)\r\r参考\n"}),a.add({id:119,href:'/life/docs/algorithm/',title:"数据结构与算法",section:"Docs",content:" 算法相当于 计算机应用技术的灵魂\n 95%的算法\r#\r\r1 递归算法\r#\r\r2 分冶算法\r#\r\r3 贪心算法\r#\r\r4 回溯算法\r#\r\r5 枚举算法\r#\r\r6 动态规划\r#\r\r  参考0\n  参考1\n  参考2\n  参考3\n  参考4\n  其它参考\r#\r\r 参考4  "}),a.add({id:120,href:'/life/docs/car_study/three/',title:"科目三",section:"汽车教学",content:""}),a.add({id:121,href:'/life/docs/codereview/specification3/',title:"编码规范3",section:"编码",content:"编码规范3\r#\r\r1.把事情想明白，说清楚，跟别人商量好\n2.写代码，注意边界条件和编码规范，写单测，基本做到无bug提测\n3.工作中做好计划和进度跟踪，沟通和汇报，不把问题遗留到变成事故\n4.思考和分析，如何优化目前的工作流程，引入工具和方法，提升生产效率\n5.把自己工作中用到的技术用熟，搞清楚原理，优点短处，适用场景\n6.不断接触新技术思想和工具，完善自身知识体系结构\n7.深入学习至少一个常用开源项目，源码层面系统掌握这项技术\n8.持续坚持学习和技术内容输出，每个星期产出2篇原创技术文章\n"}),a.add({id:122,href:'/life/docs/javadir/tooldoc/commons_io/',title:"apache FilenameUtils 文件名称操作",section:"Java公共库文档总结 ",content:"org.apache.commons.io.FilenameUtils 文件名称操作\r#\r\r  FilenameUtils.getExtension(fileName) 获取文件后缀 //text\n  FilenameUtils.getName(fileName) 获取文件完整名称 //c.text\n  FilenameUtils.getBaseName(fileName) 获取文件名称 //c\n  FilenameUtils.getFullPath(fileName) 获取文件的完整路径 //D:\\data\\\n  String path = \u0026quot;D:\\\\data\\\\假设开发法土地模板.docx\u0026quot; ;\rString fullPath = FilenameUtils.getFullPath(path);\rSystem.out.println(\u0026quot;fullPath:\u0026quot;+fullPath);//D:\\data\\\rString name = FilenameUtils.getName(path);\rSystem.out.println(\u0026quot;name:\u0026quot;+name); //假设开发法土地模板.docx\rString prefix = FilenameUtils.getPrefix(path);\rSystem.out.println(\u0026quot;prefix:\u0026quot;+prefix); //D:\\\rint prefixLength = FilenameUtils.getPrefixLength(path);\rSystem.out.println(\u0026quot;prefixLength:\u0026quot;+prefixLength); //3\rString path1 = FilenameUtils.getPath(path);\rSystem.out.println(\u0026quot;path:\u0026quot;+path1); //data\\\rString baseName = FilenameUtils.getBaseName(path);\rSystem.out.println(\u0026quot;baseName:\u0026quot;+baseName); //假设开发法土地模板\rString extension = FilenameUtils.getExtension(path);\rSystem.out.println(\u0026quot;extension:\u0026quot;+extension); //docx\rFileUtils：提供文件操作（移动文件，读取文件，检查文件是否存在等等）\r#\r\rString path = \u0026quot;D:\\\\data\\\\test\u0026quot;;\rString fileSize = FileUtils.byteCountToDisplaySize(1024 * 1024);\r// 转换文件长度单位\rAssert.assertEquals(\u0026quot;1 MB\u0026quot;, fileSize);\r// 清空某目录下的所有目录,含文件夹和文件,注意是目录下,不包含父目录\rFileUtils.cleanDirectory(new File(path));\r// copy URL中文件到參數2\rFileUtils.copyURLToFile(new URL(\u0026quot;https://v3.bootcss.com/\u0026quot;), new File(\u0026quot;D:\\\\data\\\\test1\\\\a1.txt\u0026quot;));//a1.txt 里面拷贝下来是一个网页\r// 强制删除文件\rFileUtils.forceDelete(new File(\u0026quot;D:\\\\data\\\\test1\\\\a1.txt\u0026quot;));\r// 将文件转为 InputStream\rFileUtils.openInputStream(new File(\u0026quot;D:\\\\data\\\\aac.pptx\u0026quot;));\r//openOutStream\rFileUtils.openOutputStream(new File(\u0026quot;D:\\\\data\\\\aac.pptx\u0026quot;));\r// 读取文件转为字节数组\rbyte[] bytes = FileUtils.readFileToByteArray(new File(\u0026quot;D:\\\\data\\\\aab.pptx\u0026quot;));\r// 读取文件转换为String类型,方便文本读取\rFileUtils.readFileToString(new File(\u0026quot;D:\\\\data\\\\aab.pptx\u0026quot;),\u0026quot;UTF-8\u0026quot;);\r// 返回目录的大小\rlong size = FileUtils.sizeOfDirectory(new File(\u0026quot;D:\\\\data\\\\\u0026quot;));\r// 写字符串到参数1文件中\rFileUtils.writeStringToFile(new File(\u0026quot;D:\\\\data\\\\test1\\\\b2.txt\u0026quot;), \u0026quot;test\u0026quot;, \u0026quot;UTF-8\u0026quot;);\r// 将参数1目录下的全部内容复制到参数2目录\rFileUtils.copyDirectory(new File(\u0026quot;D:\\\\data\\\\test1\u0026quot;), new File(\u0026quot;D:\\\\data\\\\test2\u0026quot;));\r// 将参数1目录整个复制到参数2目录下\rFileUtils.copyDirectoryToDirectory(new File(\u0026quot;D:\\\\data\u0026quot;) , new File(\u0026quot;D:\\\\data\\\\test1\u0026quot;));\r// copy参数1文件到参数2\rFileUtils.copyFile(new File(\u0026quot;D:\\\\data\\\\test1\\\\b2.txt\u0026quot;), new File(\u0026quot;D:\\\\data\\\\b1.txt\u0026quot;));\r// copy参数1文件到参数2目录下\rFileUtils.copyFileToDirectory(new File(\u0026quot;D:\\\\data\\\\b1.txt\u0026quot;) , new File(\u0026quot;D:\\\\data\\\\test2\u0026quot;)) ;\r//读取文件的每一行\rList\u0026lt;String\u0026gt; stringList = FileUtils.readLines(new File(\u0026quot;D:\\\\data\\\\b1.txt\u0026quot;));\rIOCase：提供字符串操作以及比较的方法\r#\r\rFileSystemUtils：提供查看指定目录剩余空间的方法\r#\r\r long spaceKb = FileSystemUtils.freeSpaceKb(\u0026quot;D:\\\\data\\\\\u0026quot;);//247018912 kb\rSystem.out.println(spaceKb);\rIOUtils\r#\r\r Reader reader = new InputStreamReader(new FileInputStream(new File(\u0026quot;D:\\\\data\\\\b1.txt\u0026quot;))) ;\rIOUtils.copy(reader,new FileOutputStream(\u0026quot;D:\\\\data\\\\b3.txt\u0026quot;)) ;\rbyte[] toByteArray = IOUtils.toByteArray(new URL(\u0026quot;https://www.bootcss.com/\u0026quot;));\r"}),a.add({id:123,href:'/life/docs/javadir/middleware/elasticsearch/elasticsearch_principle/',title:"elasticsearch 原理",section:"Elasticsearch",content:"elasticsearch 原理\r#\r\r集群\r#\r\r 一个ES集群可以有多个节点构成，一个节点就是一个ES服务实例，通过配置集群名称cluster.name加入集群。\n ES中节点有角色的区分的，通过配置文件conf/elasticsearch.yml中配置以下配置进行角色的设定。\nnode.master: true/false node.data: true/false 集群中单个节点既可以是候选主节点也可以是数据节点，通过上面的配置可以进行两两组合形成四大分类：\n （1）仅为候选主节点 （2）既是候选主节点也是数据节点 （3）仅为数据节点 （4）既不是候选主节点也不是数据节点    集群 有多个node节点(master node,data node,replica node) 主节点和副节点 每个节点可能存储数据也可能只是作为我单独的Lucene 索引实例\n  主节点\n  主节点只有一个(es集群中只使用一个masterNode) 主节点可以提前确定某一个节点为主节点,后面版本是配置候选主节点 然后用一套算法推举出主节点 一个节点宕机以后 后面的候选节点从算法中重新产生一个\n 当一个节点被选举成为 主 节点时， 它将负责管理集群范围内的所有变更，例如增加、删除索引，或者增加、删除节点等。 而主节点并不需要涉及到文档级别的变更和搜索等操作，所以当集群只拥有一个主节点的情况下，即使流量的增加它也不会成为瓶颈。 任何节点都可以成为主节点。我们的示例集群就只有一个节点，所以它同时也成为了主节点\n  协调节点  用户的请求可以随机发往任何一个节点，并由该节点负责分发请求、收集结果等操作，而不需要主节点转发。这种节点可称之为协调节点，集群中的任何节点都可以充当协调节点的角色。每个节点之间都会保持联系\n 例子1  #集群名称，三台集群，要配置相同的集群名称！！！ #cluster.name: my-application cluster.name: my-bootstrap # ------------------------------------ Node ------------------------------------ #node.name: node-1 #节点名称 node.name: node-3 #是不是有资格主节点 node.master: true #是否存储数据 node.data: true #最⼤集群节点数 node.max_local_storage_nodes: 3 #网关地址 network.host: localhost #http.port: 9200 # http端口 (对外端口) http.port: 9202 #内部节点之间沟通端⼝ transport.tcp.port: 9302 #discovery.seed_hosts: [\u0026#34;host1\u0026#34;, \u0026#34;host2\u0026#34;] # es7.x之后新增的配置，写入候选主节点的设备地址，在开启服务后可以被选为主节点 discovery.seed_hosts: [\u0026#34;127.0.0.1:9300\u0026#34;, \u0026#34;127.0.0.1:9301\u0026#34;, \u0026#34;127.0.0.1:9302\u0026#34;] # Bootstrap the cluster using an initial set of master-eligible nodes: #cluster.initial_master_nodes: [\u0026#34;node-1\u0026#34;, \u0026#34;node-2\u0026#34;] # es7.x之后新增的配置，初始化一个新的集群时需要此配置来选举master cluster.initial_master_nodes: [\u0026#34;node-1\u0026#34;, \u0026#34;node-2\u0026#34;, \u0026#34;node-3\u0026#34;] bootstrap.system_call_filter: false http.cors.allow-origin: \u0026#34;*\u0026#34; http.cors.enabled: true http.cors.allow-headers : X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization http.cors.allow-credentials: true master node [\u0026ldquo;node-1\u0026rdquo;, \u0026ldquo;node-2\u0026rdquo;, \u0026ldquo;node-3\u0026rdquo;]\n假如刚好算法推举出node-1 那么此时此刻node-1就是主节点\n客户端请求任一个node 那么该node就是协调节点 比如正好是node-2 那么node-2就是协调节点\n候选主节点主节点有1和2 从initial_master_nodes中推举出来主节点 主节点：负责索引的添加、删除，跟踪哪些节点是群集的一部分，对分片进行分配、收集集群中各节点的状态等，稳定的主节点对集群的健康是非常重要。 进来后由负载均衡判断 假如主节点请求1节点处理 那么1节点就作为了协调节点,然后1节点将请求发给各个分节点; 分节点再向各个分片发送检索请求; 分片检索结果在节点合并; 各个节点结果在协调节点合并; 协调节点合并并且后续操作完成以后才把结果响应给客服端。\n倒排索引\r#\r\r要讲明白什么是倒排索引，首先我们先梳理下什么索引，比如一本书，书的目录页，有章节，章节名称，我们想看哪个章节，我们通过目录页，查到对应章节和页码，就能定位到具体的章节内容，通过目录页的章节名称查到章节的页码，进而看到章节内容，这个过程就是一个索引的过程，那么什么是倒排索引呢？\n比如查询《java编程思想》这本书的文章，翻开书本可以看到目录页，记录这个章节名字和章节地址页码，通过查询章节名字“继承”可以定位到“继承”这篇章节的具体地址，查看到文章的内容，我们可以看到文章内容中包含很多“对象”这个词。\n那么如果我们要在这本书中查询所有包含有“对象”这个词的文章，那该怎么办呢？\n按照现在的索引方式无疑大海捞针，假设我们有一个“对象”\u0026ndash;→文章的映射关系，不就可以了吗？类似这样的反向建立映射关系的就叫倒排索引。\n如图所示，将文章进行分词后得到关键词，在根据关键词建立倒排索引，关键词构建成一个词典，词典中存放着一个个词条（关键词），每个关键词都有一个列表与其对应，这个列表就是倒排表，存放的是章节文档编号和词频等信息，倒排列表中的每个元素就是一个倒排项，最后可以看到，整个倒排索引就像一本新华字典，所有单词的倒排列表往往顺序地存储在磁盘的某个文件里，这个文件被称之为倒排文件。\n索引\r#\r\r  ES将数据存储于一个或多个索引中，索引是具有类似特性的文档的集合\n  primary shard(主分片) 每个主分片都有一个复制分片 因此一个主分片的副分片是大于等于1\n  一个分片(shard)是一个最小级别“工作单元(worker unit)”，它只是保存了索引中所有数据的一部分。\n  索引中的每个文档属于一个单独的主分片，所以主分片的数量决定了索引最多能存储多少数据\n  索引 [ {id:\u0026ldquo;1\u0026rdquo;,name:\u0026ldquo;张三\u0026rdquo;} , {id:\u0026ldquo;2\u0026rdquo;,name:\u0026ldquo;李四\u0026rdquo;} ,{id:\u0026ldquo;3\u0026rdquo;,name:\u0026ldquo;王麻子\u0026rdquo;} ]\n  分片1 [{id:\u0026ldquo;1\u0026rdquo;,name:\u0026ldquo;张三\u0026rdquo;} , {id:\u0026ldquo;2\u0026rdquo;,name:\u0026ldquo;李四\u0026rdquo;}]\n  分片2 [{id:\u0026ldquo;3\u0026rdquo;,name:\u0026ldquo;王麻子\u0026rdquo;} ]\n  分段\r#\r\r实际上分段也是一个索引 一个索引下面有很多分段 分段下包含了文档和文档索引等\n节点\r#\r\r分片和副本\r#\r\r 准备数据  http://127.0.0.1:9200/index_node1\r{\r\u0026quot;settings\u0026quot;: {\r\u0026quot;index\u0026quot;: {\r\u0026quot;number_of_shards\u0026quot;: 2,\r\u0026quot;number_of_replicas\u0026quot;: 1\r}\r},\r\u0026quot;mappings\u0026quot;: {\r\u0026quot;properties\u0026quot;: {\r\u0026quot;title\u0026quot;: {\r\u0026quot;type\u0026quot;: \u0026quot;text\u0026quot;\r}\r}\r}\r}\rhttp://127.0.0.1:9201/index_node2\r{\r\u0026quot;settings\u0026quot;: {\r\u0026quot;index\u0026quot;: {\r\u0026quot;number_of_shards\u0026quot;: 2,\r\u0026quot;number_of_replicas\u0026quot;: 1\r}\r},\r\u0026quot;mappings\u0026quot;: {\r\u0026quot;properties\u0026quot;: {\r\u0026quot;title\u0026quot;: {\r\u0026quot;type\u0026quot;: \u0026quot;text\u0026quot;\r}\r}\r}\r}\rhttp://127.0.0.1:9202/index_node3\r{\r\u0026quot;settings\u0026quot;: {\r\u0026quot;index\u0026quot;: {\r\u0026quot;number_of_shards\u0026quot;: 2,\r\u0026quot;number_of_replicas\u0026quot;: 1\r}\r},\r\u0026quot;mappings\u0026quot;: {\r\u0026quot;properties\u0026quot;: {\r\u0026quot;title\u0026quot;: {\r\u0026quot;type\u0026quot;: \u0026quot;text\u0026quot;\r}\r}\r}\r}\r  先看数据\n  elasticsearch-cluster\\elasticsearch-node-1\\data\\nodes\\0\\indices 索引\n  -6jNd3ADSB-h8ezjctJynw\r0eZnn7K1Q8aC9DMWAXQEoQ\r1n88hWQ6RIiBdkl4T_UkZQ\r8wWe-fscTLO9VYEi_fNm-Q\r9sIkQ5C6Sy2tchu9QoeZGg\rAAdjmcQ-S_Ca0DtAqwDbqg\rBpEJkkh2RCKpWKMfBgBaBw\rcWxPFZ81TqKJWTq_EdOsEA\rFcDp0ujtTU63x6u8YTuWTw\rIZVh3QEtTb-QDl5go8UP8g\rKEEQFdt3RxCDicSCl0eg0g\rKLV8BfnjR1awSNnTXiWrJg\rKRexSOorR1it17bSClzGSg\rLSO_rZUkTT-UODXoQo8Gxw\rpawJ4cqlRlqZd2xNWe4ppw\rRZA-jjbuTGKI9VPQD6nvHA\rwxKwqAHySzOXSPL3f-DHlA\ryjt6OOuES56ihJmrt0-EHA\r elasticsearch-cluster\\elasticsearch-node-2\\data\\nodes\\0\\indices 索引  -6jNd3ADSB-h8ezjctJynw\r0eZnn7K1Q8aC9DMWAXQEoQ\r9sIkQ5C6Sy2tchu9QoeZGg\rAAdjmcQ-S_Ca0DtAqwDbqg\rcWxPFZ81TqKJWTq_EdOsEA\rFcDp0ujtTU63x6u8YTuWTw\rHb1HIqQLSoOaj_Ke50JThQ\rIZVh3QEtTb-QDl5go8UP8g\rJz9F8MFNT7mT8s7tkbRqzg\rKLV8BfnjR1awSNnTXiWrJg\rKRexSOorR1it17bSClzGSg\rleckoQnzTWycaQi_rIvmoQ\rLSO_rZUkTT-UODXoQo8Gxw\rnBIHE-LcRtiF0VQ_8tpItg\rRmepfbFFStyOM4IwialfBw\rRVnE2XYeQhyYTO1qQq3SYw\rUgwFKXBLRKu2Tu_UJWfZow\rwNdmgVw2SIujPhZuKV3kGA\r elasticsearch-cluster\\elasticsearch-node-3\\data\\nodes\\0\\indices 索引  -6jNd3ADSB-h8ezjctJynw\r1n88hWQ6RIiBdkl4T_UkZQ\r8wWe-fscTLO9VYEi_fNm-Q\rAAdjmcQ-S_Ca0DtAqwDbqg\rBpEJkkh2RCKpWKMfBgBaBw\rcWxPFZ81TqKJWTq_EdOsEA\rFcDp0ujtTU63x6u8YTuWTw\rHb1HIqQLSoOaj_Ke50JThQ\rJz9F8MFNT7mT8s7tkbRqzg\rKEEQFdt3RxCDicSCl0eg0g\rleckoQnzTWycaQi_rIvmoQ\rnBIHE-LcRtiF0VQ_8tpItg\rpawJ4cqlRlqZd2xNWe4ppw\rRmepfbFFStyOM4IwialfBw\rRVnE2XYeQhyYTO1qQq3SYw\rRZA-jjbuTGKI9VPQD6nvHA\rUgwFKXBLRKu2Tu_UJWfZow\rwNdmgVw2SIujPhZuKV3kGA\rwxKwqAHySzOXSPL3f-DHlA\ryjt6OOuES56ihJmrt0-EHA\r http://localhost:9200/_cat/indices?v\u0026amp;pretty 查看集群所有索引  health status index uuid pri rep docs.count docs.deleted store.size pri.store.size\rgreen open .monitoring-es-7-2023.07.30 0eZnn7K1Q8aC9DMWAXQEoQ 1 1 4969 3378 6.6mb 3.2mb\rgreen open .triggered_watches RZA-jjbuTGKI9VPQD6nvHA 1 1 3 0 31.7kb 28.1kb\rgreen open movie RVnE2XYeQhyYTO1qQq3SYw 1 1 100 0 78.8kb 39.4kb\rgreen open .apm-agent-configuration Hb1HIqQLSoOaj_Ke50JThQ 1 1 0 0 416b 208b\rgreen open .monitoring-es-7-2023.08.05 UgwFKXBLRKu2Tu_UJWfZow 1 1 21760 10800 39.1mb 19.5mb\rgreen open index_node cWxPFZ81TqKJWTq_EdOsEA 2 1 1 0 7.3kb 3.6kb\rgreen open .monitoring-es-7-2023.08.04 9sIkQ5C6Sy2tchu9QoeZGg 1 1 35954 51828 41.8mb 20.9mb\rgreen open .kibana_1 BpEJkkh2RCKpWKMfBgBaBw 1 1 106 18 177.5kb 88.7kb\rgreen open .kibana-event-log-7.8.0-000001 leckoQnzTWycaQi_rIvmoQ 1 1 4 0 41.2kb 20.6kb\rgreen open book2 KRexSOorR1it17bSClzGSg 1 1 0 0 416b 208b\rgreen open cars 8wWe-fscTLO9VYEi_fNm-Q 1 1 8 0 10.4kb 5.2kb\rgreen open .monitoring-kibana-7-2023.08.05 yjt6OOuES56ihJmrt0-EHA 1 1 111 0 156.7kb 78.2kb\rgreen open .apm-custom-link IZVh3QEtTb-QDl5go8UP8g 1 1 0 0 416b 208b\rgreen open .kibana_task_manager_1 wxKwqAHySzOXSPL3f-DHlA 1 1 5 5 21.3kb 10.6kb\rgreen open .monitoring-kibana-7-2023.07.30 KEEQFdt3RxCDicSCl0eg0g 1 1 188 0 271.8kb 135.9kb\rgreen open .monitoring-alerts-7 wNdmgVw2SIujPhZuKV3kGA 1 1 6 0 74.5kb 37.2kb\rgreen open index_node1 -6jNd3ADSB-h8ezjctJynw 2 1 1 0 7.3kb 3.6kb\rgreen open index_node2 AAdjmcQ-S_Ca0DtAqwDbqg 2 1 1 0 15.9kb 7.9kb\rgreen open index_node3 FcDp0ujtTU63x6u8YTuWTw 2 1 0 0 832b 416b\rgreen open .watches Jz9F8MFNT7mT8s7tkbRqzg 1 1 6 183 769.1kb 487.1kb\rgreen open user pawJ4cqlRlqZd2xNWe4ppw 1 1 4 0 10.1kb 5kb\rgreen open shopping KLV8BfnjR1awSNnTXiWrJg 1 1 1 0 16.5kb 8.2kb\r 我们可以发现每个节点下面都有其它节点的索引 当不是本节点创建的索引 那么这个索引就是分片索引,并且 分片索引具体再哪些节点去创建也是es根据规则计算出来的\n http://127.0.0.1:9202/index_node3x post\r{\r\u0026quot;settings\u0026quot;: {\r\u0026quot;index\u0026quot;: {\r\u0026quot;number_of_shards\u0026quot;: 1,\r\u0026quot;number_of_replicas\u0026quot;: 1\r}\r},\r\u0026quot;mappings\u0026quot;: {\r\u0026quot;properties\u0026quot;: {\r\u0026quot;title\u0026quot;: {\r\u0026quot;type\u0026quot;: \u0026quot;text\u0026quot;\r}\r}\r}\r}\r创建完毕实际我们再node3和node2分别找到了index_node3x的索引 所以number_of_shards虽然设置了1 但实际还是分片=2\r分片\r#\r\rES支持PB级全文搜索，通常我们数据量很大的时候，查询性能都会越来越慢， 我们能想到的一个方式的将数据分散到不同的地方存储，ES也是如此， ES通过水平拆分的方式将一个索引上的数据拆分出来分配到不同的数据块上，拆分出来的数据库块称之为一个分片Shard，很像MySQL的分库分表。\n不同的主分片分布在不同的节点上，那么在多分片的索引中数据应该被写入哪里？ 肯定不能随机写，否则查询的时候就无法快速检索到对应的数据了， 这需要有一个路由策略来确定具体写入哪一个分片中，怎么路由我们下文会介绍。 在创建索引的时候需要指定分片的数量，并且分片的数量一旦确定就不能修改。\n副本\r#\r\r副本就是对分片的复制，每个主分片都有一个或多个副本分片，当主分片异常时，副本可以提供数据的查询等操作。主分片和对应的副本分片是不会在同一个节点上的，避免数据的丢失，当一个节点宕机的时候，还可以通过副本查询到数据，副本分片数的最大值是 N-1（其中 N 为节点数）。\n对doc的新建、索引和删除请求都是写操作，这些写操作是必须在主分片上完成，然后才能被复制到对应的副本上。ES为了提高写入的能力这个过程是并发写的，同时为了解决并发写的过程中数据冲突的问题，ES通过乐观锁的方式控制，每个文档都有一个 _version号，当文档被修改时版本号递增。\n一旦所有的副本分片都报告写成功才会向协调节点报告成功，协调节点向客户端报告成功。\nElasticsearch 的写索引流程\r#\r\r上面提到了写索引是只能写在主分片上，然后同步到副本分片，那么如上图所示，这里有四个主分片分别是S0、S1、S2、S3，一条数据是根据什么策略写到指定的分片上呢？这条索引数据为什么被写到S0上而不写到 S1 或 S2 上？这个过程是根据下面这个公式决定的。\nshard = hash(routing) % number_of_primary_shards\r以上公式的值是在0到number_of_primary_shards-1之间的余数，也就是数据文档所在分片的位置。routing通过Hash函数生成一个数字，然后这个数字再除以number_of_primary_shards（主分片的数量）后得到余数。routing是一个可变值，默认是文档的_id ，也可以设置成一个自定义的值。\n在一个写请求被发送到某个节点后，该节点按照前文所述，会充当协调节点，会根据路由公式计算出写哪个分片，当前节点有所有其他节点的分片信息，如果发现对应的分片是在其他节点上，再将请求转发到该分片的主分片节点上。\n在ES集群中每个节点都通过上面的公式知道数据的在集群中的存放位置，所以每个节点都有接收读写请求的能力。\n那么为什么在创建索引的时候就确定好主分片的数量，并且不可修改？因为如果数量变化了，那么所有之前路由计算的值都会无效，数据也就再也找不到了。\n如上图所示，当前一个数据通过路由计算公式得到的值是 shard=hash(routing)%4=0，则具体流程如下：\n （1）数据写请求发送到 node1 节点，通过路由计算得到值为1，那么对应的数据会应该在主分片S1上。 （2）node1节点将请求转发到 S1 主分片所在的节点node2，node2 接受请求并写入到磁盘。 （3）并发将数据复制到三个副本分片R1上，其中通过乐观并发控制数据的冲突。一旦所有的副本分片都报告成功，则节点 node2将向node1节点报告成功，然后node1节点向客户端报告成功。  这种模式下，只要有副本在，写入延时最小也是两次单分片的写入耗时总和，效率会较低，但是这样的好处也很明显，避免写入后单个机器硬件故障导致数据丢失，在数据完整性和性能方面，一般都是优先选择数据，除非一些允许丢数据的特殊场景。\n在ES里为了减少磁盘IO保证读写性能，一般是每隔一段时间（比如30分钟）才会把数据写入磁盘持久化，对于写入内存，但还未flush到磁盘的数据，如果发生机器宕机或者掉电，那么内存中的数据也会丢失，这时候如何保证？\n对于这种问题，ES借鉴数据库中的处理方式，增加CommitLog模块，在ES中叫transLog，在下面的ES存储原理中会介绍。\n存储原理\r#\r\r上面介绍了在ES内部的写索引处理流程，数据在写入到分片和副本上后，目前数据在内存中，要确保数据在断电后不丢失，还需要持久化到磁盘上。\n我们知道ES是基于Lucene实现的，内部是通过Lucene完成的索引的创建写入和搜索查询，Lucene 工作原理如下图所示，当新添加一片文档时，Lucene进行分词等预处理，然后将文档索引写入内存中，并将本次操作写入事务日志（transLog），transLog类似于mysql的binlog，用于宕机后内存数据的恢复，保存未持久化数据的操作日志。\n默认情况下，Lucene每隔1s(refresh_interval配置项)将内存中的数据刷新到文件系统缓存中，称为一个segment（段）。一旦刷入文件系统缓存，segment才可以被用于检索，在这之前是无法被检索的。\n因此refresh_interval决定了ES数据的实时性，因此说ES是一个准实时的系统。segment 在磁盘中是不可修改的，因此避免了磁盘的随机写，所有的随机写都在内存中进行。随着时间的推移，segment越来越多，默认情况下，Lucene每隔30min或segment 空间大于512M，将缓存中的segment持久化落盘，称为一个commit point，此时删掉对应的transLog。\n当我们在进行写操作的测试的时候，可以通过手动刷新来保障数据能够被及时检索到，但是不要在生产环境下每次索引一个文档都去手动刷新，刷新操作会有一定的性能开销。一般业务场景中并不都需要每秒刷新。\n可以通过在 Settings 中调大 refresh_interval = \u0026ldquo;30s\u0026rdquo; 的值，来降低每个索引的刷新频率，设值时需要注意后面带上时间单位，否则默认是毫秒。当 refresh_interval=-1 时表示关闭索引的自动刷新。\n索引文件分段存储并且不可修改，那么新增、更新和删除如何处理呢？\r#\r\r 新增，新增很好处理，由于数据是新的，所以只需要对当前文档新增一个段就可以了。 删除，由于不可修改，所以对于删除操作，不会把文档从旧的段中移除而是通过新增一个 .del 文件，文件中会列出这些被删除文档的段信息，这个被标记删除的文档仍然可以被查询匹配到， 但它会在最终结果被返回前从结果集中移除。 更新，不能修改旧的段来进行文档的更新，其实更新相当于是删除和新增这两个动作组成。会将旧的文档在 .del 文件中标记删除，然后文档的新版本中被索引到一个新的段。可能两个版本的文档都会被一个查询匹配到，但被删除的那个旧版本文档在结果集返回前就会被移除。  segment被设定为不可修改具有一定的优势也有一定的缺点。\n优点：\n 不需要锁。如果你从来不更新索引，你就不需要担心多进程同时修改数据的问题。 一旦索引被读入内核的文件系统缓存，便会留在哪里，由于其不变性。只要文件系统缓存中还有足够的空间，那么大部分读请求会直接请求内存，而不会命中磁盘。这提供了很大的性能提升. 其它缓存(像 Filter 缓存)，在索引的生命周期内始终有效。它们不需要在每次数据改变时被重建，因为数据不会变化。 写入单个大的倒排索引允许数据被压缩，减少磁盘 I/O 和需要被缓存到内存的索引的使用量。  缺点：\n 当对旧数据进行删除时，旧数据不会马上被删除，而是在 .del 文件中被标记为删除。而旧数据只能等到段更新时才能被移除，这样会造成大量的空间浪费。 若有一条数据频繁的更新，每次更新都是新增新的，标记旧的，则会有大量的空间浪费。 每次新增数据时都需要新增一个段来存储数据。当段的数量太多时，对服务器的资源例如文件句柄的消耗会非常大。 在查询的结果中包含所有的结果集，需要排除被标记删除的旧数据，这增加了查询的负担。  段合并\r#\r\r由于每当刷新一次就会新建一个segment（段），这样会导致短时间内的段数量暴增，而segment数目太多会带来较大的麻烦。大量的segment会影响数据的读性能。每一个segment都会消耗文件句柄、内存和CPU 运行周期。\n更重要的是，每个搜索请求都必须轮流检查每个segment然后合并查询结果，所以segment越多，搜索也就越慢。\n因此Lucene会按照一定的策略将segment合并，合并的时候会将那些旧的已删除文档从文件系统中清除。被删除的文档不会被拷贝到新的大segment中。\n合并的过程中不会中断索引和搜索，倒排索引的数据结构使得文件的合并是比较容易的。\n段合并在进行索引和搜索时会自动进行，合并进程选择一小部分大小相似的段，并且在后台将它们合并到更大的段中，这些段既可以是未提交的也可以是已提交的。\n合并结束后老的段会被删除，新的段被刷新到磁盘，同时写入一个包含新段且排除旧的和较小的段的新提交点，新的段被打开，可以用来搜索。段合并的计算量庞大，而且还要吃掉大量磁盘 I/O，并且段合并会拖累写入速率，如果任其发展会影响搜索性能。\nES在默认情况下会对合并流程进行资源限制，所以搜索性能可以得到保证。\n参考1 参考2\n"}),a.add({id:124,href:'/life/docs/javadir/middleware/testng/',title:"testng 学习与使用",section:"中间件 ",content:"TestNG介绍\r#\r\r TestNG是Java中的一个测试框架， 类似于JUnit 和NUnit, 功能都差不多， 只是功能更加强大，使用也更方便Java中已经有一个JUnit的测试框架了。 TestNG比JUnit功能强大的多。 测试人员一般用TestNG来写自动化测试。 开发人员一般用JUnit写单元测试。\n TestNG的基本注解\r#\r\r   说明 示 例     @BeforeSuite 在该套件的所有测试都运行在注释的方法之前，仅运行一次。   @AfterSuite 在该套件的所有测试都运行在注释方法之后，仅运行一次。   @BeforeClass 在调用当前类的第一个测试方法之前运行，注释方法仅运行一次。   @AfterClass 在调用当前类的第一个测试方法之后运行，注释方法仅运行一次   @BeforeTest 注释的方法将在属于标签内的类的所有测试方法运行之前运行。   @AfterTest 注释的方法将在属于标签内的类的所有测试方法运行之后运行。   @BeforeGroups 配置方法将在之前运行组列表。 此方法保证在调用属于这些组中的任何一个的第一个测试方法之前不久运行。   @AfterGroups 此配置方法将在之后运行组列表。该方法保证在调用属于任何这些组的最后一个测试方法之后不久运行。   @BeforeMethod 注释方法将在每个测试方法之前运行。   @AfterMethod 注释方法将在每个测试方法之后运行。   @DataProvider 标记一种方法来提供测试方法的数据。 注释方法必须返回一个Object [] []，其中每个Object []可以被分配给测试方法的参数列表。 要从该DataProvider接收数据的@Test方法需要使用与此注释名称相等的dataProvider名称。   @Factory 将一个方法标记为工厂，返回TestNG将被用作测试类的对象。 该方法必须返回Object []。   @Listeners 定义测试类上的侦听器。   @Parameters 描述如何将参数传递给@Test方法。   @Test 将类或方法标记为测试的一部分。    Testng翻译\r#\r\r org.testng.annotations.Test\n  /**\r* 此类/方法所属的组列表。\r*/\rpublic String[] groups() default {};\r/**\r* 是否启用此类/方法上的方法。\r*/\rpublic boolean enabled() default true;\r/**\r*用于填充此方法参数的变量列表。\r*这些变量必须在属性文件中定义。\r*\r* @deprecated Use @Parameters\r*/\r@Deprecated\rpublic String[] parameters() default {};\r/**\r* The list of groups this method depends on. Every method\r* member of one of these groups is guaranteed to have been\r* invoked before this method. Furthermore, if any of these\r* methods was not a SUCCESS, this test method will not be\r* run and will be flagged as a SKIP.\r*/\rpublic String[] dependsOnGroups() default {};\r/**\r* The list of methods this method depends on. There is no guarantee\r* on the order on which the methods depended upon will be run, but you\r* are guaranteed that all these methods will be run before the test method\r* that contains this annotation is run. Furthermore, if any of these\r* methods was not a SUCCESS, this test method will not be\r* run and will be flagged as a SKIP.\r*\r* If some of these methods have been overloaded, all the overloaded\r* versions will be run.\r*/\rpublic String[] dependsOnMethods() default {};\r/**\r此测试应花费的最大毫秒数。\r如果此时间后未返回，则将标记为失败。\r*/\rpublic long timeOut() default 0;\r/**\r本试验方法中的最大数毫秒引用总数应采用。如果该方法中没有具体说明引用的属性，则此注释将不清楚。如果这段时间后还没有回来，那将是一个失败。\r*/\rpublic long invocationTimeOut() default 0;\r/**\r* 应调用此方法的次数。\r*/\rpublic int invocationCount() default 1;\r/**\r* 此方法的线程池的大小。\r* 该方法将从invocationCount指定的多个线程中调用。\r* 注意: 如果未指定invocationCount，则忽略此属性。\r*/\rpublic int threadPoolSize() default 0;\r/**\r* 此方法预期的成功百分比。\r*/\rpublic int successPercentage() default 100;\r/**\r* 此测试方法的数据提供程序的名称。\r* @see org.testng.annotations.DataProvider\r*/\rpublic String dataProvider() default \u0026quot;\u0026quot;;\r/**\r* The class where to look for the data provider. If not\r* specified, the dataprovider will be looked on the class\r* of the current test method or one of its super classes.\r* If this attribute is specified, the data provider method\r* needs to be static on the specified class.\r*/\rpublic Class\u0026lt;?\u0026gt; dataProviderClass() default Object.class;\r/**\r如果设置为true，则即使此测试方法依赖于\r在失败的方法上。如果此测试\r不依赖任何方法或组。\r*/\rpublic boolean alwaysRun() default false;\r/**\r此方法的说明。使用的字符串将出现在\r如果verbose大于等于2，也可以在标准输出上显示HTML报告。\r*/\rpublic String description() default \u0026quot;\u0026quot;;\r/**\r* The list of exceptions that a test method is expected to throw. If no\r* exception or a different than one on this list is thrown, this test will be\r* marked a failure.\r*/\rpublic Class[] expectedExceptions() default {};\r/**\r如果指定了ExpectedExceptions，则其消息必须与此属性中指定的正则表达式匹配。\r*/\rpublic String expectedExceptionsMessageRegExp() default \u0026quot;.*\u0026quot;;\r/**\r此测试类应放入的套件的名称。这个\r如果@test不在类级别，则忽略属性。\r*/\rpublic String suiteName() default \u0026quot;\u0026quot;;\r/**\r应放置此测试类的测试的名称。这个\r如果@test不在类级别，则忽略属性。\r*/\rpublic String testName() default \u0026quot;\u0026quot;;\r/**\r* @不推荐使用单线程\r*/\rpublic boolean sequential() default false;\r/**\r*如果设置为true，则确保此测试类上的所有方法都运行\r*在同一线程中，即使测试当前正以parallel=“true”运行。\r*\r*此属性只能在类级别使用，将被忽略\r*如果在方法级别使用。\r*/\rpublic boolean singleThreaded() default false;\r/**\r* The name of the class that should be called to test if the test\r* should be retried.\r* @return String The name of the class that will test if a test method\r* should be retried.\r*/\rpublic Class retryAnalyzer() default Class.class;\r/**\r* If true and invocationCount is specified with a value \u0026gt; 1,\r* then all invocations after a failure will be marked as a SKIP\r* instead of a FAIL.\r*/\rpublic boolean skipFailedInvocations() default false;\r/**\r* If set to true, this test will run even if the methods\r* it depends on are missing or excluded.\r*/\rpublic boolean ignoreMissingDependencies() default false;\r/**\r* 调度优先级。优先安排较低的优先级。\r*/\rint priority() default 0;\r"}),a.add({id:125,href:'/life/docs/databases/mysql/mysql_basis/',title:"基本命令",section:"mysql学习笔记",content:"基础介绍\r#\r\r  停止命令：net stop mysql\n  启动命令：net start mysql\n  登陆 mysql -u 用户名 -p\n  查看数据库版本: mysql \u0026ndash;version：用于在未登录情况下，查看本机mysql版本,select version();：登录情况下，查看链接的库版本\n  显示所有数据库：show databases;\n  进入指定的库：use 库名;\n  显示当前库中所有的表：show tables;\n  查看其他库中所有的表：show tables from 库名;\n  查看表的创建语句：show create table 表名;\n  查看表结构：desc 表名;\n  SQL的语言分类\r#\r\rDQL（Data Query Language）：数据查询语言\rselect 相关语句\rDML（Data Manipulate Language）：数据操作语言\rinsert 、update、delete 语句\rDDL（Data Define Languge）：数据定义语言\rcreate、drop、alter 语句\rTCL（Transaction Control Language）：事务控制语言\rset autocommit=0、start transaction、savepoint、commit、rollback\rmysql语法规范\r#\r\r不区分大小写，但建议关键字大写，表名、列名小写\r每条命令最好用英文分号结尾\r每条命令根据需要，可以进行缩进或换行\r注释\r单行注释：#注释文字\r单行注释：-- 注释文字 ，注意， 这里需要加空格\r多行注释：/* 注释文字 */\rMySQL删除数据库中的所有表\r#\r\rSELECT CONCAT('drop table ',table_name,';') FROM information_schema.`TABLES` WHERE table_schema='数据库名';\r# 然后复制结果 然后重新执行\r"}),a.add({id:126,href:'/life/docs/hugo%E5%AD%A6%E4%B9%A0/',title:"hugo教程",section:"Docs",content:"hugo学习\n"}),a.add({id:127,href:'/life/docs/operating_system/one_chapter/1_3_/',title:" 操作系统的发展与分类 ",section:"第一章 操作系统概述 ",content:"一:知识总览\r#\r\r二:分类描述\r#\r\r 1:手工操作阶段   2:批处理阶段——单道批处理系统   引入脱机输入/输出技术（用外围机+磁带完成），并由监督程序负责控制作业的输入、输出\n  和上面不同的是不必等结果输出在执行而是计算机执行完毕马上将结果输入磁带中并在同事已经开始执行其它数据程序\n  3:批处理阶段——多道批处理系统   4:分时操作系统   5:实时操作系统   主要优点：能够优先响应一些紧急任务，某些紧急任务不需时间片排队。在实时操作系统的控制下，计算机系统接收到外部信号后及时进行处理，并且要在严格的时限内处理完事件。实时操作系统的主要特点是及时性和可靠性  三:其他几种操作系统\r#\r\r 网络操作系统：是伴随着计算机网络的发展而诞生的，能把网络中各个计算机有机地结合起来，实现数据传送等功能，实现网络中各种资源的共享（如文件共享）和各台计算机之间的通信。（如：Windows NT 就是一种典型的网络操作系统，网站服务器就可以使用） 分布式操作系统：主要特点是分布性和并行性。系统中的各台计算机地位相同，任何工作都可以分布在这些计算机上，由它们并行、协同完成这个任务。 个人计算机操作系统：如 Windows XP、MacOS，方便个人使用。  四:知识回顾与重要考点\r#\r\r"}),a.add({id:128,href:'/life/docs/operating_system/two_chapter/2_1_3/',title:"进程控制",section:"第二章 进程管理 ",content:""}),a.add({id:129,href:'/life/docs/computer_network/network_architecture/1.1.3%E9%80%9F%E7%8E%87%E7%9B%B8%E5%85%B3%E7%9A%84%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/',title:"速率",section:"网络体系结构",content:"速率\r#\r\r 速率即数据率或称数据传输率或比特率\n  速率即数据率或称数据传输率或比特率 比特 1/0 位 连接在计算机网络上的主机在数字信道上传输数据位数的速率 单位是b/s , kb/s,Gb/s,Gb/s ,Tb/s 发送端 ==\u0026gt; 接收端 速率是10b/s 0101010101  宽带\r#\r\r \u0026ldquo;带宽\u0026quot;原本指某个信号具有的频道宽度，即最高频率与最低频率之差，单位是赫兹(Hz) 计算机网络中，带宽用来表示网络的通信线路传送数据的能力，通常是指单位时间内从网络中的某一点到另一点所能通过的\u0026quot;最高数据率\u0026rdquo;。单位是\u0026quot;比特/秒\u0026quot;  吞吐量\r#\r\r 表示在单位时间内通过某个网络(或信道、接口)的数据量。单位b/s,kb/s,Mb/s 吞吐量受网络的带宽或网络的额定速率的限制   时延\r#\r\r  时延 = 发送时延 + 传播时延 + 排队时延 + 处理时延\n  发送时延 : 从发送分组的第一个比特算起，到分组的最后一个比特发送完毕所需的时间(分组交换/路由器将数据推到信道上的时间)\n  传播时延 : 这里看什么介质来传播数据 计算机网络中是 数字信号 -\u0026gt; 模拟信号 因此假如是光纤那么传播速度非常快2x⑩9 当然也有用无线电波我个人不知道无限电波是怎样模拟的无法知道速度究竟怎样,公示 传播时间 = 数据长度 / 传播速率(发送速率,带宽)\n  排队时延 : 等待输出/入链路可用\n  处理时延 : 检查找出口 (如果大陆地区还会有数据拆分与重新组合过滤检查)\n  时延带宽积 (可以理解为物理中的长度)\r#\r\r 时延带宽积 = 传播时延 x 带宽 (时间 x 速度)  往返时延RTT\r#\r\r  从发送方发送数据开始，到发送方收到接收方的确认\n  RTT 包括 往返传播时延 = 传播时延 * 2 ，末端处理时间\n  利用率 (信道利用率 , 网络利用率)\r#\r\r  信道利用率 有数据通过时间 / 总体通过时间(有无数据通过时间)\n  网络利用率 信道利用率加权平均值\n  "}),a.add({id:130,href:'/life/docs/javadir/middleware/rabbit-mq/rounting/',title:"Routing",section:"rabbit-mq",content:" 一个生产者，一个交换机，两个队列，两个消费者\n 绑定\r#\r\r在前面的示例中，我们已经创建了绑定。你可能还记得 代码如下：\nchannel.queueBind(queueName, EXCHANGE_NAME, \u0026#34;\u0026#34;); 绑定可以采用额外的路由键参数。为了避免 与basic_publish参数混淆，我们将它称为绑定键。这就是我们如何使用键创建绑定：\nchannel.queueBind(queueName, EXCHANGE_NAME, \u0026#34;black\u0026#34;); 直接交换(direct)\r#\r\r 与 扇出不同的是 扇出是广播模式 无脑通知到所有队列 ,队列无需知道路由规则,只需知道广播交换机就行\n  规则算法: 直接交换很简单 - 消息转到 binding key(绑定键) 与消息的 routing key(路由键) 完全匹配的队列。  在上面这张图中，我们可以看到 X 绑定了两个队列，绑定类型是 direct。队列 Q1 绑定键为 orange， 队列 Q2 绑定键有两个:一个绑定键为 black，另一个绑定键为 green.\n在这种绑定情况下，生产者发布消息到 exchange 上，绑定键为 orange 的消息会被发布到队列 Q1。绑定键为 blackgreen 和的消息会被发布到队列 Q2，其他消息类型的消息将被丢弃。\n多重绑定\r#\r\r当然如果 exchange 的绑定类型是 direct，但是它绑定的多个队列的 key 如果都相同，在这种情 况下虽然绑定类型是 direct 但是它表现的就和 fanout 有点类似了，就跟广播差不多，如上图所示。\n示例\r#\r\r生产者\r#\r\rpackage com.ng.my.routing; import com.my.common.RabbitMqUtils; import com.rabbitmq.client.Channel; import org.junit.Test; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import java.util.HashMap; import java.util.Iterator; import java.util.Map; import java.util.concurrent.TimeUnit; /** * 生产者 * @author : chengdu * @date : 2023/8/20-08 **/ public class EmitLogDirect { private final Logger logger = LoggerFactory.getLogger(getClass()); private static final String EXCHANGE_NAME = \u0026#34;logDirect\u0026#34;; @Test public void acceptProducer() throws Exception { Channel channel = RabbitMqUtils.getChannel(); //创建交换机 并指定直接交换模式  channel.exchangeDeclare(EXCHANGE_NAME, \u0026#34;direct\u0026#34;); //从控制台当中接受信息  logger.info(\u0026#34;start\u0026#34;); //创建需要绑定的路由key 注意这里不说bingKey 是 routingKey  Map\u0026lt;String, String\u0026gt; bindingKeyMap = new HashMap\u0026lt;\u0026gt;(4); bindingKeyMap.put(\u0026#34;info\u0026#34;, \u0026#34;普通 info 信息\u0026#34;); bindingKeyMap.put(\u0026#34;warning\u0026#34;, \u0026#34;警告 warning 信息\u0026#34;); bindingKeyMap.put(\u0026#34;error\u0026#34;, \u0026#34;错误 error 信息\u0026#34;); //debug 没有消费这接收这个消息 所有就丢失了  bindingKeyMap.put(\u0026#34;debug\u0026#34;, \u0026#34;调试 debug 信息\u0026#34;); TimeUnit.SECONDS.sleep(10); Iterator\u0026lt;Map.Entry\u0026lt;String, String\u0026gt;\u0026gt; iterator = bindingKeyMap.entrySet().iterator(); while (iterator.hasNext()) { Map.Entry\u0026lt;String, String\u0026gt; stringEntry = iterator.next(); //路由key  String routingKey = stringEntry.getKey(); String message = stringEntry.getValue(); logger.info(\u0026#34;生产者 路由匹配算法key:\u0026#34;+routingKey); channel.basicPublish(EXCHANGE_NAME, routingKey, null, message.getBytes(\u0026#34;UTF-8\u0026#34;)); } TimeUnit.MINUTES.sleep(2); logger.info(\u0026#34;end\u0026#34;); } } 消费者\r#\r\rpackage com.ng.my.routing; import cn.hutool.json.JSONUtil; import com.my.common.RabbitMqUtils; import com.rabbitmq.client.Channel; import com.rabbitmq.client.DeliverCallback; import org.junit.Test; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import java.util.concurrent.TimeUnit; /** * 消费者 * @author : chengdu * @date : 2023/8/20-08 **/ public class ReceiveLogsDirect { private final Logger logger = LoggerFactory.getLogger(getClass()); private static final String EXCHANGE_NAME = \u0026#34;logDirect\u0026#34;; @Test public void executeWork() throws Exception{ Channel channel = RabbitMqUtils.getChannel(); //创建2个临时队列  String queueOne = channel.queueDeclare().getQueue(); String queueTwo = channel.queueDeclare().getQueue(); //第一个队列 绑定一个路由key  channel.queueBind(queueOne, EXCHANGE_NAME, \u0026#34;error\u0026#34;); //第二个队列分别和三个路由路由key相绑定  channel.queueBind(queueTwo, EXCHANGE_NAME, \u0026#34;info\u0026#34;); channel.queueBind(queueTwo, EXCHANGE_NAME, \u0026#34;error\u0026#34;); channel.queueBind(queueTwo, EXCHANGE_NAME, \u0026#34;warning\u0026#34;); //丢掉debug消息 // channel.queueBind(queueTwo, EXCHANGE_NAME, \u0026#34;debug\u0026#34;);  DeliverCallback deliverCallback = (consumerTag, delivery) -\u0026gt; { String message = new String(delivery.getBody(), \u0026#34;UTF-8\u0026#34;); logger.info(\u0026#34;consumerTag:\u0026#34; + consumerTag); logger.info(\u0026#34;properties:\u0026#34; + JSONUtil.toJsonStr(delivery.getProperties())); logger.info(\u0026#34;envelope:\u0026#34; + JSONUtil.toJsonStr(delivery.getEnvelope())); System.out.println(\u0026#34; 消息 \u0026#39;\u0026#34; + message + \u0026#34;\u0026#39;\u0026#34;); }; //队列名称,自动应答  channel.basicConsume(queueOne, true, deliverCallback, consumerTag -\u0026gt; { }); channel.basicConsume(queueTwo, true, deliverCallback, consumerTag -\u0026gt; { }); TimeUnit.MINUTES.sleep(2); logger.info(\u0026#34;end\u0026#34;); } } 总结\r#\r\r在生产者那是路由key 这里确定的是交换机和路由key的关系\n在消费者那路由key 必须和生产者一致才行 路由key可以多个队列绑定相同的路由key\n"}),a.add({id:131,href:'/life/docs/javadir/middleware/solr/core/',title:"创建索引和字段",section:"solr",content:"创建索引和字段\r#\r\r一:创建索引\r#\r\r 命令 创建一个叫zch的索引  D:\\CS\\solr\\solr-8.11.0\\bin\u0026gt;solr create -c zch \u0026#34;java version info is 1.8.0_321\u0026#34; \u0026#34;Extracted major version is 1\u0026#34; WARNING: Using _default configset with data driven schema functionality. NOT RECOMMENDED for production use. To turn off: bin\\solr config -c zch -p 8983 -action set-user-property -property update.autoCreateFields -value false Created new core \u0026#39;zch\u0026#39; D:\\CS\\solr\\solr-8.11.0\\bin\u0026gt;  手动创建索引  首先创建一个文件夹\n接着 将下面的文件夹所有复制到core_01中\n最后去管理界面创建就行啦\n二:创建分词器\r#\r\r 使用说明   jar包下载地址： 历史版本：  \u0026lt;!-- Maven仓库地址 --\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.github.magese\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;ik-analyzer\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;8.1.1\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt;  将ik分词器 放到lib中   找到managed-schema 文件 将ik分词器加进去   最后去管理界面测试效果  三:具体创建字段\r#\r\r Solr包含的字段类型   类似 TextField 实际写为 solr.TextField ,BinaryField 写为 solr.BinaryField\n    类 描述     BinaryField 二进制数据。   BoolField 包含 true 或 false。第一个字符中的值：1，t或T被解释为true；第一个字符中的任何其他值都被解释为false。   DoublePointField(旧TrieDoubleField) 双字段（64 位 IEEE 浮点）。该类使用基于 “Dimensional Points” 的数据结构对double 值进行编码，从而可以非常有效地搜索特定的值或值的范围。对于单值字段，必须使用 docValues = \u0026ldquo;true\u0026rdquo; 来启用排序。   IntPointField(旧TrieIntField) 整数字段（32位有符号整数）。该类使用基于“Dimensional Points”的数据结构对int 值进行编码，可以非常有效地搜索特定值或值的范围。对于单值字段，必须使用 docValues = \u0026ldquo;true\u0026rdquo; 来启用排序。   LongPointField(旧TrieLongField) 长字段（64 位有符号整数）。该类使用基于 “Dimensional Points” 的数据结构对foo 值进行编码，从而可以非常有效地搜索特定值或值的范围。对于单值字段，必须使用 docValues = \u0026ldquo;true\u0026rdquo; 来启用排序。   FloatPointField(旧TrieFloatField) 浮点字段（32 位 IEEE 浮点）。该类使用基于“维度点”的数据结构对浮点值进行编码，可以非常有效地搜索特定的值或值的范围。对于单值字段，必须使用 docValues = \u0026ldquo;true\u0026rdquo; 来启用排序。   TextField 文本，通常是多个单词或标记。   DatePointField(旧TrieDateField) 日期字段。代表精确到毫秒的时间点，使用基于“维度点”的数据结构进行编码，可以非常有效地搜索特定值或值的范围。有关支持的语法的更多详细信息，请参阅使用日期部分。对于单值字段，必须使用 docValues = \u0026ldquo;true\u0026rdquo; 来启用排序。   EnumFieldType(旧EnumField) 允许定义枚举的一组值，这些值可能不易按字母或数字顺序（例如，严重性等级列表）排序。这个字段类型需要一个配置文件，它列出了字段值的正确顺序。有关更多信息，请参阅使用枚举字段一节。   DateRangeField 支持索引日期范围，还包括时间点实例（单毫秒（single-millisecond ）持续时间）。有关使用此字段类型的更多详细信息，请参阅使用日期部分。请考虑使用这种字段类型，即使它只是用于日期实例，特别是当查询通常在 UTC 年/月/日/小时等边界时。   UUIDField 通用唯一标识符（UUID）。通过 NEW 值， Solr 将创建一个新的 UUID。注意：NEW 在使用 SolrCloud 时，配置一个默认值为 UUIDField 的实例对于大多数用户是不可取的（因为结果将是每个文档的每个副本将得到一个唯一的 UUID值。建议使用 UUIDUpdateProcessorFactory 在添加文档时生成 UUID 值。   Collat​​ionField 支持排序和范围查询的 Unicode 排序规则。ICUCollat​​ionField 是一个更好的选择，如果你可以使用 ICU4J。有关更多信息，请参阅 Unicode 归类部分。   CurrencyField 已弃用。改用 CurrencyFieldType。   CurrencyFieldType 支持货币和汇率。有关更多信息，请参阅使用货币和汇率部分。   ExternalFileField 从磁盘上的文件中提取值。有关更多信息，请参阅使用外部文件和进程一节。   EnumField 已弃用。改用 EnumFieldType。   ICUCollat​​ionField 支持排序和范围查询的 Unicode 排序规则。有关更多信息，请参阅 Unicode 归类部分。   LatLonPointSpatialField 纬度/经度坐标对；可能多值多点。通常用逗号指定为 “lat，lon” 顺序。有关更多信息，请参阅空间搜索部分。   LatLonType 已弃用。请考虑使用 LatLonPointSpatialField 来代替。一个单值的纬度/经度坐标对。通常用逗号指定为 “lat，lon” 顺序。有关更多信息，请参阅空间搜索部分。   PointType 一个单值的 n 维点。它既用于排序不是经纬度的空间数据，也用于一些更罕见的用例。（注：这与基于 \u0026ldquo;Point\u0026rdquo; 的数值字段无关）。请参阅空间搜索以获取更多信息。   PreAnalyzedField 提供一种发送到 Solr 序列化标记流的方法，可选地具有独立存储的字段值，并且在没有任何额外的文本处理的情况下存储和索引这些信息。PreAnalyzedField 的配置和用法在“使用外部文件和进程”一节中有介绍。   RandomSortField 不包含值。对此字段类型进行排序的查询将以随机顺序返回结果。使用动态字段来使用此功能。   SpatialRecursivePrefixTreeFieldType （简称 RPT）接受纬度逗号经度字符串或 WKT 格式的其他形状。请参阅空间搜索以获取更多信息。   StrField 字符串（UTF-8 编码的字符串或 Unicode）。字符串用于小型字段，不以任何方式标记或分析。他们有一个不到 32K 的硬限制。   TrieField 已弃用。这个字段用一个 type 参数来定义要使用的 Trie * 字段的特定类；改为使用适当的“Point Field”类型。     managed-schema文件构成  \u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;UTF-8\u0026quot; ?\u0026gt;\r\u0026lt;schema version=\u0026quot;1.6\u0026quot;\u0026gt;\r\u0026lt;field .../\u0026gt; #字段\r\u0026lt;dynamicField .../\u0026gt; #动态字段\r\u0026lt;uniqueKey\u0026gt;id\u0026lt;/uniqueKey\u0026gt; #唯一key的指定\r\u0026lt;copyField .../\u0026gt; #拷贝字段\r\u0026lt;fieldType ...\u0026gt; #字段存储类型\r\u0026lt;analyzer type=\u0026quot;index\u0026quot;\u0026gt;\r\u0026lt;tokenizer .../\u0026gt;\r\u0026lt;filter ... /\u0026gt;\r\u0026lt;/analyzer\u0026gt;\r\u0026lt;analyzer type=\u0026quot;query\u0026quot;\u0026gt;\r\u0026lt;tokenizer.../\u0026gt;\r\u0026lt;filter ... /\u0026gt;\r\u0026lt;/analyzer\u0026gt;\r\u0026lt;/fieldType\u0026gt;\r\u0026lt;/schema\u0026gt;\r界面创建字段\r#\r\r 没有添加字段的时候  \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; ?\u0026gt; \u0026lt;schema name=\u0026#34;default-config\u0026#34; version=\u0026#34;1.6\u0026#34;\u0026gt; \u0026lt;!-- attribute \u0026#34;name\u0026#34; is the name of this schema and is only used for display purposes. version=\u0026#34;x.y\u0026#34; is Solr\u0026#39;s version number for the schema syntax and semantics. It should not normally be changed by applications. 1.0: multiValued attribute did not exist, all fields are multiValued by nature 1.1: multiValued attribute introduced, false by default 1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields. 1.3: removed optional field compress feature 1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser behavior when a single string produces multiple tokens. Defaults to off for version \u0026gt;= 1.4 1.5: omitNorms defaults to true for primitive field types (int, float, boolean, string...) 1.6: useDocValuesAsStored defaults to true. --\u0026gt; \u0026lt;uniqueKey\u0026gt;id\u0026lt;/uniqueKey\u0026gt; \u0026lt;field name=\u0026#34;id\u0026#34; type=\u0026#34;string\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34; required=\u0026#34;true\u0026#34; multiValued=\u0026#34;false\u0026#34; /\u0026gt; \u0026lt;!-- docValues are enabled by default for long type so we don\u0026#39;t need to index the version field --\u0026gt; \u0026lt;field name=\u0026#34;_version_\u0026#34; type=\u0026#34;long\u0026#34; indexed=\u0026#34;false\u0026#34; stored=\u0026#34;false\u0026#34;/\u0026gt; \u0026lt;!-- ik分词器 --\u0026gt; \u0026lt;fieldType name=\u0026#34;text_ik\u0026#34; class=\u0026#34;solr.TextField\u0026#34;\u0026gt; \u0026lt;!-- 索引时 --\u0026gt; \u0026lt;analyzer type=\u0026#34;index\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;org.wltea.analyzer.lucene.IKTokenizerFactory\u0026#34; useSmart=\u0026#34;false\u0026#34; conf=\u0026#34;ik.conf\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;!-- 查询时 --\u0026gt; \u0026lt;analyzer type=\u0026#34;query\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;org.wltea.analyzer.lucene.IKTokenizerFactory\u0026#34; useSmart=\u0026#34;true\u0026#34; conf=\u0026#34;ik.conf\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;/fieldType\u0026gt; \u0026lt;fieldType name=\u0026#34;string\u0026#34; class=\u0026#34;solr.StrField\u0026#34; sortMissingLast=\u0026#34;true\u0026#34; docValues=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;strings\u0026#34; class=\u0026#34;solr.StrField\u0026#34; sortMissingLast=\u0026#34;true\u0026#34; docValues=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;int\u0026#34; class=\u0026#34;solr.IntPointField\u0026#34; docValues=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;ints\u0026#34; class=\u0026#34;solr.IntPointField\u0026#34; docValues=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;long\u0026#34; class=\u0026#34;solr.LongPointField\u0026#34; docValues=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;plongs\u0026#34; class=\u0026#34;solr.LongPointField\u0026#34; docValues=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;binary\u0026#34; class=\u0026#34;solr.BinaryField\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;boolean\u0026#34; class=\u0026#34;solr.BoolField\u0026#34; sortMissingLast=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;booleans\u0026#34; class=\u0026#34;solr.BoolField\u0026#34; sortMissingLast=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;date\u0026#34; class=\u0026#34;solr.DatePointField\u0026#34; docValues=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;pdates\u0026#34; class=\u0026#34;solr.DatePointField\u0026#34; docValues=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;double\u0026#34; class=\u0026#34;solr.DoublePointField\u0026#34; docValues=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;pdoubles\u0026#34; class=\u0026#34;solr.DoublePointField\u0026#34; docValues=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;float\u0026#34; class=\u0026#34;solr.FloatPointField\u0026#34; docValues=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;floats\u0026#34; class=\u0026#34;solr.FloatPointField\u0026#34; docValues=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;!-- 文本紧密拆分 --\u0026gt; \u0026lt;fieldType name=\u0026#34;text_en_splitting_tight\u0026#34; class=\u0026#34;solr.TextField\u0026#34; autoGeneratePhraseQueries=\u0026#34;true\u0026#34; positionIncrementGap=\u0026#34;100\u0026#34;\u0026gt; \u0026lt;analyzer type=\u0026#34;index\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;solr.WhitespaceTokenizerFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.SynonymGraphFilterFactory\u0026#34; expand=\u0026#34;false\u0026#34; ignoreCase=\u0026#34;true\u0026#34; synonyms=\u0026#34;synonyms.txt\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.StopFilterFactory\u0026#34; words=\u0026#34;lang/stopwords_en.txt\u0026#34; ignoreCase=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.WordDelimiterGraphFilterFactory\u0026#34; catenateNumbers=\u0026#34;1\u0026#34; generateNumberParts=\u0026#34;0\u0026#34; generateWordParts=\u0026#34;0\u0026#34; catenateAll=\u0026#34;0\u0026#34; catenateWords=\u0026#34;1\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.KeywordMarkerFilterFactory\u0026#34; protected=\u0026#34;protwords.txt\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.EnglishMinimalStemFilterFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.RemoveDuplicatesTokenFilterFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.FlattenGraphFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;analyzer type=\u0026#34;query\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;solr.WhitespaceTokenizerFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.SynonymGraphFilterFactory\u0026#34; expand=\u0026#34;false\u0026#34; ignoreCase=\u0026#34;true\u0026#34; synonyms=\u0026#34;synonyms.txt\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.StopFilterFactory\u0026#34; words=\u0026#34;lang/stopwords_en.txt\u0026#34; ignoreCase=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.WordDelimiterGraphFilterFactory\u0026#34; catenateNumbers=\u0026#34;1\u0026#34; generateNumberParts=\u0026#34;0\u0026#34; generateWordParts=\u0026#34;0\u0026#34; catenateAll=\u0026#34;0\u0026#34; catenateWords=\u0026#34;1\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.KeywordMarkerFilterFactory\u0026#34; protected=\u0026#34;protwords.txt\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.EnglishMinimalStemFilterFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.RemoveDuplicatesTokenFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;/fieldType\u0026gt; \u0026lt;!-- 普通文本 --\u0026gt; \u0026lt;fieldType name=\u0026#34;text_general\u0026#34; class=\u0026#34;solr.TextField\u0026#34; positionIncrementGap=\u0026#34;100\u0026#34; multiValued=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;analyzer type=\u0026#34;index\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;solr.StandardTokenizerFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.StopFilterFactory\u0026#34; words=\u0026#34;stopwords.txt\u0026#34; ignoreCase=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;analyzer type=\u0026#34;query\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;solr.StandardTokenizerFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.StopFilterFactory\u0026#34; words=\u0026#34;stopwords.txt\u0026#34; ignoreCase=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.SynonymGraphFilterFactory\u0026#34; expand=\u0026#34;true\u0026#34; ignoreCase=\u0026#34;true\u0026#34; synonyms=\u0026#34;synonyms.txt\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;/fieldType\u0026gt; \u0026lt;/schema\u0026gt;  添加了字段的时候  \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;!-- Solr managed schema - automatically generated - DO NOT EDIT --\u0026gt; \u0026lt;schema name=\u0026#34;default-config\u0026#34; version=\u0026#34;1.6\u0026#34;\u0026gt; \u0026lt;uniqueKey\u0026gt;id\u0026lt;/uniqueKey\u0026gt; \u0026lt;fieldType name=\u0026#34;binary\u0026#34; class=\u0026#34;solr.BinaryField\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;boolean\u0026#34; class=\u0026#34;solr.BoolField\u0026#34; sortMissingLast=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;booleans\u0026#34; class=\u0026#34;solr.BoolField\u0026#34; sortMissingLast=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;date\u0026#34; class=\u0026#34;solr.DatePointField\u0026#34; docValues=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;double\u0026#34; class=\u0026#34;solr.DoublePointField\u0026#34; docValues=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;float\u0026#34; class=\u0026#34;solr.FloatPointField\u0026#34; docValues=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;floats\u0026#34; class=\u0026#34;solr.FloatPointField\u0026#34; docValues=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;int\u0026#34; class=\u0026#34;solr.IntPointField\u0026#34; docValues=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;ints\u0026#34; class=\u0026#34;solr.IntPointField\u0026#34; docValues=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;long\u0026#34; class=\u0026#34;solr.LongPointField\u0026#34; docValues=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;pdates\u0026#34; class=\u0026#34;solr.DatePointField\u0026#34; docValues=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;pdoubles\u0026#34; class=\u0026#34;solr.DoublePointField\u0026#34; docValues=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;plongs\u0026#34; class=\u0026#34;solr.LongPointField\u0026#34; docValues=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;string\u0026#34; class=\u0026#34;solr.StrField\u0026#34; sortMissingLast=\u0026#34;true\u0026#34; docValues=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;strings\u0026#34; class=\u0026#34;solr.StrField\u0026#34; sortMissingLast=\u0026#34;true\u0026#34; docValues=\u0026#34;true\u0026#34; multiValued=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;fieldType name=\u0026#34;text_en_splitting_tight\u0026#34; class=\u0026#34;solr.TextField\u0026#34; autoGeneratePhraseQueries=\u0026#34;true\u0026#34; positionIncrementGap=\u0026#34;100\u0026#34;\u0026gt; \u0026lt;analyzer type=\u0026#34;index\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;solr.WhitespaceTokenizerFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.SynonymGraphFilterFactory\u0026#34; expand=\u0026#34;false\u0026#34; ignoreCase=\u0026#34;true\u0026#34; synonyms=\u0026#34;synonyms.txt\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.StopFilterFactory\u0026#34; words=\u0026#34;lang/stopwords_en.txt\u0026#34; ignoreCase=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.WordDelimiterGraphFilterFactory\u0026#34; catenateNumbers=\u0026#34;1\u0026#34; generateNumberParts=\u0026#34;0\u0026#34; generateWordParts=\u0026#34;0\u0026#34; catenateAll=\u0026#34;0\u0026#34; catenateWords=\u0026#34;1\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.KeywordMarkerFilterFactory\u0026#34; protected=\u0026#34;protwords.txt\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.EnglishMinimalStemFilterFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.RemoveDuplicatesTokenFilterFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.FlattenGraphFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;analyzer type=\u0026#34;query\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;solr.WhitespaceTokenizerFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.SynonymGraphFilterFactory\u0026#34; expand=\u0026#34;false\u0026#34; ignoreCase=\u0026#34;true\u0026#34; synonyms=\u0026#34;synonyms.txt\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.StopFilterFactory\u0026#34; words=\u0026#34;lang/stopwords_en.txt\u0026#34; ignoreCase=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.WordDelimiterGraphFilterFactory\u0026#34; catenateNumbers=\u0026#34;1\u0026#34; generateNumberParts=\u0026#34;0\u0026#34; generateWordParts=\u0026#34;0\u0026#34; catenateAll=\u0026#34;0\u0026#34; catenateWords=\u0026#34;1\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.KeywordMarkerFilterFactory\u0026#34; protected=\u0026#34;protwords.txt\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.EnglishMinimalStemFilterFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.RemoveDuplicatesTokenFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;/fieldType\u0026gt; \u0026lt;fieldType name=\u0026#34;text_general\u0026#34; class=\u0026#34;solr.TextField\u0026#34; positionIncrementGap=\u0026#34;100\u0026#34; multiValued=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;analyzer type=\u0026#34;index\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;solr.StandardTokenizerFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.StopFilterFactory\u0026#34; words=\u0026#34;stopwords.txt\u0026#34; ignoreCase=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;analyzer type=\u0026#34;query\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;solr.StandardTokenizerFactory\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.StopFilterFactory\u0026#34; words=\u0026#34;stopwords.txt\u0026#34; ignoreCase=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.SynonymGraphFilterFactory\u0026#34; expand=\u0026#34;true\u0026#34; ignoreCase=\u0026#34;true\u0026#34; synonyms=\u0026#34;synonyms.txt\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;/fieldType\u0026gt; \u0026lt;fieldType name=\u0026#34;text_ik\u0026#34; class=\u0026#34;solr.TextField\u0026#34;\u0026gt; \u0026lt;analyzer type=\u0026#34;index\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;org.wltea.analyzer.lucene.IKTokenizerFactory\u0026#34; conf=\u0026#34;ik.conf\u0026#34; useSmart=\u0026#34;false\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;analyzer type=\u0026#34;query\u0026#34;\u0026gt; \u0026lt;tokenizer class=\u0026#34;org.wltea.analyzer.lucene.IKTokenizerFactory\u0026#34; conf=\u0026#34;ik.conf\u0026#34; useSmart=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;filter class=\u0026#34;solr.LowerCaseFilterFactory\u0026#34;/\u0026gt; \u0026lt;/analyzer\u0026gt; \u0026lt;/fieldType\u0026gt; \u0026lt;field name=\u0026#34;_version_\u0026#34; type=\u0026#34;long\u0026#34; indexed=\u0026#34;false\u0026#34; stored=\u0026#34;false\u0026#34;/\u0026gt; \u0026lt;field name=\u0026#34;id\u0026#34; type=\u0026#34;string\u0026#34; multiValued=\u0026#34;false\u0026#34; indexed=\u0026#34;true\u0026#34; required=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;field name=\u0026#34;cover\u0026#34; type=\u0026#34;text_general\u0026#34; uninvertible=\u0026#34;true\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;field name=\u0026#34;cover_x\u0026#34; type=\u0026#34;int\u0026#34; uninvertible=\u0026#34;true\u0026#34; docValues=\u0026#34;true\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;field name=\u0026#34;cover_y\u0026#34; type=\u0026#34;int\u0026#34; uninvertible=\u0026#34;true\u0026#34; docValues=\u0026#34;true\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;field name=\u0026#34;episodes_info\u0026#34; type=\u0026#34;string\u0026#34; uninvertible=\u0026#34;true\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;field name=\u0026#34;is_new\u0026#34; type=\u0026#34;booleans\u0026#34; uninvertible=\u0026#34;true\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;field name=\u0026#34;playable\u0026#34; type=\u0026#34;boolean\u0026#34; uninvertible=\u0026#34;true\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;field name=\u0026#34;rate\u0026#34; type=\u0026#34;double\u0026#34; uninvertible=\u0026#34;true\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;field name=\u0026#34;title\u0026#34; type=\u0026#34;text_ik\u0026#34; uninvertible=\u0026#34;true\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;field name=\u0026#34;url\u0026#34; type=\u0026#34;string\u0026#34; uninvertible=\u0026#34;true\u0026#34; indexed=\u0026#34;true\u0026#34; stored=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;/schema\u0026gt; 参考\n"}),a.add({id:132,href:'/life/docs/python/base/venv/',title:"python 环境变量",section:"python 基础学习",content:"虚拟环境常用有三种 pipenv,virtualenv,conda\r#\r\r更改 Python 的 pip install 默认安装路径\r#\r\r查看site.py 文件的位置(一般在python安装目录的\\Lib下），可使用指令查询：\npython -m site -help\n打开site.py文件，更改里面 USER_BASE 和USER_SITE即可。其中 USER_BASE 和USER_SITE其实就是用户自定义的启用Python脚本和依赖安装包的基础路径\n实在不行 重新安装 pip python -m pip install -U pip\npipenv\r#\r\r 创建虚拟环境 : python -m venv 项目名  noatn@DESKTOP-CCD057N MINGW64 /d/CS/python_venv $ python -m venv my_venv  检查创建的环境变量  \\my_venv\\Lib\\site-packages\\easy_install.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\build_env.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\cache.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\autocompletion.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\base_command.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\cmdoptions.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\main_parser.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\parser.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\status_codes.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\__pycache__\\autocompletion.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\__pycache__\\base_command.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\__pycache__\\cmdoptions.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\__pycache__\\main_parser.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\__pycache__\\parser.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\__pycache__\\status_codes.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\cli\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\check.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\completion.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\debug.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\download.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\freeze.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\hash.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\help.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\install.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\list.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\search.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\show.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\uninstall.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\wheel.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\check.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\completion.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\configuration.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\debug.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\download.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\freeze.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\hash.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\help.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\install.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\list.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\search.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\show.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\uninstall.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\wheel.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\commands\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\configuration.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\distributions\\base.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\distributions\\installed.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\distributions\\source.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\distributions\\wheel.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\distributions\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\distributions\\__pycache__\\base.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\distributions\\__pycache__\\installed.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\distributions\\__pycache__\\source.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\distributions\\__pycache__\\wheel.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\distributions\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\download.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\exceptions.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\index.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\legacy_resolve.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\locations.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\candidate.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\format_control.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\index.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\link.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\search_scope.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\selection_prefs.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\target_python.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\__pycache__\\candidate.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\__pycache__\\format_control.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\__pycache__\\index.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\__pycache__\\link.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\__pycache__\\search_scope.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\__pycache__\\selection_prefs.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\__pycache__\\target_python.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\models\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\operations\\check.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\operations\\freeze.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\operations\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\operations\\__pycache__\\check.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\operations\\__pycache__\\freeze.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\operations\\__pycache__\\prepare.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\operations\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\pep425tags.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\pyproject.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\constructors.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\req_install.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\req_set.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\req_tracker.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\req_uninstall.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\__pycache__\\constructors.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\__pycache__\\req_file.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\__pycache__\\req_install.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\__pycache__\\req_set.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\__pycache__\\req_tracker.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\__pycache__\\req_uninstall.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\req\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\appdirs.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\compat.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\deprecation.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\encoding.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\filesystem.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\glibc.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\hashes.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\logging.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\marker_files.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\misc.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\models.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\outdated.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\packaging.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\setuptools_build.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\temp_dir.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\typing.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\ui.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\virtualenv.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\appdirs.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\deprecation.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\encoding.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\filesystem.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\glibc.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\hashes.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\logging.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\marker_files.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\misc.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\models.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\outdated.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\packaging.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\setuptools_build.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\temp_dir.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\typing.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\ui.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\virtualenv.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\utils\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\vcs\\bazaar.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\vcs\\git.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\vcs\\mercurial.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\vcs\\subversion.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\vcs\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\vcs\\__pycache__\\bazaar.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\vcs\\__pycache__\\git.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\vcs\\__pycache__\\mercurial.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\vcs\\__pycache__\\subversion.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\vcs\\__pycache__\\versioncontrol.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\vcs\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\wheel.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_internal\\__pycache__\\build_env.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\__pycache__\\cache.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\__pycache__\\configuration.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\__pycache__\\download.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\__pycache__\\exceptions.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\__pycache__\\index.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\__pycache__\\legacy_resolve.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\__pycache__\\locations.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\__pycache__\\pep425tags.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\__pycache__\\pyproject.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\__pycache__\\wheel.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_internal\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\appdirs.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\adapter.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\cache.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\redis_cache.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\__pycache__\\file_cache.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\__pycache__\\redis_cache.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\compat.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\filewrapper.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\heuristics.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\serialize.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\wrapper.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\_cmd.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\__pycache__\\adapter.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\__pycache__\\cache.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\__pycache__\\compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\__pycache__\\controller.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\__pycache__\\filewrapper.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\__pycache__\\heuristics.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\__pycache__\\serialize.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\__pycache__\\wrapper.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\__pycache__\\_cmd.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\certifi\\cacert.pem \\my_venv\\Lib\\site-packages\\pip\\_vendor\\certifi\\core.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\certifi\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\certifi\\__main__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\certifi\\__pycache__\\core.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\certifi\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\certifi\\__pycache__\\__main__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\big5freq.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\big5prober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\chardistribution.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\charsetgroupprober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\charsetprober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\cli\\chardetect.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\cli\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\cli\\__pycache__\\chardetect.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\cli\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\codingstatemachine.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\compat.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\cp949prober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\enums.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\escprober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\escsm.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\eucjpprober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\euckrfreq.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\euckrprober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\euctwfreq.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\euctwprober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\gb2312freq.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\gb2312prober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\hebrewprober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\jisfreq.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\jpcntx.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\langbulgarianmodel.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\langcyrillicmodel.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\langgreekmodel.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\langhebrewmodel.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\langhungarianmodel.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\langthaimodel.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\langturkishmodel.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\latin1prober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\mbcharsetprober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\mbcsgroupprober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\mbcssm.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcharsetprober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcsgroupprober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sjisprober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\universaldetector.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\utf8prober.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\version.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\big5freq.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\big5prober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\chardistribution.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\charsetgroupprober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\charsetprober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\codingstatemachine.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\cp949prober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\enums.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\escprober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\escsm.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\eucjpprober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\euckrfreq.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\euckrprober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\euctwfreq.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\euctwprober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\gb2312freq.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\gb2312prober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\hebrewprober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\jisfreq.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\jpcntx.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\langbulgarianmodel.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\langcyrillicmodel.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\langgreekmodel.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\langhebrewmodel.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\langhungarianmodel.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\langthaimodel.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\langturkishmodel.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\latin1prober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\mbcharsetprober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\mbcsgroupprober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\mbcssm.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\sbcharsetprober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\sbcsgroupprober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\sjisprober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\universaldetector.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\utf8prober.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\version.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\colorama\\ansi.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\colorama\\ansitowin32.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\colorama\\initialise.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\colorama\\win32.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\colorama\\winterm.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\colorama\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\colorama\\__pycache__\\ansi.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\colorama\\__pycache__\\ansitowin32.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\colorama\\__pycache__\\initialise.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\colorama\\__pycache__\\win32.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\colorama\\__pycache__\\winterm.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\colorama\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\compat.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\manifest.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\markers.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\scripts.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\t32.exe \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\t64.exe \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\w32.exe \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\w64.exe \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\_backport\\misc.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\_backport\\shutil.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\_backport\\sysconfig.cfg \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\_backport\\sysconfig.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\_backport\\tarfile.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\_backport\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\_backport\\__pycache__\\misc.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\_backport\\__pycache__\\shutil.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\_backport\\__pycache__\\sysconfig.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\_backport\\__pycache__\\tarfile.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\_backport\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__pycache__\\compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__pycache__\\database.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__pycache__\\index.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__pycache__\\locators.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__pycache__\\manifest.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__pycache__\\markers.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__pycache__\\metadata.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__pycache__\\resources.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__pycache__\\scripts.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__pycache__\\util.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__pycache__\\version.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__pycache__\\wheel.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\distro.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\constants.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\alphabeticalattributes.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\base.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\inject_meta_charset.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\lint.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\optionaltags.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\sanitizer.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\whitespace.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\__pycache__\\alphabeticalattributes.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\__pycache__\\base.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\__pycache__\\inject_meta_charset.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\__pycache__\\lint.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\__pycache__\\optionaltags.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\__pycache__\\sanitizer.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\__pycache__\\whitespace.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\filters\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\html5parser.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\serializer.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treeadapters\\genshi.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treeadapters\\sax.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treeadapters\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treeadapters\\__pycache__\\genshi.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treeadapters\\__pycache__\\sax.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treeadapters\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treebuilders\\base.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treebuilders\\dom.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treebuilders\\etree.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treebuilders\\etree_lxml.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treebuilders\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treebuilders\\__pycache__\\base.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treebuilders\\__pycache__\\dom.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treebuilders\\__pycache__\\etree.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treebuilders\\__pycache__\\etree_lxml.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treebuilders\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treewalkers\\base.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treewalkers\\dom.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treewalkers\\etree.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treewalkers\\etree_lxml.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treewalkers\\genshi.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treewalkers\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treewalkers\\__pycache__\\base.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treewalkers\\__pycache__\\dom.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treewalkers\\__pycache__\\etree.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treewalkers\\__pycache__\\etree_lxml.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treewalkers\\__pycache__\\genshi.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\treewalkers\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\_ihatexml.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\_inputstream.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\_tokenizer.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\_trie\\datrie.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\_trie\\py.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\_trie\\_base.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\_trie\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\_trie\\__pycache__\\datrie.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\_trie\\__pycache__\\py.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\_trie\\__pycache__\\_base.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\_trie\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\_utils.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\__pycache__\\constants.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\__pycache__\\html5parser.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\__pycache__\\serializer.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\__pycache__\\_ihatexml.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\__pycache__\\_inputstream.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\__pycache__\\_tokenizer.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\__pycache__\\_utils.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\html5lib\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\codec.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\compat.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\core.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\idnadata.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\intranges.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\package_data.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\uts46data.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\__pycache__\\codec.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\__pycache__\\compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\__pycache__\\core.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\__pycache__\\idnadata.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\__pycache__\\intranges.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\__pycache__\\package_data.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\__pycache__\\uts46data.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\idna\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\ipaddress.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\lockfile\\linklockfile.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\lockfile\\mkdirlockfile.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\lockfile\\pidlockfile.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\lockfile\\sqlitelockfile.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\lockfile\\symlinklockfile.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\lockfile\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\lockfile\\__pycache__\\linklockfile.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\lockfile\\__pycache__\\mkdirlockfile.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\lockfile\\__pycache__\\pidlockfile.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\lockfile\\__pycache__\\sqlitelockfile.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\lockfile\\__pycache__\\symlinklockfile.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\lockfile\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\exceptions.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\_version.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\__pycache__\\exceptions.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\__pycache__\\fallback.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\__pycache__\\_version.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\markers.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\specifiers.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\utils.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\version.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\_compat.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\_structures.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\__about__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\__pycache__\\markers.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\__pycache__\\requirements.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\__pycache__\\specifiers.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\__pycache__\\utils.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\__pycache__\\version.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\__pycache__\\_compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\__pycache__\\_structures.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\__pycache__\\__about__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\build.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\check.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\colorlog.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\compat.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\envbuild.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\wrappers.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\_in_process.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\__pycache__\\build.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\__pycache__\\check.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\__pycache__\\colorlog.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\__pycache__\\compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\__pycache__\\envbuild.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\__pycache__\\wrappers.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\__pycache__\\_in_process.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pep517\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\py31compat.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__pycache__\\py31compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\progress\\bar.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\progress\\counter.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\progress\\spinner.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\progress\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\progress\\__pycache__\\bar.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\progress\\__pycache__\\counter.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\progress\\__pycache__\\spinner.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\progress\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pyparsing.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pytoml\\core.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pytoml\\parser.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pytoml\\test.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pytoml\\utils.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pytoml\\writer.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pytoml\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pytoml\\__pycache__\\core.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pytoml\\__pycache__\\parser.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pytoml\\__pycache__\\test.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pytoml\\__pycache__\\utils.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pytoml\\__pycache__\\writer.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\pytoml\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\adapters.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\api.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\certs.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\compat.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\cookies.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\exceptions.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\help.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\hooks.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\models.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\packages.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\sessions.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\status_codes.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\structures.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\utils.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\_internal_utils.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\adapters.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\api.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\auth.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\certs.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\cookies.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\exceptions.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\help.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\hooks.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\models.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\packages.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\sessions.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\status_codes.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\structures.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\utils.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\_internal_utils.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__pycache__\\__version__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\requests\\__version__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\retrying.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\six.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connection.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\appengine.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\ntlmpool.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\pyopenssl.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\socks.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\_appengine_environ.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\_securetransport\\bindings.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\_securetransport\\low_level.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\_securetransport\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\_securetransport\\__pycache__\\bindings.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\_securetransport\\__pycache__\\low_level.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\_securetransport\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\__pycache__\\appengine.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\__pycache__\\ntlmpool.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\__pycache__\\pyopenssl.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\__pycache__\\securetransport.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\__pycache__\\socks.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\__pycache__\\_appengine_environ.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\exceptions.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\fields.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\filepost.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\backports\\makefile.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\backports\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\backports\\__pycache__\\makefile.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\backports\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\abnf_regexp.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\api.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\builder.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\compat.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\exceptions.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\iri.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\misc.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\normalizers.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\parseresult.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\uri.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\validators.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\_mixin.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__pycache__\\abnf_regexp.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__pycache__\\api.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__pycache__\\builder.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__pycache__\\compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__pycache__\\exceptions.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__pycache__\\iri.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__pycache__\\misc.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__pycache__\\normalizers.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__pycache__\\parseresult.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__pycache__\\uri.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__pycache__\\validators.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__pycache__\\_mixin.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\rfc3986\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\six.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\ssl_match_hostname\\_implementation.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\ssl_match_hostname\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\ssl_match_hostname\\__pycache__\\_implementation.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\ssl_match_hostname\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\__pycache__\\six.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\poolmanager.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\request.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\response.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\connection.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\queue.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\request.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\response.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\ssl_.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\timeout.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\wait.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\__pycache__\\connection.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\__pycache__\\queue.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\__pycache__\\request.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\__pycache__\\response.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\__pycache__\\retry.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\__pycache__\\ssl_.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\__pycache__\\timeout.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\__pycache__\\url.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\__pycache__\\wait.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\_collections.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\__pycache__\\connection.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\__pycache__\\connectionpool.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\__pycache__\\exceptions.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\__pycache__\\fields.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\__pycache__\\filepost.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\__pycache__\\poolmanager.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\__pycache__\\request.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\__pycache__\\response.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\__pycache__\\_collections.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\webencodings\\labels.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\webencodings\\mklabels.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\webencodings\\tests.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\webencodings\\x_user_defined.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\webencodings\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\webencodings\\__pycache__\\labels.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\webencodings\\__pycache__\\mklabels.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\webencodings\\__pycache__\\tests.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\webencodings\\__pycache__\\x_user_defined.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\webencodings\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\_vendor\\__pycache__\\appdirs.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\__pycache__\\distro.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\__pycache__\\ipaddress.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\__pycache__\\pyparsing.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\__pycache__\\retrying.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\__pycache__\\six.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\_vendor\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\__init__.py \\my_venv\\Lib\\site-packages\\pip\\__main__.py \\my_venv\\Lib\\site-packages\\pip\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip\\__pycache__\\__main__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pip-19.2.3.dist-info\\entry_points.txt \\my_venv\\Lib\\site-packages\\pip-19.2.3.dist-info\\INSTALLER \\my_venv\\Lib\\site-packages\\pip-19.2.3.dist-info\\LICENSE.txt \\my_venv\\Lib\\site-packages\\pip-19.2.3.dist-info\\METADATA \\my_venv\\Lib\\site-packages\\pip-19.2.3.dist-info\\RECORD \\my_venv\\Lib\\site-packages\\pip-19.2.3.dist-info\\top_level.txt \\my_venv\\Lib\\site-packages\\pip-19.2.3.dist-info\\WHEEL \\my_venv\\Lib\\site-packages\\pkg_resources\\extern\\__init__.py \\my_venv\\Lib\\site-packages\\pkg_resources\\extern\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\py31compat.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\appdirs.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\markers.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\specifiers.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\utils.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\version.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\_compat.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\_structures.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\__about__.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\__init__.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\__pycache__\\markers.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\__pycache__\\requirements.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\__pycache__\\specifiers.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\__pycache__\\utils.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\__pycache__\\version.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\__pycache__\\_compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\__pycache__\\_structures.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\__pycache__\\__about__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\pyparsing.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\six.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\__init__.py \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\__pycache__\\appdirs.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\__pycache__\\pyparsing.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\__pycache__\\six.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\_vendor\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\__init__.py \\my_venv\\Lib\\site-packages\\pkg_resources\\__pycache__\\py31compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\pkg_resources\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\archive_util.py \\my_venv\\Lib\\site-packages\\setuptools\\build_meta.py \\my_venv\\Lib\\site-packages\\setuptools\\cli-32.exe \\my_venv\\Lib\\site-packages\\setuptools\\cli-64.exe \\my_venv\\Lib\\site-packages\\setuptools\\cli.exe \\my_venv\\Lib\\site-packages\\setuptools\\command\\alias.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\bdist_egg.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\bdist_rpm.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\bdist_wininst.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\build_clib.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\build_ext.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\build_py.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\develop.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\dist_info.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\egg_info.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\install.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\install_egg_info.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\install_lib.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\install_scripts.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\launcher manifest.xml \\my_venv\\Lib\\site-packages\\setuptools\\command\\py36compat.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\register.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\rotate.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\saveopts.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\sdist.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\setopt.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\test.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\upload.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\upload_docs.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\__init__.py \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\alias.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\bdist_egg.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\bdist_rpm.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\bdist_wininst.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\build_clib.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\build_ext.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\build_py.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\develop.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\dist_info.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\easy_install.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\egg_info.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\install.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\install_egg_info.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\install_lib.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\install_scripts.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\py36compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\register.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\rotate.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\saveopts.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\sdist.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\setopt.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\test.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\upload.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\upload_docs.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\command\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\config.py \\my_venv\\Lib\\site-packages\\setuptools\\depends.py \\my_venv\\Lib\\site-packages\\setuptools\\dep_util.py \\my_venv\\Lib\\site-packages\\setuptools\\dist.py \\my_venv\\Lib\\site-packages\\setuptools\\extension.py \\my_venv\\Lib\\site-packages\\setuptools\\extern\\__init__.py \\my_venv\\Lib\\site-packages\\setuptools\\extern\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\glibc.py \\my_venv\\Lib\\site-packages\\setuptools\\glob.py \\my_venv\\Lib\\site-packages\\setuptools\\gui-32.exe \\my_venv\\Lib\\site-packages\\setuptools\\gui-64.exe \\my_venv\\Lib\\site-packages\\setuptools\\gui.exe \\my_venv\\Lib\\site-packages\\setuptools\\launch.py \\my_venv\\Lib\\site-packages\\setuptools\\lib2to3_ex.py \\my_venv\\Lib\\site-packages\\setuptools\\monkey.py \\my_venv\\Lib\\site-packages\\setuptools\\msvc.py \\my_venv\\Lib\\site-packages\\setuptools\\namespaces.py \\my_venv\\Lib\\site-packages\\setuptools\\package_index.py \\my_venv\\Lib\\site-packages\\setuptools\\pep425tags.py \\my_venv\\Lib\\site-packages\\setuptools\\py27compat.py \\my_venv\\Lib\\site-packages\\setuptools\\py31compat.py \\my_venv\\Lib\\site-packages\\setuptools\\py33compat.py \\my_venv\\Lib\\site-packages\\setuptools\\sandbox.py \\my_venv\\Lib\\site-packages\\setuptools\\script (dev).tmpl \\my_venv\\Lib\\site-packages\\setuptools\\script.tmpl \\my_venv\\Lib\\site-packages\\setuptools\\site-patch.py \\my_venv\\Lib\\site-packages\\setuptools\\ssl_support.py \\my_venv\\Lib\\site-packages\\setuptools\\unicode_utils.py \\my_venv\\Lib\\site-packages\\setuptools\\version.py \\my_venv\\Lib\\site-packages\\setuptools\\wheel.py \\my_venv\\Lib\\site-packages\\setuptools\\windows_support.py \\my_venv\\Lib\\site-packages\\setuptools\\_deprecation_warning.py \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\markers.py \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\specifiers.py \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\utils.py \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\version.py \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\_compat.py \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\_structures.py \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\__about__.py \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\__init__.py \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\__pycache__\\markers.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\__pycache__\\requirements.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\__pycache__\\specifiers.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\__pycache__\\utils.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\__pycache__\\version.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\__pycache__\\_compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\__pycache__\\_structures.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\__pycache__\\__about__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\pyparsing.py \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\six.py \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\__init__.py \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\__pycache__\\pyparsing.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\__pycache__\\six.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\_vendor\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__init__.py \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\archive_util.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\build_meta.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\config.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\depends.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\dep_util.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\dist.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\extension.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\glibc.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\glob.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\launch.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\lib2to3_ex.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\monkey.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\msvc.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\namespaces.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\package_index.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\pep425tags.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\py27compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\py31compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\py33compat.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\sandbox.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\site-patch.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\ssl_support.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\unicode_utils.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\version.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\wheel.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\windows_support.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\_deprecation_warning.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools\\__pycache__\\__init__.cpython-38.pyc \\my_venv\\Lib\\site-packages\\setuptools-41.2.0.dist-info\\dependency_links.txt \\my_venv\\Lib\\site-packages\\setuptools-41.2.0.dist-info\\entry_points.txt \\my_venv\\Lib\\site-packages\\setuptools-41.2.0.dist-info\\INSTALLER \\my_venv\\Lib\\site-packages\\setuptools-41.2.0.dist-info\\LICENSE \\my_venv\\Lib\\site-packages\\setuptools-41.2.0.dist-info\\METADATA \\my_venv\\Lib\\site-packages\\setuptools-41.2.0.dist-info\\RECORD \\my_venv\\Lib\\site-packages\\setuptools-41.2.0.dist-info\\top_level.txt \\my_venv\\Lib\\site-packages\\setuptools-41.2.0.dist-info\\WHEEL \\my_venv\\Lib\\site-packages\\setuptools-41.2.0.dist-info\\zip-safe \\my_venv\\Lib\\site-packages\\__pycache__\\easy_install.cpython-38.pyc \\my_venv\\pyvenv.cfg \\my_venv\\Scripts\\activate \\my_venv\\Scripts\\activate.bat \\my_venv\\Scripts\\Activate.ps1 \\my_venv\\Scripts\\deactivate.bat \\my_venv\\Scripts\\easy_install-3.8.exe \\my_venv\\Scripts\\easy_install.exe \\my_venv\\Scripts\\pip.exe \\my_venv\\Scripts\\pip3.8.exe \\my_venv\\Scripts\\pip3.exe \\my_venv\\Scripts\\python.exe \\my_venv\\Scripts\\pythonw.exe  介绍Scripts  \\my_venv\\Scripts\\activate linux系统激活用的 \\my_venv\\Scripts\\activate.bat windows系统激活用的 \\my_venv\\Scripts\\Activate.ps1 \\my_venv\\Scripts\\deactivate.bat \\my_venv\\Scripts\\easy_install-3.8.exe \\my_venv\\Scripts\\easy_install.exe \\my_venv\\Scripts\\pip.exe \\my_venv\\Scripts\\pip3.8.exe \\my_venv\\Scripts\\pip3.exe \\my_venv\\Scripts\\python.exe \\my_venv\\Scripts\\pythonw.exe  激活虚拟环境  C:\\Users\\noatn\u0026gt;d: D:\\\u0026gt;cd D:\\CS\\python_venv\\my_venv\\Scripts D:\\CS\\python_venv\\my_venv\\Scripts\u0026gt; activate.bat (my_venv) D:\\CS\\python_venv\\my_venv\\Scripts\u0026gt;  超时  export PIPENV_TIMEOUT=9999\n 安装包  注意 Pipfile 配置了 豆瓣开源地址别再添加了呢\npipenv install requests pipenv install PyQt5 -i https://pypi.douban.com/simple  卸载包  pipenv uninstall requests\n pipenv install 的虚拟环境文件夹路径  virtualenv\r#\r\r C:\\Users\\noatn.virtualenvs\n  pip安装virtualenv  pip3 install virtualenv "}),a.add({id:133,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/iqcs36rgjy/x8benctsak/',title:"关于爱情令人不解的一切",section:"人际剖析",content:"关于爱情令人不解的一切\r#\r\r"}),a.add({id:134,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E6%B2%9F%E9%80%9A%E6%8A%80%E5%B7%A7/case4/',title:"回复领导的问题",section:"沟通技巧",content:"领导抛出了问题\r#\r\r 第一步首先赞同领导发现的问题是正确的   相当于不能和领导对立 肯定领导立场\n   第二步 分析问题的原因\n  第三步 给出自己的解决方法\n  第四步 怎样避免后续再出现同类的问题\n  "}),a.add({id:135,href:'/life/docs/algorithm/data-structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/',title:"数据结构(简单文字描述)",section:"数据结构",content:"数据结构\r#\r\r第一章：数据结构的基本概念\r#\r\r定义\r#\r\r 在任何问题中，数据元素都不是孤立存在的，而是在它们之间存在着某种关系，这种数据元素相互之间的关系称为结构（Structure）。数据结构是相互之间存在一种或多种特定关系的数据元素的集合。数据结构包括三方面的内容：逻辑结构、存储结构和数据的运算。数据的逻辑结构和存储结构是密不可分的两个方面，一个算法的设计取决于所选定的逻辑结构，而算法的实现依赖于所采用的存储结构。  逻辑结构\r#\r\r 逻辑结构是指数据元素之间的逻辑关系，即从逻辑关系上描述数据。它与数据的存储无关，是独立于计算机的 数据的逻辑结构分为线性结构和非线性结构  集合 结构中的数据元素之间除了“同属于一个集合”的关系外，别无其他关系。 类似于数学上的集合 线性结构 结构中的数据元素之间只存在一对一的关系。比如排队 树形结构 结构中的数据元素之间存在一对多的关系。比如家族族谱 图状结构或网状结构 结构中的数据元素之间存在多对多的关系。 比如地图    物理结构\r#\r\r 存储结构是指数据结构在计算机中的表示（又称映像），也称物理结构。它包括数据元素的表示和关系的表示。数据的存储结构是逻辑结构用计算机语言的实现，它依赖于计算机语言。数据的存储结构主要有：顺序存储、链式存储、索引存储和散列存储。  顺序存储：存储的物理位置相邻。（p.s. 物理位置即信息在计算机中的位置。） 链接存储：存储的物理位置未必相邻，通过记录相邻元素的物理位置来找到相邻元素。 索引存储：类似于目录，以后可以联系操作系统的文件系统章节来理解。 散列存储：通过关键字直接计算出元素的物理地址（以后详解）。    算法的五个特征\r#\r\r 1，有穷性：有限步之后结束 2，确定性：不存在二义性，即没有歧义 3，可行性：比如受限于计算机的计算能力，有些算法虽然理论上可行，但实际上无法完成。 4，输入：能被计算机处理的各种类型数据，如数字，音频，图像等等。 5，输出：一至多个程序输出结果。  算法的复杂度\r#\r\r 时间复杂度：  • 它用来衡量算法随着问题规模增大，算法执行时间增长的快慢； • 是问题规模的函数：T(n)是时间规模函数 时间复杂度主要分析T(n)的数量级 • T(n)=O(f(n)) f(n)是算法中基本运算的频度 一般我们考虑最坏情况下的时间复杂度   空间复杂度：  • 它用来衡量算法随着问题规模增大，算法所需空间的快慢； • 是问题规模的函数：S(n)=O(g(n)) ；算法所需空间的增长率和g(n)的增长率相同。    概要: 复杂度计算为重点\r#\r\r 常用的时间复杂度大小关系： 复杂度如何计算  时间复杂度计算（单个循环体）  直接关注循环体的执行次数，设为k   时间复杂度计算（多个循环体）  两个运算规则：乘法规则，加法规则。      第二章：线性表\r#\r\r线性表的逻辑结构\r#\r\r 定义：线性表是具有相同数据类型的n（n≥0）个数据元素的有限序列。其中n为表长。当n=0时 线性表是一个空表 特点：线性表中第一个元素称为表头元素；最后一个元素称为表尾元素。 除第一个元素外，每个元素有且仅有一个直接前驱。 除最后一个元素外，每个元素有且仅有一个直接后继。  线性表的顺序存储结构\r#\r\r 线性表的顺序存储又称为顺序表。 它是用一组地址连续的存储单元（比如C语言里面的数组），依次存储线性表中的数据元素，从而使得逻 辑上相邻的两个元素在物理位置上也相邻。 建立顺序表的三个属性: 1.存储空间的起始位置（数组名data） 2.顺序表最大存储容量（MaxSize） 3.顺序表当前的长度（length） 其实数组还可以动态分配空间，存储数组的空间是在程序执行过程中通过动态存储分配语句分配 总结：  1.顺序表最主要的特点是随机访问（C语言中基于数组），即通过首地址和元素序号可以在O(1)的时间内找到指定的元素。 2.顺序表的存储密度高，每个结点只存储数据元素。无需给表中元素花费空间建立它们之间的逻辑关系（因为物理位置相邻特性决定） 3.顺序表逻辑上相邻的元素物理上也相邻，所以插入和删除操作需要移动大量元素。    顺序表的操作\r#\r\r 1.插入  算法思路：  1.判断i的值是否正确 2.判断表长是否超过数组长度 3.从后向前到第i个位置，分别将这些元素都向后移动一位 4.将该元素插入位置i 并修改表长   代码 分析：  最好情况：在表尾插入（即i=n+1），元素后移语句将不执行，时间复杂度为O(1)。 最坏情况：在表头插入（即i=1），元素后移语句将执行 n次，时间复杂度为O(n)。 平均情况：假设pi（pi=1/(n+1) ）是在第i个位置上插入 一个结点的概率，则在长度为n的线性表中插入一个结 点时所需移动结点的平均次数为     2.删除  算法思路：  1.判断i的值是否正确 2.取删除的元素 3.将被删元素后面的所有元素都依次向前移动一位 4.修改表长   代码 分析  最好情况：删除表尾元素（即i=n），无须移动元素，时间复杂度为O(1)。 最坏情况：删除表头元素（即i=1），需要移动除第一个元素外的所有元素，时间复杂度为O(n)。 平均情况：假设pi(pi=1/n)是删除第i个位置上结点的概率，则在长度为n的线性表中删除一个结点时所需移动结点的平均次数为      线性表的链式存储结构\r#\r\r 线性表的链式存储是指通过一组任意的存储单元来存储线性表中的数据元素。 头结点和头指针的区别？  不管带不带头结点，头指针始终指向链表的第一个结点，而头结点是带头结点链表中的第一个结点，结点内通常不存储信息   为什么要设置头结点？  1.处理操作起来方便 例如：对在第一元素结点前插入结点和删除第一结点起操作与其它结点的操作就统一了 2.无论链表是否为空，其头指针是指向头结点的非空指针，因此空表和非空表的处理也就统一了。    单链表的操作\r#\r\r 1.头插法建立单链表：  建立新的结点分配内存空间，将新结点插入到当前链表的表头 代码   2.尾插法建立单链表：  建立新的结点分配内存空间，将新结点插入到当前链表的表尾 代码   3.按序号查找结点  在单链表中从第一个结点出发，顺指针next域逐个往下搜索，直到找到第i个结点为止,否则返回最后一个结点指针域NULL。 代码   4.按值查找结点  从单链表第一个结点开始，由前往后依次比较表中各结点数据域的值，若某结点数据域的值等于给定值e，则返回该结点的指针；若整个单链表中没有这样的结点，则返回NULL。 代码   5．插入  插入操作是将值为x的新结点插入到单链表的第i个位置上。先检查插入位置的合法性，然后找到待插入位置的前驱结点，即第i−1个结点，再在其后插入新结点。 算法思路： 1.取指向插入位置的前驱结点的指针 ① p=GetElem(L,i-1); 2.令新结点s的指针域指向p的后继结点 ② s-\u0026gt;next=p-\u0026gt;next; 3.令结点p的指针域指向新插入的结点s ③ p-\u0026gt;next=s;   6．删除  删除操作是将单链表的第i个结点删除。先检查删除位置的合法性，然后查找表中第i−1个结点，即被删结点的前驱结点，再将其删除。 算法思路： 1.取指向删除位置的前驱结点的指针 p=GetElem(L,i-1); 2.取指向删除位置的指针 q=p-\u0026gt;next; 3.p指向结点的后继指向被删除结点的后继 p-\u0026gt;next=q-\u0026gt;next 4.释放删除结点 free(q);    双链表\r#\r\r 定义 1.插入：(方法不唯一) ① s-\u0026gt;next=p-\u0026gt;next; ② p-\u0026gt;next-\u0026gt;prior=s; ③ s-\u0026gt;prior=p; ④ p-\u0026gt;next=s; 2.删除： ① p-\u0026gt;next=q-\u0026gt;next; ② q-\u0026gt;next-\u0026gt;prior=p; ③ free(q);  循环链表\u0026amp;\u0026amp;静态链表\r#\r\r 循环单链表：循环单链表和单链表的区别在于，表中最后一个结点的指针不是NULL，而改为指向头结点，从而整个链表形成一个环 循环双链表：类比循环单链表，循环双链表链表区别于双链表就是首尾结点构成环  当循环双链表为空表时，其头结点的prior域和next域都等于Head。   静态链表：静态链表是用数组来描述线性表的链式存储结构。  数组第一个元素不存储数据，它的指针域存储第一个元素所在的数组下标。链表最后一个元素的指针域值为-1。 例子    第三章：栈和队列\r#\r\r栈\r#\r\r 栈（Stack）：只允许在一端进行插入或删除操作的线性表。 栈顶（Top）：线性表允许进行插入和删除的那一端。 栈底（Bottom）：固定的，不允许进行插入和删除的另一端 特点： 1.栈是受限的线性表，所以自然具有线性关 系。 2.栈中元素后进去的必然先出来，即后进先出 LIFO（Last In First Out）  栈中元素后进 去的必然先出 来，即后进先 出LIFO（Last In First Out）   顺序栈  栈是线性表的特例，那栈的顺序存储也是线性表顺序存储的简化。栈的顺序存储结构也叫作顺序栈。 顺序栈的操作  1.判空： 2.进栈： 3.出栈： 4.读取栈顶元素：     共享栈  顺序栈的存储空间大小需要事先开辟好，很多时候对每个栈各自单独开辟存储空间的利用率不如将各个栈的存储空间共享 示意图 共享栈的结构 共享栈的操作：（进栈）   链式栈  栈是线性表的特例，线性表的存储结构还有链式存储结构，所以也可以用链表的方式来实现栈。栈的链式存储结构也叫作链栈。 特点 1.链栈一般不存在栈满的情况。 2.空栈的判定条件通常定为top==NULL； 结构 链式栈的操作  1.进栈 2.出栈      队列\r#\r\r 队列是只允许在一端进行插入，而在另一端进行删除的线性表 队头（Front）：允许删除的一端，又称为队首。 队尾（Rear）： 允许插入的一端。 先进入队列的元素必然先离开队列，即先进先出（First In First Out）简称FIFO 顺序队列  用数组来实现队列，可以将队首放在数组下标为0的位置。   循环队列  把数组“掰弯”，形成一个环。Rear指针到了下标为4的位置还能继续指回到下标为0的地方。这样首尾相连的顺序存储的队列就叫循环队列 入队：rear=(rear+1)%MaxSize 出队：front=(front+1)%MaxSize 循环队列的操作  1.入队： 2.出队：   概要: 那如何分辨队列是空还是满呢？  方法一：设置标志位flag，当flag=0且rear等于front时为队列空，当flag=1且rear等于front时为队列满。 方法二：我们把front=rear仅作为队空的判定条件。当队列满的时候，令数组中仍然保留一个空余单元。我们认为这种情况就是队列满了。     链式队列  队列的链式存储结构，其实就是线性表的单链表，只不过需要加点限制，只能表尾插入元素，表头删除元素。 为了方便操作，我们分别设置队头指针和队尾指针，队头指针指向头结点，队尾指针指向尾结点。 链式队列的操作   1.入队：我们知道队列只能从队尾插入元素，队头删除元素。于是入队就是在队尾指针进行插入结点操作。链队的插入操作和单链表的插入操作是一致的。\n  2.出队：出队就是头结点的后继结点出队，然后将头结点的后继改为它后面的结点。\n     双端队列  双端队列是指允许两端都可以进行入队和出队操作的队列    栈的应用\r#\r\r 1、括号匹配：假设有两种括号，一种圆的()，一种方的[]，嵌套的顺序是任意的。   算法思想：若是左括号，入栈；若是右括号，出栈一个左括号判断是否与之匹配；检验到字符串尾，还要检查栈是否为空。只有栈空，整个字符串才是括号匹配的。\n  代码\n   2、表达式求值：   规则：从左到右扫描表达式的每个数字和符号，遇到数字就进栈，遇到符号就将处于栈顶的两个数字出栈然后跟这个符号进行运算，最后将运算结果进栈，直到最终获得结果。   3、递归：  要理解递归，你要先理解递归，直到你能理解递归。 如果在一个函数、过程或数据结构的定义中又应用了它自身，那么这个函数、过程或数据结构称为是递归定义的，简称递归。递归最重要的是递归式和递归边界。 1.阶乘  时间复杂度：O(NlogN)   2.斐波那契数列  时间复杂度 O(2^n)     概要: 如何将中缀表达式转换成后缀表达式？  1.按运算符优先级对所有运算符和它的运算数加括号。(原本的括号不用加) 2.把运算符移到对应的括号后。 3.去掉括号。 例子    第四章：树\r#\r\r树的基本概念\r#\r\r 树是递归定义的结构 结点  根节点：树只有一个根结点 结点的度：结点拥有的子树的数量  度为0：叶子结点或者终端结点 度不为0：分支结点或者非终端结点  分支结点除去根结点也称为内部结点       树的度：树中所有结点的度数的最大值 结点关系  祖先结点  根结点到该结点的唯一路径的任意结点   子孙结点 双亲结点  根结点到该结点的唯一路径上最接近该结点的结点   孩子结点 兄弟结点  有相同双亲结点的结点     层次，高度，深度，树的高度  层次：根为第一层，它的孩子为第二层，以此类推 结点的深度：根结点开始自顶向下累加 结点的高度：叶节点开始自底向上累加 树的高度（深度）：树中结点的最大层数   树的性质  1.树中的结点数等于所有结点的度数加1。  证明：不难想象，除根结点以外，每个结点有且仅有一个指向它的前驱结点。也就是说每个结点和指向它的分支一一对应。 假设树中一共有b个分支，那么除了根结点，整个树就包含有b个结点，所以整个树的结点数就是这b个结点加上根结点，设为n，则n=b+1。而分支数b也就是所有结点的度数，证毕。   2.度为m的树中第i层上至多有m^(i−1)个结点（i≥1）。  证明：（数学归纳法） 首先考虑i=1的情况：第一层只有根结点，即一个结点，i=1带入式子满足。 假设第i-1层满足这个性质，第i-1层最多有m i-2个结点。 ……… \u0026hellip;\u0026hellip;\u0026hellip;. i-1层 ……… 又因为树的度为m,所以对于第i-1层的每个结点，最多 有m个孩子结点。所以第i层的结点数最多是i-1层的m 倍，所以第i层上最多有m ^(i-1)个结点。   3.高度为h的m叉树至多有(m^h-1)/(m-1)个结点 4.具有n个结点的m叉树的最小高度为logm(n(m-1)+1)    树的存储结构\r#\r\r 顺序存储结构  双亲表示法：用一组连续的存储空间存储树的结点，同时在每个结点中，用一个变量存储该结点的双亲结点在数组中的位置。   链式存储结构   孩子表示法：把每个结点的孩子结点排列起来存储成一个单链表。所以n个结点就有n个链表； 如果是叶子结点，那这个结点的孩子单链表就是空的； 然后n个单链表的的头指针又存储在一个顺序表（数组）中。\n  孩子兄弟表示法：顾名思义就是要存储孩子和孩子结点的兄弟，具体来说，就是设置两个指针，分别指向该结 点的第一个孩子结点和这个孩子结点的右兄弟结点。\n    二叉树\r#\r\r 定义  二叉树是n（n≥0）个结点的有限集合： ① 或者为空二叉树，即n=0。 ② 或者由一个根结点和两个互不相交的被称为根的左子树 和右子树组成。左子树和右子树又分别是一棵二叉树。  1.每个结点最多有两棵子树。 2.左右子树有顺序     二叉树的五种基本形态：  1.空树 2.只有一个根结点 3.根结点只有左子树 4.根结点只有右子树 5.根结点既有左子树又有右子树   特殊二叉树  1.斜树 2.满二叉树: 3.完全二叉树   二叉树的性质  1.非空二叉树上叶子结点数等于度为2的结点数加1 2.非空二叉树上第K层上至多有2^k−1个结点（K≥1） 3.高度为H的二叉树至多有2^H-1个结点（H≥1） 4.具有N个（N\u0026gt;0）结点的完全二叉树的高度为 [log2(N+1)]或[log2N] +1。    二叉树的存储结构\r#\r\r 顺序存储  二叉树的顺序存储结构就是用一组地址连续的存储单元依次自上而下、自左至右存储完全二叉树上的结点元素。   链式存储  二叉树每个结点最多两个孩子，所以设计二叉树的结点结构时考虑两个指针指向该结点的两个孩子。    二叉树的遍历\r#\r\r 先序遍历： 1）访问根结点； 2）先序遍历左子树； 3）先序遍历右子树。  递归 非递归   中序遍历： 1）中序遍历左子树； 2）访问根结点； 3）中序遍历右子树。  递归 非递归   后序遍历： 1）后序遍历左子树； 2）后序遍历右子树； 3）访问根结点。  递归 非递归   层次遍历： 若树为空，则什么都不做直接返回。 否则从树的第一层开始访问，从上而下逐层遍历，在同一层中，按从左到右的顺序对结点逐个访问。  线索二叉树\r#\r\r  N个结点的二叉链表，每个结点都有指向左右孩子的 结点指针，所以一共有2N个指针，而N个结点的二叉 树一共有N-1条分支，也就是说存在2N-(N-1)=N+1个空指针。比如左图二叉树中有6个结点，那么就有7个空 指针。\n  大量的空余指针能否利用起来？\n 指向前驱和后继的指针称为线索，加上线索的二叉链表就称为线索链表，相应的二叉树就称为线索二叉树 对二叉树以某种次序遍历使其变为线索二叉树的过程就叫做线索化    哈夫曼树和哈夫曼编码\r#\r\r 算法的描述如下： 1）将这N个结点分别作为N棵仅含一个结点的二叉树，构成森林F。 2）构造一个新结点，并从F中选取两棵根结点权值最小的树作为新结点的左、右子树，并且将新结点的权值 置为左、右子树上根结点的权值之和。 3）从F中删除刚才选出的两棵树，同时将新得到的树加入F中。 4）重复步骤2）和3），直至F中只剩下一棵树为止。  第五章：图\r#\r\r图的基本概念\r#\r\r 定义： 树是N（N≥0）个结点的有限集合，N=0时，称为空树，这是一种特殊情况。在任意一棵非空树中应满足： 1）有且仅有一个特定的称为根的结点。 2）当N\u0026gt;1时，其余结点可分为m（m\u0026gt;0）个互不相交的有限集合T1，T2，…，Tm，其中每一个集合本身又是一棵树，并且称为根结点的子树。  图G由顶点集V和边集E组成，记为G=(V，E)  V(G)表示图G中顶点的有限非空集。 用|V|表示图G中顶点的个数，也称为图G的阶 E(G)表示图G中顶点之间的关系（边）集合。 用|E|表示图G中边的条数。     分类  有向图  有向边（弧）的有限集合  弧是顶点的有序对 \u0026lt;v,w\u0026gt; v是弧尾，w是弧头 v邻接到w或w邻接自v     无向图  无向边的有限集合  边是顶点的无序对 （v,w） （v,w）=(w,v) w，v互为邻接点       简单图  1.不存在顶点到自身的边 2.同一条边不重复出现   多重图  若图G中某两个结点之间的边数多于一条，又允许顶点通过通过同一个边和自己关联   完全图  无向完全图  如果任意两个顶点之间都存在边   有向完全图  如果任意两个顶点之间都存在方向相反的两条弧     子图 连通图：图中任意两个顶点都是连通的 连通分量：无向图中的极大连通子图  连通  顶点A到顶点B有路径   极大  1.顶点足够多 2.极大连通子图包含这些依附这些顶点的所有边   结论1:如果一个图有n个顶点，并且有小于n-1条边，则此图必是非连通图。 概要: 找连通分量的方法： 从选取一个顶点开始，以这个顶点作为一个子图，然后逐个添加与这个子图相连的顶点和边直到所有相连的顶点都加入该子图   强连通：顶点V到顶点W和顶点W到顶点V都有路径 强连通图：图中任一对顶点都是强连通的 连通图的生成树：包含图中全部n个顶点，但是只有n-1条边的极小连通子图  结论2:生成树去掉一条边则变成非连通图，加上一条边就会形成回路。   度：以该顶点为一个端点的边数目  无向图中顶点V的度是指依附于该顶点的边的条数，记为TD(v) 有向图中顶点V的度分为出度和入度  入度（ID）是以顶点v为终点的有向边的数目 出度（OD）是以顶点V为起点的有向边的数目     简单路径和简单回路：顶点不重复出现的路径称为简单路径。对于回路，除了第一个和最后一个顶点其余顶点不重复出现的回路称为简单回路 权和网：图中每条边考研赋予一定意义的数值，这个数值叫做这条边的权，有权值得图称为带权图，也叫做网 路径和路径长度：顶点p到q之间的路径是指顶点序列怕保存的，p,a,b,c,d,……q。路径上边的数目就是路径长度 回路（环）：第一个和最后一个顶点相同的路径称为回路或者环 距离：从顶点u到v的最短路径长度。不存在路径则为无穷  图的存储结构\r#\r\r 邻接矩阵（顺序存储） 邻接表（链式存储）  十字链表（有向图） 邻接多重表（无向图）    图的遍历\r#\r\r 深度优先遍历  深度优先搜索(DFS:Depth-First-Search):深度优先搜索类似于树的先序遍历算法  空间复杂度：由于DFS是一个递归算法，递归是需要一个工作栈来辅助工作，最多需要图中所有顶点进栈，所以时间复杂度为O(|V|) 时间复杂度：1)邻接表：遍历过程的主要操作是对顶点遍历它的邻接点，由于通过访问边表来查找邻接点，所以时间复杂度为O(|E|),访问顶点时间为O(|V|),所以总的时间复杂度为O(|V|+|E|) 2)邻接矩阵：查找每个顶点的邻接点时间复杂度为O(|V|),对每个顶点都进行查找，所以总的时间复杂度为O(|V|2)     广度优先遍历  广度优先搜索(BFS:Breadth-First-Search):广度优先搜索类似于树的层序遍历算法  空间复杂度：BFS需要借助一个队列，n个顶点均需要入队一次，所以最坏情况下n个顶点在队列，那么则需要O(|V|)的空间复杂度。 时间复杂度： 1)邻接表：每个顶点入队一次，时间复杂度为O(|V|),对于每个顶点，搜索它的邻接点，就需要访问这个顶点的所有边，所以时间复杂度为O(|E|)。所以总的时间复杂度为O(|V|+|E|) 2)邻接矩阵：每个顶点入队一次，时间复杂度为O(|V|),对于每个顶点，搜索它的邻接点，需要遍历一遍矩阵的一行，所以时间复杂度为O(|V|),所以总的时间复杂度为O(|V|2)      图的应用\r#\r\r 最小生成树  普利姆（Prlm）  ①从图中找第一个起始顶点v0，作为生成树的第一个顶点，然后从这个顶点到其他顶点的所有边中选一条权值最小的边。然后把这条边的另一个顶点v和这条边加入到生成树中。 ②对剩下的其他所有顶点，分别检查这些顶点与顶点v的权值是否比这些顶点在lowcost数组中对应的权值小，如果更小，则用较小的权值更新lowcost数组。 ③从更新后的lowcost数组中继续挑选权值最小而且不在生成树中的边，然后加入到生成树。 ④反复执行②③直到所有所有顶点都加入到生成树中。 概要:  双重循环，外层循环次数为n-1，内层并列的两个循环次数都是n。故普利姆算法时间复杂度为O(n2) 而且时间复杂度只和n有关，所以适合稠密图     克鲁斯卡尔（Kruskal）  将图中边按照权值从小到大排列，然后从最小的边开始扫描，设置一个边的集合来记录，如果该边并入不构成回路的话，则将该边并入当前生成树。直到所有的边都检测完为止。 概要:    概要: 克鲁斯卡尔算法操作分为对边的权值排序部分和一个单重for循环，它们是并列关系，由于排序耗费时间大于单重循环，所以克鲁斯卡尔算法的主要时间耗费在排序上。排序和图中边的数量有关系，所以适合稀疏图       最短路径  迪杰斯特拉  一个源点到其余顶点的最短路径  该算法设置一个集合S记录已求得的最短路径的顶点，可用一个数组s[]来实现，初始化为0，当s[vi]=1时表示将顶点vi放入S中，初始时把源点v0放入S中。此外，在构造过程中还设置了两个辅助数组： dist[]：记录了从源点v0到其他各顶点当前的最短路径长度，dist[i]初值为arcs[v0][i]。 path[]：path[i]表示从源点到顶点i之间的最短路径的前驱结点，在算法结束时，可根据其值追溯得到源点v0到顶点vi的最短路径。        假设从顶点0出发，也就是顶点0为源点，集合S最初只包含顶点0，邻接矩阵arcs表示带权有向图，arcs[i][j]表示有向边\u0026lt;i，j\u0026gt;的权值，若不存在有向边\u0026lt;i，j\u0026gt;，则arcs[i][j]为∞。Dijkstra算法的步骤如下： 1）初始化：集合S初始为{0}，dist[]的初始值dist[i]=arcs[0][i]，i=1，2，…，n-1。 2）找出dist[]中的最小值dist[j]，将顶点j加入集合S，即修改s[vj]=1。 3）修改从v0出发到集合V-S上任一顶点vk可达的最短路径长度：如果dist[j] + arcs[j][k]\u0026lt; dist[k]，则令dist[k]=dist[j] + arcs[j][k]。另外更新path[k]=j(也就是顶点j加入集合之后如果有新的路径使得到顶点k路径变短的话就将到顶点k的路径长度修改成较短的) 4）重复2）～3）操作共n-1次，直到所有的顶点都包含在S中。 * 弗洛伊德 * 所有顶点到所有顶点的最短路径 * 算法思想： 递推产生一个n阶方阵序列A(−1)，A(0)，…，A(k)，…，A(n−1) 其中A(k)[i][j]表示从顶点vi到顶点vj的路径长度，k表示绕行第k个顶点的运算步骤。初始时，对于任意两个顶点vi和vj，若它们之间存在边，则以此边上的权值作为它们之间的最短路径长度；若它们之间不存在有向边，则以∞作为它们之间的最短路径长度。以后逐步尝试在原路径中加入顶点k(k=0，1，…，n-1)作为中间顶点。如果增加中间顶点后，得到的路径比原来的路径长度减少了，则以此新路径代替原路径 * 非带权图 * 两点之间经过边数最少的路径 * 带权图 * 两点之间经过的边上权值之和最小的路径\n  拓扑排序\n  AOV\n 如果我们把每个环节看成图中一个顶点，在这样一个有向图中，用顶点表示活动，用弧表示活动之间的优先关系，那么这样的有向图称为AOV网(Activity On Vertex)    拓扑排序就是对一个有向图构造拓扑序列的过程，构造会有两种结果： 如果此图全部顶点都被输出了，说明它是不存在回路的AOV网； 如果没有输出全部顶点，则说明这个图存在回路，不是AOV网。\n  拓扑排序算法： 从AOV网中选择一个入度为0的顶点输出，然后删去此顶点，并删除以此顶点为弧尾的弧。重复这个步骤直到输出图中全部顶点，或者找不到入度为0的顶点为止。\n    关键路径\n AOE(Activity On Edge):在一个表示工程的带权有向图中，用顶点表示事件，用有向边表示活动，用边上的权值表示活动的持续时间，这种有向图的边表示活动的网称为AOE网。    第六章：查找\r#\r\r查找的基本概念和顺序查找\r#\r\r 查找定义：在数据集合中寻找满足某种条件的数据元素的过程称为查找 关键字：数据元素中某个可以以唯一标识该元素的数据项 平均查找长度（ASL：Average Search Length）:在查找的过程中，一次查找的长度是指需要比较的关键字次数，而平均查找长度则是所有查找过程中进行关键字的比较次数的平均值 顺序查找(线性查找)，主要用于在线性表中进行查找。从查找表的一端开始，顺序扫描查找表，依次将扫描到的关键字和待查找的值key进行比较。如果相等，则查找成功。如果扫描结束仍然没有发现相等的数据元素，则查找失败。  1 2 3 4 时间复杂度为O(n)    折半查找\r#\r\r 算法思路：  首先将给定值key与表中中间位置元素的关键字比较，若相等，则查找成功，返回该元素的存储位置；若不等，则所需查找的元素只能在中间元素以外的前半部分或后半部分中。然后在缩小的范围内继续进行同样的查找，如此重复直到找到为止，或者确定表中没有所需要查找的元素，则查找不成功，返回查找失败的信息。   折半查找分析  折半查找判定树  对于折半查找，查找的比较次数就是从根结点到该结点经历的结点数 时间复杂度为O(logn) 概要: 具有N个（N\u0026gt;0）结点的完全二叉树的高度为 [log2(N+1)] 或 [log2N] +1。      分块查找\r#\r\r 分块查找又称为索引顺序查找 分块查找思想：  ①确定待查找值在哪个块（折半查找）    ②在确定的块中查找待查找值（顺序查找）\n 分块查找分析  由于分块查找实际是进行两次查找，所以整个算法的平均查找长度是两次查找的平均查找长度之和。 即ASL分块=ASL折半+ASL顺序        二叉排序树\r#\r\r 二叉排序树(Binary Search Tree 也叫二叉搜索树)或者是一棵空树，或者是具有以下性质的二叉树 ①若左子树不空，则左子树上所有结点的值均小于它的根结点的值。 ②若右子树不空，则右子树上所有结点的值均大于它的根结点的值。 ③它的左右子树也是一棵二叉排序树。 算法思想  由于二叉排序树的特点(左子树\u0026lt;根结点\u0026lt;右子树),所以每次查找一个关键字，需要先和根结点进行比较： 如果这个关键字小于根结点的值，则再到这个根结点的左子树进行同样的比较操作一直进行下去直到找到该关键字，表示查找成功，或者是空指针，表示查找失败。 如果这个关键字大于根结点的值，则再到这个根结点的右子树进行同样的比较操作一直进行下去直到找到该关键字，表示查找成功，或者是空指针，表示查找失败。  查找关键字代码  1 2   插入关键字代码  1)空树：直接插入新结点返回成功 2)树不空：检查是否存在关键字重复的结点： ①存在：返回插入失败 ②不存在：检查根结点的值和待插入关键字值的大小关系递归插入左右子树    构造代码     删除结点  ①删除的是叶子结点  方法：直接删去该结点即可   ②删除的是仅有左子树或者右子树的结点  方法：“子承父业”   ③删除的是左右子树都有的结点  仿照②类型，先将一个孩子“继承父业”，另一个孩子“归顺”于这个孩子 方法：找到待删除结点的直接前驱或者直接后继结点，用该结点来替换待删除结点，再删除该结点。         二叉排序树分析  查找时间复杂度是O(n)   概要: “左小右大”  平衡二叉树(AVL树)\r#\r\r 平衡二叉树(AVL树)是特殊的二叉排序树，特殊的地方在于左右子树的高度之差绝对值不超过1，而且左右子树又是一棵平衡二叉树。 平衡因子  定义结点左子树与右子树的高度差为该结点的平衡因子，则平衡二叉树结点的平衡因子的值只可能是−1、0或1。   平衡调整   平衡二叉树的建立过程和二叉排序树的建立过程是相似的，都是从一棵空树开始陆续插入结点。不同的地方在于对于平衡二叉树的建立过程中，由于插入结点可能会破坏结点的平衡性，所以需要进行平衡调整。\n LL调整(左孩子的左子树上插入结点导致)  最小不平衡子树根结点的平衡因子为2\u0026gt;0 它的左孩子结点平衡因子为1\u0026gt;0 两个都大于0，所以直接右旋就可以调整 概要: “正则右旋”   RR调整(右孩子的右子树上插入结点导致)  最小不平衡子树根结点的平衡因子为-2\u0026lt;0 它的右孩子结点平衡因子为-1\u0026lt;0 两个都小于0，所以直接左旋就可以调整 概要: “负则左旋”   LR调整(左孩子的右子树上插入结点导致) RL调整(右孩子的左子树上插入结点导致) 概要: 先局部转换为LL或RR，最后进行调整     分析  含有n个结点平衡二叉树的最大深度为O(log2n)，因此，平衡二叉树的平均查找长度为O(log2n)    B树和B+树\r#\r\r 2-3树  2-3树是一种多路查找树：2和3的意思就是2-3树包含两种结点  1)2结点包含一个元素和两个孩子(或者没有孩子)。 ①左子树包含的元素小于该结点的元素值，右子树包含的元素大于该结点的元素值 ②2结点要不有两个孩子，要不就没有孩子，不允许有一个孩子 2)3结点包含一大一小两个元素和三个孩子(或者没有孩子)。(两个元素按大小顺序排列好) ①左子树包含的元素小于该结点较小的元素值，右子树包含的元素大于该结点较大的元素值，中间子树包含的元素介于这两个元素值之间。 ②3结点要不有三个孩子，要不就没有孩子，不允许有一个或两个孩子 3)2-3树所有叶子结点都在同一层次     2-3-4树  2-3-4树也是一种多路查找树：2和3和4的意思就是2-3-4树包含三种结点  1)2结点包含一个元素和两个孩子(或者没有孩子)。 ①左子树包含的元素小于该结点的元素值，右子树包含的元素大于该结点的元素值 ②2结点要不有两个孩子，要不就没有孩子，不允许有一个孩子 2)3结点包含一大一小两个元素和三个孩子(或者没有孩子)。 ①左子树包含的元素小于该结点较小的元素值，右子树包含的元素大于该结点较大的元素值，中间子树包含的元素介于这两个元素值之间。 ②3结点要不有三个孩子，要不就没有孩子，不允许有一个或两个孩子 3)4结点包含小中大三个元素和四个孩子(或者没有孩子)。 ①左子树包含的元素小于该结点最小的元素值，第二个子树包含大于最小的元素值小于中间元素值的元素，第三个子树包含大于中间元素值小于最大元素值的元素，右子树包含的元素大于该结点最大的元素值。\n②4结点要不有四个孩子，要不就没有孩子，不允许有一个或两个或三个孩子 4)2-3-4树所有叶子结点都在同一层次     B树   B树也是一种平衡的多路查找树，2-3树和2-3-4树都是B树的特例，我们把树中结点最大的孩子数目称为B树的阶。通常记为m。 一棵m阶B树或为空树，或为满足如下特性的m叉树：\n 1）树中每个结点至多有m棵子树。（即至多含有m-1个关键字) (\u0026ldquo;两棵子树指针夹着一个关键字\u0026rdquo;) 2）若根结点不是终端结点，则至少有两棵子树。(至少一个关键字) 3）除根结点外的所有非叶结点至少有 ⌈m/2⌉棵子树。（即至少含有⌈m/2⌉-1个关键字） 4）所有非叶结点的结构如下： 5）所有的叶子结点出现在同一层次上，不带信息。(就像是折半查找判断树中查找失败的结点)    1.B树的查找操作\n 查找过程：①先让待查找关键字key和结点的中的关键字比较，如果等于其中某个关键字，则查找成功。 ②如果和所有关键字都不相等，则看key处在哪个范围内，然后去对应的指针所指向的子树中查找。 Eg:如果Key比第一个关键字K1还小，则去P0指针所指向的子树中查找，如果比最后一个关键字Kn还大，则去Pn指针所指向的子树中查找。    2.B树的插入操作\n 分裂的方法：取这个关键字数组中的中间关键字(⌈n/2⌉)作为新的结点，然后其他关键字形成两个结点作为新结点的左右孩子。    3.B树的删除操作\n B树中的删除操作与插入操作类似，但要稍微复杂些，要使得删除后的结点中的关键字个数≥⌈m/2⌉-1 ，因此将涉及结点的“合并”问题。由于删除的关键字位置不同，可以分为关键字在终端结点和不在终端结点上两种情况。   1）如果删除的关键字在终端结点上（最底层非叶子结点）： ①结点内关键字数量大于⌈m/2⌉-1 ，这时删除这个关键字不会破坏B树的定义要求。所以直接删除。 ②结点内关键字数量等于⌈m/2⌉-1 ，并且其左右兄弟结点中存在关键字数量大于⌈m/2⌉-1 的结点，则去兄弟阶段中借关键字。 ③结点内关键字数量等于⌈m/2⌉-1 ，并且其左右兄弟结点中不存在关键字数量大于⌈m/2⌉-1 的结点，则需要进行结点合并。\n  2）如果删除的关键字不在终端结点上（最底层非叶子结点）：需要先转换成在终端结点上，再按照在终端结点 上的情况来分别考虑对应的方法。\n 相邻关键字：对于不在终端结点上的关键字,它的相邻关键字是其左子树中值最大的关键字或者右子树中值最小的关键字。 第一种情况：存在关键字数量大于⌈m/2⌉-1 的左子树或者右子树，在对应子树上找到该关键字的相邻关键字，然后将相邻关键字替换待删除的关键字。 第二种情况：左右子树的关键字数量均等于⌈m/2⌉-1 ，则将这两个左右子树结点合并，然后删除待删除关键字。         B+树  B+树是常用于数据库和操作系统的文件系统中的一种用于查找的数据结构 m阶的B+树与m阶的B树的主要差异在于： 1）在B+树中，具有n个关键字的结点只含有n棵子树，即每个关键字对应一棵子树；而在B树中，具有n个关键字的结点含有(n+1)棵子树。 2）在B+树中，每个结点（非根内部结点）关键字个数n的范围是 ⌈m/2⌉≤n≤m（根结点1≤n≤m），在B树中，每个结点（非根内部结点）关键字个数n的范围是⌈m/2⌉ -1≤n≤m-1（根结点：1≤n≤m-1）。 3）在B+树中，叶结点包含信息，所有非叶结点仅起到索引作用，非叶结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址。 4）在B+树中，叶结点包含了全部关键字，即在非叶结点中出现的关键字也会出现在叶结点中；而在B树中，叶结点包含的关键字和其他结点包含的关键字是不重复的。    散列表\r#\r\r  散列表：根据给定的关键字来计算出关键字在表中的地址的数据结构。也就是说，散列表建立了关键字和存储地址之间的一种直接映射关系。\n  散列函数：一个把查找表中的关键字映射成该关键字对应的地址的函数，记为Hash(key)=Addr。\n  散列函数可能会把两个或两个以上的不同关键字映射到同一地址，称这种情况为“冲突”，这些发生碰撞的不同关键字称为同义词。\n  构造散列函数的tips：\n 1）散列函数的定义域必须包含全部需要存储的关键字，而值域的范围则依赖于散列表的大小或地址范围。 2）散列函数计算出来的地址应该能等概率、均匀地分布在整个地址空间，从而减少冲突的发生。 3）散列函数应尽量简单，能够在较短的时间内就计算出任一关键字对应的散列地址。    1.常用Hash函数的构造方法：\n 1.开放定址法：直接取关键字的某个线性函数值为散列地址，散列函数为H(key)=a×key+b。式中，a和b是常数。这种方法计算最简单，并且不会产生冲突 2.除留余数法：假定散列表表长为m，取一个不大于m但最接近或等于m的质数p，利用以下公式把关键字转换成散列地址。散列函数为H(key)=key % p 除留余数法的关键是选好p，使得每一个关键字通过该函数转换后等概率地映射到散列空间上的任一地址，从而尽可能减少冲突的可能性 3.数字分析法：设关键字是r进制数（如十进制数），而r个数码在各位上出现的频率不一定相同，可能在某些位上分布均匀些，每种数码出现的机会均等；而在某些位上分布不均匀，只有某几种数码经常出现，则应选取数码分布较为均匀的若干位作为散列地址。这种方法适合于已知的关键字集合 4.平方取中法：顾名思义，取关键字的平方值的中间几位作为散列地址。具体取多少位要看实际情况而定。这种方法得到的散列地址与关键字的每一位都有关系，使得散列地址分布比较均匀。 5.折叠法：将关键字分割成位数相同的几部分（最后一部分的位数可以短一些），然后取这几部分的叠加和作为散列地址，这种方法称为折叠法。关键字位数很多，而且关键字中每一位上数字分布大致均匀时，可以采用折叠法得到散列地址。    2.常用Hash函数的冲突处理办法：\n 1.开放定址法：将产生冲突的Hash地址作为自变量，通过某种冲突解决函数得到一个新的空闲的Hash地址。  1）线性探测法：冲突发生时，顺序查看表中下一个单元（当探测到表尾地址m-1时，下一个探测地址是表首地址0），直到找出一个空闲单元（当表未填满时一定能找到一个空闲单元）或查遍全表。 2）平方探测法：设发生冲突的地址为d,平方探测法得到的新的地址序列为d+12，d-12，d+22，d-22\u0026hellip;\u0026hellip; 平方探测法是一种较好的处理冲突的方法，可以避免出现“堆积”问题，它的缺点是不能探测到散列表上的所有单元，但至少能探测到一半单元。 3）再散列法：又称为双散列法。需要使用两个散列函数，当通过第一个散列函数H(Key)得到的地址发生冲突时，则利用第二个散列函数Hash2(Key)计算该关键字的地址增量。 4）伪随机序列法：当发生地址冲突时，地址增量为伪随机数序列，称为伪随机序列法。   2.拉链法：对于不同的关键字可能会通过散列函数映射到同一地址，为了避免非同义词发生冲突，可以把所有的同义词存储在一个线性链表中，这个线性链表由其散列地址唯一标识。拉链法适用于经常进行插入和删除的情况。 3.散列表的查找过程：类似于构造散列表，给定一个关键字Key。 先根据散列函数计算出其散列地址。然后检查散列地址位置有没有关键字。 1)如果没有，表明该关键字不存在，返回查找失败。 2)如果有，则检查该记录是否等于关键字。 ①如果等于关键字，返回查找成功。 ②如果不等于，则按照给定的冲突处理办法来计算下一个散列地址，再用该地址去执行上述过程。 4.散列表的查找性能：和装填因子有关。   α越大，表示装填的记录越“满”，发生冲突的可能性就越大，反之发生冲突的可能性越小      第七章：排序\r#\r\r排序的基本知识\r#\r\r 定义：排序就是将原本无序的序列重新排列成有序的序列。 排序的稳定性  如果待排序表中有两个元素Ri、Rj，其对应的关键字keyi=keyj，且在排序前Ri在Rj前面，如果使用某一排序算法排序后，Ri仍然在Rj的前面，则称这个排序算法是稳定的，否则称排序算法是不稳定的。    插入类排序\r#\r\r 直接插入排序  直接插入排序：首先以一个元素为有序的序列，然后将后面的元素依次插入到有序的序列中合适的位置直到所有元素都插入有序序列。 时间复杂度为O(n) 直接插入排序是稳定性是稳定的。   折半插入排序  折半插入排序将比较和移动这两个操作分离出来，也就是先利用折半查找找到插入的位置，然后一次性移动元素，再插入该元素。 折半插入排序的时间复杂度为O(n^2) 稳定性：和直接插入排序稳定性相同，是稳定的。   希尔排序  希尔排序的基本思想：希尔排序本质上还是插入排序，只不过是把待排序序列分成几个子序列，再分别对这几个子序列进行直接插入排序。  ①先以增量5来分割序列，也就是下标为0,5,10,15\u0026hellip;的关键字分成一组，下标为1,6,11,16..分成一组,然后对这些组分别进行直接插入排序，这就完成了一轮希尔排序。 ②缩小增量(d1=n/2，di+1= [di/2]，比如10个数据序列，第一次增量d1=10/2=5,第二次增量d2= [d1/2]= [5/2]=2,并且最后一个增量等于1),所以第二轮以增量为2进行类似的排序过程。 ③接下来的第三轮，第四轮\u0026hellip;都是类似的过程，直到最后一轮以增量为1。此时就是前面所说的直接插入排序。 概要:   时间复杂度：\u0026hellip; 希尔排序的时间复杂度约为O(n^1.3) 在最坏情况下希尔排序的时间复杂度为O(n^2) 空间复杂度：希尔排序的空间复杂度为O(1) 稳定性：不稳定，由于不同的增量可能就会把相等的关键字划分到两个直接插入排序中进行排序， 可能就会造成相对顺序变化。    交换类排序\r#\r\r 冒泡排序  假设待排序表长为n，从后往前（或从前往后）两两比较相邻元素的值，若为逆序（即A[i-1]\u0026gt;A[i]），则交换它们，直到序列比较完。我们称它为一趟冒泡，结果将最小的元素交换到待排序列的第一个位置。下一趟冒泡时，前一趟确定的最小元素不再参与比较，待排序列减少一个元素，每趟冒泡的结果把序列中的最小元素放到了序列的最终位置，……，这样最多做n-1趟冒泡就能把所有元素排好序。 空间复杂度：交换时开辟了存储空间来存储中间变量，所以空间复杂度为O(1) 时间复杂度 稳定性：当两个关键字相等，if判断条件不成立，所以不会发生数据移动。所以是稳定的。   快速排序  快速排序是一种基于分治法的排序方法。 每一趟快排选择序列中任一个元素作为枢轴(pivot)(通常选第一个元素)，将序列中比枢轴小的元素都移到枢轴前边，比枢轴大的元素都移到枢轴后边。  1 2   时间复杂度： 最好情况下时间复杂度为O(nlogn) ,待排序序列越无序，算法效率越高。 最坏情况下时间复杂度为O(n^2)，待排序序列越有序，算法效率越低。 空间复杂度： 由于快速排序是递归的，需要借助一个递归工作栈来保存每一层递归调用的必要信息，其容量应与递归调用的最大深度一致。 最好情况下为 ⌈log2(n+1)⌉(每次partition都很均匀)递归树的深度O(logn) 最坏情况下，因为要进行n-1次递归调用，所以栈的深度为O(n)； 稳定性：快速排序是不稳定的，是因为存在交换关键字。    选择类排序\r#\r\r 简单选择排序   空间复杂度：需要额外的存储空间仅为交换元素时借助的中间变量，所以空间复杂度是O(1) 时间复杂度： 关键操作在于交换元素操作，整个算法由双重循环组成，外层循环从0到n-2一共n-2+1=n-1次， 对于第i层外层循环，内层循环执行n-1-(i+1)+1=n-i-1次。 当i=0,内层循环执行n-1次，当i=n-2,内层循环执行1次，所以是一个等差数列求和,一共为(1+n-1)(n-1)/2=n(n-1)/2 ,所以时间复杂度为O(n^2) 稳定性：不稳定 原因就在于交换部分会打破相对顺序   堆排序   什么是堆？\n 堆是一棵完全二叉树，而且满足任何一个非叶结点的值都不大于(或不小于)其左右孩子结点的值。  如果是每个结点的值都不小于它的左右孩子结点的值，则称为大顶堆。 如果是每个结点的值都不大于它的左右孩子结点的值，则称为小顶堆。      什么是堆排序？\n 我们知道对于一个堆来说，它的根结点是整个堆中所有结点的值的最大值(大顶堆)或者最小值(小顶堆)。所以堆排序的思想就是每次将无序序列调节成一个堆，然后从堆中选择堆顶元素的值，这个值加入有序序列，无序序列减少一个，再反复调节无序序列，直到所有关键字都加入到有序序列。      时间复杂度： 堆排序的总时间可以分为①建堆部分+②n-1次向下调整堆  堆排序的时间复杂度为O(n)+O(nlog2n)=O(nlog2n)\n 堆排序不稳定      归并排序\r#\r\r 假定待排序表含有n个记录，则可以看成是n个有序的子表，每个子表长度为1，然后两两归并，得到 ⌈n/2⌉个长度为2或1的有序表；再两两归并，……如此重复，直到合并成一个长度为n的有序表为止，这种排序方法称为2-路归并排序。      例如：49 38 65 97 76 13 27  ①首先将整个序列的每个关键字看成一个单独的有序的子序列 ②两两归并，49和38归并成{38 49} ，65和97归并成{65 97}，76和13归并成{13 76}，27没有归并对象 ③两两归并，{38 49}和{65 97}归并成{38 49 65 97}，{13,76}和27归并成{13 27 76} ④两两归并，{38 49 65 97}和{13 27 76}归并成{13 27 38 49 65 76 97}   时间复杂度：O(nlog2n) 空间复杂度:因为需要将这个待排序序列转存到一个数组，所以需要额外开辟大小为n的存储空间，即空间复杂度为O(n) 稳定性：稳定  基数排序\r#\r\r 基数排序(也叫桶排序)是一种很特别的排序方法，它不是基于比较进行排序的，而是采用多关键字排序思想（即基于关键字各位的大小进行排序的），借助“分配”和“收集”两种操作对单逻辑关键字进行排序。基数排序又分为最高位优先（MSD）排序和最低位优先（LSD）排序。 例子：53, 3, 542, 748, 14, 214, 154, 63, 616  补充位数：053, 003, 542, 748, 014, 214, 154, 063, 616 桶实际是一个队列，先进先出(从桶的上面进，下面出) 关键字数量为n,关键字的位数为d,比如748 d=3，r为关键字的基的个数，就是组成关键字的数据的种类，比如十进制数字一共有0至9一共10个数字，即r=10   空间复杂度：需要开辟关键字基的个数个队列，所以空间复杂度为O(r) 时间复杂度：需要进行关键字位数d次\u0026quot;分配\u0026quot;和\u0026quot;收集\u0026quot;，一次\u0026quot;分配\u0026quot;需要将n个关键字放进各个队列中，一次\u0026quot;收集\u0026quot;需要将r个桶都收集一遍。所以一次\u0026quot;分配\u0026quot;和一次\u0026quot;收集\u0026quot;时间复杂度为O(n+r)。d次就需要O(d(n+r))的时间复杂度。 稳定性：由于是队列，先进先出的性质，所以在分配的时候是按照先后顺序分配，也就是稳定的，所以收集的时候也是保持稳定的。即基数排序是稳定的排序算法。  外部排序\r#\r\r 需要将待排序的记录存储在外存上，排序时再把数据一部分一部分的调入内存进行排序。在排序过程中需要多次进行内存和外存之间的交换，对外存文件中的记录进行排序后的结果仍然被放到原有文件中。这种排序的方法就叫做外部排序。 如何得到初始的归并段  置换选择排序：解决排序段放入内存的问题   如何减少多个归并段的归并次数  最佳归并树：最少的归并次数（I/O次数）   如何每次m路归并快速得到最小的关键字  败者树：减少比较次数   概要: 内存容量无法容纳大量数据  二叉树与树与森林\r#\r\r树与二叉树\r#\r\r 如何将一棵树转化成二叉树？  树的孩子兄弟表示法与二叉树的二叉链表表示法都是用到两个指针  将孩子兄弟表示法理解成二叉链表   树转换成二叉树的手动模拟方法：  ①将同一结点的各个孩子用线串连起来 ②将每个结点的子树分支，从左往右，除了第一个以外全部删除 概要: 例子     如何将一棵二叉树转化成树？  二叉树转换成树的手动模拟方法：  ①将二叉树从上到下分层，并调节成水平方向。 (分层方法：每遇到左孩子则为一层) ②找到每一层的双亲结点，方法为它的上一层相连的那个结点就是双亲结点。 例如bcd这一层，与它相连的上一层结点即为a,所以bcd这三个结点的双亲结点都是a. ③将每一层结点和其双亲结点相连，同时删除该双亲结点各个孩子结点之间的联系。 概要: 例子      森林与二叉树\r#\r\r 森林：森林是m（m≥0）棵互不相交的树的集合 如何将森林转换成二叉树？  森林转换成树的手动模拟方法：  ①将森林中每棵树都转换成二叉树 ②将第二棵树作为第一棵树的根结点的右子树，将第三棵树作为第二棵树的根结点的右子树..依次类推 概要: 例子     如何将二叉树转换成森林？  二叉树转换成森林的手动模拟方法：  反复断开二叉树根结点的右孩子的右子树指针，直到不存在根结点有右孩子的二叉树为止。 概要: 例子      树与森林的遍历\r#\r\r 先序：先访问根结点，再访问根结点的每棵子树。 访问子树也是按照先序的要求 后序：先访问根结点的每棵子树，再访问根结点。 访问子树也是按照先序的要求 树的先序遍历等于它对应二叉树的先序遍历，后序遍历等于它对应的二叉树的中序遍历 概要: 例子  "}),a.add({id:136,href:'/life/docs/algorithm/data-structure/linklist/',title:"链表",section:"数据结构",content:"链表\r#\r\r n个节点离散分配，彼此通过指针相连，每个节点只有一个前驱节点，每个节点只有一个后续节点，首节点没有前驱节点，尾节点没有后续节点。确定一个链表我们只需要头指针，通过头指针就可以把整个链表都能推出来\n 链表优点:\r#\r\r 空间没有限制 插入删除元素很快  链表缺点:\r#\r\r 存取速度很慢  分类\r#\r\r  单向链表 一个节点指向下一个节点。\n  双向链表 一个节点有两个指针域。\n  循环链表 能通过任何一个节点找到其他所有的节点，将两种(双向/单向)链表的最后一个结点指向第一个结点从而实现循环。\n  "}),a.add({id:137,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/x5ws5dsp8a/',title:"男生 穿着 和 仪态",section:"自我提升",content:" 这方面我再考虑 是不是可以去咨询一下那些专业的人员 现在不是有很多信息咨询分析师吗\n 发型\r#\r\r参考\n"}),a.add({id:138,href:'/life/docs/english_study/second_language_acquisition/%E6%95%B4%E7%90%86/',title:"习得  整理 ",section:"第二语言习得",content:"①习得-学得假说\r#\r\r语言的获得主要是潜意识的，并非有意识的学习。获得和学习是有区别的。\n②监控假说\r#\r\r学习者在语言学习的过程中有意识积累语音语法词汇的知识，再说外语时只能起到监控的作用。\n这些知识不能真正影响潜意识外语获得。\n③自然顺序假说\r#\r\r成人和儿童对第二语言中的很多知识概念的获得顺序都有相似性。\n获得运用的先后顺序:英语动词第三人称加s→不规则动词→名词所有格\n④输入假说\r#\r\r语言能力的获得离不开大量的\u0026quot;可理解输入\u0026quot;\n可理解输入:比学习者自身水平稍高一点的听力或阅读材料\ni+1\n⑤情感过滤假说\r#\r\r学习者对犯错误的恐惧以及对学习语言的抵触……会影响第二语言的获得。\n其它\r#\r\r  输入必须是有趣的,否则就没人注意到它\n  输入要有效不仅需要有趣,引人入胜的非常的有趣,有趣到让你都忘记了,当下周围世界其它的事物\n  "}),a.add({id:139,href:'/life/docs/javadir/basedir/java-basic-x-reflection/',title:"反射机制详解",section:"Java基础知识 ",content:"反射机制详解\r#\r\r JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制\n 反射基础\r#\r\r RTTI（Run-Time Type Identification）运行时类型识别。在《Thinking in Java》一书第十四章中有提到，其作用是在运行时识别一个对象的类型和类的信息。主要有两种方式：一种是“传统的”RTTI，它假定我们在编译时已经知道了所有的类型；另一种是“反射”机制，它允许我们在运行时发现和使用类的信息。\n 反射就是把java类中的各种成分映射成一个个的Java对象\n例如：一个类有：成员变量、方法、构造方法、包等等信息，利用反射技术可以对一个类进行解剖，把个个组成部分映射成一个个对象。\n 这里我们首先需要理解 Class类，以及类的加载机制； 然后基于此我们如何通过反射获取Class类以及类中的成员变量、方法、构造方法等。\n Class类\r#\r\rClass类，Class类也是一个实实在在的类，存在于JDK的java.lang包中。 Class类的实例表示java应用运行时的类(class ans enum)或接口(interface and annotation)（每个java类运行时都在JVM里表现为一个class对象， 可通过类名.class、类型.getClass()、Class.forName(\u0026ldquo;类名\u0026rdquo;)等方法获取class对象）。数组同样也被映射为class 对象的一个类， 所有具有相同元素类型和维数的数组都共享该 Class 对象。基本类型boolean，byte，char，short，int，long，float，double和关键字void同样表现为 class 对象。\npublic final class Class\u0026lt;T\u0026gt; implements java.io.Serializable, GenericDeclaration, Type, AnnotatedElement { private static final int ANNOTATION= 0x00002000; private static final int ENUM = 0x00004000; private static final int SYNTHETIC = 0x00001000; private static native void registerNatives(); static { registerNatives(); } /* * Private constructor. Only the Java Virtual Machine creates Class objects. //私有构造器，只有JVM才能调用创建Class对象 * This constructor is not used and prevents the default constructor being * generated. */ private Class(ClassLoader loader) { // Initialize final field for classLoader. The initialization value of non-null  // prevents future JIT optimizations from assuming this final field is null.  classLoader = loader; } 到这我们也就可以得出以下几点信息：\n  Class类也是类的一种，与class关键字是不一样的。\n  手动编写的类被编译后会产生一个Class对象，其表示的是创建的类的类型信息，而且这个Class对象保存在同名.class的文件中(字节码文件)\n  每个通过关键字class标识的类，在内存中有且只有一个与之对应的Class对象来描述其类型信息，无论创建多少个实例对象，其依据的都是用一个Class对象。\n  Class类只存私有构造函数，因此对应Class对象只能有JVM创建和加载Class类的对象作用是运行时提供或获得某个对象的类型信息，这点对于反射技术很重要(关于反射稍后分析)。\n  类加载\r#\r\r类加载机制和类字节码技术可以参考如下两篇文章：\n JVM基础 - 类字节码详解  源代码通过编译器编译为字节码，再通过类加载子系统进行加载到JVM中运行   JVM基础 - Java 类加载机制  这篇文章将带你深入理解Java 类加载机制    其中，这里我们需要回顾的是：\n反射的使用\r#\r\r 基于此我们如何通过反射获取Class类对象以及类中的成员变量、方法、构造方法等\n 在Java中，Class类与java.lang.reflect类库一起对反射技术进行了全力的支持。 在反射包中，我们常用的类主要有Constructor类表示的是Class 对象所表示的类的构造方法，利用它可以在运行时动态创建对象、Field表示Class对象所表示的类的成员变量， 通过它可以在运行时动态修改成员变量的属性值(包含private)、Method表示Class对象所表示的类的成员方法，通过它可以动态调用对象的方法(包含private)， 下面将对这几个重要类进行分别说明。\nClass类对象的获取\r#\r\r在类加载的时候，jvm会创建一个class对象\nclass对象是可以说是反射中最常用的，获取class对象的方式的主要有三种\n 根据类名：类名.class 根据对象：对象.getClass() 根据全限定类名：Class.forName(全限定类名)  public class ReflectionDemo1 { public static void main(String[] args) throws Exception { Class\u0026lt;UserReflection\u0026gt; reflectionClass = UserReflection.class; // 获取Class对象的三种方式  System.out.println(\u0026#34;根据类名: \\t\u0026#34; + UserReflection.class); System.out.println(\u0026#34;根据对象: \\t\u0026#34; + new UserReflection().getClass()); System.out.println(\u0026#34;根据全限定类名:\\t\u0026#34; + Class.forName(\u0026#34;com.my_reflection.basic_usage.UserReflection\u0026#34;)); // 常用的方法  System.out.println(\u0026#34;获取全限定类名:\\t\u0026#34; + reflectionClass.getName()); System.out.println(\u0026#34;获取类名:\\t\u0026#34; + reflectionClass.getSimpleName()); System.out.println(\u0026#34;实例化:\\t\u0026#34; + reflectionClass.newInstance()); } } class UserReflection { private String name = \u0026#34;init\u0026#34;; private int age; public UserReflection(String name, int age) { this.name = name; this.age = age; } public UserReflection() { } public String getName() { return name; } public void setName(String name) { this.name = name; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } } 输出结果：\n根据类名: class com.my_reflection.basic_usage.UserReflection\r根据对象: class com.my_reflection.basic_usage.UserReflection\r根据全限定类名:	class com.my_reflection.basic_usage.UserReflection\r获取全限定类名:	com.my_reflection.basic_usage.UserReflection\r获取类名:	UserReflection\r实例化:	com.my_reflection.basic_usage.UserReflection@31befd9f\r 再来看看 Class类的方法     方法名 说明     forName() (1)获取Class对象的一个引用，但引用的类还没有加载(该类的第一个对象没有生成)就加载了这个类。   (2)为了产生Class引用，forName()立即就进行了初始化。    Object-getClass() 获取Class对象的一个引用，返回表示该对象的实际类型的Class引用。   getName() 取全限定的类名(包括包名)，即类的完整名字。   getSimpleName() 获取类名(不包括包名)   getCanonicalName() 获取全限定的类名(包括包名)   isInterface() 判断Class对象是否是表示一个接口   getInterfaces() 返回Class对象数组，表示Class对象所引用的类所实现的所有接口。   getSupercalss() 返回Class对象，表示Class对象所引用的类所继承的直接基类。应用该方法可在运行时发现一个对象完整的继承结构。   newInstance() 返回一个Oject对象，是实现“虚拟构造器”的一种途径。使用该方法创建的类，必须带有无参的构造器。   getFields() 获得某个类的所有的公共（public）的字段，包括继承自父类的所有公共字段。 类似的还有getMethods和getConstructors。   getDeclaredFields 获得某个类的自己声明的字段，即包括public、private和proteced，默认但是不包括父类声明的任何字段。类似的还有getDeclaredMethods和getDeclaredConstructors。    import java.lang.reflect.Field; /** * @author : chengdu * @date : 2023/9/24-09 **/ public class ReflectionDemo2 { interface I1 { } interface I2 { } static class Cell { public int mCellPublic; } static class Animal extends Cell { private int mAnimalPrivate; protected int mAnimalProtected; int mAnimalDefault; public int mAnimalPublic; private static int sAnimalPrivate; protected static int sAnimalProtected; static int sAnimalDefault; public static int sAnimalPublic; } static class Dog extends Animal implements I1, I2 { private int mDogPrivate; public int mDogPublic; protected int mDogProtected; private int mDogDefault; private static int sDogPrivate; protected static int sDogProtected; static int sDogDefault; public static int sDogPublic; } public static void main(String[] args) throws Exception { Class\u0026lt;Dog\u0026gt; dog = Dog.class; //类名打印  System.out.println(dog.getName()); //com.my_reflection.basic_usage.ReflectionDemo2$Dog  System.out.println(dog.getSimpleName()); //Dog  System.out.println(dog.getCanonicalName());//com.my_reflection.basic_usage.ReflectionDemo2.Dog  //接口  System.out.println(dog.isInterface()); //false  for (Class iI : dog.getInterfaces()) { System.out.println(iI); } /* interface com.cry.I1 interface com.cry.I2 */ //父类  System.out.println(dog.getSuperclass());//class com.my_reflection.basic_usage.ReflectionDemo2$Animal  //创建对象  Dog d = dog.newInstance(); //字段  for (Field f : dog.getFields()) { System.out.println(f.getName()); } /* mDogPublic sDogPublic mAnimalPublic sAnimalPublic mCellPublic //父类的父类的公共字段也打印出来了 */ System.out.println(\u0026#34;---------\u0026#34;); for (Field f : dog.getDeclaredFields()) { System.out.println(f.getName()); } /** 只有自己类声明的字段 mDogPrivate mDogPublic mDogProtected mDogDefault sDogPrivate sDogProtected sDogDefault sDogPublic */ } } getName、getCanonicalName与getSimpleName的区别：\n  getSimpleName：只获取类名\n  getName：类的全限定名，jvm中Class的表示，可以用于动态加载Class对象，例如Class.forName。\n  getCanonicalName：返回更容易理解的表示，主要用于输出（toString）或log打印，大多数情况下和getName一样，但是在内部类、数组等类型的表示形式就不同了。\n  Constructor类及其用法\r#\r\r Constructor类存在于反射包(java.lang.reflect)中，反映的是Class 对象所表示的类的构造方法。\n 获取Constructor对象是通过Class类中的方法获取的，Class类与Constructor相关的主要方法如下：\n   方法返回值 方法名称 方法说明     static Class\u0026lt;?\u0026gt; forName(String className) 返回与带有给定字符串名的类或接口相关联的 Class 对象。   Constructor getConstructor(Class\u0026lt;?\u0026gt;\u0026hellip; parameterTypes) 返回指定参数类型、具有public访问权限的构造函数对象   Constructor\u0026lt;?\u0026gt;[] getConstructors() 返回所有具有public访问权限的构造函数的Constructor对象数组   Constructor getDeclaredConstructor(Class\u0026lt;?\u0026gt;\u0026hellip; parameterTypes) 返回指定参数类型、所有声明的（包括private）构造函数对象   Constructor\u0026lt;?\u0026gt;[] getDeclaredConstructors() 返回所有声明的（包括private）构造函数对象   T newInstance() 调用无参构造器创建此 Class 对象所表示的类的一个新实例。    关于Constructor类本身一些常用方法如下(仅部分，其他可查API)\n   方法返回值 方法名称 方法说明     Class getDeclaringClass() 返回 Class 对象，该对象表示声明由此 Constructor 对象表示的构造方法的类,其实就是返回真实类型（不包含参数）   Type[] getGenericParameterTypes() 按照声明顺序返回一组 Type 对象，返回的就是 Constructor对象构造函数的形参类型。   String getName() 以字符串形式返回此构造方法的名称。   Class\u0026lt;?\u0026gt;[] getParameterTypes() 按照声明顺序返回一组 Class 对象，即返回Constructor 对象所表示构造方法的形参类型   T newInstance(Object\u0026hellip; initargs) 使用此 Constructor对象表示的构造函数来创建新实例   String toGenericString() 返回描述此 Constructor 的字符串，其中包括类型参数。    Field类及其用法\r#\r\r Field 提供有关类或接口的单个字段的信息，以及对它的动态访问权限。反射的字段可能是一个类（静态）字段或实例字段。\n 同样的道理，我们可以通过Class类的提供的方法来获取代表字段信息的Field对象，Class类与Field对象相关方法如下：\n   方法返回值 方法名称 方法说明     Field getDeclaredField(String name) 获取指定name名称的(包含private修饰的)字段，不包括继承的字段   Field[] getDeclaredFields() 获取Class对象所表示的类或接口的所有(包含private修饰的)字段,不包括继承的字段   Field getField(String name) 获取指定name名称、具有public修饰的字段，包含继承字段   Field[] getFields() 获取修饰符为public的字段，包含继承字段    下面的代码演示了上述方法的使用过程\npublic class ReflectionDemo3 { public static void main(String[] args) throws ClassNotFoundException, NoSuchFieldException { Class\u0026lt;?\u0026gt; clazz = Student.class; //获取指定字段名称的Field类,注意字段修饰符必须为public而且存在该字段,  // 否则抛NoSuchFieldException  Field field = clazz.getField(\u0026#34;age\u0026#34;); System.out.println(\u0026#34;field:\u0026#34; + field); //获取所有修饰符为public的字段,包含父类字段,注意修饰符为public才会获取  Field fields[] = clazz.getFields(); for (Field f : fields) { System.out.println(\u0026#34;f:\u0026#34; + f.getDeclaringClass()); } System.out.println(\u0026#34;================getDeclaredFields====================\u0026#34;); //获取当前类所字段(包含private字段),注意不包含父类的字段  Field fields2[] = clazz.getDeclaredFields(); for (Field f : fields2) { System.out.println(\u0026#34;f2:\u0026#34; + f.getDeclaringClass()); } //获取指定字段名称的Field类,可以是任意修饰符的自动,注意不包含父类的字段  Field field2 = clazz.getDeclaredField(\u0026#34;desc\u0026#34;); System.out.println(\u0026#34;field2:\u0026#34; + field2); } /** * 输出结果: * field:public int reflect.Person.age * f:public java.lang.String reflect.Student.desc * f:public int reflect.Person.age * f:public java.lang.String reflect.Person.name * \u0026lt;p\u0026gt; * ================getDeclaredFields==================== * f2:public java.lang.String reflect.Student.desc * f2:private int reflect.Student.score * field2:public java.lang.String reflect.Student.desc */ static class Person { public int age; public String name; public int getAge() { return age; } public void setAge(int age) { this.age = age; } } static class Student extends Person { public String desc; private int score; public String getDesc() { return desc; } public void setDesc(String desc) { this.desc = desc; } public int getScore() { return score; } public void setScore(int score) { this.score = score; } } } 上述方法需要注意的是，如果我们不期望获取其父类的字段，则需使用Class类的getDeclaredField/getDeclaredFields方法来获取字段即可，倘若需要连带获取到父类的字段，那么请使用Class类的getField/getFields，但是也只能获取到public修饰的的字段，无法获取父类的私有字段。下面将通过Field类本身的方法对指定类属性赋值，代码演示如下：\npublic class ReflectionDemo3 { public static void main(String[] args) throws ClassNotFoundException, NoSuchFieldException, Exception { // run1();  run2(); } private static void run2() throws Exception { //获取Class对象引用  Class\u0026lt;?\u0026gt; clazz = Student.class; Student st = (Student) clazz.newInstance(); //获取父类public字段并赋值  Field ageField = clazz.getField(\u0026#34;age\u0026#34;); ageField.set(st, 18); Field nameField = clazz.getField(\u0026#34;name\u0026#34;); nameField.set(st, \u0026#34;Lily\u0026#34;); //只获取当前类的字段,不获取父类的字段  Field descField = clazz.getDeclaredField(\u0026#34;desc\u0026#34;); descField.set(st, \u0026#34;I am student\u0026#34;); Field scoreField = clazz.getDeclaredField(\u0026#34;score\u0026#34;); //设置可访问，score是private的  scoreField.setAccessible(true); scoreField.set(st, 88); System.out.println(st.toString()); //输出结果：Student{age=18, name=\u0026#39;Lily ,desc=\u0026#39;I am student\u0026#39;, score=88}  //获取字段值  System.out.println(scoreField.get(st)); // 88  } private static void run1() throws NoSuchFieldException { Class\u0026lt;?\u0026gt; clazz = Student.class; //获取指定字段名称的Field类,注意字段修饰符必须为public而且存在该字段,  // 否则抛NoSuchFieldException  Field field = clazz.getField(\u0026#34;age\u0026#34;); System.out.println(\u0026#34;field:\u0026#34; + field); //获取所有修饰符为public的字段,包含父类字段,注意修饰符为public才会获取  Field fields[] = clazz.getFields(); for (Field f : fields) { System.out.println(\u0026#34;f:\u0026#34; + f.getDeclaringClass()); } System.out.println(\u0026#34;================getDeclaredFields====================\u0026#34;); //获取当前类所字段(包含private字段),注意不包含父类的字段  Field fields2[] = clazz.getDeclaredFields(); for (Field f : fields2) { System.out.println(\u0026#34;f2:\u0026#34; + f.getDeclaringClass()); } //获取指定字段名称的Field类,可以是任意修饰符的自动,注意不包含父类的字段  Field field2 = clazz.getDeclaredField(\u0026#34;desc\u0026#34;); System.out.println(\u0026#34;field2:\u0026#34; + field2); } /** * 输出结果: * field:public int reflect.Person.age * f:public java.lang.String reflect.Student.desc * f:public int reflect.Person.age * f:public java.lang.String reflect.Person.name * \u0026lt;p\u0026gt; * ================getDeclaredFields==================== * f2:public java.lang.String reflect.Student.desc * f2:private int reflect.Student.score * field2:public java.lang.String reflect.Student.desc */ static class Person { public int age; public String name; public int getAge() { return age; } public void setAge(int age) { this.age = age; } } static class Student extends Person { public String desc; private int score; public String getDesc() { return desc; } public void setDesc(String desc) { this.desc = desc; } public int getScore() { return score; } public void setScore(int score) { this.score = score; } } } Method类及其用法\r#\r\r Method 提供关于类或接口上单独某个方法（以及如何访问该方法）的信息，所反映的方法可能是类方法或实例方法（包括抽象方法）。\n 下面是Class类获取Method对象相关的方法：\n   方法返回值 方法名称 方法说明     Method getDeclaredMethod(String name, Class\u0026lt;?\u0026gt;\u0026hellip; parameterTypes) 返回一个指定参数的Method对象，该对象反映此 Class 对象所表示的类或接口的指定已声明方法。   Method[] getDeclaredMethods() 返回 Method 对象的一个数组，这些对象反映此 Class 对象表示的类或接口声明的所有方法，包括公共、保护、默认（包）访问和私有方法，但不包括继承的方法。   Method getMethod(String name, Class\u0026lt;?\u0026gt;\u0026hellip; parameterTypes) 返回一个 Method 对象，它反映此 Class 对象所表示的类或接口的指定公共成员方法。   Method[] getMethods() 返回一个包含某些 Method 对象的数组，这些对象反映此 Class 对象所表示的类或接口（包括那些由该类或接口声明的以及从超类和超接口继承的那些的类或接口）的公共 member 方法。    同样通过案例演示上述方法\npublic class ReflectionDemo4 { public static void main(String[] args) throws ClassNotFoundException, NoSuchMethodException { Class clazz = Circle.class; //根据参数获取public的Method,包含继承自父类的方法  Method method = clazz.getMethod(\u0026#34;draw\u0026#34;, int.class, String.class); System.out.println(\u0026#34;method:\u0026#34; + method); //获取所有public的方法:  Method[] methods = clazz.getMethods(); for (Method m : methods) { System.out.println(\u0026#34;m::\u0026#34; + m); } System.out.println(\u0026#34;=========================================\u0026#34;); //获取当前类的方法包含private,该方法无法获取继承自父类的method  Method method1 = clazz.getDeclaredMethod(\u0026#34;drawCircle\u0026#34;); System.out.println(\u0026#34;method1::\u0026#34; + method1); //获取当前类的所有方法包含private,该方法无法获取继承自父类的method  Method[] methods1 = clazz.getDeclaredMethods(); for (Method m : methods1) { System.out.println(\u0026#34;m1::\u0026#34; + m); } } } class Shape { public void draw() { System.out.println(\u0026#34;draw\u0026#34;); } public void draw(int count, String name) { System.out.println(\u0026#34;draw \u0026#34; + name + \u0026#34;,count=\u0026#34; + count); } } class Circle extends Shape { private void drawCircle() { System.out.println(\u0026#34;drawCircle\u0026#34;); } public int getAllCount() { return 100; } } 输出结果:\nmethod:public void com.my_reflection.basic_usage.Shape.draw(int,java.lang.String)\rm::public int com.my_reflection.basic_usage.Circle.getAllCount()\rm::public void com.my_reflection.basic_usage.Shape.draw()\rm::public void com.my_reflection.basic_usage.Shape.draw(int,java.lang.String)\rm::public final void java.lang.Object.wait() throws java.lang.InterruptedException\rm::public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException\rm::public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException\rm::public boolean java.lang.Object.equals(java.lang.Object)\rm::public java.lang.String java.lang.Object.toString()\rm::public native int java.lang.Object.hashCode()\rm::public final native java.lang.Class java.lang.Object.getClass()\rm::public final native void java.lang.Object.notify()\rm::public final native void java.lang.Object.notifyAll()\r=========================================\rmethod1::private void com.my_reflection.basic_usage.Circle.drawCircle()\rm1::public int com.my_reflection.basic_usage.Circle.getAllCount()\rm1::private void com.my_reflection.basic_usage.Circle.drawCircle()\r方法api\n   方法返回值 方法名称 方法说明     Object invoke(Object obj, Object\u0026hellip; args) 对带有指定参数的指定对象调用由此 Method 对象表示的底层方法。   Class\u0026lt;?\u0026gt; getReturnType() 返回一个 Class 对象，该对象描述了此 Method 对象所表示的方法的正式返回类型,即方法的返回类型   Type getGenericReturnType() 返回表示由此 Method 对象所表示方法的正式返回类型的 Type 对象，也是方法的返回类型。   Class\u0026lt;?\u0026gt;[] getParameterTypes() 按照声明顺序返回 Class 对象的数组，这些对象描述了此 Method 对象所表示的方法的形参类型。即返回方法的参数类型组成的数组   Type[] getGenericParameterTypes() 按照声明顺序返回 Type 对象的数组，这些对象描述了此 Method 对象所表示的方法的形参类型的，也是返回方法的参数类型   String getName() 以 String 形式返回此 Method 对象表示的方法名称，即返回方法的名称   boolean isVarArgs() 判断方法是否带可变参数，如果将此方法声明为带有可变数量的参数，则返回 true；否则，返回 false。   String toGenericString() 返回描述此 Method 的字符串，包括类型参数。    getReturnType方法/getGenericReturnType方法都是获取Method对象表示的方法的返回类型，只不过前者返回的Class类型后者返回的Type(前面已分析过)，Type就是一个接口而已，在Java8中新增一个默认的方法实现，返回的就参数类型信息\n而getParameterTypes/getGenericParameterTypes也是同样的道理，都是获取Method对象所表示的方法的参数类型，其他方法与前面的Field和Constructor是类似的。\n"}),a.add({id:140,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/2bm8trpqzx/',title:"发声 具体训练方法",section:"自信",content:"先简单了解一下我们的语音产生原理：人的发音是由多个系统协作完成的\r#\r\r 人的发音是由多个系统协作完成的   1、众所周知，肺储存空气。通过呼吸系统，空气进入肺部，在说话时腹肌收缩使横膈膜向上，挤出肺部的空气，形成气流。肺部呼出的气流是语音产生的原动力，依靠呼吸系统构建的动力系统，产生气流及声门下压力。 2、气流来到振动系统，在动力作用下，声带产生振动，形成基础的声音。 3、声音通过咽腔、口腔、鼻腔、胸腔等共鸣腔体对声音进行调制，最后经过唇、齿、舌、腭构音器官的精细加工形成最终的语音。  【以下是一些具体训练方法】\r#\r\r一、练共鸣腔让你的声音浑厚。\r#\r\r二、练气息，为你说话提供动力\r#\r\r三、练咬字器官，助你发音清晰响亮。\r#\r\r四、练好普通话的声调，增强你的语言魅力。参考以下的方法感受一下发音时胸腔的震动，以及声音的浑厚度。\r#\r\r1、用非常低沉的声音叹气：哎\u0026hellip;\u0026hellip;（练习15次以上）\n2、闭着嘴巴发音：嗯——（延长音，一口气一次，练15次以上）\n3、发延长的音：yu——（一口气一次，练15次以上）\n如果你想要更稳定有力的胸腔共鸣，可以扩展咽腔。方法如下：\n1、闭着嘴打哈欠，注意要挺软腭，咽壁绷紧，放松下巴，舌尖轻轻抵住下齿，尽量把舌根往下压，体会咽腔的扩张感。（至少做20个）\n2、深吸气，吸气时不要耸肩，不能抬胸，小声地持续发“yu”，最好一口气坚持发音15秒以上。同时应该注意：舌根降下去，舌面呈凹槽状，软腭提起，嘴巴搓圆，把力量集中在唇部的中间。\n注：要特意训练口腔，加大口腔后部的空间，提起颧肌，打开牙关，挺起软腭，放松下巴 ，这些要经常训练。 说话的时候尽量把口咽腔扩展开，不然，舌骨向后上方移动，牵动喉头上起，声音通道变窄，咬字就会紧，喉部肌肉没有弹性，就会造成发声的紧张吃力，发音不仅暗沉，还很扁。\n练气息丹田是气的泵。\n《难经.六十六难》云:“丹田者，人之根本也。”又说:“脐下动气者，人之生命也。 ”脐下就是指丹田，丹田是生命的大本营，是气的工厂和仓库，是人体全身“气”的营运供应中心。\n丹田是气的泵，气息聚集在丹田，随时可以供输全身，当然也为我们的播音或平时健康用嗓提供良好的服务。\n其实，刚刚开始学习的时候，对丹田的感受不是很强烈的。我们可以先用腹式呼吸， 牵动你的丹田，让你有丹田位置的感受。经常有意识地训练，感受就会越来越明显，然后才会有丹田运气的表现，精气会越来越足，够支撑你的发声。\n腹式呼吸：\r#\r\r放松肩部，鼻子吸气，嘴巴呼气，横膈膜会下降，腹压增加，感觉好像是空气直接进入腹部，腹部会自动隆起，隆起的幅度要尽当时的能力，尽量达到极限量。 然后用口慢慢呼气，腹壁下陷恢复自然状态。\n具体练习方法：\r#\r\r1、憋气吸气下沉，憋住，看看能不能憋1—2分钟，实在忍不住的时候，连接胸部和腹部的肌肉会颤抖，那里是横膈膜所在地。这个要大量练习。\n2、假装擤鼻涕只用鼻子吸气下沉，憋一会儿，然后快速地用鼻子把气“擤”出去，同时感受横膈膜的上下弹动。这个环节的练习可以增强对横膈膜的敏感度。\n3、吸气下沉，一口气不断，发“si”音。这个过程一定要慢，气息输出要均匀，同时计算一下时间，看看自己一口气可以坚持多久。多练几次，循序渐进。\n进阶：保持气息，形成支撑。\r#\r\r鼻子吸入气息，横膈膜下降，保持气息，憋几秒钟，然后嘴巴微张，很慢很慢地吹出气息，看看一口气是否可以平稳地输出15秒，同时体会气流被拉住的感觉。\n进阶：气息和声音结合，练气为主，发声为辅。\r#\r\r1、提起颧肌，打开牙关，挺软腭放松下巴的前提下，轻柔舒服地发a音，感受热气从嘴巴呼出，声音稳定、小声地发出，一口气一次，尽量拉长发音，反复练习。\n2、双手插腰，一口气快速用力的小声发“hu”的音，体会气息从小腹到额咽处冲出的感觉，腹部及横膈膜会弹动。反复练习。\n练唇舌\r#\r\r唇部操可以增强唇部的力量和灵活性\n撅唇咧唇：\n在提颧肌的情况下，唇部沿着牙齿向中间撮合，再慢慢展开。这样反复练习20-30次，颧肌发酸，嘴唇酸麻发热都是正常的副作用。\n绕唇：\n嘴巴合拢撅起来顺时针绕15圈，逆时针绕15圈。\n喷唇：\n嘴巴撅起来，稍微抿嘴把一半的唇部裹进去，用力喷唇，发出“popo”的声音。练习30次。\n唇的力量集中很重要！多练习唇部操可以增强你对唇部动程的敏感度，便于察觉调整再正确训练。\n发音时要把力量集中在上唇中央三分之一的部位，做到唇齿相依，唇不可以离开齿，在活动时唇部内缘要有较强的收束力，口型动作的滑行要自然。\n舌部操练习舌头的弹性\n弹舌：\n舌尖顶住上齿龈，抵挡住气流再突然放开，爆发出“t—t”的声音。练习30次。\n顶舌：\n紧闭唇部，舌尖顶住左右内脸颊，顶左边一次停留一秒，再顶右边。反复训练共30次。\n绕舌：\n紧闭唇部，舌尖在唇部内缘360度绕，顺时针15圈，逆时针15圈。\n舌头的力量要集中\n发音部位上要把力使在成阻部位的中央，不可以让舌体的接触面太大，如果这样，力量就会分散， 字音就不响亮了。舌体要向中纵线收拢，这样就有利于发音时舌头的动作弹动有力量。\n读一读绕口令，练口齿，练气息。\r#\r\r刚刚开始练习绕口令，不要追求速度。\n先追求发音、调值的准确度， 慢慢追求其韵律感，气托声，声传情。\n搬白布 爸爸搬白布，伯伯搬柏木； 爸爸不搬柏木搬白布， 伯伯不搬白布搬柏木。\n端汤\n老唐端蛋汤， 踏凳登宝塔， 只因凳太滑， 汤洒汤烫塔。\n老罗拉了一车梨\n老罗拉了一车梨， 老李拉了一车栗。 老罗人称大力罗， 老李人称李大力。 老罗拉梨做梨酒， 老李拉栗去换梨。\n两个棋迷\n一个姓米， 一个姓齐； 米棋迷， 米棋迷， 一起来下棋。 米棋迷要吃齐棋迷的车。\n九与酒\n九月九，九个酒迷喝醉酒。 九个酒杯九杯酒，九个酒迷喝九口。 喝罢九口酒，又倒九杯酒。 九个酒迷端起酒，“咕咚、咕咚”又九口。 九杯酒，酒九口，喝罢酒九个酒迷醉了酒。\n大嫂子和大小子 一个大嫂子，一个大小子。 大嫂子跟大小子比包饺子， 看是大嫂子包的饺子好， 还是大小子包的饺子好， 再看大嫂子包的饺子少， 还是大小子包的饺子少。 大嫂子包的饺子又小又好又不少， 大小子包的饺子又小又少又不好。\n练好普通话的声调，增强你的语言魅力。\r#\r\r声调是语音结构中很重要的一个部分。 它的作用和声母韵母一样重要，如果声调没读准确，说出来的话就会产生歧义，自然就会影响你和别人的交流。 反之，如果你的普通话声调读得错落有致，使得音节抑扬起伏，你说的话就会给别人带来听觉上的美感，旁人和你交流起来就是一种享受。\n什么是声调？\n声调是汉语音节所固有的，可以区别意义的声音的高低升降、曲直长短的变化形式。\n普通话声调有四个调类：阴平、阳平、上声、去声。就是我们通常说的一声二声三声和四声。 为了便于学习普通话，还需要了解一点：调值。 调值就是声调的高低升降和曲直的变化。普通话四声的调值分别是： 55（阴平）35（阳平）214（上声）51（去声）【可参考下图】\n调值是有标记方法的\n五度标记法记录一个音节声调的调值，这样就可以更直观地了解声音的高低，使声音形象化，方便大家的学习。【可参考下图】\n竖线表示声音高低，最低点到最高点分为五度，用1、2、3、4、5来表示。\n声调的存在让每一个字有升有降有曲的变化，它们配合起来在语句里自然会有抑扬顿挫的音乐感，再加入你的情感，你说的话就会产生强烈的感染力。\n练好声调是和气息控制紧密联系在一起的\n1、发阴平的时候，气息应该要紧绷着，一口气平稳地发完。【可以读一读下面的字词找找感觉】班 餐 猜 猫卑微 鲜花 芳香 公积金\n2、发阳平起音的时候，气息稍微松一点，扬起来之后，气息越来越紧。3度升到5度的过程中不要晃晃悠悠的。白 蚕 才 唇白银 邮局 同学 足球 联合国\n3、发上声的气息应该是由紧到松再到紧。声带要完全松弛下来才可以降到1度，1度到4度是有一定的时长的，而且这个过程是平滑的弯曲扬上去，不要硬着拐弯。注意气息要稳定，升上去的时候要加强，如果没有气息支撑，整个音节会噎住。\n好 九 写 秒\n宝塔 口角 阻挡 打草稿\n4、去声是全降调（51）气息应该先紧后松，最后是完全放松的状态。注意，起音的音高与阴平一样。\n爸 抱 后 肺\n爱戴 奥秘 顾客 灿烂 动画片\n分享一个绕口令 你可以读一读 兜里装豆，豆装满兜，兜破漏豆。 倒出豆，补破兜，补好兜， 又装豆，装满兜，不漏豆。\n"}),a.add({id:141,href:'/life/docs/english_study/second_language_acquisition/input/',title:"可理解的输入 ",section:"第二语言习得",content:"习得\r#\r\r可理解的输入和过滤的强度是第二语言习得的真正原因\r#\r\r  第一个是可理解的输入，包含i + 1 ，结构有点超出获取者的当前水平\n  第二个是低或弱的情感过滤器，允许输入。(情感过滤器就是至少学习者要保持低抵触/学生不应处于防守状态)\n  最优输入的特征\r#\r\r1.最佳输入是可理解的\r#\r\r2.最佳输入是有趣的\r#\r\r3.最佳输入未按语法顺序排列\r#\r\r4.最佳输入量必须充足\r#\r\r"}),a.add({id:142,href:'/life/docs/javadir/thread/tool/phaser/',title:"Phaser",section:"并发工具 ",content:"Phaser\r#\r\rjava7中引入了一种新的可重复使用的同步屏障,称为移相器Phaser\nPhaser拥有与CyclicBarrier和CountDownLatch类似的功劳.但是这个类提供了更加灵活的应用.CountDownLatch和CyclicBarrier都是只适用于固定数量的参与者.移相器适用于可变数目的屏障,在这个意义上,可以在任何时间注册新的参与者.并且在抵达屏障是可以注销已经注册的参与者.因此,注册到同步移相器的参与者的数目可能会随着时间的推移而变化\n如CyclicBarrier一样,移相器可以重复使用,这意味着当前参与者到达移相器后,可以再一次注册自己并等待另一次到达.因此,移相器会有多代.一旦为某个特定相位注册的所有参与者都到达移相器,就增加相数.相数从零开始,在达到Integer.MAX_VALUE后,再次绕回0.当移相器发生变化时,通过重写onAdvance方法,可以自行可选操作.这个方法也可用于终止移相器.移相器一旦被终止,所有的同步方法就会立即返回,并尝试注册新的失败的参与者\n移相器的另一个重要特征是:移相器可能是分层的,这允许你以树形结构来安排移相器以减少竞争.很明显,更小的组将拥有更少的竞争同步的参与者.因此,将大量的参与者分成较小的组可以减少竞争.虽然创建移相器能增加中的吞吐量,但是这需要更多的开销.最后,移相器的另一个重要的特征在于监控功能,使用独立的对象可以监视移相器的当前状态.监视器可以查询注册到移相器的参与者的数量,以及已经到达和还没有到达某个特定相数的参与者的数量\nPhaser中是通过计数器来控制。在Phaser中计数器叫做parties， 我们可以通过Phaser的构造函数或者register()方法来注册\n通过调用register()方法，我们可以动态的控制phaser的个数。如果我们需要取消注册，则可以调用arriveAndDeregister()方法\n方法\r#\r\r  register()\n  注册一个需要协作的线程。\n  bulkRegister(int parties)\n  批量注册需要协作的线程。\n  arrive()\n  到达屏障直接执行，无需等待其他线程。\n  arriveAndAwaitAdvance()\n  到达屏障，必须等待其他线程。\n  arriveAndDeregister()\n  到达屏障，注销自己，无需等待其他线程到达。\n  onAdvance(int phase, int registeredParties)\n  参与协作的线程都到达屏障后，会调用该方法。\n  例子\r#\r\r case 1  final Phaser phaser = new Phaser(3) { @Override protected boolean onAdvance(int phase, int registeredParties) { System.out.println(phase + \u0026#34;_\u0026#34; + registeredParties); System.out.println(Thread.currentThread().getName() + \u0026#34; 调用了onAdvance方法\u0026#34;); // switch (phase) { // case 0: // System.out.println(\u0026#34;第一阶段，买食材完成啦！总共参与人数：\u0026#34; + registeredParties); // return false; // case 1: // System.out.println(\u0026#34;第二阶段，炒菜完成啦！总共参与人数：\u0026#34; + registeredParties); // return false; // case 2: // System.out.println(\u0026#34;第三阶段，吃完饭啦！总共参与人数：\u0026#34; + registeredParties); // return false; // default: // return true; // }  return super.onAdvance(phase, registeredParties); } }; for (int i = 1; i \u0026lt;= 1 * 3; i++) { if (i \u0026gt;= 2 \u0026amp;\u0026amp; i % 3 == 1) { System.out.println(\u0026#34;i:\u0026#34; + i); // phaser.bulkRegister(3);  } new Thread(String.valueOf(i)) { public void run() { //注册 // phaser.register();  System.out.println(Thread.currentThread().getName()+\u0026#34;---------------------\u0026#34;); //注册并释放  phaser.arriveAndAwaitAdvance(); System.out.println(Thread.currentThread().getName() + \u0026#34;....................\u0026#34;); } }.start(); } "}),a.add({id:143,href:'/life/docs/operating_system/windows/dos_network/',title:" DOS网络操作命令 ",section:"windows学习与使用 ",content:"DOS网络操作命令\r#\r\r netstat -ano (列出所有端口的情况)  PS C:\\Users\\noatn\u0026gt; netstat -ano\r活动连接\r协议 本地地址 外部地址 状态 PID\rTCP 0.0.0.0:135 0.0.0.0:0 LISTENING 1028\rTCP 0.0.0.0:445 0.0.0.0:0 LISTENING 4\rTCP 0.0.0.0:1024 0.0.0.0:0 LISTENING 852\rTCP 0.0.0.0:1025 0.0.0.0:0 LISTENING 2232\rTCP 0.0.0.0:3306 0.0.0.0:0 LISTENING 3672\rTCP 0.0.0.0:5040 0.0.0.0:0 LISTENING 5660\rTCP 0.0.0.0:7680 0.0.0.0:0 LISTENING 6628\rTCP 0.0.0.0:49664 0.0.0.0:0 LISTENING 868\rTCP 0.0.0.0:49665 0.0.0.0:0 LISTENING 784\rTCP 0.0.0.0:49666 0.0.0.0:0 LISTENING 1580\rTCP 0.0.0.0:49667 0.0.0.0:0 LISTENING 1316\rTCP 127.0.0.1:1036 0.0.0.0:0 LISTENING 2536\rTCP 127.0.0.1:1155 127.0.0.1:1156 ESTABLISHED 1204\rTCP 127.0.0.1:1156 127.0.0.1:1155 ESTABLISHED 1204\rTCP 127.0.0.1:1157 127.0.0.1:1158 ESTABLISHED 1204\rTCP 127.0.0.1:1158 127.0.0.1:1157 ESTABLISHED 1204\rTCP 127.0.0.1:6942 0.0.0.0:0 LISTENING 1204\rTCP 127.0.0.1:10000 0.0.0.0:0 LISTENING 3556\rTCP 127.0.0.1:63342 0.0.0.0:0 LISTENING 1204\rTCP 192.168.31.208:139 0.0.0.0:0 LISTENING 4\rTCP 192.168.31.208:3810 104.18.25.243:80 ESTABLISHED 6976\rTCP 192.168.31.208:4258 13.107.3.254:443 ESTABLISHED 6976\rTCP 192.168.31.208:4368 40.90.189.152:443 ESTABLISHED 3700\rTCP 192.168.31.208:4571 111.231.211.246:443 FIN_WAIT_1 9324\rTCP 192.168.31.208:4589 111.12.62.190:443 LAST_ACK 9324\rTCP 192.168.31.208:4593 185.199.108.153:443 FIN_WAIT_1 9324\rTCP 192.168.31.208:4595 112.25.253.5:443 ESTABLISHED 9324\rTCP 192.168.31.208:4596 223.85.58.79:443 CLOSE_WAIT 9324\rTCP 192.168.31.208:4600 223.85.58.79:443 LAST_ACK 9324\rTCP 192.168.31.208:4602 192.144.173.136:7823 ESTABLISHED 9324\rTCP 192.168.31.208:4609 192.30.252.153:80 LAST_ACK 9324\rTCP 192.168.31.208:4610 192.30.252.153:80 LAST_ACK 9324\rTCP 192.168.31.208:4611 192.30.252.153:80 LAST_ACK 9324\rTCP 192.168.31.208:4616 209.197.3.24:443 LAST_ACK 9324\rTCP 192.168.31.208:4617 140.205.33.7:443 TIME_WAIT 0\rTCP [::]:135 [::]:0 LISTENING 1028\rTCP [::]:445 [::]:0 LISTENING 4\rTCP [::]:1024 [::]:0 LISTENING 852\rTCP [::]:1025 [::]:0 LISTENING 2232\rTCP [::]:3306 [::]:0 LISTENING 3672\rTCP [::]:7680 [::]:0 LISTENING 6628\rTCP [::]:49664 [::]:0 LISTENING 868\rTCP [::]:49665 [::]:0 LISTENING 784\rTCP [::]:49666 [::]:0 LISTENING 1580\rTCP [::]:49667 [::]:0 LISTENING 1316\rUDP 0.0.0.0:500 *:* 3540\rUDP 0.0.0.0:4500 *:* 3540\rUDP 0.0.0.0:5050 *:* 5660\rUDP 0.0.0.0:5353 *:* 6324\rUDP 0.0.0.0:5353 *:* 9324\rUDP 0.0.0.0:5353 *:* 6324\rUDP 0.0.0.0:5353 *:* 8372\rUDP 0.0.0.0:5353 *:* 10032\rUDP 0.0.0.0:5353 *:* 10032\rUDP 0.0.0.0:5353 *:* 9324\rUDP 0.0.0.0:5353 *:* 8372\rUDP 0.0.0.0:5353 *:* 2076\rUDP 0.0.0.0:5355 *:* 2076\rUDP 0.0.0.0:49665 *:* 3636\rUDP 0.0.0.0:57076 *:* 2076\rUDP 0.0.0.0:58215 *:* 2076\rUDP 127.0.0.1:1900 *:* 9868\rUDP 127.0.0.1:40000 *:* 3556\rUDP 127.0.0.1:49664 *:* 4008\rUDP 127.0.0.1:51112 *:* 6976\rUDP 127.0.0.1:62732 *:* 9868\rUDP 192.168.31.208:137 *:* 4\rUDP 192.168.31.208:138 *:* 4\rUDP 192.168.31.208:1900 *:* 9868\rUDP 192.168.31.208:2177 *:* 8424\rUDP 192.168.31.208:62731 *:* 9868\rUDP [::]:500 *:* 3540\rUDP [::]:4500 *:* 3540\rUDP [::]:5353 *:* 6324\rUDP [::]:5353 *:* 2076\rUDP [::]:5353 *:* 8372\rUDP [::]:5353 *:* 10032\rUDP [::]:5353 *:* 9324\rUDP [::]:5355 *:* 2076\rUDP [::]:57076 *:* 2076\rUDP [::]:58215 *:* 2076\rUDP [::1]:1900 *:* 9868\rUDP [::1]:62730 *:* 9868\rUDP [fe80::6d6c:6e66:c80:456b%16]:1900 *:* 9868\rUDP [fe80::6d6c:6e66:c80:456b%16]:2177 *:* 8424\rUDP [fe80::6d6c:6e66:c80:456b%16]:62729 *:* 9868\r 查看被占用端口对应的PID，输入命令： netstat -ano|findstr \u0026lsquo;3306\u0026rsquo; ，回车，记下最后一位数字，即PID,这里是3672  PS C:\\Users\\noatn\u0026gt; netstat -ano|findstr '3306' TCP 0.0.0.0:3306 0.0.0.0:0 LISTENING 3672\rTCP [::]:3306 [::]:0 LISTENING 3672\r ipconfig用法  PS C:\\WINDOWS\\system32\u0026gt; ipconfig /?\r用法:\ripconfig [/allcompartments] [/? | /all |\r/renew [adapter] | /release [adapter] |\r/renew6 [adapter] | /release6 [adapter] |\r/flushdns | /displaydns | /registerdns |\r/showclassid adapter |\r/setclassid adapter [classid] |\r/showclassid6 adapter |\r/setclassid6 adapter [classid] ]\r其中\radapter 连接名称\r(允许使用通配符 * 和 ?，参见示例)\r选项:\r/? 显示此帮助消息\r/all 显示完整配置信息。\r/release 释放指定适配器的 IPv4 地址。\r/release6 释放指定适配器的 IPv6 地址。\r/renew 更新指定适配器的 IPv4 地址。\r/renew6 更新指定适配器的 IPv6 地址。\r/flushdns 清除 DNS 解析程序缓存。\r/registerdns 刷新所有 DHCP 租用并重新注册 DNS 名称\r/displaydns 显示 DNS 解析程序缓存的内容。\r/showclassid 显示适配器允许的所有 DHCP 类 ID。\r/setclassid 修改 DHCP 类 ID。\r/showclassid6 显示适配器允许的所有 IPv6 DHCP 类 ID。\r/setclassid6 修改 IPv6 DHCP 类 ID。\r默认情况下，仅显示绑定到 TCP/IP 的每个适配器的 IP 地址、子网掩码和\r默认网关。\r对于 Release 和 Renew，如果未指定适配器名称，则会释放或更新所有绑定\r到 TCP/IP 的适配器的 IP 地址租用。\r对于 Setclassid 和 Setclassid6，如果未指定 ClassId，则会删除 ClassId。\r示例:\r\u0026gt; ipconfig ... 显示信息\r\u0026gt; ipconfig /all ... 显示详细信息\r\u0026gt; ipconfig /renew ... 更新所有适配器\r\u0026gt; ipconfig /renew EL* ... 更新所有名称以 EL 开头\r的连接\r\u0026gt; ipconfig /release *Con* ... 释放所有匹配的连接，\r例如“有线以太网连接 1”或\r“有线以太网连接 2”\r\u0026gt; ipconfig /allcompartments ... 显示有关所有隔离舱的\r信息\r\u0026gt; ipconfig /allcompartments /all ... 显示有关所有隔离舱的\r详细信息\r1.显示网络协议配置 ipconfig 如果要查看跟详细的网络配置信息 /all 包括MAC地址、IP地址、子网掩码、默认网关、DNS\r2.更新IP地址 ipconfig/renew\r3.初始化网络配置 ipconfig/registerdns 将网络状态还原到初始状态\r4.显示本地DNS信息 ipconfig/displaydns\r5.清除本地DNS缓存内容 ipconfig/flushdns\r6.取消IP地址租用 ipconfig/release DHCP服务器：动态获取到IP地址及其他网络设置\r7.备份网络设置 ipconfig/all\u0026gt;c:\\bak.txt 将所有网络配置信息备份到bak.txt中\r ipconfig 举例用法 显示本地DNS信息  PS C:\\WINDOWS\\system32\u0026gt; ipconfig /displaydns\rWindows IP 配置\r1.0.0.127.in-addr.arpa\r----------------------------------------\r记录名称. . . . . . . : 1.0.0.127.in-addr.arpa.\r记录类型. . . . . . . : 12\r生存时间. . . . . . . : 540319\r数据长度. . . . . . . : 8\r部分. . . . . . . . . : 答案\rPTR 记录 . . . . . . : www.xmind.net\rroot-c3-ca2-2009.ocsp.d-trust.net\r----------------------------------------\r记录名称. . . . . . . : root-c3-ca2-2009.ocsp.d-trust.net\r记录类型. . . . . . . : 5\r生存时间. . . . . . . : 9\r数据长度. . . . . . . : 8\r部分. . . . . . . . . : 答案\rCNAME 记录 . . . . . : ocsp.d-trust.net\r记录名称. . . . . . . : ocsp.d-trust.net\r记录类型. . . . . . . : 1\r生存时间. . . . . . . : 9\r数据长度. . . . . . . : 4\r部分. . . . . . . . . : 答案\rA (主机)记录 . . . . : 213.61.227.196\rhm.baidu.com\r----------------------------------------\r记录名称. . . . . . . : hm.baidu.com\r记录类型. . . . . . . : 5\r生存时间. . . . . . . : 194\r数据长度. . . . . . . : 8\r部分. . . . . . . . . : 答案\rCNAME 记录 . . . . . : hm.e.shifen.com\r记录名称. . . . . . . : hm.e.shifen.com\r记录类型. . . . . . . : 1\r生存时间. . . . . . . : 194\r数据长度. . . . . . . : 4\r部分. . . . . . . . . : 答案\rA (主机)记录 . . . . : 39.156.66.179\rwww.xmind.net\r----------------------------------------\r没有 AAAA 类型的记录\rwww.xmind.net\r----------------------------------------\r记录名称. . . . . . . : www.xmind.net\r记录类型. . . . . . . : 1\r生存时间. . . . . . . : 540319\r数据长度. . . . . . . : 4\r部分. . . . . . . . . : 答案\rA (主机)记录 . . . . : 127.0.0.1\rzhidao.baidu.com\r----------------------------------------\r记录名称. . . . . . . : zhidao.baidu.com\r记录类型. . . . . . . : 5\r生存时间. . . . . . . : 20\r数据长度. . . . . . . : 8\r部分. . . . . . . . . : 答案\rCNAME 记录 . . . . . : iknow.baidu.com\r记录名称. . . . . . . : iknow.baidu.com\r记录类型. . . . . . . : 5\r生存时间. . . . . . . : 20\r数据长度. . . . . . . : 8\r部分. . . . . . . . . : 答案\rCNAME 记录 . . . . . : iknow.n.shifen.com\r记录名称. . . . . . . : iknow.n.shifen.com\r记录类型. . . . . . . : 1\r生存时间. . . . . . . : 20\r数据长度. . . . . . . : 4\r部分. . . . . . . . . : 答案\rA (主机)记录 . . . . : 112.34.111.123\rblog.csdn.net\r----------------------------------------\r记录名称. . . . . . . : blog.csdn.net\r记录类型. . . . . . . : 1\r生存时间. . . . . . . : 3\r数据长度. . . . . . . : 4\r部分. . . . . . . . . : 答案\rA (主机)记录 . . . . : 47.95.47.253\radservice.google.com\r----------------------------------------\r记录名称. . . . . . . : adservice.google.com\r记录类型. . . . . . . : 5\r生存时间. . . . . . . : 11\r数据长度. . . . . . . : 8\r部分. . . . . . . . . : 答案\rCNAME 记录 . . . . . : pagead46.l.doubleclick.net\r记录名称. . . . . . . : pagead46.l.doubleclick.net\r记录类型. . . . . . . : 1\r生存时间. . . . . . . : 11\r数据长度. . . . . . . : 4\r部分. . . . . . . . . : 答案\rA (主机)记录 . . . . : 203.208.50.58\r记录名称. . . . . . . : pagead46.l.doubleclick.net\r记录类型. . . . . . . : 1\r生存时间. . . . . . . : 11\r数据长度. . . . . . . : 4\r部分. . . . . . . . . : 答案\rA (主机)记录 . . . . : 203.208.50.57\r记录名称. . . . . . . : pagead46.l.doubleclick.net\r记录类型. . . . . . . : 1\r生存时间. . . . . . . : 11\r数据长度. . . . . . . : 4\r部分. . . . . . . . . : 答案\rA (主机)记录 . . . . : 203.208.50.45\r 检测自己的ip ipconfig  C:\\Users\\noatn\u0026gt;ipconfig\rWindows IP 配置\r以太网适配器 以太网:\r媒体状态 . . . . . . . . . . . . : 媒体已断开连接\r连接特定的 DNS 后缀 . . . . . . . :\r无线局域网适配器 本地连接* 1:\r媒体状态 . . . . . . . . . . . . : 媒体已断开连接\r连接特定的 DNS 后缀 . . . . . . . :\r无线局域网适配器 本地连接* 2:\r媒体状态 . . . . . . . . . . . . : 媒体已断开连接\r连接特定的 DNS 后缀 . . . . . . . :\r以太网适配器 以太网 2:\r媒体状态 . . . . . . . . . . . . : 媒体已断开连接\r连接特定的 DNS 后缀 . . . . . . . :\r无线局域网适配器 WLAN:\r连接特定的 DNS 后缀 . . . . . . . :\r本地链接 IPv6 地址. . . . . . . . : fe80::6d6c:6e66:c80:456b%16\rIPv4 地址 . . . . . . . . . . . . : 192.168.31.208\r子网掩码 . . . . . . . . . . . . : 255.255.255.0\r默认网关. . . . . . . . . . . . . : 192.168.31.1\r   \r 检测是否连上外网 ping url  C:\\Users\\noatn\u0026gt;ping 192.168.31.208\r正在 Ping 192.168.31.208 具有 32 字节的数据:\r来自 192.168.31.208 的回复: 字节=32 时间\u0026lt;1ms TTL=128\r来自 192.168.31.208 的回复: 字节=32 时间\u0026lt;1ms TTL=128\r来自 192.168.31.208 的回复: 字节=32 时间\u0026lt;1ms TTL=128\r来自 192.168.31.208 的回复: 字节=32 时间\u0026lt;1ms TTL=128\r192.168.31.208 的 Ping 统计信息:\r数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，\r往返行程的估计时间(以毫秒为单位):\r最短 = 0ms，最长 = 0ms，平均 = 0ms\rC:\\Users\\noatn\u0026gt;ping www.baidu.com\r正在 Ping www.baidu.com [39.156.66.14] 具有 32 字节的数据:\r来自 39.156.66.14 的回复: 字节=32 时间=152ms TTL=50\r来自 39.156.66.14 的回复: 字节=32 时间=821ms TTL=50\r来自 39.156.66.14 的回复: 字节=32 时间=76ms TTL=50\r来自 39.156.66.14 的回复: 字节=32 时间=157ms TTL=50\r39.156.66.14 的 Ping 统计信息:\r数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，\r往返行程的估计时间(以毫秒为单位):\r最短 = 76ms，最长 = 821ms，平均 = 301ms\r这个网络情况就是不好的样子time\u0026gt;821毫秒了 ==就是延迟821毫秒\r 清屏命令 cls   C:\\Users\\noatn\u0026gt;dir\r驱动器 C 中的卷没有标签。\r卷的序列号是 1CE3-274F\rC:\\Users\\noatn 的目录\r2020/02/14 18:32 \u0026lt;DIR\u0026gt; .\r2020/02/14 18:32 \u0026lt;DIR\u0026gt; ..\r2020/01/24 13:55 \u0026lt;DIR\u0026gt; .android\r2020/01/23 08:12 100 .gitconfig\r2019/12/19 20:15 \u0026lt;DIR\u0026gt; .IntelliJIdea2017.3\r2020/01/26 17:53 \u0026lt;DIR\u0026gt; .m2\r2020/02/14 18:32 \u0026lt;DIR\u0026gt; .oracle_jre_usage\r2020/01/23 08:14 \u0026lt;DIR\u0026gt; .ssh\r2020/01/14 23:17 \u0026lt;DIR\u0026gt; .translation\r2020/01/20 21:52 \u0026lt;DIR\u0026gt; .vscode\r2020/01/11 16:34 \u0026lt;DIR\u0026gt; 3D Objects\r2020/01/11 16:34 \u0026lt;DIR\u0026gt; Contacts\r2020/02/14 18:32 \u0026lt;DIR\u0026gt; Desktop\r2020/02/14 17:57 \u0026lt;DIR\u0026gt; Documents\r2020/02/14 18:47 \u0026lt;DIR\u0026gt; Downloads\r2020/01/11 16:34 \u0026lt;DIR\u0026gt; Favorites\r2020/01/11 16:34 \u0026lt;DIR\u0026gt; Links\r2020/01/11 16:34 \u0026lt;DIR\u0026gt; Music\r2020/02/14 10:57 \u0026lt;DIR\u0026gt; OneDrive\r2020/01/22 21:45 \u0026lt;DIR\u0026gt; Pictures\r2020/01/11 16:34 \u0026lt;DIR\u0026gt; Saved Games\r2020/01/11 16:34 \u0026lt;DIR\u0026gt; Searches\r2020/01/11 16:34 \u0026lt;DIR\u0026gt; Videos\r1 个文件 100 字节\r22 个目录 91,425,759,232 可用字节\rC:\\Users\\noatn\u0026gt;cls;\r然后就没有任何了\r 系统情况查看 systeminfo  //这里切记不要输入;\rC:\\Users\\noatn\u0026gt;systeminfo\r主机名: DESKTOP-GN2SF7M\rOS 名称: Microsoft Windows 10 家庭中文版\rOS 版本: 10.0.18363 暂缺 Build 18363\rOS 制造商: Microsoft Corporation\rOS 配置: 独立工作站\rOS 构件类型: Multiprocessor Free\r注册的所有人: noatnu@163.com\r注册的组织: 暂缺\r产品 ID: 00342-35097-36011-AAOEM\r初始安装日期: 2019/12/18, 21:19:37\r系统启动时间: 2020/2/14, 18:40:59\r系统制造商: LENOVO\r系统型号: 20KSA00FCD\r系统类型: x64-based PC\r处理器: 安装了 1 个处理器。\r[01]: Intel64 Family 6 Model 142 Stepping 10 GenuineIntel ~1801 Mhz\rBIOS 版本: LENOVO R0PET42W (1.19 ), 2018/6/14\rWindows 目录: C:\\WINDOWS\r系统目录: C:\\WINDOWS\\system32\r启动设备: \\Device\\HarddiskVolume5\r系统区域设置: zh-cn;中文(中国)\r输入法区域设置: zh-cn;中文(中国)\r时区: (UTC+08:00) 北京，重庆，香港特别行政区，乌鲁木齐\r物理内存总量: 16,281 MB\r可用的物理内存: 10,187 MB\r虚拟内存: 最大值: 18,713 MB\r虚拟内存: 可用: 11,653 MB\r虚拟内存: 使用中: 7,060 MB\r页面文件位置: C:\\pagefile.sys\r域: WORKGROUP\r登录服务器: \\\\DESKTOP-GN2SF7M\r修补程序: 安装了 9 个修补程序。\r[01]: KB4534132\r[02]: KB4513661\r[03]: KB4516115\r[04]: KB4517245\r[05]: KB4521863\r[06]: KB4524569\r[07]: KB4528759\r[08]: KB4537759\r[09]: KB4528760\r网卡: 安装了 3 个 NIC。\r[01]: Realtek PCIe GbE Family Controller\r连接名: 以太网\r状态: 媒体连接已中断\r[02]: Realtek 8821CE Wireless LAN 802.11ac PCI-E NIC\r连接名: WLAN\r启用 DHCP: 是\rDHCP 服务器: 192.168.31.1\rIP 地址\r[01]: 192.168.31.208\r[02]: fe80::6d6c:6e66:c80:456b\r[03]: Sangfor SSL VPN CS Support System VNIC\r连接名: 以太网 2\r状态: 媒体连接已中断\rHyper-V 要求: 虚拟机监视器模式扩展: 是\r固件中已启用虚拟化: 否\r二级地址转换: 是\r数据执行保护可用: 是\r//具体用法\rC:\\Users\\noatn\u0026gt;SYSTEMINFO /?\rSYSTEMINFO [/S system [/U username [/P [password]]]] [/FO format] [/NH]\r描述:\r该工具显示本地或远程机器(包括服务包级别)的操作系统配置的信息。\r参数列表:\r/S system 指定要连接的远程系统。\r/U [domain\\]user 指定应该在哪个用户上下文执行命令。\r/P [password] 指定给定用户上下文的密码。如果省略则\r提示输入。\r/FO format 指定显示结果的格式。\r有效值: \u0026quot;TABLE\u0026quot;、\u0026quot;LIST\u0026quot;、\u0026quot;CSV\u0026quot;。\r/NH 指定“列标题”不应该在输出中显示。\r只对 \u0026quot;TABLE\u0026quot; 和 \u0026quot;CSV\u0026quot; 格式有效。\r/? 显示帮助消息。\r例如:\rSYSTEMINFO\rSYSTEMINFO /?\rSYSTEMINFO /S system\rSYSTEMINFO /S system /U user\rSYSTEMINFO /S system /U domain\\user /P password /FO TABLE\rSYSTEMINFO /S system /FO LIST\rSYSTEMINFO /S system /FO CSV /NH\r  内存查看 mem (部分windows不支持了或者缺失此条程序)\n  磁盘检测 chkdsk D:\n  PS C:\\WINDOWS\\system32\u0026gt; chkdsk /?\r检查磁盘并显示状态报告。\rCHKDSK [volume[[path]filename]]] [/F] [/V] [/R] [/X] [/I] [/C] [/L[:size]] [/B] [/scan] [/spotfix]\rvolume 指定驱动器号(后面跟一个冒号)、\r装入点或卷名。\rfilename 仅 FAT/FAT32: 指定要检查\r碎片的文件。\r/F 修复磁盘上的错误。\r/V 在 FAT/FAT32 上: 显示磁盘上每个文件的\r完整路径和名称。\r在 NTFS 上: 显示清理消息(如果有)。\r/R 查找坏扇区并恢复可读信息\r(未指定 /scan 时，隐含 /F)。\r/L:size 仅 NTFS: 将日志文件大小更改为指定\r的 KB 数。如果未指定大小，则显示\r当前大小。\r/X 如果必要，则先强制卸除卷。\r该卷的所有打开的句柄都将无效\r(隐含 /F)。\r/I 仅 NTFS: 对索引项进行强度较小的\r检查。\r/C 仅 NTFS: 跳过文件夹结构内的\r循环检查。\r/B 仅 NTFS: 重新评估该卷上的坏簇\r(隐含 /R)\r/scan 仅 NTFS: 在卷上运行联机扫描\r/forceofflinefix 仅 NTFS: (必须与 \u0026quot;/scan\u0026quot; 一起使用)\r跳过所有联机修复；找到的所有故障都\r排队等待脱机修复(即 \u0026quot;chkdsk /spotfix\u0026quot;)。\r/perf 仅 NTFS: (必须与 \u0026quot;/scan\u0026quot; 一起使用)\r使用更多系统资源尽快完成\r扫描。这可能会对系统中运行的其他任务的性能\r造成负面影响。\r/spotfix 仅 NTFS: 在卷上运行点修复\r/sdcleanup 仅 NTFS: 回收不需要的安全描述符\r数据(隐含 /F)。\r/offlinescanandfix 在卷上运行脱机扫描并进行修复。\r/freeorphanedchains 仅 FAT/FAT32/exFAT: 释放所有孤立的簇链\r而不恢复其内容。\r/markclean 仅 FAT/FAT32/exFAT: 如果未检测到损坏，则将卷\r标记为干净，即使未指定 /F 也是如此。\r/I 或 /C 开关通过跳过对卷的某些检查，\r来减少运行 Chkdsk 所需的时间。\rE:\\temp\u0026gt;chkdsk D:\r访问被拒绝，因为你没有足够的权限，或\r该磁盘可能被另一个进程锁定。\r你必须调用这一在提升模式下运行的实用工具\r并确保磁盘处于解锁状态。\r采用管理员登陆\rPS C:\\WINDOWS\\system32\u0026gt; chkdsk d:\r文件系统的类型是 NTFS。\r卷标是 新加卷。\r警告! 未指定 /F 参数。\r将在只读模式下运行 CHKDSK。\r阶段 1: 检查基本文件系统结构...\r已处理 143872 个文件记录。\r文件验证完成。\r已处理 37 个大型文件记录。\r已处理 0 个错误的文件记录。\r阶段 2: 检查文件名链接...\r已处理 92 个重新解析记录。\r已处理 178806 个索引项。\r索引验证完成。\r已扫描到 0 个未索引文件。\r已将 0 个未编制索引的文件恢复到回收箱。\r已处理 92 个重新解析记录。\r阶段 3: 检查安全描述符...\r安全描述符验证完成。\r已处理 17467 个数据文件。\rWindows 已扫描文件系统并且没有发现问题。\r无需采取进一步操作。\r总共有 307199999 KB 磁盘空间。\r79964 个文件中有 26412124 KB。\r17469 个索引 18832 KB。\r坏扇区 0 KB。\r系统正在使用 219231 KB。\r日志文件占用了 65536 KB。\r磁盘上 280549812 KB 可用。\r每个分配单元中有 4096 字节。\r磁盘上共有 76799999 个分配单元。\r磁盘上有 70137453 个可用的分配单元。\r dos 版本  E:\\temp\u0026gt;ver\rMicrosoft Windows [版本 10.0.18363.592]\r 探测对方计算机名  netstat -a 192.168.2.8\rPS C:\\Users\\noatn\u0026gt; netstat -a 192.168.2.8\r活动连接\r协议 本地地址 外部地址 状态\rTCP 0.0.0.0:135 DESKTOP-GN2SF7M:0 LISTENING\rTCP 0.0.0.0:445 DESKTOP-GN2SF7M:0 LISTENING\rTCP 0.0.0.0:1024 DESKTOP-GN2SF7M:0 LISTENING\rTCP 0.0.0.0:1025 DESKTOP-GN2SF7M:0 LISTENING\rTCP 0.0.0.0:3306 DESKTOP-GN2SF7M:0 LISTENING\rTCP 0.0.0.0:5040 DESKTOP-GN2SF7M:0 LISTENING\rTCP 0.0.0.0:7680 DESKTOP-GN2SF7M:0 LISTENING\rTCP 0.0.0.0:49664 DESKTOP-GN2SF7M:0 LISTENING\rTCP 0.0.0.0:49665 DESKTOP-GN2SF7M:0 LISTENING\rTCP 0.0.0.0:49666 DESKTOP-GN2SF7M:0 LISTENING\rTCP 0.0.0.0:49667 DESKTOP-GN2SF7M:0 LISTENING\rTCP 127.0.0.1:1036 DESKTOP-GN2SF7M:0 LISTENING\rTCP 127.0.0.1:1155 www:1156 ESTABLISHED\rTCP 127.0.0.1:1156 www:nfa ESTABLISHED\rTCP 127.0.0.1:1157 www:1158 ESTABLISHED\rTCP 127.0.0.1:1158 www:1157 ESTABLISHED\rTCP 127.0.0.1:6942 DESKTOP-GN2SF7M:0 LISTENING\rTCP 127.0.0.1:10000 DESKTOP-GN2SF7M:0 LISTENING\rTCP 127.0.0.1:63342 DESKTOP-GN2SF7M:0 LISTENING\rTCP 192.168.31.208:139 DESKTOP-GN2SF7M:0 LISTENING\r 快速诊断网卡故障 ping 127.0.0.1  PS C:\\WINDOWS\\system32\u0026gt; ping 127.0.0.1; 正在 Ping 127.0.0.1 具有 32 字节的数据:\r来自 127.0.0.1 的回复: 字节=32 时间\u0026lt;1ms TTL=128\r来自 127.0.0.1 的回复: 字节=32 时间\u0026lt;1ms TTL=128\r来自 127.0.0.1 的回复: 字节=32 时间\u0026lt;1ms TTL=128\r来自 127.0.0.1 的回复: 字节=32 时间\u0026lt;1ms TTL=128\r127.0.0.1 的 Ping 统计信息:\r数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，\r往返行程的估计时间(以毫秒为单位):\r最短 = 0ms，最长 = 0ms，平均 = 0ms\r 网络连接查看  PS C:\\Users\\noatn\u0026gt; netstat /?\r显示协议统计信息和当前 TCP/IP 网络连接。\rNETSTAT [-a] [-b] [-e] [-f] [-n] [-o] [-p proto] [-r] [-s] [-x] [-t] [interval]\r-a 显示所有连接和侦听端口。\r-b 显示在创建每个连接或侦听端口时涉及的\r可执行程序。在某些情况下，已知可执行程序承载\r多个独立的组件，这些情况下，\r显示创建连接或侦听端口时\r涉及的组件序列。在此情况下，可执行程序的\r名称位于底部 [] 中，它调用的组件位于顶部，\r直至达到 TCP/IP。注意，此选项\r可能很耗时，并且在你没有足够\r权限时可能失败。\r-e 显示以太网统计信息。此选项可以与 -s 选项\r结合使用。\r-f 显示外部地址的完全限定\r域名(FQDN)。\r-n 以数字形式显示地址和端口号。\r-o 显示拥有的与每个连接关联的进程 ID。\r-p proto 显示 proto 指定的协议的连接；proto\r可以是下列任何一个: TCP、UDP、TCPv6 或 UDPv6。如果与 -s\r选项一起用来显示每个协议的统计信息，proto 可以是下列任何一个:\rIP、IPv6、ICMP、ICMPv6、TCP、TCPv6、UDP 或 UDPv6。\r-q 显示所有连接、侦听端口和绑定的\r非侦听 TCP 端口。绑定的非侦听端口\r不一定与活动连接相关联。\r-r 显示路由表。\r-s 显示每个协议的统计信息。默认情况下，\r显示 IP、IPv6、ICMP、ICMPv6、TCP、TCPv6、UDP 和 UDPv6 的统计信息;\r-p 选项可用于指定默认的子网。\r-t 显示当前连接卸载状态。\r-x 显示 NetworkDirect 连接、侦听器和共享\r终结点。\r-y 显示所有连接的 TCP 连接模板。\r无法与其他选项结合使用。\rinterval 重新显示选定的统计信息，各个显示间暂停的\r间隔秒数。按 CTRL+C 停止重新显示\r统计信息。如果省略，则 netstat 将打印当前的\r配置信息一次。\r 网络连接查看 数字形式显示地址和端口号  PS C:\\Users\\noatn\u0026gt; netstat -n\r活动连接\r协议 本地地址 外部地址 状态\rTCP 127.0.0.1:1155 127.0.0.1:1156 ESTABLISHED\rTCP 127.0.0.1:1156 127.0.0.1:1155 ESTABLISHED\rTCP 127.0.0.1:1157 127.0.0.1:1158 ESTABLISHED\rTCP 127.0.0.1:1158 127.0.0.1:1157 ESTABLISHED\rTCP 192.168.31.208:3032 117.18.237.29:80 CLOSE_WAIT\rTCP 192.168.31.208:3312 117.174.50.69:80 ESTABLISHED\rTCP 192.168.31.208:3810 104.18.25.243:80 ESTABLISHED\rTCP 192.168.31.208:3870 203.119.218.69:443 ESTABLISHED\rTCP 192.168.31.208:3880 40.119.211.203:443 ESTABLISHED\rTCP 192.168.31.208:3931 117.174.50.69:80 ESTABLISHED\rTCP 192.168.31.208:3982 213.61.227.196:80 LAST_ACK\rTCP 192.168.31.208:4021 59.110.73.45:443 LAST_ACK\rTCP 192.168.31.208:4023 112.29.158.132:443 LAST_ACK\rTCP 192.168.31.208:4026 112.29.158.132:443 LAST_ACK\rTCP 192.168.31.208:4027 112.18.249.241:443 TIME_WAIT\rTCP 192.168.31.208:4028 112.18.249.241:443 TIME_WAIT\rTCP 192.168.31.208:4029 47.95.47.253:443 TIME_WAIT\rTCP 192.168.31.208:4030 39.107.189.15:443 LAST_ACK\rTCP 192.168.31.208:4032 112.29.158.132:443 LAST_ACK\rTCP 192.168.31.208:4035 112.29.158.132:443 LAST_ACK\rTCP 192.168.31.208:4036 52.114.128.44:443 TIME_WAIT\rTCP 192.168.31.208:4038 131.253.33.254:443 ESTABLISHED\rTCP 192.168.31.208:4039 204.79.197.222:443 ESTABLISHED\rTCP 192.168.31.208:4040 204.79.197.222:443 ESTABLISHED\rTCP 192.168.31.208:4041 131.253.33.254:443 ESTABLISHED\rTCP 192.168.31.208:4042 131.253.33.254:443 ESTABLISHED\rTCP 192.168.31.208:4044 62.96.224.156:389 ESTABLISHED\rTCP 192.168.31.208:4045 117.18.237.29:80 ESTABLISHED\rTCP 192.168.31.208:4046 47.95.47.253:443 ESTABLISHED\rTCP 192.168.31.208:4047 117.177.133.243:443 ESTABLISHED\rTCP 192.168.31.208:4048 112.18.249.239:443 ESTABLISHED\rTCP 192.168.31.208:4049 204.79.197.222:443 ESTABLISHED\rTCP 192.168.31.208:4050 221.178.73.35:443 ESTABLISHED\rTCP 192.168.31.208:4051 39.107.11.172:443 ESTABLISHED\rTCP 192.168.31.208:4052 112.29.158.132:443 ESTABLISHED\rTCP 192.168.31.208:4053 183.220.151.49:443 ESTABLISHED\rTCP 192.168.31.208:4054 13.107.3.254:443 ESTABLISHED\r"}),a.add({id:144,href:'/life/docs/javadir/groovy/groovy%E5%8F%98%E9%87%8F%E5%92%8C%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8A%A0%E5%BC%BA/',title:" groovy变量和数据类型 ",section:"groovy 学习与使用 ",content:"groovy 变量和数据类型\r#\r\rgroovy类型自动推断\r#\r\r 先看有一段代码  def a = 12;\rdef int a1 = 12;\rdef a_type = a instanceof Integer ;\rdef a1_type = a1 instanceof Integer ;\rprintln(a_type) ;\rprintln(a1_type) ;\r//打印结果如下\rtrue\rtrue\r 从上面我们可以看出a和a1实际推导出的类型是一样的,但是有哪些不同呢 接着我把上面的例子改了  def a = 12;\rdef int a1 = 12;\rdef a_type = a instanceof Integer ;\rdef a1_type = a1 instanceof Integer ;\rprintln(a_type) ;\rprintln(a1_type) ;\ra = 52253.46f ;\ra1 = 52253.46f ;\rprintln(a instanceof Integer) ;\rprintln(a1 instanceof Integer) ;\rprintln(\u0026quot;a1 的值:\u0026quot;+a1) ;\rprintln(\u0026quot;a 的 值 :\u0026quot;+a) ;\r//print result\rtrue\rtrue\rfalse\rtrue\ra1 的值:52253\ra 的 值 :52253.46\r  看吧神奇的事情出来了, a1 的 参数类型即便被赋值了浮点数但是类型并没有改变,并且精度和赋值的值相比降低了,而 a 的类型却改变了\n另外假如在idea中编辑变量 编辑器也会提示你\rAssignment is not used less... (Ctrl+F1) Inspection info: Reports on unnecessary Groovy assignment statement Possible loss of precision from 'Float' to 'int' less... (Ctrl+F1) Inspection info: Reports assignments with incompatible types\r  假如接着上面的例子给 a变量和a1变量分别赋值字符串类型会怎样呢 (算了还是重新写吧好看点)\n  int b = 141;\rx = 141;\rprintln(b) ;\rprintln(x) ;\rb = \u0026quot;字符串b\u0026quot; ;\rx = \u0026quot;字符串x\u0026quot; ;\rprintln(b) ;\rprintln(x) ;\r//运行会怎样呢?\r141\rCaught: org.codehaus.groovy.runtime.typehandling.GroovyCastException: Cannot cast object '字符串b' with class 'java.lang.String' to class 'int'\r141\rorg.codehaus.groovy.runtime.typehandling.GroovyCastException: Cannot cast object '字符串b' with class 'java.lang.String' to class 'int'\rat gr.h1.t4.run(t4.groovy:10)\r  以上我们可以看出在groovy中赋值的时候系统会尝试强转类型,上面的例子是转失败的情况\n  因此在定义变量的时候尽量不要去更改已经定义的变量的类型,尽量 申明变量类型\n  变量的类型检测方法\n  var_name instanceof type 如 a instanceof Integer\n  b.class == Integer 或 b.class.equals(Integer)\n  "}),a.add({id:145,href:'/life/docs/operating_system/one_chapter/1_4_/',title:" 操作系统的运行机制与体系结构 ",section:"第一章 操作系统概述 ",content:"运行机制\r#\r\r一: 知识总览\r#\r\r二: 预备知识：程序是如何运行的？\r#\r\r三:内核程序 v.s. 应用程序\r#\r\r四:特权指令 v.s. 非特权指令\r#\r\r五:内核态 v.s. 用户态\r#\r\r六:内核态、用户态 的切换\r#\r\r知识回顾与重要考点\r#\r\r体系结构\r#\r\r两种指令、两种处理器状态、两种程序\r#\r\r操作系统的内核\r#\r\r Yo~生活经验：我们安装完 Windows 操作系统后，会发现操作系统提供了多种多样的功能，比如“记事本”、 “任务管理器”。然而，这些功能并不是必不可少的。即使没有“任务管理器”，我们仍然可以使用计算机。\n  内核是计算机上配置的底层软件，是操作系统最基本、最核心的部分。实现操作系统内核功能的那些程序就是内核程序。   计算机系统的层次结构  知识回顾与重要考点\r#\r\r"}),a.add({id:146,href:'/life/docs/javadir/thread/jol/',title:"JOL工具 ",section:"多线程与并发 ",content:"引入jol依赖\r#\r\r\u0026lt;dependency\u0026gt;\r\u0026lt;groupId\u0026gt;org.openjdk.jol\u0026lt;/groupId\u0026gt;\r\u0026lt;artifactId\u0026gt;jol-core\u0026lt;/artifactId\u0026gt;\r\u0026lt;version\u0026gt;0.9\u0026lt;/version\u0026gt;\r\u0026lt;scope\u0026gt;provided\u0026lt;/scope\u0026gt;\r\u0026lt;/dependency\u0026gt;\r相关方法\r#\r\r  1.使用jol计算对象的大小（单位为字节）：ClassLayout.parseInstance(obj).instanceSize()\n  2.使用jol查看对象内部的内存布局：ClassLayout.parseInstance(obj).toPrintable()\n  3.查看对象外部信息：包括引用的对象：GraphLayout.parseInstance(obj).toPrintable()\n  4.查看对象占用空间总大小：GraphLayout.parseInstance(obj).totalSize()\n  对象布局 空属性\r#\r\rimport org.openjdk.jol.info.ClassLayout; public class Entity { public static void main(String[] args) { Entity entity = new Entity(); // 打印java 对象内存布局  System.out.println(ClassLayout.parseInstance(entity).toPrintable()); } } // 输出结果 com.brown.Entity object internals: // Entity对象内存布局  OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 01 00 00 00 (00000001 00000000 00000000 00000000) (1) 4 4 (object header) 00 00 00 00 (00000000 00000000 00000000 00000000) (0) 8 4 (object header) 05 c1 00 f8 (00000101 11000001 00000000 11111000) (-134168315) 12 4 (loss due to the next object alignment) Instance size: 16 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total OFFSET：偏移地址，单位字节 SIZE：占用的内存大小，单位为字节 TYPE DESCRIPTION： 类型描述，其中object header为对象头； object header：对象头 loss due to the next object alignment：由于下一个对象对齐而导致的丢失（有4Byte是对齐的字节（因为在64位虚拟机上对象的大小必须是8的倍数）,由于这个对象里面没有任何字段，故而对象的实例数据为0Byte）。 VALUE : 对应内存中当前存储的值； Instance size：实例字节数值大小（**此处一个空的java对象（不包含任意字段属性）实例，其实例大小为``16Byte**） 对象布局 有属性\r#\r\r/** * 带有属性的 实体类 */ public class Student { private String name; private Integer age; } public class DemoT1 { public static void main(String[] args) { Student o = new Student(); System.out.println(ClassLayout.parseInstance(o).toPrintable()); } } // 输出结果（默认开启指针压缩）： com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 01 00 00 00 (00000001 00000000 00000000 00000000) (1) 4 4 (object header) 00 00 00 00 (00000000 00000000 00000000 00000000) (0) 8 4 (object header) 43 c1 00 f8 (01000011 11000001 00000000 11111000) (-134168253) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total 对象布局大体由三部分构成\r#\r\r 对象头【对象头的前64位(8byte)是MarkWord，后32位(4byte)是类的元数据指针（开启指针压缩）。】 实例数据 字节对齐（可有可无，若对象头加上实例数据是8的倍数时，则不存在字节对齐）  mark word (对象头的描述)\r#\r\r mark word用于存储对象的运行时记录信息，如哈希值、GC分代年龄、锁状态标志、线程持有的锁、偏向线程ID、偏向时间戳等\n  Hotspot 64位实现   Hotspot 32位实现   mark word中锁状态描述（根据后三位判断）     偏向锁位 1bit（是否偏向锁） 锁标志位 2bit 锁状态     0 01 无锁态(new)   1 01 偏向锁    00 轻量级锁（自旋锁、无锁、自适应自旋锁）    10 重量级锁    11 GC 标记     hotspot中对于对象头的描述  // 32 bits: 32位操作系统 // -------- // hash:25 ------------\u0026gt;| age:4 biased_lock:1 lock:2 (normal object) // JavaThread*:23 epoch:2 age:4 biased_lock:1 lock:2 (biased object) // size:32 ------------------------------------------\u0026gt;| (CMS free block) // PromotedObject*:29 ----------\u0026gt;| promo_bits:3 -----\u0026gt;| (CMS promoted object) // // 64 bits: 64位操作系统 // -------- // unused:25 hash:31 --\u0026gt;| unused:1 age:4 biased_lock:1 lock:2 (normal object) // 无锁 // JavaThread*:54 epoch:2 unused:1 age:4 biased_lock:1 lock:2 (biased object) // 偏向锁 // PromotedObject*:61 ---------------------\u0026gt;| promo_bits:3 -----\u0026gt;| (CMS promoted object) // 轻量级锁、重量级锁 // size:64 -----------------------------------------------------\u0026gt;| (CMS free block) 总长度   64位操作系统的对象头的描述翻译如下  |--------------------------------------------------------------------------------------------------------------------------------------| ​ Object Header (128 bits) |--------------------------------------------------------------------------------------------------------------------------------------| | Mark Word (64 bits) | Klass Word (64 bits) |默认开启指针压缩(32bits) |--------------------------------------------------------------------------------------------------------------------------------------| |unused:25|identity_hashcode:31(56) | unused:1 | age:4 | biased_lock:1 | lock:2 | OOP to metadata object | 无锁 |--------------------------------------------------------------------------------------------------------------------------------------| |thread:54 | epoch:2 | unused:1 | age:4 | biased_lock:1 | lock:2 | OOP to metadata object | 偏向锁 |---------------------------------------------------------------------|----------------------------------------------------------------| | ptr_to_lock_record:62 | lock:2 | OOP to metadata object | 轻量锁 |--------------------------------------------------------------------------------------------------------------------------------------| | ptr_to_heavyweight_monitor:62 | lock:2 | OOP to metadata object | 重量锁 |------------------------------------------------------------------------------------------------------------| | | lock:2 | OOP to metadata object | GC |--------------------------------------------------------------------------------------------------------------------------------------|  32位操作系统的对象头信息  以 mark word 变化调试线程锁升级过程\r#\r\r无锁 -\u0026gt; 偏向锁\r#\r\rpackage com.tool.thread; import org.openjdk.jol.info.ClassLayout; public class SynchronizedTest1 { public static void main(String[] args) throws Exception { runA() ; } public static void runA()throws Exception{ System.out.println(\u0026#34;run...................\u0026#34;); //偏向锁  long millis = 5000; //偏向锁 默认4秒后开启  Thread.sleep(millis); System.out.println(String.format(\u0026#34;休眠%s秒结束\u0026#34;,String.valueOf(millis/1000))); Student student = new Student(); System.out.println(\u0026#34;当偏向锁可以使用的时候,对象头的mark word默认写入的就是首先使用偏向锁标识符\u0026#34;); System.out.println(\u0026#34;带偏向锁标识符的对象头的描述\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); synchronized (student) { System.out.println(\u0026#34;对象头的mark word写入了线程相关数据(如线程id)\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); } System.out.println(\u0026#34;结束!偏向锁线程执行完毕后不会立即移除对象头里面包含偏向锁的信息而是等到某个全局安全点系统在判断是否继续偏向锁\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); } } run................... 休眠5秒结束 当偏向锁可以使用的时候,对象头的mark word默认写入的就是首先使用偏向锁标识符 带偏向锁标识符的对象头的描述 com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 05 00 00 00 (00000101 00000000 00000000 00000000) (5) 4 4 (object header) 00 00 00 00 (00000000 00000000 00000000 00000000) (0) 8 4 (object header) 43 c1 00 f8 (01000011 11000001 00000000 11111000) (-134168253) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total //下面两行表示的是mark word 0 4 (object header) 05 00 00 00 (00000101 00000000 00000000 00000000) (5) 4 4 (object header) 00 00 00 00 (00000000 00000000 00000000 00000000) (0) // 元数据指针 8 4 (object header) 43 c1 00 f8 (01000011 11000001 00000000 11111000) (-134168253) // 00000101 就是8位的锁年代和锁标识符所占 对象头的mark word写入了线程相关数据(如线程id) com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 05 b0 c5 be (00000101 10110000 11000101 10111110) (-1094340603) 4 4 (object header) 1c 02 00 00 (00011100 00000010 00000000 00000000) (540) 8 4 (object header) 43 c1 00 f8 (01000011 11000001 00000000 11111000) (-134168253) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total //00000101 00000000 00000000 00000000 =\u0026gt; 00000101 10110000 11000101 10111110 || 00000000 00000000 00000000 00000000 =\u0026gt; 00011100 00000010 00000000 00000000 线程锁相关信息写入到mark word中了 结束!偏向锁线程执行完毕后不会立即移除对象头里面包含偏向锁的信息而是等到某个全局安全点系统在判断是否继续偏向锁 com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 05 b0 c5 be (00000101 10110000 11000101 10111110) (-1094340603) 4 4 (object header) 1c 02 00 00 (00011100 00000010 00000000 00000000) (540) 8 4 (object header) 43 c1 00 f8 (01000011 11000001 00000000 11111000) (-134168253) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total //同步块执行完毕 并没有立即清除对象头里面的偏向锁相关标识符 无锁 -\u0026gt; 轻量级锁\r#\r\rimport org.openjdk.jol.info.ClassLayout; public class SynchronizedTest1 { public static void main(String[] args) throws Exception { runB() ; } public static void runB()throws Exception{ //注意:-XX:BiasedLockingStartupDelay=0 改了偏向锁的启动时间那么也是达不到我们说的效果的  //在4秒以前 创建的对象 对象头默认写入的是轻量级锁标识 只是没有写入线程相关和同步锁信息等  Student tempStudent = new Student(); System.out.println(ClassLayout.parseInstance(tempStudent).toPrintable()); synchronized (tempStudent) { System.out.println(ClassLayout.parseInstance(tempStudent).toPrintable()); } System.out.println(ClassLayout.parseInstance(tempStudent).toPrintable()); } } //属于轻量级锁但是没有写入线程和同步相关数据 com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 01 00 00 00 (00000001 00000000 00000000 00000000) (1) 4 4 (object header) 00 00 00 00 (00000000 00000000 00000000 00000000) (0) 8 4 (object header) 43 c1 00 f8 (01000011 11000001 00000000 11111000) (-134168253) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total //属于轻量级锁已经写入线程和同步相关数据 com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 98 f6 7f 3b (10011000 11110110 01111111 00111011) (998241944) 4 4 (object header) 2b 00 00 00 (00101011 00000000 00000000 00000000) (43) 8 4 (object header) 43 c1 00 f8 (01000011 11000001 00000000 11111000) (-134168253) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total //执行完毕 Displaced Mark Word(将标识符同步加锁和线程相关移除并改为默认的标识符) 执行完毕后依旧是轻量级标识符 com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 01 00 00 00 (00000001 00000000 00000000 00000000) (1) 4 4 (object header) 00 00 00 00 (00000000 00000000 00000000 00000000) (0) 8 4 (object header) 43 c1 00 f8 (01000011 11000001 00000000 11111000) (-134168253) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total //001 -\u0026gt; 000 -\u0026gt; 001 无锁 -\u0026gt; 偏向锁 -\u0026gt; 轻量级锁\r#\r\rimport org.openjdk.jol.info.ClassLayout; public class SynchronizedTest1 { public static void main(String[] args) throws Exception { runC() ; } public static void runC()throws Exception{ System.out.println(\u0026#34;run...................\u0026#34;); //偏向锁  long millis = 5000; //偏向锁 默认4秒后开启  Thread.sleep(millis); Student student = new Student(); System.out.println(ClassLayout.parseInstance(student).toPrintable()); synchronized (student) { System.out.println(\u0026#34;偏向锁\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); } Thread thread = new Thread(() -\u0026gt; { synchronized (student) { System.out.println(\u0026#34;轻量级锁\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); } }); thread.start(); thread.join(); System.out.println(ClassLayout.parseInstance(student).toPrintable()); } } run................... com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 05 00 00 00 (00000101 00000000 00000000 00000000) (5) 4 4 (object header) 00 00 00 00 (00000000 00000000 00000000 00000000) (0) 8 4 (object header) 92 d7 00 f8 (10010010 11010111 00000000 11111000) (-134162542) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total 偏向锁 com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 05 d8 88 7c (00000101 11011000 10001000 01111100) (2089342981) 4 4 (object header) 3d 02 00 00 (00111101 00000010 00000000 00000000) (573) 8 4 (object header) 92 d7 00 f8 (10010010 11010111 00000000 11111000) (-134162542) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total 轻量级锁 com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) f0 ef 8f 15 (11110000 11101111 10001111 00010101) (361754608) 4 4 (object header) a1 00 00 00 (10100001 00000000 00000000 00000000) (161) 8 4 (object header) 92 d7 00 f8 (10010010 11010111 00000000 11111000) (-134162542) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 01 00 00 00 (00000001 00000000 00000000 00000000) (1) 4 4 (object header) 00 00 00 00 (00000000 00000000 00000000 00000000) (0) 8 4 (object header) 92 d7 00 f8 (10010010 11010111 00000000 11111000) (-134162542) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total 偏向锁 -\u0026gt; 偏向锁标识加锁 -\u0026gt; 轻量级锁 -\u0026gt; 无锁状态 101 -\u0026gt; 101 -\u0026gt; 00 -\u0026gt; 01 无锁 -\u0026gt; 偏向锁 -\u0026gt; 轻量级锁 -\u0026gt; 重量级锁\r#\r\r 重量级锁在轻量级锁级别达到后如果满足重量级锁情况继续升级  import org.openjdk.jol.info.ClassLayout; public class SynchronizedTest1 { public static void main(String[] args) throws Exception { runD() ; } public static void runD()throws Exception{ System.out.println(\u0026#34;run...................\u0026#34;); //偏向锁  long millis = 5000; //偏向锁 默认4秒后开启  Thread.sleep(millis); Student student = new Student(); System.out.println(ClassLayout.parseInstance(student).toPrintable()); synchronized (student) { System.out.println(\u0026#34;偏向锁\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); } Thread thread = new Thread(() -\u0026gt; { synchronized (student) { System.out.println(\u0026#34;轻量级锁(threadA不启动的情况)\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); try { //让线程晚点儿死亡，造成锁的竞争  Thread.sleep(2000); } catch (InterruptedException e) { e.printStackTrace(); } } }); Thread threadA = new Thread(() -\u0026gt; { synchronized (student) { System.out.println(\u0026#34;重量级锁\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); try { Thread.sleep(2000); } catch (InterruptedException e) { e.printStackTrace(); } } }); thread.start(); threadA.start();//注释后 thread中的对象标识符是轻量级锁  } } run................... com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 05 00 00 00 (00000101 00000000 00000000 00000000) (5) 4 4 (object header) 00 00 00 00 (00000000 00000000 00000000 00000000) (0) 8 4 (object header) 92 d7 00 f8 (10010010 11010111 00000000 11111000) (-134162542) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total 偏向锁 com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 05 c0 fa 43 (00000101 11000000 11111010 01000011) (1140506629) 4 4 (object header) 1d 01 00 00 (00011101 00000001 00000000 00000000) (285) 8 4 (object header) 92 d7 00 f8 (10010010 11010111 00000000 11111000) (-134162542) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total 轻量级锁(threadA不启动的情况) com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 4a 56 b9 5e (01001010 01010110 10111001 01011110) (1589204554) 4 4 (object header) 1d 01 00 00 (00011101 00000001 00000000 00000000) (285) 8 4 (object header) 92 d7 00 f8 (10010010 11010111 00000000 11111000) (-134162542) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total 重量级锁 com.tool.thread.Student object internals: OFFSET SIZE TYPE DESCRIPTION VALUE 0 4 (object header) 4a 56 b9 5e (01001010 01010110 10111001 01011110) (1589204554) 4 4 (object header) 1d 01 00 00 (00011101 00000001 00000000 00000000) (285) 8 4 (object header) 92 d7 00 f8 (10010010 11010111 00000000 11111000) (-134162542) 12 4 java.lang.String Student.name null 16 4 java.lang.Integer Student.age null 20 4 (loss due to the next object alignment) Instance size: 24 bytes Space losses: 0 bytes internal + 4 bytes external = 4 bytes total 101 -\u0026gt; 101 -\u0026gt; 10 -\u0026gt; 10 锁升级所有源码\r#\r\rimport org.openjdk.jol.info.ClassLayout; public class SynchronizedTest1 { public static void main(String[] args) throws Exception { runD() ; } /** * 无锁 -\u0026gt; 偏向锁 -\u0026gt; 轻量级锁 -\u0026gt; 重量级锁 * @throws Exception */ public static void runD()throws Exception{ System.out.println(\u0026#34;run...................\u0026#34;); //偏向锁  long millis = 5000; //偏向锁 默认4秒后开启  Thread.sleep(millis); Student student = new Student(); System.out.println(ClassLayout.parseInstance(student).toPrintable()); synchronized (student) { System.out.println(\u0026#34;偏向锁\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); } Thread thread = new Thread(() -\u0026gt; { synchronized (student) { System.out.println(\u0026#34;轻量级锁(threadA不启动的情况)\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); try { //让线程晚点儿死亡，造成锁的竞争  Thread.sleep(2000); } catch (InterruptedException e) { e.printStackTrace(); } } }); Thread threadA = new Thread(() -\u0026gt; { synchronized (student) { System.out.println(\u0026#34;重量级锁\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); try { Thread.sleep(2000); } catch (InterruptedException e) { e.printStackTrace(); } } }); thread.start(); threadA.start();//注释后 thread中的对象标识符是轻量级锁  } /** * 无锁 -\u0026gt; 偏向锁 -\u0026gt; 轻量级锁 * @throws Exception */ public static void runC()throws Exception{ System.out.println(\u0026#34;run...................\u0026#34;); //偏向锁  long millis = 5000; //偏向锁 默认4秒后开启  Thread.sleep(millis); Student student = new Student(); System.out.println(ClassLayout.parseInstance(student).toPrintable()); synchronized (student) { System.out.println(\u0026#34;偏向锁\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); } Thread thread = new Thread(() -\u0026gt; { synchronized (student) { System.out.println(\u0026#34;轻量级锁\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); } }); thread.start(); thread.join(); System.out.println(ClassLayout.parseInstance(student).toPrintable()); } /** * 轻量级锁 * @throws Exception */ public static void runB()throws Exception{ //在4秒以前 创建的对象 对象头默认写入的是轻量级锁标识 只是没有写入线程相关和同步锁信息等  Student tempStudent = new Student(); System.out.println(ClassLayout.parseInstance(tempStudent).toPrintable()); synchronized (tempStudent) { System.out.println(ClassLayout.parseInstance(tempStudent).toPrintable()); } System.out.println(ClassLayout.parseInstance(tempStudent).toPrintable()); } /** * 偏向锁 * @throws Exception */ public static void runA()throws Exception{ System.out.println(\u0026#34;run...................\u0026#34;); long millis = 5000; //偏向锁 默认4秒后开启  Thread.sleep(millis); System.out.println(String.format(\u0026#34;休眠%s秒结束\u0026#34;,String.valueOf(millis/1000))); Student student = new Student(); System.out.println(\u0026#34;当偏向锁可以使用的时候,对象头的mark word默认写入的就是首先使用偏向锁标识符\u0026#34;); System.out.println(\u0026#34;带偏向锁标识符的对象头的描述\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); synchronized (student) { System.out.println(\u0026#34;对象头的mark word写入了线程相关数据(如线程id)\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); } System.out.println(\u0026#34;结束!偏向锁线程执行完毕后不会立即移除对象头里面包含偏向锁的信息而是等到某个全局安全点系统在判断是否继续偏向锁\u0026#34;); System.out.println(ClassLayout.parseInstance(student).toPrintable()); } }  文章参考1 文章参考2  "}),a.add({id:147,href:'/life/docs/javadir/basedir/jsp_dir/jsp_jstl_session/',title:"jsp jstl session ",section:"jsp 基础知识 ",content:"Session\r#\r\r HTTP是无状态协议，这意味着每次客户端检索网页时，都要单独打开一个服务器连接，因此服务器不会记录下先前客户端请求的任何信息\r#\r\r  会话,当用户打开一个浏览器连接到web应用或者打开某个页面,直到关闭浏览器这个过程叫做会话\r#\r\r  Session是保存在服务器上的数据结构，用于跟踪用户的状态。此数据可以保存在群集、数据库、文件中\r#\r\r Session常用方法\r#\r\r  public boolean isNew()\n返回是否为一个新的客户端，或者客户端是否拒绝加入session     public Enumeration getAttributeNames()\n返回session对象中所有的对象名称     public int getMaxInactiveInterval()\n返回最大时间间隔，以秒为单位，servlet 容器将会在这段时间内保持会话打开     public long getCreationTime()\n返回session对象被创建的时间， 以毫秒为单位，从1970年1月1号凌晨开始算起     public long getLastAccessedTime()\n返回客户端最后访问的时间，以毫秒为单位，从1970年1月1号凌晨开始算起     public Object getAttribute(String name)\n返回session对象中与指定名称绑定的对象，如果不存在则返回null     public Object getAttribute(String name)\n返回session对象中与指定名称绑定的对象，如果不存在则返回null     public String getId()\n返回session对象的ID     public void invalidate()\n将session无效化，解绑任何与该session绑定的对象     public void removeAttribute(String name)\n移除session中指定名称的对象     public void setAttribute(String name, Object value)\n使用指定的名称和值来产生一个对象并绑定到session中     public void setMaxInactiveInterval(int interval)\n用来指定时间，以秒为单位，servlet容器将会在这段时间内保持会话有效   Session应用\r#\r\r新建SessionDemo类\r#\r\r@WebServlet(\u0026quot;/SessionDemo\u0026quot;)\rpublic class SessionDemo extends HttpServlet {\rprivate int count=0;\rprotected void doGet(HttpServletRequest request, HttpServletResponse response)\rthrows ServletException, IOException {\rrequest.setCharacterEncoding(\u0026quot;utf-8\u0026quot;);\rresponse.setCharacterEncoding(\u0026quot;utf-8\u0026quot;);\rcount++;\rHttpSession session = request.getSession();\rString id = session.getId();\rlong startTime = session.getCreationTime();\rlong lastTime = session.getLastAccessedTime();\rlong validTime = session.getMaxInactiveInterval();\rsession.setMaxInactiveInterval(60);\rSimpleDateFormat myFormat=new SimpleDateFormat(\u0026quot;yyyy/MM/dd HH:mm:ss\u0026quot;);\rresponse.setContentType(\u0026quot;text/html\u0026quot;);\rPrintWriter out = response.getWriter();\rout.println(\u0026quot;\u0026lt;!DOCTYPE HTML PUBLIC \\\u0026quot;-\rout.println(\u0026quot;\u0026lt;HTML\u0026gt;\u0026quot;);\rout.println(\u0026quot; \u0026lt;HEAD\u0026gt;\u0026lt;TITLE\u0026gt;A Servlet\u0026lt;/TITLE\u0026gt;\u0026lt;/HEAD\u0026gt;\u0026quot;);\rout.println(\u0026quot; \u0026lt;BODY\u0026gt;\u0026quot;);\rif(session.isNew()) {\rout.println(\u0026quot;新客户\u0026lt;br\u0026gt;\u0026quot;);\r}else {\rout.println(\u0026quot;不是新客户\u0026lt;br\u0026gt;\u0026quot;);\r}\rout.println(\u0026quot;会话ID:\u0026quot; + id+\u0026quot;\u0026lt;br\u0026gt;\u0026quot;);\rout.println(\u0026quot;会话创建时间:\u0026quot;+myFormat.format(startTime)+\u0026quot;\u0026lt;br\u0026gt;\u0026quot;);\rout.println(\u0026quot;会话有效时间:\u0026quot;+validTime+\u0026quot;秒\u0026lt;br\u0026gt;\u0026quot;);\rout.println(\u0026quot;当前会话有效时间:\u0026quot;+session.getMaxInactiveInterval()+\u0026quot;秒\u0026lt;br\u0026gt;\u0026quot;);\rout.println(\u0026quot;最后访问时间:\u0026quot;+myFormat.format(lastTime)+\u0026quot;\u0026lt;br\u0026gt;\u0026quot;);\rout.println(\u0026quot;访问次数:\u0026quot;+count+\u0026quot;\u0026lt;br\u0026gt;\u0026quot;);\rout.println(\u0026quot; \u0026lt;/BODY\u0026gt;\u0026quot;);\rout.println(\u0026quot;\u0026lt;/HTML\u0026gt;\u0026quot;);\rout.flush();\rout.close();\r}\r}\r会话监听器\r#\r\r新建SerssionListenerDemo类\r#\r\r@WebListener\rpublic class SerssionListenerDemo implements HttpSessionListener{\rprivate static int count=0;\r@Override\rpublic void sessionCreated(HttpSessionEvent se) {\rHttpSessionListener.super.sessionCreated(se);\rcount++;\rSystem.out.println(\u0026quot;第\u0026quot;+count+\u0026quot;个会话被创建\u0026quot;);\r}\r@Override\rpublic void sessionDestroyed(HttpSessionEvent se) {\r// TODO Auto-generated method stub\rHttpSessionListener.super.sessionDestroyed(se);\rSystem.out.println(\u0026quot;会话被毁灭\u0026quot;);\rcount--;\rSystem.out.println(\u0026quot;当前剩余\u0026quot;+count+\u0026quot;个会话\u0026quot;);\r}\r}\r新建SessionAttributeListener类\r#\r\r@WebListener\rpublic class SessionAttributeListener implements HttpSessionAttributeListener{\r@Override\rpublic void attributeAdded(HttpSessionBindingEvent event) {\rHttpSessionAttributeListener.super.attributeAdded(event);\rSystem.out.println(\u0026quot;session添加了一个属性\u0026quot;);\r}\r@Override\rpublic void attributeRemoved(HttpSessionBindingEvent event) {\rHttpSessionAttributeListener.super.attributeRemoved(event);\rSystem.out.println(\u0026quot;session删除了某个属性\u0026quot;);\r}\r@Override\rpublic void attributeReplaced(HttpSessionBindingEvent event) {\rHttpSessionAttributeListener.super.attributeReplaced(event);\rSystem.out.println(\u0026quot;session修改了某个属性\u0026quot;);\r}\r}\r新建ServletRequestListener类\r#\r\r@WebListener\rpublic class ServletRequestListener implements javax.servlet.ServletRequestListener{\r@Override\rpublic void requestInitialized(ServletRequestEvent sre) {\rjavax.servlet.ServletRequestListener.super.requestInitialized(sre);\rSystem.out.println(\u0026quot;生成新的请求\u0026quot;);\r}\r@Override\rpublic void requestDestroyed(ServletRequestEvent sre) {\rjavax.servlet.ServletRequestListener.super.requestDestroyed(sre);\rSystem.out.println(\u0026quot;请求毁灭\u0026quot;);\r}\r}\r"}),a.add({id:148,href:'/life/docs/python/base/dictionary/',title:"python 字典",section:"python 基础学习",content:"字典（Dictionary）\r#\r\r 字典有点像一个json对象 且不是json数组对象\n  简单举例  dic1 = {\u0026#39;a\u0026#39;: \u0026#39;dsgs\u0026#39;} print(dic1) print(dic1.get(\u0026#34;a\u0026#34;)) 创建并打印字典\r#\r\rimport random dicX = {} for x in range(1,10): dicX[str(x)] = random.randrange(int(\u0026#34;10\u0026#34;) , int(\u0026#34;10\u0026#34;+str(x))) print(dicX) 检查键是否存在\r#\r\rimport random dic1 = {\u0026#39;x\u0026#39;:random.randrange(1,3000),\u0026#39;y\u0026#39;:random.randrange(1,3000)} print(dic1) print(f\u0026#34;x in dic1 :{\u0026#39;x\u0026#39; in dic1}\u0026#34;) 访问字典\r#\r\rdic20 = {\u0026#39;a\u0026#39;:\u0026#39;zxc\u0026#39;} print(dic20[\u0026#39;a\u0026#39;]) print(dic20.get(\u0026#34;a\u0026#34;)) 更改值\r#\r\rset2 = {\u0026#34;x\u0026#34;:1,\u0026#39;y\u0026#39;:2000} print(set2) set2[\u0026#39;x\u0026#39;] = 2 print(set2) values()\r#\r\rimport random dicX = {} for x in range(1,10): dicX[str(x)] = random.randrange(int(\u0026#34;10\u0026#34;) , int(\u0026#34;10\u0026#34;+str(x))) print(dicX) print(dicX.values()) for x in dicX.values(): print(x)] 删除项目\r#\r\rthisdict =	{ \u0026#34;brand\u0026#34;: \u0026#34;Porsche\u0026#34;, \u0026#34;model\u0026#34;: \u0026#34;911\u0026#34;, \u0026#34;year\u0026#34;: 1963 } thisdict.pop(\u0026#34;model\u0026#34;) print(thisdict) del 关键字删除具有指定键名的项目\r#\r\rthisdict =	{ \u0026#34;brand\u0026#34;: \u0026#34;Porsche\u0026#34;, \u0026#34;model\u0026#34;: \u0026#34;911\u0026#34;, \u0026#34;year\u0026#34;: 1963 } del thisdict[\u0026#34;model\u0026#34;] print(thisdict) del 关键字也可以完全删除字典\r#\r\rthisdict =	{ \u0026#34;brand\u0026#34;: \u0026#34;Porsche\u0026#34;, \u0026#34;model\u0026#34;: \u0026#34;911\u0026#34;, \u0026#34;year\u0026#34;: 1963 } del thisdict print(thisdict) #this 会导致错误，因为 \u0026#34;thisdict\u0026#34; 不再存在。 clear() 关键字清空字典\r#\r\rthisdict =	{ \u0026#34;brand\u0026#34;: \u0026#34;Porsche\u0026#34;, \u0026#34;model\u0026#34;: \u0026#34;911\u0026#34;, \u0026#34;year\u0026#34;: 1963 } thisdict.clear() print(thisdict) copy() 方法来复制字典\r#\r\rthisdict =	{ \u0026#34;brand\u0026#34;: \u0026#34;Porsche\u0026#34;, \u0026#34;model\u0026#34;: \u0026#34;911\u0026#34;, \u0026#34;year\u0026#34;: 1963 } mydict = thisdict.copy() print(mydict) 嵌套字典\r#\r\rchild1 = { \u0026#34;name\u0026#34;: \u0026#34;Phoebe Adele\u0026#34;, \u0026#34;year\u0026#34;: 2002 } child2 = { \u0026#34;name\u0026#34;: \u0026#34;Jennifer Katharine\u0026#34;, \u0026#34;year\u0026#34;: 1996 } child3 = { \u0026#34;name\u0026#34;: \u0026#34;Rory John\u0026#34;, \u0026#34;year\u0026#34;: 1999 } myfamily = { \u0026#34;child1\u0026#34;: child1, \u0026#34;child2\u0026#34;: child2, \u0026#34;child3\u0026#34;: child3 } print(myfamily) "}),a.add({id:149,href:'/life/docs/operating_system/four_chapter/',title:"第四章 文件管理 ",section:"计算机操作系统",content:"文件管理\r#\r\r"}),a.add({id:150,href:'/life/docs/databases/sqlserver/create_table/',title:"sqlserver",section:" 数据库",content:"sqlserver\r#\r\r"}),a.add({id:151,href:'/life/docs/codereview/design_pattern/abstract_factory/',title:"创建型 - 抽象工厂(Abstract Factory)",section:"设计模式",content:"抽象工厂\r#\r\r"}),a.add({id:152,href:'/life/docs/javadir/middleware/elasticsearch/lucene-data/',title:"lucene数据存储",section:"Elasticsearch",content:"lucene数据存储\r#\r\rshard是Elasticsearch数据存储的最小单位，index的存储容量为所有shard的存储容量之和。Elasticsearch集群的存储容量则为所有index存储容量之和。\n一个shard就对应了一个lucene的library。对于一个shard，Elasticsearch增加了translog的功能，类似于HBase WAL，是数据写入过程中的中间数据，其余的数据都在lucene库中管理的。\n所以Elasticsearch索引使用的存储内容主要取决于lucene中的数据存储。\nlucene基本概念\r#\r\r  segment : lucene内部的数据是由一个个segment组成的，写入lucene的数据并不直接落盘，而是先写在内存中，经过了refresh间隔，lucene才将该时间段写入的全部数据refresh成一个segment，segment多了之后会进行merge成更大的segment。lucene查询时会遍历每个segment完成。由于lucene* 写入的数据是在内存中完成，所以写入效率非常高。但是也存在丢失数据的风险，所以Elasticsearch基于此现象实现了translog，只有在segment数据落盘后，Elasticsearch才会删除对应的translog。\n  doc : doc表示lucene中的一条记录\n  field ：field表示记录中的字段概念，一个doc由若干个field组成。\n  term ：term是lucene中索引的最小单位，某个field对应的内容如果是全文检索类型，会将内容进行分词，分词的结果就是由term组成的。如果是不分词的字段，那么该字段的内容就是一个term。\n  倒排索引（inverted index）: lucene索引的通用叫法，即实现了term到doc list的映射。\n  正排数据：搜索引擎的通用叫法，即原始数据，可以理解为一个doc list。\n  docvalues :Elasticsearch中的列式存储的名称，Elasticsearch除了存储原始存储、倒排索引，还存储了一份docvalues，用作分析和排序。\n  lucene文件内容\r#\r\r lucene包的文件是由很多segment文件组成的，segments_xxx文件记录了lucene包下面的segment文件数量。每个segment会包含如下的文件。\n    Name Extension Brief Description     Segment Info .si segment的元数据文件   Compound File .cfs, .cfe 一个segment包含了如下表的各个文件，为减少打开文件的数量，在segment小的时候，segment的所有文件内容都保存在cfs文件中，cfe文件保存了lucene各文件在cfs文件的位置信息   Fields .fnm 保存了fields的相关信息   Field Index .fdx 正排存储文件的元数据信息   Field Data .fdt 存储了正排存储数据，写入的原文存储在这   Term Dictionary .tim 倒排索引的元数据信息   Term Index .tip 倒排索引文件，存储了所有的倒排索引数据   Frequencies .doc 保存了每个term的doc id列表和term在doc中的词频   Positions .pos Stores position information about where a term occurs in the index   全文索引的字段，会有该文件，保存了term在doc中的位置     Payloads .pay Stores additional per-position metadata information such as character offsets and user payloads   全文索引的字段，使用了一些像payloads的高级特性会有该文件，保存了term在doc中的一些高级特性     Norms .nvd, .nvm 文件保存索引字段加权数据   Per-Document Values .dvd, .dvm lucene的docvalues文件，即数据的列式存储，用作聚合和排序   Term Vector Data .tvx, .tvd, .tvf Stores offset into the document data file   保存索引字段的矢量信息，用在对term进行高亮，计算文本相关性中使用     Live Documents .liv 记录了segment中删除的doc    lucene各文件具体内容和实现\r#\r\rlucene数据元信息文件\r#\r\r 文件名为：segments_xxx\n该文件为lucene数据文件的元信息文件，记录所有segment的元数据信息。\n该文件主要记录了目前有多少segment，每个segment有一些基本信息，更新这些信息定位到每个segment的元信息文件。\nlucene元信息文件还支持记录userData，Elasticsearch可以在此记录translog的一些相关信息。\n 文件示例   具体实现类  public final class SegmentInfos implements Cloneable, Iterable\u0026lt;SegmentCommitInfo\u0026gt; { // generation是segment的版本的概念，从文件名中提取出来，实例中为：2t/101  private long generation; // generation of the \u0026#34;segments_N\u0026#34; for the next commit  private long lastGeneration; // generation of the \u0026#34;segments_N\u0026#34; file we last successfully read  // or wrote; this is normally the same as generation except if  // there was an IOException that had interrupted a commit  /** Id for this commit; only written starting with Lucene 5.0 */ private byte[] id; /** Which Lucene version wrote this commit, or null if this commit is pre-5.3. */ private Version luceneVersion; /** Counts how often the index has been changed. */ public long version; /** Used to name new segments. */ // TODO: should this be a long ...?  public int counter; /** Version of the oldest segment in the index, or null if there are no segments. */ private Version minSegmentLuceneVersion; private List\u0026lt;SegmentCommitInfo\u0026gt; segments = new ArrayList\u0026lt;\u0026gt;(); /** Opaque Map\u0026amp;lt;String, String\u0026amp;gt; that user can specify during IndexWriter.commit */ public Map\u0026lt;String,String\u0026gt; userData = Collections.emptyMap(); } /** Embeds a [read-only] SegmentInfo and adds per-commit * fields. * * @lucene.experimental */ public class SegmentCommitInfo { /** The {@link SegmentInfo} that we wrap. */ public final SegmentInfo info; // How many deleted docs in the segment:  private int delCount; // Generation number of the live docs file (-1 if there  // are no deletes yet):  private long delGen; // Normally 1+delGen, unless an exception was hit on last  // attempt to write:  private long nextWriteDelGen; // Generation number of the FieldInfos (-1 if there are no updates)  private long fieldInfosGen; // Normally 1+fieldInfosGen, unless an exception was hit on last attempt to  // write  private long nextWriteFieldInfosGen; //fieldInfosGen == -1 ? 1 : fieldInfosGen + 1;  // Generation number of the DocValues (-1 if there are no updates)  private long docValuesGen; // Normally 1+dvGen, unless an exception was hit on last attempt to  // write  private long nextWriteDocValuesGen; //docValuesGen == -1 ? 1 : docValuesGen + 1;  // TODO should we add .files() to FieldInfosFormat, like we have on  // LiveDocsFormat?  // track the fieldInfos update files  private final Set\u0026lt;String\u0026gt; fieldInfosFiles = new HashSet\u0026lt;\u0026gt;(); // Track the per-field DocValues update files  private final Map\u0026lt;Integer,Set\u0026lt;String\u0026gt;\u0026gt; dvUpdatesFiles = new HashMap\u0026lt;\u0026gt;(); // Track the per-generation updates files  @Deprecated private final Map\u0026lt;Long,Set\u0026lt;String\u0026gt;\u0026gt; genUpdatesFiles = new HashMap\u0026lt;\u0026gt;(); private volatile long sizeInBytes = -1; } segment的元信息文件\r#\r\r 文件后缀：.si\n每个segment都有一个.si文件，记录了该segment的元信息。\nsegment元信息文件中记录了segment的文档数量，segment对应的文件列表等信息。\n 文件示例   具体实现类  /** * Information about a segment such as its name, directory, and files related * to the segment. * * @lucene.experimental */ public final class SegmentInfo { // _bl  public final String name; /** Where this segment resides. */ public final Directory dir; /** Id that uniquely identifies this segment. */ private final byte[] id; private Codec codec; // Tracks the Lucene version this segment was created with, since 3.1. Null  // indicates an older than 3.0 index, and it\u0026#39;s used to detect a too old index.  // The format expected is \u0026#34;x.y\u0026#34; - \u0026#34;2.x\u0026#34; for pre-3.0 indexes (or null), and  // specific versions afterwards (\u0026#34;3.0.0\u0026#34;, \u0026#34;3.1.0\u0026#34; etc.).  // see o.a.l.util.Version.  private Version version; private int maxDoc; // number of docs in seg  private boolean isCompoundFile; private Map\u0026lt;String,String\u0026gt; diagnostics; private Set\u0026lt;String\u0026gt; setFiles; private final Map\u0026lt;String,String\u0026gt; attributes; } fields信息文件\r#\r\r 文件后缀：.fnm\n该文件存储了fields的基本信息。\nfields信息中包括field的数量，field的类型，以及IndexOpetions，包括是否存储、是否索引，是否分词，是否需要列存等等。\n 文件示例   具体实现类  /** * Access to the Field Info file that describes document fields and whether or * not they are indexed. Each segment has a separate Field Info file. Objects * of this class are thread-safe for multiple readers, but only one thread can * be adding documents at a time, with no other reader or writer threads * accessing this object. **/ public final class FieldInfo { /** Field\u0026#39;s name */ public final String name; /** Internal field number */ //field在内部的编号  public final int number; //field docvalues的类型  private DocValuesType docValuesType = DocValuesType.NONE; // True if any document indexed term vectors  private boolean storeTermVector; private boolean omitNorms; // omit norms associated with indexed fields  //index的配置项  private IndexOptions indexOptions = IndexOptions.NONE; private boolean storePayloads; // whether this field stores payloads together with term positions  private final Map\u0026lt;String,String\u0026gt; attributes; // docvalues的generation  private long dvGen; } 数据存储文件\r#\r\r 文件后缀：.fdx, .fdt\n索引文件为.fdx，数据文件为.fdt，数据存储文件功能为根据自动的文档id，得到文档的内容，搜索引擎的术语习惯称之为正排数据，即doc_id -\u0026gt; content，es的_source数据就存在这\n索引文件记录了快速定位文档数据的索引信息，数据文件记录了所有文档id的具体内容。\n 文件示例   具体实现类  /** * Random-access reader for {@link CompressingStoredFieldsIndexWriter}. * @lucene.internal */ public final class CompressingStoredFieldsIndexReader implements Cloneable, Accountable { private static final long BASE_RAM_BYTES_USED = RamUsageEstimator.shallowSizeOfInstance(CompressingStoredFieldsIndexReader.class); final int maxDoc; //docid索引，快速定位某个docid的数组坐标  final int[] docBases; //快速定位某个docid所在的文件offset的startPointer  final long[] startPointers; //平均一个chunk的文档数  final int[] avgChunkDocs; //平均一个chunk的size  final long[] avgChunkSizes; final PackedInts.Reader[] docBasesDeltas; // delta from the avg  final PackedInts.Reader[] startPointersDeltas; // delta from the avg } /** * {@link StoredFieldsReader} impl for {@link CompressingStoredFieldsFormat}. * @lucene.experimental */ public final class CompressingStoredFieldsReader extends StoredFieldsReader { //从fdt正排索引文件中获得  private final int version; // field的基本信息  private final FieldInfos fieldInfos; //fdt正排索引文件reader  private final CompressingStoredFieldsIndexReader indexReader; //从fdt正排索引文件中获得，用于指向fdx数据文件的末端，指向numChunks地址4  private final long maxPointer; //fdx正排数据文件句柄  private final IndexInput fieldsStream; //块大小  private final int chunkSize; private final int packedIntsVersion; //压缩类型  private final CompressionMode compressionMode; //解压缩处理对象  private final Decompressor decompressor; //文档数量，从segment元数据中获得  private final int numDocs; //是否正在merge，默认为false  private final boolean merging; //初始化时new了一个BlockState，BlockState记录下当前正排文件读取的状态信息  private final BlockState state; //chunk的数量  private final long numChunks; // number of compressed blocks written  //dirty chunk的数量  private final long numDirtyChunks; // number of incomplete compressed blocks written  //是否close，默认为false  private boolean closed; } 倒排索引文件\r#\r\r 索引后缀：.tip,.tim\n倒排索引也包含索引文件和数据文件，.tip为索引文件，.tim为数据文件，索引文件包含了每个字段的索引元信息，数据文件有具体的索引内容。\n5.5.0版本的倒排索引实现为FST tree，FST tree的最大优势就是内存空间占用非常低 ，具体可以参看下这篇文章：http://www.cnblogs.com/bonelee/p/6226185.html\nhttp://examples.mikemccandless.com/fst.py?terms=\u0026amp;cmd=Build+it 为FST图实例，可以根据输入的数据构造出FST图\n输入到 FST 中的数据为:\rString inputValues[] = {\u0026quot;mop\u0026quot;,\u0026quot;moth\u0026quot;,\u0026quot;pop\u0026quot;,\u0026quot;star\u0026quot;,\u0026quot;stop\u0026quot;,\u0026quot;top\u0026quot;};\rlong outputValues[] = {0,1,2,3,4,5};\r生成的 FST 图为:\n 文件示例   图片  倒排链文件\r#\r\r 文件后缀：.doc, .pos, .pay\n.doc保存了每个term的doc id列表和term在doc中的词频\n全文索引的字段，会有.pos文件，保存了term在doc中的位置\n全文索引的字段，使用了一些像payloads的高级特性才会有.pay文件，保存了term在doc中的一些高级特性\n 文件示例   具体实现类  /** * Concrete class that reads docId(maybe frq,pos,offset,payloads) list * with postings format. * * @lucene.experimental */ public final class Lucene50PostingsReader extends PostingsReaderBase { private static final long BASE_RAM_BYTES_USED = RamUsageEstimator.shallowSizeOfInstance(Lucene50PostingsReader.class); private final IndexInput docIn; private final IndexInput posIn; private final IndexInput payIn; final ForUtil forUtil; private int version; //不分词的字段使用的是该对象，基于skiplist实现了倒排链  final class BlockDocsEnum extends PostingsEnum { } //全文检索字段使用的是该对象  final class BlockPostingsEnum extends PostingsEnum { } //包含高级特性的字段使用的是该对象  final class EverythingEnum extends PostingsEnum { } } 列存文件（docvalues）\r#\r\r 文件后缀：.dvm, .dvd\n索引文件为.dvm，数据文件为.dvd。\nlucene实现的docvalues有如下类型：\n1、NONE 不开启docvalue时的状态 2、NUMERIC 单个数值类型的docvalue主要包括（int，long，float，double） 3、BINARY 二进制类型值对应不同的codes最大值可能超过32766字节， 4、SORTED 有序增量字节存储，仅仅存储不同部分的值和偏移量指针，值必须小于等于32766字节 5、SORTED_NUMERIC 存储数值类型的有序数组列表 6、SORTED_SET 可以存储多值域的docvalue值，但返回时，仅仅只能返回多值域的第一个docvalue 7、对应not_anaylized的string字段，使用的是SORTED_SET类型，number的类型是SORTED_NUMERIC类型\n其中SORTED_SET 的 SORTED_SINGLE_VALUED类型包括了两类数据 ： binary + numeric， binary是按ord排序的term的列表，numeric是doc到ord的映射。\n 文件示例   具体实现类  /** reader for {@link Lucene54DocValuesFormat} */ final class Lucene54DocValuesProducer extends DocValuesProducer implements Closeable { //number类型的field的列存列表  private final Map\u0026lt;String,NumericEntry\u0026gt; numerics = new HashMap\u0026lt;\u0026gt;(); //字符串类型的field的列存列表  private final Map\u0026lt;String,BinaryEntry\u0026gt; binaries = new HashMap\u0026lt;\u0026gt;(); //有序字符串类型的field的列存列表  private final Map\u0026lt;String,SortedSetEntry\u0026gt; sortedSets = new HashMap\u0026lt;\u0026gt;(); //有序number类型的field的列存列表  private final Map\u0026lt;String,SortedSetEntry\u0026gt; sortedNumerics = new HashMap\u0026lt;\u0026gt;(); //字符串类型的field的ords列表  private final Map\u0026lt;String,NumericEntry\u0026gt; ords = new HashMap\u0026lt;\u0026gt;(); //docId -\u0026gt; address -\u0026gt; ord 中field的ords列表  private final Map\u0026lt;String,NumericEntry\u0026gt; ordIndexes = new HashMap\u0026lt;\u0026gt;(); //field的数量  private final int numFields; //内存使用量  private final AtomicLong ramBytesUsed; //数据源的文件句柄  private final IndexInput data; //文档数  private final int maxDoc; // memory-resident structures  private final Map\u0026lt;String,MonotonicBlockPackedReader\u0026gt; addressInstances = new HashMap\u0026lt;\u0026gt;(); private final Map\u0026lt;String,ReverseTermsIndex\u0026gt; reverseIndexInstances = new HashMap\u0026lt;\u0026gt;(); private final Map\u0026lt;String,DirectMonotonicReader.Meta\u0026gt; directAddressesMeta = new HashMap\u0026lt;\u0026gt;(); //是否正在merge  private final boolean merging; } /** metadata entry for a numeric docvalues field */ static class NumericEntry { private NumericEntry() {} /** offset to the bitset representing docsWithField, or -1 if no documents have missing values */ long missingOffset; /** offset to the actual numeric values */ //field的在数据文件中的起始地址  public long offset; /** end offset to the actual numeric values */ //field的在数据文件中的结尾地址  public long endOffset; /** bits per value used to pack the numeric values */ public int bitsPerValue; //format类型  int format; /** count of values written */ public long count; /** monotonic meta */ public DirectMonotonicReader.Meta monotonicMeta; //最小的value  long minValue; //Compressed by computing the GCD  long gcd; //Compressed by giving IDs to unique values.  long table[]; /** for sparse compression */ long numDocsWithValue; NumericEntry nonMissingValues; NumberType numberType; } /** metadata entry for a binary docvalues field */ static class BinaryEntry { private BinaryEntry() {} /** offset to the bitset representing docsWithField, or -1 if no documents have missing values */ long missingOffset; /** offset to the actual binary values */ //field的在数据文件中的起始地址  long offset; int format; /** count of values written */ public long count; //最短字符串的长度  int minLength; //最长字符串的长度  int maxLength; /** offset to the addressing data that maps a value to its slice of the byte[] */ public long addressesOffset, addressesEndOffset; /** meta data for addresses */ public DirectMonotonicReader.Meta addressesMeta; /** offset to the reverse index */ public long reverseIndexOffset; /** packed ints version used to encode addressing information */ public int packedIntsVersion; /** packed ints blocksize */ public int blockSize; } 参考\nlucene document5.5\nlucene字典实现原理——FST\n"}),a.add({id:153,href:'/life/docs/javadir/middleware/mycat/',title:"mycat 学习与使用",section:"中间件 ",content:"一:MyCat是什么\r#\r\r一个彻底开源的，面向企业应用开发的大数据库集群\n支持事务、ACID、可以替代MySQL的加强版数据库\n一个可以视为MySQL集群的企业级数据库，用来替代昂贵的Oracle集群\n一个融合内存缓存技术、NoSQL技术、HDFS大数据的新型SQL Server\n结合传统数据库和新型分布式数据仓库的新一代企业级数据库产品\n一个新颖的数据库中间件产品\n目前仅仅实现了mysql协议\n二:MyCat能做什么\r#\r\r 1:数据库读写分离   2:数据分片   3:多数据源整合  三:MyCat原理\r#\r\rMycat 的原理中最重要的一个动词是“拦截”，它拦截了用户发送过来的 SQL 语句，首先对 SQL语句做了一些特定的分析：如分片分析、路由分析、读写分离分析、缓存分析等，然后将此 SQL 发往后端的真实数据库，并将返回的结果做适当的处理，最终再返回给用户。\n这种方式把数据库的分布式从代码中解耦出来，程序员察觉不出来后台使用 Mycat 还是MySQL。\n四:MyCat实战\r#\r\r参考1 参考2\n"}),a.add({id:154,href:'/life/docs/databases/mysql/mysql_data/',title:"数据准备",section:"mysql学习笔记",content:" 数据准备  数据准备\ndrop datbase ch10; create database ch10; use ch10; drop table if EXISTS fruits ; CREATE TABLE fruits ( f_id char(10) NOT NULL, s_id INT NOT NULL, f_name char(255) NOT NULL, f_price decimal(8,2) NOT NULL, PRIMARY KEY(f_id) ); INSERT INTO fruits (f_id, s_id, f_name, f_price) VALUES(\u0026#39;a1\u0026#39;, 101,\u0026#39;apple\u0026#39;,5.2), (\u0026#39;b1\u0026#39;,101,\u0026#39;blackberry\u0026#39;, 10.2), (\u0026#39;bs1\u0026#39;,102,\u0026#39;orange\u0026#39;, 11.2), (\u0026#39;bs2\u0026#39;,105,\u0026#39;melon\u0026#39;,8.2), (\u0026#39;t1\u0026#39;,102,\u0026#39;banana\u0026#39;, 10.3), (\u0026#39;t2\u0026#39;,102,\u0026#39;grape\u0026#39;, 5.3), (\u0026#39;o2\u0026#39;,103,\u0026#39;coconut\u0026#39;, 9.2), (\u0026#39;c0\u0026#39;,101,\u0026#39;cherry\u0026#39;, 3.2), (\u0026#39;a2\u0026#39;,103, \u0026#39;apricot\u0026#39;,2.2), (\u0026#39;l2\u0026#39;,104,\u0026#39;lemon\u0026#39;, 6.4), (\u0026#39;b2\u0026#39;,104,\u0026#39;berry\u0026#39;, 7.6), (\u0026#39;m1\u0026#39;,106,\u0026#39;mango\u0026#39;, 15.6), (\u0026#39;m2\u0026#39;,105,\u0026#39;xbabay\u0026#39;, 2.6), (\u0026#39;t4\u0026#39;,107,\u0026#39;xbababa\u0026#39;, 3.6), (\u0026#39;m3\u0026#39;,105,\u0026#39;xxtt\u0026#39;, 11.6), (\u0026#39;b5\u0026#39;,107,\u0026#39;xxxx\u0026#39;, 3.6); drop table if EXISTS customers ; CREATE TABLE customers ( c_id int NOT NULL AUTO_INCREMENT, c_name char(50) NOT NULL, c_address char(50) NULL, c_city char(50) NULL, c_zip char(10) NULL, c_contact char(50) NULL, c_email char(255) NULL, PRIMARY KEY (c_id) ); INSERT INTO customers(c_id, c_name, c_address, c_city, c_zip, c_contact, c_email) VALUES(10001, \u0026#39;RedHook\u0026#39;, \u0026#39;200 Street \u0026#39;, \u0026#39;Tianjin\u0026#39;, \u0026#39;300000\u0026#39;, \u0026#39;LiMing\u0026#39;, \u0026#39;LMing@163.com\u0026#39;), (10002, \u0026#39;Stars\u0026#39;, \u0026#39;333 Fromage Lane\u0026#39;, \u0026#39;Dalian\u0026#39;, \u0026#39;116000\u0026#39;, \u0026#39;Zhangbo\u0026#39;,\u0026#39;Jerry@hotmail.com\u0026#39;), (10003, \u0026#39;Netbhood\u0026#39;, \u0026#39;1 Sunny Place\u0026#39;, \u0026#39;Qingdao\u0026#39;, \u0026#39;266000\u0026#39;, \u0026#39;LuoCong\u0026#39;, NULL), (10004, \u0026#39;JOTO\u0026#39;, \u0026#39;829 Riverside Drive\u0026#39;, \u0026#39;Haikou\u0026#39;, \u0026#39;570000\u0026#39;, \u0026#39;YangShan\u0026#39;, \u0026#39;sam@hotmail.com\u0026#39;); drop table if EXISTS orderitems ; CREATE TABLE orderitems ( o_num int NOT NULL, o_item int NOT NULL, f_id char(10) NOT NULL, quantity int NOT NULL, item_price decimal(8,2) NOT NULL, PRIMARY KEY (o_num,o_item) ) ; INSERT INTO orderitems(o_num, o_item, f_id, quantity, item_price) VALUES(30001, 1, \u0026#39;a1\u0026#39;, 10, 5.2), (30001, 2, \u0026#39;b2\u0026#39;, 3, 7.6), (30001, 3, \u0026#39;bs1\u0026#39;, 5, 11.2), (30001, 4, \u0026#39;bs2\u0026#39;, 15, 9.2), (30002, 1, \u0026#39;b3\u0026#39;, 2, 20.0), (30003, 1, \u0026#39;c0\u0026#39;, 100, 10), (30004, 1, \u0026#39;o2\u0026#39;, 50, 2.50), (30005, 1, \u0026#39;c0\u0026#39;, 5, 10), (30005, 2, \u0026#39;b1\u0026#39;, 10, 8.99), (30005, 3, \u0026#39;a2\u0026#39;, 10, 2.2), (30005, 4, \u0026#39;m1\u0026#39;, 5, 14.99); drop table if EXISTS suppliers ; CREATE TABLE suppliers ( s_id int NOT NULL AUTO_INCREMENT, s_name char(50) NOT NULL, s_city char(50) NULL, s_zip char(10) NULL, s_call CHAR(50) NOT NULL, PRIMARY KEY (s_id) ) ; INSERT INTO suppliers(s_id, s_name,s_city, s_zip, s_call) VALUES(101,\u0026#39;FastFruit Inc.\u0026#39;,\u0026#39;Tianjin\u0026#39;,\u0026#39;300000\u0026#39;,\u0026#39;48075\u0026#39;), (102,\u0026#39;LT Supplies\u0026#39;,\u0026#39;Chongqing\u0026#39;,\u0026#39;400000\u0026#39;,\u0026#39;44333\u0026#39;), (103,\u0026#39;ACME\u0026#39;,\u0026#39;Shanghai\u0026#39;,\u0026#39;200000\u0026#39;,\u0026#39;90046\u0026#39;), (104,\u0026#39;FNK Inc.\u0026#39;,\u0026#39;Zhongshan\u0026#39;,\u0026#39;528437\u0026#39;,\u0026#39;11111\u0026#39;), (105,\u0026#39;Good Set\u0026#39;,\u0026#39;Taiyuang\u0026#39;,\u0026#39;030000\u0026#39;, \u0026#39;22222\u0026#39;), (106,\u0026#39;Just Eat Ours\u0026#39;,\u0026#39;Beijing\u0026#39;,\u0026#39;010\u0026#39;, \u0026#39;45678\u0026#39;), (107,\u0026#39;DK Inc.\u0026#39;,\u0026#39;Zhengzhou\u0026#39;,\u0026#39;450000\u0026#39;, \u0026#39;33332\u0026#39;); drop table if EXISTS orders ; CREATE TABLE orders ( o_num int NOT NULL AUTO_INCREMENT, o_date datetime NOT NULL, c_id int NOT NULL, PRIMARY KEY (o_num) ) ; INSERT INTO orders(o_num, o_date, c_id) VALUES(30001, \u0026#39;2008-09-01\u0026#39;, 10001), (30002, \u0026#39;2008-09-12\u0026#39;, 10003), (30003, \u0026#39;2008-09-30\u0026#39;, 10004), (30004, \u0026#39;2008-10-03\u0026#39;, 10005), (30005, \u0026#39;2008-10-08\u0026#39;, 10001); drop table if EXISTS dept ; CREATE TABLE dept ( d_no INT NOT NULL PRIMARY KEY AUTO_INCREMENT, d_name VARCHAR(50), d_location VARCHAR(100) ); drop table if EXISTS employee ; -- 由于employee表dept_no依赖于父表dept的主键d_no，因此需要先创建dept表，然后创建employee表。 CREATE TABLE employee ( e_no INT NOT NULL PRIMARY KEY, e_name VARCHAR(100) NOT NULL, e_gender CHAR(2) NOT NULL, dept_no INT NOT NULL, e_job VARCHAR(100) NOT NULL, e_salary SMALLINT NOT NULL, hireDate DATE, CONSTRAINT dno_fk FOREIGN KEY(dept_no) REFERENCES dept(d_no) ); INSERT INTO dept VALUES (10, \u0026#39;ACCOUNTING\u0026#39;, \u0026#39;ShangHai\u0026#39;), (20, \u0026#39;RESEARCH \u0026#39;, \u0026#39;BeiJing \u0026#39;), (30, \u0026#39;SALES \u0026#39;, \u0026#39;ShenZhen \u0026#39;), (40, \u0026#39;OPERATIONS \u0026#39;, \u0026#39;FuJian \u0026#39;); INSERT INTO employee VALUES (1001, \u0026#39;SMITH\u0026#39;, \u0026#39;m\u0026#39;,20, \u0026#39;CLERK\u0026#39;,800,\u0026#39;2005-11-12\u0026#39;), (1002, \u0026#39;ALLEN\u0026#39;, \u0026#39;f\u0026#39;,30, \u0026#39;SALESMAN\u0026#39;, 1600,\u0026#39;2003-05-12\u0026#39;), (1003, \u0026#39;WARD\u0026#39;, \u0026#39;f\u0026#39;,30, \u0026#39;SALESMAN\u0026#39;, 1250,\u0026#39;2003-05-12\u0026#39;), (1004, \u0026#39;JONES\u0026#39;, \u0026#39;m\u0026#39;,20, \u0026#39;MANAGER\u0026#39;, 2975,\u0026#39;1998-05-18\u0026#39;), (1005, \u0026#39;MARTIN\u0026#39;, \u0026#39;m\u0026#39;,30, \u0026#39;SALESMAN\u0026#39;, 1250,\u0026#39;2001-06-12\u0026#39;), (1006, \u0026#39;BLAKE\u0026#39;, \u0026#39;f\u0026#39;,30, \u0026#39;MANAGER\u0026#39;, 2850,\u0026#39;1997-02-15\u0026#39;), (1007, \u0026#39;CLARK\u0026#39;, \u0026#39;m\u0026#39;,10, \u0026#39;MANAGER\u0026#39;, 2450,\u0026#39;2002-09-12\u0026#39;), (1008, \u0026#39;SCOTT\u0026#39;, \u0026#39;m\u0026#39;,20, \u0026#39;ANALYST\u0026#39;, 3000,\u0026#39;2003-05-12\u0026#39;), (1009, \u0026#39;KING\u0026#39;, \u0026#39;f\u0026#39;,10, \u0026#39;PRESIDENT\u0026#39;, 5000,\u0026#39;1995-01-01\u0026#39;), (1010, \u0026#39;TURNER\u0026#39;, \u0026#39;f\u0026#39;,30, \u0026#39;SALESMAN\u0026#39;, 1500,\u0026#39;1997-10-12\u0026#39;), (1011, \u0026#39;ADAMS\u0026#39;, \u0026#39;m\u0026#39;,20, \u0026#39;CLERK\u0026#39;, 1100,\u0026#39;1999-10-05\u0026#39;), (1012, \u0026#39;JAMES\u0026#39;, \u0026#39;m\u0026#39;,30, \u0026#39;CLERK\u0026#39;, 950,\u0026#39;2008-06-15\u0026#39;); drop table if EXISTS score ; CREATE TABLE `score` ( `id` int NOT NULL AUTO_INCREMENT, `stu_id` int NOT NULL, `c_name` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL, `grade` int DEFAULT NULL, PRIMARY KEY (`id`), UNIQUE KEY `id` (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin; INSERT INTO `score`(`id`, `stu_id`, `c_name`, `grade`) VALUES (1, 901, \u0026#39;计算机\u0026#39;, 98); INSERT INTO `score`(`id`, `stu_id`, `c_name`, `grade`) VALUES (2, 901, \u0026#39;英语\u0026#39;, 80); INSERT INTO `score`(`id`, `stu_id`, `c_name`, `grade`) VALUES (3, 902, \u0026#39;计算机\u0026#39;, 65); INSERT INTO `score`(`id`, `stu_id`, `c_name`, `grade`) VALUES (4, 902, \u0026#39;中文\u0026#39;, 88); INSERT INTO `score`(`id`, `stu_id`, `c_name`, `grade`) VALUES (5, 903, \u0026#39;中文\u0026#39;, 95); INSERT INTO `score`(`id`, `stu_id`, `c_name`, `grade`) VALUES (6, 904, \u0026#39;计算机\u0026#39;, 70); INSERT INTO `score`(`id`, `stu_id`, `c_name`, `grade`) VALUES (7, 904, \u0026#39;英语\u0026#39;, 92); INSERT INTO `score`(`id`, `stu_id`, `c_name`, `grade`) VALUES (8, 905, \u0026#39;英语\u0026#39;, 94); INSERT INTO `score`(`id`, `stu_id`, `c_name`, `grade`) VALUES (9, 906, \u0026#39;计算机\u0026#39;, 90); INSERT INTO `score`(`id`, `stu_id`, `c_name`, `grade`) VALUES (10, 906, \u0026#39;英语\u0026#39;, 85); DROP TABLE IF EXISTS `student`; CREATE TABLE `student` ( `id` int(0) NOT NULL, `class_id` int(0) NULL DEFAULT NULL, `name` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL, `sex` varchar(4) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL, `birth` year NULL DEFAULT NULL, `department` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL, `address` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL, PRIMARY KEY (`id`) USING BTREE, UNIQUE INDEX `id`(`id`) USING BTREE ) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic; INSERT INTO `student` VALUES (901, 1, \u0026#39;张老大\u0026#39;, \u0026#39;男\u0026#39;, 1985, \u0026#39;计算机系\u0026#39;, \u0026#39;北京市海淀区\u0026#39;); INSERT INTO `student` VALUES (902, 1, \u0026#39;张老二\u0026#39;, \u0026#39;男\u0026#39;, 1986, \u0026#39;中文系\u0026#39;, \u0026#39;北京市昌平区\u0026#39;); INSERT INTO `student` VALUES (903, 1, \u0026#39;张三\u0026#39;, \u0026#39;女\u0026#39;, 1990, \u0026#39;中文系\u0026#39;, \u0026#39;湖南省永州市\u0026#39;); INSERT INTO `student` VALUES (904, 2, \u0026#39;李四\u0026#39;, \u0026#39;男\u0026#39;, 1990, \u0026#39;英语系\u0026#39;, \u0026#39;辽宁省阜新市\u0026#39;); INSERT INTO `student` VALUES (905, 1, \u0026#39;王五\u0026#39;, \u0026#39;女\u0026#39;, 1991, \u0026#39;英语系\u0026#39;, \u0026#39;福建省厦门市\u0026#39;); INSERT INTO `student` VALUES (906, 2, \u0026#39;王六\u0026#39;, \u0026#39;男\u0026#39;, 1988, \u0026#39;计算机系\u0026#39;, \u0026#39;湖南省衡阳市\u0026#39;); DROP TABLE IF EXISTS `tb_class`; CREATE TABLE `tb_class` ( `id` int(0) NOT NULL AUTO_INCREMENT, `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL, PRIMARY KEY (`id`) USING BTREE ) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic; INSERT INTO `tb_class` VALUES (1, \u0026#39;一班\u0026#39;); INSERT INTO `tb_class` VALUES (2, \u0026#39;二班\u0026#39;); DROP TABLE IF EXISTS `t_user`; CREATE TABLE `t_user` ( `USER_ID` int NOT NULL AUTO_INCREMENT, `USER_NAME` char(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, `USER_PASSWORD` char(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, `USER_EMAIL` char(80) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, PRIMARY KEY (`USER_ID`), KEY `IDX_NAME` (`USER_NAME`) ) ENGINE=InnoDB AUTO_INCREMENT=6209 DEFAULT CHARSET=utf8mb3; DROP TABLE IF EXISTS `temp_date`; CREATE TABLE `temp_date` ( `id` int NOT NULL AUTO_INCREMENT, `age` float(14,2) DEFAULT NULL COMMENT \u0026#39;age\u0026#39;, `name` varchar(255) DEFAULT NULL, `birthday` date DEFAULT NULL COMMENT \u0026#39;生日\u0026#39;, `gmt_created` datetime DEFAULT CURRENT_TIMESTAMP, `gmt_modified` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=1075 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT=\u0026#39;临时用户表\u0026#39;; DROP TABLE IF EXISTS `user_column_row`; CREATE TABLE `user_column_row` ( `id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT \u0026#39;姓名\u0026#39;, `features` varchar(255) DEFAULT NULL COMMENT \u0026#39;特征\u0026#39;, `value` varchar(255) DEFAULT NULL COMMENT \u0026#39;数值\u0026#39;, PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=18 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; DROP TABLE IF EXISTS `user2`; CREATE TABLE `user2` ( `id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT \u0026#39;名称\u0026#39;, `age` double(11,2) DEFAULT NULL COMMENT \u0026#39;年龄\u0026#39;, `height` double(11,2) DEFAULT NULL COMMENT \u0026#39;身高\u0026#39;, `weight` double(11,2) DEFAULT NULL COMMENT \u0026#39;体重\u0026#39;, PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (2, \u0026#39;小明\u0026#39;, \u0026#39;身高\u0026#39;, \u0026#39;172.00\u0026#39;); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (3, \u0026#39;小明\u0026#39;, \u0026#39;体重\u0026#39;, \u0026#39;48.0kg\u0026#39;); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (4, \u0026#39;小明\u0026#39;, \u0026#39;年龄\u0026#39;, \u0026#39;23\u0026#39;); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (5, \u0026#39;小红\u0026#39;, \u0026#39;身高\u0026#39;, \u0026#39;161.00\u0026#39;); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (6, \u0026#39;小红\u0026#39;, \u0026#39;体重\u0026#39;, \u0026#39;40.0kg\u0026#39;); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (7, \u0026#39;小红\u0026#39;, \u0026#39;年龄\u0026#39;, \u0026#39;19\u0026#39;); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (8, \u0026#39;小花\u0026#39;, \u0026#39;身高\u0026#39;, \u0026#39;153.00\u0026#39;); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (9, \u0026#39;小花\u0026#39;, \u0026#39;体重\u0026#39;, \u0026#39;42.0kg\u0026#39;); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (10, \u0026#39;小花\u0026#39;, \u0026#39;年龄\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (11, \u0026#39;小明\u0026#39;, \u0026#39;身高\u0026#39;, \u0026#39;172.33\u0026#39;); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (12, \u0026#39;小军\u0026#39;, \u0026#39;身高\u0026#39;, NULL); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (13, \u0026#39;小军\u0026#39;, \u0026#39;体重\u0026#39;, NULL); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (14, \u0026#39;小军\u0026#39;, \u0026#39;年龄\u0026#39;, NULL); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (15, \u0026#39;小胖\u0026#39;, NULL, NULL); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (16, \u0026#39;小胖\u0026#39;, NULL, NULL); INSERT INTO `user_column_row`(`id`, `name`, `features`, `value`) VALUES (17, \u0026#39;小胖\u0026#39;, NULL, NULL); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (1, 27.00, \u0026#39;0512c852d8d53f715876c72a239da357\u0026#39;, \u0026#39;1973-03-06\u0026#39;, \u0026#39;2022-05-30 23:18:09\u0026#39;, \u0026#39;2022-05-30 23:18:09\u0026#39;); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (2, 3.00, \u0026#39;677a9a202a76195edebe5735486fbd37\u0026#39;, \u0026#39;1992-02-02\u0026#39;, \u0026#39;2022-05-30 23:18:09\u0026#39;, \u0026#39;2022-05-30 23:18:09\u0026#39;); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (3, 56.00, \u0026#39;960d07df0252db6c73d8bbd59bbce05f\u0026#39;, \u0026#39;2016-09-23\u0026#39;, \u0026#39;2022-05-30 23:18:09\u0026#39;, \u0026#39;2022-05-30 23:18:09\u0026#39;); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (4, 75.00, \u0026#39;f715d5b2625b50c7f0bf28f4818efd28\u0026#39;, \u0026#39;1963-02-25\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (5, 89.00, \u0026#39;b61d09e5cc6e4f004bd308b871d83d9c\u0026#39;, \u0026#39;1929-04-11\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (6, 3.00, \u0026#39;bcb74f85d88f94dac13cda1dc62f9e07\u0026#39;, \u0026#39;1950-08-24\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (7, 34.00, \u0026#39;5f632ce7c206a1559c0d153d4be1fc2c\u0026#39;, \u0026#39;1991-09-17\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (8, 77.00, \u0026#39;ede2768cc05a582a8b20e6a93683b435\u0026#39;, \u0026#39;1901-05-25\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (9, 24.00, \u0026#39;68949a40f111939a0be18db38141c7b3\u0026#39;, \u0026#39;1946-10-30\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (10, 2.00, \u0026#39;5362bb925f28dc23f94229a2653edd48\u0026#39;, \u0026#39;1928-09-26\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;, \u0026#39;2022-05-30 23:18:10\u0026#39;); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (11, 58.00, \u0026#39;e236185011cb88e6226ef542b83fd9e3\u0026#39;, \u0026#39;1902-08-05\u0026#39;, \u0026#39;2022-05-31 20:42:28\u0026#39;, \u0026#39;2022-05-31 20:42:28\u0026#39;); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (12, 85.00, \u0026#39;baa1eac46aa193fcf6c2b704f17a2ae9\u0026#39;, \u0026#39;1955-09-07\u0026#39;, \u0026#39;2022-05-31 20:42:28\u0026#39;, \u0026#39;2022-05-31 20:42:28\u0026#39;); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (13, 8.00, \u0026#39;ae4f37ff310138525784a4eb56d7ca08\u0026#39;, \u0026#39;1971-07-23\u0026#39;, \u0026#39;2022-05-31 20:42:28\u0026#39;, \u0026#39;2022-05-31 20:42:28\u0026#39;); INSERT INTO `temp_date`(`id`, `age`, `name`, `birthday`, `gmt_created`, `gmt_modified`) VALUES (14, 18.00, \u0026#39;64ebcbd613223347e7cee2549197eab6\u0026#39;, \u0026#39;1916-10-10\u0026#39;, \u0026#39;2022-05-31 20:42:28\u0026#39;, \u0026#39;2022-05-31 20:42:28\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (9, \u0026#39;8d80af597433177f201f86f1fe0f9d9d\u0026#39;, \u0026#39;64a3680910b95bc6361b560fc5e07970\u0026#39;, \u0026#39;d474fe4@4feed-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (10, \u0026#39;d0e1cc42e2774e52cce412e9f5027491\u0026#39;, \u0026#39;ea346e9806c5f80b2a2eda551b45827b\u0026#39;, \u0026#39;d48271b@271e4-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (11, \u0026#39;88693fb73cab1f860ccfaf80de83e204\u0026#39;, \u0026#39;a624aa6c82faa32379892106b6daa249\u0026#39;, \u0026#39;d489f9a@9f9d5-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (12, \u0026#39;6d47c9fffc66612fbc057201a4d910bd\u0026#39;, \u0026#39;1e34c1122675a45e525a1ab1b6348ca2\u0026#39;, \u0026#39;d4953c5@53c88-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (13, \u0026#39;418f57775bfcdb3e0687e6c423e57d05\u0026#39;, \u0026#39;0a7089f91c7ab7850df0802e5ca3bc12\u0026#39;, \u0026#39;d4a0866@08c65-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (14, \u0026#39;ea0f6876c57dcc3f82a36208a97afea6\u0026#39;, \u0026#39;b6a8591804f06e9bd99fb2114cb50861\u0026#39;, \u0026#39;d4a8089@808bf-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (15, \u0026#39;3d0a07879b2e826e0b29d8ced8e92b4c\u0026#39;, \u0026#39;875e61c2fe9025fa30326bad73e070ca\u0026#39;, \u0026#39;d4af8f7@f8fb3-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (16, \u0026#39;877b734119235886088a5124a7fe8ddf\u0026#39;, \u0026#39;c293b45da05a29a3e9204625831977c5\u0026#39;, \u0026#39;d4b713c@713f9-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (17, \u0026#39;f3f3c624bb418b63bdc3f580dd5039b0\u0026#39;, \u0026#39;860514262f38d33545d6c8301d5921b2\u0026#39;, \u0026#39;d4c2588@258b8-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (18, \u0026#39;bffcad8fdfd4a95d2062d6e83098186d\u0026#39;, \u0026#39;2fff3c910cca03887ab6b26ee2b76cf3\u0026#39;, \u0026#39;d4c9de5@9de85-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (19, \u0026#39;2f1e409ea4569648270507e424a09621\u0026#39;, \u0026#39;78ffe25a4e2ef08605f2c25a2392f611\u0026#39;, \u0026#39;d4d1643@16464-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (20, \u0026#39;2f87b8d6988cd55c4361768735955861\u0026#39;, \u0026#39;e4dd44e0bf104610f915c26854f0e6f2\u0026#39;, \u0026#39;d4d8ec9@8ecd7-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (21, \u0026#39;94879aadb598a19ab612b97fa0f0c769\u0026#39;, \u0026#39;92912589c3a3ddb4457ccc5f183df822\u0026#39;, \u0026#39;d4e4406@44093-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (22, \u0026#39;69cbf1919065ce7a04f0cb486d7a0320\u0026#39;, \u0026#39;03bed78d5031fd536f0af3a6f0e3cc1f\u0026#39;, \u0026#39;d4f70b8@70bbe-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (23, \u0026#39;b77b1800acc41f27d8158c05c53ca743\u0026#39;, \u0026#39;fb1001ca32eea35a0a561416e9bd1996\u0026#39;, \u0026#39;d50617a@617d0-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (24, \u0026#39;57dab3aacd9776d067f7f42f1adf92d3\u0026#39;, \u0026#39;ddc141fef43e5d6f87659fdc5455333c\u0026#39;, \u0026#39;d5151be@51c1e-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (25, \u0026#39;1208d1d73683c335a8e601f6eef5a5b4\u0026#39;, \u0026#39;c45e0d126705c9f83c35ed218e1b9a4e\u0026#39;, \u0026#39;d51c97a@c97e0-da.com\u0026#39;); INSERT INTO `t_user`(`USER_ID`, `USER_NAME`, `USER_PASSWORD`, `USER_EMAIL`) VALUES (26, \u0026#39;fe85827612e43eee230250d8f94f12ac\u0026#39;, \u0026#39;301a625913e87498b656836118294225\u0026#39;, \u0026#39;d527dab@7daf1-da.com\u0026#39;); INSERT INTO `user2`(`id`, `name`, `age`, `height`, `weight`) VALUES (2, \u0026#39;小明\u0026#39;, 22.00, 48.00, 178.40); INSERT INTO `user2`(`id`, `name`, `age`, `height`, `weight`) VALUES (3, \u0026#39;小胖\u0026#39;, 25.00, 50.00, 168.00); DROP TABLE IF EXISTS `productnotes`; CREATE TABLE `productnotes` ( `note_id` int NOT NULL AUTO_INCREMENT, `prod_id` char(10) NOT NULL, `note_date` datetime NOT NULL, `note_text` text, PRIMARY KEY (`note_id`), FULLTEXT KEY `note_text` (`note_text`) ) ENGINE=MyISAM AUTO_INCREMENT=115 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; DROP TABLE IF EXISTS `vendors`; CREATE TABLE `vendors` ( `vend_id` int NOT NULL AUTO_INCREMENT, `vend_name` char(50) NOT NULL, `vend_address` char(50) DEFAULT NULL, `vend_city` char(50) DEFAULT NULL, `vend_state` char(5) DEFAULT NULL, `vend_zip` char(10) DEFAULT NULL, `vend_country` char(50) DEFAULT NULL, PRIMARY KEY (`vend_id`) ) ENGINE=InnoDB AUTO_INCREMENT=1007 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; DROP TABLE IF EXISTS `products`; CREATE TABLE `products` ( `prod_id` char(10) NOT NULL, `vend_id` int NOT NULL, `prod_name` char(255) NOT NULL, `prod_price` decimal(8,2) NOT NULL, `prod_desc` text, PRIMARY KEY (`prod_id`), KEY `fk_products_vendors` (`vend_id`), CONSTRAINT `fk_products_vendors` FOREIGN KEY (`vend_id`) REFERENCES `vendors` (`vend_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (101, \u0026#39;TNT2\u0026#39;, \u0026#39;2005-08-17 00:00:00\u0026#39;, \u0026#39;Customer complaint:\\r\\nSticks not individually wrapped, too easy to mistakenly detonate all at once.\\r\\nRecommend individual wrapping.\u0026#39;); INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (102, \u0026#39;OL1\u0026#39;, \u0026#39;2005-08-18 00:00:00\u0026#39;, \u0026#39;Can shipped full, refills not available.\\r\\nNeed to order new can if refill needed.\u0026#39;); INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (103, \u0026#39;SAFE\u0026#39;, \u0026#39;2005-08-18 00:00:00\u0026#39;, \u0026#39;Safe is combination locked, combination not provided with safe.\\r\\nThis is rarely a problem as safes are typically blown up or dropped by customers.\u0026#39;); INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (104, \u0026#39;FC\u0026#39;, \u0026#39;2005-08-19 00:00:00\u0026#39;, \u0026#39;Quantity varies, sold by the sack load.\\r\\nAll guaranteed to be bright and orange, and suitable for use as rabbit bait.\u0026#39;); INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (105, \u0026#39;TNT2\u0026#39;, \u0026#39;2005-08-20 00:00:00\u0026#39;, \u0026#39;Included fuses are short and have been known to detonate too quickly for some customers.\\r\\nLonger fuses are available (item FU1) and should be recommended.\u0026#39;); INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (106, \u0026#39;TNT2\u0026#39;, \u0026#39;2005-08-22 00:00:00\u0026#39;, \u0026#39;Matches not included, recommend purchase of matches or detonator (item DTNTR).\u0026#39;); INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (107, \u0026#39;SAFE\u0026#39;, \u0026#39;2005-08-23 00:00:00\u0026#39;, \u0026#39;Please note that no returns will be accepted if safe opened using explosives.\u0026#39;); INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (108, \u0026#39;ANV01\u0026#39;, \u0026#39;2005-08-25 00:00:00\u0026#39;, \u0026#39;Multiple customer returns, anvils failing to drop fast enough or falling backwards on purchaser. Recommend that customer considers using heavier anvils.\u0026#39;); INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (109, \u0026#39;ANV03\u0026#39;, \u0026#39;2005-09-01 00:00:00\u0026#39;, \u0026#39;Item is extremely heavy. Designed for dropping, not recommended for use with slings, ropes, pulleys, or tightropes.\u0026#39;); INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (110, \u0026#39;FC\u0026#39;, \u0026#39;2005-09-01 00:00:00\u0026#39;, \u0026#39;Customer complaint: rabbit has been able to detect trap, food apparently less effective now.\u0026#39;); INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (111, \u0026#39;SLING\u0026#39;, \u0026#39;2005-09-02 00:00:00\u0026#39;, \u0026#39;Shipped unassembled, requires common tools (including oversized hammer).\u0026#39;); INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (112, \u0026#39;SAFE\u0026#39;, \u0026#39;2005-09-02 00:00:00\u0026#39;, \u0026#39;Customer complaint:\\r\\nCircular hole in safe floor can apparently be easily cut with handsaw.\u0026#39;); INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (113, \u0026#39;ANV01\u0026#39;, \u0026#39;2005-09-05 00:00:00\u0026#39;, \u0026#39;Customer complaint:\\r\\nNot heavy enough to generate flying stars around head of victim. If being purchased for dropping, recommend ANV02 or ANV03 instead.\u0026#39;); INSERT INTO `productnotes`(`note_id`, `prod_id`, `note_date`, `note_text`) VALUES (114, \u0026#39;SAFE\u0026#39;, \u0026#39;2005-09-07 00:00:00\u0026#39;, \u0026#39;Call from individual trapped in safe plummeting to the ground, suggests an escape hatch be added.\\r\\nComment forwarded to vendor.\u0026#39;); INSERT INTO `vendors`(`vend_id`, `vend_name`, `vend_address`, `vend_city`, `vend_state`, `vend_zip`, `vend_country`) VALUES (1001, \u0026#39;Anvils R Us\u0026#39;, \u0026#39;123 Main Street\u0026#39;, \u0026#39;Southfield\u0026#39;, \u0026#39;MI\u0026#39;, \u0026#39;48075\u0026#39;, \u0026#39;USA\u0026#39;); INSERT INTO `vendors`(`vend_id`, `vend_name`, `vend_address`, `vend_city`, `vend_state`, `vend_zip`, `vend_country`) VALUES (1002, \u0026#39;LT Supplies\u0026#39;, \u0026#39;500 Park Street\u0026#39;, \u0026#39;Anytown\u0026#39;, \u0026#39;OH\u0026#39;, \u0026#39;44333\u0026#39;, \u0026#39;USA\u0026#39;); INSERT INTO `vendors`(`vend_id`, `vend_name`, `vend_address`, `vend_city`, `vend_state`, `vend_zip`, `vend_country`) VALUES (1003, \u0026#39;ACME\u0026#39;, \u0026#39;555 High Street\u0026#39;, \u0026#39;Los Angeles\u0026#39;, \u0026#39;CA\u0026#39;, \u0026#39;90046\u0026#39;, \u0026#39;USA\u0026#39;); INSERT INTO `vendors`(`vend_id`, `vend_name`, `vend_address`, `vend_city`, `vend_state`, `vend_zip`, `vend_country`) VALUES (1004, \u0026#39;Furball Inc.\u0026#39;, \u0026#39;1000 5th Avenue\u0026#39;, \u0026#39;New York\u0026#39;, \u0026#39;NY\u0026#39;, \u0026#39;11111\u0026#39;, \u0026#39;USA\u0026#39;); INSERT INTO `vendors`(`vend_id`, `vend_name`, `vend_address`, `vend_city`, `vend_state`, `vend_zip`, `vend_country`) VALUES (1005, \u0026#39;Jet Set\u0026#39;, \u0026#39;42 Galaxy Road\u0026#39;, \u0026#39;London\u0026#39;, NULL, \u0026#39;N16 6PS\u0026#39;, \u0026#39;England\u0026#39;); INSERT INTO `vendors`(`vend_id`, `vend_name`, `vend_address`, `vend_city`, `vend_state`, `vend_zip`, `vend_country`) VALUES (1006, \u0026#39;Jouets Et Ours\u0026#39;, \u0026#39;1 Rue Amusement\u0026#39;, \u0026#39;Paris\u0026#39;, NULL, \u0026#39;45678\u0026#39;, \u0026#39;France\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;ANV01\u0026#39;, 1001, \u0026#39;.5 ton anvil\u0026#39;, 5.99, \u0026#39;.5 ton anvil, black, complete with handy hook\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;ANV02\u0026#39;, 1001, \u0026#39;1 ton anvil\u0026#39;, 9.99, \u0026#39;1 ton anvil, black, complete with handy hook and carrying case\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;ANV03\u0026#39;, 1001, \u0026#39;2 ton anvil\u0026#39;, 14.99, \u0026#39;2 ton anvil, black, complete with handy hook and carrying case\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;DTNTR\u0026#39;, 1003, \u0026#39;Detonator\u0026#39;, 13.00, \u0026#39;Detonator (plunger powered), fuses not included\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;FB\u0026#39;, 1003, \u0026#39;Bird seed\u0026#39;, 10.00, \u0026#39;Large bag (suitable for road runners)\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;FC\u0026#39;, 1003, \u0026#39;Carrots\u0026#39;, 2.50, \u0026#39;Carrots (rabbit hunting season only)\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;FU1\u0026#39;, 1002, \u0026#39;Fuses\u0026#39;, 3.42, \u0026#39;1 dozen, extra long\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;JP1000\u0026#39;, 1005, \u0026#39;JetPack 1000\u0026#39;, 35.00, \u0026#39;JetPack 1000, intended for single use\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;JP2000\u0026#39;, 1005, \u0026#39;JetPack 2000\u0026#39;, 55.00, \u0026#39;JetPack 2000, multi-use\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;OL1\u0026#39;, 1002, \u0026#39;Oil can\u0026#39;, 8.99, \u0026#39;Oil can, red\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;SAFE\u0026#39;, 1003, \u0026#39;Safe\u0026#39;, 50.00, \u0026#39;Safe with combination lock\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;SLING\u0026#39;, 1003, \u0026#39;Sling\u0026#39;, 4.49, \u0026#39;Sling, one size fits all\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;TNT1\u0026#39;, 1003, \u0026#39;TNT (1 stick)\u0026#39;, 2.50, \u0026#39;TNT, red, single stick\u0026#39;); INSERT INTO `products`(`prod_id`, `vend_id`, `prod_name`, `prod_price`, `prod_desc`) VALUES (\u0026#39;TNT2\u0026#39;, 1003, \u0026#39;TNT (5 sticks)\u0026#39;, 10.00, \u0026#39;TNT, red, pack of 10 sticks\u0026#39;); DROP TABLE IF EXISTS `tb_posts`; CREATE TABLE `tb_posts` ( `id` int NOT NULL AUTO_INCREMENT, `pro_date` datetime DEFAULT NULL, `price_remark` varchar(255) DEFAULT NULL, `title` varchar(255) NOT NULL, `post_content` text, `gmt_created` datetime DEFAULT CURRENT_TIMESTAMP, `gmt_modified` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`id`), FULLTEXT KEY `ft_index` (`post_content`) /*!50100 WITH PARSER `ngram` */ ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (1, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;19.75元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (2, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;20.1元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;北京八里桥农产品中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (3, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;18.5元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (4, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;20元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;北京水屯农副产品批发市场中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (5, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;21.5元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;天津市红旗农贸综合批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (6, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;20元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;天津韩家墅海吉星农产品物流有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (7, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;26元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;邯郸市(馆陶)金凤禽蛋农贸批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (8, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;21元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;邯郸（魏县）天仙果菜批发交易市场服务中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (9, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;19.8元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;河北张家口市京北农产品综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (10, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;22元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;山东青岛黄河路农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (11, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;26元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;山东凯盛国际农产品物流城\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (12, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;22元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;山东威海市农副产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (13, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;21.6元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;山东滨州(六街）鲁北蔬菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (14, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;20.6元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;河南万邦国际农产品物流股份有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (15, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;28元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;河南金牛大别山农产品现代物流中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (16, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;23元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;湖南长沙马王堆农产品股份有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (17, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;23.58元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;红星实业集团有限公司红星农副产品大市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (18, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;24元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;绵阳市高水农副产品批发有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (19, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;26元/公斤\u0026#39;, \u0026#39;猪肉(白条猪)\u0026#39;, \u0026#39;四川广安市邻水县农产品交易中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (20, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;66元/公斤\u0026#39;, \u0026#39;牛肉\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (21, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;67元/公斤\u0026#39;, \u0026#39;牛肉\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (22, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;67.7元/公斤\u0026#39;, \u0026#39;牛肉\u0026#39;, \u0026#39;北京八里桥农产品中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (23, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;65.75元/公斤\u0026#39;, \u0026#39;牛肉\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (24, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;67元/公斤\u0026#39;, \u0026#39;牛肉\u0026#39;, \u0026#39;北京水屯农副产品批发市场中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (25, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;70元/公斤\u0026#39;, \u0026#39;牛肉\u0026#39;, \u0026#39;天津市金钟蔬菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (26, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;72元/公斤\u0026#39;, \u0026#39;牛肉\u0026#39;, \u0026#39;天津韩家墅海吉星农产品物流有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (27, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;70元/公斤\u0026#39;, \u0026#39;牛肉\u0026#39;, \u0026#39;石家庄桥西蔬菜中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (28, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;67元/公斤\u0026#39;, \u0026#39;牛肉\u0026#39;, \u0026#39;邯郸（魏县）天仙果菜批发交易市场服务中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (29, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;83元/公斤\u0026#39;, \u0026#39;牛肉\u0026#39;, \u0026#39;山西省长治市紫坊农产品综合交易市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (30, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;53元/公斤\u0026#39;, \u0026#39;羊肉\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (31, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;46.5元/公斤\u0026#39;, \u0026#39;羊肉\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (32, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;44元/公斤\u0026#39;, \u0026#39;羊肉\u0026#39;, \u0026#39;北京八里桥农产品中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (33, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;44元/公斤\u0026#39;, \u0026#39;羊肉\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (34, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;57元/公斤\u0026#39;, \u0026#39;羊肉\u0026#39;, \u0026#39;北京水屯农副产品批发市场中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (35, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;74元/公斤\u0026#39;, \u0026#39;羊肉\u0026#39;, \u0026#39;天津市金钟蔬菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (36, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;78元/公斤\u0026#39;, \u0026#39;羊肉\u0026#39;, \u0026#39;天津韩家墅海吉星农产品物流有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (37, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;69元/公斤\u0026#39;, \u0026#39;羊肉\u0026#39;, \u0026#39;石家庄桥西蔬菜中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (38, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;70元/公斤\u0026#39;, \u0026#39;羊肉\u0026#39;, \u0026#39;邯郸（魏县）天仙果菜批发交易市场服务中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (39, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;77元/公斤\u0026#39;, \u0026#39;羊肉\u0026#39;, \u0026#39;山西省长治市紫坊农产品综合交易市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (40, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;15.7元/公斤\u0026#39;, \u0026#39;白条鸡\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (41, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;15.8元/公斤\u0026#39;, \u0026#39;白条鸡\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (42, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;15.2元/公斤\u0026#39;, \u0026#39;白条鸡\u0026#39;, \u0026#39;北京八里桥农产品中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (43, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;14元/公斤\u0026#39;, \u0026#39;白条鸡\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (44, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;16元/公斤\u0026#39;, \u0026#39;白条鸡\u0026#39;, \u0026#39;天津市金钟蔬菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (45, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;13.5元/公斤\u0026#39;, \u0026#39;白条鸡\u0026#39;, \u0026#39;石家庄桥西蔬菜中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (46, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;16元/公斤\u0026#39;, \u0026#39;白条鸡\u0026#39;, \u0026#39;邯郸市(馆陶)金凤禽蛋农贸批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (47, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;12.4元/公斤\u0026#39;, \u0026#39;白条鸡\u0026#39;, \u0026#39;邯郸（魏县）天仙果菜批发交易市场服务中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (48, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;15.5元/公斤\u0026#39;, \u0026#39;白条鸡\u0026#39;, \u0026#39;山西省长治市紫坊农产品综合交易市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (49, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;19元/公斤\u0026#39;, \u0026#39;白条鸡\u0026#39;, \u0026#39;内蒙古呼和浩特市东瓦窑农副产品批发市场有限责任公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (50, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3.6元/公斤\u0026#39;, \u0026#39;黄瓜\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (51, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.4元/公斤\u0026#39;, \u0026#39;黄瓜\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (52, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;1.8元/公斤\u0026#39;, \u0026#39;黄瓜\u0026#39;, \u0026#39;北京八里桥农产品中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (53, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2元/公斤\u0026#39;, \u0026#39;黄瓜\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (54, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3元/公斤\u0026#39;, \u0026#39;黄瓜\u0026#39;, \u0026#39;北京水屯农副产品批发市场中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (55, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;1.6元/公斤\u0026#39;, \u0026#39;黄瓜\u0026#39;, \u0026#39;天津市金钟蔬菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (56, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3元/公斤\u0026#39;, \u0026#39;黄瓜\u0026#39;, \u0026#39;天津市红旗农贸综合批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (57, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.1元/公斤\u0026#39;, \u0026#39;黄瓜\u0026#39;, \u0026#39;天津碧城农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (58, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;1.4元/公斤\u0026#39;, \u0026#39;黄瓜\u0026#39;, \u0026#39;天津何庄子农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (59, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;1.8元/公斤\u0026#39;, \u0026#39;黄瓜\u0026#39;, \u0026#39;天津韩家墅海吉星农产品物流有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (60, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;6.6元/公斤\u0026#39;, \u0026#39;西红柿\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (61, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4元/公斤\u0026#39;, \u0026#39;西红柿\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (62, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4元/公斤\u0026#39;, \u0026#39;西红柿\u0026#39;, \u0026#39;北京八里桥农产品中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (63, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4元/公斤\u0026#39;, \u0026#39;西红柿\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (64, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.8元/公斤\u0026#39;, \u0026#39;西红柿\u0026#39;, \u0026#39;天津市金钟蔬菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (65, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3.6元/公斤\u0026#39;, \u0026#39;西红柿\u0026#39;, \u0026#39;天津市红旗农贸综合批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (66, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;17元/公斤\u0026#39;, \u0026#39;樱桃西红柿\u0026#39;, \u0026#39;天津市红旗农贸综合批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (67, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;1.8元/公斤\u0026#39;, \u0026#39;西红柿\u0026#39;, \u0026#39;天津碧城农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (68, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2元/公斤\u0026#39;, \u0026#39;西红柿\u0026#39;, \u0026#39;天津何庄子农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (69, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3.2元/公斤\u0026#39;, \u0026#39;西红柿\u0026#39;, \u0026#39;天津韩家墅海吉星农产品物流有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (70, NULL, NULL, \u0026#39;\u0026#39;, NULL, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (71, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;1.9元/公斤\u0026#39;, \u0026#39;大白菜\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (72, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;0.8元/公斤\u0026#39;, \u0026#39;大白菜\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (73, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;0.7元/公斤\u0026#39;, \u0026#39;大白菜\u0026#39;, \u0026#39;北京八里桥农产品中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (74, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;1元/公斤\u0026#39;, \u0026#39;大白菜\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (75, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;1.88元/公斤\u0026#39;, \u0026#39;大白菜\u0026#39;, \u0026#39;北京水屯农副产品批发市场中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (76, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;0.7元/公斤\u0026#39;, \u0026#39;大白菜\u0026#39;, \u0026#39;天津市金钟蔬菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (77, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;1.2元/公斤\u0026#39;, \u0026#39;大白菜\u0026#39;, \u0026#39;天津市红旗农贸综合批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (78, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;0.6元/公斤\u0026#39;, \u0026#39;大白菜\u0026#39;, \u0026#39;天津碧城农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (79, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;0.8元/公斤\u0026#39;, \u0026#39;大白菜\u0026#39;, \u0026#39;天津何庄子农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (80, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;0.9元/公斤\u0026#39;, \u0026#39;大白菜\u0026#39;, \u0026#39;天津韩家墅海吉星农产品物流有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (81, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.2元/公斤\u0026#39;, \u0026#39;土豆\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (82, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3.1元/公斤\u0026#39;, \u0026#39;土豆\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (83, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.3元/公斤\u0026#39;, \u0026#39;土豆\u0026#39;, \u0026#39;北京八里桥农产品中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (84, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.1元/公斤\u0026#39;, \u0026#39;土豆\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (85, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2元/公斤\u0026#39;, \u0026#39;土豆\u0026#39;, \u0026#39;天津市金钟蔬菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (86, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2元/公斤\u0026#39;, \u0026#39;土豆\u0026#39;, \u0026#39;天津市红旗农贸综合批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (87, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.4元/公斤\u0026#39;, \u0026#39;土豆\u0026#39;, \u0026#39;天津碧城农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (88, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;1.8元/公斤\u0026#39;, \u0026#39;土豆\u0026#39;, \u0026#39;天津何庄子农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (89, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2元/公斤\u0026#39;, \u0026#39;土豆\u0026#39;, \u0026#39;天津韩家墅海吉星农产品物流有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (90, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;1.9元/公斤\u0026#39;, \u0026#39;土豆\u0026#39;, \u0026#39;石家庄桥西蔬菜中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (91, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;8.5元/公斤\u0026#39;, \u0026#39;大蒜\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (92, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3.4元/公斤\u0026#39;, \u0026#39;大蒜\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (93, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;8.2元/公斤\u0026#39;, \u0026#39;大蒜\u0026#39;, \u0026#39;北京八里桥农产品中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (94, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.2元/公斤\u0026#39;, \u0026#39;大蒜\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (95, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.6元/公斤\u0026#39;, \u0026#39;大蒜\u0026#39;, \u0026#39;北京水屯农副产品批发市场中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (96, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;5.4元/公斤\u0026#39;, \u0026#39;大蒜\u0026#39;, \u0026#39;天津市金钟蔬菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (97, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.6元/公斤\u0026#39;, \u0026#39;大蒜\u0026#39;, \u0026#39;天津市红旗农贸综合批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (98, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.6元/公斤\u0026#39;, \u0026#39;大蒜\u0026#39;, \u0026#39;天津碧城农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (99, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;5.2元/公斤\u0026#39;, \u0026#39;大蒜\u0026#39;, \u0026#39;天津韩家墅海吉星农产品物流有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (100, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.3元/公斤\u0026#39;, \u0026#39;大蒜\u0026#39;, \u0026#39;石家庄桥西蔬菜中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (101, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;7元/公斤\u0026#39;, \u0026#39;生姜\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (102, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3.3元/公斤\u0026#39;, \u0026#39;生姜\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (103, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;5.5元/公斤\u0026#39;, \u0026#39;生姜\u0026#39;, \u0026#39;北京八里桥农产品中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (104, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.1元/公斤\u0026#39;, \u0026#39;生姜\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (105, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3.2元/公斤\u0026#39;, \u0026#39;生姜\u0026#39;, \u0026#39;天津市金钟蔬菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (106, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3元/公斤\u0026#39;, \u0026#39;生姜\u0026#39;, \u0026#39;天津市红旗农贸综合批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (107, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3.3元/公斤\u0026#39;, \u0026#39;生姜\u0026#39;, \u0026#39;天津碧城农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (108, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3元/公斤\u0026#39;, \u0026#39;生姜\u0026#39;, \u0026#39;天津何庄子农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (109, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.5元/公斤\u0026#39;, \u0026#39;生姜\u0026#39;, \u0026#39;天津韩家墅海吉星农产品物流有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (110, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4元/公斤\u0026#39;, \u0026#39;生姜\u0026#39;, \u0026#39;石家庄桥西蔬菜中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (111, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;5.3元/公斤\u0026#39;, \u0026#39;香蕉\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (112, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;7.3元/公斤\u0026#39;, \u0026#39;香蕉\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (113, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;7.4元/公斤\u0026#39;, \u0026#39;香蕉\u0026#39;, \u0026#39;北京八里桥农产品中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (114, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;8.05元/公斤\u0026#39;, \u0026#39;香蕉\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (115, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;7元/公斤\u0026#39;, \u0026#39;香蕉\u0026#39;, \u0026#39;天津市金钟蔬菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (116, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;5.9元/公斤\u0026#39;, \u0026#39;香蕉\u0026#39;, \u0026#39;天津市红旗农贸综合批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (117, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;8元/公斤\u0026#39;, \u0026#39;香蕉\u0026#39;, \u0026#39;天津韩家墅海吉星农产品物流有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (118, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;6.05元/公斤\u0026#39;, \u0026#39;香蕉\u0026#39;, \u0026#39;石家庄桥西蔬菜中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (119, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.4元/公斤\u0026#39;, \u0026#39;香蕉\u0026#39;, \u0026#39;乐亭县冀东果菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (120, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4元/公斤\u0026#39;, \u0026#39;香蕉\u0026#39;, \u0026#39;邯郸市(馆陶)金凤禽蛋农贸批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (121, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;7.5元/公斤\u0026#39;, \u0026#39;富士苹果\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (122, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;6.6元/公斤\u0026#39;, \u0026#39;富士苹果\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (123, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;7.8元/公斤\u0026#39;, \u0026#39;富士苹果\u0026#39;, \u0026#39;北京八里桥农产品中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (124, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;9元/公斤\u0026#39;, \u0026#39;富士苹果\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (125, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;7元/公斤\u0026#39;, \u0026#39;富士苹果\u0026#39;, \u0026#39;天津市红旗农贸综合批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (126, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;11元/公斤\u0026#39;, \u0026#39;富士苹果\u0026#39;, \u0026#39;天津韩家墅海吉星农产品物流有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (127, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3.8元/公斤\u0026#39;, \u0026#39;富士苹果\u0026#39;, \u0026#39;乐亭县冀东果菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (128, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3元/公斤\u0026#39;, \u0026#39;富士苹果\u0026#39;, \u0026#39;邯郸市(馆陶)金凤禽蛋农贸批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (129, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;5.2元/公斤\u0026#39;, \u0026#39;富士苹果\u0026#39;, \u0026#39;邯郸（魏县）天仙果菜批发交易市场服务中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (130, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;5.6元/公斤\u0026#39;, \u0026#39;富士苹果\u0026#39;, \u0026#39;河北省怀来县京西果菜批发市场有限责任公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (131, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;20元/公斤\u0026#39;, \u0026#39;柠檬\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (132, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;9.5元/公斤\u0026#39;, \u0026#39;柠檬\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (133, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;9元/公斤\u0026#39;, \u0026#39;柠檬\u0026#39;, \u0026#39;石家庄桥西蔬菜中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (134, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;9元/公斤\u0026#39;, \u0026#39;柠檬\u0026#39;, \u0026#39;邯郸（魏县）天仙果菜批发交易市场服务中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (135, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;10元/公斤\u0026#39;, \u0026#39;柠檬\u0026#39;, \u0026#39;山西太原丈子头农产品物流园（原城东利民）\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (136, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;10元/公斤\u0026#39;, \u0026#39;柠檬\u0026#39;, \u0026#39;山西省太原市河西农产品有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (137, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;8元/公斤\u0026#39;, \u0026#39;柠檬\u0026#39;, \u0026#39;长治市金鑫瓜果批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (138, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;8元/公斤\u0026#39;, \u0026#39;柠檬\u0026#39;, \u0026#39;江苏凌家塘市场发展有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (139, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;11元/公斤\u0026#39;, \u0026#39;柠檬\u0026#39;, \u0026#39;济南堤口果品批发发展有限责任公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (140, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;8元/公斤\u0026#39;, \u0026#39;柠檬\u0026#39;, \u0026#39;滕州市农副产品物流中心有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (141, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;14.5元/公斤\u0026#39;, \u0026#39;猕猴桃\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (142, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;6元/公斤\u0026#39;, \u0026#39;猕猴桃\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (143, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;11元/公斤\u0026#39;, \u0026#39;猕猴桃\u0026#39;, \u0026#39;天津市红旗农贸综合批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (144, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;7.5元/公斤\u0026#39;, \u0026#39;猕猴桃\u0026#39;, \u0026#39;天津碧城农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (145, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;10元/公斤\u0026#39;, \u0026#39;猕猴桃\u0026#39;, \u0026#39;石家庄桥西蔬菜中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (146, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;7元/公斤\u0026#39;, \u0026#39;猕猴桃\u0026#39;, \u0026#39;乐亭县冀东果菜批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (147, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;8元/公斤\u0026#39;, \u0026#39;猕猴桃\u0026#39;, \u0026#39;邯郸（魏县）天仙果菜批发交易市场服务中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (148, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;6.8元/公斤\u0026#39;, \u0026#39;猕猴桃\u0026#39;, \u0026#39;山西太原丈子头农产品物流园（原城东利民）\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (149, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;6元/公斤\u0026#39;, \u0026#39;猕猴桃\u0026#39;, \u0026#39;山西省太原市河西农产品有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (150, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;12元/公斤\u0026#39;, \u0026#39;猕猴桃\u0026#39;, \u0026#39;长治市金鑫瓜果批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (151, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.5元/公斤\u0026#39;, \u0026#39;大米\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (152, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;5.5元/公斤\u0026#39;, \u0026#39;大米\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (153, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.9元/公斤\u0026#39;, \u0026#39;大米\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (154, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;5.9元/公斤\u0026#39;, \u0026#39;大米\u0026#39;, \u0026#39;天津碧城农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (155, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.4元/公斤\u0026#39;, \u0026#39;大米\u0026#39;, \u0026#39;天津何庄子农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (156, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;5.4元/公斤\u0026#39;, \u0026#39;大米\u0026#39;, \u0026#39;天津韩家墅海吉星农产品物流有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (157, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.5元/公斤\u0026#39;, \u0026#39;大米\u0026#39;, \u0026#39;石家庄桥西蔬菜中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (158, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.2元/公斤\u0026#39;, \u0026#39;大米\u0026#39;, \u0026#39;山西太原丈子头农产品物流园（原城东利民）\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (159, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;5.7元/公斤\u0026#39;, \u0026#39;大米\u0026#39;, \u0026#39;山西省长治市紫坊农产品综合交易市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (160, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;5.9元/公斤\u0026#39;, \u0026#39;大米\u0026#39;, \u0026#39;山西省晋城市绿欣农产品贸易有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (161, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3.5元/公斤\u0026#39;, \u0026#39;玉米\u0026#39;, \u0026#39;石家庄桥西蔬菜中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (162, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.36元/公斤\u0026#39;, \u0026#39;玉米\u0026#39;, \u0026#39;扶余市三井子园区市场建设运营有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (163, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.32元/公斤\u0026#39;, \u0026#39;玉米棒\u0026#39;, \u0026#39;江苏无锡朝阳农产品大市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (164, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;7元/公斤\u0026#39;, \u0026#39;玉米\u0026#39;, \u0026#39;徐州农副产品中心批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (165, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4元/公斤\u0026#39;, \u0026#39;玉米棒\u0026#39;, \u0026#39;江苏凌家塘市场发展有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (166, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.8元/公斤\u0026#39;, \u0026#39;玉米\u0026#39;, \u0026#39;江苏凌家塘市场发展有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (167, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.5元/公斤\u0026#39;, \u0026#39;玉米\u0026#39;, \u0026#39;江苏苏州南环桥农副产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (168, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;8元/公斤\u0026#39;, \u0026#39;鲜食玉米\u0026#39;, \u0026#39;杭州农副产品物流中心南庄兜农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (169, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;7元/公斤\u0026#39;, \u0026#39;鲜食玉米\u0026#39;, \u0026#39;绍兴市蔬菜果品批发交易市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (170, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.6元/公斤\u0026#39;, \u0026#39;鲜食玉米\u0026#39;, \u0026#39;义乌市市场发展集团有限公司农批管理分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (171, NULL, NULL, \u0026#39;\u0026#39;, NULL, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (172, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;25.5元/公斤\u0026#39;, \u0026#39;花生油\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (173, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;31元/公斤\u0026#39;, \u0026#39;花生油\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (174, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;30元/公斤\u0026#39;, \u0026#39;花生油\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (175, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.5元/公斤\u0026#39;, \u0026#39;花生\u0026#39;, \u0026#39;石家庄桥西蔬菜中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (176, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;28.5元/公斤\u0026#39;, \u0026#39;花生油\u0026#39;, \u0026#39;石家庄桥西蔬菜中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (177, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;18元/公斤\u0026#39;, \u0026#39;花生油\u0026#39;, \u0026#39;邯郸（魏县）天仙果菜批发交易市场服务中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (178, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;9元/公斤\u0026#39;, \u0026#39;花生\u0026#39;, \u0026#39;长治市金鑫瓜果批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (179, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;29元/公斤\u0026#39;, \u0026#39;花生油\u0026#39;, \u0026#39;内蒙古呼和浩特市东瓦窑农副产品批发市场有限责任公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (180, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;11元/公斤\u0026#39;, \u0026#39;花生仁\u0026#39;, \u0026#39;内蒙古呼和浩特市东瓦窑农副产品批发市场有限责任公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (181, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;9元/公斤\u0026#39;, \u0026#39;花生\u0026#39;, \u0026#39;扶余市三井子园区市场建设运营有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (182, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;18元/公斤\u0026#39;, \u0026#39;芝麻(白芝麻)\u0026#39;, \u0026#39;内蒙古呼和浩特市东瓦窑农副产品批发市场有限责任公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (183, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;12元/公斤\u0026#39;, \u0026#39;芝麻(白芝麻)\u0026#39;, \u0026#39;扶余市三井子园区市场建设运营有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (184, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;10.7元/公斤\u0026#39;, \u0026#39;芝麻(白芝麻)\u0026#39;, \u0026#39;广东江门水产冻品副食批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (185, \u0026#39;2022-06-01 00:00:00\u0026#39;, \u0026#39;18元/公斤\u0026#39;, \u0026#39;芝麻(白芝麻)\u0026#39;, \u0026#39;内蒙古呼和浩特市东瓦窑农副产品批发市场有限责任公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (186, \u0026#39;2022-06-01 00:00:00\u0026#39;, \u0026#39;12元/公斤\u0026#39;, \u0026#39;芝麻(白芝麻)\u0026#39;, \u0026#39;扶余市三井子园区市场建设运营有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (187, \u0026#39;2022-06-01 00:00:00\u0026#39;, \u0026#39;10.7元/公斤\u0026#39;, \u0026#39;芝麻(白芝麻)\u0026#39;, \u0026#39;广东江门水产冻品副食批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (188, \u0026#39;2022-05-31 00:00:00\u0026#39;, \u0026#39;18元/公斤\u0026#39;, \u0026#39;芝麻(白芝麻)\u0026#39;, \u0026#39;内蒙古呼和浩特市东瓦窑农副产品批发市场有限责任公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (189, \u0026#39;2022-05-31 00:00:00\u0026#39;, \u0026#39;12元/公斤\u0026#39;, \u0026#39;芝麻(白芝麻)\u0026#39;, \u0026#39;扶余市三井子园区市场建设运营有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (190, \u0026#39;2022-05-31 00:00:00\u0026#39;, \u0026#39;10.7元/公斤\u0026#39;, \u0026#39;芝麻(白芝麻)\u0026#39;, \u0026#39;广东江门水产冻品副食批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (191, \u0026#39;2022-05-30 00:00:00\u0026#39;, \u0026#39;18元/公斤\u0026#39;, \u0026#39;芝麻(白芝麻)\u0026#39;, \u0026#39;内蒙古呼和浩特市东瓦窑农副产品批发市场有限责任公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (192, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.95元/公斤\u0026#39;, \u0026#39;面粉\u0026#39;, \u0026#39;北京朝阳区大洋路综合市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (193, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;2.99元/公斤\u0026#39;, \u0026#39;面粉\u0026#39;, \u0026#39;北京新发地农副产品批发市场信息中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (194, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4元/公斤\u0026#39;, \u0026#39;面粉\u0026#39;, \u0026#39;北京八里桥农产品中心批发市场有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (195, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3.3元/公斤\u0026#39;, \u0026#39;面粉\u0026#39;, \u0026#39;北京顺鑫石门国际农产品批发市场集团有限公司北京分公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (196, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3.8元/公斤\u0026#39;, \u0026#39;面粉\u0026#39;, \u0026#39;天津碧城农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (197, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.2元/公斤\u0026#39;, \u0026#39;面粉\u0026#39;, \u0026#39;天津何庄子农产品批发市场\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (198, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;4.6元/公斤\u0026#39;, \u0026#39;面粉\u0026#39;, \u0026#39;天津韩家墅海吉星农产品物流有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (199, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;6.8元/公斤\u0026#39;, \u0026#39;面粉\u0026#39;, \u0026#39;邯郸（魏县）天仙果菜批发交易市场服务中心\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (200, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;5元/公斤\u0026#39;, \u0026#39;面粉\u0026#39;, \u0026#39;山西太原丈子头农产品物流园（原城东利民）\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); INSERT INTO `tb_posts`(`id`, `pro_date`, `price_remark`, `title`, `post_content`, `gmt_created`, `gmt_modified`) VALUES (201, \u0026#39;2022-06-02 00:00:00\u0026#39;, \u0026#39;3.8元/公斤\u0026#39;, \u0026#39;面粉\u0026#39;, \u0026#39;山西省晋城市绿欣农产品贸易有限公司\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;, \u0026#39;2022-06-02 21:03:32\u0026#39;); "}),a.add({id:155,href:'/life/docs/javadir/',title:" Java技术栈",section:"Docs",content:"目录\r#\r\r  工具文档\n  中间件\n  groovy 脚本\n  多线程与并发\n  javaguide\njavabetter\ninterview\nJava-Interview-Advanced\nfucking-algorithm\nhuihut-interview\n"}),a.add({id:156,href:'/life/docs/computer_network/network_architecture/%E5%88%86%E5%B1%82%E7%BB%93%E6%9E%84/',title:"分层结构",section:"网络体系结构",content:"为什么要分层，分层要做什么\r#\r\r （1）发起通信的计算机必须将数据通信的通路进行激活。 （2）要告诉网络如何识别目的主机。 （3）发起通信的计算机要查明目的主机是否开机，并且与网络连接正常。 （4）发起通信的计算机要弄清楚，对方计算机中文件管理程序是否已经做好准备工作。 （5）确保差错和意外可以解决。  正式认识分层结构\r#\r\r 使用 协议 ，服务， 接口 来完成分层\n 总结\r#\r\r 网络体系结构是从功能上描述计算机网络结构 计算机网络体系结构简称网络体系结构是分层结构 每层遵循某个/多个网络协议以完成本层功能 计算机网络体系结构是计算机网络的各层及其协议的集合 上层要求服务 下层提供服务 实际是上层制定接口标准，下层实现接口标准  "}),a.add({id:157,href:'/life/docs/operating_system/two_chapter/2_1_4/',title:"进程通信",section:"第二章 进程管理 ",content:""}),a.add({id:158,href:'/life/docs/javadir/middleware/solr/include_document/',title:"内嵌文档",section:"solr",content:"内嵌文档\r#\r\r"}),a.add({id:159,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E6%B2%9F%E9%80%9A%E6%8A%80%E5%B7%A7/case5/',title:"程序员如何向同事说明自己的问题",section:"沟通技巧",content:"例子1\r#\r\r"}),a.add({id:160,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/idx4etcwwy/',title:"如何系统地训练口才",section:"自信",content:"如何系统地训练口才\r#\r\r 从不敢在人前讲话到学院迎新晚会主持人，说说我的练习经历。\n 一、首先练习自己的声音\r#\r\r因为人家听你讲话，第一注意到的就是声音，而后才是内容。\n发音最重要的就是唇舌，唇舌力度够了，发音就会准确，字音会拉开，使自己的声音饱满动听一些。另外还要练习自己的气息，不然声音发不出去，嗓子会很难受。\n△唇：八百标兵奔北坡，炮兵并排北边跑，炮兵怕把标兵碰，标兵怕把炮兵炮。\n△舌：牛郎年年恋刘娘，刘娘连连恋牛郎。牛郎恋刘娘，刘娘念牛郎，郎念娘来，娘恋郎。\n△气息：出东门,过大桥,大桥前面一树枣,拿着竿子去打枣,青的多,红的少,一个枣,两个枣,三个枣,四个枣,五个枣,六个枣,七个枣,八个枣,九个枣,十个枣;十个枣,九个枣,八个枣,七个枣,六个枣,五个枣,四个枣,三个枣,两个枣,一个枣,这是一个绕口令,一口气说完才算好。\n△躺下来朗读：躺下来时，用的是腹式呼吸，这是练声练气的最好方法。每天睡觉之前，躺着大声朗读十分钟，每天起床之前，先唱首歌。坚持一两个月，觉会感觉自己的呼吸流畅了，声音洪亮，音质也好听了。\n二、模仿名人的演讲 (快速的学习一个新的技能最好的就是模仿)\r#\r\r刚开始的时候，很难找到自己演讲，发言的风格，所以先从模仿开始。看看名人演讲有什么优点自己可以利用，就记录下来，慢慢的就会有自己的风格。\n我最开始看的是马云的演讲，后开看《奇葩说》去模仿了里边很多人的风格。\n你要注意他们的说话方式，语气，动作，有哪些好的词汇可以利用。\n三、给自己录视频和音频 (角色扮演法)\r#\r\r前边我们说去模仿名人演讲，这是输入，然后给自己录就是输出。\n看自己的视频时，多注意神情，动作，站姿之类的别人很容易注意到的地方。哪里不满意就再去看看名人是怎么做的，反复纠正，直到满意。\n听音频，听自己说话的感觉，自己讲的当下，自己是感觉不出来的，就得事后反复听。那些细节没有处理好，比如情绪，语气，停顿的地方以及停顿时间的长短。\n可以找别看看自己录的视频和音频，倾听别人的意见。\n四、每天读五篇以上的文章并适量背诵\r#\r\r可以读短片散文，用来练习自己的感情和情绪的控制。读新闻来练习自己的发音，和语气等。\n但你千万别给自己设限，每天必须读多少散文或者新闻之类的。就平时闲下来的时候，手边有任何文字类的东西，都可以拿来读。\n背诵一些好的文章，不仅可以锻炼记忆能力，天长日久，那些文章自己就自然而然的转化为自己的词语了，熟到一定程度，就能张口就来了。\n如果读新闻，最好在读完之后，用自己的语言复述给别人听，要简单明了，可以锻炼自己的逻辑思维能力。\n朗读时，多做一些速读训练。这旨在锻炼人的口齿伶俐，语音准确，吐字清晰。但是快而不乱，每个字，每个音都要发得十分清楚，准确，没有含混不清的地方。\n五、描述法 (对于内向的人来说很好的练习方法)\r#\r\r就是把你看到的景、事、物、人用描述性的语言表达出来。\n描述法可以说是最有效的一种练习方法。因为这里没有现成的演讲稿、散文、诗歌等材料，而是要求你自己去组织语言进行描述。\n所以描述法训练的主要目的就在于训练你的语言组织能力和语言条理性。在描述时，要抓住特点进行描述。语言要清楚明白，尽量生动一些，活泼一些。\n六、找机会上台\r#\r\r自己练习千百次，不如上台一次。自己练的再好，一些舞台上的突发情况也是遇不到的。每一次上台都是突破自己的机会，不管说得如何，都要去尝试，积累经验。\n另外的一些小技巧：\r#\r\r1、抑是拖气，让表达更清楚。扬是爆破音，引起听众的注意。停顿最重要，讲短句，不讲长句。\n2、一口气一句话，一句话一个人。\n3、讲故事是训练事理逻辑的好方法。把故事讲好就是讲心理活动和对话。\n4、先讲结果，在简单解释清楚过程。\n5、即兴讲话，要记结构，少记内容。熟悉场合，讲我和你的故事。\n6、结构是表达逻辑的核心，上台前，要设计一个好的结构。\n推荐提升口才的书单\r#\r\r 1、《高效对话》  “高效沟通才能得到你想要的结果，而其他一切沟通仅是说话而已。”这本书会告诉你，如何突破喋喋不休，用策略来解释自己的想法，并让对方听明白。\n 2、《精准表达》  这本书会教会你，如何克服“语无论次、颠三倒四、词不达意、不知所云”、学会用精准的语言和方式，精准的向对方表达，快速提升表达能力。\n 3、《口才三绝》  这本书教你如何恰当的赞美他人，而不是一听就知道是在拍马屁，如何巧妙地体现幽默，如何有效的拒绝他人，从而避免误会和困扰。\n 4、《逻辑说服力》  这本书教你如何动之以情，晓之以理，运用富有逻辑的表达方式、沟通技巧说服他人，让他人心悦诚服的接受你的“意识灌输”\n 5、《好口才决定好人生》  羡慕内个“铁齿铜牙的纪晓岚”吗？这本书，教你如何在社交活动中把话说的滴水不漏、说到点子上、说到心窝里，还教会你如何把话说的得心应手、如何巧妙化解困境。\n绕口令我也给你找好了：\r#\r\r1、 童子打桐子，童子打桐子，桐子落，童子乐。\n2、 湿字纸：刚往窗上糊字纸，你就隔着窗户撕字纸，一次撕下横字纸，一次撕下竖字纸，横竖两次撕了四十四张湿字纸，是字纸你就撕字纸，不是内字纸，你就不要胡乱地撕一地纸。\n3、粉红墙上容画凤凰，凤凰画在粉红墙。红凤凰、粉凤凰，红粉凤凰、花凤凰。\n4、蒋家羊，杨家墙， 蒋家羊撞倒了杨家墙，杨家墙压死了蒋家羊，杨家要蒋家赔墙，蒋家要杨家赔羊。\n5、一个跛子，牵着驴子; 一个驼子，拉着车子；一个瞎子，抱着孩子。 跛子的驴子，撞着驼子的车子；驼子的车子，碰倒瞎子的孩子; 瞎子要打驼子，驼子要打跛子。\n6、东边大婆婆之家有一只白鼻头大白猫。西边二婆婆家也有一只白鼻头大白猫。一天东边大婆婆家的白鼻头大白猫和西边二婆婆家的白鼻头大白猫相打，也不晓得东边大婆婆家的白鼻头大白猫赢的呢？还是西边二婆婆家的白鼻头大白猫赢的？\n7、房子里有箱子，箱子里有匣子，匣子里有盒子，盒子里有镯子；镯子外有盒子，盒子外有匣子，匣子外有箱子，箱子外有房子。\n8、家后有座庙，天天猫来尿，不知是庙尿猫，还是猫尿庙。\n9、楼上一块破瓦，楼下一匹骡马，破瓦落下来打了骡马，骡马跳起来踩了破瓦。 天上一颗星，地上一个人，星照人，人瞧星，星照不清人，人瞧不清星。\n10、龚先生东方走来肩了一棵松，翁先生西方走来拿了一只钟。龚先生的松撞破了翁先生的钟，翁先生扭住了龚先生的一棵松。龚先生要翁先生放了他的松，翁先生要龚先生赔了他的钟。龚先生不肯赔还翁先生的钟，翁先生不肯放还龚先生的松。\n11、九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。\n12、营房里出来两个排，直奔正北菜园来，一排浇波菜，二排砍白菜。剩下八百八十八棵大白菜没有掰。一排浇完了波菜，又把八百八十八棵大白菜掰下来；二排砍完白菜，把一排掰下来的八百八十八棵大白菜背回来。\n题外话\r#\r\r说了这么多，最重要的是你要剪坚持，做一次不做一次，坚持一个星期就放弃。那不管给你什么好方法，都没用的。\n做任何事，三个月是能看见明显变化的，就给自己三个月的时间，说不定会改变自己的一生。\n辅助锻炼\r#\r\r1、每天至少20分钟阅读励志书籍或口才书籍，培养自己积极心态，学习一些技巧。\n2、每天放声大笑10次，乐观面对生活，放松情绪。\n3、训练接受他人的视线、目光，培养自信和观察能力。\n4、培养微笑的习惯，要笑得灿烂、笑得真诚，锻炼亲和力。\n5、学会检讨，每天总结得与失，写心得体会。每周要全面总结成效及不足，并确定下周的目标。\n口才锻炼\r#\r\r(一)每天至少10分钟深呼吸训练。\n(二)抓住一切机会讲话，锻炼口才。\n1、每天至少与5个人有意识地交流思想。\n2、每天大声朗诵或大声讲至少5分钟。\n3、每天训练自己“三分钟演讲”一次或“三分钟默讲”一次。\n4、每天给亲人、同事至少讲一个故事或完整叙述一件事情。\n5、注意讲话时的一些技巧。\nA、讲话前，深吸一口气，平静心情，面带微笑，眼神交流一遍后，开始讲话。\nB、勇敢地讲出第一句话，声音大一点，速度慢一点，说短句，语句中间不打岔。\nC、当发现紧张卡壳时，停下来有意识地深吸口气，然后随着吐气讲出来。\nD、如果表现不好，自我安慰：“刚才怎么又紧张了?没关系，继续平稳地讲”;同时，用感觉和行动上的自信战胜恐惧。\nE、紧张时，可以做放松练习，深呼吸，或尽力握紧拳头，又迅速放松，连续10次\n其它\r#\r\r锻炼口才最好的方法\r#\r\r  1、训练口齿。多念文章，任何文章，每天定时定量当然是好的，甚至可以录下来，自己听，找不足，这是提高你吐字能力、让你口齿清楚的办法。 其实，任何时候你都有时间锻炼这个能力。当你毫无头绪，不知道如何入门的时候，你拿起一本书读起来，便已经迈出了第一步。\n  2、培养逻辑思维能力。比如，把报纸上大段的新闻缩减成一个概要，提取内容的主干，记得说给别人听。(训练逻辑思维能力的方法，可以轻松搜索到\n  3、和羞涩和腼腆说“不”。这一步你必须跨出去，多与人沟通，尤其是辩论，有意识的通过实践提高自己，一方面是表达的勇气和自信，另一方面是表达的效果。\n  4、有恒心。下决心很容易，坚持下去很难。这和培养外语会话能力、和健身减肥等一样，都是循序渐进的过程，是量变到质变的过程，少则半年，多则一两年。如果能坚持，相信一个长时间未见你的朋友会对你的感觉大为改观，这是由内而外的。所以，勇敢的跨出你的第一步，非常重要。\n  第1个方法超级管用。（随便的文章读起来读了半个小时。 第2天.我天了，口才顺的.都不嘴飘了）\n  参考\n"}),a.add({id:161,href:'/life/docs/javadir/basedir/java-basic-x-annotation/',title:"注解机制详解",section:"Java基础知识 ",content:"注解\r#\r\r 注解是JDK1.5版本开始引入的一个特性，用于对代码进行说明，可以对包、类、接口、字段、方法参数、局部变量等进行注解。它是框架学习和设计者必须掌握的基础\n 注解基础\r#\r\r注解是JDK1.5版本开始引入的一个特性，用于对代码进行说明，可以对包、类、接口、字段、方法参数、局部变量等进行注解。它主要的作用有以下四方面：\n 生成文档，通过代码里标识的元数据生成javadoc文档。 编译检查，通过代码里标识的元数据让编译器在编译期间进行检查验证。 编译时动态处理，编译时通过代码里标识的元数据动态处理，例如动态生成代码。 运行时动态处理，运行时通过代码里标识的元数据动态处理，例如使用反射注入实例。  注解的常见分类：\n  Java自带的标准注解，包括 @Override、@Deprecated和**@SuppressWarnings**，分别用于标明重写某个方法、标明某个类或方法过时、标明要忽略的警告，用这些注解标明后编译器就会进行检查。\n  元注解，元注解是用于定义注解的注解，包括 @Retention 、@Target、@Inherited、@Documented，@Retention用于标明注解被保留的阶段，@Target用于标明注解使用的范围，@Inherited用于标明注解可继承，@Documented用于标明是否生成javadoc文档。\n  自定义注解，可以根据自己的需求定义注解，并可用元注解对自定义注解进行注解。\n  Java内置注解\r#\r\r我们从最为常见的Java内置的注解开始说起，先看下下面的代码：\nclass A{ public void test() { } } class B extends A{ /** * 重载父类的test方法 */ @Override public void test() { } /** * 被弃用的方法 */ @Deprecated public void oldMethod() { } /** * 忽略告警 * * @return */ @SuppressWarnings(\u0026#34;rawtypes\u0026#34;) public List processList() { List list = new ArrayList(); return list; } } Java 1.5开始自带的标准注解，包括@Override、@Deprecated和@SuppressWarnings：\n @Override：表示当前的方法定义将覆盖父类中的方法 @Deprecated：表示代码被弃用，如果使用了被@Deprecated注解的代码则编译器将发出警告 @SuppressWarnings：表示关闭编译器警告信息  内置注解 - @Override\r#\r\r注解类型的定义：\n@Target(ElementType.METHOD) @Retention(RetentionPolicy.SOURCE) public @interface Override { } 从它的定义我们可以看到，这个注解可以被用来修饰方法，并且它只在编译时有效，在编译后的class文件中便不再存在。 这个注解的作用我们大家都不陌生，那就是告诉编译器被修饰的方法是重写的父类的中的相同签名的方法，编译器会对此做出检查，若发现父类中不存在这个方法或是存在的方法签名不同，则会报错。\n内置注解 - @Deprecated\r#\r\r注解的定义如下：\n@Documented @Retention(RetentionPolicy.RUNTIME) @Target(value={CONSTRUCTOR, FIELD, LOCAL_VARIABLE, METHOD, PACKAGE, PARAMETER, TYPE}) public @interface Deprecated { } 从它的定义我们可以知道，它会被文档化，能够保留到运行时，能够修饰构造方法、属性、局部变量、方法、包、参数、类型。 这个注解的作用是告诉编译器被修饰的程序元素已被“废弃”，不再建议用户使用。\n内置注解 - @SuppressWarnings\r#\r\r@Target({TYPE, FIELD, METHOD, PARAMETER, CONSTRUCTOR, LOCAL_VARIABLE}) @Retention(RetentionPolicy.SOURCE) public @interface SuppressWarnings { String[] value(); } 它能够修饰的程序元素包括类型、属性、方法、参数、构造器、局部变量，只能存活在源码时，取值为String[]。它的作用是告诉编译器忽略指定的警告信息，它可以取的值如下所示：\n   参数 作用 原描述     all 抑制所有警告 to suppress all warnings   boxing 抑制装箱、拆箱操作时候的警告 to suppress warnings relative to boxing/unboxing operations   cast 抑制映射相关的警告 to suppress warnings relative to cast operations   dep-ann 抑制启用注释的警告 to suppress warnings relative to deprecated annotation   deprecation 抑制过期方法警告 to suppress warnings relative to deprecation   fallthrough 抑制确在switch中缺失breaks的警告 to suppress warnings relative to missing breaks in switch statements   finally 抑制finally模块没有返回的警告 to suppress warnings relative to finally block that don’t return   hiding 抑制与隐藏变数的区域变数相关的警告 to suppress warnings relative to locals that hide variable（）   incomplete-switch 忽略没有完整的switch语句 to suppress warnings relative to missing entries in a switch statement (enum case)   nls 忽略非nls格式的字符 to suppress warnings relative to non-nls string literals   null 忽略对null的操作 to suppress warnings relative to null analysis   rawtype 使用generics时忽略没有指定相应的类型 to suppress warnings relative to un-specific types when using   restriction 抑制与使用不建议或禁止参照相关的警告 to suppress warnings relative to usage of discouraged or   serial 忽略在serializable类中没有声明serialVersionUID变量 to suppress warnings relative to missing serialVersionUID field for a serializable class   static-access 抑制不正确的静态访问方式警告 to suppress warnings relative to incorrect static access   synthetic-access 抑制子类没有按最优方法访问内部类的警告 to suppress warnings relative to unoptimized access from inner classes   unchecked 抑制没有进行类型检查操作的警告 to suppress warnings relative to unchecked operations   unqualified-field-access 抑制没有权限访问的域的警告 to suppress warnings relative to field access unqualified   unused 抑制没被使用过的代码的警告 to suppress warnings relative to unused code    元注解\r#\r\r 上述内置注解的定义中使用了一些元注解（注解类型进行注解的注解类），在JDK 1.5中提供了4个标准的元注解：@Target，@Retention，@Documented，@Inherited, 在JDK 1.8中提供了两个元注解 @Repeatable和 @Native\n 元注解 - @Target\r#\r\r Target注解的作用是：描述注解的使用范围（即：被修饰的注解可以用在什么地方）\n Target注解用来说明那些被它所注解的注解类可修饰的对象范围： 注解可以用于修饰 packages、types（类、接口、枚举、注解类）、类成员（方法、构造方法、成员变量、枚举值）、方法参数和本地变量（如循环变量、catch参数）， 在定义注解类时使用了@Target 能够更加清晰的知道它能够被用来修饰哪些对象，它的取值范围定义在ElementType 枚举中。\npublic enum ElementType { TYPE, // 类、接口、枚举类  FIELD, // 成员变量（包括：枚举常量）  METHOD, // 成员方法  PARAMETER, // 方法参数  CONSTRUCTOR, // 构造方法  LOCAL_VARIABLE, // 局部变量  ANNOTATION_TYPE, // 注解类  PACKAGE, // 可用于修饰：包  TYPE_PARAMETER, // 类型参数，JDK 1.8 新增  TYPE_USE // 使用类型的任何地方，JDK 1.8 新增  } 元注解 - @Retention \u0026amp; @RetentionTarget\r#\r\r Reteniton注解的作用是：描述注解保留的时间范围（即：被描述的注解在它所修饰的类中可以被保留到何时）\n Reteniton注解用来限定那些被它所注解的注解类在注解到其他类上以后，可被保留到何时，一共有三种策略，定义在RetentionPolicy枚举中。\npublic enum RetentionPolicy { SOURCE, // 源文件保留  CLASS, // 编译期保留，默认值  RUNTIME // 运行期保留，可通过反射去获取注解信息 } 元注解 - @Documented\r#\r\r"}),a.add({id:162,href:'/life/docs/javadir/thread/unsafe/',title:"unsafe",section:"多线程与并发 ",content:"前言\r#\r\r Unsafe类位于sun.misc包下，它是java实现高并发的基础，通过它可以执行一些不安全的操作，如像C语言一样直接操作内存资源，它提供的这些方法增强了java对底层资源的操作能力，但同时也增加了程序出错的风险，所以对它的使用一定要慎重  核心功能介绍\r#\r\r Unsafe提供的API大致可分为内存操作、CAS、Class相关、对象操作、线程调度、系统信息获取、内存屏障相关、数组相关等。下面介绍几个方法的使用。  获取Unsafe对象\r#\r\rimport sun.misc.Unsafe; import java.lang.reflect.Field; public final class UnsafeAccessor { private static Unsafe unsafe; //Unsafe提供的getUnsafe()方法只能被根类加载器加载的类所调用，也就是jdk内部的类。我们可以通过反射来获取Unsafe对象  static { try { //这个名字是 theUnsafe 里面的不要随便写  Field unsafeFile = Unsafe.class.getDeclaredField(\u0026#34;theUnsafe\u0026#34;); unsafeFile.setAccessible(true); //因为是静态属性  unsafe = (Unsafe) unsafeFile.get(null); } catch (Exception e) { } } public static Unsafe getUnsafe() { return unsafe; } } AtomicInteger实现\r#\r\r 在AtomicInteger的实现中，静态属性valueOffset即为属性value的内存偏移地址，在静态代码块中通过Unsafe的objectFieldOffset方法对valueOffset赋值。在AtomicInteger中提供的线程安全方法中，通过属性valueOffset可以定位到属性value的内存地址，从而可以根据CAS实现对value属性的原子操作。   上图为某个AtomicInteger对象自增操作前后的内存示意图，对象的基地址baseAddress=“0x110000”，通过baseAddress+valueOffset得到value的内存地址valueAddress=“0x11000c”；然后通过CAS进行原子性的更新操作，成功则返回，否则继续重试，直到更新成功为止。  CAS\r#\r\r CAS(compareAndSwap)即比较并替换，是实现并发算法时常用到的一种技术，CAS操作包含三个参数，要修改变量的内存位置、预期原值、要修改为的值，如果变量的值和预期原值相等，就修改为新值，否则不做处理。CAS底层为一条原子指令cmpxchg，可以保证原子性，Unsafe提供的CAS方法如compareAndSwapInt底层就是CPU指令cmpxchg  /** * CAS * @param o 包含要修改field的对象 * @param offset 对象中某field的偏移量 * @param expected 期望值 * @param update 更新值 * @return true | false */ public final native boolean compareAndSwapObject(Object o, long offset, Object expected, Object update); public final native boolean compareAndSwapInt(Object o, long offset, int expected,int update); public final native boolean compareAndSwapLong(Object o, long offset, long expected, long update);  compareAndSwapInt 使用 (AtomicInteger中也是使用这个)  public class Demo2 { public static void main(String[] args) throws Exception { long startTime = System.currentTimeMillis(); Demo_B2 demo_b = new Demo_B2(); final int len = 10000000; Thread t1 = new Thread(() -\u0026gt; { for (int i = 0; i \u0026lt; len; i++) { demo_b.increase(); } }); t1.start(); for (int i = 0; i \u0026lt; len; i++) { demo_b.increase(); } t1.join(); long endTime = System.currentTimeMillis(); System.out.println(demo_b.getNumber()); System.out.println(String.format(\u0026#34;time:%s\u0026#34;, (endTime - startTime))); } } class Demo_B2 { //jdk级别代码才能这样 因为这个级别的会涉及到绕过jvm所以得另寻出路  final static Unsafe unsafe = UnsafeAccessor.getUnsafe(); private volatile int value = 0; //内存偏移量地址(相对地址)  private long valueOffset = 0l; public void increase() { if (valueOffset == 0l) { try { valueOffset = unsafe.objectFieldOffset(Demo_B2.class.getDeclaredField(\u0026#34;value\u0026#34;)); } catch (NoSuchFieldException e) { e.printStackTrace(); } } int oldValue = 0; do { oldValue = value; } while (!unsafe.compareAndSwapInt(this, valueOffset, oldValue, oldValue + 1)); } public int getNumber() { return value; } }  compareAndSwapObject 使用  import sun.misc.Unsafe; import java.util.UUID; public class Demo4 { public static void main(String[] args) throws Exception { long startTime = System.currentTimeMillis(); ObjectDemo4 objectDemo4 = new ObjectDemo4(); final int len = 200; Thread t1 = new Thread(() -\u0026gt; { for (int i = 0; i \u0026lt; len; i++) { try { objectDemo4.increaseName(String.valueOf(1)); } catch (Exception e) { e.printStackTrace(); } } }); t1.start(); for (int i = len; i \u0026lt; len * 2; i++) { objectDemo4.increaseName(String.valueOf(1)); } t1.join(); long endTime = System.currentTimeMillis(); System.out.println(objectDemo4.getName()); System.out.println(objectDemo4.getName().split(\u0026#34;-\u0026#34;).length); System.out.println(String.format(\u0026#34;time:%s\u0026#34;, (endTime - startTime))); } } class ObjectDemo4 { final static Unsafe unsafe = UnsafeAccessor.getUnsafe(); private Integer id; private String name; public Integer getId() { return id; } public void setId(Integer id) { this.id = id; } public String getName() { return name; } public void setName(String name) { this.name = name; } public void increaseName(String value) throws Exception { long valueOffset = unsafe.objectFieldOffset(ObjectDemo4.class.getDeclaredField(\u0026#34;name\u0026#34;)); String oldValue = null; do { oldValue = (String) unsafe.getObject(this, valueOffset); } while (!unsafe.compareAndSwapObject(this, valueOffset, oldValue, oldValue == null ? value : oldValue + \u0026#34;-\u0026#34;+value)); } } 对象操作\r#\r\r 此部分主要包含对象成员属性相关操作及非常规的对象实例化方式等相关方法  //返回对象成员属性在内存地址相对于此对象的内存地址的偏移量 public native long objectFieldOffset(Field f); //获得给定对象的指定地址偏移量的值，与此类似操作还有：getInt，getDouble，getLong，getChar等 public native Object getObject(Object o, long offset); //给定对象的指定地址偏移量设值，与此类似操作还有：putInt，putDouble，putLong，putChar等 public native void putObject(Object o, long offset, Object x); //从对象的指定偏移量处获取变量的引用，使用volatile的加载语义 public native Object getObjectVolatile(Object o, long offset); //存储变量的引用到对象的指定的偏移量处，使用volatile的存储语义 public native void putObjectVolatile(Object o, long offset, Object x); //有序、延迟版本的putObjectVolatile方法，不保证值的改变被其他线程立即看到。只有在field被volatile修饰符修饰时有效 public native void putOrderedObject(Object o, long offset, Object x); //绕过构造方法、初始化代码来创建对象 public native Object allocateInstance(Class\u0026lt;?\u0026gt; cls) throws InstantiationException;   常规对象实例化方式：我们通常所用到的创建对象的方式，从本质上来讲，都是通过new机制来实现对象的创建。但是，new机制有个特点就是当类只提供有参的构造器且没有显式声明无参构造器时，必须使用有参构造器并传递相应个数的参数进行对象构造\n  非常规的实例化方式：而Unsafe中提供的allocateInstance方法，仅通过Class对象就可以创建此类的实例对象， 而且不需要调用其构造器、初始化代码、JVM安全检查等。它抑制修饰符检测，也就是即使构造器是private修饰的也能通过此方法实例化。 由于这种特性，allocateInstance在java.lang.invoke、Objenesis（提供绕过类构造器的对象生成方式）、Gson（反序列化时用到）中都有相应的使用\n  参考\n"}),a.add({id:163,href:'/life/docs/javadir/thread/tool/executor/',title:"Executor",section:"并发工具 ",content:"Executor\r#\r\r"}),a.add({id:164,href:'/life/docs/%E8%84%9A%E6%9C%AC/uniapp%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/',title:"uniapp基础知识 ",section:"脚本",content:"uni-app的基本使用\r#\r\r课程介绍：\n基础部分：\n 环境搭建 页面外观配置 数据绑定 uni-app的生命周期 组件的使用 uni-app中样式学习 在uni-app中使用字体图标和开启scss 条件注释跨端兼容 uni中的事件 导航跳转 组件创建和通讯，及组件的生命周期 uni-app中使用uni-ui库  项目：xxxx\nuni-app介绍 官方网页\r#\r\runi-app view uni-app view\r#\r\runi-app 是一个使用 Vue.js 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、H5、以及各种小程序（微信/支付宝/百度/头条/QQ/钉钉）等多个平台。\n即使不跨端，uni-app同时也是更好的小程序开发框架。\n具有vue和微信小程序的开发经验，可快速上手uni-app\n为什么要去学习uni-app？\n相对开发者来说，减少了学习成本，因为只学会uni-app之后，即可开发出iOS、Android、H5、以及各种小程序的应用，不需要再去学习开发其他应用的框架，相对公司而言，也大大减少了开发成本。\n环境搭建\r#\r\r安装编辑器HbuilderX 下载地址\nHBuilderX是通用的前端开发工具，但为uni-app做了特别强化。\n下载App开发版，可开箱即用\n安装微信开发者工具 下载地址\n利用HbuilderX初始化项目\r#\r\r  点击HbuilderX菜单栏文件\u0026gt;项目\u0026gt;新建\n  选择uni-app,填写项目名称，项目创建的目录\n  运行项目\r#\r\r在菜单栏中点击运行，运行到浏览器，选择浏览器即可运行\n在微信开发者工具里运行：进入hello-uniapp项目，点击工具栏的运行 -\u0026gt; 运行到小程序模拟器 -\u0026gt; 微信开发者工具，即可在微信开发者工具里面体验uni-app\n在微信开发者工具里运行：进入hello-uniapp项目，点击工具栏的运行 -\u0026gt; 运行到手机或模拟器 -\u0026gt; 选择调式的手机\n注意：\n 如果是第一次使用，需要先配置小程序ide的相关路径，才能运行成功 微信开发者工具在设置中安全设置，服务端口开启  介绍项目目录和文件作用\r#\r\rpages.json 文件用来对 uni-app 进行全局配置，决定页面文件的路径、窗口样式、原生的导航栏、底部的原生tabbar 等\nmanifest.json 文件是应用的配置文件，用于指定应用的名称、图标、权限等。\nApp.vue是我们的跟组件，所有页面都是在App.vue下进行切换的，是页面入口文件，可以调用应用的生命周期函数。\nmain.js是我们的项目入口文件，主要作用是初始化vue实例并使用需要的插件。\nuni.scss文件的用途是为了方便整体控制应用的风格。比如按钮颜色、边框风格，uni.scss文件里预置了一批scss变量预置。\nunpackage 就是打包目录，在这里有各个平台的打包文件\npages 所有的页面存放目录\nstatic 静态资源目录，例如图片等\ncomponents 组件存放目录\n为了实现多端兼容，综合考虑编译速度、运行性能等因素，uni-app 约定了如下开发规范：\n 页面文件遵循 Vue 单文件组件 (SFC) 规范 组件标签靠近小程序规范，详见uni-app 组件规范 接口能力（JS API）靠近微信小程序规范，但需将前缀 wx 替换为 uni，详见uni-app接口规范 数据绑定及事件处理同 Vue.js 规范，同时补充了App及页面的生命周期 为兼容多端运行，建议使用flex布局进行开发  全局配置和页面配置\r#\r\r通过globalStyle进行全局配置\r#\r\r用于设置应用的状态栏、导航条、标题、窗口背景色等。详细文档\n   属性 类型 默认值 描述     navigationBarBackgroundColor HexColor #F7F7F7 导航栏背景颜色（同状态栏背景色）   navigationBarTextStyle String white 导航栏标题颜色及状态栏前景颜色，仅支持 black/white   navigationBarTitleText String  导航栏标题文字内容   backgroundColor HexColor #ffffff 窗口的背景色   backgroundTextStyle String dark 下拉 loading 的样式，仅支持 dark / light   enablePullDownRefresh Boolean false 是否开启下拉刷新，详见页面生命周期。   onReachBottomDistance Number 50 页面上拉触底事件触发时距页面底部距离，单位只支持px，详见页面生命周期    创建新的message页面\r#\r\r右键pages新建message目录，在message目录下右键新建.vue文件,并选择基本模板\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; 这是信息页面 \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; \u0026lt;/style\u0026gt; 通过pages来配置页面\r#\r\r   属性 类型 默认值 描述     path String  配置页面路径   style Object  配置页面窗口表现，配置项参考 pageStyle    pages数组数组中第一项表示应用启动页\n\u0026#34;pages\u0026#34;: [ 、 { \u0026#34;path\u0026#34;:\u0026#34;pages/message/message\u0026#34; }, { \u0026#34;path\u0026#34;: \u0026#34;pages/index/index\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;navigationBarTitleText\u0026#34;: \u0026#34;uni-app\u0026#34; } } ] 通过style修改页面的标题和导航栏背景色，并且设置h5下拉刷新的特有样式\n\u0026#34;pages\u0026#34;: [ //pages数组中第一项表示应用启动页，参考：https://uniapp.dcloud.io/collocation/pages 	{ \u0026#34;path\u0026#34;:\u0026#34;pages/message/message\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;navigationBarBackgroundColor\u0026#34;: \u0026#34;#007AFF\u0026#34;, \u0026#34;navigationBarTextStyle\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;enablePullDownRefresh\u0026#34;: true, \u0026#34;disableScroll\u0026#34;: true, \u0026#34;h5\u0026#34;: { \u0026#34;pullToRefresh\u0026#34;: { \u0026#34;color\u0026#34;: \u0026#34;#007AFF\u0026#34; } } } } ] 配置tabbar\r#\r\r如果应用是一个多 tab 应用，可以通过 tabBar 配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页。\nTips\n 当设置 position 为 top 时，将不会显示 icon tabBar 中的 list 是一个数组，只能配置最少2个、最多5个 tab，tab 按数组的顺序排序。  属性说明：\n   属性 类型 必填 默认值 描述 平台差异说明     color HexColor 是  tab 上的文字默认颜色    selectedColor HexColor 是  tab 上的文字选中时的颜色    backgroundColor HexColor 是  tab 的背景色    borderStyle String 否 black tabbar 上边框的颜色，仅支持 black/white App 2.3.4+ 支持其他颜色值   list Array 是  tab 的列表，详见 list 属性说明，最少2个、最多5个 tab    position String 否 bottom 可选值 bottom、top top 值仅微信小程序支持    其中 list 接收一个数组，数组中的每个项都是一个对象，其属性值如下：\n   属性 类型 必填 说明     pagePath String 是 页面路径，必须在 pages 中先定义   text String 是 tab 上按钮文字，在 5+APP 和 H5 平台为非必填。例如中间可放一个没有文字的+号图标   iconPath String 否 图片路径，icon 大小限制为40kb，建议尺寸为 81px * 81px，当 postion 为 top 时，此参数无效，不支持网络图片，不支持字体图标   selectedIconPath String 否 选中时的图片路径，icon 大小限制为40kb，建议尺寸为 81px * 81px ，当 postion 为 top 时，此参数无效    案例代码：\n\u0026#34;tabBar\u0026#34;: { \u0026#34;list\u0026#34;: [ { \u0026#34;text\u0026#34;: \u0026#34;首页\u0026#34;, \u0026#34;pagePath\u0026#34;:\u0026#34;pages/index/index\u0026#34;, \u0026#34;iconPath\u0026#34;:\u0026#34;static/tabs/home.png\u0026#34;, \u0026#34;selectedIconPath\u0026#34;:\u0026#34;static/tabs/home-active.png\u0026#34; }, { \u0026#34;text\u0026#34;: \u0026#34;信息\u0026#34;, \u0026#34;pagePath\u0026#34;:\u0026#34;pages/message/message\u0026#34;, \u0026#34;iconPath\u0026#34;:\u0026#34;static/tabs/message.png\u0026#34;, \u0026#34;selectedIconPath\u0026#34;:\u0026#34;static/tabs/message-active.png\u0026#34; }, { \u0026#34;text\u0026#34;: \u0026#34;我们\u0026#34;, \u0026#34;pagePath\u0026#34;:\u0026#34;pages/contact/contact\u0026#34;, \u0026#34;iconPath\u0026#34;:\u0026#34;static/tabs/contact.png\u0026#34;, \u0026#34;selectedIconPath\u0026#34;:\u0026#34;static/tabs/contact-active.png\u0026#34; } ] } condition启动模式配置\r#\r\r启动模式配置，仅开发期间生效，用于模拟直达页面的场景，如：小程序转发后，用户点击所打开的页面。\n属性说明：\n   属性 类型 是否必填 描述     current Number 是 当前激活的模式，list节点的索引值   list Array 是 启动模式列表    list说明：\n   属性 类型 是否必填 描述     name String 是 启动模式名称   path String 是 启动页面路径   query String 否 启动参数，可在页面的 onLoad 函数里获得    组件的基本使用\r#\r\runi-app提供了丰富的基础组件给开发者，开发者可以像搭积木一样，组合各种组件拼接称自己的应用\nuni-app中的组件，就像 HTML 中的 div 、p、span 等标签的作用一样，用于搭建页面的基础结构\ntext文本组件的用法\r#\r\r001 - text 组件的属性\r#\r\r   属性 类型 默认值 必填 说明     selectable boolean false 否 文本是否可选   space string . 否 显示连续空格，可选参数：ensp、emsp、nbsp   decode boolean false 否 是否解码     text 组件相当于行内标签、在同一行显示 除了文本节点以外的其他节点都无法长按选中  002 - 代码案例\r#\r\r\u0026lt;view\u0026gt; \u0026lt;!-- 长按文本是否可选 --\u0026gt; \u0026lt;text selectable=\u0026#39;true\u0026#39;\u0026gt;来了老弟\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- 显示连续空格的方式 --\u0026gt; \u0026lt;view\u0026gt; \u0026lt;text space=\u0026#39;ensp\u0026#39;\u0026gt;来了 老弟\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;text space=\u0026#39;emsp\u0026#39;\u0026gt;来了 老弟\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;text space=\u0026#39;nbsp\u0026#39;\u0026gt;来了 老弟\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;text\u0026gt;skyblue\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- 是否解码 --\u0026gt; \u0026lt;text decode=\u0026#39;true\u0026#39;\u0026gt;\u0026amp;nbsp; \u0026amp;lt; \u0026amp;gt; \u0026amp;amp; \u0026amp;apos; \u0026amp;ensp; \u0026amp;emsp;\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; view视图容器组件的用法\r#\r\r View 视图容器， 类似于 HTML 中的 div\n 001 - 组件的属性\r#\r\r002 - 代码案例\r#\r\r\u0026lt;view class=\u0026#34;box2\u0026#34; hover-class=\u0026#34;box2_active\u0026#34;\u0026gt; \u0026lt;view class=\u0026#39;box1\u0026#39; hover-class=\u0026#39;active\u0026#39; hover-stop-propagation :hover-start-time=\u0026#34;2000\u0026#34; :hover-stay-time=\u0026#39;2000\u0026#39;\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; button按钮组件的用法\r#\r\r001 - 组件的属性\r#\r\r   属性名 类型 默认值 说明     size String default 按钮的大小   type String default 按钮的样式类型   plain Boolean false 按钮是否镂空，背景色透明   disabled Boolean false 是否按钮   loading Boolean false 名称是否带 loading t图标     button 组件默认独占一行，设置 size 为 mini 时可以在一行显示多个  002 - 案例代码\r#\r\r\u0026lt;button size=\u0026#39;mini\u0026#39; type=\u0026#39;primary\u0026#39;\u0026gt;前端\u0026lt;/button\u0026gt; \u0026lt;button size=\u0026#39;mini\u0026#39; type=\u0026#39;default\u0026#39; disabled=\u0026#39;true\u0026#39;\u0026gt;前端\u0026lt;/button\u0026gt; \u0026lt;button size=\u0026#39;mini\u0026#39; type=\u0026#39;warn\u0026#39; loading=\u0026#39;true\u0026#39;\u0026gt;前端\u0026lt;/button\u0026gt; image组件的使用\r#\r\rimage\r#\r\r图片。\n   属性名 类型 默认值 说明 平台差异说明     src String  图片资源地址    mode String \u0026lsquo;scaleToFill\u0026rsquo; 图片裁剪、缩放的模式     Tips\n \u0026lt;image\u0026gt; 组件默认宽度 300px、高度 225px； src 仅支持相对路径、绝对路径，支持 base64 码； 页面结构复杂，css样式太多的情况，使用 image 可能导致样式生效较慢，出现 “闪一下” 的情况，此时设置 image{will-change: transform} ,可优化此问题。  uni-app中的样式\r#\r\r  rpx 即响应式px，一种根据屏幕宽度自适应的动态单位。以750宽的屏幕为基准，750rpx恰好为屏幕宽度。屏幕变宽，rpx 实际显示效果会等比放大。\n  使用@import语句可以导入外联样式表，@import后跟需要导入的外联样式表的相对路径，用;表示语句结束\n  支持基本常用的选择器class、id、element等\n  在 uni-app 中不能使用 * 选择器。\n  page 相当于 body 节点\n  定义在 App.vue 中的样式为全局样式，作用于每一个页面。在 pages 目录下 的 vue 文件中定义的样式为局部样式，只作用在对应的页面，并会覆盖 App.vue 中相同的选择器。\n  uni-app 支持使用字体图标，使用方式与普通 web 项目相同，需要注意以下几点：\n  字体文件小于 40kb，uni-app 会自动将其转化为 base64 格式；\n  字体文件大于等于 40kb， 需开发者自己转换，否则使用将不生效；\n  字体文件的引用路径推荐使用以 ~@ 开头的绝对路径。\n @font-face {\rfont-family: test1-icon;\rsrc: url('~@/static/iconfont.ttf');\r}\r    如何使用scss或者less\n  uni-app中的数据绑定\r#\r\r在页面中需要定义数据，和我们之前的vue一摸一样，直接在data中定义数据即可\nexport default { data () { return { msg: \u0026#39;hello-uni\u0026#39; } } } 插值表达式的使用\r#\r\r  利用插值表达式渲染基本数据\n\u0026lt;view\u0026gt;{{msg}}\u0026lt;/view\u0026gt;   在插值表达式中使用三元运算\n\u0026lt;view\u0026gt;{{ flag ? \u0026#39;我是真的\u0026#39;:\u0026#39;我是假的\u0026#39; }}\u0026lt;/view\u0026gt;   基本运算\n\u0026lt;view\u0026gt;{{1+1}}\u0026lt;/view\u0026gt;   v-bind动态绑定属性\r#\r\r在data中定义了一张图片，我们希望把这张图片渲染到页面上\nexport default { data () { return { img: \u0026#39;http://destiny001.gitee.io/image/monkey_02.jpg\u0026#39; } } } 利用v-bind进行渲染\n\u0026lt;image v-bind:src=\u0026#34;img\u0026#34;\u0026gt;\u0026lt;/image\u0026gt; 还可以缩写成:\n\u0026lt;image :src=\u0026#34;img\u0026#34;\u0026gt;\u0026lt;/image\u0026gt; v-for的使用\r#\r\rdata中定以一个数组，最终将数组渲染到页面上\ndata () { return { arr: [ { name: \u0026#39;刘能\u0026#39;, age: 29 }, { name: \u0026#39;赵四\u0026#39;, age: 39 }, { name: \u0026#39;宋小宝\u0026#39;, age: 49 }, { name: \u0026#39;小沈阳\u0026#39;, age: 59 } ] } } 利用v-for进行循环\n\u0026lt;view v-for=\u0026#34;(item,i) in arr\u0026#34; :key=\u0026#34;i\u0026#34;\u0026gt;名字：{{item.name}}---年龄：{{item.age}}\u0026lt;/view\u0026gt; uni中的事件\r#\r\r事件绑定\r#\r\r在uni中事件绑定和vue中是一样的，通过v-on进行事件的绑定，也可以简写为@\n\u0026lt;button @click=\u0026#34;tapHandle\u0026#34;\u0026gt;点我啊\u0026lt;/button\u0026gt; 事件函数定义在methods中\nmethods: { tapHandle () { console.log(\u0026#39;真的点我了\u0026#39;) } } 事件传参\r#\r\r  默认如果没有传递参数，事件函数第一个形参为事件对象\n// template\r\u0026lt;button @click=\u0026quot;tapHandle\u0026quot;\u0026gt;点我啊\u0026lt;/button\u0026gt;\r// script\rmethods: {\rtapHandle (e) {\rconsole.log(e)\r}\r}\r  如果给事件函数传递参数了，则对应的事件函数形参接收的则是传递过来的数据\n// template\r\u0026lt;button @click=\u0026quot;tapHandle(1)\u0026quot;\u0026gt;点我啊\u0026lt;/button\u0026gt;\r// script\rmethods: {\rtapHandle (num) {\rconsole.log(num)\r}\r}\r  如果获取事件对象也想传递参数\n// template\r\u0026lt;button @click=\u0026quot;tapHandle(1,$event)\u0026quot;\u0026gt;点我啊\u0026lt;/button\u0026gt;\r// script\rmethods: {\rtapHandle (num,e) {\rconsole.log(num,e)\r}\r}\r  uni的生命周期\r#\r\r应用的生命周期\r#\r\r生命周期的概念：一个对象从创建、运行、销毁的整个过程被成为生命周期。\n生命周期函数：在生命周期中每个阶段会伴随着每一个函数的触发，这些函数被称为生命周期函数\nuni-app 支持如下应用生命周期函数：\n   函数名 说明     onLaunch 当uni-app 初始化完成时触发（全局只触发一次）   onShow 当 uni-app 启动，或从后台进入前台显示   onHide 当 uni-app 从前台进入后台   onError 当 uni-app 报错时触发    页面的生命周期\r#\r\runi-app 支持如下页面生命周期函数：\n   函数名 说明 平台差异说明 最低版本     onLoad 监听页面加载，其参数为上个页面传递的数据，参数类型为Object（用于页面传参），参考示例     onShow 监听页面显示。页面每次出现在屏幕上都触发，包括从下级页面点返回露出当前页面     onReady 监听页面初次渲染完成。     onHide 监听页面隐藏     onUnload 监听页面卸载      下拉刷新\r#\r\r开启下拉刷新\r#\r\r在uni-app中有两种方式开启下拉刷新\n 需要在 pages.json 里，找到的当前页面的pages节点，并在 style 选项中开启 enablePullDownRefresh 通过调用uni.startPullDownRefresh方法来开启下拉刷新  通过配置文件开启\r#\r\r创建list页面进行演示\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; 杭州学科 \u0026lt;view v-for=\u0026#34;(item,index) in arr\u0026#34; :key=\u0026#34;index\u0026#34;\u0026gt; {{item}} \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data () { return { arr: [\u0026#39;前端\u0026#39;,\u0026#39;java\u0026#39;,\u0026#39;ui\u0026#39;,\u0026#39;大数据\u0026#39;] } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; \u0026lt;/style\u0026gt; 通过pages.json文件中找到当前页面的pages节点，并在 style 选项中开启 enablePullDownRefresh\n{ \u0026#34;path\u0026#34;:\u0026#34;pages/list/list\u0026#34;, \u0026#34;style\u0026#34;:{ \u0026#34;enablePullDownRefresh\u0026#34;: true } } 通过API开启\r#\r\rapi文档\nuni.startPullDownRefresh() 监听下拉刷新\r#\r\r通过onPullDownRefresh可以监听到下拉刷新的动作\nexport default { data () { return { arr: [\u0026#39;前端\u0026#39;,\u0026#39;java\u0026#39;,\u0026#39;ui\u0026#39;,\u0026#39;大数据\u0026#39;] } }, methods: { startPull () { uni.startPullDownRefresh() } }, onPullDownRefresh () { console.log(\u0026#39;触发下拉刷新了\u0026#39;) } } 关闭下拉刷新\r#\r\runi.stopPullDownRefresh()\n停止当前页面下拉刷新。\n案例演示\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;startPull\u0026#34;\u0026gt;开启下拉刷新\u0026lt;/button\u0026gt; 杭州学科 \u0026lt;view v-for=\u0026#34;(item,index) in arr\u0026#34; :key=\u0026#34;index\u0026#34;\u0026gt; {{item}} \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data () { return { arr: [\u0026#39;前端\u0026#39;,\u0026#39;java\u0026#39;,\u0026#39;ui\u0026#39;,\u0026#39;大数据\u0026#39;] } }, methods: { startPull () { uni.startPullDownRefresh() } }, onPullDownRefresh () { this.arr = [] setTimeout(()=\u0026gt; { this.arr = [\u0026#39;前端\u0026#39;,\u0026#39;java\u0026#39;,\u0026#39;ui\u0026#39;,\u0026#39;大数据\u0026#39;] uni.stopPullDownRefresh() }, 1000); } } \u0026lt;/script\u0026gt; 上拉加载\r#\r\r通过在pages.json文件中找到当前页面的pages节点下style中配置onReachBottomDistance可以设置距离底部开启加载的距离，默认为50px\n通过onReachBottom监听到触底的行为\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;startPull\u0026#34;\u0026gt;开启下拉刷新\u0026lt;/button\u0026gt; 杭州学科 \u0026lt;view v-for=\u0026#34;(item,index) in arr\u0026#34; :key=\u0026#34;index\u0026#34;\u0026gt; {{item}} \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data () { return { arr: [\u0026#39;前端\u0026#39;,\u0026#39;java\u0026#39;,\u0026#39;ui\u0026#39;,\u0026#39;大数据\u0026#39;,\u0026#39;前端\u0026#39;,\u0026#39;java\u0026#39;,\u0026#39;ui\u0026#39;,\u0026#39;大数据\u0026#39;] } }, onReachBottom () { console.log(\u0026#39;触底了\u0026#39;) } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; view{ height: 100px; line-height: 100px; } \u0026lt;/style\u0026gt; 网络请求\r#\r\r在uni中可以调用uni.request方法进行请求网络请求\n需要注意的是：在小程序中网络相关的 API 在使用前需要配置域名白名单。\n发送get请求\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;button @click=\u0026#34;sendGet\u0026#34;\u0026gt;发送请求\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { methods: { sendGet () { uni.request({ url: \u0026#39;http://localhost:8082/api/getlunbo\u0026#39;, success(res) { console.log(res) } }) } } } \u0026lt;/script\u0026gt; 发送post请求\n数据缓存\r#\r\runi.setStorage\r#\r\r官方文档\n将数据存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个异步接口。\n代码演示\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;setStor\u0026#34;\u0026gt;存储数据\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { methods: { setStor () { uni.setStorage({ key: \u0026#39;id\u0026#39;, data: 100, success () { console.log(\u0026#39;存储成功\u0026#39;) } }) } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; \u0026lt;/style\u0026gt; uni.setStorageSync\r#\r\r将 data 存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个同步接口。\n代码演示\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;setStor\u0026#34;\u0026gt;存储数据\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { methods: { setStor () { uni.setStorageSync(\u0026#39;id\u0026#39;,100) } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; \u0026lt;/style\u0026gt; uni.getStorage\r#\r\r从本地缓存中异步获取指定 key 对应的内容。\n代码演示\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;getStorage\u0026#34;\u0026gt;获取数据\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data () { return { id: \u0026#39;\u0026#39; } }, methods: { getStorage () { uni.getStorage({ key: \u0026#39;id\u0026#39;, success: res=\u0026gt;{ this.id = res.data } }) } } } \u0026lt;/script\u0026gt; uni.getStorageSync\r#\r\r从本地缓存中同步获取指定 key 对应的内容。\n代码演示\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;getStorage\u0026#34;\u0026gt;获取数据\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { methods: { getStorage () { const id = uni.getStorageSync(\u0026#39;id\u0026#39;) console.log(id) } } } \u0026lt;/script\u0026gt; uni.removeStorage\r#\r\r从本地缓存中异步移除指定 key。\n代码演示\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;removeStorage\u0026#34;\u0026gt;删除数据\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { methods: { removeStorage () { uni.removeStorage({ key: \u0026#39;id\u0026#39;, success: function () { console.log(\u0026#39;删除成功\u0026#39;) } }) } } } \u0026lt;/script\u0026gt; uni.removeStorageSync\r#\r\r从本地缓存中同步移除指定 key。\n代码演示\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;removeStorage\u0026#34;\u0026gt;删除数据\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { methods: { removeStorage () { uni.removeStorageSync(\u0026#39;id\u0026#39;) } } } \u0026lt;/script\u0026gt; 上传图片、预览图片\r#\r\r上传图片\r#\r\runi.chooseImage方法从本地相册选择图片或使用相机拍照。\n案例代码\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;button @click=\u0026#34;chooseImg\u0026#34; type=\u0026#34;primary\u0026#34;\u0026gt;上传图片\u0026lt;/button\u0026gt; \u0026lt;view\u0026gt; \u0026lt;image v-for=\u0026#34;item in imgArr\u0026#34; :src=\u0026#34;item\u0026#34; :key=\u0026#34;index\u0026#34;\u0026gt;\u0026lt;/image\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data () { return { imgArr: [] } }, methods: { chooseImg () { uni.chooseImage({ count: 9, success: res=\u0026gt;{ this.imgArr = res.tempFilePaths } }) } } } \u0026lt;/script\u0026gt; 预览图片\r#\r\r结构\n\u0026lt;view\u0026gt; \u0026lt;image v-for=\u0026#34;item in imgArr\u0026#34; :src=\u0026#34;item\u0026#34; @click=\u0026#34;previewImg(item)\u0026#34; :key=\u0026#34;item\u0026#34;\u0026gt;\u0026lt;/image\u0026gt; \u0026lt;/view\u0026gt; 预览图片的方法\npreviewImg (current) { uni.previewImage({ urls: this.imgArr, current }) } 条件注释实现跨段兼容\r#\r\r条件编译是用特殊的注释作为标记，在编译时根据这些特殊的注释，将注释里面的代码编译到不同平台。\n**写法：**以 #ifdef 加平台标识 开头，以 #endif 结尾。\n平台标识\n   值 平台 参考文档     APP-PLUS 5+App HTML5+ 规范   H5 H5    MP-WEIXIN 微信小程序 微信小程序   MP-ALIPAY 支付宝小程序 支付宝小程序   MP-BAIDU 百度小程序 百度小程序   MP-TOUTIAO 头条小程序 头条小程序   MP-QQ QQ小程序 （目前仅cli版支持）   MP 微信小程序/支付宝小程序/百度小程序/头条小程序/QQ小程序     组件的条件注释\r#\r\r代码演示\n\u0026lt;!-- #ifdef H5 --\u0026gt; \u0026lt;view\u0026gt; h5页面会显示 \u0026lt;/view\u0026gt; \u0026lt;!-- #endif --\u0026gt; \u0026lt;!-- #ifdef MP-WEIXIN --\u0026gt; \u0026lt;view\u0026gt; 微信小程序会显示 \u0026lt;/view\u0026gt; \u0026lt;!-- #endif --\u0026gt; \u0026lt;!-- #ifdef APP-PLUS --\u0026gt; \u0026lt;view\u0026gt; app会显示 \u0026lt;/view\u0026gt; \u0026lt;!-- #endif --\u0026gt; api的条件注释\r#\r\r代码演示\nonLoad () { //#ifdef MP-WEIXIN  console.log(\u0026#39;微信小程序\u0026#39;) //#endif  //#ifdef H5  console.log(\u0026#39;h5页面\u0026#39;) //#endif } 样式的条件注释\n代码演示\n/* #ifdef H5 */ view{ height: 100px; line-height: 100px; background: red; } /* #endif */ /* #ifdef MP-WEIXIN */ view{ height: 100px; line-height: 100px; background: green; } /* #endif */ uni中的导航跳转\r#\r\r利用navigator进行跳转\r#\r\rnavigator详细文档：文档地址\n跳转到普通页面\n\u0026lt;navigator url=\u0026#34;/pages/about/about\u0026#34; hover-class=\u0026#34;navigator-hover\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;default\u0026#34;\u0026gt;跳转到关于页面\u0026lt;/button\u0026gt; \u0026lt;/navigator\u0026gt; 跳转到tabbar页面\n\u0026lt;navigator url=\u0026#34;/pages/message/message\u0026#34; open-type=\u0026#34;switchTab\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;default\u0026#34;\u0026gt;跳转到message页面\u0026lt;/button\u0026gt; \u0026lt;/navigator\u0026gt; 利用编程式导航进行跳转\r#\r\r导航跳转文档\n利用navigateTo进行导航跳转\n保留当前页面，跳转到应用内的某个页面，使用uni.navigateBack可以返回到原页面。\n\u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;goAbout\u0026#34;\u0026gt;跳转到关于页面\u0026lt;/button\u0026gt; 通过navigateTo方法进行跳转到普通页面\ngoAbout () { uni.navigateTo({ url: \u0026#39;/pages/about/about\u0026#39;, }) } 通过switchTab跳转到tabbar页面\n跳转到tabbar页面\n\u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;goMessage\u0026#34;\u0026gt;跳转到message页面\u0026lt;/button\u0026gt; 通过switchTab方法进行跳转\ngoMessage () { uni.switchTab({ url: \u0026#39;/pages/message/message\u0026#39; }) } redirectTo进行跳转\n关闭当前页面，跳转到应用内的某个页面。\n\u0026lt;!-- template --\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;goMessage\u0026#34;\u0026gt;跳转到message页面\u0026lt;/button\u0026gt; \u0026lt;!-- js --\u0026gt; goMessage () { uni.switchTab({ url: \u0026#39;/pages/message/message\u0026#39; }) } 通过onUnload测试当前组件确实卸载\nonUnload () { console.log(\u0026#39;组件卸载了\u0026#39;) } 导航跳转传递参数\r#\r\r在导航进行跳转到下一个页面的同时，可以给下一个页面传递相应的参数，接收参数的页面可以通过onLoad生命周期进行接收\n传递参数的页面\ngoAbout () { uni.navigateTo({ url: \u0026#39;/pages/about/about?id=80\u0026#39;, }); } 接收参数的页面\n\u0026lt;script\u0026gt; export default { onLoad (options) { console.log(options) } } \u0026lt;/script\u0026gt; #\r\runi-app中组件的创建\r#\r\r在uni-app中，可以通过创建一个后缀名为vue的文件，即创建一个组件成功，其他组件可以将该组件通过impot的方式导入，在通过components进行注册即可\n  创建login组件，在component中创建login目录，然后新建login.vue文件\n\u0026lt;template\u0026gt;\r\u0026lt;view\u0026gt;\r这是一个自定义组件\r\u0026lt;/view\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\r\u0026lt;/script\u0026gt;\r\u0026lt;style\u0026gt;\r\u0026lt;/style\u0026gt;\r  在其他组件中导入该组件并注册\nimport login from \u0026quot;@/components/test/test.vue\u0026quot;\r  注册组件\ncomponents: {test}   使用组件\n\u0026lt;test\u0026gt;\u0026lt;/test\u0026gt;\r  组件的生命周期函数\r#\r\r   beforeCreate 在实例初始化之后被调用。详见       created 在实例创建完成后被立即调用。详见     beforeMount 在挂载开始之前被调用。详见     mounted 挂载到实例上去之后调用。详见 注意：此处并不能确定子组件被全部挂载，如果需要子组件完全挂载之后在执行操作可以使用$nextTickVue官方文档     beforeUpdate 数据更新时调用，发生在虚拟 DOM 打补丁之前。详见 仅H5平台支持    updated 由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。详见 仅H5平台支持    beforeDestroy 实例销毁之前调用。在这一步，实例仍然完全可用。详见     destroyed Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。详见      组件的通讯\r#\r\r父组件给子组件传值\r#\r\r通过props来接受外界传递到组件内部的值\n\u0026lt;template\u0026gt;\r\u0026lt;view\u0026gt;\r这是一个自定义组件 {{msg}}\r\u0026lt;/view\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rexport default {\rprops: ['msg']\r}\r\u0026lt;/script\u0026gt;\r\u0026lt;style\u0026gt;\r\u0026lt;/style\u0026gt;\r其他组件在使用login组件的时候传递值\n\u0026lt;template\u0026gt;\r\u0026lt;view\u0026gt;\r\u0026lt;test :msg=\u0026quot;msg\u0026quot;\u0026gt;\u0026lt;/test\u0026gt;\r\u0026lt;/view\u0026gt;\r\u0026lt;/template\u0026gt;\r\u0026lt;script\u0026gt;\rimport test from \u0026quot;@/components/test/test.vue\u0026quot;\rexport default {\rdata () {\rreturn {\rmsg: 'hello'\r}\r},\rcomponents: {test}\r}\r\u0026lt;/script\u0026gt;\r子组件给父组件传值\r#\r\r通过$emit触发事件进行传递参数\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; 这是一个自定义组件 {{msg}} \u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;sendMsg\u0026#34;\u0026gt;给父组件传值\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data () { return { status: \u0026#39;打篮球\u0026#39; } }, props: { msg: { type: String, value: \u0026#39;\u0026#39; } }, methods: { sendMsg () { this.$emit(\u0026#39;myEvent\u0026#39;,this.status) } } } \u0026lt;/script\u0026gt; 父组件定义自定义事件并接收参数\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;test :msg=\u0026#34;msg\u0026#34; @myEvent=\u0026#34;getMsg\u0026#34;\u0026gt;\u0026lt;/test\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; import test from \u0026#34;@/components/test/test.vue\u0026#34; export default { data () { return { msg: \u0026#39;hello\u0026#39; } }, methods: { getMsg (res) { console.log(res) } }, components: {test} } \u0026lt;/script\u0026gt; 兄弟组件通讯\r#\r\runi-ui的使用\r#\r\runi-ui文档\n1、进入Grid宫格组件\n2、使用HBuilderX导入该组件\n3、导入该组件\nimport uniGrid from \u0026#34;@/components/uni-grid/uni-grid.vue\u0026#34; import uniGridItem from \u0026#34;@/components/uni-grid-item/uni-grid-item.vue\u0026#34; 4、注册组件\ncomponents: {uniGrid,uniGridItem} 5、使用组件\n\u0026lt;uni-grid :column=\u0026#34;3\u0026#34;\u0026gt; \u0026lt;uni-grid-item\u0026gt; \u0026lt;text class=\u0026#34;text\u0026#34;\u0026gt;文本\u0026lt;/text\u0026gt; \u0026lt;/uni-grid-item\u0026gt; \u0026lt;uni-grid-item\u0026gt; \u0026lt;text class=\u0026#34;text\u0026#34;\u0026gt;文本\u0026lt;/text\u0026gt; \u0026lt;/uni-grid-item\u0026gt; \u0026lt;uni-grid-item\u0026gt; \u0026lt;text class=\u0026#34;text\u0026#34;\u0026gt;文本\u0026lt;/text\u0026gt; \u0026lt;/uni-grid-item\u0026gt; \u0026lt;/uni-grid\u0026gt; "}),a.add({id:165,href:'/life/docs/operating_system/windows/ftp/',title:" FTP ",section:"windows学习与使用 ",content:"本地设置FTP服务器\r#\r\r步骤1：在计算机上打开“控制面板”，然后单击“程序和功能”。\r#\r\r步骤2：在“程序和功能”窗口中，单击“控制面板”窗口左侧的“打开或关闭Windows功能”。\r#\r\r第3步：现在等待一段时间并向下滚动以找出“Internet信息服务”。 只需展开它，打开“FTP服务器”，“Web管理工具”和“万维网服务”下的所有内容，与下面的屏幕截图相同。 完成所有服务后，单击“确定”\r#\r\r第4步：应用更改需要一些时间，完成后，单击“立即重新启动”以重新启动计算机并应用所做的更改\r#\r\r步骤5：重新启动计算机后，再次打开“控制面板”，然后单击“管理工具”将其打开\r#\r\r步骤7：在IIS管理器窗口的左侧，展开窗口左侧的计算机名称，除非您找到“站点”。 只需右键单击“站点”，然后单击“添加FTP站点\u0026hellip;”\r#\r\r第8步：这里给FTP站点命名。 我将\u0026rsquo;sampleftp\u0026rsquo;赋予FTP站点名称。 现在单击“\u0026hellip;”按钮以找到要通过FTP服务器访问的文件夹或驱动程序。 我为本教程选择了“C：FTP_Path”。 完成所有操作后，单击“下一步”\r#\r\r步骤9：在下一个窗口中，单击与“IP Address：”对应的下拉菜单，然后在本地网络上选择计算机的IP地址。\r#\r\r 将端口号保留为“21”，默认情况下是这样。  步骤10：选择“No SSL”并启用“自动启动FTP站点”，然后单击“下一步”。\r#\r\r *由于这是一个教程，我不允许使用SSL。 但是，如果您想通过FTP服务器访问敏感数据，我建议您使用SSL  步骤11：现在选择“基本”的身份验证方法，并向“所有用户”提供“授权”。 用户必须输入您的Windows用户名和密码才能使用此身份验证方法访问FTP服务器上的文件\r#\r\r 现在，根据您要如何设置FTP服务器，将权限设置为“读取”和“写入”或仅设置为“读取”。 之后，单击“完成”以完成站点设置并在Windows计算机上启动FTP服务器  配置防火墙\r#\r\r 您的FTP服务器已准备就绪并且正在运行 但是，您需要配置Windows防火墙以允许与您的计算机进行FTP通信的事务处理。  步骤12：打开“控制面板”并在Windows 10上单击“Windows Defender Firewall”或在Windows 7上单击“Windows防火墙”\r#\r\r步骤13：单击窗口左侧的“允许通过Windows Defender防火墙的应用程序或功能”\r#\r\r步骤14：在新窗口中，单击“更改设置”并标记“FTP服务器”的“公共”和“私人”对应的复选框，然后单击“确定”。\r#\r\r  现在，您可以使用适当的应用程序轻松地从本地网络中的任何其他计算机或移动设备访问FTP服务器，或者只需从浏览器访问即可。\n  步骤15：只需输入\u0026rsquo;ftp：//'，然后输入计算机的IP地址和端口号，即21。对于本教程，我的计算机的IP地址为192.168.1.108。\n  所以完整的地址将是\u0026rsquo;ftp://192.168.1.108:21'\n  步骤16：如果输入的地址正确，将要求您输入Windows计算机的用户名和密码。 最后，点击“确定”或“登录”，以适用于您的方式为准\r#\r\r 如果身份验证成功，您将能够看到通过FTP服务器共享的文件夹或驱动器中的内容。    这样，您就可以在本地网络上访问Windows计算机上的文件。\n  通过Internet访问本地FTP服务器\n  通过Internet访问本地或家庭FTP服务器需要在路由器上配置一些设置。因此，该过程可能会根据您使用的路由器的公司和型号而有所不同。不过，我在此基本了解如何配置路由器以通过互联网访问您的FTP服务器。\n  在继续之前，请记下您的Internet服务提供商从以下链接提供给您的外部IP地址。\n  打开路由器配置页面，该页面应为192.168.1.1,192.168.0.1或左右。您可以在配置手册中找到路由器配置页面的地址。\n  对我来说，它是192.168.1.1。只需打开配置页面，然后使用用户名和密码登录即可。\n  然后转到“高级设置”，并在其下选择“NAT”。\n  步骤17：在“Virtual Circuit”中选择“PVC2”，然后单击“Virtual Server”。将“IP数量”设置为“单个”，这应该是默认值。\r#\r\r步骤18：现在点击“应用程序”对应的下拉菜单，然后从菜单中选择“FTP”。 之后将自动应用其他配置。 您甚至会注意到FTP应用程序的端口号也被分配为“21”\r#\r\r 现在为我设置本地IP地址，即192.168.1.108。  第19步：完成后，单击“保存”。\r#\r\r第20步：一切准备就绪。 现在输入\u0026rsquo;ftp：//'，后跟前面提到的外部IP地址，以及冒号后的端口号，即21。\r#\r\r 所以对我来说地址是\u0026rsquo;ftp://117.194.16.221:21'。 如果您的ISP为您分配动态IP地址，则每次重新启动路由器时外部IP地址都会更改。  "}),a.add({id:166,href:'/life/docs/javadir/groovy/%E5%A6%82%E4%BD%95%E5%9C%A8groovy%E4%B8%AD%E8%8E%B7%E5%8F%96%E4%BB%A5%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D%E7%9A%84%E5%8F%98%E9%87%8F%E7%9A%84%E5%80%BC/',title:" groovy变量值获取 ",section:"groovy 学习与使用 ",content:"groovy变量值获取\r#\r\r`\nhttps://www.codenong.com/34288451/\n`\n"}),a.add({id:167,href:'/life/docs/operating_system/one_chapter/1_5_/',title:" 中断和异常 ",section:"第一章 操作系统概述 ",content:"一:知识总览\r#\r\r中断的作用\r#\r\r “中断”会使CPU由用户态变为内核态，使操作系统重新夺回对CPU的控制权\n   CPU 上会运行两种程序，一种是操作系统内核程序，一种是应用程序\n  在合适的情况下，操作系统内核会把CPU的使用权主动让给应用程序(进程管理相关内容)\n  如果没有“中断”机制，那么一旦应用程序上CPU运行，CPU就会一直运行这个应用程序\n    内核态à用户态：执行一条特权指令——修改PSW的标志位为“用户态”，这个动作意味着操作系统将主动让出CPU使用权\n  用户态à内核态：由“中断”引发，硬件自动完成变态过程，触发中断信号意味着操作系统将强行夺回CPU的使用权\n  中断的类型\r#\r\r中断机制的基本原理\r#\r\r二:知识回顾与重要考点\r#\r\r"}),a.add({id:168,href:'/life/docs/python/base/casting/',title:"python 类型转换",section:"python 基础学习",content:"Casting\r#\r\r int() - 用整数字面量、浮点字面量构造整数（通过对数进行下舍入），或者用表示完整数字的字符串字面量 float() - 用整数字面量、浮点字面量，或字符串字面量构造浮点数（提供表示浮点数或整数的字符串） str() - 用各种数据类型构造字符串，包括字符串，整数字面量和浮点字面量  import random import time str1 = str(random.random() * 100) print(f\u0026#34;str1 类型: {type(str1)}\u0026#34;,str1) int1 = int(random.random() * 100) print(f\u0026#34;int1 类型: {type(int1)}\u0026#34;,int1) float1 = float(random.random() * 100) print(f\u0026#34;float1 类型: {type(float1)}\u0026#34;,float1) "}),a.add({id:169,href:'/life/docs/javadir/basedir/jsp_dir/jsp_%E5%AD%97%E7%AC%A6%E4%B8%B2el%E8%A1%A8%E8%BE%BE%E5%BC%8F/',title:"字符串el表达式 ",section:"jsp 基础知识 ",content:"字符串el表达式\r#\r\rfn:contains 判断字符串是否包含另外一个字符串 \u0026lt;c:if test=\u0026quot;${fn:contains(name, searchString)}\u0026quot;\u0026gt;\rfn:containsIgnoreCase 判断字符串是否包含另外一个字符串(大小写无关) \u0026lt;c:if test=\u0026quot;${fn:containsIgnoreCase(name, searchString)}\u0026quot;\u0026gt;\rfn:endsWith 判断字符串是否以另外字符串结束 \u0026lt;c:if test=\u0026quot;${fn:endsWith(filename, \u0026quot;.txt\u0026quot;)}\u0026quot;\u0026gt;\rfn:escapeXml 把一些字符转成XML表示，例如 \u0026lt;字符应该转为\u0026lt; ${fn:escapeXml(param:info)}\rfn:indexOf 子字符串在母字符串中出现的位置 ${fn:indexOf(name, \u0026quot;-\u0026quot;)}\rfn:join 将数组中的数据联合成一个新字符串，并使用指定字符格开 ${fn:join(array, \u0026quot;;\u0026quot;)}\rfn:length 获取字符串的长度，或者数组的大小 ${fn:length(shoppingCart.products)}\rfn:replace 替换字符串中指定的字符 ${fn:replace(text, \u0026quot;-\u0026quot;, \u0026quot;?\u0026quot;)}\rfn:split 把字符串按照指定字符切分 ${fn:split(customerNames, \u0026quot;;\u0026quot;)}\rfn:startsWith 判断字符串是否以某个子串开始 \u0026lt;c:if test=\u0026quot;${fn:startsWith(product.id, \u0026quot;100-\u0026quot;)}\u0026quot;\u0026gt;\rfn:substring 获取子串 ${fn:substring(zip, 6, -1)}\rfn:substringAfter 获取从某个字符所在位置开始的子串 ${fn:substringAfter(zip, \u0026quot;-\u0026quot;)}\rfn:substringBefore 获取从开始到某个字符所在位置的子串 ${fn:substringBefore(zip, \u0026quot;-\u0026quot;)}\rfn:toLowerCase 转为小写 ${fn.toLowerCase(product.name)}\rfn:toUpperCase 转为大写字符 ${fn.UpperCase(product.name)}\rfn:trim 去除字符串前后的空格 ${fn.trim(name)}\r函数 描述\rfn:contains(string, substring)\r如果参数string中包含参数substring，返回true\rfn:containsIgnoreCase(string, substring)\r如果参数string中包含参数substring（忽略大小写），返回true\rfn:endsWith(string, suffix)\r如果参数 string 以参数suffix结尾，返回true\rfn:escapeXml(string)\r将有特殊意义的XML (和HTML)转换为对应的XML character entity code，并返回\rfn:indexOf(string, substring)\r返回参数substring在参数string中第一次出现的位置\rfn:join(array, separator)\r将一个给定的数组array用给定的间隔符separator串在一起，组成一个新的字符串并返回。\rfn:length(item)\r返回参数item中包含元素的数量。参数Item类型是数组、collection或者String。如果是String类型,返回值是String中的字符数。\rfn:replace(string, before, after)\r返回一个String对象。用参数after字符串替换参数string中所有出现参数before字符串的地方，并返回替换后的结果 fn:split(string, separator)\r返回一个数组，以参数separator 为分割符分割参数string，分割后的每一部分就是数组的一个元素\rfn:startsWith(string, prefix)\r如果参数string以参数prefix开头，返回true\rfn:substring(string, begin, end)\r返回参数string部分字符串, 从参数begin开始到参数end位置，包括end位置的字符\rfn:substringAfter(string, substring)\r返回参数substring在参数string中后面的那一部分字符串?? fn:substringBefore(string, substring)\r返回参数substring在参数string中前面的那一部分字符串\rfn:toLowerCase(string)\r将参数string所有的字符变为小写，并将其返回\rfn:toUpperCase(string)\r将参数string所有的字符变为大写，并将其返回\rfn:trim(string)\r在jsp中 使用EL表达式时，不可以使用java提供的功能，比如indexOf()等。\r\u0026lt;c:if test=\u0026quot;${Boolean.valueOf(requestScope.addresult)==false}\u0026quot;\u0026gt; "}),a.add({id:170,href:'/life/docs/operating_system/five_chapter/',title:"第五章 输入，输出（I,O） ",section:"计算机操作系统",content:"输入，输出（I,O）\r#\r\r"}),a.add({id:171,href:'/life/docs/operating_system/',title:"计算机操作系统",section:"Docs",content:"现代操作系统\r#\r\r 操作系统的基本特征是：\n  1、并发性：  是在计算机系统中同时存在多个程序，宏观上看，这些程序是同时向前推进的。 在单CPU上，这些并发执行的程序是交替在CPU上运行的。\n程序并发性体现在两个方面： 用户程序与用户程序之间的并发执行。 用户程序与操作系统程序之间的并发。\n 2、共享性：  资源共享是操作系统程序和多个用户程序共用系统中的资源。\n 3、 随机性：  随机性指：操作系统的运行是在一个随机的环境中，一个设备可能在任何时间向处理机发出中断请求，系统无法知道运行着的程序会在什么时候做什么事情。\n操作系统分类：\r#\r\r 1、批处理操作系统 ：  批处理操作系统的工作方式是：用户将作业交给系统操作员，系统操作员将许多用户的作业组成一批作业，之后输入到计算机中，在系统中形成一个自动转接的连续的作业流，然后启动操作系统，系统自动、依次执行每个作业。最后由操作员将作业结果交给用户。\n批处理操作系统的特点是：多道和成批处理。\n 2、分时操作系统 ：  分时操作系统的工作方式是：一台主机连接了若干个终端，每个终端有一个用户在使用。用户交互式地向系统提出命令请求，系统接受每个用户的命令，采用时间片轮转方式处理服务请求，并通过交互方式在终端上向用户显示结果。\n常见的通用操作系统是分时系统与批处理系统的结合。其原则是：分时优先，批处理后。“前台”响应需频繁交互的作业，如终端的要求； “后台”处理时间性要求不强的作业。\n 3、实时操作系统 ：  实时操作系统是指使计算机能及时响应外部事件的请求在规定的严格时间内完成对该事件的处理，并控制所有实时设备和实时任务协调一致地工作的操作系统。实时操作系统要追求的目标是：对外部请求在严格时间范围内做出反应，有高可靠性和完整性。\n 4、嵌入式操作系统 ：  嵌入式操作系统是运行在嵌入式系统环境中，对整个嵌入式系统以及它所操作、控制的各种部件装置等资源进行统一协调、调度、指挥和控制的系统软件。程，并使整个系统能高效地运行。\n 5、个人计算机操作系统 ：  个人计算机操作系统是一种单用户多任务的操作系统。个人计算机操作系统主要供个人使用，功能强、价格便宜，可以在几乎任何地方安装使用。它能满足一般人操作、学习、游戏等方面的需求。个人计算机操作系统的主要特点是计算机在某一时间内为单个用户服务；采用图形界面人机交互的工作方式，界面友好；使用方便，用户无需专门学习，也能熟练操纵机器。\n 6、网络操作系统 ：  网络操作系统是基于计算机网络的，是在各种计算机操作系统上按网络体系结构协议标准开发的软件，包括网络管理、通信、安全、资源共享和各种网络应用。其目标是相互通信及资源共享。\n 7、分布式操作系统 ：  大量的计算机通过网络被连结在一起，可以获得极高的运算能力及广泛的数据共享。这种系统被称作分布式系统。\n"}),a.add({id:172,href:'/life/docs/codereview/design_pattern/builder/',title:"创建型 - 生成器(Builder)",section:"设计模式",content:"生成器\r#\r\r"}),a.add({id:173,href:'/life/docs/think/criticalthinking/',title:"批判性思维",section:"思维",content:" 批判性思维  "}),a.add({id:174,href:'/life/docs/javadir/tooldoc/dom4j/',title:"dom4j",section:"Java公共库文档总结 ",content:"dom4j\r#\r\r 选取节点\n   nodename 选取当前节点的所有子节点\n  / 从根节点选取\n  // 从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置\n  . 选取当前节点\n  .. 选取当前节点的父节点\n  @ 选取属性\n   实例\n   路径表达式 结果\n  bookstore 选取 bookstore 元素的所有子节点\n  /bookstore 选取根元素 bookstore\n  bookstore/book 选取bookstore 下名字为 book的所有子元素。\n  //book 选取所有 book 子元素，而不管它们在文档中的位置。\n  bookstore//book 选取bookstore 下名字为 book的所有后代元素，而不管它们位于 bookstore 之下的什么位置。\n  //@lang 选取所有名为 lang 的属性。\n   常见的谓语的一些路径表达式\n  /bookstore/book[1] 选取属于 bookstore 子元素的第一个 book 元素。 /bookstore/book[last()] 选取属于 bookstore 子元素的最后一个 book 元素。 /bookstore/book[last()-1] 选取属于 bookstore 子元素的倒数第二个 book 元素。 /bookstore/book[position()\u0026lt;3] 选取最前面的两个属于 bookstore 元素的子元素的 book 元素。 //title[@lang] 选取所有拥有名为 lang 的属性的 title 元素。 //title[@lang=\u0026lsquo;eng\u0026rsquo;] 选取所有 title 元素，要求这些元素拥有值为 eng 的 lang 属性。 /bookstore/book[price\u0026gt;35.00] 选取所有 bookstore 元素的 book 元素，要求book元素的子元素 price 元素的值须大于 35.00。 /bookstore/book[price\u0026gt;35.00]/title 选取所有 bookstore 元素中的 book 元素的 title 元素，要求book元素的子元素 price 元素的值须大于 35.00   选取未知节点\n  通配符 描述   匹配任何元素节点   @* 匹配任何属性节点 node() 匹配任何类型的节点 路径表达式 结果 //book/title | //book/price 选取所有 book 元素的 title 和 price 元素。 //title | //price 选取所有文档中的 title 和 price 元素。 /bookstore/book/title|//price 选取所有属于 bookstore 元素的 book 元素的title 元素，以及文档中所有的 price 元素。  "}),a.add({id:175,href:'/life/docs/javadir/middleware/elasticsearch/elasticsearch_architecture/',title:"ElasticSearch进阶篇集群+原理",section:"Elasticsearch",content:"1.相关概念解释\r#\r\r（1）Near Realtime（NRT）：近实时，两个意思，从写入数据到数据可以被搜索到有一个小延迟（大概1秒）；基于es执行搜索和分析可以达到秒级\n（2）Cluster：集群，包含多个节点，每个节点属于哪个集群是通过一个配置（集群名称，默认是elasticsearch）来决定的，对于中小型应用来说，刚开始一个集群就一个节点很正常\n（3）Node：节点(简单理解为集群中的一个服务器)，集群中的一个节点，节点也有一个名称（默认是随机分配的），节点名称很重要（在执行运维管理操作的时候），默认节点会去加入一个名称为“elasticsearch”的集群，如果直接启动一堆节点，那么它们会自动组成一个elasticsearch集群，当然一个节点也可以组成一个elasticsearch集群\n（4）Index：索引(简单理解就是一个数据库)，包含一堆有相似结构的文档数据，比如可以有一个客户索引，商品分类索引，订单索引，索引有一个名称。一个index包含很多document，一个index就代表了一类类似的或者相同的document。比如说建立一个product index，商品索引，里面可能就存放了所有的商品数据，所有的商品document。\n（5）Type：类型(简单理解就是一张表)，每个索引里都可以有一个或多个type，type是index中的一个逻辑数据分类，一个type下的document，都有相同的field，比如博客系统，有一个索引，可以定义用户数据type，博客数据type，评论数据type。\n（6）Document\u0026amp;field：文档(就是一行数据)，es中的最小数据单元，一个document可以是一条客户数据，一条商品分类数据，一条订单数据，通常用JSON数据结构表示，每个index下的type中，都可以去存储多个document。一个document里面有多个field，每个field就是一个数据字段。\n（7）shard：单台机器无法存储大量数据，es可以将一个索引中的数据切分为多个shard，分布在多台服务器上存储。有了shard就可以横向扩展，存储更多数据，让搜索和分析等操作分布到多台服务器上去执行，提升吞吐量和性能。每个shard都是一个lucene index。\n（8）replica：任何一个服务器随时可能故障或宕机，此时shard可能就会丢失，因此可以为每个shard创建多个replica副本。replica可以在shard故障时提供备用服务，保证数据不丢失，多个replica还可以提升搜索操作的吞吐量和性能。primary shard（建立索引时一次设置，不能修改，默认5个），replica shard（随时修改数量，默认1个），默认每个索引10个shard，5个primary shard，5个replica shard，最小的高可用配置，是2台服务器。\n2.ElasticSearch分布式架构原理\r#\r\r2.1shad与replica机制\r#\r\r（1）一个index包含多个shard,也就是一个index存在多个服务器上\n（2）每个shard都是一个最小工作单元，承载部分数据，比如有三台服务器,现在有三条数据,这三条数据在三台服务器上各方一条.\n（3）增减节点时，shard会自动在nodes中负载均衡\n（4）primary shard和replica shard，每个document肯定只存在于某一个primary shard以及其对应的replica shard中，不可能存在于多个primary shard\n（5）replica shard是primary shard的副本，负责容错，以及承担读请求负载\n（6）primary shard的数量在创建索引的时候就固定了，replica shard的数量可以随时修改\n（7）primary shard的默认数量是5，replica默认是1，默认有10个shard，5个primary shard，5个replica shard\n（8）primary shard不能和自己的replica shard放在同一个节点上（否则节点宕机，primary shard和副本都丢失，起不到容错的作用），但是可以和其他primary shard的replica shard放在同一个节点上\n2.2分布式架构图\r#\r\r2.3容错机制\r#\r\r在集群中会有一个master负责当leader进行协调,比如上图的Node2为master, 那么当它挂了的时候会重现选举一个新的master,比如新选举的是Node3,这个时候replica 2这时候会变成primary.\n当Node2恢复了的时候,这个时候node2的prinary会变成replica\n2.4ES写入数据的过程\r#\r\r2.4.1简单流程:\r#\r\r 1:客户端选择一个node发送请求过去，这个node就是coordinating node (协调节点) 2:coordinating node，对document进行路由，将请求转发给对应的node 3: 实际上的node上的primary shard处理请求，然后将数据同步到replica node 4:coordinating node，如果发现primary node和所有的replica node都搞定之后，就会返回请求到客户端 这个路由简单的说就是取模算法,比如说现在有3太服务器,这个时候传过来的id是5,那么5%3=2,就放在第2太服务器  2.4.2写入数据底层原理:\r#\r\r原理\n1:先往内存缓冲区中写并且同时往日志里面写 translog\n2: 刷新（refresh）将内存缓冲区的数据写回到文件中并形成分段(注意可能由于不同版本以及配置刷新时间也不同 旧版本是1秒)\n3: 分段合并(合并步骤2产生的段) 注意默认是30分钟或者段内容大于500M 都是可以设置的\n2.5ES查询过程\r#\r\r2.5.1倒排序算法\r#\r\r查询有个算法叫倒排序:简单的说就是:通过分词把词语出现的id进行记录下来,再查询的时候先去查到哪些id包含这个数据,然后再根据id把数据查出来. 要是不理解的可以先去查下什么是倒排序\n2.5.2查询过程\r#\r\r 1: 客户端发送一个请求给coordinate node 2: 协调节点将搜索的请求转发给所有的shard对应的primary shard 或replica shard 3: query phase：每一个shard 将自己搜索的结果（其实也就是一些唯一标识），返回给协调节点，有协调节点进行数据的合并，排序，分页等操作，产出最后的结果 4: fetch phase ，接着由协调节点，根据唯一标识去各个节点进行拉去数据，最总返回给客户端  2.5.3查询原理\r#\r\r查询过程大体上分为查询和取回这两个阶段，广播查询请求到所有相关分片，并将它们的响应整合成全局排序后的结果集合，这个结果集合会返回给客户端。\n1)查询阶段\r#\r\r 1:当一个节点接收到一个搜索请求，这这个节点就会变成协调节点，第一步就是将广播请求到搜索的每一个节点的分片拷贝，查询请求可以被某一个主分片或某一个副分片处理，协调节点将在之后的请求中轮训所有的分片拷贝来分摊负载。 2:每一个分片将会在本地构建一个优先级队列，如果客户端要求返回结果排序中从from 名开始的数量为size的结果集，每一个节点都会产生一个from+size大小的结果集，因此优先级队列的大小也就是from+size，分片仅仅是返回一个轻量级的结果给协调节点，包括结果级中的每一个文档的ID和进行排序所需要的信息。 3:协调节点将会将所有的结果进行汇总，并进行全局排序，最总得到排序结果。  2)取值阶段\r#\r\r 1:查询过程得到的排序结果，标记处哪些文档是符合要求的，此时仍然需要获取这些文档返回给客户端 2:协调节点会确定实际需要的返回的文档，并向含有该文档的分片发送get请求，分片获取的文档返回给协调节点，协调节点将结果返回给客户端  2.6更新过程\r#\r\r2.6.1document的全量替换\r#\r\r 1:这个就是用新的数据全部覆盖以前的数据 2:重新创建一个document并把原来的标记为delete 3:partial update, 就是制定需要更新的字段. 全量是把数据找出来,然后再java代码中进行修改,再放回去. partial是直接提交需要修改的字段然后直接修改,在一个shard中进行,内部也是全量替换.  2.6.2强制创建\r#\r\r就是不管原来的数据,直接强制创建一个新的\n2.7删除过程\r#\r\r当要进行删除document的时候,只是把它标记为delete,当数据到达一定的时候再进行删除, 有点像JVM中标记清除法\n"}),a.add({id:176,href:'/life/docs/databases/mysql/mysql_distinguish/',title:"MySQL分库分表原理",section:"mysql学习笔记",content:"介绍\r#\r\r前言\r#\r\r在互联网还未崛起的时代,我们的传统应用都有这样一个特点：访问量、数据量都比较小，单库单表都完全可以支撑整个业务。\r随着互联网的发展和用户规模的迅速扩大,对系统的要求也越来越高。因此传统的MySQL单库单表架构的性能问题就暴露出来了。而有下面几个因素会影响数据库性能:\r 数据量  MySQL单库数据量在5000万以内性能比较好,超过阈值后性能会随着数据量的增大而变弱。\rMySQL单表的数据量是500w-1000w之间性能比较好,超过1000w性能也会下降。\r 磁盘  因为单个服务的磁盘空间是有限制的,如果并发压力下,所有的请求都访问同一个节点,肯定会对磁盘IO造成非常大的影响。\r 数据库连接  数据库连接是非常稀少的资源,如果一个库里既有用户、商品、订单相关的数据,当海量用户同时操作时,数据库连接就很可能成为瓶颈。\r为了提升性能,所以我们必须要解决上述几个问题,那就有必要引进分库分表。\r垂直拆分 or 水平拆分？\r#\r\r当我们单个库太大时,我们先要看一下是因为表太多还是数据量太大，如果是表太多,则应该将部分表进行迁移(可以按业务区分),这就是所谓的垂直切分。\r如果是数据量太大,则需要将表拆成更多的小表,来减少单表的数据量,这就是所谓的水平拆分。\r垂直拆分\r#\r\r 垂直分库  垂直分库针对的是一个系统中的不同业务进行拆分,比如用户一个库,商品一个库,订单一个库。 一个购物网站对外提供服务时,会同时对用户、商品、订单表进行操作。没拆分之前, 全部都是落到单一的库上的,这会让数据库的单库处理能力成为瓶颈。如果垂直分库后还是将用户、商品、订单放到同一个服务器上,只是分到了不同的库,这样虽然会减少单库的压力,但是随着用户量增大,这会让整个数据库的处理能力成为瓶颈,还有单个服务器的磁盘空间、内存也会受非常大的影响。 所以我们要将其拆分到多个服务器上，这样上面的问题都解决了，以后也不会面对单机资源问题。\r 垂直分表  也就是“大表拆小表”，基于列字段进行的。一般是表中的字段较多，将不常用的， 数据较大，长度较长（比如text类型字段）的拆分到“扩展表“。一般是针对那种几百列的大表，也避免查询时，数据量太大造成的“跨页”问题。\r水平拆分\r#\r\r 水平分表  和垂直分表有一点类似,不过垂直分表是基于列的,而水平分表是基于全表的。水平拆分可以大大减少单表数据量,提升查询效率。\r 水平分库分表  将单张表的数据切分到多个服务器上去，每个服务器具有相应的库与表，只是表中数据集合不同。 水平分库分表能够有效的缓解单机和单库的性能瓶颈和压力，突破IO、连接数、硬件资源等的瓶颈。\r几种常用的分库分表的策略\r#\r\r HASH取模  假设有用户表user,将其分成3个表user0,user1,user2.路由规则是对3取模,当uid=1时,对应到的是user1,uid=2时,对应的是user2。\r 范围分片  从1-10000一个表,10001-20000一个表。\r 地理位置分片  华南区一个表,华北一个表。\r 时间分片  按月分片，按季度分片等等,可以做到冷热数据。\r分库分表后引入的问题\r#\r\r 分布式事务问题  如果我们做了垂直分库或者水平分库以后,就必然会涉及到跨库执行SQL的问题,这样就引发了互联网界的老大难问题-\u0026quot;分布式事务\u0026quot;。那要如何解决这个问题呢？\r1.使用分布式事务中间件 2.使用MySQL自带的针对跨库的事务一致性方案(XA),不过性能要比单库的慢10倍左右。3.能否避免掉跨库操作(比如将用户和商品放在同一个库中)\r 跨库join的问题  分库分表后表之间的关联操作将受到限制，我们无法join位于不同分库的表，也无法join分表粒度不同的表， 结果原本一次查询能够完成的业务，可能需要多次查询才能完成。粗略的解决方法： 全局表：基础数据，所有库都拷贝一份。 字段冗余：这样有些字段就不用join去查询了。 系统层组装：分别查询出所有，然后组装起来，较复杂。\r 横向扩容的问题  当我们使用HASH取模做分表的时候,针对数据量的递增,可能需要动态的增加表,此时就需要考虑因为reHash导致数据迁移的问题。\r 结果集合并、排序的问题  因为我们是将数据分散存储到不同的库、表里的,当我们查询指定数据列表时,数据来源于不同的子库或者子表,就必然会引发结果集合并、排序的问题。如果每次查询都需要排序、合并等操作,性能肯定会受非常大的影响。走缓存可能一条路!\r使用分库分表中间件\r#\r\r Mycat  Mycat发展到现在，适用的场景已经很丰富，而且不断有新用户给出新的创新性的方案，以下是几个典型的应用场景：\r单纯的读写分离，此时配置最为简单，支持读写分离，主从切换\r分表分库，对于超过1000万的表进行分片，最大支持1000亿的单表分片\r多租户应用，每个应用一个库，但应用程序只连接Mycat，从而不改造程序本身，实现多租户化报表系统，借助于Mycat的分表能力，处理大规模报表的统计\r替代Hbase，分析大数据作为海量数据实时查询的一种简单有效方案，比如100亿条频繁查询的记录需要在3秒内查询出来结果，除了基于主键的查询，还可能存在范围查询或其他属性查询，此时Mycat可能是最简单有效的选择。\r Sharding-JDBC  当当网开发的简单易用、轻量级的中间件。\r此外还有淘宝的TDDL,支付宝的OneProxy,360的Atlas等。\r"}),a.add({id:177,href:'/life/docs/javadir/middleware/uml/',title:"uml 学习与使用",section:"中间件 ",content:"最重要的放最前面\r#\r\rUML类图几种关系的总结\r#\r\r在UML类图中，常见的有以下几种关系:\n 泛化（Generalization）：继承的关系，实线带三角形箭头，指向父类。 实现（Realization）：实现的关系，虚线带三角形箭头，指向接口。 关联（Association）：拥有的关系，实线带普通箭头，指向被拥有者。 聚合（Aggregation）：整体与部分的关系。实线带空心菱形，指向整体。 组合（Composition）：整体与部分的关系，但不能离开整体而单独存在。实线实心菱形，指向整体。 依赖（Dependency）：使用的关系，即一个类的实线需要另一个类的协助。虚线普通箭头，指向被使用者。  1.泛化(Generalization)\r#\r\r【泛化关系】：是一种继承关系,它指定了子类如何特化父类的所有特征和行为。例如：老虎是动物的一种。\n【箭头指向】：带三角箭头的实线，箭头指向父类。\n2.实现（Realization)\r#\r\r【实现关系】：是一种类与接口的关系，表示类是接口所有特征和行为的实现。\n【箭头指向】：带三角箭头的虚线，箭头指向接口。\n3.关联（Association）\r#\r\r【关联关系】：是一种拥有的关系,它使一个类知道另一个类的属性和方法；如：老师与学生，丈夫与妻子。关联可以是双向的，也可以是单向的。双向的关联可以有两个箭头或者没有箭头，单向的关联有一个箭头。\n【代码体现】：成员变量\n【箭头及指向】：带普通箭头的实心线，指向被拥有者。\n上图中，老师与学生是双向关联，老师有多名学生，学生也可能有多名老师。但学生与某课程间的关系为单向关联，一名学生可能要上多门课程，课程是个抽象的东西他不拥有学生。\n上图为自身关联。\n4.聚合（Aggregation）\r#\r\r【聚合关系】：是整体与部分的关系。如车和轮胎是整体和部分的关系。聚合关系是关联关系的一种，是强的关联关系；关联和聚合在语法上无法区分，必须考察具体的逻辑关系。\n【代码体现】：成员变量\n【箭头及指向】：带空心菱形的实心线，菱形指向整体。\n5.组合(Composition)\r#\r\r【组合关系】：是整体与部分的关系。没有公司就不存在部门，组合关系是关联关系的一种，是比聚合关系还要强的关系，它要求普通的聚合关系中代表整体的对象负责代表部分的对象的生命周期。\n【代码体现】：成员变量\n【箭头及指向】：带实心菱形的实线，菱形指向整体。\n6.依赖(Dependency)\r#\r\r【依赖关系】：是一种使用的关系,所以要尽量不使用双向的互相依赖。\n【代码表现】：局部变量、方法的参数或者对静态方法的调用。\n【箭头及指向】：带箭头的虚线，指向被使用者。\n总结\r#\r\r各种关系的强弱顺序：\n泛化= 实现\u0026gt; 组合\u0026gt; 聚合\u0026gt; 关联\u0026gt; 依赖\n下面这张UML图，比较形象地展示了各种类图关系：\nstartUML\r#\r\r一:什么是UML\r#\r\r UML是Unified Model Language的缩写，中文是统一建模语言，是由一整套图表组成的标准化建模语言\n 二:为什么要用UML\r#\r\r通过使用UML使得在软件开发之前， 对整个软件设计有更好的可读性，可理解性，从而降低开发风险。同时，也能方便各个开发人员之间的交流。\nUML提供了极富表达能力的建模语言，可以让软件开发过程中的不同人员分别得到自己感兴趣的信息\n三:UML图有哪些？\r#\r\r UML图分为结构图和行为图。 结构图分为类图、轮廓图、组件图、组合结构图、对象图、部署图、包图。 行为图又分活动图、用例图、状态机图和交互图。 交互图又分为序列图、时序图、通讯图、交互概览图。  UML图概览\n四:UML九种图汇总\r#\r\r类图\r#\r\r概述\r#\r\r类图（Class Diagram）是面向对象系统建模中最常用和最重要的图，是定义其它图的基础。\n类图主要是用来显示系统中的类、接口以及它们之间的静态结构和关系的一种静态模型。\n类图不仅用于可视化描述和记录系统的不同方面，也为构建可执行代码的软件应用程序。\n类图描述一类的属性和操作，也对系统的约束。被广泛应用于类图的建模的面向对象的系统中，因为它们是唯一的，可以直接映射到面向对象语言的 UML 图。\n类图显示集合的类，接口，关联，协作和约束，它也被称为作为结构图。\n目的\r#\r\r  分析和设计应用程序的静态视图;\n  描述一个系统的责任;\n  基地组件图和部署图;\n  正向和逆向工程。\n  示例\r#\r\r车的类图结构为\u0026lt;\u0026gt;，表示车是一个抽象类； 它有两个继承类：小汽车和自行车；它们之间的关系为实现关系，使用带空心箭头的虚线表示； 小汽车为与SUV之间也是继承关系，它们之间的关系为泛化关系，使用带空心箭头的实线表示； 小汽车与发动机之间是组合关系，使用带实心箭头的实线表示； 学生与班级之间是聚合关系，使用带空心箭头的实线表示； 学生与身份证之间为关联关系，使用一根实线表示； 学生上学需要用到自行车，与自行车是一种依赖关系，使用带箭头的虚线表示；\n对象图\r#\r\r概述\r#\r\rUML 对象图和类图一样反映系统的静态过程，但它是从实际的或原型化的情景来表达的。\nUML 对象图显示某时刻对象和对象之间的关系。一个UML对象图可看成一个类图的特殊用例，实例和类可在其中显示。\nUML 对象图是类图的实例，几乎使用与类图完全相同的标识。\n由于对象存在生命周期，因此UML对象图只能在系统某一时间段存在。\n目的\r#\r\r  对象图的目的与类图类似。\n  不同的是，一个类图代表一个抽象的模型，包括类和它们之间的关系。但是，由于对象存在生命周期，因此UML对象图只能在系统某一时间段存在。这意味着对象图是更接近实际的系统行为。目的是在一个特定的时刻捕捉到静态的系统视图。\n  对象图的目的概述如下：\n  正向和逆向工程；\n  一个系统的对象间的关系；\n  一个交互的静态视图；\n  了解对象的行为和他们的关系从实用的角度来看。\n  示例\r#\r\r上面的对象图代表订单管理系统，顾客在一个特定的时间下单。它具有顾客、订单、特殊订单和一般订单四个对象。现在客户对象（C）是与三个订单对象（O1，O2和O3）。这些订单对象相关联的特殊订单和一般订单对象（S1，S2和N1）。顾客具有以下三个具有不同数目的订单（12，32和40），用于所考虑的特定的时间。\n组件图\r#\r\r概述\r#\r\rUML 组件图（Component Diagram）又称为构件图，他描述的是在软件系统中遵从并实现一组接口的物理的、可替换的软件模块。 组件图 = 构件（Component）+接口（Interface）+关系（Relationship）+端口（Port）+连接器（Connector）。 UML 组件图给提供了将要建立的系统的高层次的架构视图，这将帮助开发者开始建立实现的路标，并决定关于任务分配及（或）增进需求技能\n目的\r#\r\r组件图是一种特殊的 UML 图。与我们之前讨论的 UML 图表的目的都不同。组件图不描述该系统的功能，但它描述了使用这些功能的组件。 所以从这一点来说，组件图用于可视化在一个系统中的物理组件。这些组件包括库，程序包，文件等。 组件图也被描述为一个静态的实施的系统视图，在一个特定的时刻，静态执行代表组织的组成部分。 一个单一的组件图不能代表整个系统，但图的集合可用来代表整个。\n 组件图的目的概括如下： 可视化系统的组成部分。 构建的可执行文件，使用正向和反向工程。 描述的组织和组件的关系。  示例\r#\r\r在购买一件商品时，我们首先是浏览商品，了解商品详情。在商品详细页面上，我们可以看到一个“加入购物车”。可以绘制网上商城组件图，如上图所示：购物车、订单、库存、支付管理组件。\n部署图\r#\r\r概述\r#\r\r部署图由节点以及节点之间的关系组成。 部署图描述的是系统运行时的结构，展示了硬件的配置及其软件如何部署到网络结构中。 部署图通常用来帮助理解分布式系统，一个系统模型只有一个部署图。 部署图用于可视化的软件组件部署的系统中的物理组件的拓扑结构。 部署图是用来描述一个系统的静态部署视图。\n目的\r#\r\r部署图与组件图密切相关，部署图是用来描述软件组件部署的硬件组件；而组件图是用来描述组件和显示了它们是如何在硬件中部署。 UML的设计主要是把重点放在系统的软件构件。但是，这两个图是使用特殊图表专注于软件组件和硬件组件。 所以大多数的 UML 图是用来处理逻辑组件，但把重点放在系统的硬件拓扑部署图。\n 以下是部署图的目的描述： 可视化系统的硬件拓扑。 描述用于部署软件组件的硬件组件。 描述运行时处理节点。  示例\r#\r\r用例图\r#\r\r概述\r#\r\r用例图捕捉了模拟系统中的动态行为，并且描述了用户、需求以及系统功能单元之间的关系。 用例图展示了一个外部用户能够观察到的系统功能模型图。 用例图由主角，用例和它们之间的关系组成。\n目的\r#\r\r用例图的目的是捕捉到一个系统的动态方面。 用例图是用来收集系统的要求，包括内部和外部的影响。这些要求大多是设计要求。所以，分析一个系统时要收集其功能用例和确定参与者。\n 简单来说，用例图的目的如下： 用例图用来收集系统的要求。 用例图用于获取系统的外观图。 用例图识别外部和内部因素影响系统。 用例图显示要求之间的相互作用是参与者。  示例\r#\r\r序列图\r#\r\r概述\r#\r\r序列图亦称为时序图或循序图或顺序图，是一种UML行为图。它通过描写叙述对象之间发送消息的时间顺序，显示多个对象之间的动态协作。它能够表示用例的行为顺序，当运行一个用例行为时，时序图中的每条消息响应了一个类操作或状态机中引起转换的触发事件。 序列图展示对象之间的交互，这些交互是指在场景或用例的时间流中发生的，序列图属于动态建模。 序列图的重点在消息序列上，也就是说，描写叙述消息是怎样在对象间发送和接收的，表示对象之间传送消息的时间顺序。 序列图的组成元素：对象、生命线、激活、消息。\n目的\r#\r\r 细化用例的表达。将用例所描述的需求与功能转化为更加正式、层次更加分明的细化表达。 有效地描述类职责的分配方式。根据顺序图中各对象之间的交互关系和发送的消息，来进一步明确对象所属类的职责。 丰富系统的使用语境的逻辑表达。系统的使用语境即为系统可能的使用方式和使用环境。  示例\r#\r\rATM机取款的需求描述如下： 用户通过ATM机，插入银行卡。系统提示输入密码，用户输入密码。系统检查密码是否正确，密码正确用户选择取款。系统提示输入取款金额。用户输入金额，系统判断其合法性。在获取用户输入金额后，系统开始事物处理，减少账户金额，输出相应现金。序列图如下图所示：\n协作图\r#\r\r概述\r#\r\r协作图是动态图的另一种表现形式，强调参加交互的各对象结构的信息。协作图是一种类图，包含类元角色和关联角色，而不仅仅是类元和关联。协作图强调参加交互的各对象的组织。 序列图的组成元素：对象、链接、消息。\n目的\r#\r\r协作图中对象之间的消息传递来反映具体的使用语境的逻辑表达，表示的是系统的一个行为，消息编号对应了程序中嵌套调用的结构和信号传递过程，显示的对象之间的一种关系。 协作图常用于过程的详细设计。\n示例\r#\r\rATM机取现金100元的需求，协作图如下图所示： 状态图\r#\r\r概述\r#\r\rUML状态图是图表本身的名称，主要用于描述对象具有的各种状态、状态之间的转换过程以及触发状态转换的各种事件和条件。 UML状态图描述了一个状态机，可以被定义为一台机器，它定义了一个对象，这些状态控制外部或内部事件的不同状态。 状态机由状态、转换、事件、活动和动作五部分组成。\n 状态：状态指的是对象在其生命周期中的一种状况，处于某个特定状态中的对象必然会满足某些条件、执行某些动作或者是等待某些事件。一个状态的生命周期是一个有限的时间阶段。 转换：转换指的是两个不同状态之间的一种关系，表明对象在第一个状态中执行一定的动作，并且在满足某个特定条件下由某个事件触发进入第二个状态。 事件：事件指的是发生在时间和空间上的对状态机来讲有意义的那些事情。事件通常会引起状态的变迁，促使状态机从一种状态切换到另一种状态，如信号、对象额度创建和销毁等。 活动：活动指的是状态机中进行的非原子操作。 动作：动作指的是状态机中可以执行的哪些原子操作。所谓原子操作，指的是他们在运行的过程中不能被其他消息中断，必须一直执行下去，以至最终导致状态的变更或者返回一个值。  目的\r#\r\rUML状态图可以捕获对象、子系统和系统的生命周期，可以告知一个对象可以拥有的状态，并且事件(如消息的接收，时间的流逝、错误、条件为真等)会怎样随着时间的推移来影响这些状态。一个状态图应该连接到所有具有清晰的可标志状态和复杂行为的类；该图可以确定类的行为以及该行为如何根据当前的状态而变化，也可以展示哪些事件将会改变类的对象的状态。状态图主要是为了模拟响应系统。 以下是使用状态图的主要目的：\n 为了模拟系统的动态环节。 反应系统模型生命周期。 一个对象来描述不同的状态，在其生命周期的时间。 定义一个状态机模型状态的对象。  示例\r#\r\r活动图\r#\r\r概述\r#\r\rUML活动图是 UML 的动态模型的一种图形，一般用来描述相关用例图。 UML活动图描述满足用例要求所要进行的活动以及活动间的约束关系，有利于识别并行活动。 UML活动图是一种特殊的状态图，它对于系统的功能建模特别重要，强调对象间的控制流程。 UML活动图是一种表述过程基理、业务过程以及工作流的技术。它可以用来对业务过程、工作流建模，也可以对用例实现甚至是程序实现来建模。 UML活动图基本上是代表流程形成一个活动到另一个活动的流程图。活动可以被描述为一个系统的操作。\n目的\r#\r\rUML活动图能够捕捉到该系统的动态行为，UML中其它的四个图是用来显示从一个对象到另一个消息流，但活动图是用来显示消息流从一个活动到另一个活动图。 活动图不仅用于可视化系统的动态性质，也可用于通过使用正向和逆向工程技术来构建可执行的系统。唯一缺少的东西在活动图的消息部分。 它并不显示任何消息流程从一个活动到另一个，活动图是一段时间视为流程图。虽然图中看起来像一个流程图，但事实并非如此。它显示不同的流程，如并行，分支，并发单。 以下是 UML 活动图目的描述：\n 绘制活动流程系统。 描述的顺序从一个活动到另一个。 描述系统并行，分支，并发流。  示例\r#\r\r"}),a.add({id:178,href:'/life/docs/computer_network/network_architecture/%E5%88%86%E5%B1%82%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B/',title:"分层参考模型",section:"网络体系结构",content:"   名称 英文 作用     应用层 Application Layer 直接为用户的应用进程（例如电子邮件、文件传输和终端仿真）提供服务。如HTTP、SMTP、FTP、DNS等   表示层 Presentation Layer 把数据转换为能与接收者的系统格式兼容并适合传输的格式，即让两个系统可以交换信息   会话层 Session Layer 负责在数据传输中设置和维护计算机网络中两台计算机之间的通信连接   传输层 Transport Layer 负责端到端通讯，可靠传输，不可靠传输 ，流量控制，复用分用   网络层 Network Layer 负责选择路由最佳路径，规划IP地址(ipv4和ipv6变化只会影响网络层)，拥塞控制   数据链路层 Data Link Layer 帧的开始和结束，还有透明传输，差错校验(纠错由传输层解决)   物理层 Physical Layer 定义网络设备接口标准，电气标准(电压)，如何在物理链路上传输的更快    "}),a.add({id:179,href:'/life/docs/operating_system/two_chapter/2_1_5/',title:"线程概念与多线程模型",section:"第二章 进程管理 ",content:""}),a.add({id:180,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/dmmsjbabmp/',title:"你到底想表达什么",section:"自信",content:"你到底想表达什么\r#\r\r沟通是门艺术，细节决定效果。 在人际沟通中，我们经常会听到这样的话：“你能不能说清楚一点？”“我完全不清楚你到底想表达什么。” 明明自己觉得说的够清楚了，为什么对方就是不明白呢？\n你为什么想得清楚却讲不清楚\r#\r\r归根结底，就是你讲的话没说到重点，沟通无细节。内容无重点会让人觉得你太啰嗦，沟通无细节则会让人捕捉不到你讲话的真实目的。\n而只有注意细节问题，才能够在传递出信息的同时，让对方领会你到底想表达的是什么，这样的沟通才是省时省力的。\n 先给大家举个例子，来看下没细节的沟通方式：\n张三说：我现在好紧张！\n李四问：为什么紧张啊？\n张三回答：我也不知道为啥，就是很紧张，太紧张了！\n李四说：你说的我都有点紧张了。\n 面对张三无细节的表达，很明显李四无法理解到他的真实想法，只会感觉莫名其妙，下面再来看一下加了细节的表达方式：\n张三说：马上要上台演讲了，我好紧张，心跳好快，后背发凉，手心也出汗了，感觉自己不能呼吸了。\n李四说：你这么紧张啊，别急，我第一次上台演讲也这样，其实只要进入状态就没什么了，先跟着我一起做深呼吸，缓解一下。\n其实只要在说的话中加入了细节，对方就能精确捕捉到你想表达的信息，然后做出相应的配合。\n我们常说，情商高就是会说话，而评判一个人的社交沟通能力，不在于声音的悦耳动听，也不在于说话的风格，而在于传递信息的时候，能不能“把话说清楚”。\n话能不能说清楚，在于细节处理得好不好，很多人其实对“细节”二字有误解，认为细节表达等同啰嗦。\n实际上细节表达是为了讲清楚事情，紧扣事情中心的描述。 而啰嗦的表达则没有话题中心，让对方很难抓住重点。\n 还是举栗说明，先来看下啰嗦的表达方式：\n张三说：我们租的这个小区物业也太不负责了。\n李四问：哪里不负责了？\n张三回答：我吃完饭下楼散步，看见好多宠物的大小便。你说那些养宠物的人也是，为什么不教宠物好好上厕所呢？不会教就不要养啊，养了又不教好。\n接着他又说：而且这物业每个月收我们这么多钱，连小区环境都维护不好，还好意思收钱，简直太差劲了！\n李四问：你到底想说啥？\n张三回答：哎呀，我说了这么多，你怎么听不明白呢？\n这就是典型的啰嗦表达，啰里啰嗦，观点混乱。\n他一会指责养宠物的人，一会批评物业不负责，内容上没有重点，听的人也云里雾里，不知道对方到底想表达什么，只知道对方是在抱怨和发泄。\n 下面再来看一下加了细节描述的例子：\n张三说：我们租的这个小区物业也太不负责了。\n李四问：哪里不负责了？\n张三回答：比如你看环境上的，小区里很多人养宠物，宠物又都在草坪、路上、电梯里大小便。一不留神我们很可能会踩到大小便，生活体验太差了。\n李四说：你这样一说，确实有点问题。\n张三继续说：我要跟物业反应一下，让他们想办法让宠物主人注意这方面，毕竟环境卫生好，大家住得也才舒服嘛。\n李四说：有道理，不然物业费白交了。\n加上细节的表达，对方就能立马明白你想表达的意思，而且细节描述越具体化，听的人就越容易产生共鸣。\n沟通中的细节描述，能够把信息准确无误地传递给听的人，让对方快速捕捉到你信息中有价值的东西，从而提高沟通效率。\n  比如在职场上，开会的人如果不注重细节表达，那么参加会议的人就很难理解会议的核心。而要想提高沟通效率，关键就在于细节描述上\n  分享三种细节表达技巧，让你既想得清楚，又讲得明白\n 1)多角度出发\r#\r\r这种方法很简单，就是绕着核心主题，在细节描述的时候从多个角度出发。\n还是举个例子给大家说明，有一家公司制定了年底奖励，目的是为了激励员工冲出好业绩。\n老板找到主管小陈说：小陈，公司年底准备奖励优秀员工去泰国旅游，每个部门有三个名额，不如就按照业绩来评比吧，业绩最好的三个人去。\n小陈回答道：没去成的同事心里会不会有意见呢？怕会影响了士气啊！\n老板回答：那怎么办？\n从案例可以看出来，老板想的是，通过奖励让公司业绩提高，这也就是这件事情的主题。而主管小陈是想让老板同意所有的员工去旅行。\n按照上面的沟通方式，显然是达不到让双方都满意的目的地。我们来看一下从多个角度描述细节的效果：\n老板对小陈说：小陈，公司年底准备奖励优秀员工去泰国旅游，你部门有五个人，但只有三个名额，不如就按照业绩来评比吧，业绩最好的三个人去。\n小陈说：老板，我有个想法，想和你探讨，可以吗？\n老板回答：可以，你说。\n小陈说：公司奖励员工的目的是为了提高业绩，那公司业绩怎么提高呢？业绩来自每一位员工的积极参与，如果大家都去旅行，就表明公司没有抛弃任何一个参与者。\n接着他又说：业绩还来自于大家团结一致，如果不全部去旅行，就暗示着分裂，以后怎么出好业绩呢？\n老板说：你说的也有道理，但是这样会不会让业绩不好的员工觉得无所谓呢？\n小陈回答：好业绩还来自于荣耀感，旅行是对业绩出色的奖励，让大伙儿明白荣耀来自自己的付出，业绩不好的同事，反倒会因此树立更积极的工作态度。\n老板说：行，那就都去泰国！\n在改变后的沟通里，出现了三个角度，第一个是参与感，第二个是凝聚力，第三个是荣耀感。\n这三个角度与“业绩”都环环相扣，绕着老板的目的进行分析描述。这样说出的话，就会更有说服力，而且条理清晰，对方也会觉得你考虑周全。\n2) 追问法\r#\r\r这个方法就是通过把主题不断放大，但在放大的时候不是直接告诉对方我们的观点，而是采用追问的方式，让对方把细节描述出来，答案也就会随着细节一同出现。\n举个栗子，张同学期末考试考砸了，张爸爸对张同学说：你这个成绩简直没眼看，怎么考这么点分？\n张同学回答：题太难了，考不好怎么怪我。\n张爸爸说：你要努力啊，要对得起我给你交的学费啊。\n张同学说：我很努力了啊，但是复习时间太少了。\n张爸爸说：不要找借口，你自己不努力能怪谁？\n张同学回答道：你根本不理解我！\n这样不剖析原因，不找问题根源的沟通，只会不欢而散，其实这件事的主题就是复习时间少。下面来看看利用追问法，把问题放大后的效果：\n张爸爸对张同学说：你这个成绩简直没眼看，怎么考这么点分？什么原因？\n张同学说：复习时间太少了。\n张爸爸继续问：想一下为什么复习时间太少？\n张同学回答：考试前我贪玩了，耽搁了复习时间。我下次考试前不会再贪玩了。\n张爸爸继续追问：不贪玩成绩就可以提高了吗？还可以怎么做？\n张同学回答：平时及时巩固复习知识。\n张爸爸继续问：平时怎么及时巩固复习呢？\n张同学回答：每天回到家做完作业，及时复习当天知识，每周末复习一周学习的知识。\n张爸爸说：不错，希望你说到做到。\n确定问题主要原因，然后一个点一个点追问，让对方针对性问答，最终让对方自己找到解决方案。每个人的想法都会有偏差，所以我们没必要强求别人和自己想的一样。\n遇到问题时，通过沟通，分析问题根源，增加彼此之间的了解，以求互相理解和认同，就能达到沟通共赢。\n3) 描述感受\r#\r\r我们在与人沟通时，不能光是简单的描述事实，有时候加入感受，效果才会更好。这是为了让对方产生同理心，而对方也会更加具体明白你讲的事情。\n举个栗子：张三生病了，让妻子帮他买感冒药。\n张三说：老婆，帮我买点感冒药回来，我感冒了。\n妻子回答：知道了，等下我下楼卖菜，到时候你提醒我一下。\n张三说：这么个小事都记不住吗？你这记不住事的毛病要改改。上次去看我妈，你连包包都忘了拿，结果还要一个老人给你送回来。我们要孝敬他们，而不是折腾他们！\n妻子说：你把话跟我说清楚，我怎么没有孝心了？我哪月没去看你爸妈？哪次不是大包小包送东西？倒是你，去我爸妈家，每次都像个大爷，什么也不做！\n原本简简单单买感冒药的事情，却扯到了孝敬父母上面去，这样翻旧账的沟通方式，极容易让沟通双方产生矛盾。\n下面我们来看一下正确的聊天方式：\n张三说：老婆，麻烦你等下帮我买点感冒药，我今天出门着凉了，可能衣服穿少了，现在有点发烧。本来我想自己买的，但实在没有力气出门了。\n妻子回答道：怎么这么严重啊，我马上下楼去买！\n像这样描述感受，就是在仔细描述细节，如此便可以快速达到目的，避免不必要的误会出现。\n4) 写在最后的话\r#\r\r细节的表达，决定沟通的效果。有重点，有细节的内容，会给听的人带来“这个信息有价值”的感觉。\n掌握细节表达，能够让我们想得清楚，并能讲得清明白。在生活中，这是让我们减少误会的好方法；在职场上，这也是提升效率的好方法。\n"}),a.add({id:181,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E6%B2%9F%E9%80%9A%E6%8A%80%E5%B7%A7/dmmsjbabmp/',title:"你到底想表达什么",section:"沟通技巧",content:"你到底想表达什么\r#\r\r沟通是门艺术，细节决定效果。 在人际沟通中，我们经常会听到这样的话：“你能不能说清楚一点？”“我完全不清楚你到底想表达什么。” 明明自己觉得说的够清楚了，为什么对方就是不明白呢？\n你为什么想得清楚却讲不清楚\r#\r\r归根结底，就是你讲的话没说到重点，沟通无细节。内容无重点会让人觉得你太啰嗦，沟通无细节则会让人捕捉不到你讲话的真实目的。\n而只有注意细节问题，才能够在传递出信息的同时，让对方领会你到底想表达的是什么，这样的沟通才是省时省力的。\n 先给大家举个例子，来看下没细节的沟通方式：\n张三说：我现在好紧张！\n李四问：为什么紧张啊？\n张三回答：我也不知道为啥，就是很紧张，太紧张了！\n李四说：你说的我都有点紧张了。\n 面对张三无细节的表达，很明显李四无法理解到他的真实想法，只会感觉莫名其妙，下面再来看一下加了细节的表达方式：\n张三说：马上要上台演讲了，我好紧张，心跳好快，后背发凉，手心也出汗了，感觉自己不能呼吸了。\n李四说：你这么紧张啊，别急，我第一次上台演讲也这样，其实只要进入状态就没什么了，先跟着我一起做深呼吸，缓解一下。\n其实只要在说的话中加入了细节，对方就能精确捕捉到你想表达的信息，然后做出相应的配合。\n我们常说，情商高就是会说话，而评判一个人的社交沟通能力，不在于声音的悦耳动听，也不在于说话的风格，而在于传递信息的时候，能不能“把话说清楚”。\n话能不能说清楚，在于细节处理得好不好，很多人其实对“细节”二字有误解，认为细节表达等同啰嗦。\n实际上细节表达是为了讲清楚事情，紧扣事情中心的描述。 而啰嗦的表达则没有话题中心，让对方很难抓住重点。\n 还是举栗说明，先来看下啰嗦的表达方式：\n张三说：我们租的这个小区物业也太不负责了。\n李四问：哪里不负责了？\n张三回答：我吃完饭下楼散步，看见好多宠物的大小便。你说那些养宠物的人也是，为什么不教宠物好好上厕所呢？不会教就不要养啊，养了又不教好。\n接着他又说：而且这物业每个月收我们这么多钱，连小区环境都维护不好，还好意思收钱，简直太差劲了！\n李四问：你到底想说啥？\n张三回答：哎呀，我说了这么多，你怎么听不明白呢？\n这就是典型的啰嗦表达，啰里啰嗦，观点混乱。\n他一会指责养宠物的人，一会批评物业不负责，内容上没有重点，听的人也云里雾里，不知道对方到底想表达什么，只知道对方是在抱怨和发泄。\n 下面再来看一下加了细节描述的例子：\n张三说：我们租的这个小区物业也太不负责了。\n李四问：哪里不负责了？\n张三回答：比如你看环境上的，小区里很多人养宠物，宠物又都在草坪、路上、电梯里大小便。一不留神我们很可能会踩到大小便，生活体验太差了。\n李四说：你这样一说，确实有点问题。\n张三继续说：我要跟物业反应一下，让他们想办法让宠物主人注意这方面，毕竟环境卫生好，大家住得也才舒服嘛。\n李四说：有道理，不然物业费白交了。\n加上细节的表达，对方就能立马明白你想表达的意思，而且细节描述越具体化，听的人就越容易产生共鸣。\n沟通中的细节描述，能够把信息准确无误地传递给听的人，让对方快速捕捉到你信息中有价值的东西，从而提高沟通效率。\n  比如在职场上，开会的人如果不注重细节表达，那么参加会议的人就很难理解会议的核心。而要想提高沟通效率，关键就在于细节描述上\n  分享三种细节表达技巧，让你既想得清楚，又讲得明白\n 1)多角度出发\r#\r\r这种方法很简单，就是绕着核心主题，在细节描述的时候从多个角度出发。\n还是举个例子给大家说明，有一家公司制定了年底奖励，目的是为了激励员工冲出好业绩。\n老板找到主管小陈说：小陈，公司年底准备奖励优秀员工去泰国旅游，每个部门有三个名额，不如就按照业绩来评比吧，业绩最好的三个人去。\n小陈回答道：没去成的同事心里会不会有意见呢？怕会影响了士气啊！\n老板回答：那怎么办？\n从案例可以看出来，老板想的是，通过奖励让公司业绩提高，这也就是这件事情的主题。而主管小陈是想让老板同意所有的员工去旅行。\n按照上面的沟通方式，显然是达不到让双方都满意的目的地。我们来看一下从多个角度描述细节的效果：\n老板对小陈说：小陈，公司年底准备奖励优秀员工去泰国旅游，你部门有五个人，但只有三个名额，不如就按照业绩来评比吧，业绩最好的三个人去。\n小陈说：老板，我有个想法，想和你探讨，可以吗？\n老板回答：可以，你说。\n小陈说：公司奖励员工的目的是为了提高业绩，那公司业绩怎么提高呢？业绩来自每一位员工的积极参与，如果大家都去旅行，就表明公司没有抛弃任何一个参与者。\n接着他又说：业绩还来自于大家团结一致，如果不全部去旅行，就暗示着分裂，以后怎么出好业绩呢？\n老板说：你说的也有道理，但是这样会不会让业绩不好的员工觉得无所谓呢？\n小陈回答：好业绩还来自于荣耀感，旅行是对业绩出色的奖励，让大伙儿明白荣耀来自自己的付出，业绩不好的同事，反倒会因此树立更积极的工作态度。\n老板说：行，那就都去泰国！\n在改变后的沟通里，出现了三个角度，第一个是参与感，第二个是凝聚力，第三个是荣耀感。\n这三个角度与“业绩”都环环相扣，绕着老板的目的进行分析描述。这样说出的话，就会更有说服力，而且条理清晰，对方也会觉得你考虑周全。\n2) 追问法\r#\r\r这个方法就是通过把主题不断放大，但在放大的时候不是直接告诉对方我们的观点，而是采用追问的方式，让对方把细节描述出来，答案也就会随着细节一同出现。\n举个栗子，张同学期末考试考砸了，张爸爸对张同学说：你这个成绩简直没眼看，怎么考这么点分？\n张同学回答：题太难了，考不好怎么怪我。\n张爸爸说：你要努力啊，要对得起我给你交的学费啊。\n张同学说：我很努力了啊，但是复习时间太少了。\n张爸爸说：不要找借口，你自己不努力能怪谁？\n张同学回答道：你根本不理解我！\n这样不剖析原因，不找问题根源的沟通，只会不欢而散，其实这件事的主题就是复习时间少。下面来看看利用追问法，把问题放大后的效果：\n张爸爸对张同学说：你这个成绩简直没眼看，怎么考这么点分？什么原因？\n张同学说：复习时间太少了。\n张爸爸继续问：想一下为什么复习时间太少？\n张同学回答：考试前我贪玩了，耽搁了复习时间。我下次考试前不会再贪玩了。\n张爸爸继续追问：不贪玩成绩就可以提高了吗？还可以怎么做？\n张同学回答：平时及时巩固复习知识。\n张爸爸继续问：平时怎么及时巩固复习呢？\n张同学回答：每天回到家做完作业，及时复习当天知识，每周末复习一周学习的知识。\n张爸爸说：不错，希望你说到做到。\n确定问题主要原因，然后一个点一个点追问，让对方针对性问答，最终让对方自己找到解决方案。每个人的想法都会有偏差，所以我们没必要强求别人和自己想的一样。\n遇到问题时，通过沟通，分析问题根源，增加彼此之间的了解，以求互相理解和认同，就能达到沟通共赢。\n3) 描述感受\r#\r\r我们在与人沟通时，不能光是简单的描述事实，有时候加入感受，效果才会更好。这是为了让对方产生同理心，而对方也会更加具体明白你讲的事情。\n举个栗子：张三生病了，让妻子帮他买感冒药。\n张三说：老婆，帮我买点感冒药回来，我感冒了。\n妻子回答：知道了，等下我下楼卖菜，到时候你提醒我一下。\n张三说：这么个小事都记不住吗？你这记不住事的毛病要改改。上次去看我妈，你连包包都忘了拿，结果还要一个老人给你送回来。我们要孝敬他们，而不是折腾他们！\n妻子说：你把话跟我说清楚，我怎么没有孝心了？我哪月没去看你爸妈？哪次不是大包小包送东西？倒是你，去我爸妈家，每次都像个大爷，什么也不做！\n原本简简单单买感冒药的事情，却扯到了孝敬父母上面去，这样翻旧账的沟通方式，极容易让沟通双方产生矛盾。\n下面我们来看一下正确的聊天方式：\n张三说：老婆，麻烦你等下帮我买点感冒药，我今天出门着凉了，可能衣服穿少了，现在有点发烧。本来我想自己买的，但实在没有力气出门了。\n妻子回答道：怎么这么严重啊，我马上下楼去买！\n像这样描述感受，就是在仔细描述细节，如此便可以快速达到目的，避免不必要的误会出现。\n4) 写在最后的话\r#\r\r细节的表达，决定沟通的效果。有重点，有细节的内容，会给听的人带来“这个信息有价值”的感觉。\n掌握细节表达，能够让我们想得清楚，并能讲得清明白。在生活中，这是让我们减少误会的好方法；在职场上，这也是提升效率的好方法。\n"}),a.add({id:182,href:'/life/docs/javadir/basedir/java-basic-x-generic/',title:"泛型机制详解",section:"Java基础知识 ",content:"泛型机制详解\r#\r\r概述\r#\r\r 泛型，即“参数化类型”。一提到参数，最熟悉的就是定义方法时有形参，然后调用此方法时传递实参。那么参数化类型怎么理解呢？顾名思义，就是将类型由原来的具体的类型参数化，类似于方法中的变量参数，此时类型也定义成参数形式（可以称之为类型形参），然后在使用/调用时传入具体的类型（类型实参）。 泛型的本质是为了参数化类型（在不创建新的类型的情况下，通过泛型指定的不同类型来控制形参具体限制的类型）。也就是说在泛型使用过程中，操作的数据类型被指定为一个参数，这种参数类型可以用在类、接口和方法中，分别被称为泛型类、泛型接口、泛型方法。\n 泛型得小心的地方\r#\r\r 例子1  List arrayList = new ArrayList(); arrayList.add(\u0026#34;aaaa\u0026#34;); arrayList.add(100); for(int i = 0; i\u0026lt; arrayList.size();i++){ String item = (String)arrayList.get(i); Log.d(\u0026#34;泛型测试\u0026#34;,\u0026#34;item = \u0026#34; + item); }  例子2   第二个例子实际是第一个例子的升级版本质是例子1\n public class DemoGeneric2 { @Test public void test1(){ Map map = new HashMap(); map.put(UUID.randomUUID().toString(),UUID.randomUUID().toString()) ; printMap(map) ; } public void printMap(Map\u0026lt;String,Number\u0026gt; numberMap){ numberMap.entrySet().forEach(stringNumberEntry -\u0026gt; { System.out.println(stringNumberEntry.getValue().doubleValue()); }); } } java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Number at com.my_genericity.basic_usage.DemoGeneric2.lambda$printMap$0(DemoGeneric2.java:24) at java.util.HashMap$EntrySet.forEach(HashMap.java:1046) at com.my_genericity.basic_usage.DemoGeneric2.printMap(DemoGeneric2.java:23) at com.my_genericity.basic_usage.DemoGeneric2.test1(DemoGeneric2.java:19) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) 泛型的基本使用\r#\r\r泛型类\r#\r\r 简单泛型  public class Point\u0026lt;T\u0026gt; {// 此处可以随便写标识符号，T是type的简称  private T var;// var的类型由T指定，即：由外部指定  public T getVar() {// 返回值的类型由外部决定  return var; } public void setVar(T var) {// 设置的类型也由外部决定  this.var = var; } } public class GenericsDemo03 { public static void main(String[] args) { Point\u0026lt;String\u0026gt; p = new Point\u0026lt;String\u0026gt;() ; // 里面的var类型为String类型  p.setVar(\u0026#34;it\u0026#34;) ; // 设置字符串  System.out.println(p.getVar().length()) ; // 取得字符串的长度  } }  多元泛型  public class Notepad\u0026lt;K,V\u0026gt; {// 此处指定了两个泛型类型  private K key;// 此变量的类型由外部决定  private V value;// 此变量的类型由外部决定  public K getKey() { return key; } public void setKey(K key) { this.key = key; } public V getValue() { return value; } public void setValue(V value) { this.value = value; } } public class GenericsDemo04 { public static void main(String[] args) { Notepad\u0026lt;String, Integer\u0026gt; notepad = null; // 定义两个泛型类型的对象  notepad = new Notepad\u0026lt;String, Integer\u0026gt;(); // 里面的key为String，value为Integer  notepad.setKey(\u0026#34;汤姆\u0026#34;); // 设置第一个内容  notepad.setValue(20); // 设置第二个内容  System.out.print(\u0026#34;姓名；\u0026#34; + notepad.getKey()); // 取得信息  System.out.print(\u0026#34;，年龄；\u0026#34; + notepad.getValue()); // 取得信息  } } 泛型接口\r#\r\r 简单的泛型接口  public class GenericsDemo05 { interface Info\u0026lt;T\u0026gt; {// 在接口上定义泛型  /** * 定义抽象方法，抽象方法的返回值就是泛型类型 * * @return */ public T getVar(); } static class InfoImpl\u0026lt;T\u0026gt; implements Info\u0026lt;T\u0026gt; {// 定义泛型接口的子类  private T var; // 定义属性  /** * 定义抽象方法，抽象方法的返回值就是泛型类型 * * @return */ @Override public T getVar() { return var; } public InfoImpl(T var) {// 通过构造方法设置属性内容  this.var = var; } } public static void main(String[] args) { Info\u0026lt;String\u0026gt; info = null; // 声明接口对象  info = new InfoImpl\u0026lt;String\u0026gt;(\u0026#34;汤姆\u0026#34;); // 通过子类实例化对象  System.out.println(\u0026#34;内容：\u0026#34; + info.getVar()); } } 泛型方法\r#\r\r在java中,泛型类的定义非常简单，但是泛型方法就比较复杂了。\n泛型类，是在实例化类的时候指明泛型的具体类型；泛型方法，是在调用方法的时候指明泛型的具体类型 。\n/** * 泛型方法的基本介绍 * @param tClass 传入的泛型实参 * @return T 返回值为T类型 * 说明： * 1）public 与 返回值中间\u0026lt;T\u0026gt;非常重要，可以理解为声明此方法为泛型方法。 * 2）只有声明了\u0026lt;T\u0026gt;的方法才是泛型方法，泛型类中的使用了泛型的成员方法并不是泛型方法。 * 3）\u0026lt;T\u0026gt;表明该方法将使用泛型类型T，此时才可以在方法中使用泛型类型T。 * 4）与泛型类的定义一样，此处T可以随便写为任意标识，常见的如T、E、K、V等形式的参数常用于表示泛型。 */ public \u0026lt;T\u0026gt; T genericMethod(Class\u0026lt;T\u0026gt; tClass)throws InstantiationException , IllegalAccessException{ T instance = tClass.newInstance(); return instance; } 说明一下，定义泛型方法时，必须在返回值前边加一个，来声明这是一个泛型方法，持有一个泛型T，然后才可以用泛型T作为方法的返回值。\nClass的作用就是指明泛型的具体类型，而Class类型的变量c，可以用来创建泛型类的对象。\n为什么要用变量c来创建对象呢？既然是泛型方法，就代表着我们不知道具体的类型是什么，也不知道构造方法如何，因此没有办法去new一个对象， 但可以利用变量c的newInstance方法去创建对象，也就是利用反射创建对象。\n泛型方法要求的参数是Class类型，而Class.forName()方法的返回值也是Class， 因此可以用Class.forName()作为参数。其中，forName()方法中的参数是何种类型，返回的Class就是何种类型。\n在本例中，forName()方法中传入的是User类的完整路径，因此返回的是Class类型的对象，因此调用泛型方法时，变量c的类型就是Class， 因此泛型方法中的泛型T就被指明为User，因此变量obj的类型为User。\n当然，泛型方法不是仅仅可以有一个参数Class，可以根据需要添加其他参数。\n为什么要使用泛型方法呢？因为泛型类要在实例化的时候就指明类型，如果想换一种类型，不得不重新new一次，可能不够灵活；而泛型方法可以在调用的时候指明类型，更加灵活。\n泛型的上下限\r#\r\r\u0026lt;?\u0026gt; 无限制通配符 \u0026lt;? extends E\u0026gt; extends 关键字声明了类型的上界，表示参数化的类型可能是所指定的类型，或者是此类型的子类 \u0026lt;? super E\u0026gt; super 关键字声明了类型的下界，表示参数化的类型可能是指定的类型，或者是此类型的父类 // 使用原则《Effictive Java》 // 为了获得最大限度的灵活性，要在表示 生产者或者消费者 的输入参数上使用通配符，使用的规则就是：生产者有上限、消费者有下限 1. 如果参数化类型表示一个 T 的生产者，使用 \u0026lt; ? extends T\u0026gt;; 2. 如果它表示一个 T 的消费者，就使用 \u0026lt; ? super T\u0026gt;； 3. 如果既是生产又是消费，那使用通配符就没什么意义了，因为你需要的是精确的参数类型。 上限\r#\r\rpublic class DemoGeneric1 { private static int add(int a, int b) { System.out.println(a + \u0026#34;+\u0026#34; + b + \u0026#34;=\u0026#34; + (a + b)); return a + b; } private static float add(float a, float b) { System.out.println(a + \u0026#34;+\u0026#34; + b + \u0026#34;=\u0026#34; + (a + b)); return a + b; } private static double add(double a, double b) { System.out.println(a + \u0026#34;+\u0026#34; + b + \u0026#34;=\u0026#34; + (a + b)); return a + b; } public static \u0026lt;T extends Number\u0026gt; double addTwo(T a, T b) { System.out.println(a + \u0026#34;+\u0026#34; + b + \u0026#34;=\u0026#34; + (a.doubleValue() + b.doubleValue())); return a.doubleValue() + b.doubleValue(); } public static void main(String[] args) { double v = DemoGeneric1.addTwo(2L, 5L); System.out.println(v); } } 下限\r#\r\rpublic class GenericsDemo06 { static class DateValue\u0026lt;T extends Object\u0026gt; { T t; public DateValue(T t) { this.t = t; } public T getT() { return t; } public void setT(T t) { this.t = t; } } public static void main(String[] args) { GenericsDemo06.fun(new DateValue(6)); GenericsDemo06.fun(new DateValue(5L)); GenericsDemo06.fun(new DateValue(3d)); GenericsDemo06.fun(new DateValue(5.66f)); } public static void fun(DateValue\u0026lt;? super Number\u0026gt; value) { System.out.println(\u0026#34;value:\u0026#34; + value.getT()); } } public class GenericsDemo07 { static class AClass implements Comparable { public Integer getId() { return id; } public void setId(Integer id) { this.id = id; } public String getTitle() { return title; } public void setTitle(String title) { this.title = title; } private Integer id; private String title; public AClass(Integer id, String title) { this.id = id; this.title = title; } @Override public String toString() { return \u0026#34;AClass{\u0026#34; + \u0026#34;id=\u0026#34; + id + \u0026#34;, title=\u0026#39;\u0026#34; + title + \u0026#39;\\\u0026#39;\u0026#39; + \u0026#39;}\u0026#39;; } /** * Compares this object with the specified object for order. Returns a * negative integer, zero, or a positive integer as this object is less * than, equal to, or greater than the specified object. * * \u0026lt;p\u0026gt;The implementor must ensure \u0026lt;tt\u0026gt;sgn(x.compareTo(y)) == * -sgn(y.compareTo(x))\u0026lt;/tt\u0026gt; for all \u0026lt;tt\u0026gt;x\u0026lt;/tt\u0026gt; and \u0026lt;tt\u0026gt;y\u0026lt;/tt\u0026gt;. (This * implies that \u0026lt;tt\u0026gt;x.compareTo(y)\u0026lt;/tt\u0026gt; must throw an exception iff * \u0026lt;tt\u0026gt;y.compareTo(x)\u0026lt;/tt\u0026gt; throws an exception.) * * \u0026lt;p\u0026gt;The implementor must also ensure that the relation is transitive: * \u0026lt;tt\u0026gt;(x.compareTo(y)\u0026amp;gt;0 \u0026amp;amp;\u0026amp;amp; y.compareTo(z)\u0026amp;gt;0)\u0026lt;/tt\u0026gt; implies * \u0026lt;tt\u0026gt;x.compareTo(z)\u0026amp;gt;0\u0026lt;/tt\u0026gt;. * * \u0026lt;p\u0026gt;Finally, the implementor must ensure that \u0026lt;tt\u0026gt;x.compareTo(y)==0\u0026lt;/tt\u0026gt; * implies that \u0026lt;tt\u0026gt;sgn(x.compareTo(z)) == sgn(y.compareTo(z))\u0026lt;/tt\u0026gt;, for * all \u0026lt;tt\u0026gt;z\u0026lt;/tt\u0026gt;. * * \u0026lt;p\u0026gt;It is strongly recommended, but \u0026lt;i\u0026gt;not\u0026lt;/i\u0026gt; strictly required that * \u0026lt;tt\u0026gt;(x.compareTo(y)==0) == (x.equals(y))\u0026lt;/tt\u0026gt;. Generally speaking, any * class that implements the \u0026lt;tt\u0026gt;Comparable\u0026lt;/tt\u0026gt; interface and violates * this condition should clearly indicate this fact. The recommended * language is \u0026#34;Note: this class has a natural ordering that is * inconsistent with equals.\u0026#34; * * \u0026lt;p\u0026gt;In the foregoing description, the notation * \u0026lt;tt\u0026gt;sgn(\u0026lt;/tt\u0026gt;\u0026lt;i\u0026gt;expression\u0026lt;/i\u0026gt;\u0026lt;tt\u0026gt;)\u0026lt;/tt\u0026gt; designates the mathematical * \u0026lt;i\u0026gt;signum\u0026lt;/i\u0026gt; function, which is defined to return one of \u0026lt;tt\u0026gt;-1\u0026lt;/tt\u0026gt;, * \u0026lt;tt\u0026gt;0\u0026lt;/tt\u0026gt;, or \u0026lt;tt\u0026gt;1\u0026lt;/tt\u0026gt; according to whether the value of * \u0026lt;i\u0026gt;expression\u0026lt;/i\u0026gt; is negative, zero or positive. * * @param o the object to be compared. * @return a negative integer, zero, or a positive integer as this object * is less than, equal to, or greater than the specified object. * @throws NullPointerException if the specified object is null * @throws ClassCastException if the specified object\u0026#39;s type prevents it * from being compared to this object. */ @Override public int compareTo(Object o) { AClass aClass = (AClass) o; return this.id.compareTo(aClass.getId()); } } static class DataValue\u0026lt;E\u0026gt; { public static \u0026lt;E extends Comparable\u0026lt;? super E\u0026gt;\u0026gt; E max(List\u0026lt;? extends E\u0026gt; e1) { if (e1 == null) { return null; } //迭代器返回的元素属于 E 的某个子类型  Iterator\u0026lt;? extends E\u0026gt; iterator = e1.iterator(); E result = iterator.next(); while (iterator.hasNext()) { E next = iterator.next(); if (next.compareTo(result) \u0026gt; 0) { result = next; } } return result; } } public static void main(String[] args) { List\u0026lt;AClass\u0026gt; aClassList = new ArrayList\u0026lt;\u0026gt;(8) ; for (int i = 0; i \u0026lt; 8; i++) { AClass aClass = new AClass(i, UUID.randomUUID().toString()); aClassList.add(aClass); } AClass max = DataValue.max(aClassList); System.out.println(max); } } 述代码中的类型参数 E 的范围是\u0026lt;E extends Comparable\u0026lt;? super E\u0026raquo;，我们可以分步查看：\n  要进行比较，所以 E 需要是可比较的类，因此需要 extends Comparable\u0026lt;…\u0026gt;（注意这里不要和继承的 extends 搞混了，不一样）\n  Comparable\u0026lt; ? super E\u0026gt; 要对 E 进行比较，即 E 的消费者，所以需要用 super\n  而参数 List\u0026lt; ? extends E\u0026gt; 表示要操作的数据是 E 的子类的列表，指定上限，这样容器才够大\n  "}),a.add({id:183,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/awb8ggwzn2/',title:"生活中常用的客套话",section:"自信",content:" 人际交往中往往需要客套话，客套话会使我们彼此之间的关系更加和谐。要把“谢谢你、对不起、请” 常挂嘴上。请人办事，说一声“劳驾”，送客临别，讲一句“慢走”。这些都能显示出你礼貌周到、谈吐文雅。擅长外交的人们像精通交通规则一般精于客套，得体的客套话同我们美好的仪表一样，是人际交往的推荐书。以下是总结出的一些日常生活中常用的客套话\n 初次见面说“久仰”，好久不见说“久违”。\n请人评论说“指教”，求人原谅说“包涵”。\n求人帮忙说“劳驾”，求给方便说“借光”。\n麻烦别人说“打扰”，向人祝贺说“恭喜”。\n请人改稿称“斧正”，请人指点用“赐教”。\n求人解答用“请问”，赞人见解用“高见”。\n看望别人用“拜访”，托人办事用“拜托”。\n宾客来到用“光临”，送客出门称“慢走”。\n招待远客称“洗尘”，陪伴朋有用“奉陪”。\n请人勿送用“留步”，欢迎购买叫“光顾”。\n与客作别称“再见”，归还原物叫“奉还”。\n对方来信叫“慧书”，老人年龄叫“高寿”。\n得体的客套话会温暖对方的心窝，也能使你的语言更加充满魅力。\n"}),a.add({id:184,href:'/life/docs/javadir/thread/reentrantlock/',title:"ReentrantLock",section:"多线程与并发 ",content:"ReentrantLock\r#\r\rReentrantLock 介绍\r#\r\r  ReentrantLock是Java中常用的锁，属于乐观锁类型，多线程并发情况下。能保证共享数据安全性，线程间有序性\n  ReentrantLock通过原子操作和阻塞实现锁原理，一般使用lock获取锁，unlock释放锁，\n  下面说一下锁的基本使用和底层基本实现原理，lock和unlock底层\n  lock的时候可能被其他线程获得所，那么此线程会阻塞自己，关键原理底层用到Unsafe类的API: CAS和park\n  ReentrantLock是一个可重入的互斥锁，又被称为“独占锁”\n  简单模拟 ReentrantLock\r#\r\r 不安全的例子  public class ReentrantLockDemo1 { public static void main(String[] args) { new Thread(() -\u0026gt; { drawMoney() ; },\u0026#34;线程1\u0026#34;).start(); new Thread(() -\u0026gt; { drawMoney() ; },\u0026#34;线程2\u0026#34;).start(); } private static void drawMoney(){ System.out.println(Thread.currentThread().getName()+\u0026#34;......\u0026#34;+\u0026#34;正在取钱!\u0026#34;); try { Thread.sleep(3000); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(\u0026#34;取钱完毕!\u0026#34;); } /* * 线程1......正在取钱! 线程2......正在取钱! 取钱完毕! 取钱完毕! 希望线程1取钱的时候线程必须等取完才能继续取钱 * */ }  改造如下  public class ReentrantLockDemo1 { public static void main(String[] args) { ReentrantLockService reentrantLockService = new ReentrantLockService() ; new Thread(() -\u0026gt; { reentrantLockService.lock(); drawMoney(); reentrantLockService.unLock(); }, \u0026#34;线程1\u0026#34;).start(); new Thread(() -\u0026gt; { reentrantLockService.lock(); drawMoney(); reentrantLockService.unLock(); }, \u0026#34;线程2\u0026#34;).start(); } private static void drawMoney() { System.out.println(Thread.currentThread().getName() + \u0026#34;......\u0026#34; + \u0026#34;正在取钱!\u0026#34;); try { Thread.sleep(300); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(\u0026#34;取钱完毕!\u0026#34;); } } class ReentrantLockService { private final static Unsafe unsafe = UnsafeAccessor.getUnsafe(); private volatile int value = 0; //内存偏移量地址(相对地址)  private static long valueOffset = 0l; static { try { valueOffset = unsafe.objectFieldOffset(ReentrantLockService.class.getDeclaredField(\u0026#34;value\u0026#34;)); } catch (NoSuchFieldException e) { e.printStackTrace(); } } public void lock() { while (!unsafe.compareAndSwapInt(this, valueOffset, 0, 1)) { System.out.println(\u0026#34;正在加锁过程中...\u0026#34;); } System.out.println(\u0026#34;加锁完成...\u0026#34;); } public void unLock() { value = 0; System.out.println(\u0026#34;解锁完成...\u0026#34;); } } final class UnsafeAccessor { private static Unsafe unsafe; //Unsafe提供的getUnsafe()方法只能被根类加载器加载的类所调用，也就是jdk内部的类。我们可以通过反射来获取Unsafe对象  static { try { //这个名字是 theUnsafe 里面的不要随便写  Field unsafeFile = Unsafe.class.getDeclaredField(\u0026#34;theUnsafe\u0026#34;); unsafeFile.setAccessible(true); //因为是静态属性  unsafe = (Unsafe) unsafeFile.get(null); } catch (Exception e) { } } public static Unsafe getUnsafe() { return unsafe; } }  使用ReentrantLock 代替我写的模拟类  import java.util.concurrent.locks.ReentrantLock; public class ReentrantLockDemo1 { public static void main(String[] args) { ReentrantLock reentrantLockService = new ReentrantLock() ; new Thread(() -\u0026gt; { reentrantLockService.lock(); drawMoney(); reentrantLockService.unlock(); }, \u0026#34;线程1\u0026#34;).start(); new Thread(() -\u0026gt; { reentrantLockService.lock(); drawMoney(); reentrantLockService.unlock(); }, \u0026#34;线程2\u0026#34;).start(); } private static void drawMoney() { System.out.println(Thread.currentThread().getName() + \u0026#34;......\u0026#34; + \u0026#34;正在取钱!\u0026#34;); try { Thread.sleep(300); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(\u0026#34;取钱完毕!\u0026#34;); } }   模拟类虽然简单但是 模拟了关键细节 jdk其实实现并发安全都是用一些能够调用操作系统提供的关键方法来实现的 比如c++也不能实现并发安全 也是调用能够操作操作系统的一些特殊方法来间接实现的\n  本次是 java -\u0026gt; jni -\u0026gt; c++ -\u0026gt; 操作系统提供的api-\u0026gt; 具体指令集\n  使用\r#\r\r  java.util.concurrent.locks.ReentrantLock类\n  在多线程环境下使用，创建锁对象，调用lock()获取锁开始处理逻辑，处理完unlock()释放锁。注意使用的时候lock和unlock必须成对出现，不然可能出现死锁或者严重堵塞的情况\n  unlock\r#\r\r//创建锁对象 ReentrantLock lock = new ReentrantLock(); lock.lock(); //获取锁（锁定） System.out.println(\u0026#34;一段需要上锁的代码\u0026#34;) lock.unlock(); //锁释放  执行完代码后，释放锁，让其他线程去获取，需要注意的是，多个线程使用的锁对象必须是同一个   什么情况需要上锁，就是在多线程不安全的情况下，多个线程操作同一个对象。如多个线程同时操作一个队列，offer()添加对象，两个线程同时offer，因为不是原子操作，很可能一个线程添加成功，另一个线程添加失败，延伸到一些业务中是要杜绝的问题。 可以用锁解决问题，我们可以定义一个队列同一时间只能被一个拿到锁的线程操作，即保证offer这种非原子操作完成后，释放锁，再让其他线程拿到锁后，才能offer，保证有序的offer，不会丢失信息\n 原理\r#\r\r ReentrantLock主要用到unsafe的CAS和park两个功能实现锁（CAS + park ）   多个线程同时操作一个数N，使用原子（CAS）操作，原子操作能保证同一时间只能被一个线程修改，而修改数N成功后，返回true，其他线程修改失败，返回false， 这个原子操作可以定义线程是否拿到锁，返回true代表获取锁，返回false代表为没有拿到锁。 拿到锁的线程，自然是继续执行后续逻辑代码，而没有拿到锁的线程，则调用park，将线程（自己）阻塞。 线程阻塞需要其他线程唤醒，ReentrantLock中用到了链表用于存放等待或者阻塞的线程，每次线程阻塞，先将自己的线程信息放入链表尾部，再阻塞自己；之后需要拿到锁的线程，在调用unlock 释放锁时，从链表中获取阻塞线程，调用unpark 唤醒指定线程\n Unsafe\r#\r\r  sun.misc.Unsafe是关键类，提供大量偏底层的API 包括CAS park\n  sun.misc.Unsafe 此类在openjdk中可以查看\n  CAS 原子操作\r#\r\r compare and swapz(CAS)比较并交换，是原子性操作， 原理：当修改一个(内存中的)变量o的值N的时候，首先有个期望值expected，和一个更新值x，先比较N是否等于expected，等于，那么更新内存中的值为x值，否则不更新。  public final native boolean compareAndSwapInt(Object o, long offset, int expected, int x);  这里offset据了解，是对象的成员变量在内存中的偏移地址，即底层一个对象object存放在内存中，读取的地址是0x2110，此对象的一个成员变量state的值也在内存中，但内存地址肯定不是0x2110  java中的CAS使用\r#\r\r java.util.concurrent.locks.AbstractQueuedSynchronizer 类  private static final Unsafe unsafe = Unsafe.getUnsafe(); private static final long stateOffset; static { try { stateOffset = unsafe.objectFieldOffset (AbstractQueuedSynchronizer.class.getDeclaredField(\u0026#34;state\u0026#34;)); //获取成员变量state在内存中的偏移量  } catch (Exception ex) { throw new Error(ex); } } protected final boolean compareAndSetState(int expect, int update) { // See below for intrinsics setup to support this  return unsafe.compareAndSwapInt(this, stateOffset, expect, update); }  在Java中，compareAndSetState这个操作如果更新成功，返回true,失败返回false，通过这个机制，可以定义锁（乐观锁）。 如三个线程A，B，C，在目标值为0的情况下，同时执行compareAndSetState(0,1) 去修改它期望值是0，更新值是1，因为是原子操作，在第一个线程操作成功之后目标值变为1，返回true 所以另外两个线程就因为期望值为0不等于1，返回false。我们可以理解为，返回true的线程拿到了锁。 最终调用的Java类是sun.misc.Unsafe  park 阻塞\r#\r\r LockSupport中的park和unpark实际上依旧是使用的unsafe中的park和unpark\n  Java中可以通过unsafe.park()去阻塞（停止）一个线程，也可以通过unsafe.unpark()让一个阻塞线程恢复继续执行  unsafe.park()\r#\r\r 阻塞(某种意义上停止)当前线程  public native void park(boolean isAbsolute, long time); unsafe.unpark()\r#\r\r 取消阻塞(唤醒)线程  public native void unpark(Object thread); park与interrupt的区别\r#\r\r interrupt是Thread类的的API，park是Unsafe类的API，两者是有区别的。 测试了解，Thread.currentThread().interrupt(),线程会继续运行，而Unsafe.park(Thread.currentThread())就是直接阻塞线程，不继续运行代码  获取锁\r#\r\r  线程cas操作失败，可以park阻塞自己，让其他拥有锁的线程在unlock的时候释放自己，达到锁的效果\n  java.util.concurrent.locks.ReentrantLock的lock方法是\n  public void lock() { sync.lock(); }  而sync的实现类其中一个是java.util.concurrent.locks.ReentrantLock.NonfairSync 不公平锁，它的逻辑比较直接  /** NonfairSync */ final void lock() { if (compareAndSetState(0, 1))//cas操作，如果true 则表示操作成功，获取锁  setExclusiveOwnerThread(Thread.currentThread()); //设置获取锁拥有者为当前线程  else acquire(1);//获取锁失败，锁住线程(自己) } 获取失败后阻塞线程\r#\r\r 如果获取锁失败，会再尝试一次，失败后，将线程（自己）阻塞  public final void acquire(int arg) { if (!tryAcquire(arg) \u0026amp;\u0026amp; acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) selfInterrupt(); } protected final boolean tryAcquire(int acquires) { return nonfairTryAcquire(acquires); } final boolean nonfairTryAcquire(int acquires) { final Thread current = Thread.currentThread(); int c = getState(); if (c == 0) { //如果期望值为0，内存值也为0，再次尝试获取锁（此时其他线程也可能尝试获取锁）  if (compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); //第二次获取成功，放回true  return true; } } else if (current == getExclusiveOwnerThread()) { int nextc = c + acquires; if (nextc \u0026lt; 0) // overflow  throw new Error(\u0026#34;Maximum lock count exceeded\u0026#34;); setState(nextc); return true; } return false; //没有获取到锁，返回false，则 !tryAcquire(arg) 为true，执行acquireQueued(addWaiter(Node.EXCLUSIVE), arg)  }  获取锁失败，线程会进入循环，acquireQueued 方法中for是个无限循环，除非获取锁成功后，才会return。  //获取锁失败后，准备阻塞线程（自己） //阻塞之前，添加节点存放到链表，其他线程可以通过这个链表唤醒此线程 private Node addWaiter(Node mode) { Node node = new Node(Thread.currentThread(), mode); // Try the fast path of enq; backup to full enq on failure  Node pred = tail; if (pred != null) { node.prev = pred; if (compareAndSetTail(pred, node)) {//cas操作  pred.next = node; return node; } } enq(node); return node; } // 在此方法直到获取锁成功才会跳出循环 final boolean acquireQueued(final Node node, int arg) { boolean failed = true; try { boolean interrupted = false; for (;;) { final Node p = node.predecessor(); if (p == head \u0026amp;\u0026amp; tryAcquire(arg)) { setHead(node); p.next = null; // help GC  failed = false; return interrupted; //获取锁成功之后才会return跳出此方法  } if (shouldParkAfterFailedAcquire(p, node) \u0026amp;\u0026amp; //如果满足阻塞条件  parkAndCheckInterrupt()) interrupted = true; } } finally { if (failed) cancelAcquire(node); } } private final boolean parkAndCheckInterrupt() { LockSupport.park(this);//停止线程（自己）  return Thread.interrupted(); } 释放锁\r#\r\r 一个线程拿到锁之后，执行完关键代码，必须unlock释放锁的，否则其他线程永远拿不到锁  public void unlock() { sync.release(1); } public final boolean release(int arg) { if (tryRelease(arg)) { Node h = head; if (h != null \u0026amp;\u0026amp; h.waitStatus != 0) unparkSuccessor(h); return true; } return false; } //java.util.concurrent.locks.ReentrantLock.Sync 的tryRelease  protected final boolean tryRelease(int releases) { int c = getState() - releases; //这里一般是 1 - 1 = 0  if (Thread.currentThread() != getExclusiveOwnerThread()) //只能是锁的拥有者释放锁  throw new IllegalMonitorStateException(); boolean free = false; if (c == 0) { free = true; setExclusiveOwnerThread(null); } setState(c); //设置state为0，相当于释放锁，让其他线程compareAndSetState(0, 1)可能成功 	return free; } protected final void setState(int newState) { state = newState; //没有cas操作  }  setState不做cas操作是因为，只有拥有锁的线程才调用unlock，不存才并发混乱问题 其他线程没拿到锁不会设值成功，其他线程在此线程设置state为0之前，compareAndSetState(0, 1)都会失败，拿不到锁，此线程设置state为0之后，其他线程compareAndSetState(0, 1)才有可能成功，返回true从而拿到锁  释放线程\r#\r\r 线程在获取锁失败后，有可能阻塞线程（自己），在阻塞之前把阻塞线程信息放入链表的 释放锁之后，线程会尝试通过链表释放其他线程（一个），让一个阻塞线程恢复运行  private void unparkSuccessor(Node node) { int ws = node.waitStatus; if (ws \u0026lt; 0) compareAndSetWaitStatus(node, ws, 0); Node s = node.next; if (s == null || s.waitStatus \u0026gt; 0) { s = null; for (Node t = tail; t != null \u0026amp;\u0026amp; t != node; t = t.prev) // 循环获取前面的节点  if (t.waitStatus \u0026lt;= 0) s = t; //循环，找到链表最前面需要被唤醒的线程  } if (s != null) LockSupport.unpark(s.thread); //唤醒（释放）被阻塞的线程  } 阻塞线程被取消阻塞后如何拿到锁(ReentrantLock中)\r#\r\r 有时候线程被中断后，唤醒继续执行后面的代码， 线程没有拿到锁之后主动阻塞自己的，但所还没拿到，被唤醒之后怎么去尝试重新获取锁呢？ 里面有一个for循环  final void lock() { if (compareAndSetState(0, 1)) setExclusiveOwnerThread(Thread.currentThread());//拿到锁  else acquire(1); //没有拿到锁  } // 上锁失败，会添加一个节点，节点包含线程信息，将此节点放入队列 public final void acquire(int arg) { if (!tryAcquire(arg) \u0026amp;\u0026amp; acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) selfInterrupt(); } // 存好节点后，将线程（自己）中断，等其他线程唤醒（自己） final boolean acquireQueued(final Node node, int arg) { boolean failed = true; try { boolean interrupted = false; for (;;) {//循环 被唤醒后线程还是在此处循环  final Node p = node.predecessor(); if (p == head \u0026amp;\u0026amp; tryAcquire(arg)) {//尝试获取锁  setHead(node); p.next = null; // help GC  failed = false; return interrupted; //如果拿到锁了，才会return  } if (shouldParkAfterFailedAcquire(p, node) \u0026amp;\u0026amp; parkAndCheckInterrupt()) //没拿到锁时，主动中断Thread.currentThread()  interrupted = true; } } finally { if (failed) cancelAcquire(node); } }   被唤醒后继续执行compareAndSetState(0, 1)返回false没拿到锁，则继续循环或阻塞\n  compareAndSetState(0, 1) 这个操作是获取锁的关键\n  "}),a.add({id:185,href:'/life/docs/javadir/thread/tool/future_callable/',title:"Future 和 callable",section:"并发工具 ",content:"Future\r#\r\rcallable\r#\r\r"}),a.add({id:186,href:'/life/docs/%E8%84%9A%E6%9C%AC/webpack/',title:"webpack ",section:"脚本",content:"（十五）webpack\r#\r\r15.1	webpack起步\r#\r\r15.1.1	什么是webpack\r#\r\rwebpack是一个JavaScript应用的静态模块打包工具。\n从这句话中有两个要点，模块和打包需要关注。grunt/gulp都可以打包，那有什么区别。\n 模块化\n webpack可以支持前端模块化的一些方案，例如AMD、CMD、CommonJS、ES6。可以处理模块之间的依赖关系。不仅仅是js文件可以模块化，图片、css、json文件等等都可以模块化。\n 打包\n webpack可以将模块资源打包成一个或者多个包，并且在打包过程中可以处理资源，例如压缩图片，将scss转成css，ES6语法转成ES5语法，将TypeScript转成JavaScript等等操作。grunt/gulp也可以打包。\n和grunt/glup的对比\n grunt/glup的核心是Task  我们可以配置一系列的task，并且定义task要处理的事务（例如ES6/TS转化，图片压缩，scss转css） 之后可以让grunt/glup来执行依次这些任务，让整个流程自动化 所以grunt/glup也被称为前端自动化任务管理工具   看一个gulp例子  task将src下的js文件转化为ES5语法 并输入到dist文件夹中    const gulp = require('gulp')\rconst babel = require('gulp-babel')\rgulp.task('js'()=\rgulp.src('src/*.js')\r.pipe(babel({\rpresets:['es2015']\r}))\r.pipe(gulp.dest('dist'))\r);\r\r 什么时候使用grunt/gulp呢？  如果工程依赖简单，甚至没有模块化 只需要进行简单的合并/压缩 如果模块复杂，相互依赖性强，我们需要使用webpack   grunt/glup和webpack区别  grunt/glup更加强调的是前端自动化流程，模块化不是其核心 webpack加强模块化开发管理，而文件压缩/合并/预处理等功能，是附带功能    webpack就是前端模块化打包工具\n15.1.2	webpack的安装\r#\r\r webpack依赖node环境。 node环境依赖众多包，所以需要npm，npm（node packages manager）node包管理工具 nvm是node管理工具可以自由切换node环境版本  全局安装webpack\nnpm install webpack -g //指定版本安装 npm install webpack@3.6.0 -g  由于vue-cli2基于webpack3.6.0 如果要用vue-cli2的可以使用npm install webpack@3.6.0 -g\n 局部安装\nnpm install webpack --save-dev   在终端执行webpack命令，使用的是全局安装。\n  当在package.json中定义了scripts时，其中包括了webpack命令，那么使用的是局部webpack\n  15.1.3 起步\r#\r\r新建一个文件夹，新建如下结构的目录：\n目录结构\n如图所示在src文件夹（源码文件夹），dist（要发布的文件，已经处理过的）。\n1.新建入口js文件main.js和mathUtils.js，main.js依赖mathUtils.js。\n mathUtils\n //1.新建mathUtils.js，用CommonJs规范导出 function add(num1,num2) { return num1+num2 } function mul(num1,num2) { return num1*num2 } module.exports = { add,mul }  main.js\n //2.新建入口js文件main.js 导入mathUtil.js文件，并调用 const {add,mul} = require(\u0026#34;./mathUtils.js\u0026#34;) console.log(add(10,20)) console.log(mul(10,10)) 2.使用webpack命令打包js文件\n 注意：webpack3使用webpack ./src/main.js ./dist/bundle.js\nwebpack4，webpack打包在01-webpack的起步目录下打开终端 webpack ./scr/main.js -o ./dist/bundle.js\n 我全局安装的是webpack@3.6.0，所以在根路径执行\n如图显示打包成功，查看dist文件夹下自动生成了一个bundle.js。\n bundle.js\n //2.新建入口js文件main.js 导入mathUtil.js文件，并调用 const {add,mul} = __webpack_require__(1) console.log(add(10,20)) console.log(mul(10,10)) /***/ }), /* 1 */ /***/ (function(module, exports) { //1.新建mathUtils.js，用CommonJs规范导出 function add(num1,num2) { return num1+num2 } function mul(num1,num2) { return num1*num2 } module.exports = { add,mul } 内容很多，其中包含mathUtils.js和main.js 内容，打包成功。\n3.新建一个index.html文件，导入bundle.js\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;ie=edge\u0026#34;\u0026gt; \u0026lt;title\u0026gt;webpack入门\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;!-- 3.新建一个indexhtml文件并使用 webpack ./src/main.js ./dist/bundle.js webpack3使用此命令 --\u0026gt; \u0026lt;!-- 4.引用webpack打包后的js文件 --\u0026gt; \u0026lt;script src=\u0026#34;./dist/bundle.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 如图测试，打印成功。\n4.新建一个info.js使用ES6的语法导出\n info.js\n //es6语法导出 export default { name:\u0026#39;zzz\u0026#39;, age:24, }  main.js导入info.js\n //使用es6语法导入 import info from \u0026#39;./info.js\u0026#39; console.log(info.name) console.log(info.age)  再次使用webpack ./src/main.js ./dist/bundle.js，重新打包\n 5.打开index.html测试\n 总结\n webpack可以帮我们打包js文件，只要指定入口文件（main.js）和输出的文件（bundle.js），不管是es6的模块化还是CommonJs的模块化，webpack都可以帮我们打包，还可以帮我们处理模块之间的依赖。\n15.2	webpack的配置\r#\r\r15.2.1	基本配置\r#\r\r如果每次都用webpack命令自己写入口文件和出口文件会很麻烦，此时我们可以使用webpack的配置。\n 准备工作：复制01-webpack的起步文件夹并粘贴在同级目录，改名为02-webpack的配置。\n 1.在根目录（02-webpack的配置）下新建一个webpack.config.js\n webpack.config.js\n //1.导入node的path包获取绝对路径，需要使用npm init初始化node包 const path = require(\u0026#39;path\u0026#39;) //2.配置webpack的入口和出口 module.exports = { entry: \u0026#39;./src/main.js\u0026#39;,//入口文件  output:{ path: path.resolve(__dirname, \u0026#39;dist\u0026#39;),//动态获取打包后的文件路径,path.resolve拼接路径  filename: \u0026#39;bundle.js\u0026#39;//打包后的文件名  } } 2.在02-webpack的配置根目录执行npm init初始化node包，因为配置文件中用到了node的path包\nnpm init 初始化\n3.使用webpack打包\nwebkpack 这样入口和出口的配置已经配置完成了，只需要使用webpack命令就行了。\n4.使用自定义脚本（script）启动\n一般来是我们使用的是\nnpm run dev//开发环境 npm run build//生产环境 在package.json中的script中加上\n\u0026#34;build\u0026#34;: \u0026#34;webpack\u0026#34; 使用npm run build\nnpm run build 15.2.2	全局安装和局部安装\r#\r\rwebpack有全局安装和局部安装。\n 局部安装\n 使用npm run build执行webpack会先从本地查找是否有webpack，如果没有会使用全局的。\n此时本地需要安装webapck\nnpm install webpack@3.6.0 --save-dev package.json中自动加上开发时的依赖devDependencies\n再次使用npm run build，使用的是本地webpack版本。\n15.3	webpack的loader\r#\r\r15.3.1	什么是loader\r#\r\rloader是webpack中一个非常核心的概念。\nwebpack可以将js、图片、css处理打包，但是对于webpack本身是不能处理css、图片、ES6转ES5等。\n此时就需要webpack的扩展，使用对应的loader就可以。\nloader使用\n 步骤一：通过npm安装需要使用的loader\n  步骤二：通过webpack.config.js中的modules关键字下进行配置\n 大部分loader可以在webpack的官网找到对应的配置。\n15.3.2	CSS文件处理\r#\r\r 准备工作：复制02-webpack的配置到根目录，改名字为03-webpack的loader\n 1.将除了入口文件（main.js）所有js文件放在js文件夹，新建一个css文件夹，新建一个normal.css文件\n normal.css\n body{ background-color: red; } 2.main.js导入依赖\n//4.依赖css文件 require(\u0026#39;./css/normal.css\u0026#39;) 此时如果直接进行打包npm run build。\n 提示信息很清楚，打包到css文件时报错，提示我们可能需要一个loader来处理css文件。\n 3.安装css-loader\nnpm install --save-dev css-loader 4.使用css-loader\nmodule.exports = { module: { rules: [ { test: /\\.css$/,//正则表达式匹配css文件  //css-loader只负责css文件加载，不负责解析，要解析需要使用style-loader  use: [{ loader: \u0026#39;css-loader\u0026#39; }]//使用loader  } ] } }  执行npm run build，提示打包成功，但是背景色并没有变红色，是因为css-loader只负责加载css文件，不负责解析，如果要将样式解析到dom元素中需要使用style-loader。\n 5.安装使用style-loader\nnpm install --save-dev style-loader module: { rules: [ { test: /\\.css$/,//正则表达式匹配css文件  //css-loader只负责css文件加载，不负责解析，要解析需要使用style-loader  use: [{ loader: \u0026#39;style-loader\u0026#39; }, { loader: \u0026#39;css-loader\u0026#39; }]//使用loader  } ] }  webpack使用多个loader是从右往左解析的，所以需要将css-loader放在style-loader右边，先加载后解析。\n 此时样式成加载解析到DOM元素上。\n15.3.3	less文件处理\r#\r\r1.在css文件夹中新增一个less文件\n special.less\n @fontSize:50px;//定义变量字体大小\r@fontColor:orange;//定义变量字体颜色\rbody{\rfont-size: @fontSize;\rcolor: @fontColor;\r}\r2.main.js中导入less文件模块\n//5.依赖less文件 require(\u0026#39;./css/special.less\u0026#39;) //6.向页面写入一些内容 document.writeln(\u0026#34;hello,zzzz!\u0026#34;) 3.安装使用less-loader\nnpm install --save-dev less-loader less 在webpack.config.js中使用less-loader\nmodule: { rules: [ { test: /\\.less$/,//正则表达式匹配css文件  //css-loader只负责css文件加载，不负责解析，要解析需要使用style-loader  use: [{ loader: \u0026#39;style-loader\u0026#39; }, { loader: \u0026#39;css-loader\u0026#39; }, { loader: \u0026#39;less-loader\u0026#39;//less文件loader  }]//使用loader  } ] } 4.执行npm run build\nless文件生效了，字体是orange，大小为50px。\n15.3.4	图片文件的处理\r#\r\r 准备工作，准备两张图片，图片大小为一张8KB以下（实际大小为5KB，名称为small.jpg），一张大于8KB（实际大小为10KB，名称为big.jpg），新建一个img文件夹将两张图片放入。\n 1.修改normal.css样式，先使用小图片作为背景\nbody{\r/* background-color: red; */\rbackground: url(\u0026quot;../img/small.jpg\u0026quot;);\r}\r此时如果直接使用npm run build 直接打包会报错，因为css文件中引用了图片url，此时需要使用url-loader。\n2.安装使用url-loader处理图片\nurl-loader像 file loader 一样工作，但如果文件小于限制，可以返回 data URL 。\nnpm install --save-dev url-loader 配置\n{ test: /\\.(png|jpg|gif)$/,//匹配png/jpg/gif格式图片  use: [ { loader: \u0026#39;url-loader\u0026#39;, options: { limit: 8192//图片小于8KB时候将图片转成base64字符串，大于8KB需要使用file-loader  } } ] } 3.打包\n使用npm run build打包后，打开index.html。\n 小于limit大小的图片地址被编译成base64格式的字符串。\n 此时修改css文件，使用big.jpg做背景。\nbody{ /* background-color: red; */ /* background: url(\u0026#34;../img/small.jpg\u0026#34;); */ background: url(\u0026#34;../img/big.jpg\u0026#34;); } 再次打包，报错，提示未找到file-loader模块。\n 因为大于limit的图片需要file-loader来打包。\n 4.安装使用file-loader处理图片\nnpm install --save-dev file-loader 不需要配置，因为url-loader超过limit的图片会直接使用file-loader。\n再次打包，没有报错，打包成功，但是图片未显示。\n 1.当加载的图片大小小于limit，使用base64将图片编译成字符串\n2.当加载的图片大小大于limit，使用file-loader模块直接将big.jpg直接打包到dist文件家，文件名会使用hash值防止重复。\n3.此时由于文件路径不对所以导致没有加载到图片\n 5.如何使用file-loader，指定路径\n修改output属性\noutput:{ path: path.resolve(__dirname, \u0026#39;dist\u0026#39;),//动态获取打包后的文件路径,path.resolve拼接路径  filename: \u0026#39;bundle.js\u0026#39;,//打包后的文件名  publicPath: \u0026#39;dist/\u0026#39; }, 此时打包，图片正常显示\n 注意：一般来说，index.html最终也会打包到dist文件夹下，所以，并不需要配置publicPath，如何打包index.html请看webpack处理.vue文件。\n  file-loader打包后，使用hash值做文件名太长，此时可以使用options的一些配置。\n options: { limit: 8192,//图片小于8KB时候将图片转成base64字符串，大于8KB需要使用file-loader  name: \u0026#39;img/[name].[hash:8].[ext]\u0026#39;//img表示文件父目录，[name]表示文件名,[hash:8]表示将hash截取8位[ext]表示后缀  }  修改options，加上name属性，其中img表示文件父目录，[name]表示文件名,[hash:8]表示将hash截取8位[ext]表示后缀\n 再次打包\n15.3.5	ES6语法处理\r#\r\rwebpack打包时候ES6语法没有打包成ES5语法，如果需要将ES6打包成ES5语法，那么就需要使用babel。直接使用babel对应的loader就可以了。\n安装\nnpm install --save-dev babel-loader@7 babel-core babel-preset-es2015 配置\n{ test: /\\.js$/, //排除node模块的js和bower的js  exclude: /(node_modules|bower_components)/, use: { loader: \u0026#39;babel-loader\u0026#39;, options: { //如果要使用@babel/preset-env这里需要在根目录新建一个babel的文件  // presets: [\u0026#39;@babel/preset-env\u0026#39;]  //这里直接使用指定  presets: [\u0026#39;es2015\u0026#39;] } } }  1.如果要使用@babel/preset-env这里需要在根目录新建一个babel的文件\n2.exclude排除不需要打包的文件\n 15.4	webpack的vue\r#\r\r15.4.1	简单安装使用vue\r#\r\r如果需要使用vue，必须使用npm先安装vue。\nnpm install vue --save	使用vue简单开发。\n 准备工作\n 复制03-webpack的loader到同级目录，改名为04-webpack的vue，并在04-webpack的vue根目录执行npm install vue --save	，下载安装vue。\n1.在入口文件main.js导入已安装的vue，并在index.html声明要挂载的div。在main.js加入以下代码。\n//6.使用vue开发 import Vue from \u0026#39;vue\u0026#39; const app = new Vue({ el: \u0026#34;#app\u0026#34;, data: { message: \u0026#34;hello webpack and vue\u0026#34; } }) 修改index.html代码，添加\n\u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;{{message}}\u0026lt;/h2\u0026gt; \u0026lt;/div\u0026gt; 2.再次打包npm run build后打开index.html\n发现message并没有正确显示，打开console发现vue报错。错误提示我们，正在使用runtime-only构建，不能将template模板编译。\n 1.runtime-only模式，代码中不可以有任何template，因为无法解析。\n2.runtime-complier模式，代码中可以有template，因为complier可以用于编译template。\n 在webpack中配置，设置指定使用runtime-complier模式。\n webpack.config.js\n resolve: { // alias:别名  alias: { //指定vue使用vue.esm.js  \u0026#39;vue$\u0026#39;:\u0026#39;vue/dist/vue.esm.js\u0026#39; } } 3.重新打包，显示正确\n15.4.2	如何分步抽取实现vue模块\r#\r\r 创建vue的template和el关系\nel表示挂载DOM的挂载点\ntemplate里面的html将替换挂载点\n 一般我们使用vue会开发单页面富应用(single page application)，只有一个index.html，而且index.html都是简单结构。\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;ie=edge\u0026#34;\u0026gt; \u0026lt;title\u0026gt;webpack入门\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;./dist/bundle.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 1.第一次抽取，使用template替换\u0026lt;div id=\u0026quot;app\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;。\n 修改mian.js的vue相关代码\n //6.使用vue开发 import Vue from \u0026#39;vue\u0026#39; new Vue({ el: \u0026#34;#app\u0026#34;, template:` \u0026lt;div\u0026gt; \u0026lt;h2\u0026gt;{{message}}\u0026lt;/h2\u0026gt; \u0026lt;button @click=\u0026#39;btnClick\u0026#39;\u0026gt;这是一个按钮\u0026lt;/button\u0026gt; \u0026lt;h2\u0026gt;{{name}}\u0026lt;/h2\u0026gt; \u0026lt;/div\u0026gt; `, data: { message: \u0026#34;hello webpack and vue\u0026#34;, name: \u0026#39;zzzz\u0026#39; }, methods: { btnClick(){ console.log(\u0026#34;按钮被点击了\u0026#34;) } }, }) 使用template模板替换挂载的id为app的div元素，此时不需要修改html代码了，只需要写template。\n再次打包，显示成功。\n2.第二次抽取，使用组件化思想替换template\n考虑第一次抽取，写在template中，main.js的vue代码太冗余。\n 修改main.js的代码\n //1.定义一个组件 const App = { template: ` \u0026lt;div\u0026gt; \u0026lt;h2\u0026gt;{{message}}\u0026lt;/h2\u0026gt; \u0026lt;button @click=\u0026#39;btnClick\u0026#39;\u0026gt;这是一个按钮\u0026lt;/button\u0026gt; \u0026lt;h2\u0026gt;{{name}}\u0026lt;/h2\u0026gt; \u0026lt;/div\u0026gt; `, data() { return { message: \u0026#34;hello webpack and vue\u0026#34;, name: \u0026#39;zzzz\u0026#39; } }, methods: { btnClick(){ console.log(\u0026#34;按钮被点击了\u0026#34;) } }, }  修改main.js，vue实例中注册组件，并使用组件\n new Vue({ el: \u0026#34;#app\u0026#34;, //使用组件  template: \u0026#39;\u0026lt;App/\u0026gt;\u0026#39;, components: { //注册局部组件  App } }) 再次使用npm run build打包，打包成功，显示和使用template替换div一样。\n3.第三次抽取组件对象，封装到新的js文件，并使用模块化导入main.js\n此处我的vue-loader是15.7.2。\n将其修改为13.0.0\n\u0026#34;vue-loader\u0026#34;: \u0026#34;^13.0.0\u0026#34; 重新安装版本\nnpm install 再次打包，打包成功，样式生效了。\n6.组件化开发\n我们使用app.vue分离了模板、行为、样式，但是不可能所有的模板和样式都在一个vue文件内，所以要用组件化。\n在vue文件夹下新建一个Cpn.vue文件\n Cpn.vue组件\n \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h2 class=\u0026#39;title\u0026#39;\u0026gt;{{name}}\u0026lt;/h2\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script type=\u0026#34;text/ecmascript-6\u0026#34;\u0026gt; export default { name: \u0026#34;Cpn\u0026#34;, data() { return { name: \u0026#34;组件名字是Cpn\u0026#34; }; } }; \u0026lt;/script\u0026gt; \u0026lt;style scoped\u0026gt; .title { color: red; } \u0026lt;/style\u0026gt; 将Cpn.vue组件导入到App.vue\n\u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h2 class=\u0026#39;title\u0026#39;\u0026gt;{{message}}\u0026lt;/h2\u0026gt; \u0026lt;button @click=\u0026#34;btnClick\u0026#34;\u0026gt;按钮\u0026lt;/button\u0026gt; \u0026lt;h2\u0026gt;{{name}}\u0026lt;/h2\u0026gt; \u0026lt;!-- 使用Cpn组件 --\u0026gt; \u0026lt;Cpn/\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script type=\u0026#34;text/ecmascript-6\u0026#34;\u0026gt; //导入Cpn组件 import Cpn from \u0026#39;./Cpn.vue\u0026#39; export default { name: \u0026#34;App\u0026#34;, data() { return { message: \u0026#34;hello webpack\u0026#34;, name: \u0026#34;zzz\u0026#34; }; }, methods: { btnclick() {} }, components: { Cpn//注册Cpn组件  } }; \u0026lt;/script\u0026gt; \u0026lt;style scoped\u0026gt; .title { color: green; } \u0026lt;/style\u0026gt; 再次打包，打开index.html，cpn组件的内容显示\n基于此，一个vue文件可以依赖导入很多vue文件，组成一个单页面富应用。\n 如果你在使用ES6语法导入模块时候想要简写的时候，例如这样省略.vue后缀\n import Cpn from \u0026#39;./Cpn\u0026#39; 可以在webpack.config.js中配置：\nresolve: { //导入模块简写省略指定后缀  extensions: [\u0026#39;.js\u0026#39;, \u0026#39;.css\u0026#39;, \u0026#39;.vue\u0026#39;], // alias:别名  alias: { //指定vue使用vue.esm.js  \u0026#39;vue$\u0026#39;:\u0026#39;vue/dist/vue.esm.js\u0026#39; } } 15.5	webpack的plugin\r#\r\rplugin插件用于扩展webpack的功能的扩展，例如打包时候优化，文件压缩。\nloader和plugin的区别\nloader主要用于转化某些类型的模块，是一个转化器。\nplugin主要是对webpack的本身的扩展，是一个扩展器。\nplugin的使用过程\n步骤一：通过npm安装需要使用的plugins(某些webpack已经内置的插件不需要在安装)\n步骤二：在webpack.config.js中的plugins中配置插件。\n 准备工作\n复制04-webpack的vue到同级目录，并改名为05-webpack的plugin\n 15.5.1	添加版权的Plugin\r#\r\rBannerPlugin插件是属于webpack自带的插件可以添加版权信息。\n自带的插件无需安装，直接配置。\n先获取webpack的对象，在配置BannerPlugin插件。\n//获取webpack const webpack = require(\u0026#39;webpack\u0026#39;) //2.配置plugins module.exports = { ... plugins:[ new webpack.BannerPlugin(\u0026#39;最终解释权归zz所有\u0026#39;) ] } 打包后，查看bundle.js，结果如图所示：\n多了一行我们自定义的版权声明注释。\n15.5.2	打包html的plugin\r#\r\r之前我们的index.html文件都是存放在根目录下的。\n在正式发布项目的时候发布的是dist文件夹的内容，但是dist文件夹是没有index.html文件的，那么打包就没有意义了。\n所以我们需要将index.html也打包到dist文件夹中，这就需要使用**HtmlWebpackPlugin**插件了。\n HtmlWebpackPlugin：\n自动生成一个index.html文件（指定模板）\n将打包的js文件，自动同script标签插入到body中\n 首先需要安装**HtmlWebpackPlugin**插件\nnpm install html-webpack-plugin --save-dev	使用插件，修改webpack.config.js文件中的plugins部分\n//获取htmlWebpackPlugin对象 const htmlWbepackPlugin = require(\u0026#39;html-webpack-plugin\u0026#39;) //2.配置plugins module.exports = { ... plugins:[ new webpack.BannerPlugin(\u0026#39;最终解释权归zz所有\u0026#39;), new htmlWbepackPlugin({ template: \u0026#39;index.html\u0026#39; }) ] }  1.template表示根据哪个模板来生成index.html\n2.需要删除output中添加的publicPath属性，否则插入的script标签的src可能有误\n 再次打包，打开dist文件夹，多了一个index.html\n自动加入了script引入了bundle.js。\n15.5.3	压缩打包代码插件\r#\r\ruglifyjs-webpack-plugin是第三方插件，如果是vuecli2需要指定版本1.1.1。\n安装：\nnpm install uglifyjs-webpack-plugin@1.1.1 --save-dev 配置plugin\n//获取uglifyjs-webpack-plugin对象 const uglifyjsWebpackPlugin = require(\u0026#39;uglifyjs-webpack-plugin\u0026#39;) //2.配置plugins module.exports = { ... plugins:[ new webpack.BannerPlugin(\u0026#39;最终解释权归zz所有\u0026#39;), new htmlWbepackPlugin({ template: \u0026#39;index.html\u0026#39; }), new uglifyjsWebpackPlugin() ] } 打包过后，打开bundle.js，发现已经压缩了，此时版权声明被删除了。\n webpack高版本自带了压缩插件。\n 15.6	webpack搭建本地服务器\r#\r\rwebpack提供了一个可选的本地开发服务器，这个本地服务器基于node.js搭建，内部使用了express框架，可以实现热启动。\n 准备工作复制05-webpack的plugin文件夹到同级目录，并改名为06-webpack搭建本地服务器。\n 不过这是一个单独的模块，在webpack中使用之前需要先安装：\nnpm install --save-dev webpack-dev-server@2.9.1 devServe也是webpack中一个选项，选项本省可以设置一些属性：\n contentBase：为哪个文件夹提供本地服务，默认是根文件夹，这里我们需要改成./dist port：端口号 inline：页面实时刷新 historyApiFallback：在SPA（单页面富应用）页面中，依赖HTML5的history模式  修改webpack.config.js的文件配置\n//2.配置webpack的入口和出口 module.exports = { ... devServer: { contentBase: \u0026#39;./dist\u0026#39;,//服务的文件夹  port: 4000, inline: true//是否实时刷新  } } 配置package.json的script：\n\u0026#34;dev\u0026#34;: \u0026#34;webpack-dev-server --open\u0026#34;  \u0026ndash;open表示直接打开浏览器\n 启动服务器\nnpm run dev 启动成功，自动打开浏览器，发现在本地指定端口启动了，此时你修改src文件内容，会热修改。\n 1.服务器启动在内存中。\n2.开发调试时候最好不要使用压缩js文件的插件，不易调试。\n 15.7	webpack的配置文件分离\r#\r\rwebpack.config.js文件中有些是开发时候需要配置，有些事生产环境发布编译需要的配置，比如搭建本地服务器的devServer配置就是开发时配置，接下来我们分析如何分离配置文件。\n 准备工作：复制06-webpack搭建本地服务器文件夹到同级目录，并改名为07-webpack的配置文件分离。\n 在根目录下新建一个build的文件夹，新建配置文件。\n base.config.js（公共的配置）\n //1.导入node的path包获取绝对路径，需要使用npm init初始化node包 const path = require(\u0026#39;path\u0026#39;) //获取webpack const webpack = require(\u0026#39;webpack\u0026#39;) //获取htmlWebpackPlugin对象 const htmlWbepackPlugin = require(\u0026#39;html-webpack-plugin\u0026#39;) //2.配置webpack的入口和出口 module.exports = { entry: \u0026#39;./src/main.js\u0026#39;,//入口文件  output:{ path: path.resolve(__dirname, \u0026#39;dist\u0026#39;),//动态获取打包后的文件路径,path.resolve拼接路径  filename: \u0026#39;bundle.js\u0026#39;,//打包后的文件名  // publicPath: \u0026#39;dist/\u0026#39;  }, module: { rules: [ { test: /\\.css$/,//正则表达式匹配css文件  //css-loader只负责css文件加载，不负责解析，要解析需要使用style-loader  use: [{ loader: \u0026#39;style-loader\u0026#39; }, { loader: \u0026#39;css-loader\u0026#39; }]//使用loader  }, { test: /\\.less$/,//正则表达式匹配css文件  //css-loader只负责css文件加载，不负责解析，要解析需要使用style-loader  use: [{ loader: \u0026#39;style-loader\u0026#39; }, { loader: \u0026#39;css-loader\u0026#39; }, { loader: \u0026#39;less-loader\u0026#39;//less文件loader  }]//使用loader  }, { test: /\\.(png|jpg|gif)$/,//匹配png/jpg/gif格式图片  use: [ { loader: \u0026#39;url-loader\u0026#39;, options: { limit: 8192,//图片小于8KB时候将图片转成base64字符串，大于8KB需要使用file-loader  name: \u0026#39;img/[name].[hash:8].[ext]\u0026#39;//img表示文件父目录，[name]表示文件名,[hash:8]表示将hash截取8位[ext]表示后缀  } } ] }, { test: /\\.js$/, //排除node模块的js和bower的js  exclude: /(node_modules|bower_components)/, use: { loader: \u0026#39;babel-loader\u0026#39;, options: { //如果要使用@babel/preset-env这里需要在根目录新建一个babel的文件  // presets: [\u0026#39;@babel/preset-env\u0026#39;]  //这里直接使用指定  presets: [\u0026#39;es2015\u0026#39;] } } }, { test: /\\.vue$/,//正则匹配.vue文件  use: { loader: \u0026#39;vue-loader\u0026#39; } } ] }, resolve: { // alias:别名  alias: { //指定vue使用vue.esm.js  \u0026#39;vue$\u0026#39;:\u0026#39;vue/dist/vue.esm.js\u0026#39; } }, plugins:[ new webpack.BannerPlugin(\u0026#39;最终解释权归zz所有\u0026#39;), new htmlWbepackPlugin({ template: \u0026#39;index.html\u0026#39; }) ] }  dev.config.js（开发时候需要的配置）\n module.exports = { devServer: { contentBase: \u0026#39;./dist\u0026#39;,//服务的文件夹  port: 4000, inline: true//是否实时刷新  } }  prod.config.js（构建发布时候需要的配置）\n const uglifyjsWebpackPlugin = require(\u0026#39;uglifyjs-webpack-plugin\u0026#39;) module.exports = { plugins:[ new uglifyjsWebpackPlugin() ] } 此时我们将webpack.config.js文件分成了三个部分，公共部分、开发部分、构建发布的部分。\n 1.如果此时是dev环境，我们只需要使用base.config.js+dev.config.js的内容\n2.如果此时是生产发布构建的环境，我们只需要使用base.config.js+prod.config.js的内容\n 要将两个文件内容合并需要使用webpack-merge插件，安装webpack-merge。\nnpm isntall webpack-merge --save-dev 合并内容都是将base.config.js的内容合并到dev或者prod的文件中，修改dev.config.js和prod.config.js文件。\n 修改dev.config.js\n //导入webpack-merge对象 const webpackMerge = require(\u0026#39;webpack-merge\u0026#39;) //导入base.config.js const baseConfig = require(\u0026#39;./base.config\u0026#39;) //使用webpackMerge将baseConfig和dev.config的内容合并 module.exports = webpackMerge(baseConfig, { devServer: { contentBase: \u0026#39;./dist\u0026#39;,//服务的文件夹  port: 4000, inline: true//是否实时刷新  } })  修改prod.config.js\n const uglifyjsWebpackPlugin = require(\u0026#39;uglifyjs-webpack-plugin\u0026#39;) //导入webpack-merge对象 const webpackMerge = require(\u0026#39;webpack-merge\u0026#39;) //导入base.config.js const baseConfig = require(\u0026#39;./base.config\u0026#39;) //使用webpackMerge将baseConfig和prod.config的内容合并 module.exports = webpackMerge(baseConfig, { plugins:[ new uglifyjsWebpackPlugin() ] }) 此时我们使用三个文件构成了配置文件，此时在不同环境使用不同的配置文件，但是webpack不知道我们新配置文件，此时我们需要在package.json中的script指定要使用的配置文件。\n\u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;webpack --config ./build/prod.config.js\u0026#34;, \u0026#34;dev\u0026#34;: \u0026#34;webpack-dev-server --open --config ./build/dev.config.js\u0026#34; } 此时使用npm run build打包文件，dist文件并不在根目录下，因为我们在base.config.js中配置的出口文件使用的是当前文件的路径，即打包的根路径是配置文件的当前路径，也就是build文件夹。\nentry: \u0026#39;./src/main.js\u0026#39;,//入口文件  output:{ path: path.resolve(__dirname, \u0026#39;dist\u0026#39;),//动态获取打包后的文件路径,path.resolve拼接路径  filename: \u0026#39;bundle.js\u0026#39;,//打包后的文件名  // publicPath: \u0026#39;dist/\u0026#39;  }  注意：__dirname是当前文件路径，path.resolve拼接路径，所以在当前路径下创建了一个dist文件夹。\n 此时修改output属性：\noutput:{ path: path.resolve(__dirname, \u0026#39;../dist\u0026#39;),//动态获取打包后的文件路径,path.resolve拼接路径  filename: \u0026#39;bundle.js\u0026#39;,//打包后的文件名  // publicPath: \u0026#39;dist/\u0026#39;  }  使用../dist，在当前目录的上级目录创建dist文件夹\n "}),a.add({id:187,href:'/life/docs/%E8%84%9A%E6%9C%AC/simple-webpack/',title:"webpack simple",section:"脚本",content:"webpack\r#\r\r一:卸载\r#\r\r 全局卸载  D:\\IdeaProjects\\cycle\\docs\\webc\\web\\webpack-study\\one\u0026gt;npm uninstall webpack webpack-cli -g removed 73 packages in 0.726s  本地卸载  D:\\IdeaProjects\\cycle\\docs\\webc\\web\\webpack-study\\one\u0026gt;npm uninstall webpack webpack-cli -D npm WARN saveError ENOENT: no such file or directory, open \u0026#39;D:\\IdeaProjects\\package.json\u0026#39; npm WARN enoent ENOENT: no such file or directory, open \u0026#39;D:\\IdeaProjects\\package.json\u0026#39; npm WARN IdeaProjects No description npm WARN IdeaProjects No repository field. npm WARN IdeaProjects No README data npm WARN IdeaProjects No license field. up to date in 0.791s 16 packages are looking for funding run `npm fund` for details D:\\IdeaProjects\\cycle\\docs\\webc\\web\\webpack-study\\one\u0026gt; 二:安装\r#\r\r 1:webpack依赖node环境。 2:node环境依赖众多包，所以需要npm，npm（node packages manager）node包管理工具 3:nvm是node管理工具可以自由切换node环境版本   在终端执行webpack命令，使用的是全局安装(在某个地方看到)\n  1: 全局安装webpack simple (低版本)  npm install webpack -g //指定版本安装 npm install webpack@3.6.0 -g  2: 全局安装webpack (高版本)  npm install webpack webpack-cli -g //或指定版本，类似这样： npm install webpack@4.16.5 webpack-cli -g  3:本地安装 ?  npm install webpack webpack-cli --save-dev //或者 npm install webpack webpack-cli -D //或者指定版本 npm install webpack@4.16.5 webpack-cli -D 三:使用\r#\r\r  1:简单使用\n  1、初始化\n  D:\\IdeaProjects\\cycle\\docs\\webc\\web\\webpack-study\\one\u0026gt;npm init This utility will walk you through creating a package.json file. It only covers the most common items, and tries to guess sensible defaults. See `npm help init` for definitive documentation on these fields and exactly what they do. Use `npm install \u0026lt;pkg\u0026gt;` afterwards to install a package and save it as a dependency in the package.json file. Press ^C at any time to quit. package name: (one) version: (1.0.0) description: entry point: (index.js) test command: git repository: keywords: author: license: (ISC) About to write to D:\\IdeaProjects\\cycle\\docs\\webc\\web\\webpack-study\\one\\package.json: { \u0026#34;name\u0026#34;: \u0026#34;one\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;index.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34; }, \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34; } Is this OK? (yes) yes D:\\IdeaProjects\\cycle\\docs\\webc\\web\\webpack-study\\one\u0026gt; 包初始化之后 就会生成package.json dependencies和devDependencies的区别\r#\r\r devDependencies：开发环境使用 dependencies：生产环境使用   举例说明\n webpack，gulp等打包工具，这些都是我们开发阶段使用的，代码提交线上时，不需要这些工具，所以我们将它放入devDependencies即可，但是像jquery这类插件库，是我们生产环境所使用的，所以如要放入dependencies，如果未将jquery安装到dependencies，那么项目就可能报错，无法运行，所以类似这种项目必须依赖的插件库，我们则必须打入dependencies中，这下子都明白了吧。 简单版本 (webpack使用高版本5.42.0)\r#\r\r 生成必要的文件  Microsoft Windows [版本 10.0.19043.1052] (c) Microsoft Corporation。保留所有权利。 D:\\IdeaProjects\\cycle\\study\\webpack\u0026gt;mkdir demo01 创建文件夹 D:\\IdeaProjects\\cycle\\study\\webpack\u0026gt;cd demo01 进入文件夹 D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\u0026gt;npm install -g webpack webpack-cli 安装全局webpack D:\\CS\\node\\node-v14.17.2-win-x64\\webpack -\u0026gt; D:\\CS\\node\\node-v14.17.2-win-x64\\node_modules\\webpack\\bin\\webpack.js D:\\CS\\node\\node-v14.17.2-win-x64\\webpack-cli -\u0026gt; D:\\CS\\node\\node-v14.17.2-win-x64\\node_modules\\webpack-cli\\bin\\cli.js + webpack@5.42.0 + webpack-cli@4.7.2 updated 2 packages in 4.11s D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\u0026gt;echo index.js windows错误创建文件 必须 echo \u0026gt; file.suffix index.js D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\u0026gt;echo \u0026gt; index.js windows正确创建方法 D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\u0026gt;webpack index.js webpack打包编译(实际上这是低版本至少是低于4.0.0的目前我安装的是非常高的版本) assets by status 0 bytes [cached] 1 asset WARNING in configuration The \u0026#39;mode\u0026#39; option has not been set, webpack will fallback to \u0026#39;production\u0026#39; for this value. Set \u0026#39;mode\u0026#39; option to \u0026#39;development\u0026#39; or \u0026#39;production\u0026#39; to enable defaults for each environment. You can also set it to \u0026#39;none\u0026#39; to disable any default behavior. Learn more: https://webpack.js.org/configuration/mode/ ERROR in main Module not found: Error: Can\u0026#39;t resolve \u0026#39;index.js\u0026#39; in \u0026#39;D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\u0026#39; Did you mean \u0026#39;./index.js\u0026#39;? Requests that should resolve in the current directory need to start with \u0026#39;./\u0026#39;. Requests that start with a name are treated as module requests and resolve within module directories (node_modules). If changing the source code is not an option there is also a resolve options called \u0026#39;preferRelative\u0026#39; which tries to resolve these kind of requests in the current directory too. resolve \u0026#39;index.js\u0026#39; in \u0026#39;D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\u0026#39; Parsed request is a module No description file found in D:\\IdeaProjects\\cycle\\study\\webpack\\demo01 or above resolve as module D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\\node_modules doesn\u0026#39;t exist or is not a directory D:\\IdeaProjects\\cycle\\study\\webpack\\node_modules doesn\u0026#39;t exist or is not a directory D:\\IdeaProjects\\cycle\\study\\node_modules doesn\u0026#39;t exist or is not a directory D:\\IdeaProjects\\cycle\\node_modules doesn\u0026#39;t exist or is not a directory D:\\IdeaProjects\\node_modules doesn\u0026#39;t exist or is not a directory D:\\node_modules doesn\u0026#39;t exist or is not a directory webpack 5.42.0 compiled with 1 error and 1 warning in 147 ms   高版本采用低版本显然的报错了\n  找解决办法 网上找到解决方案是必须要配置开发模式还是生产模式,要求指定\n  生成 package.json 并设置相应内容 这里 package.json 不要手动设置 直接node js 的包初始化命令即可生成 npm init\n  D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\u0026gt;npm init This utility will walk you through creating a package.json file. It only covers the most common items, and tries to guess sensible defaults. See `npm help init` for definitive documentation on these fields and exactly what they do. Use `npm install \u0026lt;pkg\u0026gt;` afterwards to install a package and save it as a dependency in the package.json file. Press ^C at any time to quit. package name: (demo01) version: (1.0.0) description: entry point: (index.js) test command: git repository: keywords: author: license: (ISC) About to write to D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\\package.json: { \u0026#34;name\u0026#34;: \u0026#34;demo01\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;index.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34; }, \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34; } Is this OK? (yes) // end 设置内容 { \u0026#34;name\u0026#34;: \u0026#34;demo01\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;main.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34; , \u0026#34;dev\u0026#34;: \u0026#34;webpack --mode development\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;webpack --mode production\u0026#34; }, \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34; }  完毕再次执行 webpack index.js 不要意思又报错了  D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\u0026gt;webpack index.js [Browserslist] Could not parse D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\\package.json. Ignoring it. [webpack-cli] SyntaxError: Unexpected token / in JSON at position 204 while determining default \u0026#39;output.uniqueName\u0026#39; from \u0026#39;name\u0026#39; in D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\\package.json at JSON.parse (\u0026lt;anonymous\u0026gt;) at D:\\CS\\node\\node-v14.17.2-win-x64\\node_modules\\webpack\\lib\\config\\defaults.js:599:29 at F (D:\\CS\\node\\node-v14.17.2-win-x64\\node_modules\\webpack\\lib\\config\\defaults.js:71:15) at applyOutputDefaults (D:\\CS\\node\\node-v14.17.2-win-x64\\node_modules\\webpack\\lib\\config\\defaults.js:594:2) at applyWebpackOptionsDefaults (D:\\CS\\node\\node-v14.17.2-win-x64\\node_modules\\webpack\\lib\\config\\defaults.js:182:2) at createCompiler (D:\\CS\\node\\node-v14.17.2-win-x64\\node_modules\\webpack\\lib\\webpack.js:78:2) at create (D:\\CS\\node\\node-v14.17.2-win-x64\\node_modules\\webpack\\lib\\webpack.js:127:16) at webpack (D:\\CS\\node\\node-v14.17.2-win-x64\\node_modules\\webpack\\lib\\webpack.js:135:47) at WebpackCLI.f [as webpack] (D:\\CS\\node\\node-v14.17.2-win-x64\\node_modules\\webpack\\lib\\index.js:55:16) at WebpackCLI.createCompiler (D:\\CS\\node\\node-v14.17.2-win-x64\\node_modules\\webpack-cli\\lib\\webpack-cli.js:2053:29)   实际上是高版本的情况下是必须要配置webpack.config.js\n  因此我们来配置webpack.config.js\n  D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\u0026gt;echo \u0026gt; webpack.config.js webconfig.js 内容 const path = require(\u0026#39;path\u0026#39;) module.exports = { entry: \u0026#39;./main.js\u0026#39;, output: { path: path.resolve(__dirname, \u0026#39;dist\u0026#39;), filename: \u0026#39;my-first-webpack.bundle.js\u0026#39; }, mode: \u0026#39;development\u0026#39; // 设置mode }  执行打包编译 这里需要注意的是高版本不允许 webpack index.js 的方式了 直接是webpack 执行后自动找此命令下的配置然后输出编译文件  D:\\IdeaProjects\\cycle\\study\\webpack\\demo01\u0026gt;webpack asset my-first-webpack.bundle.js 1.19 KiB [emitted] (name: main) ./main.js 40 bytes [built] [code generated] webpack 5.42.0 compiled successfully in 69 ms  Java生成目录结构  @Test public void printFileDir() { String path = \u0026#34;D:\\\\IdeaProjects\\\\cycle\\\\study\\\\webpack\\\\demo01\u0026#34;; // String path = \u0026#34;D:\\\\IdeaProjects\\\\lifeDoc\\\\book\\\\public\u0026#34;; File file = new File(path); print(file, 0, file.getParent()); } private void print(File file, int index, final String parent) { StringBuilder stringBuilder = new StringBuilder(); String str = \u0026#34;▸\u0026#34;; if (file.isFile()) { stringBuilder.append(str).append(StringUtils.repeat(\u0026#34; \u0026#34;, index)).append(StringUtils.remove(file.getPath(), parent)); System.out.println(stringBuilder.toString()); } else { stringBuilder.append(str).append(StringUtils.repeat(\u0026#34; \u0026#34;, index)).append(StringUtils.remove(file.getPath(),parent)); System.out.println(stringBuilder.toString()); for (File f : file.listFiles()) { int newIndex = index + 2; print(f, newIndex, parent); } } }  文件结构  ▸\\demo01 ▸ \\demo01\\dist ▸ \\demo01\\dist\\my-first-webpack.bundle.js ▸ \\demo01\\index.js ▸ \\demo01\\package.json ▸ \\demo01\\webpack.config.js 简单版本局部情况 (webpack使用高版本5.42.0)\r#\r\r 生成必要的文件   npm init -y 初始化的时候不会提示输入yes\n Microsoft Windows [版本 10.0.19043.1052] D:\\IdeaProjects\\cycle\\study\\webpack\u0026gt;mkdir demo02 D:\\IdeaProjects\\cycle\\study\\webpack\u0026gt;cd demo02 D:\\IdeaProjects\\cycle\\study\\webpack\\demo02\u0026gt;echo document.writeln(\u0026#39;hello blake\u0026#39;) \u0026gt; index.js D:\\IdeaProjects\\cycle\\study\\webpack\\demo02\u0026gt;npm init -y Wrote to D:\\IdeaProjects\\cycle\\study\\webpack\\demo02\\package.json: { \u0026#34;name\u0026#34;: \u0026#34;demo02\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;index.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34; } D:\\IdeaProjects\\cycle\\study\\webpack\\demo02\u0026gt;echo \u0026gt; webpack.config.js  局部安装说明   局部安装必须在package.json中 scripts \u0026gt; \u0026ldquo;build\u0026rdquo;: \u0026ldquo;webpack\u0026rdquo;\n  命令 npm add -D webpack webpack-cli  D:\\IdeaProjects\\cycle\\study\\webpack\\demo02\u0026gt;npm -D webpack webpack-cli Usage: npm \u0026lt;command\u0026gt; where \u0026lt;command\u0026gt; is one of: access, adduser, audit, bin, bugs, c, cache, ci, cit, clean-install, clean-install-test, completion, config, create, ddp, dedupe, deprecate, dist-tag, docs, doctor, edit, explore, fund, get, help, help-search, hook, i, init, install, install-ci-test, install-test, it, link, list, ln, login, logout, ls, org, outdated, owner, pack, ping, prefix, profile, prune, publish, rb, rebuild, repo, restart, root, run, run-script, s, se, search, set, shrinkwrap, star, stars, start, stop, t, team, test, token, tst, un, uninstall, unpublish, unstar, up, update, v, version, view, whoami npm \u0026lt;command\u0026gt; -h quick help on \u0026lt;command\u0026gt; npm -l display full usage info npm help \u0026lt;term\u0026gt; search for help on \u0026lt;term\u0026gt; npm help npm involved overview Specify configs in the ini-formatted file: C:\\Users\\dell\\.npmrc or on the command line via: npm \u0026lt;command\u0026gt; --key value Config info can be viewed via: npm help config npm@6.14.13 D:\\CS\\node\\node-v14.17.2-win-x64\\node_modules\\npm Did you mean this? pack D:\\IdeaProjects\\cycle\\study\\webpack\\demo02\u0026gt;npm add -D webpack webpack-cli npm notice created a lockfile as package-lock.json. You should commit this file. npm WARN demo02@1.0.0 No description npm WARN demo02@1.0.0 No repository field. + webpack-cli@4.7.2 + webpack@5.42.0 added 121 packages from 155 contributors in 7.307s 16 packages are looking for funding run `npm fund` for details  编译打包  D:\\IdeaProjects\\cycle\\study\\webpack\\demo02\u0026gt;webpack asset bundle.js 1.19 KiB [emitted] (name: main) ./index.js 34 bytes [built] [code generated] webpack 5.42.0 compiled successfully in 69 ms D:\\IdeaProjects\\cycle\\study\\webpack\\demo02\u0026gt;  文件目录  [TestNG] Running: C:\\Users\\dell\\.IntelliJIdea2018.3\\system\\temp-testng-customsuite.xml ▸\\demo02 ▸ \\demo02\\dist ▸ \\demo02\\dist\\bundle.js ▸ \\demo02\\index.html ▸ \\demo02\\index.js ▸ \\demo02\\node_modules ▸ \\demo02\\node_modules\\.bin ▸ \\demo02\\node_modules\\.bin\\acorn ▸ \\demo02\\node_modules\\.bin\\acorn.cmd ▸ \\demo02\\node_modules\\.bin\\acorn.ps1 ▸ \\demo02\\node_modules\\.bin\\browserslist ▸ \\demo02\\node_modules\\.bin\\browserslist.cmd ▸ \\demo02\\node_modules\\.bin\\browserslist.ps1 ▸ \\demo02\\node_modules\\.bin\\envinfo ▸ \\demo02\\node_modules\\.bin\\envinfo.cmd ▸ \\demo02\\node_modules\\.bin\\envinfo.ps1 ▸ \\demo02\\node_modules\\.bin\\  ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ 目录太多我删掉了差不多就是这样 ▸ \\demo02\\node_modules\\yocto-queue\\index.d.ts ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ ▸ \\demo02\\node_modules\\yocto-queue\\index.d.ts ▸ \\demo02\\node_modules\\yocto-queue\\index.js ▸ \\demo02\\node_modules\\yocto-queue\\license ▸ \\demo02\\node_modules\\yocto-queue\\package.json ▸ \\demo02\\node_modules\\yocto-queue\\readme.md ▸ \\demo02\\package-lock.json ▸ \\demo02\\package.json ▸ \\demo02\\webpack.config.js =============================================== Default Suite Total tests run: 1, Failures: 0, Skips: 0 =============================================== Process finished with exit code 0 自定义版本(局部) (webpack使用高版本5.42.0)\r#\r\r 生成必要的文件  Microsoft Windows [版本 10.0.19043.1052] (c) Microsoft Corporation。保留所有权利。 D:\\IdeaProjects\\cycle\\study\\webpack\u0026gt;mkdir demo03 D:\\IdeaProjects\\cycle\\study\\webpack\u0026gt;cd demo03 D:\\IdeaProjects\\cycle\\study\\webpack\\demo03\u0026gt;npm init -y Wrote to D:\\IdeaProjects\\cycle\\study\\webpack\\demo03\\package.json: { \u0026#34;name\u0026#34;: \u0026#34;demo03\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;index.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34; } D:\\IdeaProjects\\cycle\\study\\webpack\\demo03\u0026gt;echo \u0026gt; index.html D:\\IdeaProjects\\cycle\\study\\webpack\\demo03\u0026gt;echo \u0026gt; main.js D:\\IdeaProjects\\cycle\\study\\webpack\\demo03\u0026gt;echo webpack.config.js webpack.config.js D:\\IdeaProjects\\cycle\\study\\webpack\\demo03\u0026gt;echo \u0026gt; webpack.config.js   安装之前查询版本webpack和webpack-cli版本不一致的否则会报错\n  版本查询 webpack版本地址 webpack-cli版本地址\n  安装命令 npm add -D webpack@5.32.0 webpack-cli@4.0.0-alpha-5\n  D:\\IdeaProjects\\cycle\\study\\webpack\\demo03\u0026gt;npm add -D webpack@5.32.0 webpack-cli@5.32.0 npm ERR! code ETARGET npm ERR! notarget No matching version found for webpack-cli@5.32.0. npm ERR! notarget In most cases you or one of your dependencies are requesting npm ERR! notarget a package version that doesn\u0026#39;t exist. npm ERR! A complete log of this run can be found in: npm ERR! C:\\Users\\dell\\AppData\\Roaming\\npm-cache\\_logs\\2021-07-04T04_40_27_844Z-debug.log D:\\IdeaProjects\\cycle\\study\\webpack\\demo03\u0026gt;npm add -D webpack@5.32.0 webpack-cli@4.0.0-alpha-5 \u0026gt; ejs@2.7.4 postinstall D:\\IdeaProjects\\cycle\\study\\webpack\\demo03\\node_modules\\ejs \u0026gt; node ./postinstall.js Thank you for installing EJS: built with the Jake JavaScript build tool (https://jakejs.com/) npm notice created a lockfile as package-lock.json. You should commit this file. npm WARN webpack-cli@4.0.0-alpha-5 requires a peer of webpack@4.x.x but none is installed. You must install peer dependencies yourself. npm WARN demo03@1.0.0 No description npm WARN demo03@1.0.0 No repository field. + webpack@5.32.0 + webpack-cli@4.0.0-alpha-5 added 365 packages from 245 contributors in 23.014s 19 packages are looking for funding run `npm fund` for details  安装完成之后到package.json 中查看 devDependencies 即可查询到版本  { \u0026#34;name\u0026#34;: \u0026#34;demo03\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;index.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;webpack\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;, \u0026#34;devDependencies\u0026#34;: { \u0026#34;webpack\u0026#34;: \u0026#34;^5.32.0\u0026#34;, \u0026#34;webpack-cli\u0026#34;: \u0026#34;^4.0.0-alpha-5\u0026#34; } }  打包编译  D:\\IdeaProjects\\cycle\\study\\webpack\\demo03\u0026gt;webpack asset bundle.js 1.2 KiB [emitted] (name: main) ./main.js 44 bytes [built] [code generated] webpack 5.42.0 compiled successfully in 72 ms D:\\IdeaProjects\\cycle\\study\\webpack\\demo03\u0026gt;  文件目录  ▸\\demo03 ▸ \\demo03\\dist ▸ \\demo03\\dist\\bundle.js ▸ \\demo03\\index.html ▸ \\demo03\\main.js ▸ \\demo03\\node_modules ▸ \\demo03\\node_modules\\.bin ▸ \\demo03\\node_modules\\.bin\\acorn ▸ \\demo03\\node_modules\\.bin\\acorn.cmd ▸ \\demo03\\node_modules\\.bin\\acorn.ps1 ▸ \\demo03\\node_modules\\.bin\\browserslist ▸ \\demo03\\node_modules\\.bin\\browserslist.cmd ▸ \\demo03\\node_modules\\.bin\\browserslist.ps1 ▸ \\demo03\\node_modules\\.bin\\errno ▸ \\demo03\\node_modules\\.bin\\errno.cmd ▸ \\demo03\\node_modules\\.bin\\errno.ps1 ▸ \\demo03\\node_modules\\.bin\\is-ci ..................省略node model dir index ▸ \\demo03\\node_modules\\yocto-queue ▸ \\demo03\\node_modules\\yocto-queue\\index.d.ts ▸ \\demo03\\node_modules\\yocto-queue\\index.js ▸ \\demo03\\node_modules\\yocto-queue\\license ▸ \\demo03\\node_modules\\yocto-queue\\package.json ▸ \\demo03\\node_modules\\yocto-queue\\readme.md ▸ \\demo03\\package-lock.json ▸ \\demo03\\package.json ▸ \\demo03\\webpack.config.js 使用html插件\r#\r\r 生成必要的文件  Microsoft Windows [版本 10.0.19043.1052] (c) Microsoft Corporation。保留所有权利。 D:\\IdeaProjects\\cycle\u0026gt;cd study D:\\IdeaProjects\\cycle\\study\u0026gt;mkdir demo04 D:\\IdeaProjects\\cycle\\study\\webpack\u0026gt;cd demo04 D:\\IdeaProjects\\cycle\\study\\webpack\\demo04\u0026gt;npm init -y Wrote to D:\\IdeaProjects\\cycle\\study\\webpack\\demo04\\package.json: { \u0026#34;name\u0026#34;: \u0026#34;demo04\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;index.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34; } D:\\IdeaProjects\\cycle\\study\\webpack\\demo04\u0026gt;echo \u0026gt; webpack.config.js D:\\IdeaProjects\\cycle\\study\\webpack\\demo04\u0026gt;md src D:\\IdeaProjects\\cycle\\study\\webpack\\demo04\u0026gt;cd src D:\\IdeaProjects\\cycle\\study\\webpack\\demo04\\src\u0026gt;echo \u0026gt; index.js D:\\IdeaProjects\\cycle\\study\\webpack\\demo04\\src\u0026gt;cd D:\\IdeaProjects\\cycle\\study\\webpack\\demo04   找到html-webpack-load\n  html-webpack-plugin\n  HtmlWebpackPlugin\n  如果您有多个webpack入口点，它们都将包含在生成的HTML中的\u0026lt;script\u0026gt;标记中\n  插件命令\n  npm install --save-dev html-webpack-plugin\r局部 npm install -D --save-dev html-webpack-plugin\r 配置  const HtmlWebpackPlugin = require(\u0026#39;html-webpack-plugin\u0026#39;); const path = require(\u0026#39;path\u0026#39;); module.exports = { entry: \u0026#39;index.js\u0026#39;, output: { path: path.resolve(__dirname, \u0026#39;./dist\u0026#39;), filename: \u0026#39;index_bundle.js\u0026#39;, }, plugins: [new HtmlWebpackPlugin()], };  生成包含以下内容的文件dist/index.html  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;webpack App\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script src=\u0026#34;index_bundle.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  安装命令  D:\\IdeaProjects\\cycle\\study\\webpack\\demo04\u0026gt;npm add -D webpack webpack-cli npm notice created a lockfile as package-lock.json. You should commit this file. npm WARN demo04@1.0.0 No description npm WARN demo04@1.0.0 No repository field. + webpack-cli@4.7.2 + webpack@5.42.0 added 121 packages from 155 contributors in 13.022s 16 packages are looking for funding run `npm fund` for details D:\\IdeaProjects\\cycle\\study\\webpack\\demo04\u0026gt;npm install -D --save-dev html-webpack-plugin npm WARN demo04@1.0.0 No description npm WARN demo04@1.0.0 No repository field. + html-webpack-plugin@5.3.2 added 19 packages from 8 contributors in 4.707s 27 packages are looking for funding run `npm fund` for details  webpack.config.js 配置  const path = require(\u0026#39;path\u0026#39;); const HtmlWebpackPlugin = require(\u0026#39;html-webpack-plugin\u0026#39;); module.exports = { entry: \u0026#34;./src/index.js\u0026#34;, output: { path: path.resolve(__dirname, \u0026#39;dist\u0026#39;), filename: \u0026#39;bundle2.js\u0026#39; }, plugins: [ new HtmlWebpackPlugin({}), ], mode: \u0026#39;development\u0026#39; // 设置mode }  打包编译 npm run build(实际相当于执行了webpack命令)  D:\\IdeaProjects\\cycle\\study\\webpack\\demo04\u0026gt;npm run build \u0026gt; demo04@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo04 \u0026gt; webpack asset bundle2.js 1.4 KiB [compared for emit] (name: main) asset index.html 234 bytes [compared for emit] ./src/index.js 207 bytes [built] [code generated] webpack 5.42.0 compiled successfully in 122 ms  文件目录  ▸\\demo04 ▸ \\demo04\\dist ▸ \\demo04\\dist\\bundle2.js ▸ \\demo04\\dist\\index.html ▸ \\demo04\\node_modules ▸ \\demo04\\node_modules\\.bin ▸ \\demo04\\node_modules\\.bin\\acorn ▸ \\demo04\\node_modules\\.bin\\acorn.cmd ▸ \\demo04\\node_modules\\.bin\\acorn.ps1 ▸ \\demo04\\node_modules\\.bin\\browserslist ▸ \\demo04\\node_modules\\yocto-queue ||省略 ▸ \\demo04\\node_modules\\yocto-queue\\index.d.ts ▸ \\demo04\\node_modules\\yocto-queue\\index.js ▸ \\demo04\\node_modules\\yocto-queue\\license ▸ \\demo04\\node_modules\\yocto-queue\\package.json ▸ \\demo04\\node_modules\\yocto-queue\\readme.md ▸ \\demo04\\package-lock.json ▸ \\demo04\\package.json ▸ \\demo04\\src ▸ \\demo04\\src\\index.js ▸ \\demo04\\webpack.config.js 多入口\r#\r\r 生成必要的文件  Microsoft Windows [版本 10.0.19043.1052] (c) Microsoft Corporation。保留所有权利。 D:\\IdeaProjects\\cycle\u0026gt;cd study D:\\IdeaProjects\\cycle\\study\u0026gt;cd webpack D:\\IdeaProjects\\cycle\\study\\webpack\u0026gt;mkdir demo05 D:\\IdeaProjects\\cycle\\study\\webpack\u0026gt;cd demo05 D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\u0026gt;mkdir src D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\u0026gt;cd src D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\\src\u0026gt;echo -\u0026gt; main.js D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\\src\u0026gt;echo -\u0026gt; home.js D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\\src\u0026gt;echo -\u0026gt; register.js D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\\src\u0026gt;cd .. D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\u0026gt;echo \u0026#39;\u0026#39; \u0026gt; webpack.config.js D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\u0026gt;npm init -y Wrote to D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\\package.json: { \u0026#34;name\u0026#34;: \u0026#34;demo05\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;webpack.config.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34; } D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\u0026gt; npm add -D webpack webpack-cli npm notice created a lockfile as package-lock.json. You should commit this file. npm WARN demo05@1.0.0 No description npm WARN demo05@1.0.0 No repository field. + webpack-cli@4.7.2 + webpack@5.42.1 added 121 packages from 155 contributors in 9.549s 16 packages are looking for funding run `npm fund` for details  webpack.config.js 配置  const path = require(\u0026#39;path\u0026#39;); module.exports = { entry: { home : \u0026#34;./src/home.js\u0026#34; , main : \u0026#34;./src/main.js\u0026#34; , register : \u0026#34;./src/register.js\u0026#34; , }, output :{ path: path.resolve(__dirname, \u0026#39;dist\u0026#39;), }, mode: \u0026#39;development\u0026#39; // 设置mode } ;  package.json 配置  { \u0026#34;name\u0026#34;: \u0026#34;demo05\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;webpack.config.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;, \u0026#34;dev\u0026#34;: \u0026#34;webpack --mode development\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;webpack --mode production\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;, \u0026#34;devDependencies\u0026#34;: { \u0026#34;webpack\u0026#34;: \u0026#34;^5.42.1\u0026#34;, \u0026#34;webpack-cli\u0026#34;: \u0026#34;^4.7.2\u0026#34; } }  执行以及校验js (这里使用nodejs直接在命令行执行js)  D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\u0026gt;npm run build \u0026gt; demo05@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo05 \u0026gt; webpack --mode production asset register.js 54 bytes [emitted] [minimized] (name: register) asset home.js 50 bytes [emitted] [minimized] (name: home) asset main.js 50 bytes [emitted] [minimized] (name: main) ./src/home.js 50 bytes [built] [code generated] ./src/main.js 50 bytes [built] [code generated] ./src/register.js 54 bytes [built] [code generated] webpack 5.42.1 compiled successfully in 207 ms D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\u0026gt;node dist/main.js main 15 D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\u0026gt;node dist/home.js home 20 D:\\IdeaProjects\\cycle\\study\\webpack\\demo05\u0026gt;node dist/register.js register 63  附 main.js内容  console.log(\u0026#34;main\u0026#34;,Math.round(Math.random()*100));  文件目录  ▸\\demo05\r▸ \\demo05\\dist\r▸ \\demo05\\dist\\home.js\r▸ \\demo05\\dist\\main.js\r▸ \\demo05\\dist\\register.js\r▸ \\demo05\\node_modules\r▸ \\demo05\\node_modules\\.bin\r▸ \\demo05\\node_modules\\.bin\\acorn\r▸ \\demo05\\node_modules\\.bin\\acorn.cmd\r▸ \\demo05\\node_modules\\.bin\\acorn.ps1\r▸ \\demo05\\node_modules\\.bin\\browserslist\r▸ \\demo05\\node_modules\\.bin\\browserslist.cmd\r||省略\r▸ \\demo05\\node_modules\\wildcard\\README.md\r▸ \\demo05\\node_modules\\wildcard\\test\r▸ \\demo05\\node_modules\\wildcard\\test\\all.js\r▸ \\demo05\\node_modules\\wildcard\\test\\arrays.js\r▸ \\demo05\\node_modules\\wildcard\\test\\objects.js\r▸ \\demo05\\node_modules\\wildcard\\test\\strings.js\r▸ \\demo05\\node_modules\\wildcard\\yarn.lock\r▸ \\demo05\\node_modules\\yocto-queue\r▸ \\demo05\\node_modules\\yocto-queue\\index.d.ts\r▸ \\demo05\\node_modules\\yocto-queue\\index.js\r▸ \\demo05\\node_modules\\yocto-queue\\license\r▸ \\demo05\\node_modules\\yocto-queue\\package.json\r▸ \\demo05\\node_modules\\yocto-queue\\readme.md\r▸ \\demo05\\package-lock.json\r▸ \\demo05\\package.json\r▸ \\demo05\\src\r▸ \\demo05\\src\\home.js\r▸ \\demo05\\src\\main.js\r▸ \\demo05\\src\\register.js\r▸ \\demo05\\webpack.config.js\r多出口\r#\r\r 生成必要的文件  Microsoft Windows [版本 10.0.19043.1052] (c) Microsoft Corporation。保留所有权利。 D:\\IdeaProjects\\cycle\\study\\webpack\u0026gt;mkdir demo06 D:\\IdeaProjects\\cycle\\study\\webpack\u0026gt;cd demo06 D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;mkdir src D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;cd src D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\\src\u0026gt;echo console.log(\u0026#39;index\u0026#39;); \u0026gt; index.js D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\\src\u0026gt;echo console.log(\u0026#39;main\u0026#39;); \u0026gt; main.js D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\\src\u0026gt;cd .. D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;cd \u0026gt; webpack.config.js D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;npm init -y Wrote to D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\\package.json: { \u0026#34;name\u0026#34;: \u0026#34;demo06\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;webpack.config.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34; }  安装  D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;npm add -D webpack webpack-cli npm notice created a lockfile as package-lock.json. You should commit this file. npm WARN demo06@1.0.0 No description npm WARN demo06@1.0.0 No repository field. + webpack@5.42.1 + webpack-cli@4.7.2 added 121 packages from 155 contributors in 10.332s 16 packages are looking for funding run `npm fund` for details 报错了 执行npm install时出现npm notice created a lockfile as package-lock.json. You should commit this file 在package.json中增加private字段； 将项目声明为私有项目：\u0026#34;private\u0026#34;: true, 再重新运行，notice就没有了  增加如下  { \u0026#34;name\u0026#34;: \u0026#34;demo06\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;webpack.config.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;webpack\u0026#34; }, \u0026#34;private\u0026#34;: true, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34; }  重新安装  D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;npm add -D webpack webpack-cli + webpack@5.42.1 + webpack-cli@4.7.2 updated 2 packages in 4.494s 1 package is looking for funding run `npm fund` for details  关于 webpack.config.js 配置   我是从下面一次注释运行的\n const path = require(\u0026#34;path\u0026#34;) ; module.exports = { entry :{ index :\u0026#34;./src/index.js\u0026#34; , //这样写 可以不要output  main :\u0026#34;./src/main.js\u0026#34; , }, mode :\u0026#34;development\u0026#34; , output :{ // path:path.join(__dirname,\u0026#34;release\u0026#34;)  // path:path.join(__dirname,\u0026#34;output1\u0026#34;),  path:path.join(__dirname,\u0026#34;output\u0026#34;), // filename:\u0026#34;[name].js\u0026#34;//如index.js  // filename:\u0026#34;[name]_.js\u0026#34; //如index_.js  // filename:\u0026#34;[name]_[hash].js\u0026#34; //如 index_42e300f860ec901c7866.js  filename:\u0026#34;[name]_[hash:4].js\u0026#34; //如 index_42e3.js  } }  执行命令  D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;npm run build \u0026gt; demo06@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo06 \u0026gt; webpack asset index.js 1.2 KiB [emitted] (name: index) asset main.js 1.2 KiB [emitted] (name: main) ./src/index.js 24 bytes [built] [code generated] ./src/main.js 23 bytes [built] [code generated] webpack 5.42.1 compiled successfully in 75 ms D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;node src/index.js index D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;node src/main.js main D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;npm run build \u0026gt; demo06@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo06 \u0026gt; webpack asset index.js 1.2 KiB [emitted] (name: index) asset main.js 1.2 KiB [emitted] (name: main) ./src/index.js 24 bytes [built] [code generated] ./src/main.js 23 bytes [built] [code generated] webpack 5.42.1 compiled successfully in 77 ms D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;npm run build \u0026gt; demo06@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo06 \u0026gt; webpack asset index.js 1.2 KiB [emitted] (name: index) asset main.js 1.2 KiB [emitted] (name: main) ./src/index.js 24 bytes [built] [code generated] ./src/main.js 23 bytes [built] [code generated] webpack 5.42.1 compiled successfully in 77 ms D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;npm run build \u0026gt; demo06@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo06 \u0026gt; webpack asset index_.js 1.2 KiB [emitted] (name: index) asset main_.js 1.2 KiB [emitted] (name: main) ./src/index.js 24 bytes [built] [code generated] ./src/main.js 23 bytes [built] [code generated] webpack 5.42.1 compiled successfully in 80 ms D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;npm run build \u0026gt; demo06@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo06 \u0026gt; webpack (node:8048) [DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_HASH] DeprecationWarning: [hash] is now [fullhash] (also consider using [chunkhash] or [contenthash], see documenta tion for details) (Use `node --trace-deprecation ...` to show where the warning was created) asset index_42e300f860ec901c7866.js 1.2 KiB [emitted] [immutable] (name: index) asset main_42e300f860ec901c7866.js 1.2 KiB [emitted] [immutable] (name: main) ./src/index.js 24 bytes [built] [code generated] ./src/main.js 23 bytes [built] [code generated] webpack 5.42.1 compiled successfully in 81 ms D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;npm run build \u0026gt; demo06@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo06 \u0026gt; webpack (node:15188) [DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_HASH] DeprecationWarning: [hash] is now [fullhash] (also consider using [chunkhash] or [contenthash], see document ation for details) (Use `node --trace-deprecation ...` to show where the warning was created) asset index_42e3.js 1.2 KiB [emitted] [immutable] (name: index) asset main_42e3.js 1.2 KiB [emitted] [immutable] (name: main) ./src/index.js 24 bytes [built] [code generated] ./src/main.js 23 bytes [built] [code generated] webpack 5.42.1 compiled successfully in 76 ms D:\\IdeaProjects\\cycle\\study\\webpack\\demo06\u0026gt;  文件结构  ▸\\demo06 ▸ \\demo06\\dist ▸ \\demo06\\dist\\index.js ▸ \\demo06\\dist\\main.js ▸ \\demo06\\node_modules ▸ \\demo06\\node_modules\\yocto-queue //省略 ▸ \\demo06\\node_modules\\yocto-queue\\index.d.ts ▸ \\demo06\\node_modules\\yocto-queue\\index.js ▸ \\demo06\\node_modules\\yocto-queue\\license ▸ \\demo06\\node_modules\\yocto-queue\\package.json ▸ \\demo06\\node_modules\\yocto-queue\\readme.md ▸ \\demo06\\output ▸ \\demo06\\output\\index_42e3.js ▸ \\demo06\\output\\index_42e300f860ec901c7866.js ▸ \\demo06\\output\\main_42e3.js ▸ \\demo06\\output\\main_42e300f860ec901c7866.js ▸ \\demo06\\output1 ▸ \\demo06\\output1\\index.js ▸ \\demo06\\output1\\index_.js ▸ \\demo06\\output1\\main.js ▸ \\demo06\\output1\\main_.js ▸ \\demo06\\package-lock.json ▸ \\demo06\\package.json ▸ \\demo06\\readme.md ▸ \\demo06\\release ▸ \\demo06\\release\\index.js ▸ \\demo06\\release\\main.js ▸ \\demo06\\src ▸ \\demo06\\src\\index.js ▸ \\demo06\\src\\main.js ▸ \\demo06\\webpack.config.js "}),a.add({id:188,href:'/life/docs/javadir/groovy/groovy%E4%B8%AD%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%AF%94%E8%BE%83%E4%BB%A5%E5%8F%8A%E9%9D%9E%E7%A9%BA%E5%88%A4%E6%96%AD/',title:" groovy对象比较以及空判断 ",section:"groovy 学习与使用 ",content:"groovy 对象比较以及空判断\r#\r\r 目前测试得知 groovy的比较貌似很多直接可以使用==来比较\n groovy对象的比较\r#\r\r1.字符串比较\r#\r\rdef str1 = \u0026quot;Hello World1\u0026quot;\rif (\u0026quot;Hello World\u0026quot; == str1) {\rprintln \u0026quot;Hello World\u0026quot;\r} else {\rprintln \u0026quot;不匹配\u0026quot;\r}\r2.map集合的比较（list集合也可以这样比较）\r#\r\r	def m1=[\u0026quot;name\u0026quot;:\u0026quot;李明\u0026quot;,\u0026quot;age\u0026quot;:20]\rdef m2=[\u0026quot;name\u0026quot;:\u0026quot;李明\u0026quot;,\u0026quot;age\u0026quot;:21]\rdef m3=[\u0026quot;name\u0026quot;:\u0026quot;李明\u0026quot;,\u0026quot;age\u0026quot;:21]\rif(m1==m2){\rprintln \u0026quot;m1和m2匹配\u0026quot;\r}else{\rprintln \u0026quot;m1和m2不匹配\u0026quot;\r}\r  特别是字符串的比较，是不是比java要简洁的多呢\n  如果要比较两个对象的引用是否相同在groovy中可以使用is\n  def list1 = []\rdef list2 = [1,2,3,4]\rboolean check = list1.is(list2) ;\rprintln(check)\rif 判断对象是否为空\r#\r\r groovy中判断对象是否为空，直接if(对象){}即可，这种便捷真的很强  def list1 = []\rdef list2 = [1,2,3,4]\r//直接写入 有点像C语言里面if可以直接把0,和非0作为boolean来比较\rif (!list1){\rprintln(\u0026quot;list1为null\u0026quot;) ;\r}\rif (list2){\rprintln(\u0026quot;list2不为null\u0026quot;) ;\r}\r 特殊判断法  //def m5 = [name:\u0026quot;a\u0026quot;];\rdef m5 = [];\rprintln \u0026quot;${m5?.name}\u0026quot; ;\r//注意目前我用list失败了\rprintln \u0026quot;${list1?.get(0)}\u0026quot; ; //报error 数组越界 因此这种写法只适合map\r"}),a.add({id:189,href:'/life/docs/operating_system/windows/windows_question/',title:" windows 问题 ",section:"windows学习与使用 ",content:" 磁盘变为了动态磁盘解决办法 最好是找软件解决 如DiskGenius 或者 傲梅分区助手 暴力解决办法  \r1、diskpart\r2、list disk\r3、select disk n\r4、convert basic\rSTEP 1：打开命令提示符窗口，在其中键入：“diskpart”命令并按下回车键。 STEP 2：在DISKPART命令提示符下，键入“list disk”命令并按下回车键后，能够查看到电脑中的磁盘情况。 STEP 3：在DISKPART命令提示符下，继续键入“select disk n”命令并按下回车键，其中n代表磁盘的序号。 STEP 4：在DISKPART命令提示符下，键入“convert dynamic”命令并按下回车键后，开始转换的工作。\r"}),a.add({id:190,href:'/life/docs/operating_system/one_chapter/1_6_/',title:" 系统调用 ",section:"第一章 操作系统概述 ",content:"一:知识总览\r#\r\r什么是系统调用，有何作用？\r#\r\r 知识点回顾：操作系统作为用户和计算机硬件之间的接口，需要向上提供一些简单易用的服务。主要包括命令接口和程序接口。其中，程序接口由一组系统调用组成。\n  “系统调用”是操作系统提供给应用程序（程序员/编程人员）使用的接口，可以理解为一种可供应用程序调用的特殊函数，应用程序可以通过系统调用来请求获得操作系统内核的服务\n 系统调用与库函数的区别\r#\r\r小例子：为什么系统调用是必须的？\r#\r\r什么功能要用到系统调用？\r#\r\r 应用程序通过系统调用请求操作系统的服务。而系统中的各种共享资源都由操作系统内核统一掌管，因此凡是与共享资源有关的操作（如存储分配、I/O操作、文件管理等），都必须通过系统调用的方式向操作系统内核提出服务请求，由操作系统内核代为完成。这样可以保证系统的稳定性和安全性，防止用户进行非法操作。\n 系统调用的过程\r#\r\r二:知识回顾与重要考点\r#\r\r"}),a.add({id:191,href:'/life/docs/http/',title:"http知识 ",section:"Docs",content:"目录\r#\r\r"}),a.add({id:192,href:'/life/docs/python/base/print/',title:"python print",section:"python 基础学习",content:"print用法\r#\r\r 简单使用  print(\u0026#39;hello world\u0026#39;)  表达式用法 print(f\u0026quot;{expression}\u0026quot;)  print(f\u0026#34;lista: {lista}\u0026#34;) print(f\u0026#34;1+1 : {1+1}\u0026#34;) "}),a.add({id:193,href:'/life/docs/codereview/design_pattern/prototype/',title:"创建型 - 原型模式(Prototype)",section:"设计模式",content:"原型模式\r#\r\r"}),a.add({id:194,href:'/life/docs/think/jinzita/',title:"金字塔原理",section:"思维",content:" 金字塔原理  "}),a.add({id:195,href:'/life/docs/javadir/middleware/elasticsearch/elasticsearch-api/',title:"ElasticSearch API",section:"Elasticsearch",content:'数据准备\r#\r\r-- mysql\rCREATE TABLE `goods` (\r`id` bigint(20) NOT NULL AUTO_INCREMENT,\r`title` varchar(300) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\r`price` decimal(22, 0) NULL DEFAULT NULL,\r`stock` double NULL DEFAULT NULL,\r`saleNum` double NULL DEFAULT NULL,\r`createTime` datetime(0) NULL DEFAULT NULL,\r`categoryName` varchar(600) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\r`brandName` varchar(300) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\r`spec` varchar(600) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\r`status` int(255) NULL DEFAULT NULL,\rPRIMARY KEY (`id`) USING BTREE\r) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\r-- sqlserver\rCREATE TABLE goods (\rid int identity(1,1) not null primary key,\rtitle varchar(300) DEFAULT NULL,\rprice decimal(22,0) DEFAULT NULL,\rstock int DEFAULT NULL,\rsaleNum int DEFAULT NULL,\rcreateTime datetime DEFAULT NULL,\rcategoryName varchar(600) DEFAULT NULL,\rbrandName varchar(300) DEFAULT NULL,\rspec varchar(600) DEFAULT NULL,\rstatus int DEFAULT NULL\r);\r-- jpa\rimport com.fasterxml.jackson.annotation.JsonFormat;\rimport lombok.AllArgsConstructor;\rimport lombok.Data;\rimport lombok.NoArgsConstructor;\rimport lombok.experimental.Accessors;\rimport org.springframework.data.annotation.Id;\rimport org.springframework.data.elasticsearch.annotations.DateFormat;\rimport org.springframework.data.elasticsearch.annotations.Document;\rimport org.springframework.data.elasticsearch.annotations.Field;\rimport org.springframework.data.elasticsearch.annotations.FieldType;\rimport java.math.BigDecimal;\rimport java.time.LocalDate;\rimport java.util.Date;\r/**\r* Goods实体对象\r*/\r@Data\r@Accessors(chain = true) // 链式赋值(连续set方法)\r@AllArgsConstructor // 全参构造\r@NoArgsConstructor // 无参构造\r// 指定当前类对象对应哪个ES中的索引\r// 如果索引不存在\r@Document(indexName = \u0026quot;goods\u0026quot;)\rpublic class Goods {\r//https://www.cnblogs.com/tanghaorong/p/16365684.html\r/**\r* 商品编号\r*/\r@Id\r@Field(type = FieldType.Long)\rprivate Long id;\r/**\r* 商品标题\r*/\r@Field(type = FieldType.Text, analyzer = \u0026quot;ik_max_word\u0026quot;, searchAnalyzer = \u0026quot;ik_smart\u0026quot;)\rprivate String title;\r/**\r* 商品价格\r*/\r@Field(type = FieldType.Double)\rprivate BigDecimal price;\r/**\r* 商品库存\r*/\r@Field(type = FieldType.Integer)\rprivate Integer stock;\r/**\r* 商品销售数量\r*/\r@Field(type = FieldType.Integer)\rprivate Integer saleNum;\r/**\r* 商品分类\r*/\r@Field(type = FieldType.Keyword)\rprivate String categoryName;\r/**\r* 商品品牌\r*/\r@Field(type = FieldType.Keyword)\rprivate String brandName;\r/**\r* 上下架状态\r*/\r@Field(type = FieldType.Integer)\rprivate Integer status;\r/**\r* 商品创建时间\r*/\r@JsonFormat(pattern = \u0026quot;yyyy-MM-dd HH:mm:ss\u0026quot;)\r@Field(type = FieldType.Date, format = DateFormat.date, pattern = \u0026quot;yyyy-MM-dd HH:mm:ss\u0026quot;)\rprivate LocalDate createTime;\r}\r简单查询\r#\r\rsqlserver\n-- 不分页 select * from dbo.goods ; -- offset /fetch next（2012版本及以上才有） 分页 select * from dbo.goods order by id offset 0 rows fetch next 100 rows only ; -- 低版本 	SELECT * FROM ( SELECT top 100 * FROM ( SELECT top 100 * FROM dbo.goods ORDER BY id ASC ) -- 其中里面这层，必须指定按照升序排序，省略的话，查询出的结果是错误的。 	AS temp_sum_goods ORDER BY id DESC ) temp_order ORDER BY id ASC; mysql\nselect * from mysqldemo.goods ; select * from mysqldemo.goods limit 100 ; es http\n//goods简单分页查询 from+size 浅分页 get http://127.0.0.1:9200/goods/_search GET /goods/_search HTTP/1.1 Host: 127.0.0.1:9200 Content-Type: application/json Content-Length: 33 { \u0026#34;from\u0026#34;: 1, \u0026#34;size\u0026#34;: 100 } es java\nSearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder() ; BoolQueryBuilder queryBuilder = new BoolQueryBuilder(); searchSourceBuilder.query(queryBuilder).from(1).size(100); SearchRequest searchRequest = new SearchRequest() ; searchRequest.indices(\u0026#34;goods\u0026#34;); searchRequest.source(searchSourceBuilder); SearchResponse searchResponse = restHighLevelClient.search(searchRequest, RequestOptions.DEFAULT); SearchHits hits = searchResponse.getInternalResponse().hits(); SearchHit[] searchHits = hits.getHits(); for (SearchHit hit : searchHits) { Map\u0026lt;String, Object\u0026gt; sourceAsMap = hit.getSourceAsMap(); System.out.println(JSONUtil.toJsonStr(sourceAsMap)); } restHighLevelClient.close(); es java jpa\nPageRequest pageRequest = PageRequest.of(1,100) ; Page\u0026lt;Goods\u0026gt; goodsList = goodsRepository.findAll(pageRequest); for (Goods goods:goodsList){ System.out.println(goods); } elasticsearch data\n\r\r\rKeyword\rSample\rElasticsearch Query String\r\r\r\r\rAnd\rfindByNameAndPrice\r{"bool" : {"must" : [ {"field" : {"name" : "?"}}, {"field" : {"price" : "?"}} ]}}\r\r\rOr\rfindByNameOrPrice\r{"bool" : {"should" : [ {"field" : {"name" : "?"}}, {"field" : {"price" : "?"}} ]}}\r\r\rIs\rfindByName\r{"bool" : {"must" : {"field" : {"name" : "?"}}}}\r\r\rNot\rfindByNameNot\r{"bool" : {"must_not" : {"field" : {"name" : "?"}}}}\r\r\rBetween\rfindByPriceBetween\r{"bool" : {"must" : {"range" : {"price" : {"from" : ?,"to" : ?,"include_lower" : true,"include_upper" : true}}}}}\r\r\rLessThanEqual\rfindByPriceLessThan\r{"bool" : {"must" : {"range" : {"price" : {"from" : null,"to" : ?,"include_lower" : true,"include_upper" : true}}}}}\r\r\rGreaterThanEqual\rfindByPriceGreaterThan\r{"bool" : {"must" : {"range" : {"price" : {"from" : ?,"to" : null,"include_lower" : true,"include_upper" : true}}}}}\r\r\rBefore\rfindByPriceBefore\r{"bool" : {"must" : {"range" : {"price" : {"from" : null,"to" : ?,"include_lower" : true,"include_upper" : true}}}}}\r\r\rAfter\rfindByPriceAfter\r{"bool" : {"must" : {"range" : {"price" : {"from" : ?,"to" : null,"include_lower" : true,"include_upper" : true}}}}}\r\r\rLike\rfindByNameLike\r{"bool" : {"must" : {"field" : {"name" : {"query" : "?*","analyze_wildcard" : true}}}}}\r\r\rStartingWith\rfindByNameStartingWith\r{"bool" : {"must" : {"field" : {"name" : {"query" : "?*","analyze_wildcard" : true}}}}}\r\r\rEndingWith\rfindByNameEndingWith\r{"bool" : {"must" : {"field" : {"name" : {"query" : "*?","analyze_wildcard" : true}}}}}\r\r\rContains/Containing\rfindByNameContaining\r{"bool" : {"must" : {"field" : {"name" : {"query" : "**?**","analyze_wildcard" : true}}}}}\r\r\rIn\rfindByNameIn(Collection\u0026lt;String\u0026gt;names)\r{"bool" : {"must" : {"bool" : {"should" : [ {"field" : {"name" : "?"}}, {"field" : {"name" : "?"}} ]}}}}\r\r\rNotIn\rfindByNameNotIn(Collection\u0026lt;String\u0026gt;names)\r{"bool" : {"must_not" : {"bool" : {"should" : {"field" : {"name" : "?"}}}}}}\r\r\rNear\rfindByStoreNear\rNot Supported Yet !\r\r\rTrue\rfindByAvailableTrue\r{"bool" : {"must" : {"field" : {"available" : true}}}}\r\r\rFalse\rfindByAvailableFalse\r{"bool" : {"must" : {"field" : {"available" : false}}}}\r\r\rOrderBy\rfindByAvailableTrueOrderByNameDesc\r{"sort" : [{ "name" : {"order" : "desc"} }],"bool" : {"must" : {"field" : {"available" : true}}}}\r\r\r\r使用ElasticsearchRestTemplate高级查询操作\r#\r\r精确查询(term)\r#\r\rterm查询：不会分析查询条件，只有当词条和查询字符串完全匹配时才匹配，也就是精确查找，比如数字，日期，布尔值或 not_analyzed 的字符串(未经分析的文本数据类型)\nterms查询：terms 跟 term 有点类似，但 terms 允许指定多个匹配条件。 如果某个字段指定了多个值，那么文档需要一起去 做匹配：\n/** * 精确查询（termQuery） */ @Test public void termQuery() { //查询条件(词条查询：对应ES query里的term)  TermQueryBuilder termQueryBuilder = QueryBuilders.termQuery(\u0026#34;categoryName\u0026#34;, \u0026#34;手机\u0026#34;); //创建查询条件构建器SearchSourceBuilder(对应ES外面的大括号)  NativeSearchQuery nativeSearchQuery = new NativeSearchQueryBuilder().withQuery(termQueryBuilder).build(); org.springframework.data.elasticsearch.core.SearchHits\u0026lt;Goods\u0026gt; searchHits = elasticsearchRestTemplate.search(nativeSearchQuery, Goods.class); Iterator\u0026lt;org.springframework.data.elasticsearch.core.SearchHit\u0026lt;Goods\u0026gt;\u0026gt; iterator = searchHits.iterator(); while (iterator.hasNext()) { org.springframework.data.elasticsearch.core.SearchHit\u0026lt;Goods\u0026gt; searchHit = iterator.next(); System.out.println(searchHit.getContent()); } } /** * terms:多个查询内容在一个字段中进行查询 */ @Test public void termsQuery(){ //查询条件(词条查询：对应ES query里的term)  TermsQueryBuilder termsQueryBuilder = QueryBuilders.termsQuery(\u0026#34;categoryName\u0026#34;, \u0026#34;手机\u0026#34;,\u0026#34;平板电视\u0026#34;); //创建查询条件构建器SearchSourceBuilder(对应ES外面的大括号)  NativeSearchQuery nativeSearchQuery = new NativeSearchQueryBuilder().withQuery(termsQueryBuilder).build(); org.springframework.data.elasticsearch.core.SearchHits\u0026lt;Goods\u0026gt; searchHits = elasticsearchRestTemplate.search(nativeSearchQuery, Goods.class); Iterator\u0026lt;org.springframework.data.elasticsearch.core.SearchHit\u0026lt;Goods\u0026gt;\u0026gt; iterator = searchHits.iterator(); while (iterator.hasNext()) { org.springframework.data.elasticsearch.core.SearchHit\u0026lt;Goods\u0026gt; searchHit = iterator.next(); System.out.println(searchHit.getContent()); } } 全文查询(match)\r#\r\r全文查询会分析查询条件，先将查询条件进行分词，然后查询，求并集。\n term和match的区别是：match是经过analyer的，也就是说，文档首先被分析器给处理了。根据不同的分析器，分析的结果也稍显不同，然后再根据分词结果进行匹配。term则不经过分词，它是直接去倒排索引中查找了精确的值了。\n match 查询语法汇总：\n match_all：查询全部。 match：返回所有匹配的分词。 match_phrase：短语查询，在match的基础上进一步查询词组，可以指定slop分词间隔。 match_phrase_prefix：前缀查询，根据短语中最后一个词组做前缀匹配，可以应用于搜索提示，但注意和max_expanions搭配。其实默认是50\u0026hellip;\u0026hellip;. multi_match：多字段查询，使用相当的灵活，可以完成match_phrase和match_phrase_prefix的工作。  @Test public void matchQuery() { //查询条件(词条查询：对应ES query里的match)  MatchQueryBuilder matchQueryBuilder = QueryBuilders.matchQuery(\u0026#34;title\u0026#34;, \u0026#34;Apple IPhone 白色\u0026#34;).analyzer(\u0026#34;ik_smart\u0026#34;).operator(Operator.AND); //创建查询条件构建器SearchSourceBuilder(对应ES外面的大括号)  NativeSearchQuery nativeSearchQuery = new NativeSearchQueryBuilder().withQuery(matchQueryBuilder).build(); //查询,获取查询结果  org.springframework.data.elasticsearch.core.SearchHits\u0026lt;Goods\u0026gt; searchHits = elasticsearchRestTemplate.search(nativeSearchQuery, Goods.class); //获取总记录数  long totalHits = searchHits.getTotalHits(); System.out.println(\u0026#34;totalHits = \u0026#34; + totalHits); Iterator\u0026lt;org.springframework.data.elasticsearch.core.SearchHit\u0026lt;Goods\u0026gt;\u0026gt; iterator = searchHits.iterator(); while (iterator.hasNext()) { org.springframework.data.elasticsearch.core.SearchHit\u0026lt;Goods\u0026gt; searchHit = iterator.next(); System.out.println(searchHit.getContent()); } } /** * match_all：查询全部。 */ @Test public void matchAllQuery(){ //查询条件(词条查询：对应ES query里的match)  MatchAllQueryBuilder matchAllQueryBuilder = QueryBuilders.matchAllQuery(); //创建查询条件构建器SearchSourceBuilder(对应ES外面的大括号)  NativeSearchQuery nativeSearchQuery = new NativeSearchQueryBuilder().withQuery(matchAllQueryBuilder).build(); //查询,获取查询结果  org.springframework.data.elasticsearch.core.SearchHits\u0026lt;Goods\u0026gt; searchHits = elasticsearchRestTemplate.search(nativeSearchQuery, Goods.class); //获取总记录数  long totalHits = searchHits.getTotalHits(); System.out.println(\u0026#34;totalHits = \u0026#34; + totalHits); Iterator\u0026lt;org.springframework.data.elasticsearch.core.SearchHit\u0026lt;Goods\u0026gt;\u0026gt; iterator = searchHits.iterator(); while (iterator.hasNext()) { org.springframework.data.elasticsearch.core.SearchHit\u0026lt;Goods\u0026gt; searchHit = iterator.next(); System.out.println(searchHit.getContent()); } } /** * match_phrase：短语查询，在match的基础上进一步查询词组，可以指定slop分词间隔。 */ @Test public void matchPhraseQuery(){ //查询条件(词条查询：对应ES query里的match_all)  MatchPhraseQueryBuilder matchPhraseQueryBuilder = QueryBuilders.matchPhraseQuery(\u0026#34;title\u0026#34;,\u0026#34;华为\u0026#34;) ; //创建查询条件构建器SearchSourceBuilder(对应ES外面的大括号)  NativeSearchQuery nativeSearchQuery = new NativeSearchQueryBuilder().withQuery(matchPhraseQueryBuilder).build(); //查询,获取查询结果  org.springframework.data.elasticsearch.core.SearchHits\u0026lt;Goods\u0026gt; searchHits = elasticsearchRestTemplate.search(nativeSearchQuery, Goods.class); //获取总记录数  long totalHits = searchHits.getTotalHits(); System.out.println(\u0026#34;totalHits = \u0026#34; + totalHits); Iterator\u0026lt;org.springframework.data.elasticsearch.core.SearchHit\u0026lt;Goods\u0026gt;\u0026gt; iterator = searchHits.iterator(); while (iterator.hasNext()) { org.springframework.data.elasticsearch.core.SearchHit\u0026lt;Goods\u0026gt; searchHit = iterator.next(); System.out.println(searchHit.getContent()); } } /** * multi_match：多字段查询，使用相当的灵活，可以完成match_phrase和match_phrase_prefix的工作。 */ @Test public void multiMatchQuery(){ //查询条件(词条查询：对应ES query里的multi_match)  MultiMatchQueryBuilder multiMatchQueryBuilder = QueryBuilders.multiMatchQuery(\u0026#34;华为\u0026#34;,\u0026#34;title\u0026#34;,\u0026#34;categoryName\u0026#34;).analyzer(\u0026#34;ik_smart\u0026#34;) ; // MultiMatchQueryBuilder multiMatchQueryBuilder = QueryBuilders.multiMatchQuery(\u0026#34;华为和Apple\u0026#34;,\u0026#34;title\u0026#34;,\u0026#34;categoryName\u0026#34;).analyzer(\u0026#34;ik_smart\u0026#34;) ;  //创建查询条件构建器SearchSourceBuilder(对应ES外面的大括号)  NativeSearchQuery nativeSearchQuery = new NativeSearchQueryBuilder().withQuery(multiMatchQueryBuilder).build(); //查询,获取查询结果  org.springframework.data.elasticsearch.core.SearchHits\u0026lt;Goods\u0026gt; searchHits = elasticsearchRestTemplate.search(nativeSearchQuery, Goods.class); //获取总记录数  long totalHits = searchHits.getTotalHits(); System.out.println(\u0026#34;totalHits = \u0026#34; + totalHits); Iterator\u0026lt;org.springframework.data.elasticsearch.core.SearchHit\u0026lt;Goods\u0026gt;\u0026gt; iterator = searchHits.iterator(); while (iterator.hasNext()) { org.springframework.data.elasticsearch.core.SearchHit\u0026lt;Goods\u0026gt; searchHit = iterator.next(); System.out.println(searchHit.getContent()); } } 参考\n'}),a.add({id:196,href:'/life/docs/javadir/tooldoc/guava-common/',title:"Guava 基于java1.6的类库集合的扩展项目",section:"Java公共库文档总结 ",content:"Guava 基于java1.6的类库集合的扩展项目\r#\r\r com.google.common.annotations：普通注解类型。 com.google.common.base：基本工具类库和接口。 com.google.common.cache：缓存工具包，非常简单易用且功能强大的JVM内缓存。 com.google.common.collect：带泛型的集合接口扩展和实现，以及工具类，这里你会发现很多好玩的集合。 com.google.common.eventbus：发布订阅风格的事件总线。 com.google.common.hash： 哈希工具包。 com.google.common.io：I/O工具包。 com.google.common.math：原始算术类型和超大数的运算工具包。 com.google.common.net：网络工具包。 com.google.common.primitives：八种原始类型和无符号类型的静态工具包。 com.google.common.reflect：反射工具包。 com.google.common.util.concurrent：多线程工具包。\r 常见Object方法   hashCode compare/compareTo 实现一个比较器[Comparator]，或者直接实现Comparable接口有时也伤不起\n public class ProjectInfo implements Serializable,Comparable\u0026lt;ProjectInfo\u0026gt; {\rprivate int id;\rprivate String name;\rpublic int getId() {\rreturn id;\r}\rpublic String getName() {\rreturn name;\r}\rpublic void setId(int id) {\rthis.id = id;\r}\rpublic void setName(String name) {\rthis.name = name;\r}\r@Override\rpublic int compareTo(ProjectInfo o) {\rreturn ComparisonChain.start().compare(this.getName(),o.getName()).compare(this.getId(),o.getId()).result();\r}\r@Override\rpublic int hashCode() {\rreturn Objects.hashCode(getId(),getName());\r}\r}\r 当一个对象中的字段可以为null时，实现Object.equals方法会很痛苦，因为不得不分别对它们进行null检查。 使用Objects.equal帮助你执行null敏感的equals判断，从而避免抛出NullPointerException\n public void testA(){\rSystem.out.println(Objects.equal(\u0026quot;a\u0026quot;,\u0026quot;a\u0026quot;));// --\u0026gt;true\rSystem.out.println(Objects.equal(\u0026quot;a\u0026quot;,\u0026quot;\u0026quot;));// --\u0026gt;false\rSystem.out.println(Objects.equal(\u0026quot;\u0026quot;,\u0026quot;\u0026quot;));// --\u0026gt;true\rSystem.out.println(Objects.equal(\u0026quot;\u0026quot;,\u0026quot;w\u0026quot;));// --\u0026gt;false\rSystem.out.println(Objects.equal(null,null));// --\u0026gt;true\rSystem.out.println(Objects.equal(null,\u0026quot;\u0026quot;));// --\u0026gt;false\r}\r toString 好的toString方法在调试时是无价之宝，但是编写toString方法有时候却很痛苦。使用MoreObjects(低版本还是Objects)\n System.out.println(MoreObjects.toStringHelper(this).add(\u0026quot;x\u0026quot;,2).\radd(\u0026quot;y\u0026quot;,Math.round(Math.random()*10)).toString());\r/*console : ObjectsDemo{x=2, y=9}*/\r Preconditions   前置条件Preconditions提供静态方法来检查方法或构造函数，被调用是否给定适当的参数。它检查的先决条件。其方法失败抛出IllegalArgumentException\n public class PreconditionsDemo {\rpublic static void main(String[] args) {\rtry {\rsum(null,2);\r}catch (IllegalArgumentException e){\rSystem.out.println(e.getMessage());\r}\r}\rprivate static int sum(Integer a,Integer b){\ra = Preconditions.checkNotNull(a,\u0026quot;不能为null\u0026quot;);\rb = Preconditions.checkNotNull(a,\u0026quot;不能为null\u0026quot;);\rreturn a+b;\r}\r/**\r* 直接写检查表达式\r* @param input\r* @return\r*/\rprivate static double sqrt(double input){\rPreconditions.checkArgument(input \u0026gt;= 0.0);\rreturn Math.sqrt(input);\r}\r/**\r* 数组索引检查\r* @param index\r* @return\r*/\rprivate static int getValue(int index){\rint[] data = {Integer.parseInt(Math.round(Math.random())+\u0026quot;\u0026quot;),Integer.parseInt(Math.round(Math.random())+\u0026quot;\u0026quot;)} ;\rindex = Preconditions.checkElementIndex(index,data.length,\u0026quot;\u0026quot;);\rreturn data[index];\r}\r/**\r* 直接写检查表达式\r* @param num\r*/\rprivate static void maxTwo(int num){\rPreconditions.checkState(num\u0026gt;2,\u0026quot;抛出异常\u0026quot;);\r}\r}\r Joiner   Joiner 提供了各种方法来处理字符串加入操作，对象等(Joiner的实例不可变的，因此是线程安全的)\n public static void testA() {\r/*\ron:制定拼接符号，如：test1-test2-test3 中的 “-“ 符号\rskipNulls()：忽略NULL,返回一个新的Joiner实例\ruseForNull(“Hello”)：NULL的地方都用字符串”Hello”来代替\r*/\rJoiner joiner = Joiner.on(\u0026quot;,\u0026quot;);\rStringBuilder builder = new StringBuilder(1024);\r// joiner.skipNulls().appendTo(builder, \u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;, null, \u0026quot;d\u0026quot;);\rjoiner.useForNull(\u0026quot;--HH--\u0026quot;).appendTo(builder, \u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;, null, \u0026quot;d\u0026quot;);\rSystem.out.println(builder.toString());\rMap\u0026lt;String, String\u0026gt; map = new HashMap\u0026lt;\u0026gt;();\rmap.put(\u0026quot;key1\u0026quot;, \u0026quot;value1\u0026quot;);\rmap.put(\u0026quot;key2\u0026quot;, \u0026quot;value2\u0026quot;);\rmap.put(\u0026quot;key3\u0026quot;, \u0026quot;value3\u0026quot;);\rSystem.out.println(Joiner.on(\u0026quot;,\u0026quot;).withKeyValueSeparator(\u0026quot;=\u0026quot;).join(map));\r}\rconsole\ra,b,c,--HH--,d\rkey1=value1,key2=value2,key3=value3\r Splitter 能够将一个字符串按照指定的分隔符拆分成可迭代遍历的字符串集合，Iterable   public static void testA() {\r/*\ron():指定分隔符来分割字符串\rlimit():当分割的子字符串达到了limit个时则停止分割\rfixedLength():根据长度来拆分字符串\rtrimResults():去掉子串中的空格\romitEmptyStrings():去掉空的子串\rwithKeyValueSeparator():要分割的字符串中key和value间的分隔符,分割后的子串中key和value间的分隔符默认是=\r*/\rIterable it = null;\rit = Splitter.on(\u0026quot;,\u0026quot;).limit(3).trimResults().split(\u0026quot;a ,b , c, d\u0026quot;);\rSystem.out.println(Splitter.fixedLength(3).split(\u0026quot;1 2 3\u0026quot;));//[1 2, 3]\rSystem.out.println(Splitter.on(\u0026quot; \u0026quot;).omitEmptyStrings().splitToList(\u0026quot;1 2 3\u0026quot;));\rSystem.out.println(Splitter.on(\u0026quot;,\u0026quot;).omitEmptyStrings().split(\u0026quot;1,,,,2,,,3\u0026quot;));//[1, 2, 3]\rSystem.out.println(Splitter.on(\u0026quot; \u0026quot;).trimResults().split(\u0026quot;1 2 3\u0026quot;)); //[1, 2, 3],默认的连接符是,\rSystem.out.println(Splitter.on(\u0026quot;;\u0026quot;).withKeyValueSeparator(\u0026quot;:\u0026quot;).split(\u0026quot;a:1;b:2;c:3\u0026quot;));//{a=1, b=2, c=3}\r}\r//连接器[Joiner]\r@Test\rpublic void testJoiner() {\r//创建连接器\rJoiner joiner = Joiner.on(\u0026quot;; \u0026quot;).skipNulls();//skipNulls 跳过null\rString join = joiner.join(\u0026quot;Harry\u0026quot;, null, \u0026quot;Ron\u0026quot;, \u0026quot;Hermione\u0026quot;);\rSystem.out.println(join);\r//apache 下的连接器\rString join1 = StringUtils.join(Arrays.asList(\u0026quot;Harry\u0026quot;, \u0026quot;Ron\u0026quot;, \u0026quot;Hermione\u0026quot;), \u0026quot;;\u0026quot;);\rSystem.out.println(join1);\r//useForNull 当连接的字符串有null值那么使用yes代替\rString join2 = Joiner.on(\u0026quot;=\u0026quot;).useForNull(\u0026quot;yes\u0026quot;).join(Arrays.asList(\u0026quot;Harry\u0026quot;, null, \u0026quot;Ron\u0026quot;, \u0026quot;Hermione\u0026quot;));\rSystem.out.println(join2);\r//把连接后的字符串放入StringBuilder里面\rStringBuilder builder = new StringBuilder();\rStringBuilder stringBuilder = Joiner.on(\u0026quot;=\u0026quot;).useForNull(\u0026quot;yes2\u0026quot;).appendTo(builder, \u0026quot;Harry\u0026quot;, \u0026quot;Ron\u0026quot;, null,\u0026quot;Hermione\u0026quot;);\rSystem.out.println(builder.toString());\rSystem.out.println(stringBuilder.toString());\r}\r@Test\rpublic void testSplitter() {\rString text = \u0026quot;the ,quick, , brown , fox, jumps, over, the, lazy, little dog\u0026quot; ;\r// \u0026quot;dsdh\u0026quot;.split() ;\rIterable\u0026lt;String\u0026gt; split = Splitter.on(\u0026quot;,\u0026quot;).trimResults().omitEmptyStrings().limit(4).split(text);\rsplit.spliterator().forEachRemaining(s -\u0026gt; System.out.println(s));\r}\romitEmptyStrings()	从结果中自动忽略空字符串\rtrimResults()	移除结果字符串的前导空白和尾部空白\rtrimResults(CharMatcher)	给定匹配器，移除结果字符串的前导匹配字符和尾部匹配字符\rlimit(int)	限制拆分出的字符串数量\r Collection 不可变集合   不可变对象有很多优点，包括  \r当对象被不可信的库调用时，不可变形式是安全的；\r不可变对象被多个线程调用时，不存在竞态条件问题\r不可变集合不需要考虑变化，因此可以节省时间和空间。所有不可变的集合都比它们的可变形式有更好的内存利用率（分析和测试细节）\r不可变对象因为有固定不变，可以作为常量来安全使用。\r\r+ 创建不可变集合方法：\r\rcopyOf方法，如ImmutableSet.copyOf(set);\rof方法，如ImmutableSet.of(“a”, “b”, “c”)或 ImmutableMap.of(“a”, 1, “b”, 2);\rBuilder工具\r\rpublic class ImmutableDemo {\rpublic static void main(String[] args) {\rImmutableSet\u0026lt;String\u0026gt; set=ImmutableSet.of(\u0026quot;a\u0026quot;,\u0026quot;b\u0026quot;,\u0026quot;c\u0026quot;,\u0026quot;d\u0026quot;);\rImmutableSet\u0026lt;String\u0026gt; set1=ImmutableSet.copyOf(set);\rImmutableSet\u0026lt;String\u0026gt; set2=ImmutableSet.\u0026lt;String\u0026gt;builder().addAll(set).add(\u0026quot;e\u0026quot;).build();\rSystem.out.println(set);\rImmutableList\u0026lt;String\u0026gt; list=set.asList();\r}\r}\r Multiset Multiset可统计一个词在文档中出现了多少次  public class MultiSetDemo {\rpublic static void main(String[] args) {\rMultiset\u0026lt;String\u0026gt; set= LinkedHashMultiset.create();\rset.add(\u0026quot;a\u0026quot;);\rset.add(\u0026quot;a\u0026quot;);\rset.add(\u0026quot;a\u0026quot;);\rset.add(\u0026quot;a\u0026quot;);\rset.setCount(\u0026quot;a\u0026quot;,5); //添加或删除指定元素使其在集合中的数量是count\rSystem.out.println(set.count(\u0026quot;a\u0026quot;)); //给定元素在Multiset中的计数\rSystem.out.println(set);\rSystem.out.println(set.size()); //所有元素计数的总和,包括重复元素\rSystem.out.println(set.elementSet().size()); //所有元素计数的总和,不包括重复元素\rset.clear(); //清空集合\rSystem.out.println(set);\r}\r}\r Multimap可以很容易地把一个键映射到多个值。换句话说，Multimap是把键映射到任意多个值的一般方式。  public class MultiMapDemo {\rpublic static void main(String[] args) {\rMultimap\u0026lt;String, Integer\u0026gt; map = HashMultimap.create(); //Multimap是把键映射到任意多个值的一般方式\rmap.put(\u0026quot;a\u0026quot;, 1); //key相同时不会覆盖原value\rmap.put(\u0026quot;a\u0026quot;, 2);\rmap.put(\u0026quot;a\u0026quot;, 3);\rSystem.out.println(map); //{a=[1, 2, 3]}\rSystem.out.println(map.get(\u0026quot;a\u0026quot;)); //返回的是集合\rSystem.out.println(map.size()); //返回所有”键-单个值映射”的个数,而非不同键的个数\rSystem.out.println(map.keySet().size()); //返回不同key的个数\rMap\u0026lt;String, Collection\u0026lt;Integer\u0026gt;\u0026gt; mapView = map.asMap();\r}\r}\r Table它有两个支持所有类型的键：”行”和”列”。  public class TableDemo {\rpublic static void main(String[] args) {\r//记录学生在某门课上的成绩\rTable\u0026lt;String,String,Integer\u0026gt; table= HashBasedTable.create();\rtable.put(\u0026quot;jack\u0026quot;,\u0026quot;java\u0026quot;,100);\rtable.put(\u0026quot;jack\u0026quot;,\u0026quot;c\u0026quot;,90);\rtable.put(\u0026quot;mike\u0026quot;,\u0026quot;java\u0026quot;,93);\rtable.put(\u0026quot;mike\u0026quot;,\u0026quot;c\u0026quot;,100);\rSet\u0026lt;Table.Cell\u0026lt;String,String,Integer\u0026gt;\u0026gt; cells=table.cellSet();\rfor (Table.Cell\u0026lt;String,String,Integer\u0026gt; cell : cells) {\rSystem.out.println(cell.getRowKey()+\u0026quot; \u0026quot;+cell.getColumnKey()+\u0026quot; \u0026quot;+cell.getValue());\r}\rSystem.out.println(table.row(\u0026quot;jack\u0026quot;));\rSystem.out.println(table);\rSystem.out.println(table.rowKeySet());\rSystem.out.println(table.columnKeySet());\rSystem.out.println(table.values());\r}\r}\r 集合操作：交集、差集、并集  public class CollectionsDemo {\rpublic static void main(String[] args) {\rSet\u0026lt;Integer\u0026gt; set1 = Sets.newHashSet(1, 2, 3, 4, 5);\rSet\u0026lt;Integer\u0026gt; set2 = Sets.newHashSet(3, 4, 5, 6);\rSets.SetView\u0026lt;Integer\u0026gt; inter = Sets.intersection(set1, set2); //交集\rSystem.out.println(inter);\rSets.SetView\u0026lt;Integer\u0026gt; diff = Sets.difference(set1, set2); //差集,在A中不在B中\rSystem.out.println(diff);\rSets.SetView\u0026lt;Integer\u0026gt; union = Sets.union(set1, set2); //并集\rSystem.out.println(union);\r}\r}\r"}),a.add({id:197,href:'/life/docs/databases/mysql/mysql_install/',title:"mysql安装",section:"mysql学习笔记",content:"mysql安装\r#\r\r 这里我们不再采用exe的安装的方式,我们使用压缩包的方式安装\n   地址 https://downloads.mysql.com/archives/community/\n  将页面拉到最下面选择选择操作系统后，选择要下载的版本点击 Downloads\n  我选择安装的版本为8.0.13。如果不想要最新的版本也可以进Archives页面选择其他版本\n  选择压缩包的版本哦\n  一:配置环境变量\r#\r\r  因为下载的mysql数据库包的格式是zip的，下载完成后直接解压就可以用，但解压后需要进行配置。\n  首先进行环境变量的配置：右击计算机-\u0026gt;属性-\u0026gt;高级系统设置-\u0026gt;环境变量，选择双击Path，在最后面添加你的mysql bin文件夹的路径\n  我的目录是：D:\\databases\\mysql-8.0.13-winx64\n   必须设置这个才行,因为后面我们要在控制台运行命令,假如你不设置这个环境变量那么在控制台根本识别不了,exe安装会自动在环境中设置,而压缩包没有设置  二:在 D:\\databases\\mysql-8.0.13-winx64 目录下新建一个my.ini的文件\r#\r\r[mysqld]\r# skip-grant-tables 暂时注释了 容易引起 mysql服务启动后立马关闭 这个错误\r# 设置3306端口\rport=3306\r# 自定义设置mysql的安装目录，即解压mysql压缩包的目录\r# 切记此处一定要用双斜杠\\\\，单斜杠这里会出错。\rbasedir=D:\\\\databases\\\\mysql-8.0.13-winx64\r# 自定义设置mysql数据库的数据存放目录\rdatadir=D:\\\\databases\\\\mysql-8.0.13-winx64\\\\data\r# 允许最大连接数\rmax_connections=200\r# 允许连接失败的次数，这是为了防止有人从该主机试图攻击数据库系统\rmax_connect_errors=10\r# 服务端使用的字符集默认为UTF8\rcharacter-set-server=utf8mb4\r# 创建新表时将使用的默认存储引擎\rdefault-storage-engine=INNODB\r# 默认使用“mysql_native_password”插件认证\rdefault_authentication_plugin=mysql_native_password\r# 开启慢sql\rslow_query_log=ON\r# 慢sql存的文职\rslow_query_log_file=D:\\CS\\databases\\mysql_8.027\\log\\slow.log\r# 会记录没有使用索引的查询sql,但前提是必须开启 slow_query_log='ON'\rlog-queries-not-using-indexes =on\r# 超过10秒则属于慢SQL,慢查询时间,这里为10秒,超过10秒会被记录\rlong_query_time=10\r# 查询日志,开启对所有执行语句进行记录\rgeneral_log=on\r# 查询日志,存放位置\rgeneral_log_file=D:\\CS\\databases\\mysql_8.027\\log\\query.log\r# 查询日志，文件中的时间显示已系统时间为准\rlog_timestamps = SYSTEM\r[mysql]\r# 设置mysql客户端默认字符集\rdefault-character-set=utf8mb4\r[client]\r# 设置mysql客户端连接服务端时默认使用的端口和默认字符集\rport=3306\rdefault-character-set=utf8mb4\r三:windows下运行控制台程序\r#\r\r 进入 C:\\Windows\\System32 中搜索   右键用管理员权限执行  四:初始化mysql\r#\r\r mysqld \u0026ndash;initialize \u0026ndash;console，等待一会出现几行代码，root@localhost：后面的是随机生成的数据库初始密码，将初始密码记下来后面会用到。 没记住初始密码的话，删掉初始化的 data目录，再执行一遍初始化命令又会重新生成  D:\\databases\\mysql-8.0.13-winx64\\bin\u0026gt;mysqld --initialize --console\r2020-04-06T07:51:43.421098Z 0 [System] [MY-013169] [Server] D:\\databases\\mysql-8.0.13-winx64\\bin\\mysqld.exe (mysqld 8.0.13) initializing of server in progress as process 21400\r2020-04-06T07:52:04.903297Z 5 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: gMmik3IyFW!D\r2020-04-06T07:52:19.868074Z 0 [System] [MY-013170] [Server] D:\\databases\\mysql-8.0.13-winx64\\bin\\mysqld.exe (mysqld 8.0.13) initializing of server has completed\r五:mysql执行核心插件服务\r#\r\rD:\\databases\\mysql-8.0.13-winx64\\bin\u0026gt;mysqld --install\rService successfully installed.\r-- 卸载服务\rmysqld --remove mysql 六:启动服务\r#\r\rnet start mysql，启动服务,假如要关闭则是net stop mysql\rD:\\databases\\mysql-8.0.13-winx64\\bin\u0026gt;net start mysql\rMySQL 服务正在启动 ...\rMySQL 服务已经启动成功。\r七:登录\r#\r\r# gMmik3IyFW!D 上面这个就是随即临时密码\rD:\\databases\\mysql-8.0.13-winx64\\bin\u0026gt;mysql -u root -p\rEnter password: ************\rWelcome to the MySQL monitor. Commands end with ; or \\g.\rYour MySQL connection id is 8\rServer version: 8.0.13\rCopyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.\rOracle is a registered trademark of Oracle Corporation and/or its\raffiliates. Other names may be trademarks of their respective\rowners.\rType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\r# 显示为这样就表示登录成功了\r八:修改密码\r#\r\rmysql\u0026gt; alter user root@localhost identified by '123456';\rQuery OK, 0 rows affected (0.20 sec)\r"}),a.add({id:198,href:'/life/docs/databases/mysql/mysql_install_more/',title:"Win10一台电脑安装多个版本的Mysql",section:"mysql学习笔记",content:"mysql安装\r#\r\r 这里我们不再采用exe的安装的方式,我们使用压缩包的方式安装\n   地址 https://downloads.mysql.com/archives/community/\n  将页面拉到最下面选择选择操作系统后，选择要下载的版本点击 Downloads\n  我选择安装的版本为8.0.22。如果不想要最新的版本也可以进Archives页面选择其他版本\n  选择压缩包的版本哦\n  一:配置环境变量\r#\r\r  因为下载的mysql数据库包的格式是zip的，下载完成后直接解压就可以用，但解压后需要进行配置。\n  首先进行环境变量的配置：右击计算机-\u0026gt;属性-\u0026gt;高级系统设置-\u0026gt;环境变量，选择双击Path，在最后面添加你的mysql bin文件夹的路径\n  我的目录是：D:\\CS\\databases\\mysql-8.0.22-winx64   必须设置这个才行,因为后面我们要在控制台运行命令,假如你不设置这个环境变量那么在控制台根本识别不了,exe安装会自动在环境中设置,而压缩包没有设置\n  二:在D:\\CS\\databases\\mysql-8.0.22-winx64 目录下新建一个my.ini的文件\r#\r\r[mysqld] # skip-grant-tables 暂时注释了 容易引起 mysql服务启动后立马关闭 这个错误 # 设置3307端口 port=3307 # 自定义设置mysql的安装目录，即解压mysql压缩包的目录 # 切记此处一定要用双斜杠\\\\，单斜杠这里会出错。 basedir=D:\\\\CS\\\\databases\\\\mysql-8.0.22-winx64 # 自定义设置mysql数据库的数据存放目录 datadir=D:\\\\CS\\\\databases\\\\mysql-8.0.22-winx64\\\\data # 允许最大连接数 max_connections=200 # 允许连接失败的次数，这是为了防止有人从该主机试图攻击数据库系统 max_connect_errors=10 # 服务端使用的字符集默认为UTF8 character-set-server=utf8mb4 # 创建新表时将使用的默认存储引擎 default-storage-engine=INNODB # 默认使用“mysql_native_password”插件认证 default_authentication_plugin=mysql_native_password [mysql] # 设置mysql客户端默认字符集 default-character-set=utf8mb4 [client] # 设置mysql客户端连接服务端时默认使用的端口和默认字符集 port=3307 default-character-set=utf8mb4 三:windows下运行控制台程序\r#\r\r 进入 C:\\Windows\\System32 中搜索   右键用管理员权限执行  四:mysql执行核心插件服务\r#\r\rD:\\CS\\databases\\mysql-8.0.22-winx64\\bin\u0026gt;mysqld install MySQL8022 --default-file=\u0026quot;D:\\CS\\databases\\mysql-8.0.22-winx64\\my.ini\u0026quot;\rService successfully installed.\r  提示Service successfully installed.说明服务安装成功，在计算机管理服务里可以看到新增一个MySQL8022的服务，接着输入mysqld \u0026ndash;initialize，回车后没有任何提示，但是在文件夹下新增了一个data文件夹，说明初始化成功\n  MySQL8022是新增mysql的名称，启动或关闭服务的时候用到\n  五:初始化mysql\r#\r\rmysqld --initialize\r六:修改注册表\r#\r\r  cmd中输入 regedit\n  注册表路径：HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services 找到MySQL8022\n  MySQL8022 source value: D:\\CS\\databases\\mysql-8.0.22-winx64\\bin\\mysqld \u0026ndash;default-file=D:\\CS\\databases\\mysql-8.0.22-winx64\\my.ini MySQL8022\n  修改为 D:\\CS\\databases\\mysql-8.0.22-winx64\\bin\\mysqld.exe MySQL8022\n  七:启动修改密码\r#\r\r  首先找到临时密码 由于安装多个mysql无法执行mysqld \u0026ndash;initialize \u0026ndash;console 实际是mysqld \u0026ndash;initialize 所以控制台无法看到密码\n  临时密码可以去data文件夹下，一个后缀为err的文件中找到root@localhost:后面的就是\n  如图:   启动 并且修改密码   参考\n  C:\\WINDOWS\\system32\u0026gt;d: D:\\\u0026gt;cd D:\\CS\\databases\\mysql_8.027_3308_slave\\bin D:\\CS\\databases\\mysql_8.027_3308_slave\\bin\u0026gt;mysqld install mysql3308 --default-file=\u0026#34;D:\\CS\\databases\\mysql_8.027_3308_slave\\my.ini\u0026#34; Service successfully installed. D:\\CS\\databases\\mysql_8.027_3308_slave\\bin\u0026gt;mysqld -initialize -console D:\\CS\\databases\\mysql_8.027_3308_slave\\bin\u0026gt;mysqld --initialize D:\\CS\\databases\\mysql_8.027_3308_slave\\bin\u0026gt; D:\\CS\\databases\\mysql_8.027_3308_slave\\bin\u0026gt;net start mysql3308 mysql3308 服务正在启动 .. mysql3308 服务已经启动成功。 D:\\CS\\databases\\mysql_8.027_3308_slave\\bin\u0026gt;mysql -P3308 -uroot -p Enter password: ************ Welcome to the MySQL monitor. Commands end with ; or \\g. Your MySQL connection id is 8 Server version: 8.0.27 Copyright (c) 2000, 2021, Oracle and/or its affiliates. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners. Type \u0026#39;help;\u0026#39; or \u0026#39;\\h\u0026#39; for help. Type \u0026#39;\\c\u0026#39; to clear the current input statement. mysql\u0026gt; alter user root@localhost identified by \u0026#39;123456\u0026#39;; Query OK, 0 rows affected (0.20 sec) mysql\u0026gt; 参考1 参考2\n"}),a.add({id:199,href:'/life/docs/%E8%84%9A%E6%9C%AC/',title:"脚本",section:"Docs",content:" dos,lua,sheel,python,js\n   dos 可以使用VisualBat编辑器编写以及调试\n  lua 可以运行在redis ,dos,Java,c++等里面另外还可以用来写触屏精灵 http://www.touchsprite.com/docs/5362 ==\u0026gt; https://www.zybuluo.com/miniknife/note/317045#%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5\n  sheel脚本 运行在linux或者unix上相当于windows上的dos\n  python 胶水语言 可以直接在linux当成sheel使用,也是人工智能的一种使用工具\n   js 浏览器脚本  "}),a.add({id:200,href:'/life/docs/operating_system/two_chapter/2_2_1/',title:"处理机调度的概念、层次",section:"第二章 进程管理 ",content:""}),a.add({id:201,href:'/life/docs/computer_network/network_architecture/%E6%A8%A1%E5%9E%8B%E5%B1%82%E6%AC%A1%E8%AF%A6%E8%A7%A3/',title:"模型层次详解",section:"网络体系结构",content:"计算机网络分成结构\r#\r\r7层OSI参考模型\r#\r\r4层TCP/IP参考模型\r#\r\r5层体系结构\r#\r\rISO/OSI模型怎么来的\r#\r\rISO/OSI参考模型\r#\r\rISO/OSI参考模型解释通信过程\r#\r\r应用层\r#\r\r表示层\r#\r\r会话层\r#\r\r传输层\r#\r\r网络层\r#\r\r数据链路层\r#\r\r物理层\r#\r\rOSI参考模型 与 TCP/IP参考模型\r#\r\rOSI参考模型与TCP/IP参考模型\r#\r\r相同点\r#\r\r 1:都分层 2:基于独立的协议栈的概念 3:可以实现异构网络互联  不同点\r#\r\r面向连接分为三个阶段，第一是建立连接，在此阶段，发出一个建立连接的请求。\r只有在连接成功建立之后，才能开始数据传输，这是第二阶段。接着，当数据传输完毕，必须释放连接。\r而面向无连接没有这么多阶段，它直接进行数据传输。\r    ISO/OSI参考模型 TCP/IP模型     网络层 无连接 + 面向连接 无连接   传输层 面向连接 无连接 + 面向连接    五层参考模型\r#\r\r 综合了OSI和TCP/IP的优点\n    参考层 说明     应用层 支持各种网络应用 FTP\\SMTP\\HTTP   传输层 进程-进程的数据传输 TCP\\UDP   网络层 源主机到目的主机的数据分组路由与转发 IP\\ICMP\\OSPF   数据链路层 把网络层传下来的数据报组装成帧 Ethernet ppp   物理层 比特传输    5层参考模型的数据封装与解封装\r#\r\r"}),a.add({id:202,href:'/life/docs/javadir/middleware/solr/',title:"solr",section:"中间件 ",content:"solr\r#\r\rsolr 的概念\r#\r\r Solr 是一个基于 Apache Lucene 之上的搜索服务器，它是一个开源的、基于 Java 的信息检索库\n 安装\r#\r\r 1、下载 Solr 安装包  历史地址1\n  solr-8.11.0.tgz 适用于 Linux/Unix/OSX 系统\n  solr-8.11.0.zip 适用于 Microsoft Windows 系统\n  solr-8.11.0-src.tgz包 Solr 源代码。如果您想在不使用官方 Git 存储库的情况下在 Solr 上进行开发，这将非常有用。\n  文件布局\r#\r\r 解压后目录布局    bin\n  此目录中包含几个重要的脚本，这些脚本将使使用 Solr 更容易。\n  solr 和 solr.cmd\n  这是 Solr 的控制脚本，也称为 bin/solr（对于 * nix）或者 bin/solr.cmd（对于 Windows）。这个脚本是启动和停止 Solr 的首选工具。您也可以在运行 SolrCloud 模式时创建集合或内核、配置身份验证以及配置文件。\n  post\n  Post Tool，它提供了用于发布内容到 Solr 的一个简单的命令行界面。\n  solr.in.sh 和 solr.in.cmd\n  这些分别是为 * nix 和 Windows 系统提供的属性文件。在这里配置了 Java、Jetty 和 Solr 的系统级属性。许多这些设置可以在使用 bin/solr 或者 bin/solr.cmd 时被覆盖，但这允许您在一个地方设置所有的属性。\n  install_solr_services.sh\n  该脚本用于 * nix 系统以安装 Solr 作为服务。在 “将 Solr 用于生产 ” 一节中有更详细的描述。\n    contrib\n Solr 的 contrib 目录包含 Solr 专用功能的附加插件。    dist\n 该 dist 目录包含主要的 Solr .jar 文件。    docs\n 该 docs 目录包括一个链接到在线 Javadocs 的 Solr。    example\n 该 example 目录包括演示各种 Solr 功能的几种类型的示例。有关此目录中的内容的详细信息，请参阅下面的 Solr 示例。    licenses\n 该 licenses 目录包括 Solr 使用的第三方库的所有许可证。    server\n 此目录是 Solr 应用程序的核心所在。此目录中的 README 提供了详细的概述，但以下是一些特点： Solr 的 Admin UI（server/solr-webapp） Jetty 库（server/lib） 日志文件（server/logs）和日志配置（server/resources）。有关如何自定义 Solr 的默认日志记录的详细信息，请参阅配置日志记录一节。 示例配置（server/solr/configsets）    启动\r#\r\r windows  Microsoft Windows [版本 10.0.19045.3324] (c) Microsoft Corporation。保留所有权利。 C:\\Users\\noatn\u0026gt;d: D:\\\u0026gt;cd D:\\CS\\solr\\solr-8.11.0\\bin D:\\CS\\solr\\solr-8.11.0\\bin\u0026gt;solr start \u0026#34;java version info is 1.8.0_321\u0026#34; \u0026#34;Extracted major version is 1\u0026#34; Java HotSpot(TM) 64-Bit Server VM warning: JVM cannot use large page memory because it does not have enough privilege to lock pages in memory. Waiting up to 30 to see Solr running on port 8983 Started Solr server on port 8983. Happy searching! http://127.0.0.1:8983/solr/\n windows 关闭  D:\\CS\\solr\\solr-8.11.0\\bin\u0026gt;solr stop -all \u0026#34;java version info is 1.8.0_321\u0026#34; \u0026#34;Extracted major version is 1\u0026#34; Stopping Solr process 18900 running on port 8983 等待 4 秒，按一个键继续 ... D:\\CS\\solr\\solr-8.11.0\\bin\u0026gt;  linux  #进入到 /solr-8.11.0/bin目录 启动命令：./solr start -force 启动命令：./solr start -e cloud -force #SolrCloud 模式下启动默认两个节点在同一台机器上启动 停止命令：./solr stop -all 重启命令：./solr restart -force 创建核心：./solr create -c \u0026lt;name\u0026gt; #name自定义 删除核心：./solr delete -c \u0026lt;name\u0026gt; #需要删除的核心名称 "}),a.add({id:203,href:'/life/docs/python/base/tuple/',title:"python 元组",section:"python 基础学习",content:"元组\r#\r\r 元组（Tuple）   元组是有序且不可更改的集合。在 Python 中，元组是用圆括号编写的\n import time tupleX = (time.time(),time.time_ns()) print(tupleX)  访问元组项目  tupleIndex = (2, 3, \u0026#39;a\u0026#39;, \u0026#39;c\u0026#39;) print(f\u0026#34;倒数第一项:{tupleIndex[-1]}\u0026#34;) print(f\u0026#34;倒数第二项:{tupleIndex[-2]}\u0026#34;) print(f\u0026#34;第一项:{tupleIndex[0]}\u0026#34;)   关于索引范围 -1就说倒数第一项 -2就是倒数第二项 0就第一项\n  检查项目是否存在\n  betweenTuple = (\u0026#39;a\u0026#39;,\u0026#39;k\u0026#39;,\u0026#39;4\u0026#39;,\u0026#39;7\u0026#39;) print(f\u0026#34;a属于元组:{\u0026#39;a\u0026#39; in betweenTuple}\u0026#34;) print(f\u0026#34;b不属于元组:{\u0026#39;a\u0026#39; in betweenTuple}\u0026#34;)  元组长度  betweenTuple = (\u0026#39;a\u0026#39;,\u0026#39;k\u0026#39;,\u0026#39;4\u0026#39;,\u0026#39;7\u0026#39;) print(f\u0026#34;a属于元组:{\u0026#39;a\u0026#39; in betweenTuple}\u0026#34;) print(f\u0026#34;b不属于元组:{\u0026#39;a\u0026#39; in betweenTuple}\u0026#34;) print(f\u0026#34;元组长度:{len(betweenTuple)}\u0026#34;) "}),a.add({id:204,href:'/life/docs/algorithm/data-structure/tree/',title:"树",section:"数据结构",content:"树\r#\r\r"}),a.add({id:205,href:'/life/docs/javadir/basedir/java-basic-jdk8-stream/',title:"Java8 流式数据处理",section:"Java基础知识 ",content:"Java8 新特性之流式数据处理\r#\r\r一:流式处理简介\r#\r\r 在我接触到java8流式处理的时候，我的第一感觉是流式处理让集合操作变得简洁了许多，通常我们需要多行代码才能完成的操作，借助于流式处理可以在一行中实现。比如我们希望对一个包含整数的集合中筛选出所有的偶数，并将其封装成为一个新的List返回，那么在java8之前，我们需要通过如下代码实现：\n List\u0026lt;Integer\u0026gt; numS = Lists.newArrayList();\rfor (int i = 0; i \u0026lt; 20; i++) {\rnumS.add(Zhou_StdRandom.uniform(1, 674));\r}\rList\u0026lt;Integer\u0026gt; evens = new ArrayList\u0026lt;\u0026gt;();\rfor (final Integer num : numS) {\rif (num % 2 == 0) {\revens.add(num);\r}\r}\revens.stream().sorted().filter(integer -\u0026gt; true).forEach(integer -\u0026gt; System.out.println(integer));\r 通过java8的流式处理，我们可以将代码简化为：\n List\u0026lt;Integer\u0026gt; evens = numS.stream().filter(integer -\u0026gt; integer % 2 == 0).collect(Collectors.toList());\r 先简单解释一下上面这行语句的含义，stream()操作将集合转换成一个流，filter()执行我们自定义的筛选处理，这里是通过lambda表达式筛选出所有偶数，最后我们通过collect()对结果进行封装处理，并通过Collectors.toList()指定其封装成为一个List集合返回。\n  由上面的例子可以看出，java8的流式处理极大的简化了对于集合的操作，实际上不光是集合，包括数组、文件等，只要是可以转换成流，我们都可以借助流式处理，类似于我们写SQL语句一样对其进行操作。java8通过内部迭代来实现对流的处理，一个流式处理可以分为三个部分：转换成流、中间操作、终端操作。如下图：\n  以集合为例，一个流式处理的操作我们首先需要调用stream()函数将其转换成流，然后再调用相应的中间操作达到我们需要对集合进行的操作，比如筛选、转换等，最后通过终端操作对前面的结果进行封装，返回我们需要的形式。\n 二:创建\r#\r\r 流的创建有多种方式   从 Collection 和数组 Collection.stream() Collection.parallelStream() Arrays.stream(T array) or Stream.of() 从 BufferedReader java.io.BufferedReader.lines() 静态工厂 java.util.stream.IntStream.range() java.nio.file.Files.walk() 自己构建 java.util.Spliterator 其它 Random.ints() BitSet.stream() Pattern.splitAsStream(java.lang.CharSequence) JarFile.stream()  三:中间操作\r#\r\r 2.1 (过滤，顾名思义就是按照给定的要求对集合进行筛选满足条件的元素，java8提供的筛选操作包括：filter、distinct、limit、skip。)  filter\n 在前面的例子中我们已经演示了如何使用filter，其定义为：Stream filter(Predicate\u0026lt;? super T\u0026gt; predicate)，filter接受一个谓词Predicate，我们可以通过这个谓词定义筛选条件，在介绍lambda表达式时我们介绍过Predicate是一个函数式接口，其包含一个test(T t)方法，该方法返回boolean。现在我们希望从集合students中筛选出所有武汉大学的学生，那么我们可以通过filter来实现，并将筛选操作作为参数传递给filter：\n List\u0026lt;Student\u0026gt; whuStudents = students.parallelStream().sorted().filter(student -\u0026gt; \u0026quot;武汉大学\u0026quot;.equals(student.getSchool())).collect(Collectors.toList());\rwhuStudents.parallelStream().forEach(student -\u0026gt; System.out.println(student));\rdistinct\n distinct操作类似于我们在写SQL语句时，添加的DISTINCT关键字，用于去重处理，distinct基于Object.equals(Object)实现，回到最开始的例子，假设我们希望筛选出所有不重复的偶数，那么可以添加distinct操作：\n List\u0026lt;Integer\u0026gt; numS = Lists.newArrayList();\rfor (int i = 0; i \u0026lt; 1000; i++) {\rnumS.add(Zhou_StdRandom.uniform(1, 24));\r}\rList\u0026lt;Integer\u0026gt; evens = numS.parallelStream().sorted().filter(integer -\u0026gt; integer%2==0).distinct().collect(Collectors.toList());\rSystem.out.println(evens);\rlimit\n limit操作也类似于SQL语句中的LIMIT关键字，不过相对功能较弱，limit返回包含前n个元素的流，当集合大小小于n时，则返回实际长度，比如下面的例子返回前两个专业为土木工程专业的学生：\n List\u0026lt;Student\u0026gt; civilStudents = students.parallelStream().sorted().filter(student -\u0026gt; \u0026quot;土木工程\u0026quot;.equals(student.getMajor())).limit(2).collect(Collectors.toList());\rcivilStudents.parallelStream().forEach(student -\u0026gt; System.out.println(student));\rskip\n skip操作与limit操作相反，如同其字面意思一样，是跳过前n个元素，比如我们希望找出排序在2之后的土木工程专业的学生，那么可以实现为：\n  List\u0026lt;Student\u0026gt; civilStudents = students.parallelStream().sorted().filter(student -\u0026gt; \u0026quot;土木工程\u0026quot;.equals(student.getMajor())).skip(2).collect(Collectors.toList());\rcivilStudents.parallelStream().forEach(student -\u0026gt; System.out.println(student));\r 2.2 (在SQL中，借助SELECT关键字后面添加需要的字段名称，可以仅输出我们需要的字段数据，而流式处理的映射操作也是实现这一目的，在java8的流式处理中，主要包含两类映射操作：map和flatMap。)  map\n 举例说明，假设我们希望筛选出所有专业为计算机科学的学生姓名，那么我们可以在filter筛选的基础之上，通过map将学生实体映射成为学生姓名字符串，具体实现如下：\n  List\u0026lt;String\u0026gt; names = students.parallelStream().sorted().filter(student -\u0026gt; \u0026quot;计算机科学\u0026quot;.equals(student.getMajor())).map(student -\u0026gt; student.getName()).collect(Collectors.toList());\rSystem.out.println(names);\rflatMap\n flatMap与map的区别在于 flatMap是将一个流中的每个值都转成一个个流，然后再将这些流扁平化成为一个流 。\n String[] strs = {\u0026quot;java8\u0026quot;, \u0026quot;is\u0026quot;, \u0026quot;easy\u0026quot;, \u0026quot;to\u0026quot;, \u0026quot;use\u0026quot;};\rList\u0026lt;String\u0026gt; distinctStrs = Arrays.stream(strs)\r.map(s -\u0026gt; s.split(\u0026quot;\u0026quot;)).flatMap(strings -\u0026gt; Arrays.stream(strings))// 映射成为Stream\u0026lt;String[]\u0026gt;\r.distinct().collect(Collectors.toList()); // 扁平化为Stream\u0026lt;String\u0026gt;\rSystem.out.println(distinctStrs);\r四:终端操作\r#\r\rallMatch\n allMatch用于检测是否全部都满足指定的参数行为，如果全部满足则返回true，例如我们希望检测是否所有的学生都已满18周岁，那么可以实现为\n boolean isAdult = students.parallelStream().allMatch(student -\u0026gt; student.getAge() \u0026gt;= 18);\rSystem.out.println(isAdult?\u0026quot;是\u0026quot;:\u0026quot;否\u0026quot;);\ranyMatch\n anyMatch则是检测是否存在一个或多个满足指定的参数行为，如果满足则返回true，例如我们希望检测是否有来自武汉大学的学生，那么可以实现为：\n  boolean hasWhu = students.parallelStream().anyMatch(student -\u0026gt; \u0026quot;武汉大学\u0026quot;.equals(student.getSchool()));\rSystem.out.println(hasWhu?\u0026quot;是\u0026quot;:\u0026quot;否\u0026quot;);\rnoneMathch\n noneMatch用于检测是否不存在满足指定行为的元素，如果不存在则返回true，例如我们希望检测是否不存在专业为计算机科学的学生，可以实现如下：\n  boolean noneCs = students.parallelStream().noneMatch(student -\u0026gt; \u0026quot;计算机科学\u0026quot;.equals(student.getMajor()));\rSystem.out.println(noneCs?\u0026quot;是\u0026quot;:\u0026quot;否\u0026quot;);\rfindFirst\n findFirst用于返回满足条件的第一个元素，比如我们希望选出专业为土木工程的排在第一个学生，那么可以实现如下：\n Optional\u0026lt;Student\u0026gt; optStu = students.stream().filter(student -\u0026gt; \u0026quot;土木工程\u0026quot;.equals(student.getMajor())).findFirst();\rSystem.out.println(optStu.get());\r五:常见的操作可以归类如下\r#\r\rIntermediate(中间)\nmap (mapToInt, flatMap 等)、 filter、 distinct、 sorted、 peek、 limit、 skip、 parallel、 sequential、 unordered\rTerminal(终端)\nforEach、 forEachOrdered、 toArray、 reduce、 collect、 min、 max、 count、 anyMatch、 allMatch、 noneMatch、 findFirst、 findAny、 iterator\rShort-circuiting(截取)\nanyMatch、 allMatch、 noneMatch、 findFirst、 findAny、 limit\r六转换\r#\r\r list 转 Map \u0026lt;key,list\u0026gt;  package com.tool.stream; import java.util.ArrayList; import java.util.List; import java.util.Map; import java.util.function.Function; import java.util.stream.Collectors; public class Demo1 { public static class TestEntity { private Integer id; private String name; public TestEntity(Integer id, String name) { this.id = id; this.name = name; } public TestEntity() { } public Integer getId() { return id; } public void setId(Integer id) { this.id = id; } public String getName() { return name; } public void setName(String name) { this.name = name; } @Override public String toString() { return \u0026#34;TestEntity{\u0026#34; + \u0026#34;id=\u0026#34; + id + \u0026#34;, name=\u0026#39;\u0026#34; + name + \u0026#39;\\\u0026#39;\u0026#39; + \u0026#39;}\u0026#39;; } } public static void main(String[] args) { List\u0026lt;TestEntity\u0026gt; entityList = new ArrayList\u0026lt;\u0026gt;(2) ; entityList.add(new TestEntity(1,\u0026#34;图书馆\u0026#34;)); entityList.add(new TestEntity(2,\u0026#34;艺术馆\u0026#34;)); entityList.add(new TestEntity(1,\u0026#34;游泳池\u0026#34;)); // Map\u0026lt;Integer, TestEntity\u0026gt; entityMap = entityList.stream().collect(Collectors.toMap(TestEntity::getId, user -\u0026gt; user));  //下面的可以确保 百分之百 在key重复下不报错  Map\u0026lt;Integer, TestEntity\u0026gt; entityMap = entityList.stream().collect(Collectors.toMap(TestEntity::getId, Function.identity(), (oldValue, newValue) -\u0026gt; newValue)); // Map\u0026lt;Integer, String\u0026gt; stringMap = entityList.stream().collect(Collectors.toMap(TestEntity::getId, user -\u0026gt; user.getName()));  Map\u0026lt;Integer, String\u0026gt; stringMap = entityList.stream().collect(Collectors.toMap(TestEntity::getId, t -\u0026gt; t.getName(), (oldValue, newValue) -\u0026gt; newValue)); Map\u0026lt;Integer, List\u0026lt;TestEntity\u0026gt;\u0026gt; integerListMap = entityList.stream().collect(Collectors.groupingBy(oo -\u0026gt; oo.getId())); System.out.println(entityMap.get(1)); System.out.println(stringMap.get(1)); System.out.println(integerListMap.get(1)); /* TestEntity{id=1, name=\u0026#39;游泳池\u0026#39;} 游泳池 [TestEntity{id=1, name=\u0026#39;图书馆\u0026#39;}, TestEntity{id=1, name=\u0026#39;游泳池\u0026#39;}] * */ } }  list 分组统计  package com.tool.stream; import java.util.*; import java.util.function.Function; import java.util.stream.Collectors; public class Demo2 { public static class TestEntity { private String uuid; private Double price; private String name; public String toString() { return \u0026#34;TestEntity{\u0026#34; + \u0026#34;uuid=\u0026#39;\u0026#34; + uuid + \u0026#39;\\\u0026#39;\u0026#39; + \u0026#34;, price=\u0026#34; + price + \u0026#34;, name=\u0026#39;\u0026#34; + name + \u0026#39;\\\u0026#39;\u0026#39; + \u0026#39;}\u0026#39;; } public TestEntity(String uuid, Double price, String name) { this.uuid = uuid; this.price = price; this.name = name; } public TestEntity() { } public String getUuid() { return uuid; } public void setUuid(String uuid) { this.uuid = uuid; } public Double getPrice() { return price; } public void setPrice(Double price) { this.price = price; } public String getName() { return name; } public void setName(String name) { this.name = name; } } public static void main(String[] args) { Function\u0026lt;Double, Double\u0026gt; function = (oo -\u0026gt; { Random random = new Random(System.currentTimeMillis()); return random.nextDouble() * 100 * oo; }); List\u0026lt;TestEntity\u0026gt; entityList = new ArrayList\u0026lt;\u0026gt;(); entityList.add(new TestEntity(UUID.randomUUID().toString(), function.apply(100.01d), \u0026#34;a\u0026#34;)); entityList.add(new TestEntity(UUID.randomUUID().toString(), function.apply(199.01d), \u0026#34;a\u0026#34;)); entityList.add(new TestEntity(UUID.randomUUID().toString(), function.apply(97.01d), \u0026#34;b\u0026#34;)); Map\u0026lt;String, List\u0026lt;TestEntity\u0026gt;\u0026gt; listMap = entityList.stream().collect(Collectors.groupingBy(obj -\u0026gt; obj.getName())); Map\u0026lt;String, Long\u0026gt; longMap = entityList.stream().collect(Collectors.groupingBy(obj -\u0026gt; obj.getName(), Collectors.counting())); Map\u0026lt;String, DoubleSummaryStatistics\u0026gt; doubleSummaryStatisticsMap = entityList.stream().collect(Collectors.groupingBy(obj -\u0026gt; obj.getName(), Collectors.summarizingDouble(TestEntity::getPrice))); doubleSummaryStatisticsMap.entrySet().stream().forEach(obj -\u0026gt; { StringBuilder stringBuilder = new StringBuilder(); stringBuilder.append(\u0026#34;最大值:\u0026#34; + obj.getValue().getMax()); stringBuilder.append(\u0026#34;最小值:\u0026#34; + obj.getValue().getMin()); stringBuilder.append(\u0026#34;合计值:\u0026#34; + obj.getValue().getSum()); stringBuilder.append(\u0026#34;平均值:\u0026#34; + obj.getValue().getAverage()); stringBuilder.append(\u0026#34;数量:\u0026#34; + obj.getValue().getCount()); System.out.println(stringBuilder.toString()); }); /* 最大值:14170.806808512518最小值:7121.362689911748合计值:21292.169498424264平均值:10646.084749212132数量:2 最大值:6907.74317116627最小值:6907.74317116627合计值:6907.74317116627平均值:6907.74317116627数量:1 * */ } }  Map\u0026amp;Reduce 收集器 (非常重要)   map将集合类(例如列表)元素进行转换的。还有一个 reduce() 函数可以将所有值合并成一个\n package com.tool.stream; import java.util.*; import java.util.function.Function; import java.util.stream.Collectors; public class Demo3 { public static class TestEntity { private String uuid; private Double price; private String name; public String toString() { return \u0026#34;TestEntity{\u0026#34; + \u0026#34;uuid=\u0026#39;\u0026#34; + uuid + \u0026#39;\\\u0026#39;\u0026#39; + \u0026#34;, price=\u0026#34; + price + \u0026#34;, name=\u0026#39;\u0026#34; + name + \u0026#39;\\\u0026#39;\u0026#39; + \u0026#39;}\u0026#39;; } public TestEntity(String uuid, Double price, String name) { this.uuid = uuid; this.price = price; this.name = name; } public TestEntity() { } public String getUuid() { return uuid; } public void setUuid(String uuid) { this.uuid = uuid; } public Double getPrice() { return price; } public void setPrice(Double price) { this.price = price; } public String getName() { return name; } public void setName(String name) { this.name = name; } } public static void main(String[] args) { List\u0026lt;TestEntity\u0026gt; entityList = new ArrayList\u0026lt;\u0026gt;(); Function\u0026lt;Double, Double\u0026gt; function = (oo -\u0026gt; { Random random = new Random(System.currentTimeMillis()); return random.nextDouble() * 100 * oo; }); entityList.add(new TestEntity(UUID.randomUUID().toString(), function.apply(100.01d), \u0026#34;a\u0026#34;)); entityList.add(new TestEntity(UUID.randomUUID().toString(), function.apply(199.01d), \u0026#34;a\u0026#34;)); entityList.add(new TestEntity(UUID.randomUUID().toString(), function.apply(97.01d), \u0026#34;b\u0026#34;)); entityList.stream().collect(Collectors.groupingBy( obj -\u0026gt; obj.getName() ,Collectors.summarizingDouble(ooEntity -\u0026gt; ooEntity.getPrice()))).forEach((s, obj) -\u0026gt; { StringBuilder stringBuilder = new StringBuilder(); stringBuilder.append(\u0026#34;名称:\u0026#34;).append(s).append(\u0026#34; \u0026#34;) ; stringBuilder.append(\u0026#34;最大值:\u0026#34; + obj.getMax()); stringBuilder.append(\u0026#34;最小值:\u0026#34; + obj.getMin()); stringBuilder.append(\u0026#34;合计值:\u0026#34; + obj.getSum()); stringBuilder.append(\u0026#34;平均值:\u0026#34; + obj.getAverage()); stringBuilder.append(\u0026#34;数量:\u0026#34; + obj.getCount()); System.out.println(stringBuilder.toString()); }); System.out.println(Arrays.toString(entityList.stream().map(obj -\u0026gt; obj.toString()).collect(Collectors.toList()).toArray())); ; Double sumValue = entityList.stream().map(obj -\u0026gt; obj.getPrice()).reduce((sum, res) -\u0026gt; sum + res).get(); System.out.println(\u0026#34;sumValue:\u0026#34;+sumValue); } }  Collector 收集器 (非常重要)  七:自己总结的一些好用方法\r#\r\r 去重  /** * 去重 * 一个对象的去重例子 return list.stream().filter(StreamUtils.distinctByKey(o -\u0026gt; o.getId())).collect(Collectors.toList()); 如果不是id，是其它字段 同理 o.getId() 换为 o.getOther() * * @param keyExtractor * @param \u0026lt;T\u0026gt; * @return */ public static \u0026lt;T\u0026gt; Predicate\u0026lt;T\u0026gt; distinctByKey(Function\u0026lt;? super T, ?\u0026gt; keyExtractor) { Map\u0026lt;Object, Boolean\u0026gt; seen = new ConcurrentHashMap\u0026lt;\u0026gt;(); return t -\u0026gt; seen.putIfAbsent(keyExtractor.apply(t), Boolean.TRUE) == null; } "}),a.add({id:206,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/hweaprcifa/',title:"高情商的聊天技巧",section:"自信",content:"技巧一\r#\r\r五个黄金公式和一个基本原则，轻轻松松提升情商。\r#\r\r公式1：不要在比你_____的人面前说你很_____\r#\r\r举个栗子。不要在比你胖的人面前说你很胖，不要在比你穷的人面前说你很穷……\n 曾经有个妹子，吃饱后摸着肚子对我说：“天啊！我都快胖成猪了！” 你以为她真很胖吗？事实上，当时的她，95斤。而当时的我，160斤。\n Hbnes\u0026quot;\u0026gt;我的内心os是：你是猪的话我是什么？猛犸象吗？！！\n在别人吃不起饭的时候，去跟他抱怨自己家的红烧肉不够入味，是件很不人道的事情。\n公式2： 认可情绪＞分析事实\r#\r\r举个栗子。同事说：“最近觉得工作好烦。”与其说：“每个人工作都烦，很正常。”不如说：“你最近总是熬夜，这么辛苦，真的很理解你为什么烦。”\n 上个月，在某众点评里给一家烤肉店打了三星。原因是店家环境一般且用的合成肉。结果评论里被店家人身攻击。生气的我找朋友吐槽。\n A听了以后，分析到：你打三颗星，店家肯定会不开心啊，所以他反驳你也是人之常情。虽然他言辞过于激烈，你也没必要跟陌生人计较，下次不去那家店就好。\n听完这些， 虽然知道他说得对，但我还是好生气啊！\n于是又跟B说了这件事，B立马回复：天啊！气死我了！这个店家太过分了！我现在就要去给他打一星！凭什么这么骂你啊！你的评论写得有理有据他作为商家不改正还口出狂言？我要叫大家一起来喷他！\n听完他说这些，心情立马好转。\n为什么A虽然说了事实，却没有什么安慰效果呢？\n因为人的情绪是没办法被冷冰冰的道理消化的。\n所以当B设身处地理解了我的委屈后，让我感受到了认同接纳，坏心情才随之消散。\n看见对方的情绪，是有效沟通的第一步。\n针没扎在自己身上的时候，不要着急说不疼。\n认可情绪比分析事实更能拉近我们的距离。\n公式3：我想_______,因为_______\r#\r\r举个栗子。“我想跟你一起吃晚饭，因为朋友推荐了一家超好吃的火锅店。”\n人是需要理由的动物，有目的，会让行动容易很多。\n提出自己的想法和需求的时加一个“因为”，被接受的概率会大大提升。\n 美国著名社会心理学家 罗伯特·西奥迪尼 在《影响力》这本书里举过一个例子。在买票的时候说：“我想插队，因为我要买票”比只说“我想插队”成功率要高出93%！ 这本书是我的心理学启蒙，不仅读起来很有意思，并且非常实用~没读过的小伙伴千万不要错过。\n 当然，理由得是合理的才行。\n如果你说“我想插队，因为我没素质”，那可能会被打。\n同理，拒绝人的时候也最好加个理由。“我不能借钱给你，因为我只帮助长得丑的人。”\n公式4：选A还是B？可以选C\r#\r\r当面对两难选择的时候，可以回答题目之外的选项。\n举个栗子。女朋友问：“以后生孩子，你保大还是保小？”你可以回答：“那就都不保吧”。这样你在喜提幽默感的同时还能收获一顿小粉拳。\n N年前，在芒果卫视做节目嘉宾，有一期节目邀请到了台湾艺术作家曲家瑞，以及新东方知名英语老师英语老师周思成\n  主持人问我：你作为学生，比较喜欢火辣大胆的周老师，还是直爽可爱的曲老师？弱小的我当时很为难。毕竟两个老师各有特色，回答A或者B都会得罪另一个人！所以我当时回答：“我是个肤浅的学生，喜欢长得好看的老师。所以这两个我都喜欢！”\n 有人说：你好狡猾啊！那如果必须选择一个呢？\n老板问“A方案还是B方案？”怎么回答呢？\n记得我们刚刚说的“我想____,因为____”公式吗？说出理由，让你的选择合理化就好了。\n“我想选A方案，因为我觉得A更适合现在公司的处境。”\n公式5：提问的效果＞陈述\r#\r\r疑问句比陈述句更能让对话继续下去，同时更强烈的表达自己的想法。\n举个栗子。客户对你说：“周末一般会踢踢球。”如果你只回答一句：“我也是。”认同感不强烈，而且很难继续聊下去。所以可以问对方：“我也爱踢球！您一般踢哪个位置呀？”引导对话更深入。\n 以前在办公室看到同事穿得非常漂亮，只会说：“今天好美哦。”尽管我是发自内心的这么觉得，可是对方通常只能尬尬的回复一句：“谢谢。”然后互动就结束了。\n “你这么美，有什么穿搭心得？”＞“你真美。”\n“瘦了这么多！怎么做到的？” ＞“你瘦了。”\n疑问句不仅让你的欣赏显得更诚恳，让对方感觉到你是真的在赞美他，还能顺便请教对方怎么做到这么优秀的。\n正所谓他好你也好，大家好，才是真的好~\n说完五个黄金公式，最后说一个高情商的基本原则。\n其实就一句话：\n所有的高情商，都是同理心的体现\n所谓同理心，就是能够站在不同角度去理解问题的能力。\n举个栗子。 朋友弄丢了很喜欢的杯子，找了一整天。你觉得很没必要，于是说：“不就是喝水的杯子吗？再买一个不就好了？”\n这种态度朋友会觉得你像西伯利亚寒流一样冷酷无情。\n而有同理心的人通常会把自己代入到对方的角色里，这个时候会说的是：“这个杯子是不是对你很重要？如果是我丢了用了这么久的杯子也会很难过的。我陪你一起找。”\n回忆一下，自己丢东西的时候是不是也会着急？也会烦躁？为什么同样的事情发生在别人身上我们总能说得轻描淡写？\n 楼下一个男人病得要死，那间隔壁的一家唱着留声机，对面是弄孩子，楼上有两人狂笑；还有打牌声，河中的船上有女人哭着她死去的母亲，人类的悲欢并不相通，我只觉得他们吵闹。——鲁迅\n 所以同理心这件事情很简单，就是站在别人的角度去思考问题。\n可是简单的事情不代表容易。而正因为不那么容易，所以能够站在别人角度思考问题的人才更容易被人喜欢。\n【总结一下】\r#\r\r五大公式：\n1、 不要在比你_____的人面前说你很____\n2、 认可情绪＞分析事实\n3、 我想_______,因为______\n4、 选A还是B？可以选C\n5、 提问的效果＞陈述\n一个基本原则：\n所有的高情商，都是同理心的体现。\n既能考虑别人的感受，还能体谅自己的情绪，这才是与人长久且舒服的相处之道。\n希望我们都能成为理想中的高情商的人。不仅跟别人，也能跟自己，相处愉快~\n技巧二\r#\r\r1、拒绝一个强硬的人，最好的办法就是做个复读机。\r#\r\r举个例子给你看看：\n 同事：你帮我处理下这份文件吧！你（一脸为难，弱弱地说）：我也很想帮你，可是你看我工作这么多。同事：我的更要紧，你先处理一下。你（仍旧一脸为难）：可是我工作真的很多。同事：你还够不够朋友呀，够朋友就先帮我处理这份文件。你（一脸坚定，语气缓慢地说）：但我工作真的很多，帮不了你。\n 这一招特别适合老好人用来拒绝其他人的要求，维护自己的利益。\n因为再强硬的人，一旦遇上这种说话像复读机的人，也有种秀才遇上兵的无奈感。\n2、收到别人礼物时，表达感谢不要说“谢谢”，而要说收到礼物的心情\r#\r\r 哇塞！这个东西我想要好久了，没想到你就给我买了，你实在太懂我了。我好开心呀！\n 为什么要这么说呢？\n换位思考一下，我们精心挑选了一个礼物，最担心的就是对方会不会喜欢我们所送的礼物。\n如果对方表示出了对礼物的喜欢，还告诉我们这正是他们想要的，我们也会非常开心。\n所以，礼物是别人精心准备的，我们要用心去回应。\n3、表达对别人的感谢时，一定要有具体事例来支撑。这样的感谢会显得更真诚。\r#\r\r比如：\n 我真的很感谢你，当时在我迷茫时，你给我的XX建议对我帮助巨大，正是你的指导，我才有现在这样的成绩。\n 4、赞美别人，不要欲扬先抑，而要先扬再扬。\r#\r\r举个例子给你看看：\n 拉小黑屋说法：经理，我刚看到你时，感觉你年纪很小，还担心过你行不行，没想到接触后你这么厉害。 更好的说法：经理，我刚看到你时，觉得你年纪这么小就能做到这个位置，能力肯定很强才能这样，接触后我发现果然如此！\n 这一条我是从微博大V恶魔奶爸那里学到的，我以前也以为先说一下刻板印象，再夸对方，效果会很好。\n但是我发现把不好的说在前头，即使后面说得再好听，别人的第一印象还是会落在不好的那一句。\n这听着就好像你去面试，对面试官说：“虽然我不会，但是我可以学习。”\n所以，不要采用欲扬先抑的说法，要先扬再扬。\n5、邀请别人聚会时，在最后加上一句“如果你怕太晚了，可以早点走”。\r#\r\r邀请别人参加聚会时，很多人喜欢把一件事说得太完美，太诱人。\n但其实这对有些人来说反而是压力。\n因为他们会担心只要一参加聚会，整个晚上就会困在聚会里无法脱身，想要早点走又会扫大家的兴，为了避免麻烦，他们就会拒绝。\n所以在邀请对方后，末尾加上一句“如果你怕太晚了，可以早点走”，这样就减轻了给对方的压力，他就会比较愿意尝试了。\n6、在别人讲自己喜欢的事情时，不要泼冷水。比如：\r#\r\r 朋友：这件裙子无论是款式还是颜色都是我喜欢的！ 死亡说法：这裙子颜色这么老，你皮肤有点黑，穿起来会显得更黑。 更好说法：我也觉得这裙子和你很配，不过你也可以试试另一个颜色的，我觉得也和你很配呢！\n 7、别人请你帮忙时，无论能不能做到，都不要快速答应，更不要把话说得太满。\r#\r\r你可以先思考一会，如果决定帮，就和对方说：\n 我试试看吧，我也没有太多把握。\n 这样对方对你的预期不会太高，你办成了，对方对你会只会更加感激，没办成，对方也不太会怪你。\n8、想让人做一件事，利用期待效应，成功的概率会更大。\r#\r\r期待效应，又称为皮格马利翁效应，也就是一个人被赋予更高期望后，他会表现得更好的一种现象。\n比如，我有个朋友想让她男朋友帮忙擦窗户，以前她会这么说：\n 你去把窗户擦了，一点儿家务活也不干！\n 她男朋友听了一肚子火：\n 我很忙，没时间做家务，你爱干不干！\n 两个人很快就吵起来了。\n后来，她学了这招期待效应，现在她就这么说：\n 你个子高，过来帮我擦一下，你一伸手就能够到，真厉害！\n 她男朋友听了后顿时心花怒放，马上就拿过抹布去擦窗户。\n所以，想让人做一件事情，要多利用期待效应，少用命令的口吻，这样对方也会很乐意帮你。\n就像我对你说：“赶紧给我点个赞，总是看了不点赞”，你肯定想打我。\n但是我对你说：“你一看到好文章就点赞，真是个爱学习和乐于分享的人”，效果就会更好。\n9、当别人尴尬时，能化解别人尴尬的人，情商都很高。\r#\r\r比如上大学时，有一次一个同学迟到了一会，小跑进教室的时候，不小心绊了一跤，摔了个四脚朝天，所有人都看着他，憋笑憋得厉害，这位同学脸也憋得通红。\n老师看到了，很幽默地说了一句：“这位同学真聪明，用这样的方式来提醒大家这是讲课的重点！大家快记下重点，这是要考试的！”\n所有人立即拿起笔来划重点，没人顾得上盯着他看了。那位同学也立即爬起来走到座位上。一场尴尬就此化解了。\n10、女生说小腹痛时，别总说多喝热水。\r#\r\r这一条是说给男孩子听的。我朋友就总吐槽他男友，在她痛经时，就跟复读机似的，只会说多喝热水，把她气得够呛。\n你这个时候不要回答“多喝热水”这种找死的答案。还是默默选择去买暖宫贴给她送去，有条件的话熬煮一杯姜丝红糖水，对于缓解女生的疼痛，安抚烦躁的情绪有奇效。\n11、想让一件事落实到行动，要让人去想“如果做这件事，我要怎么做”\r#\r\r比如你之前打算和几个朋友聚餐，可是喊了很久也没成。如何才能更好落实这个聚餐的提议？\n 一般说法：大家说好周末要去聚餐的，可不要推脱呀！ 更好说法：大家说好周末要去聚餐的，你们周末哪个时间段更有空？想去哪种类型的餐厅？对餐厅地点有没有要求？\n 这样说之后，大家就会开始朝着你说的方向去讨论，越聊越具体。\n12、把是非题变成选择题。\r#\r\r是非题，就是回答除了“接受/不接受”外，就没有其他选择了。\n比如：\n 你今天负责洗碗好不好？\n 这样的问题只能回答好或者不好，没有选择的余地。\n但是如果把问题改成选择题，听起来就不一样了。比如：\n 你想选择洗碗，还是选择做菜？\n 听到这个问题的人，下意识就会去比较哪个选项更好，然后再做出选择。\n13、如果想让别人往好处想，就往好的方向提问。\r#\r\r心理学上有一个概念叫“正面检验策略”。\n也就是说如果你问对方对一件事情的看法，他会倾向于根据你的提问方向，从记忆中寻找能够符合的地方。\n比如，你问对方：“你是个细心的人吗？”，他就会回忆自己做过哪些细心的事情。\n所以，如果你想要让对方往好处想，就要往好的方向提问。\n举个例子：\n 一般说法：你今天过得怎样？ 更好说法：今天有没有发生什么好玩的事儿？\n 当然，如果你想让人宣泄情绪，也可以往坏的方向提问，比如：\n 今天有没有发生什么烦心事？\n 14、想让评论更可靠，要有所保留，只把话说到八分满，不然别人反而会怀疑你在夸大其词\r#\r\r举个例子，你想向HR推荐一个认识的人，\n 一般说法：XX领导力特别强，绝对是最适合这份工作的人了！ 更好说法：虽然我和他只合作过一次，但在那次合作中他展现了很强的领导力（可接具体事例）。如果他这次能够发挥同样的实力，我认为他非常适合这份工作！ 这样把评论建立在自己经验的基础上，主动限定评价的范围，反而会令你的话更加可靠。\n 15、别人自黑时，千万不要跟着自黑。更好的做法是捧一下对方，然后再黑自己一把\r#\r\r 朋友：唉，我最近胖了好多斤呀！ 死亡回应：对呀，你怎么变这么胖了，你最近吃什么了？ 更好回应：我没这么觉得呀，我只是发现你最近气色好好呀。你看我最近总是熬夜工作，脸色特别差。\n 16、不要在比你___的人面前说你___。\r#\r\r不要在比你矮的人面前说你矮。\n不要在比你穷的人面前说穷。 不要在比你胖的人面前说胖。\n如果你说了，别人生气翻脸了，真不要怪别人。\n17、别人诉苦时，不要好为人师，给人建议\r#\r\r一定要记住一条原则：朋友和你诉苦，吐槽烦心事时，如果他没有问你该怎么办，就不要给建议和和讲大道理，对他说：“你应该这样做\u0026hellip;\u0026hellip;” \u0026ldquo;你其实可以这样\u0026hellip;\u0026hellip;\u0026rdquo;\n这是因为，当一个人在诉苦和吐槽时，更希望得到的是理解，而不是建议\n所以，朋友诉苦时，我们要适时点头表示理解和认同，然后还要说一些表达情绪的话，比如“你可真是太难了”“如果是我，我也很生气”。\n18、对自己不是完全认同的观点，先进行肯定，然后再以补充的方式提出自己的新角度\r#\r\r 你的观点很有意思\u0026hellip;\u0026hellip;，我试着补充一个角度\u0026hellip;\u0026hellip; 有意思”这三个字，即不说赞成，也不说反对，但是在对方听来很舒服，他也更愿意倾听你接下来要说的观点。\n 19、被别人开玩笑时，最简单的回应方式是“自黑”\r#\r\r开玩笑分为两种情况，一种是善意的调侃，一种是恶意的攻击\n无论哪种情况，如果你很严肃地对对方说：“哪有这样，你不要乱讲！”，其实都会瞬间冷场。\n相反，如果被人开玩笑，你还能用开玩笑的方式来自黑，就算别人是恶意攻击你的，他也没有继续下去的动力了，你反而不会那么尴尬。\n如何自黑？一个极易上手的技巧就是——比你想的更严重。\n举个例子看看：\n A：你唱歌怎么那么难听？ 你：这叫难听？不要瞧不起人，我还可以唱得更难听！要知道，别人唱歌收钱，我唱歌真是要收尸呀！\n 再举个例子：\n A：你英语成绩怎么那么差？ 你：不要瞧不起人，我英语差，可是我语文更差呀！\n 20、和一个内向的人聊天，要善于摘樱桃，寻找对方感兴趣的话题\r#\r\r谈话中的樱桃，指的是对方话语中一些特殊的词语，也就是可以开启对方话题的关键词。比如：\n A：你周末干嘛去了？ 你：我去我同学那玩了？你呢？ A：我哪也没去，一个人待着。\n 这里的樱桃就是“一个人”，想要让谈话继续下去，就要抓住这个词，继续聊下去。比如：\n 你：一个人待着也不错。那你一个人的时候愿意做什么？ A：我喜欢看电影。\n 这里的樱桃“电影”出现了，那么我们就可以问问对方喜欢看哪些类型的电影，或者最喜欢的电影是什么。\n以上的对话很正常，但有些人到后期一聊到自己感兴趣的话题，就成了“麦霸”，完全忽略对方的感受，谈话全部围绕自己来。比如：\n 你：你最喜欢的电影是哪一部？ A：XXX。 你：我也看过那部电影，不过我不太喜欢。我更喜欢的电影是\u0026hellip;\u0026hellip;。\n 结果你说了半天，都只是你一个人在说，对方完全插不进去你的谈话。这就不是一场好的沟通了\n21、说话要从对方的利益出发\r#\r\r举个例子，你买了一箱橙子，但是太多了吃不完，希望分一点给朋友吃，应该怎么说？\n 一般说法：我买了一箱橙子，但是太多了吃不完，给你分一点吃\n  更好说法：天凉了容易感冒，听说多吃点橙子可以补充维生素C，增强免疫力。所以我买了一箱橙子，和你分着吃。\n 在第一种说法中，虽然你是好意，但是有些人听了就会认为你吃不完才想到自己，心里会有疙瘩。\n但是第二种说法就是站在对方的利益来考虑，对方听了反而会很感谢你。\n22、能听懂别人暗示的人，情商肯定高\r#\r\r技巧三\r#\r\r 1、碰到煞笔/杠精，甭管他们说什么，你都微笑着赞同  举个例子：\n表舅：读书有什么用，还不是打工人一个！你看你辛辛苦苦一个月也就挣那么几千块钱。我小学 都没读完，现在开工厂住别墅，多好。\n你：嗯嗯，表舅说得对。但是我这个人没有表舅您做生意的天赋，所以只能读书了。\n对于杠精或煞笔，你永远别想着说服他们，因为他们只相信自己所相信的。你越是反驳他们，他们越是觉得你没理。\n所以，就安安静静听他们说，不时点头赞同他们，让他们永远呆在井里，沉浸在自己的世界中，不必叫醒他们。毕竟你也叫不醒他们\n 2、别人自黑时，不要瞎跟着自黑，也不要过度吹捧人家  比如： 阿姨：唉，我越来越胖了，真羡慕你的身材。 说法 1：年纪大了都容易发福。（容易拉仇恨） 说法 2：哪里哪里，你没胖，瘦着呢。（对方以为你在嘲讽她）\n更好说法：阿姨你不能这么说，你看你又要工作，又要兼顾好家庭，能保持这样的身材已经很好了。我要是处在你这个情况，还真做不到像你一样好。（这话阿姨听了肯定开心）\n 3、因为自己的错误而被批评，要好好道歉，不要陷在负面情绪中  比如： 同事：我不是告诉过你要 XXX 吗？/你就不会 XXX 吗？真是把我气到了。\n作为新人的你：真是对不起，我之前没注意到，我这就去改。你看我自己犯蠢，都把你气到了，我给你买杯奶茶喝，你消消气。\n人都喜欢听到赞美自己的话，不喜欢被人批评，所以听到批评自己的话，都会本能排斥。\n但如果对方对你的批评，是因为你真做错了事情，那就好好道歉，给对方买杯奶茶，让对方消气。 这样说后，对话反而会觉得自己是不是说得太过了。\n 4、批评别人时，加入自己的感受，试着让对方理解，效果会更好  比如：\n这个季度销售业绩很差，我在跟老板汇报的时候很尴尬，顶着巨大的压力，希望大家认识到事情的严重性，努力完成业绩目标。\n这样的批评虽然指出业绩差这个事实，但语气一点也不强烈，同时还表达了自己的感受——觉得尴尬，最后还表达出自己的希望。\n整句话听起来一点也不刺耳，让人的接受度更高。\n 5、想要表示你在认真倾听别人说话，可以有效重复对方的话  比如：\n老板：今年公司业绩总体与去年持平，其它几家竞争公司还不如咱们。今年光景不好，能做到这样很不错了。\n你（点头示意，表示认同）：嗯，您讲得很对，今年业界形势普遍不好。据我了解，我们公司比其他几家公司情况稍好，至少接了好几个大单子。\n这里的有效重复，并不是把对方的话再说一遍，而是重复对方话中的关键点。这样不仅会让对方觉得你在认真听，而且也有助于对方继续讲下去。\n 6、能用商量的语气说话，就不要用命令的语气说话  比如：\n命令口吻：你去帮我搬一箱水过来。我手疼，搬不动。\n商量语气：我手受伤了，你能不能帮我帮一箱水过来？我实在抬不动。\n第一种说法用命令式的口吻，会令人反感，对方会想着：凭什么帮你呀！虽然后面也解释了原因，但是对方还是会觉得请求帮助语气过于强硬。\n第二种说法就是用一种商量和示弱的语气在请求帮忙，大多数人都能表示理解，成功率会更大。\n 7、面对不好回答的问题时，可以采用避实就虚的策略  比如：\n八卦同事：你觉得这次和 X 公司的合作前景如何？\n沉稳的你：这次合作虽然存在很多困难，但是对我们公司来说是一次机会。\n八卦同事：你觉得咱们的利润能有多少？\n沉稳的你：今年的业绩肯定不会太差。\n这样避开真正的问题，只回复一些虚的说法，起码不用担心回答不好会引来更严重的问题。\n 8、想要和别人拉近关系，可以聊聊对方得意的事情  比如你和一个客户初次见面，知道他喜欢写作，还出版过一部畅销书，那么你可以这么说：\n赵经理，我很早之前就听过你名字了。你曾经出版过一部畅销书，我读了后觉得你写得真不错，我从中也学到了挺多的。怪不得书那么受欢迎。\n对方听了你的话，也会觉得很开心，这样你们彼此间的陌生感就很快消除了。\n 9、夸人夸细节才能打动人  比如：\n一般说法：你今天很漂亮。 更好说法:你今天的口红色号和你的妆真配\n参考\n"}),a.add({id:207,href:'/life/docs/javadir/thread/repeat_lock/',title:"java重复加锁",section:"多线程与并发 ",content:" 可重入锁，从字面来理解，就是可以重复进入的锁\n   可重入锁，也叫做递归锁，指的是同一线程外层函数获得锁之后，内层递归函数仍然有获取该锁的代码，但不受影响\n  在java环境下reentrantlock和synchronized都是可重入锁\n  可重入锁的实现原理\r#\r\r  加锁时，需要判断锁是否已经被获取。如果已经被获取，则判断获取锁的线程是否是当前线程。如果是当前线程，则给获取次数加1。如果不是当前线程，则需要等待\n  释放锁时，需要给锁的获取次数减1，然后判断，次数是否为0了。如果次数为0了，则需要调用锁的唤醒方法，让锁上阻塞的其他线程得到执行的机会\n  模拟实现简单的可重入锁\r#\r\rpublic class RepeatLock { //private UnreentrantLock unreentrantLock = new UnreentrantLock();  private ReentrantLock reentrantLock = new ReentrantLock(); //加锁建议在try里面，解锁建议在finally  public void methodA() throws InterruptedException { try { reentrantLock.lock(); System.out.println(\u0026#34;methodA方法被调用\u0026#34;); methodB(); } finally { reentrantLock.unlock(); } } public void methodB() { try { reentrantLock.lock(); System.out.println(\u0026#34;methodB方法被调用\u0026#34;); } catch (InterruptedException e) { e.fillInStackTrace(); } finally { reentrantLock.unlock(); } } public static void main(String[] args) throws InterruptedException { for (int i = 0; i \u0026lt; 10; i++) { //演示的是同个线程多次加锁  new RepeatLock().methodA(); } } } class ReentrantLock { private boolean isLocked = false; private int lockedCount = 0; private Thread lockedOwner = null; public synchronized void lock() throws InterruptedException { Thread currentThread = Thread.currentThread(); //如果不是同一个线程上锁就等待  if (isLocked \u0026amp;\u0026amp; currentThread.getId() != lockedOwner.getId()) { System.out.println(\u0026#34;进入wait等待 \u0026#34; + Thread.currentThread().getName()); System.out.println(\u0026#34;当前锁状态 isLocked = \u0026#34; + isLocked); System.out.println(\u0026#34;当前count数量 lockedCount = \u0026#34; + lockedCount); wait(); } //标记锁住状态和当前线程和锁计数器自增  isLocked = true; lockedOwner = currentThread; lockedCount++; } public synchronized void unlock() { Thread currentThread = Thread.currentThread(); System.out.println(\u0026#34;进入unlock解锁 \u0026#34; + Thread.currentThread().getName()); //如果当前线程是该锁的持有者  if (currentThread.getId() == this.lockedOwner.getId()) { //解锁的时候锁计数器自减  lockedCount--; //直到减少至为零的时候标记为未锁状态线程持有置空唤醒等待(需要拿锁的线程)  if (lockedCount == 0) { isLocked = false; lockedOwner = null; notify(); } } } } ReentrantLock\r#\r\r  重入锁 ReentrantLock，顾名思义，就是支持重进入的锁，它表示该锁能够支持一个线程对资源的重复加锁。除此之外，该锁还支持获取锁时的公平和非公平性选择\n  所谓不支持重进入，可以考虑如下场景：当一个线程调用 lock() 方法获取锁之后，如果再次调用 lock() 方法，则该线程将会被自己阻塞，原因是在调用 tryAcquire(int acquires) 方法时会返回 false，从而导致线程阻塞\n  重进入特性的实现需要解决以下两个问题\r#\r\r  线程再次获取锁\n  锁需要去识别获取锁的线程是否为当前占据锁的线程，如果是，则再次成功获取\n  锁的最终释放\n  线程重复 n 次获取锁，随后在第 n 次释放该锁后，其他线程能获取到锁。实现此功能，理应考虑使用计数\n   ReentrantLock 通过组合自定义同步器来实现锁的获取与释放，以非公平锁实现为例，获取同步状态的代码如下所示，主要是增加了再次获取同步状态的处理逻辑  final boolean nonfairTryAcquire(int acquires) { final Thread current = Thread.currentThread(); int c = getState(); if (c == 0) { if (compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); return true; } } // 判断当前线程是否为获取锁的线程  else if (current == getExclusiveOwnerThread()) { // 将同步值进行增加，并返回 true  int nextc = c + acquires; if (nextc \u0026lt; 0) throw new Error(\u0026#34;Maximum lock count exceeded\u0026#34;); setState(nextc); return true; } return false; }  考虑到成功获取锁的线程再次获取锁，只是增加同步状态值，这也就要求 ReentrantLock 在释放同步状态时减少同步状态值，该方法代码如下：  protected final boolean tryRelease(int releases) { // 减少状态值  int c = getState() - releases; if (Thread.currentThread() != getExclusiveOwnerThread()) throw new IllegalMonitorStateException(); boolean free = false; // 当同步状态为0，将占有线程设为null，并返回true，表示释放成功  if (c == 0) { free = true; setExclusiveOwnerThread(null); } setState(c); return free; } "}),a.add({id:208,href:'/life/docs/javadir/thread/tool/completionservice/',title:"CompletionService",section:"并发工具 ",content:"CompletionService\r#\r\r"}),a.add({id:209,href:'/life/docs/%E8%84%9A%E6%9C%AC/webpack%E5%92%8Cnodejs%E5%85%B3%E7%B3%BB/',title:"webpack和nodejs关系 ",section:"脚本",content:"webpack和nodejs关系\r#\r\r webpack可以将 .vue 文件转换为 .js 文件，而这个转换需要借助打包器vue-loader，这个打包器的下载是在node环境使用 npm 下载的（npm类似与一个应用商店，里面有很多包）；这样webpack在打包的时候是在node环境中运行的。\n  nodejs是js后端运行平台，可以把它看成java体系中对应的jdk，是三个里面最基础的。 npm是nodejs的包管理工具，可以把它看成maven中包依赖管理那部分。 webpack是前端工程化打包工具，可以把它看成maven中工程自动化那部分  npm\r#\r\rnpm是什么\r#\r\r是Node.js的包管理工具，是全球最大的开发库生态系统（注册表）\r为何产生？\r#\r\r当网站的依赖的js越来越多，程序员发现这是一件麻烦事：\r去JQuery官网下载JQuery，去 BootStrap 官网下载 BootStrap ，去 Underscore 官网下载 Underscore .......没完没了\r于是npm就出来了（全称 Node Package Manager 包管理工具），大家把自己写好的源码上传到npm官网上，如果要用某个或某些个，直接通过npm安装就可以了，并且模块A依赖B，B依赖C、D，此时只需安装A即可，因为此时npm会根据依赖关系，把所有依赖的包都下载下来并且管理起来；\r这一点和maven、gradle十分相似，只不过maven、gradle是用来管理java jar包的，而npm是用来管理js的。\r常用命令\r#\r\r npm init：初始化一个项目包，包含package.json文件 npm install：package.json的devDependencies字段里的插件全部安装到node_modules下  node\r#\r\rnode.js是javascript的一种运行环境，是对Google V8引擎进行的封装。是一个服务器端的javascript的解释器。\r包含关系，nodejs中含有npm，比如说你安装好nodejs，你打开cmd输入npm -v会发现出啊线npm的版本号，说明npm已经安装好。\rwebpack\r#\r\rWebpack 是一个前端资源加载/打包工具。它将根据模块的依赖关系递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将这些模块按照指定的规则生成对应的静态资源。\r我们为什么使用webpack?\r#\r\r开发是时候需要一个开发环境，要是我们修改一下代码保存之后浏览器就自动展现最新的代码就好了（热更新服务）\r本地代码的时候，要是调后端的接口不跨域就好了（代理服务）\r为了跟上时代，要是能用上ES678N就好了（翻译服务）\r项目要上线了，要是能一键压缩代码，图片什么的就好了（压缩打包服务）\r我们平时的静态资源都是放到CDN上的，要是能自动帮我把这些搞好的静态资源怼到CDN上就好了（自动上传服务）\r这么多服务，我们需要webpack帮我们去整合那么多的服务，而node的出现，赋予了我们操作系统的能力，要根据自己的需求来使用webpack，知道自己需要什么样的服务，webpack能不能提供这样的服务，如果可以，那么这个服务应该在构建中的呢个环节被处理。\r1.如果与输入相关的需求，找entry（比如多页面就有多个入口）\r2.如果与输出相关的需求，找output（比如你要定义输出文件的路径）\r3.如果与模块寻址相关的需求，找resolve（比如定义别名alias）\r4.如果与转译相关的需求，找loader（比如处理sass处理es678N）\r5.如果与构建流程相关的需求，找plugin（比如我需要在打包完成后，将打包好的文件复制到某个目录，然后提交到git上）\r4人点赞\r工程化\r其它\r#\r\r  提问：\n  1.webpack安装一般使用npm，那么也需要安装node，而后台不想用nodeJs编写，这样是不是多余，毕竟不用nodeJs,为什么要因为使用webpage而被动安装node呢？（请原谅我对这方面知识的欠缺= =）\n  2.不仅是vue.js使用npm，很多好的框架和工具都使用，这里还请大神告诉我npm、node、nodejs他们之间的关系，好混乱啊。。\n  问题一：\n  使用webpack跟后台是否用nodejs无关，因为webpack在执行打包压缩的时候是依赖nodejs的，没有nodejs就不能使用webpack就好比你要使用电灯，首先必须得有电流，而电流是需要发动机来发电的，你不能因为说我不要发动机而直接使用电流吧~\n  问题二：\n  node和nodejs就是同一个东西，只是名字不同而已，而npm只是nodejs的一个模块\n  webpack是基于nodejs实现的， Node.js 是前端工程化的重要支柱之一\nwebpack打包后的web工程，不需要一定在nodejs环境中运行 比如在apache中也可以运行\n"}),a.add({id:210,href:'/life/docs/javadir/groovy/groovy%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF/',title:" groovy使用场景 ",section:"groovy 学习与使用 ",content:"groovy 使用场景\r#\r\rGroovy可以用于多种情况。比如\r#\r\r  1、作为shell脚本语言完成数据处理和文件操作任务。\n  2、在Java或者Java EE应用程序中嵌入Groovy，实现Java和Groovy的集成。（这样有助于编写和集中处理经常变化的业务逻辑，或者给应用程序架构提供可编程的配置管理能力。）\n  Groovy是增强Java平台的唯一的脚本语言。\r#\r\r 它提供了类似于Java的语法，内置映射（Map）、列表（List）、方法、类、闭包（closure）以及生成器。  脚本语言与系统编程语言：\r#\r\r 脚本语言不会替代系统编程语言，两者是相互补充的。\n 系统编程语言的目的：\r#\r\r  开发复杂的算法或者数据结构\n  实现计算密集型应用\n  操作大型数据集\n  实现定义良好的、变更缓慢的需求\n  脚本语言应用的目的：\r#\r\r  连接已有的组件\n  处理经常变化的多种类型的实体\n  具有图形化用户界面\n  拥有快速变化的功能\n  Java编译器会产生可以在Java虚拟机上运行的字节码。\r#\r\rGroovy类和Java是二进制兼容的。\r#\r\rGroovy编译器产生的字节码与Java编译器产生的字节码是完全一样的。\r#\r\r——对于JVM而言，Groovy和Java是完全一样的。\r#\r\r因此，Groovy能够完全使用各种Java API。\r#\r\rGroovy是一门面向对象的语言。也就是说，Groovy中每一个事物最终都会被当做某些类 的一个实例对象。\r#\r\r"}),a.add({id:211,href:'/life/docs/operating_system/one_chapter/1_7_/',title:" 操作系统的体系结构 ",section:"第一章 操作系统概述 ",content:"一:知识总览\r#\r\r操作系统的内核\r#\r\r二:知识回顾与重要考点\r#\r\r"}),a.add({id:212,href:'/life/docs/javadir/middleware/rabbit-mq/',title:"rabbit-mq",section:"中间件 ",content:"RabbitMQ\r#\r\rRabbitMQ 的概念\r#\r\r RabbitMQ 是一个消息中间件：它接受并转发消息。你可以把它当做一个快递站点，当你要发送一个包 裹时，你把你的包裹放到快递站，快递员最终会把你的快递送到收件人那里，按照这种逻辑 RabbitMQ 是 一个快递站，一个快递员帮你传递快件。RabbitMQ 与快递站的主要区别在于，它不处理快件而是接收， 存储和转发消息数据。\n AMQP模型\r#\r\r 为了实现消息的设计因此产生了AMQP模型\n 四大核心概念\r#\r\r生产者\r#\r\r产生数据发送消息的程序是生产者\n交换机\r#\r\r交换机是 RabbitMQ 非常重要的一个部件，一方面它接收来自生产者的消息，另一方面它将消息 推送到队列中。交换机必须确切知道如何处理它接收到的消息，是将这些消息推送到特定队列还是推 送到多个队列，亦或者是把消息丢弃，这个得有交换机类型决定\n队列\r#\r\r队列是 RabbitMQ 内部使用的一种数据结构，尽管消息流经 RabbitMQ 和应用程序，但它们只能存 储在队列中。队列仅受主机的内存和磁盘限制的约束，本质上是一个大的消息缓冲区。许多生产者可 以将消息发送到一个队列，许多消费者可以尝试从一个队列接收数据。这就是我们使用队列的方式\n消费者\r#\r\r消费与接收具有相似的含义。消费者大多时候是一个等待接收消息的程序。请注意生产者，消费 者和消息中间件很多时候并不在同一机器上。同一个应用程序既可以是生产者又是可以是消费者。\nRabbitMQ 核心部分\r#\r\r各个名词介绍\r#\r\r  Broker：接收和分发消息的应用，RabbitMQ Server 就是 Message Broker\n  Virtual host：出于多租户和安全因素设计的，把 AMQP 的基本组件划分到一个虚拟的分组中，类似 于网络中的 namespace 概念。当多个不同的用户使用同一个 RabbitMQ server 提供的服务时，可以划分出 多个 vhost，每个用户在自己的 vhost 创建 exchange／queue 等\n  Connection：publisher／consumer 和 broker 之间的 TCP 连接\n  Channel：如果每一次访问 RabbitMQ 都建立一个 Connection，在消息量大的时候建立 TCP Connection 的开销将是巨大的，效率也较低。Channel 是在 connection 内部建立的逻辑连接，如果应用程 序支持多线程，通常每个 thread 创建单独的 channel 进行通讯，AMQP method 包含了 channel id 帮助客 户端和 message broker 识别 channel，所以 channel 之间是完全隔离的。Channel 作为轻量级的 Connection 极大减少了操作系统建立 TCP connection 的开销\n  Exchange：message 到达 broker 的第一站，根据分发规则，匹配查询表中的 routing key，分发 消息到 queue 中去。常用的类型有：direct (point-to-point), topic (publish-subscribe) and fanout (multicast)\n  Queue：消息最终被送到这里等待 consumer 取走\n  Binding：exchange 和 queue 之间的虚拟连接，binding 中可以包含 routing key，Binding 信息被保 存到 exchange 中的查询表中，用于 message 的分发依据\n  Routing Key:生产者将消息发送到交换机时会携带一个key,来指定路由规则\n  binding Key:在绑定Exchange和Queue时，会指定一个BindingKey,生产者发送消息携带的RoutingKey会和bindingKey对比，若一致就将消息分发至这个队列\n  安装用户\n  -- 创建账号 C:\\Users\\noatn\u0026gt;rabbitmqctl add_user admin 123456 Adding user \u0026#34;admin\u0026#34; ... Done. Don\u0026#39;t forget to grant the user permissions to some virtual hosts! See \u0026#39;rabbitmqctl help set_permissions\u0026#39; to learn more. -- 设置用户角色 C:\\Users\\noatn\u0026gt;rabbitmqctl set_user_tags admin administrator Setting tags for user \u0026#34;admin\u0026#34; to [administrator] ... -- 设置用户权限 C:\\Users\\noatn\u0026gt;rabbitmqctl set_permissions -p \u0026#34;/\u0026#34; admin \u0026#34;.*\u0026#34; \u0026#34;.*\u0026#34; \u0026#34;.*\u0026#34; Setting permissions for user \u0026#34;admin\u0026#34; in vhost \u0026#34;/\u0026#34; ... C:\\Users\\noatn\u0026gt;rabbitmqctl list_users Listing users ... user tags admin [administrator] guest [administrator] -- 删除用户 rabbitmqctl delete_user javaboy -- 修改用户密码 rabbitmqctl change_password javaboy 123456 -- 设置用户角色 rabbitmqctl set_user_tags javaboy administrator  管理 vhost  # 添加 rabbitmqctl add_vhost myvh # 查看 rabbitmqctl list_vhosts # 删除 rabbitmqctl delete_vhost myvh # 添加虚拟主机权限 rabbitmqctl set_permissions -p myvh guest \u0026#34;.*\u0026#34; \u0026#34;.*\u0026#34; \u0026#34;.*\u0026#34; # 禁止某个用户使用某个虚拟主机 rabbitmqctl clear_permissions -p myvh guest 管理页面创建 vhost\n在 admin 选项卡中，点击右边的 Virtual Hosts\n 其它命令  启动:service rabbitmq-server start\n关闭:service rabbitmq-server stop\n重启:service rabbitmq-server restart\n启动rabbitmq：rabbitmq-service start\n关闭rabbitmq：rabbitmq-service stop\n关闭应用：rabbitmqctl stop_app\n启动应用：rabbitmqctl start_app\n查看所有的队列：rabbitmqctl list_queues\n清除所有的队列：rabbitmqctl reset\n查看用户：rabbitmqctl list_users\n查看状态：rabbitmqctl status\n查看集群状态：rabbitmqctl cluster_status\n查看应用\n下载地址\n官方核心部分示例\n官方AMQP模型说明\n官方configure参数说明\n官方Queue说明\n官方总文档\n官方server文档\n官方手册里面包含一些重要参数\n参考1 参考2 参考3\n"}),a.add({id:213,href:'/life/docs/databases/mysql/mysql_install_problem/',title:"windows下 Mysql安装的一些问题解决方法",section:"mysql学习笔记",content:"windows下 Mysql安装的一些问题解决方法\r#\r\r1: The service already exists\r#\r\r  在mysql安装的时候要执行 mysqld \u0026ndash;install 这个命令,假如你已经安装完之后觉得不对，但是mysql服务已经生成(windows注册服务已经有mysql了),你不删除此服务为报一个错误\n  The service already exists\n  决绝方法就是 删除mysql相关的服务\n  首先查询下是否存在mysql服务\n  sc query mysql\rSERVICE_NAME: mysql\rTYPE : 10 WIN32_OWN_PROCESS\rSTATE : 4 RUNNING\r(STOPPABLE, PAUSABLE, ACCEPTS_SHUTDOWN)\rWIN32_EXIT_CODE : 0 (0x0)\rSERVICE_EXIT_CODE : 0 (0x0)\rCHECKPOINT : 0x0\rWAIT_HINT : 0x0\r# 这种情况就是mysql 没有删除干净\r 删除该mysql  sc delete mysql\r Please consider using UTF8MB4 in order to be unambiguous.  utf 的别名是 UTF8MB4\r这里在my.ini 的文件中最好是设置 default-character-set=utf8mb4  windows系统下Mysql服务启动后立即关闭问题-排查及解决方法  查看 my.ini 中 多了这个 skip-grant-tables ,这个的原意思是跳过检查,但是在不同版本有些命令是不能使用的\r然后就是目前我暂时发现我自己使用的这个版本出了这个问题,在不同版本下最好是仔细查看配置和日志才是解决之道\r"}),a.add({id:214,href:'/life/docs/javadir/tooldoc/js_console%E7%94%A8%E6%B3%95/',title:"常用 Console 调试命令",section:"Java公共库文档总结 ",content:"Console 对象方法\r#\r\r  常用 Console 调试命令\n  console.log('hello');\rconsole.info('信息');\rconsole.error('错误');\rconsole.warn('警告');\rassert()\r#\r\r ssert方法接受两个参数，第一个参数是表达式，第二个参数是字符串。只有当第一个参数为false，才会输出第二个参数，否则不会有任何结果。  // 实例\rconsole.assert(true === false, \u0026quot;判断条件不成立\u0026quot;)\r// Assertion failed: 判断条件不成立\rclear()\r#\r\r 清除当前控制台的所有输出，将光标回置到第一行。  console.clear()\rcount()\r#\r\r 用于计数，输出它被调用了多少次。  (function() {\rfor (var i = 0; i \u0026lt; 5; i++) { console.count('count'); }\r})()\rerror()\r#\r\r 输出信息时，在最前面加一个红色的叉，表示出错，同时会显示错误发生的堆栈。  console.error(\u0026quot;Error: %s (%i)\u0026quot;, \u0026quot;Server is not responding\u0026quot;,500)\rgroup()\r#\r\r 用于将显示的信息分组，可以把信息进行折叠和展开。  console.group('第一层');\rconsole.group('第二层');\rconsole.log('error');\rconsole.error('error');\rconsole.warn('error');\rconsole.groupEnd(); console.groupEnd();\rinfo()\r#\r\r console.log 别名，输出信息  console.info(\u0026quot;runoob\u0026quot;)\rlog()\r#\r\r 输出信息  console.log(\u0026quot;runoob\u0026quot;)\rtable()\r#\r\r 将复合类型的数据转为表格显示。  var arr= [ { num: \u0026quot;1\u0026quot;},\r{ num: \u0026quot;2\u0026quot;}, { num: \u0026quot;3\u0026quot; }\r];\rconsole.table(arr);\rvar obj= {\ra:{ num: \u0026quot;1\u0026quot;},\rb:{ num: \u0026quot;2\u0026quot;},\rc:{ num: \u0026quot;3\u0026quot; }\r};\rconsole.table(obj);\rtime()\r#\r\r++ 计时开始\nconsole.time('计时器1');\rfor (var i = 0; i \u0026lt; 100; i++) {\rfor (var j = 0; j \u0026lt; 100; j++) {}\r}\rconsole.timeEnd('计时器1');\rconsole.time('计时器2');\rfor (var i = 0; i \u0026lt; 1000; i++) {\rfor (var j = 0; j \u0026lt; 1000; j++) {}\r}\rconsole.timeEnd('计时器2');\rtimeEnd()\r#\r\r 计时结束  console.time('计时器1');\rfor (var i = 0; i \u0026lt; 100; i++) {\rfor (var j = 0; j \u0026lt; 100; j++) {}\r}\rconsole.timeEnd('计时器1');\rconsole.time('计时器2');\rfor (var i = 0; i \u0026lt; 1000; i++) {\rfor (var j = 0; j \u0026lt; 1000; j++) {}\r}\rconsole.timeEnd('计时器2');\rwarn()\r#\r\r 输出警告信息  console.warn(\u0026quot;警告\u0026quot;)\r 最常用的就是 console.log 了。 console上述的集中度支持printf的占位符格式，支持的占位符有：字符（%s）、整数（%d或%i）、浮点数（%f）和对象（%o）:   占位符	作用\r%s	字符串\r%d or %i	整数\r%f	浮点数\r%o	可展开的DOM\r%O	列出DOM的属性\r%c	根据提供的css样式格式化字符串\r实例:\rconsole.log(\u0026quot;%d年%d月%d日\u0026quot;,2011,3,26);\r"}),a.add({id:215,href:'/life/docs/operating_system/two_chapter/2_2_2/',title:"进程调度的时机、切换与过程、方式",section:"第二章 进程管理 ",content:""}),a.add({id:216,href:'/life/docs/algorithm/data-structure/stack/',title:"栈",section:"数据结构",content:"栈 - LIFO\r#\r\r实现\n 使用数组实现的叫静态栈 使用链表实现的叫动态栈  "}),a.add({id:217,href:'/life/docs/javadir/basedir/java-basic-jdk8-stream_base/',title:"Java8 流式数据处理 短介绍",section:"Java基础知识 ",content:"一:流介绍\r#\r\r 流表面上看起来和集合很类似，都可以让我们转换和获取数据。但是，它们之间存在着显著的差异; 1:流并不能存储元素，这些元素可能存储在底层的集合中,或者是按需生成的 2:流的操作不会修改其数据源。例如filter方法不会从新的流移除元素，而是会生成一个新的流，其中不包含被过滤掉的元素。 3:流的操作是尽可能的惰性的。这意味着直至需要其结果时，操作才会执行。  流机器（动画来自 Tagir Valeev）\rStream的效果就像上图展示的它可以先把数据变成符合要求的样子（map），吃掉不需要的东西（filter）然后得到需要的东西（collect）。\r 流API UML  二:流创建\r#\r\r   说明 示 例     创建不包括任何元素的流 Stream stream = Stream.empty()   of方法具有可变长参数,因此我们可以构建具有任意数量引元的流 Stream song = Stream.of(\u0026ldquo;gently\u0026rdquo; ,\u0026ldquo;down\u0026rdquo;,\u0026ldquo;the\u0026rdquo;,\u0026ldquo;stream\u0026rdquo;);或者Stream song = Stream.of(\u0026ldquo;stream\u0026rdquo;);   Stream一共有2个创建无限流的静态方法 generate()和iterate()   generate方法会接受一个不包含任何引元的函数 Stream stream = Stream.generate(() -\u0026gt; UUID.randomUUID().toString())或者Stream stream = Stream.generate(() -\u0026gt; UUID.randomUUID().toString()).limit(20);//20个    "}),a.add({id:218,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/we4ycwfxb7/',title:"我自己理解的口才练习技巧",section:"自信",content:" 1、朗读朗诵。  自己读书,大声地读出来。每天坚持朗读一些文章既可以口齿清晰伶俐,又积累了知识信息量,更重要的是对身体大有益处 每天坚持朗读半小时以上\n  2、(气息和声)尝试躺下来朗读 腹式呼吸，这是练声练气的最好方法每天睡觉之前，躺着大声朗读十分钟，每天起床之前，先唱首歌。坚持一两个月，觉会感觉自己的呼吸流畅了，声音洪亮，音质也好听了\n  3、对着镜子练习并且录音摄像 便于观察自己哪里有问题\n  4、速读训练 是在于锻炼人口齿伶俐，语音准确，吐字清晰\n  5、即兴朗读 平时空闲时，你可以随便拿一张报纸，任意翻到一段，然后尽量一气呵成的读下去。而且，在朗读过程中，能够注意一下，上半句看稿子，下半句离开稿子看前面（假设前面有听众）。长期以往，你发现自己记忆力加强许多，快速理解力和即兴构思能力也在加强。\n  6、复述法 复述法简单地说，就是把别人的话重复地叙述一遍。可以找一位伙伴一起训练。首先，请对方随便讲一个话题，或是一个故事。自己先注意倾听。然后再向对方复述一遍。这种练习在于锻炼语言的连贯性及现场即兴构思能力，和语言组织能力。如果能面对众人复述就更好了，它还可以锻炼你的胆量，克服紧张心理。\n  7、练唇和舌 大概就是在嘴巴里绕舌头\n  8、微笑练习 日本微笑瑜伽\n  （1）面对镜子，将上排牙齿咬住下唇\n（2）将上唇用力往上拉起，直到露出牙龈为止\n（3）再将嘴角用力提起，直到脸颊两边肌肉颤抖\n（4）接着用力睁大双眼，保持 2 分钟\n"}),a.add({id:219,href:'/life/docs/javadir/thread/park/',title:"park",section:"多线程与并发 ",content:"LockSupport 原理和使用\r#\r\r一: 基本介绍\r#\r\r  LockSupport是一个线程阻塞工具类，所有的方法都是静态方法，可以让线程在任意位置阻塞，阻塞之后也有对应的唤醒方法。归根揭底，LockSupport调用的是Unsafe中的native代码\n  LockSupport类使用了一种名为Permit（许可）的概念来做到阻塞和唤醒线程的功能，每个线程都有一个许可（permit）。\n  permit只有两个值1和0，默认是0。\n  可以把许可看成是一种（0，1）信号量（Semaphore），但与Semaphore不同的是，许可的累加上限是1。\n  permit默认是0，所以一开始调用park()方法，当前线程就会阻塞，直到别的线程将当前线程的permit设置为1时，park()方法会被唤醒，然后会将permit再次设置为0并返回。\n  面试题套路\r#\r\r为什么可以先唤醒线程后阻塞线程\r-----因为unpark获取了一个凭证，之后再调用park方法，就可以名正言顺的凭证消费，故不会阻塞。\r为什么唤醒两次后阻塞两次，但最终结果还会阻塞线程？\r-----因为凭证的数量最多为1，连续调用两次unpark和调用一次unpark效果一样，只会增加一个凭证；而调用两次park却需要消费两个凭证，证不够，不能放行。\r可以把permit理解为boolean只有两个状态位置 大多数基本都使用int来描述boolean\rlet permit = 0;\r当 permit = 1是阻塞\r//第一次 unpark\rpermit--\rpark\rpermit++\r检测permit=0不会阻塞\runpark\runpark 第二次 permit由于只能是0和1 所以第二次没有效果\rpark permit 回到初始值\rpark permit达到了阻塞情况 阻塞\r  3种让线程等待和唤醒的方法\n  1:使用Object中的wait()方法让线程等待，使用Object中的notify()方法唤醒线程\n  2:使用JUC包中Condition的await()方法让线程等待，使用signal()方法唤醒线程\n  3:LockSupport类可以阻塞当前线程以及唤醒指定被阻塞的线程\n  二: LockSupport 主要api\r#\r\r 假如没有的就到UNSAFE类中去找 LockSupport实际调用的就是UNSAFE  public static void park(Object blocker); // 暂停当前线程 public static void parkNanos(Object blocker, long nanos); // 暂停当前线程，不过有超时时间的限制 public static void parkUntil(Object blocker, long deadline); // 暂停当前线程，直到某个时间 public static void park(); // 无期限暂停当前线程 UNSAFE.park(false, 0L)调用的就是下面这个方法 public native void park(boolean isAbsolute, long time);//第一个参数是是否是绝对时间，第二个参数是等待时间值。如果isAbsolute是true则会实现ms定时。如果isAbsolute是false则会实现ns定时。 public static void parkNanos(long nanos); // 暂停当前线程，不过有超时时间的限制 public static void parkUntil(long deadline); // 暂停当前线程，直到某个时间 public static void unpark(Thread thread); // 恢复当前线程 public static Object getBlocker(Thread t); //返回提供给最近一次尚未解除阻塞的 park 方法调用的 blocker 对象，如果该调用不受阻塞，则返回 null。 public native void park(boolean isAbsolute, long time);\r#\r\r 第一个参数是是否是绝对时间，第二个参数是等待时间值。如果isAbsolute是true则会实现ms定时。如果isAbsolute是false则会实现ns定时\n  简单来说 UNSAFE.park(false, 0L) UNSAFE.park(true, 0L) 效果都是一致 反正就是线程超过时间限制阻塞的时间为0\n  继续 UNSAFE.park(false, 1L) 和 UNSAFE.park(true, 1L) 区别就来了 isAbsolute true就是绝对时间(不知道是翻译原因还是怎么的应该是低精度的ms定时方法) isAbsolute false 高精度计时ns定时方法\n  isAbsolute true 低精度  public static void parkUntil(long deadline) { UNSAFE.park(true, deadline); }  isAbsolute false 高精度  public static void parkNanos(long nanos) { if (nanos \u0026gt; 0) UNSAFE.park(false, nanos); }   阻塞线程 条件\n  线程执行过程前后被锁机制给阻塞了 也就是达到了 锁的阻塞临界条件 可以参考我的 JOL工具 和 ReentrantLock\n  操作系统调度时间 触发了 这个你学了操作系统就知道了 (学习并发你如果学了操作系统会很容易明白线程的很多原理的)\n  线程到期时间\n  线程被中断 (包括异常,主动被动触发线程的终端临界机制等)\n  UNSAFE.park(true or false, 0) 直接被阻塞(理论上 因为假如permit处于初始状态的时候被调用了一次unpark那么permit处于高位1 park之后permit又回到了初始状态)\n  啰嗦一句 UNSAFE.park 和 UNSAFE.unpark 都是直接基于线程的和锁无关 一个线程要想执行必须通过重重难关才能执行 很多机制都可以使他不能执行 只要阻塞线程的某一种机制被出发那么它就会被阻塞 有点类似于 true || false 或者 true|| true 或者 false|| true 的感觉 当然了可能又很多条件不止2个boolean\n  UNSAFE 是里面大部分是native修饰的方法 也就是全部是远程调用方法 这个类是一个c++的类来实现的\n  解除阻塞线程 条件\n  解除各种锁的屏障机制\n  解除直接基于线程的屏障机制\n  恢复线程执行 必须解除所以直接或者间接 阻塞机制 并且解除后线程还处于可以被调度执行的情况\n  三:例子\r#\r\r 1  import java.util.Timer; import java.util.TimerTask; import java.util.concurrent.TimeUnit; import java.util.concurrent.atomic.AtomicBoolean; import java.util.concurrent.locks.LockSupport; public class LockSupportDemo2 { public static void main(String[] args) { AtomicBoolean atomicBoolean = new AtomicBoolean(false); long timeout = 6; Thread t1 = new Thread(() -\u0026gt; { System.out.println(\u0026#34;start \u0026#34;+Thread.currentThread().getId()); try { TimeUnit.SECONDS.sleep(timeout-1); } catch (InterruptedException e) { e.printStackTrace(); } LockSupport.park(); System.out.println(\u0026#34;park \u0026#34;+Thread.currentThread().getId()); }, \u0026#34;t1\u0026#34;); t1.start(); try { TimeUnit.SECONDS.sleep(timeout+2); } catch (InterruptedException e) { e.printStackTrace(); } LockSupport.unpark(t1); System.out.println(\u0026#34;unpark \u0026#34;+t1.getId()); } }  2  public static void main(String[] args) throws Exception { Thread A = new Thread(() -\u0026gt; { int sum = 0; for (int i = 0; i \u0026lt; 10; i++) { sum += i; } LockSupport.park(); System.out.println(sum); }); A.start(); //睡眠一秒钟，保证线程A已经计算完成，阻塞在wait方法  Thread.sleep(1000); LockSupport.unpark(A); } 四:park unpark 原理\r#\r\r每个线程都有自己的一个 Parker 对象，由三部分组成 _counter ， _cond 和 _mutex . 打个比喻线程就像一个旅人，Parker 就像他随身携带的背包，条件变量就好比背包中的帐篷。 _counter 就好比背包中的备用干粮（0 为耗尽，1 为充足）调用 park 就是要看需不需要停下来歇息,如果备用干粮耗尽，那么钻进帐篷歇息. 如果备用干粮充足，那么不需停留，继续前进调用 unpark，就好比令干粮充足. 如果这时线程还在帐篷，就唤醒让他继续前进,如果这时线程还在运行，那么下次他调用 park 时， 仅是消耗掉备用干粮，不需停留继续前进,因为背包空间有限，多次调用 unpark 仅会补充一份备用干粮\n 当前线程调用 Unsafe.park() 方法 检查 _counter ，本情况为 0，这时，获得 _mutex 互斥锁 线程进入 _cond 条件变量阻塞 设置 _counter = 0   当前线程调用 Unsafe.park() 方法 检查 _counter ，本情况为 0，这时，获得 _mutex 互斥锁 线程进入 _cond 条件变量阻塞 设置 _counter = 0   调用 Unsafe.unpark(Thread_0) 方法，设置 _counter 为 1 唤醒 _cond 条件变量中的 Thread_0 Thread_0 恢复运行 设置 _counter 为 0   调用 Unsafe.unpark(Thread_0) 方法，设置 _counter 为 1 当前线程调用 Unsafe.park() 方法检查 _counter ，本情况为 1，这时线程无需阻塞，继续运行 设置 _counter 为 0  五:park/unpark 原理总结\r#\r\rpark 操作\r#\r\r  1.获取当前线程关联的 Parker 对象。\n  2.将计数器置为 0，同时检查计数器的原值是否为 1，如果是则放弃后续操作。\n  3.在互斥量上加锁。\n  4.在条件变量上阻塞，同时释放锁并等待被其他线程唤醒，当被唤醒后，将重新获取锁。\n  5.当线程恢复至运行状态后，将计数器的值再次置为 0。\n  释放锁。\n  unpark 操作：\r#\r\r  6.获取目标线程关联的 Parker 对象（注意目标线程不是当前线程）。\n  7.在互斥量上加锁。\n  8.将计数器置为 1。\n  9.唤醒在条件变量上等待着的线程。\n  10.释放锁。\n  六:hotspot对应的类\r#\r\rclass Parker : public os::PlatformParker { private: volatile int _counter ; //计数  Parker * FreeNext ; //指向下一个Parker  JavaThread * AssociatedWith ; // 指向parker所属的线程。  public: Parker() : PlatformParker() { _counter = 0 ; //初始化为0  FreeNext = NULL ; AssociatedWith = NULL ; } protected: ~Parker() { ShouldNotReachHere(); } public: // For simplicity of interface with Java, all forms of park (indefinite,  // relative, and absolute) are multiplexed into one call.  void park(bool isAbsolute, jlong time); void unpark(); // Lifecycle operators  static Parker * Allocate (JavaThread * t) ; static void Release (Parker * e) ; private: static Parker * volatile FreeList ; static volatile int ListLock ; };  Unsafe调用的park最终会调用Parker类的park函数，Parker继承了PlatformParker  class PlatformParker : public CHeapObj\u0026lt;mtInternal\u0026gt; { protected: enum { REL_INDEX = 0, ABS_INDEX = 1 }; int _cur_index; // 条件变量数组下标，which cond is in use: -1, 0, 1  pthread_mutex_t _mutex [1] ; //pthread互斥锁  pthread_cond_t _cond [2] ; // pthread条件变量数组,一个用于相对时间，一个用于绝对时间。  public: // TODO-FIXME: make dtor private  ~PlatformParker() { guarantee (0, \u0026#34;invariant\u0026#34;) ; } public: PlatformParker() { int status; status = pthread_cond_init (\u0026amp;_cond[REL_INDEX], os::Linux::condAttr()); assert_status(status == 0, status, \u0026#34;cond_init rel\u0026#34;); status = pthread_cond_init (\u0026amp;_cond[ABS_INDEX], NULL); assert_status(status == 0, status, \u0026#34;cond_init abs\u0026#34;); status = pthread_mutex_init (_mutex, NULL); assert_status(status == 0, status, \u0026#34;mutex_init\u0026#34;); _cur_index = -1; // mark as unused  } };  PlatformParker主要看三个成员变量，_cur_index, _mutex, _cond。其中mutex和cond就是很熟悉的glibc nptl包中符合posix标准的线程同步工具，一个互斥锁一个条件变量。再看thread和Parker的关系，在hotspot的Thread类的NameThread内部类中有一个 Parker成员变量。说明parker是每线程变量，在创建线程的时候就会生成一个parker实例  // JSR166 per-thread parker private: Parker* _parker;  再看park的实现  void Parker::park(bool isAbsolute, jlong time) { //原子交换，如果_counter \u0026gt; 0,则将_counter置为0，直接返回，否则_counter为0  if (Atomic::xchg(0, \u0026amp;_counter) \u0026gt; 0) return; //获取当前线程  Thread* thread = Thread::current(); assert(thread-\u0026gt;is_Java_thread(), \u0026#34;Must be JavaThread\u0026#34;); //下转型为java线程  JavaThread *jt = (JavaThread *)thread; //如果当前线程设置了中断标志，调用park则直接返回，所以如果在park之前调用了  //interrupt就会直接返回  if (Thread::is_interrupted(thread, false)) { return; } // 高精度绝对时间变量  timespec absTime; //如果time小于0，或者isAbsolute是true并且time等于0则直接返回  if (time \u0026lt; 0 || (isAbsolute \u0026amp;\u0026amp; time == 0) ) { // don\u0026#39;t wait at all  return; } //如果time大于0，则根据是否是高精度定时计算定时时间  if (time \u0026gt; 0) { unpackTime(\u0026amp;absTime, isAbsolute, time); } //进入安全点避免死锁  ThreadBlockInVM tbivm(jt); //如果当前线程设置了中断标志，或者获取mutex互斥锁失败则直接返回  //由于Parker是每个线程都有的，所以_counter cond mutex都是每个线程都有的，  //不是所有线程共享的所以加锁失败只有两种情况，第一unpark已经加锁这时只需要返回即可，  //第二调用调用pthread_mutex_trylock出错。对于第一种情况就类似是unpark先调用的情况，所以  //直接返回。  if (Thread::is_interrupted(thread, false) || pthread_mutex_trylock(_mutex) != 0) { return; } int status ; //如果_counter大于0，说明unpark已经调用完成了将_counter置为了1，  //现在只需将_counter置0，解锁，返回  if (_counter \u0026gt; 0) { // no wait needed  _counter = 0; status = pthread_mutex_unlock(_mutex); assert (status == 0, \u0026#34;invariant\u0026#34;); OrderAccess::fence(); return; } OSThreadWaitState osts(thread-\u0026gt;osthread(), false /* not Object.wait() */); jt-\u0026gt;set_suspend_equivalent(); // cleared by handle_special_suspend_equivalent_condition() or java_suspend_self()  assert(_cur_index == -1, \u0026#34;invariant\u0026#34;); //如果time等于0，说明是相对时间也就是isAbsolute是fasle(否则前面就直接返回了),则直接挂起  if (time == 0) { _cur_index = REL_INDEX; // arbitrary choice when not timed  status = pthread_cond_wait (\u0026amp;_cond[_cur_index], _mutex) ; } else { //如果time非0  //判断isAbsolute是false还是true，false的话使用_cond[0]，否则用_cond[1]  _cur_index = isAbsolute ? ABS_INDEX : REL_INDEX; //使用条件变量使得当前线程挂起。  status = os::Linux::safe_cond_timedwait (\u0026amp;_cond[_cur_index], _mutex, \u0026amp;absTime) ; //如果挂起失败则销毁当前的条件变量重新初始化。  if (status != 0 \u0026amp;\u0026amp; WorkAroundNPTLTimedWaitHang) { pthread_cond_destroy (\u0026amp;_cond[_cur_index]) ; pthread_cond_init (\u0026amp;_cond[_cur_index], isAbsolute ? NULL : os::Linux::condAttr()); } } //如果pthread_cond_wait成功则以下代码都是线程被唤醒后执行的。  _cur_index = -1; assert_status(status == 0 || status == EINTR || status == ETIME || status == ETIMEDOUT, status, \u0026#34;cond_timedwait\u0026#34;); #ifdef ASSERT pthread_sigmask(SIG_SETMASK, \u0026amp;oldsigs, NULL); #endif //将_counter变量重新置为1  _counter = 0 ; //解锁  status = pthread_mutex_unlock(_mutex) ; assert_status(status == 0, status, \u0026#34;invariant\u0026#34;) ; // 使用内存屏障使_counter对其它线程可见  OrderAccess::fence(); // 如果在park线程挂起的时候调用了stop或者suspend则还需要将线程挂起不能返回  if (jt-\u0026gt;handle_special_suspend_equivalent_condition()) { jt-\u0026gt;java_suspend_self(); } }  再看unpark函数  void Parker::unpark() { int s, status ; //加互斥锁  status = pthread_mutex_lock(_mutex); assert (status == 0, \u0026#34;invariant\u0026#34;) ; s = _counter; _counter = 1; //将_counter置1  //如果_counter是0则说明调用了park或者没调用(初始为counter0）  //这也说明park和unpark调用没有先后顺序。  if (s \u0026lt; 1) { // 说明当前parker对应的线程挂起了，因为_cur_index初始是-1，并且等待条件变量的线程被唤醒  //后也会将_cur_index重置-1  if (_cur_index != -1) { //如果设置了WorkAroundNPTLTimedWaitHang先调用signal再调用unlock，否则相反  //这两个先后顺序都可以，在hotspot在Linux下默认使用这种方式  //即先调用signal再调用unlock  if (WorkAroundNPTLTimedWaitHang) { status = pthread_cond_signal (\u0026amp;_cond[_cur_index]); assert (status == 0, \u0026#34;invariant\u0026#34;); status = pthread_mutex_unlock(_mutex); assert (status == 0, \u0026#34;invariant\u0026#34;); } else { status = pthread_mutex_unlock(_mutex); assert (status == 0, \u0026#34;invariant\u0026#34;); status = pthread_cond_signal (\u0026amp;_cond[_cur_index]); assert (status == 0, \u0026#34;invariant\u0026#34;); } } else { //如果_cur_index == -1说明线程没在等待条件变量，则直接解锁  pthread_mutex_unlock(_mutex); assert (status == 0, \u0026#34;invariant\u0026#34;) ; } } else {//如果_counter == 1,说明线程调用了一次或多次unpark但是没调用park，则直接解锁  pthread_mutex_unlock(_mutex); assert (status == 0, \u0026#34;invariant\u0026#34;) ; }   unpark主要是根据counter和cur_index判断当前线程是否挂在条件变量上，如果是则signal，否则就什么也不做。\n  所以park和unpark和核心就是counter cur_index, mutex,cond，通过使用条件变量对counter进行操作，在调用park的时候如果counter是0则会去执行挂起的流程，否则返回，在挂起恢复后再将counter置为0。在unpark的时候如果counter是0则会执行唤醒的流程，否则不执行唤醒流程，并且不管什么情况始终将counter置为1。\n  "}),a.add({id:220,href:'/life/docs/javadir/thread/tool/executorservice/',title:"ExecutorService",section:"并发工具 ",content:"ExecutorService\r#\r\r"}),a.add({id:221,href:'/life/docs/%E8%84%9A%E6%9C%AC/webpack_loader/',title:"webpack loader",section:"脚本",content:"first css-loader\r#\r\r 文件目录  ▸\\t1 ▸ \\t1\\dist ▸ \\t1\\dist\\index.js ▸ \\t1\\node_modules ▸ \\t1\\node_modules\\.bin //省略 ▸ \\t1\\node_modules\\yocto-queue\\readme.md ▸ \\t1\\package-lock.json ▸ \\t1\\package.json ▸ \\t1\\src ▸ \\t1\\src\\index.css ▸ \\t1\\src\\index.js ▸ \\t1\\webpack.config.js  webpack.config.js content  module.exports = { entry: { index :\u0026#34;./src/index.js\u0026#34; }, mode :\u0026#39;development\u0026#39; , module :{ rules:[ {test :/.css$/ ,use : \u0026#34;css-loader\u0026#34;} ] } }  package.json content  { \u0026#34;name\u0026#34;: \u0026#34;t1\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;webpack.config.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;webpack\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;, \u0026#34;devDependencies\u0026#34;: { \u0026#34;css-loader\u0026#34;: \u0026#34;^5.2.6\u0026#34;, \u0026#34;webpack\u0026#34;: \u0026#34;^5.44.0\u0026#34;, \u0026#34;webpack-cli\u0026#34;: \u0026#34;^4.7.2\u0026#34; } }  命令  D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\u0026gt;npm init -y\rWrote to D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\package.json:\r{\r\u0026quot;name\u0026quot;: \u0026quot;t1\u0026quot;,\r\u0026quot;version\u0026quot;: \u0026quot;1.0.0\u0026quot;,\r\u0026quot;description\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;main\u0026quot;: \u0026quot;webpack.config.js\u0026quot;,\r\u0026quot;scripts\u0026quot;: {\r\u0026quot;test\u0026quot;: \u0026quot;echo \\\u0026quot;Error: no test specified\\\u0026quot; \u0026amp;\u0026amp; exit 1\u0026quot;\r},\r\u0026quot;keywords\u0026quot;: [],\r\u0026quot;author\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;license\u0026quot;: \u0026quot;ISC\u0026quot;\r}\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\u0026gt;npm add -D webpack webpack-cli\rnpm notice created a lockfile as package-lock.json. You should commit this file.\rnpm WARN t1@1.0.0 No description\rnpm WARN t1@1.0.0 No repository field.\r+ webpack-cli@4.7.2\r+ webpack@5.44.0\radded 121 packages from 155 contributors in 12.283s\r16 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\u0026gt;npm run build\r\u0026gt; t1@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\r\u0026gt; webpack\rassets by status 159 bytes [cached] 1 asset\r./src/index.js 55 bytes [built] [code generated]\rWARNING in configuration\rThe 'mode' option has not been set, webpack will fallback to 'production' for this value.\rSet 'mode' option to 'development' or 'production' to enable defaults for each environment.\rYou can also set it to 'none' to disable any default behavior. Learn more: https://webpack.js.org/configuration/mode/\rERROR in ./src/index.js 1:0-20\rModule not found: Error: Can't resolve 'index.css' in 'D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\src'\rDid you mean './index.css'?\rRequests that should resolve in the current directory need to start with './'.\rRequests that start with a name are treated as module requests and resolve within module directories (node_modules).\rIf changing the source code is not an option there is also a resolve options called 'preferRelative' which tries to resolve these kind of requests in the current directory too.\rresolve 'index.css' in 'D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\src'\rParsed request is a module\rusing description file: D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\package.json (relative path: ./src)\rField 'browser' doesn't contain a valid alias configuration\rresolve as module\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\src\\node_modules doesn't exist or is not a directory\rlooking for modules in D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\node_modules\rsingle file module\rusing description file: D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\package.json (relative path: ./node_modules/index.css)\rno extension\rField 'browser' doesn't contain a valid alias configuration\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\node_modules\\index.css doesn't exist\r.js\rField 'browser' doesn't contain a valid alias configuration\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\node_modules\\index.css.js doesn't exist\r.json\rField 'browser' doesn't contain a valid alias configuration\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\node_modules\\index.css.json doesn't exist\r.wasm\rField 'browser' doesn't contain a valid alias configuration\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\node_modules\\index.css.wasm doesn't exist\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\node_modules\\index.css doesn't exist\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\node_modules doesn't exist or is not a directory\rD:\\IdeaProjects\\cycle\\study\\webpack\\node_modules doesn't exist or is not a directory\rD:\\IdeaProjects\\cycle\\study\\node_modules doesn't exist or is not a directory\rD:\\IdeaProjects\\cycle\\node_modules doesn't exist or is not a directory\rD:\\IdeaProjects\\node_modules doesn't exist or is not a directory\rD:\\node_modules doesn't exist or is not a directory\rwebpack 5.44.0 compiled with 1 error and 1 warning in 189 ms\rnpm ERR! code ELIFECYCLE\rnpm ERR! errno 1\rnpm ERR! t1@1.0.0 build: `webpack`\rnpm ERR! Exit status 1\rnpm ERR!\rnpm ERR! Failed at the t1@1.0.0 build script.\rnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\rnpm ERR! A complete log of this run can be found in:\rnpm ERR! C:\\Users\\dell\\AppData\\Roaming\\npm-cache\\_logs\\2021-07-10T09_07_28_227Z-debug.log\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\u0026gt;npm run build\r\u0026gt; t1@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\r\u0026gt; webpack\rasset index.js 2.19 KiB [emitted] (name: index)\rruntime modules 274 bytes 1 module\r./src/index.js 55 bytes [built] [code generated]\rERROR in ./src/index.js 1:0-20\rModule not found: Error: Can't resolve 'index.css' in 'D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\src'\rDid you mean './index.css'?\rRequests that should resolve in the current directory need to start with './'.\rRequests that start with a name are treated as module requests and resolve within module directories (node_modules).\rIf changing the source code is not an option there is also a resolve options called 'preferRelative' which tries to resolve these kind of requests in the current directory too.\rresolve 'index.css' in 'D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\src'\rParsed request is a module\rusing description file: D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\package.json (relative path: ./src)\rField 'browser' doesn't contain a valid alias configuration\rresolve as module\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\src\\node_modules doesn't exist or is not a directory\rlooking for modules in D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\node_modules\rsingle file module\rusing description file: D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\package.json (relative path: ./node_modules/index.css)\rno extension\rField 'browser' doesn't contain a valid alias configuration\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\node_modules\\index.css doesn't exist\r.js\rField 'browser' doesn't contain a valid alias configuration\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\node_modules\\index.css.js doesn't exist\r.json\rField 'browser' doesn't contain a valid alias configuration\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\node_modules\\index.css.json doesn't exist\r.wasm\rField 'browser' doesn't contain a valid alias configuration\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\node_modules\\index.css.wasm doesn't exist\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\\node_modules\\index.css doesn't exist\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\node_modules doesn't exist or is not a directory\rD:\\IdeaProjects\\cycle\\study\\webpack\\node_modules doesn't exist or is not a directory\rD:\\IdeaProjects\\cycle\\study\\node_modules doesn't exist or is not a directory\rD:\\IdeaProjects\\cycle\\node_modules doesn't exist or is not a directory\rD:\\IdeaProjects\\node_modules doesn't exist or is not a directory\rD:\\node_modules doesn't exist or is not a directory\rwebpack 5.44.0 compiled with 1 error in 84 ms\rnpm ERR! code ELIFECYCLE\rnpm ERR! errno 1\rnpm ERR! t1@1.0.0 build: `webpack`\rnpm ERR! Exit status 1\rnpm ERR!\rnpm ERR! Failed at the t1@1.0.0 build script.\rnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\rnpm ERR! A complete log of this run can be found in:\rnpm ERR! C:\\Users\\dell\\AppData\\Roaming\\npm-cache\\_logs\\2021-07-10T09_08_41_846Z-debug.log\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t1\u0026gt;npm add -D css-loader\rnpm WARN t1@1.0.0 No description\rnpm WARN t1@1.0.0 No repository field.\r+ css-loader@5.2.6\radded 21 packages from 55 contributors in 8.209s\r18 packages are looking for funding\rrun `npm fund` for details\rsecond css-loader\r#\r\r 文件目录  ▸\\t2\r▸ \\t2\\dist\r▸ \\t2\\dist\\index.js\r▸ \\t2\\node_modules\r▸ \\t2\\node_modules\\.bin\r▸ \\t2\\node_modules\\.bin\\acorn\r//省略\r▸ \\t2\\node_modules\\yocto-queue\r▸ \\t2\\node_modules\\yocto-queue\\index.d.ts\r▸ \\t2\\node_modules\\yocto-queue\\index.js\r▸ \\t2\\node_modules\\yocto-queue\\license\r▸ \\t2\\node_modules\\yocto-queue\\package.json\r▸ \\t2\\node_modules\\yocto-queue\\readme.md\r▸ \\t2\\package-lock.json\r▸ \\t2\\package.json\r▸ \\t2\\src\r▸ \\t2\\src\\index.css\r▸ \\t2\\src\\index.js\r▸ \\t2\\webpack.config.js\r webpack.config.js content  const path = require(\u0026#34;path\u0026#34;) ; module.exports = { entry: { index :\u0026#34;./src/index.js\u0026#34; }, mode :\u0026#39;development\u0026#39; , output: { path: path.resolve(__dirname, \u0026#39;dist\u0026#39;) }, module :{ rules:[ {test : /.css$/ , use : \u0026#34;css-loader\u0026#34;} ] } }  package.json content  { \u0026#34;name\u0026#34;: \u0026#34;t2\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;webpack.config.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;webpack\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;, \u0026#34;devDependencies\u0026#34;: { \u0026#34;css-loader\u0026#34;: \u0026#34;^5.2.6\u0026#34;, \u0026#34;webpack\u0026#34;: \u0026#34;^5.44.0\u0026#34;, \u0026#34;webpack-cli\u0026#34;: \u0026#34;^4.7.2\u0026#34; } }  命令  D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t2\u0026gt;npm init -y\rWrote to D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t2\\package.json:\r{\r\u0026quot;name\u0026quot;: \u0026quot;t2\u0026quot;,\r\u0026quot;version\u0026quot;: \u0026quot;1.0.0\u0026quot;,\r\u0026quot;description\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;main\u0026quot;: \u0026quot;webpack.config.js\u0026quot;,\r\u0026quot;scripts\u0026quot;: {\r\u0026quot;test\u0026quot;: \u0026quot;echo \\\u0026quot;Error: no test specified\\\u0026quot; \u0026amp;\u0026amp; exit 1\u0026quot;\r},\r\u0026quot;keywords\u0026quot;: [],\r\u0026quot;author\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;license\u0026quot;: \u0026quot;ISC\u0026quot;\r}\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t2\u0026gt;npm add -D webpack webpack-cli\rnpm notice created a lockfile as package-lock.json. You should commit this file.\rnpm WARN t2@1.0.0 No description\rnpm WARN t2@1.0.0 No repository field.\r+ webpack@5.44.0\r+ webpack-cli@4.7.2\radded 121 packages from 155 contributors in 10.062s\r16 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t2\u0026gt;npm add -D css-loader\rnpm WARN t2@1.0.0 No description\rnpm WARN t2@1.0.0 No repository field.\r+ css-loader@5.2.6\radded 21 packages from 55 contributors in 3.292s\r18 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t2\u0026gt;npm run build\r\u0026gt; t2@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t2\r\u0026gt; webpack\rasset index.js 7.23 KiB [emitted] (name: index)\rruntime modules 937 bytes 4 modules\rcacheable modules 1.95 KiB\r./src/index.js 57 bytes [built] [code generated]\r./src/index.css 333 bytes [built] [code generated]\r./node_modules/css-loader/dist/runtime/api.js 1.57 KiB [built] [code generated]\rwebpack 5.44.0 compiled successfully in 311 ms\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t2\u0026gt;node dist/index.js\rhello index.js\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t2\u0026gt;\r index.css || index.js content  //css content .main { color: #0d6efd; } //js content import \u0026#34;./index.css\u0026#34; ; console.log(\u0026#34;hello index.js\u0026#34;) ; second - 2 css-loader\r#\r\r webpack.config.js content  module.exports = { entry: { index :\u0026#34;./src/index.js\u0026#34; }, mode :\u0026#39;development\u0026#39; , module :{ rules:[ {test : /.css$/ , use : \u0026#34;css-loader\u0026#34;} ] } }  其他和 second 内容一致  first [\u0026ldquo;style-loader\u0026rdquo;, \u0026ldquo;css-loader\u0026rdquo;]\r#\r\r 文件目录  ▸\\t3\r▸ \\t3\\dist\r▸ \\t3\\dist\\index.js\r▸ \\t3\\node_modules\r▸ \\t3\\node_modules\\.bin\r▸ \\t3\\node_modules\\.bin\\acorn\r//省略\r▸ \\t3\\node_modules\\yocto-queue\\index.js\r▸ \\t3\\node_modules\\yocto-queue\\license\r▸ \\t3\\node_modules\\yocto-queue\\package.json\r▸ \\t3\\node_modules\\yocto-queue\\readme.md\r▸ \\t3\\package-lock.json\r▸ \\t3\\package.json\r▸ \\t3\\src\r▸ \\t3\\src\\index.css\r▸ \\t3\\src\\index.js\r▸ \\t3\\webpack.config.js\r webpack.config.js content  const HtmlWebPackPlugin = require(\u0026#34;html-webpack-plugin\u0026#34;); module.exports = { entry: { index: \u0026#34;./src/index.js\u0026#34; }, mode: \u0026#39;development\u0026#39;, module: { rules: [ { test: /.css$/, use: [\u0026#34;style-loader\u0026#34;, \u0026#34;css-loader\u0026#34;] } ] }, plugins: [ new HtmlWebPackPlugin( { /*你帮我应用这个模板*/ template: \u0026#34;./src/indexTemplate.html\u0026#34; } ), ] }  package.json content  { \u0026#34;name\u0026#34;: \u0026#34;t4\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;webpack.config.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;webpack\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;, \u0026#34;devDependencies\u0026#34;: { \u0026#34;css-loader\u0026#34;: \u0026#34;^5.2.6\u0026#34;, \u0026#34;html-webpack-plugin\u0026#34;: \u0026#34;^5.3.2\u0026#34;, \u0026#34;style-loader\u0026#34;: \u0026#34;^3.0.0\u0026#34;, \u0026#34;webpack\u0026#34;: \u0026#34;^5.44.0\u0026#34;, \u0026#34;webpack-cli\u0026#34;: \u0026#34;^4.7.2\u0026#34; } }  index.css || index.js || indexTemplate.html  \u0026lt;! -- index.css .main { color: #0d6efd; } --\u0026gt; \u0026lt;! -- index.js import \u0026#34;./index.css\u0026#34; ; console.log(\u0026#34;hello index.js\u0026#34;) ; --\u0026gt; \u0026lt;! -- indexTemplate.html \u0026lt;div class=\u0026#34;main\u0026#34;\u0026gt; hello world \u0026lt;/div\u0026gt; --\u0026gt;  命令  D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t4\u0026gt;npm init -y\rWrote to D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t4\\package.json:\r{\r\u0026quot;name\u0026quot;: \u0026quot;t4\u0026quot;,\r\u0026quot;version\u0026quot;: \u0026quot;1.0.0\u0026quot;,\r\u0026quot;description\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;main\u0026quot;: \u0026quot;webpack.config.js\u0026quot;,\r\u0026quot;scripts\u0026quot;: {\r\u0026quot;test\u0026quot;: \u0026quot;echo \\\u0026quot;Error: no test specified\\\u0026quot; \u0026amp;\u0026amp; exit 1\u0026quot;\r},\r\u0026quot;keywords\u0026quot;: [],\r\u0026quot;author\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;license\u0026quot;: \u0026quot;ISC\u0026quot;\r}\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t4\u0026gt;npm add -D webpack webpack-cli\rnpm notice created a lockfile as package-lock.json. You should commit this file.\rnpm WARN t4@1.0.0 No description\rnpm WARN t4@1.0.0 No repository field.\r+ webpack@5.44.0\r+ webpack-cli@4.7.2\radded 121 packages from 155 contributors in 12.528s\r16 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t4\u0026gt;npm install -D --save-dev html-webpack-plugin\rnpm WARN t4@1.0.0 No description\rnpm WARN t4@1.0.0 No repository field.\r+ html-webpack-plugin@5.3.2\radded 33 packages from 19 contributors in 7.603s\r26 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t4\u0026gt;npm add -D style-loader\rnpm WARN t4@1.0.0 No description\rnpm WARN t4@1.0.0 No repository field.\r+ style-loader@3.0.0\radded 1 package from 1 contributor in 2.089s\r27 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t4\u0026gt;npm add -D css-loader\rnpm WARN t4@1.0.0 No description\rnpm WARN t4@1.0.0 No repository field.\r+ css-loader@5.2.6\radded 21 packages from 55 contributors in 3.031s\r29 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t4\u0026gt;npm run build\r\u0026gt; t4@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t4\r\u0026gt; webpack\rasset index.js 17.8 KiB [emitted] (name: index)\rasset index.html 94 bytes [compared for emit]\rruntime modules 937 bytes 4 modules\rcacheable modules 7.6 KiB\rmodules by path ./node_modules/ 5.69 KiB\r./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js 2.19 KiB [built] [code generated]\r./node_modules/style-loader/dist/runtime/styleDomAPI.js 1010 bytes [built] [code generated]\r./node_modules/style-loader/dist/runtime/getTarget.js 709 bytes [built] [code generated]\r./node_modules/style-loader/dist/runtime/insertStyleElement.js 261 bytes [built] [code generated]\r./node_modules/css-loader/dist/runtime/api.js 1.57 KiB [built] [code generated]\rmodules by path ./src/ 1.91 KiB\r./src/index.js 57 bytes [built] [code generated]\r./src/index.css 1.53 KiB [built] [code generated]\r./node_modules/css-loader/dist/cjs.js!./src/index.css 333 bytes [built] [code generated]\rwebpack 5.44.0 compiled successfully in 371 ms\r index.css index.js indexTemplate.html  .main {\rcolor: #0d6efd;\r}\rimport \u0026quot;./index.css\u0026quot; ;\rconsole.log(\u0026quot;hello index.js\u0026quot;) ;\r\u0026lt;div class=\u0026quot;main\u0026quot;\u0026gt;\rhello world\r\u0026lt;/div\u0026gt;\r run dist.index.html ==\u0026gt;  \u0026lt;body _c_t_common=\u0026#34;1\u0026#34;\u0026gt;\u0026lt;div data-v-7e2550d6=\u0026#34;\u0026#34; class=\u0026#34;odm_extension image_downloader_wrapper\u0026#34;\u0026gt;\u0026lt;!----\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;main\u0026#34;\u0026gt; hello world \u0026lt;/div\u0026gt;\u0026lt;div data-flash-app-container=\u0026#34;true\u0026#34; id=\u0026#34;flash_player_app_root\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;div id=\u0026#34;fatkun-drop-panel\u0026#34;\u0026gt; \u0026lt;a id=\u0026#34;fatkun-drop-panel-close-btn\u0026#34;\u0026gt;×\u0026lt;/a\u0026gt; \u0026lt;div id=\u0026#34;fatkun-drop-panel-inner\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;fatkun-content\u0026#34;\u0026gt; \u0026lt;svg class=\u0026#34;fatkun-icon\u0026#34; viewBox=\u0026#34;0 0 1024 1024\u0026#34; version=\u0026#34;1.1\u0026#34; xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; p-id=\u0026#34;5892\u0026#34;\u0026gt;\u0026lt;path d=\u0026#34;M494.933333 782.933333c2.133333 2.133333 4.266667 4.266667 8.533334 6.4h8.533333c6.4 0 10.666667-2.133333 14.933333-6.4l2.133334-2.133333 275.2-275.2c8.533333-8.533333 8.533333-21.333333 0-29.866667-8.533333-8.533333-21.333333-8.533333-29.866667 0L533.333333 716.8V128c0-12.8-8.533333-21.333333-21.333333-21.333333s-21.333333 8.533333-21.333333 21.333333v588.8L249.6 475.733333c-8.533333-8.533333-21.333333-8.533333-29.866667 0-8.533333 8.533333-8.533333 21.333333 0 29.866667l275.2 277.333333zM853.333333 874.666667H172.8c-12.8 0-21.333333 8.533333-21.333333 21.333333s8.533333 21.333333 21.333333 21.333333H853.333333c12.8 0 21.333333-8.533333 21.333334-21.333333s-10.666667-21.333333-21.333334-21.333333z\u0026#34; p-id=\u0026#34;5893\u0026#34;\u0026gt;\u0026lt;/path\u0026gt;\u0026lt;/svg\u0026gt; \u0026lt;div class=\u0026#34;fatkun-title\u0026#34;\u0026gt;拖拽到此处\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;fatkun-desc\u0026#34;\u0026gt;图片将完成下载\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;iframe id=\u0026#34;redeviation-bs-sidebar\u0026#34; class=\u0026#34;notranslate\u0026#34; aria-hidden=\u0026#34;true\u0026#34; data-theme=\u0026#34;default\u0026#34; data-pos=\u0026#34;right\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;div id=\u0026#34;redeviation-bs-indicator\u0026#34; data-theme=\u0026#34;default\u0026#34; class=\u0026#34;redeviation-bs-fullHeight\u0026#34; style=\u0026#34;height: 100%; top: 0%;\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/body\u0026gt; less-loader\r#\r\r 文件目录  ▸\\t6\r▸ \\t6\\dist\r▸ \\t6\\dist\\index.html\r▸ \\t6\\dist\\index.js\r▸ \\t6\\node_modules\r//省略\r▸ \\t6\\node_modules\\yocto-queue\r▸ \\t6\\node_modules\\yocto-queue\\index.d.ts\r▸ \\t6\\node_modules\\yocto-queue\\index.js\r▸ \\t6\\node_modules\\yocto-queue\\license\r▸ \\t6\\node_modules\\yocto-queue\\package.json\r▸ \\t6\\node_modules\\yocto-queue\\readme.md\r▸ \\t6\\package-lock.json\r▸ \\t6\\package.json\r▸ \\t6\\src\r▸ \\t6\\src\\base.less\r▸ \\t6\\src\\index.css\r▸ \\t6\\src\\index.js\r▸ \\t6\\src\\index.less\r▸ \\t6\\src\\indexTemplate.html\r▸ \\t6\\webpack.config.js\r webpack.config.js content  const HtmlWebPackPlugin = require(\u0026#34;html-webpack-plugin\u0026#34;); module.exports = { entry: { index: \u0026#34;./src/index.js\u0026#34; }, mode: \u0026#39;development\u0026#39;, module: { rules: [ { test: /.css$/, use: [\u0026#34;style-loader\u0026#34;, \u0026#34;css-loader\u0026#34;] , }, { test: /.less$/, use: [\u0026#34;style-loader\u0026#34;, \u0026#34;css-loader\u0026#34;,\u0026#34;less-loader\u0026#34;] , }, ] }, plugins: [ new HtmlWebPackPlugin( { /*你帮我应用这个模板*/ template: \u0026#34;./src/indexTemplate.html\u0026#34; } ), ] }  package.json content  { \u0026#34;name\u0026#34;: \u0026#34;t6\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;webpack.config.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34; , \u0026#34;build\u0026#34;: \u0026#34;webpack\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;, \u0026#34;devDependencies\u0026#34;: { \u0026#34;css-loader\u0026#34;: \u0026#34;^5.2.6\u0026#34;, \u0026#34;html-webpack-plugin\u0026#34;: \u0026#34;^5.3.2\u0026#34;, \u0026#34;less\u0026#34;: \u0026#34;^4.1.1\u0026#34;, \u0026#34;less-loader\u0026#34;: \u0026#34;^10.0.1\u0026#34;, \u0026#34;style-loader\u0026#34;: \u0026#34;^3.0.0\u0026#34;, \u0026#34;webpack\u0026#34;: \u0026#34;^5.44.0\u0026#34;, \u0026#34;webpack-cli\u0026#34;: \u0026#34;^4.7.2\u0026#34; } }  重要 html 相关  //base.less @primaryColor : lightcoral ; //index.less @import \u0026#34;./base.less\u0026#34;; .main { background-color: @primaryColor } //index.js import \u0026#34;./index.css\u0026#34; ; import \u0026#34;./index.less\u0026#34; ; console.log(\u0026#34;hello index.js\u0026#34;) ; //index.css .main { color: #0d6efd; } //indexTemplate.html \u0026lt;div class=\u0026#34;main\u0026#34;\u0026gt; hello world \u0026lt;/div\u0026gt;  命令  D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\u0026gt;npm init -y\rWrote to D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\\package.json:\r{\r\u0026quot;name\u0026quot;: \u0026quot;t6\u0026quot;,\r\u0026quot;version\u0026quot;: \u0026quot;1.0.0\u0026quot;,\r\u0026quot;description\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;main\u0026quot;: \u0026quot;webpack.config.js\u0026quot;,\r\u0026quot;scripts\u0026quot;: {\r\u0026quot;test\u0026quot;: \u0026quot;echo \\\u0026quot;Error: no test specified\\\u0026quot; \u0026amp;\u0026amp; exit 1\u0026quot;\r},\r\u0026quot;keywords\u0026quot;: [],\r\u0026quot;author\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;license\u0026quot;: \u0026quot;ISC\u0026quot;\r}\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\u0026gt;npm add -D webpack webpack-cli\rnpm notice created a lockfile as package-lock.json. You should commit this file.\rnpm WARN t6@1.0.0 No description\rnpm WARN t6@1.0.0 No repository field.\r+ webpack-cli@4.7.2\r+ webpack@5.44.0\radded 121 packages from 155 contributors in 8.471s\r16 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\u0026gt;npm add -D style-loader\rnpm WARN t6@1.0.0 No description\rnpm WARN t6@1.0.0 No repository field.\r+ style-loader@3.0.0\radded 1 package from 1 contributor in 0.901s\r17 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\u0026gt;npm add -D css-loader\rnpm WARN t6@1.0.0 No description\rnpm WARN t6@1.0.0 No repository field.\r+ css-loader@5.2.6\radded 21 packages from 55 contributors in 1.83s\r19 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\u0026gt;npm add -D less-loader\rnpm WARN less-loader@10.0.1 requires a peer of less@^3.5.0 || ^4.0.0 but none is installed. You must install peer dependencies yourself.\rnpm WARN t6@1.0.0 No description\rnpm WARN t6@1.0.0 No repository field.\r+ less-loader@10.0.1\radded 2 packages from 2 contributors in 1.144s\r20 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\u0026gt;npm add -D less\rnpm WARN t6@1.0.0 No description\rnpm WARN t6@1.0.0 No repository field.\r+ less@4.1.1\radded 18 packages from 18 contributors in 2.175s\r20 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\u0026gt;npm install -D --save-dev html-webpack-plugin\rnpm WARN t6@1.0.0 No description\rnpm WARN t6@1.0.0 No repository field.\r+ html-webpack-plugin@5.3.2\radded 38 packages from 19 contributors in 2.994s\r30 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\u0026gt;npm run build\rnpm ERR! missing script: build\rnpm ERR! A complete log of this run can be found in:\rnpm ERR! C:\\Users\\dell\\AppData\\Roaming\\npm-cache\\_logs\\2021-07-11T08_38_54_955Z-debug.log\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\u0026gt;npm run build\r\u0026gt; t6@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\r\u0026gt; webpack\rasset index.js 24.6 KiB [emitted] (name: index)\rasset index.html 94 bytes [emitted]\rruntime modules 937 bytes 4 modules\rcacheable modules 9.27 KiB\rmodules by path ./src/ 3.58 KiB\rmodules by path ./src/*.css 1.85 KiB 2 modules\rmodules by path ./src/*.less 1.65 KiB\r./src/index.less 1.61 KiB [built] [code generated]\r./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/index.less 39 bytes [built] [code generated] [1 error]\r./src/index.js 82 bytes [built] [code generated]\rmodules by path ./node_modules/ 5.69 KiB\r./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js 2.19 KiB [built] [code generated]\r./node_modules/style-loader/dist/runtime/styleDomAPI.js 1010 bytes [built] [code generated]\r./node_modules/style-loader/dist/runtime/getTarget.js 709 bytes [built] [code generated]\r./node_modules/style-loader/dist/runtime/insertStyleElement.js 261 bytes [built] [code generated]\r./node_modules/css-loader/dist/runtime/api.js 1.57 KiB [built] [code generated]\rERROR in ./src/index.less (./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/index.less)\rModule build failed (from ./node_modules/less-loader/dist/cjs.js):\r@primary-color:lightcoral\r^\r@primary-color rule is missing block or ending semi-colon\rError in D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\\src\\base.less (line 1, column 14)\rError:\r@primary-color:lightcoral\r^\r@primary-color rule is missing block or ending semi-colon\rError in D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\\src\\base.less (line 1, column 14)\rat Object.lessLoader (D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\\node_modules\\less-loader\\dist\\index.js:54:14)\r@ ./src/index.less 6:6-140 45:17-24 49:0-110 49:0-110 50:22-29 50:33-47 50:50-64\r@ ./src/index.js 2:0-23\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\u0026gt;npm run build\r\u0026gt; t6@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\r\u0026gt; webpack\rasset index.js 24.4 KiB [emitted] (name: index)\rasset index.html 94 bytes [compared for emit]\rruntime modules 937 bytes 4 modules\rcacheable modules 9.57 KiB\rmodules by path ./src/ 3.88 KiB\rmodules by path ./src/*.css 1.85 KiB 2 modules\rmodules by path ./src/*.less 1.94 KiB\r./src/index.less 1.61 KiB [built] [code generated]\r./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/index.less 343 bytes [built] [code generated]\r./src/index.js 82 bytes [built] [code generated]\rmodules by path ./node_modules/ 5.69 KiB\r./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js 2.19 KiB [built] [code generated]\r./node_modules/style-loader/dist/runtime/styleDomAPI.js 1010 bytes [built] [code generated]\r./node_modules/style-loader/dist/runtime/getTarget.js 709 bytes [built] [code generated]\r./node_modules/style-loader/dist/runtime/insertStyleElement.js 261 bytes [built] [code generated]\r./node_modules/css-loader/dist/runtime/api.js 1.57 KiB [built] [code generated]\rwebpack 5.44.0 compiled successfully in 425 ms\rextract-text-webpack-plugin 使用\r#\r\rconst ExtractTextPlugin = require(\u0026#34;extract-text-webpack-plugin\u0026#34;); module.exports = { module: { rules: [ { test: /\\.css$/, use: ExtractTextPlugin.extract({ fallback: \u0026#34;style-loader\u0026#34;, use: \u0026#34;css-loader\u0026#34; }) } ] }, plugins: [ new ExtractTextPlugin(\u0026#34;styles.css\u0026#34;), ] }  该插件有三个参数意义分别如下  use:指需要什么样的loader去编译文件,这里由于源文件是.css所以选择css-loader\rfallback:编译后用什么loader来提取css文件\rpublicfile:用来覆盖项目路径,生成该css文件的文件路径\r  使用\n  webpack.config.js\n  const HtmlWebPackPlugin = require(\u0026#34;html-webpack-plugin\u0026#34;); const ExtractTextWebpackPlugin = require(\u0026#34;extract-text-webpack-plugin\u0026#34;); module.exports = { entry: { index: \u0026#34;./src/index.js\u0026#34; }, mode: \u0026#39;development\u0026#39;, module: { rules: [ { test: /.css$/, use: ExtractTextWebpackPlugin.extract({ fallback :\u0026#34;style-loader\u0026#34;, use : \u0026#34;css-loader\u0026#34; }) }, { test: /.less$/, use: ExtractTextWebpackPlugin.extract({ fallback : \u0026#34;style-loader\u0026#34; , use : [\u0026#34;css-loader\u0026#34;, \u0026#34;less-loader\u0026#34;] }) } ] }, plugins: [ new HtmlWebPackPlugin( { /*你帮我应用这个模板*/ template: \u0026#34;./src/indexTemplate.html\u0026#34; } ), new ExtractTextWebpackPlugin(\u0026#34;styles.css\u0026#34;) ] }  package.json 需要注意下面的依赖版本关系  { \u0026#34;name\u0026#34;: \u0026#34;t6\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;webpack.config.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;webpack\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;, \u0026#34;devDependencies\u0026#34;: { \u0026#34;css-loader\u0026#34;: \u0026#34;^3.0.0\u0026#34;, \u0026#34;extract-text-webpack-plugin\u0026#34;: \u0026#34;^4.0.0-beta.0\u0026#34;, \u0026#34;html-webpack-plugin\u0026#34;: \u0026#34;^4.4.0\u0026#34;, \u0026#34;less\u0026#34;: \u0026#34;^4.1.1\u0026#34;, \u0026#34;less-loader\u0026#34;: \u0026#34;^3.0.0\u0026#34;, \u0026#34;style-loader\u0026#34;: \u0026#34;^2.0.0\u0026#34;, \u0026#34;webpack\u0026#34;: \u0026#34;^4.12.0\u0026#34;, \u0026#34;webpack-cli\u0026#34;: \u0026#34;^4.1.0\u0026#34; } }  html  + base.less @primaryColor : lightcoral ; + indexTemplate.html \u0026lt;div class=\u0026#34;main\u0026#34;\u0026gt; hello world \u0026lt;/div\u0026gt; + index.less @import \u0026#34;./base.less\u0026#34;; .main { background-color: @primaryColor } + index.css .main { color: #0d6efd; } + index.js import \u0026#34;./index.css\u0026#34; ; import \u0026#34;./index.less\u0026#34; ; console.log(\u0026#34;hello index.js\u0026#34;) ;  文件目录  ▸\\t6 ▸ \\t6\\dist ▸ \\t6\\dist\\index.html ▸ \\t6\\dist\\index.js ▸ \\t6\\dist\\styles.css ▸ \\t6\\node_modules ▸ \\t6\\node_modules\\.bin ▸ \\t6\\node_modules\\y18n ▸ \\t6\\node_modules\\y18n\\CHANGELOG.md ▸ \\t6\\node_modules\\y18n\\index.js ▸ \\t6\\node_modules\\y18n\\LICENSE ▸ \\t6\\node_modules\\y18n\\package.json ▸ \\t6\\node_modules\\y18n\\README.md //省略 ▸ \\t6\\package-lock.json ▸ \\t6\\package.json ▸ \\t6\\src ▸ \\t6\\src\\base.less ▸ \\t6\\src\\index.css ▸ \\t6\\src\\index.js ▸ \\t6\\src\\index.less ▸ \\t6\\src\\indexTemplate.html ▸ \\t6\\webpack.config.js ▸ \\t6\\webpack.config2.js ▸ \\t6\\webpack.config3.js  执行结果  D:\\IdeaProjects\\cycle\\study\\webpack\\demo07\\t6\u0026gt;webpack [webpack-cli] Compilation finished Hash: 74f8a85ddd5d6714bb8a Version: webpack 4.12.0 Time: 347ms Built at: 2021/07/13 下午10:00:45 Asset Size Chunks Chunk Names index.js 5.02 KiB index [emitted] index styles.css 73 bytes index [emitted] index index.html 129 bytes [emitted] Entrypoint index = index.js styles.css [./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/lib/loader.js!./src/index.less] 183 bytes [built] [./node_modules/css-loader/dist/cjs.js!./src/index.css] 173 bytes [built] [./node_modules/css-loader/dist/runtime/api.js] 2.61 KiB [built] [./node_modules/less-loader/lib/stringify.loader.js!./src/base.less] 39 bytes [built] [./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js] 6.67 KiB [built] [./src/index.css] 41 bytes [built] [./src/index.js] 82 bytes {index} [built] [./src/index.less] 41 bytes [built] Child HtmlWebpackCompiler: Asset Size Chunks Chunk Names __child-HtmlWebpackPlugin_0 4.46 KiB HtmlWebpackPlugin_0 HtmlWebpackPlugin_0 Entrypoint HtmlWebpackPlugin_0 = __child-HtmlWebpackPlugin_0 [./node_modules/html-webpack-plugin/lib/loader.js!./src/indexTemplate.html] 307 bytes {HtmlWebpackPlugin_0} [built] Child extract-text-webpack-plugin node_modules/extract-text-webpack-plugin/dist node_modules/css-loader/dist/cjs.js!node_modules/less-loader/lib/loader.js!src/index.less: Entrypoint undefined = extract-text-webpack-plugin-output-filename [./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/lib/loader.js!./src/index.less] 183 bytes {0} [built] [./node_modules/css-loader/dist/runtime/api.js] 2.61 KiB {0} [built] [./node_modules/less-loader/lib/stringify.loader.js!./src/base.less] 39 bytes [built] Child extract-text-webpack-plugin node_modules/extract-text-webpack-plugin/dist node_modules/css-loader/dist/cjs.js!src/index.css: Entrypoint undefined = extract-text-webpack-plugin-output-filename [./node_modules/css-loader/dist/cjs.js!./src/index.css] 173 bytes {0} [built] [./node_modules/css-loader/dist/runtime/api.js] 2.61 KiB {0} [built] "}),a.add({id:222,href:'/life/docs/python/base/string/',title:"python string",section:"python 基础学习",content:"字符串用法\r#\r\r   方法 描述     capitalize() 把首字符转换为大写。   casefold() 把字符串转换为小写。   center() 返回居中的字符串。   count() 返回指定值在字符串中出现的次数。   encode() 返回字符串的编码版本。   endswith() 如果字符串以指定值结尾，则返回 true。   expandtabs() 设置字符串的 tab 尺寸。   find() 在字符串中搜索指定的值并返回它被找到的位置。   format() 格式化字符串中的指定值。   format_map() 格式化字符串中的指定值。   index() 在字符串中搜索指定的值并返回它被找到的位置。   isalnum() 如果字符串中的所有字符都是字母数字，则返回 True。   isalpha() 如果字符串中的所有字符都在字母表中，则返回 True。   isdecimal() 如果字符串中的所有字符都是小数，则返回 True。   isdigit() 如果字符串中的所有字符都是数字，则返回 True。   isidentifier() 如果字符串是标识符，则返回 True。   islower() 如果字符串中的所有字符都是小写，则返回 True。   isnumeric() 如果字符串中的所有字符都是数，则返回 True。   isprintable() 如果字符串中的所有字符都是可打印的，则返回 True。   isspace() 如果字符串中的所有字符都是空白字符，则返回 True。   istitle() 如果字符串遵循标题规则，则返回 True。   isupper() 如果字符串中的所有字符都是大写，则返回 True。   join() 把可迭代对象的元素连接到字符串的末尾。   ljust() 返回字符串的左对齐版本。   lower() 把字符串转换为小写。   lstrip() 返回字符串的左修剪版本。   maketrans() 返回在转换中使用的转换表。   partition() 返回元组，其中的字符串被分为三部分。   replace() 返回字符串，其中指定的值被替换为指定的值。   rfind() 在字符串中搜索指定的值，并返回它被找到的最后位置。   rindex() 在字符串中搜索指定的值，并返回它被找到的最后位置。   rjust() 返回字符串的右对齐版本。   rpartition() 返回元组，其中字符串分为三部分。   rsplit() 在指定的分隔符处拆分字符串，并返回列表。   rstrip() 返回字符串的右边修剪版本。   split() 在指定的分隔符处拆分字符串，并返回列表。   splitlines() 在换行符处拆分字符串并返回列表。   startswith() 如果以指定值开头的字符串，则返回 true。   strip() 返回字符串的剪裁版本。   swapcase() 切换大小写，小写成为大写，反之亦然。   title() 把每个单词的首字符转换为大写。   translate() 返回被转换的字符串。   upper() 把字符串转换为大写。   zfill() 在字符串的开头填充指定数量的 0 值。    str1 = \u0026#34;a,b\u0026#34; print(str1.split(\u0026#34;,\u0026#34;)) list_a = [\u0026#39;c\u0026#39;,\u0026#39;biancheng\u0026#39;,\u0026#39;net\u0026#39;] print(\u0026#39;.\u0026#39;.join(list_a)) print(f\u0026#34;\u0026#39;\u0026#39;.join : {\u0026#39;-\u0026#39;.join([\u0026#39;2\u0026#39;,\u0026#39;3\u0026#39;])}\u0026#34;)   切片 string[start:stop:step]\n  start 起始值: 子字符串的开始位置的索引\n  stop 结束值: 子字符串的结束位置的索引，注意不包括stop出的字符\n  step 步长: 一个数字，指定切片的长度，默认值为 1\n  str2 = \u0026#34;hello world\u0026#34; print(f\u0026#34;获取最后一个字符: {str2[-1]}\u0026#34;) print(f\u0026#34;获取字符串的最后n个字符: {str2[-4:]}\u0026#34;) print(f\u0026#34;获取字符串的最前n个字符: {str2[0:5]}\u0026#34;) print(f\u0026#34;获取字符串的步长为2字符: {str2[::2]}\u0026#34;) "}),a.add({id:223,href:'/life/docs/javadir/tooldoc/jsoup/',title:"jsoup学习文档",section:"Java公共库文档总结 ",content:"jsoup学习文档\r#\r\r简介\r#\r\r Jsoup是用于解析HTML，就类似XML解析器用于解析XML。 Jsoup它解析HTML成为真实世界的HTML。 它与jquery选择器的语法非常相似，并且非常灵活容易使用以获得所需的结果\n +jsoup api 6个包提供用于开发jsoup应用程序的类和接口。\norg.jsoup\rorg.jsoup.examples\rorg.jsoup.helper\rorg.jsoup.nodes\rorg.jsoup.parser\rorg.jsoup.safety\rorg.jsoup.salect\r引入\r#\r\r//大多数情况使用jsoup\rorg.jsoup.nodes.Document document = Jsoup.parse(html);\rDocument doc = Jsoup.parse(new URL(\u0026quot;http://www.funi.com/\u0026quot;),7000);\r//少数情况使用httpUnit\rWebClient webClient = new WebClient() ;\rHtmlPage htmlPage = webClient.getPage(\u0026quot;http://www.89ip.cn/\u0026quot;);\rhtmlPage.asXml()//html\r使用(maven)\r#\r\r\u0026lt;dependency\u0026gt;\r\u0026lt;!-- jsoup HTML parser library @ http://jsoup.org/ --\u0026gt;\r\u0026lt;groupId\u0026gt;org.jsoup\u0026lt;/groupId\u0026gt;\r\u0026lt;artifactId\u0026gt;jsoup\u0026lt;/artifactId\u0026gt;\r\u0026lt;version\u0026gt;1.10.2\u0026lt;/version\u0026gt;\r\u0026lt;/dependency\u0026gt;\r\u0026lt;!-- httpclient --\u0026gt;\r\u0026lt;dependency\u0026gt;\r\u0026lt;groupId\u0026gt;org.apache.httpcomponents\u0026lt;/groupId\u0026gt;\r\u0026lt;artifactId\u0026gt;httpclient\u0026lt;/artifactId\u0026gt;\r\u0026lt;version\u0026gt;4.5.6\u0026lt;/version\u0026gt;\r\u0026lt;/dependency\u0026gt;\r\u0026lt;dependency\u0026gt;\r\u0026lt;groupId\u0026gt;net.sourceforge.htmlunit\u0026lt;/groupId\u0026gt;\r\u0026lt;artifactId\u0026gt;htmlunit\u0026lt;/artifactId\u0026gt;\r\u0026lt;version\u0026gt;2.26\u0026lt;/version\u0026gt;\r\u0026lt;/dependency\u0026gt;\r解析一个body片断\r#\r\r 假如你有一个HTML片断 (比如. 一个 div 包含一对 p 标签; 一个不完整的HTML文档) 想对它进行解析。这个HTML片断可以是用户提交的一条评论或在一个CMS页面中编辑body部分。\n 办法:使用Jsoup.parseBodyFragment(String html) ,Document.body() 方法能够取得文档body元素的所有子元素，与 doc.getElementsByTag(\u0026ldquo;body\u0026rdquo;)相同\nString html = \u0026quot;\u0026lt;div\u0026gt;\u0026lt;p\u0026gt;Lorem ipsum.\u0026lt;/p\u0026gt;\u0026quot;;\rDocument doc = Jsoup.parseBodyFragment(html);\rSystem.out.println(doc.html());//可以看到我们的html片段被包裹了一个body\rElement body = doc.body();\rSystem.out.println(body.html());\r/*\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;div\u0026gt;\r\u0026lt;p\u0026gt;Lorem ipsum.\u0026lt;/p\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r*/\r/**\r\u0026lt;div\u0026gt;\r\u0026lt;p\u0026gt;Lorem ipsum.\u0026lt;/p\u0026gt;\r\u0026lt;/div\u0026gt;\r*/\r从一个URL加载一个Document\r#\r\r 你需要从一个网站获取和解析一个HTML文档，并查找其中的相关数据。你可以使用下面解决方法\n 办法:使用 Jsoup.connect(String url)方法\nDocument doc = Jsoup.parse(new URL(\u0026quot;http://www.funi.com/\u0026quot;),6000) ;\rDocument doc2 = Jsoup.connect(\u0026quot;http://www.funi.com/\u0026quot;)\r// .data(\u0026quot;query\u0026quot;, \u0026quot;Java\u0026quot;)\r.userAgent(\u0026quot;Mozilla\u0026quot;)\r.cookie(\u0026quot;auth\u0026quot;, \u0026quot;token\u0026quot;)\r.timeout(3000)\r.get();\r从一个文件加载一个文档\r#\r\r 在本机硬盘上有一个HTML文件，需要对它进行解析从中抽取数据或进行修改\n 办法:可以使用静态 Jsoup.parse(File in, String charsetName, String baseUri)方法\nFile input = new File(\u0026quot;/tmp/input.html\u0026quot;);\rDocument doc = Jsoup.parse(input, \u0026quot;UTF-8\u0026quot;, \u0026quot;http://example.com/\u0026quot;);\r下面例子都使用成都市房产透明网的网站和国家统计局\n使用DOM方法来遍历一个文档\r#\r\r 你有一个HTML文档要从中提取数据，并了解这个HTML文档的结构。\n Document doc = null;\rCloseableHttpClient httpClient = HttpClients.createDefault();\rHttpGet httpGet = new HttpGet(\u0026quot;http://www.funi.com/\u0026quot;);\r//使用chrome 头伪装\rhttpGet.setHeader(\u0026quot;User-Agent\u0026quot;, \u0026quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36\u0026quot;);\r//设置基本的配置\rRequestConfig config = RequestConfig.custom()\r.setConnectTimeout(5000) // 设置连接超时时间 5秒钟\r.setSocketTimeout(4000) // 设置读取超时时间4秒钟\r.build();\rhttpGet.setConfig(config);\rCloseableHttpResponse httpResponse = null;\rtry {\rhttpResponse = httpClient.execute(httpGet);\rHttpEntity httpEntity = httpResponse.getEntity();\rif (httpEntity == null){\rreturn;\r}\rString html = EntityUtils.toString(httpEntity, \u0026quot;utf-8\u0026quot;);\rif (StringUtils.isNotEmpty(html)) {\rdoc = Jsoup.parse(html);\r}\r} catch (Exception e) {\rlogger.error(\u0026quot;获取html失败!\u0026quot;, e);\r} finally {\r//关闭处理\rhttpResponse.close();\rhttpClient.close();\r}\rElement body = doc.body();\rElements foot = body.getElementsByClass(\u0026quot;foot\u0026quot;).first().getElementsByClass(\u0026quot;footer clearfix\u0026quot;).first().getElementsByTag(\u0026quot;dl\u0026quot;);\rfor (Element ele : foot) {\rSystem.out.println(ele.html());\rfor (int i = 0; i \u0026lt; 20; i++) {\rSystem.out.print('.');\r}\r}\r使用选择器语法来查找元素\r#\r\r 你想使用类似于CSS或jQuery的语法来查找和操作元素\n Element\r#\r\r查看元素\n getElementById(String id) return Element getElementsByTag(String tag) return Elements getElementsByClass(String className) return Elements getElementsByAttribute(String key) return Elements 查找具有命名属性集的元素。不区分大小写 siblingElements() return Elements 获取同级元素。如果元素没有同级元素，则返回空列表。元素不是同级元素本身，所以不会包含在返回的列表中(列表) firstElementSibling() return Element 获取此元素的第一个同级元素 lastElementSibling() return Element 获取此元素的最后一个同级元素 previousElementSibling() return Element 获取此元素的上一个同级元素 nextElementSibling() return Element 获取此元素的下一个同级元素 parents() return Elements 获取此元素的父级和父级，直到文档根 parent() return Element 获取此元素的父级 children() return Elements 获取此元素的子元素 child(int index) return Element 获取此元素的子元素，方法是使用其基于0的索引号 attributes() 获取元素的所有属性 return Attributes  元素数据\n attr(String key)获取属性attr(String key, String value)设置属性 attributes()获取所有属性 id(), className() and classNames() text()获取文本内容text(String value) 设置文本内容 html()获取元素内HTMLhtml(String value)设置元素内的HTML内容 outerHtml()获取元素外HTML内容 data()获取数据内容（例如：script和style标签) tag() and tagName()  操作HTML和文本\n append(String html), prepend(String html) appendText(String text), prependText(String text) appendElement(String tagName), prependElement(String tagName) html(String value)  选择器语法来查找元素\r#\r\r tagname: 通过标签查找元素，比如：a #id: 通过ID查找元素，比如：#logo .class: 通过class名称查找元素，比如：.masthead  Document doc = null;\rCloseableHttpClient httpClient = HttpClients.createDefault();\rHttpGet httpGet = new HttpGet(\u0026quot;http://www.stats.gov.cn/\u0026quot;);\r//使用chrome 头伪装\rhttpGet.setHeader(\u0026quot;User-Agent\u0026quot;, \u0026quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36\u0026quot;);\r//设置基本的配置\rRequestConfig config = RequestConfig.custom()\r.setConnectTimeout(5000) // 设置连接超时时间 5秒钟\r.setSocketTimeout(4000) // 设置读取超时时间4秒钟\r.build();\rhttpGet.setConfig(config);\rCloseableHttpResponse httpResponse = null;\rtry {\rhttpResponse = httpClient.execute(httpGet);\rHttpEntity httpEntity = httpResponse.getEntity();\rString html = EntityUtils.toString(httpEntity, \u0026quot;utf-8\u0026quot;);\rif (StringUtils.isNotEmpty(html)) {\rdoc = Jsoup.parse(html);\r}\r} catch (Exception e) {\rlogger.error(\u0026quot;获取html失败!\u0026quot;, e);\r} finally {\r// 关闭处理\rhttpResponse.close();\rhttpClient.close();\r}\rElement body = doc.body();\r// Elements selects = body.select(\u0026quot;.top .top03 #nav ul li\u0026quot;);//和下面的一样\rElements selects = body.getElementsByClass(\u0026quot;top\u0026quot;).first().getElementsByClass(\u0026quot;top03\u0026quot;).first().getElementById(\u0026quot;nav\u0026quot;).getElementsByTag(\u0026quot;ul\u0026quot;).first().getElementsByTag(\u0026quot;li\u0026quot;);\rfor (Element ele : selects) {\rSystem.out.println(ele);\r}\r主要运用了上面三种选择方式\r 【attribute】: 利用属性查找元素，比如：【href】 【^attr】: 利用属性名前缀来查找元素，比如：可以用【^data-】 来查找带有HTML5 Dataset属性的元素 【attr=value】: 利用属性值来查找元素，比如：【width=500】 【attr^=value】, 【attr$=value】, 【attr*=value】: 利用匹配属性值开头、结尾或包含属性值来查找元素，比如：【href*=/path/】 【attr~=regex】: 利用属性值匹配正则表达式来查找元素，比如： img【src~=(?i).(png|jpe?g)】 *: 这个符号将匹配所有元素  Element body = doc.body();\rElements selects = body.select(\u0026quot;.top a[href]\u0026quot;);//获取拥有href属性的所有元素\r\u0026lt;a href=\u0026quot;/was5/web/search?channelid=288041\u0026amp;amp;andsen=%E6%80%BB%E4%BA%BA%E5%8F%A3\u0026quot; target=\u0026quot;_blank\u0026quot;\u0026gt;总人口\u0026lt;/a\u0026gt;\r\u0026lt;a href=\u0026quot;/was5/web/search?channelid=288041\u0026amp;amp;andsen=%E7%A4%BE%E4%BC%9A%E6%B6%88%E8%B4%B9%E5%93%81%E9%9B%B6%E5%94%AE%E6%80%BB%E9%A2%9D\u0026quot; target=\u0026quot;_blank\u0026quot;\u0026gt;社会消费品零售总额\u0026lt;/a\u0026gt;\r\u0026lt;a href=\u0026quot;./zjtj/\u0026quot; target=\u0026quot;_top\u0026quot;\u0026gt;\u0026lt;img src=\u0026quot;./images/top03_1.png\u0026quot;\u0026gt;\u0026lt;/a\u0026gt;\r\u0026lt;a name=\u0026quot;PL_MENU_NAME\u0026quot; href=\u0026quot;./zjtj/gjtjj/\u0026quot; target=\u0026quot;_top\u0026quot;\u0026gt;国家统计局\u0026lt;/a\u0026gt;\r\u0026lt;a name=\u0026quot;PL_MENU_NAME\u0026quot; href=\u0026quot;http://jcj.ndrc.gov.cn/\u0026quot; target=\u0026quot;_top\u0026quot;\u0026gt;派驻纪检组\u0026lt;/a\u0026gt;\r\u0026lt;a name=\u0026quot;PL_MENU_NAME\u0026quot; href=\u0026quot;./zjtj/jgzn/\u0026quot; target=\u0026quot;_top\u0026quot;\u0026gt;机构职能\u0026lt;/a\u0026gt;\rElements selects = body.select(\u0026quot;.top a[name=PL_MENU_NAME]\u0026quot;);//获取name=PL_MENU_NAME的所有这类元素\r\u0026lt;a name=\u0026quot;PL_MENU_NAME\u0026quot; href=\u0026quot;./zjtj/gjtjj/\u0026quot; target=\u0026quot;_top\u0026quot;\u0026gt;国家统计局\u0026lt;/a\u0026gt;\r\u0026lt;a name=\u0026quot;PL_MENU_NAME\u0026quot; href=\u0026quot;http://jcj.ndrc.gov.cn/\u0026quot; target=\u0026quot;_top\u0026quot;\u0026gt;派驻纪检组\u0026lt;/a\u0026gt;\r\u0026lt;a name=\u0026quot;PL_MENU_NAME\u0026quot; href=\u0026quot;./zjtj/jgzn/\u0026quot; target=\u0026quot;_top\u0026quot;\u0026gt;机构职能\u0026lt;/a\u0026gt;\r\u0026lt;a name=\u0026quot;PL_MENU_NAME\u0026quot; href=\u0026quot;./tjsj/zxfb/\u0026quot; target=\u0026quot;_top\u0026quot;\u0026gt;最新发布\u0026lt;/a\u0026gt;\r\u0026lt;a name=\u0026quot;PL_MENU_NAME\u0026quot; href=\u0026quot;http://data.stats.gov.cn/\u0026quot; target=\u0026quot;_blank\u0026quot;\u0026gt;数据查询\u0026lt;/a\u0026gt;\r\u0026lt;a name=\u0026quot;PL_MENU_NAME\u0026quot; href=\u0026quot;./tjsj/sjjd/\u0026quot; target=\u0026quot;_top\u0026quot;\u0026gt;数据解读\u0026lt;/a\u0026gt;\r\u0026lt;a name=\u0026quot;PL_MENU_NAME\u0026quot; href=\u0026quot;./tjgz/tjdt/\u0026quot; target=\u0026quot;_top\u0026quot;\u0026gt;统计动态\u0026lt;/a\u0026gt;\rElements selects = body.select(\u0026quot;.top a[name^=PL]\u0026quot;);//以PL开头\rElements selects = body.select(\u0026quot;.top div[^cl]\u0026quot;); //获取div 为tag class等属性的元素\r 伪选择器selectors :lt(n): 查找哪些元素的同级索引值（它的位置在DOM树中是相对于它的父节点）小于n，比如：td:lt(3) 表示小于三列的元素 :gt(n):查找哪些元素的同级索引值大于n，比如： div p:gt(2)表示哪些div中有包含2个以上的p元素 :eq(n): 查找哪些元素的同级索引值与n相等，比如：form input:eq(1)表示包含一个input标签的Form元素 :has(seletor): 查找匹配选择器包含元素的元素，比如：div:has(p)表示哪些div包含了p元素  Elements selects = body.select(\u0026quot;.center div:eq(0) ul li:lt(3)\u0026quot;); //eq(0)选取第一个,lt(3)表示小于三列的元素\r  Selector选择器组合使用\n  el#id: 元素+ID，比如： div#logo\n  el.class: 元素+class，比如： div.masthead\n  el[attr]: 元素+class，比如： a[href]\n  任意组合，比如：a[href].highlight\n  ancestor child: 查找某个元素下子元素，比如：可以用.body p 查找在\u0026quot;body\u0026quot;元素下的所有 p元素\n  parent \u0026gt; child: 查找某个父元素下的直接子元素，比如：可以用div.content \u0026gt; p 查找 p 元素，也可以用body \u0026gt; * 查找body标签下所有直接子元素\n  siblingA + siblingB: 查找在A元素之前第一个同级元素B，比如：div.head + div\n  siblingA ~ siblingX: 查找A元素之前的同级X元素，比如：h1 ~ p\n  el, el, el:多个选择器组合，查找匹配任一选择器的唯一元素，例如：div.masthead, div.logo\n  伪选择器selectors\n  :lt(n): 查找哪些元素的同级索引值（它的位置在DOM树中是相对于它的父节点）小于n，比如：td:lt(3) 表示小于三列的元素\n  :gt(n):查找哪些元素的同级索引值大于n，比如： div p:gt(2)表示哪些div中有包含2个以上的p元素\n  :eq(n): 查找哪些元素的同级索引值与n相等，比如：form input:eq(1)表示包含一个input标签的Form元素\n  :has(seletor): 查找匹配选择器包含元素的元素，比如：div:has(p)表示哪些div包含了p元素\n  :not(selector): 查找与选择器不匹配的元素，比如： div:not(.logo) 表示不包含 class=\u0026ldquo;logo\u0026rdquo; 元素的所有 div 列表\n  :contains(text): 查找包含给定文本的元素，搜索不区分大不写，比如： p:contains(jsoup)\n  :containsOwn(text): 查找直接包含给定文本的元素\n  :matches(regex): 查找哪些元素的文本匹配指定的正则表达式，比如：div:matches((?i)login)\n  :matchesOwn(regex): 查找自身包含文本匹配指定正则表达式的元素\n  注意：上述伪选择器索引是从0开始的，也就是说第一个元素索引值为0，第二个元素index为1等\n  "}),a.add({id:224,href:'/life/docs/operating_system/two_chapter/2_2_3/',title:"调度算法的评价指标",section:"第二章 进程管理 ",content:""}),a.add({id:225,href:'/life/docs/python/base/pipenv/',title:"python pipenv 包管理",section:"python 基础学习",content:" pipenv 是Kenneth Reitz大神的作品，提供Python的各个版本间的管理，各种包管理。个人觉得是virtualenv pip等工具的合体\n 安装pipenv\r#\r\r 本操作系统为windows10  pip install --user pipenv　# 安装失败 =\u0026gt; 升级一下默认安装的pip版本，因为默认会安装最新版的pipenv，pip的版本过低会导致安装失败.pip更新命令\rpython -m pip install --upgrade pip\r更新完pip后，再次执行pipenv的安装命令\rpip install --user pipenv\r 失败的话 多半是你没能连接上世界真正网络 (自己找个梯子吧)  pipenv的简单使用\r#\r\r创建虚拟环境\r#\r\r (1)打开cmd窗口，首先切换到目标项目目录，输入以下命令：  # python 2环境\rpipenv --two\rpython 3环境\rpipenv --three\r （2）查看相关信息 　1） 查看项目位置：pipenv \u0026ndash;where 　2）查看虚拟环境位置：pipenv \u0026ndash;venv 　3）查看解释器信息：pipenv \u0026ndash;py  激活虚拟环境\r#\r\r（1）语法 pipenv shell\n　（2）界面效果　　激活前界面如下：\n激活后界面如下：\n（3）作用效果 激活了当前项目所在的虚拟环境。\n在激活状态下，pipenv的简单操作\r#\r\r 在cmd中执行test.py代码，首先切换到test.py所在文件目录，再输入python test.py代码执行文件，如下图：   安装包  （1）语法 pipenv install [三方库名]\n　例如： pipenv install requests\n　（2）界面效果\n（3）作用效果 1）检测当前项目对应的虚拟环境是否存在，不存在则创建 2）在虚拟环境中安装指定的三方库 3）在项目目录下，通过Pipfile和Pipfile.lock记录当下已经安装\n　注意:不要使用pip install。虽然在虚拟环境中安装对应的包，但是不会更新Pipfile和Pipefile.lock\n查看包的依赖结构\r#\r\r命令：pipenv graph\n　执行界面结果：\n卸载包\r#\r\rpipenv uninstall 包名\n　界面效果如下：\n退出虚拟环境\r#\r\r　语法： exit\npipenv install 的虚拟环境文件夹路径\r#\r\r"}),a.add({id:226,href:'/life/docs/python/install/pyqt5/',title:"python pyqt5",section:"python 插件学习",content:"pyqt5\r#\r\r基本结构\r#\r\r# 导入需要的包 from PyQt5.QtWidgets import (QApplication, QWidget, QLabel, QPushButton) import sys as sysUtils # 创建一个应用程序 app = QApplication(sysUtils.argv) # 控件也可以作为一个容器(承载其他的控件) # 控件操作 start window = QWidget() window.setWindowTitle( \u0026#34;燕雀安知鸿鹄之志哉\u0026#34;) window.resize(600, 600) window.move(200, 200) # window 相当于是构建器 label = QLabel(window) label.setText( \u0026#34;第一眼就看上的衣服往往你买不起，第一眼就心动的人往往他不会喜欢你。你真正喜欢想要的，没有一样是可以轻易得到的。这就是努力的理由\u0026#34;) label.move(100,100) # show方法 不要放在前面了 window.show() # 控件操作 end # 开始执行应用程序，并进入消息循环 # 让整个程序开始执行,并且进入到消息循环(无限循环) # 检测整个程序所接收到的用户的交互信息 # sysUtils.exit(app.exec()) sysUtils.exit(app.exec_()) # sysUtils.exit(1) # while True: # pass 表格\r#\r\r QTableWidget常用方法     方法 描述     setRowCount(rows) 设置QTableWidget表格控件的行数   setColumnCount(columns) 设置QTableWidget表格控件的列数   setHorizontalHeaderLabels(labels) 设置QTableWidget表格控件的水平标签   setVerticalHeaderLabels(labels) 设置QTableWidget表格控件的垂直标签   setRowHeight(row) 设置单元格行的高度   setColumnWidth(column) 设置单元格列的宽度   setItem(row,column,item) 设置QTableWidgetItem给指定的行和列   insertRow(row) 在行索引处插入行   insertColumn(column) 在列索引处插入列   removeRow(row) 在行索引处删除行   removeColumn(column) 在列索引处删除列   findItems(text,flags) 使用给定的标志查找文本与字符串文本匹配的项目   setCellWidget(row,column,widget) 给指定行和列的单元格设置组件   removeCellWidget(row,column) 删除指定行和列的单元格的组件   item(row,column) 返回给定行和列的项目（如果已设置）；否则返回None   row(item) 返回该表格项的行索引   column(item) 返回该表格项的列索引   rowCount() 返回表格的所有行数   columnCount() 返回表格的所有列数   currentItem() 返回当前的表格项   currentRow() 返回当前表格项的行索引   currentColumn() 返回当前表格项的列索引   selectedItems() 返回所有选定表格项的列表   horizontalHeader().hide() 隐藏水平表头   verticalHeader().hide() 隐藏垂直表头   clear() 清除表格内容和表头   clearContents() 清除表格内容   setEditTriggers(triggers) 设置编辑规则 QAbstractItemView.NoEditTriggers0No：不能对表格内容进行修改 QAbstractItemView.CurrentChanged1Editing：任何时候都能对单元格进行修改 QAbstractItemView.DoubleClicked2Editing：双击单元格 QAbstractItemView.SelectedClicked4Editing：单击已经选中的内容 QAbstractItemView.EditKeyPressed8Editing：当修改键按下时修改单元格 QAbstractItemView.AnyKeyPressed16Editing：按任意键修改单元格 QAbstractItemView.AllEditTriggers31Editing：包括以上所有条件   setSelectionBehavior(behavior) 设置表格选择行为 QAbstractItemView.SelectItems0Selecting：选中单个单元格 QAbstractItemView.SelectRows1Selecting：选中一行 QAbstractItemView.SelectColumns2Selecting：选中一列     QTableWidgetItem常用方法     方法 描述     checkState() 返回复选状态   setCheckState(state) 设置复选框的勾选状态 Qt.Checked：选中状态 Qt.PartiallyChecked：半选中状态 Qt.Unchecked：没有被选中   icon() 返回列表项的图标   setIcon(icon) 设置列表项的图标   isHidden() 返回列表项是否隐藏，如果隐藏返回True;不隐藏返回False   setHidden(hide) 设置列表项是否隐藏，如果True则隐藏;False则不隐藏   text() 返回列表项的文本   setText(text) 设置列表项的文本   flags() 返回列表项的项目标志   setForeground(brush) 设置前景色   setBackground(brush) 设置背景色   setFlags(flags) 设置列表项的项目标志设置为flags   setTextAlignment(alignment) 单元格文本对齐方式 Qt.AlignLeft：将单元格内的内容沿单元格的左边缘对齐 Qt.AlignRight：将单元格内的内容沿单元格的右边缘对齐 Qt.AlignHCenter：在可用空间中，居中显示在水平方向上 Qt.AlignJustify：将文本在可用空间内对齐，默认从左到右 Qt.AlignTop：与顶部对齐 Qt.AlignBottom：与底部对齐 Qt.AlignVCenter：在可用空间中，居中显示在垂直方向上 Qt.AlignBaseline：与基线对齐     QTableWidget常用信号     信号 描述     itemClicked(item) 当单击表格中单元格时，发射此信号   itemDoubleClicked(item) 当双击表格中单元格时，发射此信号   itemChanged(item) 当改变表格中单元格时，发射此信号   itemEntered(item) 当鼠标光标进入表格的单元格时，发射此信号   itemPressed(item) 当鼠标在表格的单元格上按下时，发射此信号   itemSelectionChanged() 当选择的单元格发生改变时，发射此信号   cellClicked(row,column) 当单击表格中单元格时，发射此信号   cellDoubleClicked(row,column) 当双击表格中单元格时，发射此信号   cellEntered(row,column) 当鼠标光标进入表格的单元格时，发射此信号   cellPressed(row,column) 当鼠标在表格的单元格上按下时，发射此信号    qcss学习\r#\r\r 有相当一部分语法和css相同 labelB.setObjectName(\u0026ldquo;b\u0026rdquo;) 表示 QLabel设置id=b选择器 labelB_1.setProperty(\u0026ldquo;level\u0026rdquo;, \u0026ldquo;1\u0026rdquo;) 表示设置了属性level=\u0026ldquo;1\u0026rdquo;\n  qcss  QPushButton{ background-color: #6496c8; border: none; color: #fff; text-align: center; text-decoration: none; display: inline-block; font-size: 16px; border-radius: 9px; box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 3px 10px 0 rgba(0,0,0,0.19); } QLabel { border:2px solid blue; border-radius:10px } QLabel#b{ border:2px solid red; border-radius:10px } QLabel#b[level=\u0026#34;1\u0026#34;]{ border:4px solid #0000CD; border-radius:10px } QLabel#b[level=\u0026#34;2\u0026#34;]{ border:4px solid #000000; border-radius:10px }  例子  from PyQt5.Qt import * import sys as sysUtils import pathlib as pathLib # 导入文件 qcss class QSSLoader: def __init__(self): pass # 注解表示本方法是静态方法 不需要创建对象就可以调用 注意这个是高版本python语法 @staticmethod def read_qss_file(qss_file_name): \u0026#34;\u0026#34;\u0026#34;从文件中读取qss的静态方法\u0026#34;\u0026#34;\u0026#34; with open(qss_file_name, \u0026#34;r\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) as file: return file.read() class MyWindow1(QWidget): def __init__(self, title): super().__init__() self.setWindowTitle(title) self.resize(500, 500) self.move(300, 300) self.setupUi() self.show() pass def setupUi(self): # 定义一个主容器 parentQWidget = QWidget() parentQWidget.setParent(self) doubleX = 200 doubleY = 200 btnA = QPushButton(parentQWidget) btnA.setText(\u0026#34;按钮\u0026#34;) btnA.move(doubleX, doubleY) btnA.resize(50, 50) labelA = QLabel() labelA.setParent(parentQWidget) labelA.move(doubleX + 70, doubleY + 50) labelA.setText(\u0026#34;标签A\u0026#34;) labelA.resize(50, 50) labelB = QLabel() labelB.setParent(parentQWidget) labelB.move(doubleX + 70 + 50+20, doubleY + 50) # 设置 id选择器 labelB.setObjectName(\u0026#34;b\u0026#34;) labelB.setText(\u0026#34;标签B\u0026#34;) labelB.resize(50, 50) labelB_1 = QLabel() labelB_1.setParent(parentQWidget) labelB_1.move(doubleX + 70, doubleY + 50 + 30 + 50) # 设置 id选择器 labelB_1.setObjectName(\u0026#34;b\u0026#34;) # 设置属性 labelB_1.setProperty(\u0026#34;level\u0026#34;, \u0026#34;1\u0026#34;) labelB_1.setText(\u0026#34;标签B1\u0026#34;) labelB_1.resize(50, 50) labelB_2 = QLabel() labelB_2.setParent(parentQWidget) labelB_2.move(doubleX + 70 + 50+20, doubleY + 50 + 30 + 50) # 设置 id选择器 labelB_2.setObjectName(\u0026#34;b\u0026#34;) # 设置属性 labelB_2.setProperty(\u0026#34;level\u0026#34;, \u0026#34;2\u0026#34;) labelB_2.setText(\u0026#34;标签B2\u0026#34;) labelB_2.resize(50, 50) pass if __name__ == \u0026#39;__main__\u0026#39;: dirCss = pathLib.Path(pathLib.Path.cwd().joinpath(*(\u0026#39;resources\u0026#39;, \u0026#34;d.qcss\u0026#34;))) style_sheet = QSSLoader.read_qss_file(str(dirCss)) app = QApplication(sysUtils.argv) myWindow = MyWindow1(\u0026#34;qcss学习\u0026#34;) # 注入 css 样式 myWindow.setStyleSheet(style_sheet) print(style_sheet) sysUtils.exit(app.exec_()) 信号 机制 简单学习\r#\r\rfrom PyQt5 import QtCore from PyQt5.Qt import * import sys as sysUtils import uuid as uuidUtils import datetime as datetimeUtils import random # 简单 信号 机制 学习 class MyWindow(QWidget): def __init__(self, title): super().__init__() self.setWindowTitle(title) self.resize(500, 500) self.move(200, 200) self.setupUi() self.setupQObject1() self.setupQObject2() self.setupObject3() self.setupObject4() self.setupObject5() self.setupObject6() self.show() pass def setupUi(self): labelA = QLabel(self) labelA.resize(100, 100) labelA.setText(\u0026#34;label\u0026#34;) labelA.move(100, 100) labelA.setStyleSheet(\u0026#34;font-weight: bold;background-color:gold;\u0026#34;) pass # 简单设置一下name 看什么效果 def setupQObject1(self): obj = QObject() str1 = str(datetimeUtils.datetime.now()) print(obj.objectName(), str1) # 对象名称发生改变时发射此信号 connect 后面写触发后要调用的函数 obj.objectNameChanged.connect(self.changeQObjectNameEvent) obj.setObjectName(str(uuidUtils.uuid3(uuidUtils.NAMESPACE_DNS, str1))) # 断开 信号与槽的连接 obj.objectNameChanged.disconnect() obj.setObjectName(str(uuidUtils.uuid3(uuidUtils.NAMESPACE_DNS, str(random.randrange(100, 10000))))) pass # 连续改变 name 监听状态 def setupQObject2(self): objX = QObject() # 使用匿名函数 objX.objectNameChanged.connect(lambda e: print(\u0026#34;setupQObject2 name 改变\u0026#34;, e)) # 连续设置 名称改变 objX.setObjectName(\u0026#34;x\u0026#34;) objX.setObjectName(\u0026#34;y\u0026#34;) objX.setObjectName(\u0026#34;z\u0026#34;) pass # 阻断信号 之 disconnect def setupObject3(self): objX = QObject() # 使用匿名函数 objX.objectNameChanged.connect(lambda e: print(\u0026#34;setupQObject3 name 改变\u0026#34;, e)) objX.setObjectName(\u0026#34;x\u0026#34;) # 阻断连接 # objX.objectNameChanged.disconnect() objX.setObjectName(\u0026#34;y\u0026#34;) pass # 阻断信号 之 blockSignals def setupObject4(self): objX = QObject() # 使用匿名函数 objX.objectNameChanged.connect(lambda e: print(\u0026#34;setupQObject4 name 改变\u0026#34;, e)) objX.setObjectName(str(random.randrange(100, 100000))) print(\u0026#34;信号状态 False就表示没有被阻断,True表示阻断:\u0026#34;, objX.signalsBlocked()) # 注释下面的代码 本方法会打印两次 objX.blockSignals(True) objX.setObjectName(str(random.randrange(100, 100000))) print(\u0026#34;信号状态 False就表示没有被阻断,True表示阻断:\u0026#34;, objX.signalsBlocked()) pass # destroyed 信号 销毁事件 def setupObject5(self): objX = QObject() objX.destroyed.connect(lambda e: print(\u0026#34;setupObject5 对象被销毁 \u0026#34;, e)) pass # 获取某个对象信号 到底有多少连接槽 def setupObject6(self): objX = QObject() changeEd = objX.objectNameChanged changeEd.connect(lambda x: print(\u0026#34;setupObject6 连接槽1:\u0026#34;, x)) changeEd.connect(lambda x: print(\u0026#34;setupObject6 连接槽2:\u0026#34;, x)) changeEd.connect(lambda x: print(\u0026#34;setupObject6 连接槽3:\u0026#34;, x)) print(\u0026#34;setupObject6 连接槽数量:\u0026#34;,objX.receivers(changeEd)) pass def changeQObjectNameEvent(self, e): print(\u0026#34;QObject Name 改变\u0026#34;, e) if __name__ == \u0026#39;__main__\u0026#39;: app = QApplication(sysUtils.argv) myW = MyWindow(\u0026#34;QObject 学习\u0026#34;) sysUtils.exit(app.exec_()) pass "}),a.add({id:227,href:'/life/docs/algorithm/data-structure/queue/',title:"队列",section:"数据结构",content:"队列\r#\r\r"}),a.add({id:228,href:'/life/docs/javadir/basedir/java-basic-x-spi/',title:"Java SPI机制详解",section:"Java基础知识 ",content:"SPI\r#\r\r SPI（Service Provider Interface），是JDK内置的一种 服务提供发现机制，可以用来启用框架扩展和替换组件，主要是被框架的开发人员使用。\n "}),a.add({id:229,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/wwnrfnfjmb/',title:"自信相关理论",section:"自信",content:" 小技巧   到春熙路这些地方送玩具然后请求接受礼物的人答应帮自己一个忙那就是在一些祝福语中抽一个出来 然后我把它念出来 可以对此分类 比如孩子,妇女,男人,学生,中年妇女\n "}),a.add({id:230,href:'/life/docs/javadir/thread/tool/fork_join/',title:"Fork-Join",section:"并发工具 ",content:"Fork-Join\r#\r\r简介\r#\r\r从JDK1.7开始，Java提供Fork/Join框架用于并行执行任务，它的思想就是讲一个大任务分割成若干小任务，最终汇总每个小任务的结果得到这个大任务的结果。\n这种思想和MapReduce很像（input \u0026ndash;\u0026gt; split \u0026ndash;\u0026gt; map \u0026ndash;\u0026gt; reduce \u0026ndash;\u0026gt; output）\n 主要有两步：   第一、任务切分； 第二、结果合并  它的模型大致是这样的：线程池中的每个线程都有自己的工作队列（PS：这一点和ThreadPoolExecutor不同，ThreadPoolExecutor是所有线程公用一个工作队列， 所有线程都从这个工作队列中取任务），当自己队列中的任务都完成以后，会从其它线程的工作队列中偷一个任务执行，这样可以充分利用资源。\n工作窃取（work-stealing）\r#\r\r工作窃取（work-stealing）算法是指某个线程从其他队列里窃取任务来执行。工作窃取的运行流程图如下：\n那么为什么需要使用工作窃取算法呢？\n假如我们需要做一个比较大的任务，我们可以把这个任务分割为若干互不依赖的子任务，为了减少线程间的竞争，于是把这些子任务分别放到不同的队列里，并为每个队列创建一个单独的线程来执行队列里的任务，线程和队列一一对应，比如A线程负责处理A队列里的任务。但是有的线程会先把自己队列里的任务干完，而其他线程对应的队列里还有任务等待处理。干完活的线程与其等着，不如去帮其他线程干活，于是它就去其他线程的队列里窃取一个任务来执行。而在这时它们会访问同一个队列，所以为了减少窃取任务线程和被窃取任务线程之间的竞争，通常会使用双端队列，被窃取任务线程永远从双端队列的头部拿任务执行，而窃取任务的线程永远从双端队列的尾部拿任务执行。\n工作窃取算法的优点是充分利用线程进行并行计算，并减少了线程间的竞争，其缺点是在某些情况下还是存在竞争，比如双端队列里只有一个任务时。并且消耗了更多的系统资源，比如创建多个线程和多个双端队列。\nAPI介绍\r#\r\rForkJoinPool\r#\r\rForkJoinPool与其它的ExecutorService区别主要在于它使用“工作窃取”：线程池中的所有线程都企图找到并执行提交给线程池的任务。当大量的任务产生子任务的时候，或者同时当有许多小任务被提交到线程池中的时候，这种处理是非常高效的。特别的，当在构造方法中设置asyncMode为true的时候这种处理更加高效。\nForkJoinTask\r#\r\rForkJoinTask代表运行在ForkJoinPool中的任务。\n主要方法：\n fork() 在当前线程运行的线程池中安排一个异步执行。简单的理解就是再创建一个子任务。 join() 当任务完成的时候返回计算结果。 invoke() 开始执行任务，如果必要，等待计算完成。  子类：\n RecursiveAction 一个递归无结果的ForkJoinTask（没有返回值） RecursiveTask 一个递归有结果的ForkJoinTask（有返回值）  ForkJoinWorkerThread\r#\r\rForkJoinWorkerThread代表ForkJoinPool线程池中的一个执行任务的线程。\n 类图  代码分析\r#\r\rWorkQueue是一个ForkJoinPool中的内部类，它是线程池中线程的工作队列的一个封装，支持任务窃取。\n什么叫线程的任务窃取呢？就是说你和你的一个伙伴一起吃水果，你的那份吃完了，他那份没吃完，那你就偷偷的拿了他的一些水果吃了。 存在执行2个任务的子线程，这里要讲成存在A,B两个个WorkQueue在执行任务，A的任务执行完了，B的任务没执行完， 那么A的WorkQueue就从B的WorkQueue的ForkJoinTask数组中拿走了一部分尾部的任务来执行，可以合理的提高运行和计算效率。\n submit()  可以看到：\n 1:同样是提交任务，submit会返回ForkJoinTask，而execute不会 2:任务提交给线程池以后，会将这个任务加入到当前提交者的任务队列中。  前面我们说过，每个线程都有一个WorkQueue，而WorkQueue中有执行任务的线程（ForkJoinWorkerThread owner），还有这个线程需要处理的任务（ForkJoinTask\u0026lt;?\u0026gt;[] array）。那么这个新提交的任务就是加到array中。\n ForkJoinWorkerThread  从代码中我们可以清楚地看到，ForkJoinWorkThread持有ForkJoinPool和ForkJoinPool.WorkQueue的引用，以表明该线程属于哪个线程池，它的工作队列是哪个\n  ForkJoinTask\n  fork()\n  可以看到，如果是ForkJoinWorkerThread运行过程中fork()，则直接加入到它的工作队列中，否则，重新提交任务。\n可以看到它们都会等待计算完成\n图形化处理过程\r#\r\r使用示例\r#\r\r 仅仅打印  import java.util.ArrayList; import java.util.List; import java.util.concurrent.ForkJoinPool; import java.util.concurrent.RecursiveAction; import java.util.concurrent.TimeUnit; public class ForkJoinPoolDemo1 { public static class SendMsgTask extends RecursiveAction { private final int THRESHOLD = 10; private int start; private int end; private List\u0026lt;String\u0026gt; list; public SendMsgTask(int start, int end, List\u0026lt;String\u0026gt; list) { this.start = start; this.end = end; this.list = list; } @Override protected void compute() { // 做什么  //什么都不做  if ((end - start) \u0026lt;= THRESHOLD) { for (int i = start; i \u0026lt; end; i++) { //仅仅打印  System.out.println(Thread.currentThread().getName() + \u0026#34;: \u0026#34; + list.get(i)); } } else { // 拆分  int middle = (start + end) / 2; SendMsgTask left = new SendMsgTask(start, middle, list); SendMsgTask right = new SendMsgTask(middle, end, list); invokeAll(left, right); } } } public static void main(String[] args)throws Exception { List\u0026lt;String\u0026gt; list = new ArrayList\u0026lt;\u0026gt;(); for (int i = 0; i \u0026lt; 123; i++) { list.add(String.valueOf(i + 1)); } ForkJoinPool pool = new ForkJoinPool(); //都行 submit 和 execute 以及 invoke // pool.submit(new SendMsgTask(0, list.size(), list)); // pool.execute(new SendMsgTask(0, list.size(), list));  pool.invoke(new SendMsgTask(0, list.size(), list)) ; pool.awaitTermination(10, TimeUnit.SECONDS); pool.shutdown(); } }  求和  import java.util.ArrayList; import java.util.List; import java.util.concurrent.ForkJoinPool; import java.util.concurrent.RecursiveTask; import java.util.concurrent.TimeUnit; public class ForkJoinPoolDemo2 { public static class SumTask extends RecursiveTask\u0026lt;Integer\u0026gt; { private final int THRESHOLD = 10; private int start; private int end; private List\u0026lt;Integer\u0026gt; list; public SumTask(int start, int end, List\u0026lt;Integer\u0026gt; list) { this.start = start; this.end = end; this.list = list; } @Override protected Integer compute() { // 做什么  //什么都不做  if ((end - start) \u0026lt;= THRESHOLD) { // 直接求和  int sum = 0; for (int i = start; i \u0026lt; end; i++) { //仅仅打印  sum += this.list.get(i); } return sum; } else { // 拆分  int middle = (start + end) / 2; SumTask left = new SumTask(start, middle, list); SumTask right = new SumTask(middle, end, list); invokeAll(left, right); return left.join() + right.join(); } } } public static void main(String[] args) throws Exception { List\u0026lt;Integer\u0026gt; list = new ArrayList\u0026lt;\u0026gt;(); for (int i = 1; i \u0026lt;= 123; i++) { list.add(i); } ForkJoinPool pool = new ForkJoinPool(); //都行 submit 和 execute 以及 invoke  SumTask sumTask = new SumTask(0, list.size(), list); pool.submit(sumTask); // pool.execute(sumTask); // pool.invoke(sumTask);  System.out.println(sumTask.join()); pool.awaitTermination(10, TimeUnit.SECONDS); pool.shutdown(); } } 总结\r#\r\r 执行方法     方法名 说明 例     invoke(ForkJoinTask) 提交任务并一直阻塞直到任务执行完成返回合并结果。   execute(ForkJoinTask) 异步执行任务，无返回值   submit(ForkJoinTask) 异步执行任务，返回task本身，可以通过task.get()方法获取合并之后的结果。      是否有返回值\n  1.如果有返回值就继承RecursiveTask，没有返回值就继承RecursiveAction\n  2.invoke同步调用，如果想要异步调用，可以使用pool.execute(\u0026hellip;);替换invoke方法\n  "}),a.add({id:231,href:'/life/docs/%E8%84%9A%E6%9C%AC/npm%E9%87%8D%E8%A6%81%E5%91%BD%E4%BB%A4/',title:"node js - npm 重要命令 ",section:"脚本",content:"npm 包管理器查询网址\r#\r\r https://www.npmjs.com/ (和java的maven仓库差不多一个意思)  全局安装\r#\r\r  npm install less-loader@4.1.0\n  npm install less-loader@4.1.0 \u0026ndash;save\n  本地安装命令\r#\r\r  npm install less-loader@3.0.0 \u0026ndash;save-dev\n  npm add -D less-loader@3.0.0\n   上面两条等价\n 升级到最高版本 , 更新npm到最新版本\r#\r\r npm i npm@latest -d npm i npm@latest -g  安装所有依赖 (package.json)\r#\r\r npm install request  删除包问题\r#\r\r  npm uninstall webpack webpack-cli -g 全局\n  npm uninstall webpack webpack-cli -d 局部\n  npm uninstall less-loader 不区分局部和全局 卸载\n  "}),a.add({id:232,href:'/life/docs/databases/mysql/mysql_install_centos/',title:"centos7安装多个mysql",section:"mysql学习笔记",content:" centos7单机安装多个mysql8.0\n 一:上传\r#\r\r下载地址：https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.21-linux-glibc2.12-x86_64.tar.xz\r上传mysql-8.0.21-linux-glibc2.12-x86_64.tar.xz到服务器指定文件夹，如：/home/mysql\r二:解压\r#\r\rcd /home/mysql\rtar -xvf mysql-8.0.21-linux-glibc2.12-x86_64.tar.xz\r三:重命名文件夹\r#\r\rmv mysql-8.0.21-linux-glibc2.12-x86_64 mysql3306\r四:新建mysql用户、mysql用户组\r#\r\rcd /home/mysql/mysql3306\r#新建mysql用户、mysql用户组，如果之前已经建立过，就不用建立了\rgroupadd mysql\r#给mysql添加用户为 mysql\ruseradd mysql -g mysql\r五:在mysql3306下新增文件夹data，var，tmp，binlogs，logs备用\r#\r\rcd /home/mysql/mysql3306\rmkdir data var tmp binlogs logs\rchmod 777 ./tmp\rchmod 777 ./logs\rcd /home/mysql/mysql3306/logs\rtouch error.log\r六:在/home/mysql/mysql3306/etc下创建数据库配置文件\r#\r\rcd /home/mysql/mysql3306\rmkdir etc\rcd /home/mysql/mysql3306/etc\rtouch my.cnf\rvim my.cnf\r# my.cnf内容如下：\r[mysqld]\rport = 3306\rbasedir = /home/mysql/mysql3306\rdatadir = /home/mysql/mysql3306/data\rsocket = /home/mysql/mysql3306/tmp/mysql.sock\rmax_connections = 1000\rmax_user_connections = 500\rwait_timeout = 200\rdefault-time-zone = '+8:00'\rthread_cache_size = 64\rmax_connect_errors = 10000\rserver_id = 1 # backup上设置为2、3，主从复制时使用\rlog-bin = /home/mysql/mysql3306/binlogs/mysql-bin\rlog-bin-index = /home/mysql/mysql3306/binlogs/mysql-bin.index\rbinlog-ignore-db = mysql,information_schema #忽略写入binlogs日志的库\rauto-increment-increment = 1 #字段变化增量值\rauto-increment-offset = 1 #初始字段ID为1\rslave-skip-errors = all #忽略所有复制产生的错误\rsync_binlog = 1 #设置为1，是最安全但是性能损耗最大\r[client]\rsocket = /home/mysql/mysql3306/tmp/mysql.sock\rdefault-character-set = utf8\r[mysqld_safe]\rlog-error = /home/mysql/mysql3306/logs/error.log\rpid-file = /home/mysql/mysql3306/mysql.pid\r七:升级依赖\r#\r\ryum -y install make gcc-c++ cmake bison-devel ncurses ncurses-devel libaio-devel\r八:在mysql3306文件夹下面执行，一定要记录最后生成的初始密码\r#\r\rcd /home/mysql/mysql3306\r./bin/mysqld --defaults-file=/home/mysql/mysql3306/etc/my.cnf --initialize --user=mysql\r./bin/mysqld_safe --defaults-file=/home/mysql/mysql3306/etc/my.cnf --user=mysql \u0026amp;\r九:将support-files下的mysql.server文件内容修改成如下内容：\r#\r\rcd support-files\rvim mysql.server\r#!/bin/sh\r# Copyright Abandoned 1996 TCX DataKonsult AB \u0026amp; Monty Program KB \u0026amp; Detron HB\r# This file is public domain and comes with NO WARRANTY of any kind\r# MySQL daemon start/stop script.\r# Usually this is put in /etc/init.d (at least on machines SYSV R4 based\r# systems) and linked to /etc/rc3.d/S99mysql and /etc/rc0.d/K01mysql.\r# When this is done the mysql server will be started when the machine is\r# started and shut down when the systems goes down.\r# Comments to support chkconfig on RedHat Linux\r# chkconfig: 2345 64 36\r# description: A very fast and reliable SQL database engine.\r# Comments to support LSB init script conventions\r### BEGIN INIT INFO\r# Provides: mysql\r# Required-Start: $local_fs $network $remote_fs\r# Should-Start: ypbind nscd ldap ntpd xntpd\r# Required-Stop: $local_fs $network $remote_fs\r# Default-Start: 2 3 4 5\r# Default-Stop: 0 1 6\r# Short-Description: start and stop MySQL\r# Description: MySQL is a very fast and reliable SQL database engine.\r### END INIT INFO\r# If you install MySQL on some other places than /usr/local/mysql, then you\r# have to do one of the following things for this script to work:\r#\r# - Run this script from within the MySQL installation directory\r# - Create a /etc/my.cnf file with the following information:\r# [mysqld]\r# basedir=\u0026lt;path-to-mysql-installation-directory\u0026gt;\r# - Add the above to any other configuration file (for example ~/.my.ini)\r# and copy my_print_defaults to /usr/bin\r# - Add the path to the mysql-installation-directory to the basedir variable\r# below.\r#\r# If you want to affect other MySQL variables, you should make your changes\r# in the /etc/my.cnf, ~/.my.cnf or other MySQL configuration files.\r# If you change base dir, you must also change datadir. These may get\r# overwritten by settings in the MySQL configuration files.\r# 1.这些路径根据实际路径修改\rbasedir=/home/mysql/mysql3306\rdatadir=/home/mysql/mysql3306/data\rconf=/home/mysql/mysql3306/etc/my.cnf\r# Default value, in seconds, afterwhich the script should timeout waiting\r# for server start. # Value here is overriden by value in my.cnf. # 0 means don't wait at all\r# Negative numbers mean to wait indefinitely\rservice_startup_timeout=900\r# Lock directory for RedHat / SuSE.\rlockdir='/var/lock/subsys'\rlock_file_path=\u0026quot;$lockdir/mysql\u0026quot;\r# The following variables are only set for letting mysql.server find things.\r# Set some defaults\rmysqld_pid_file_path=\rif test -z \u0026quot;$basedir\u0026quot;\rthen\rbasedir=/usr/local/mysql\rbindir=/usr/local/mysql/bin\rif test -z \u0026quot;$datadir\u0026quot;\rthen\rdatadir=/usr/local/mysql/data\rfi\rsbindir=/usr/local/mysql/bin\rlibexecdir=/usr/local/mysql/bin\relse\rbindir=\u0026quot;$basedir/bin\u0026quot;\rif test -z \u0026quot;$datadir\u0026quot;\rthen\rdatadir=\u0026quot;$basedir/data\u0026quot;\rfi\rsbindir=\u0026quot;$basedir/sbin\u0026quot;\rlibexecdir=\u0026quot;$basedir/libexec\u0026quot;\rfi\r# datadir_set is used to determine if datadir was set (and so should be\r# *not* set inside of the --basedir= handler.)\rdatadir_set=\r#\r# Use LSB init script functions for printing messages, if possible\r#\rlsb_functions=\u0026quot;/lib/lsb/init-functions\u0026quot;\rif test -f $lsb_functions ; then\r. $lsb_functions\relse\rlog_success_msg()\r{\recho \u0026quot; SUCCESS! $@\u0026quot;\r}\rlog_failure_msg()\r{\recho \u0026quot; ERROR! $@\u0026quot;\r}\rfi\rPATH=\u0026quot;/sbin:/usr/sbin:/bin:/usr/bin:$basedir/bin\u0026quot;\rexport PATH\rmode=$1 # start or stop\r[ $# -ge 1 ] \u0026amp;\u0026amp; shift\rother_args=\u0026quot;$*\u0026quot; # uncommon, but needed when called from an RPM upgrade action\r# Expected: \u0026quot;--skip-networking --skip-grant-tables\u0026quot;\r# They are not checked here, intentionally, as it is the resposibility\r# of the \u0026quot;spec\u0026quot; file author to give correct arguments only.\rcase `echo \u0026quot;testing\\c\u0026quot;`,`echo -n testing` in\r*c*,-n*) echo_n= echo_c= ;;\r*c*,*) echo_n=-n echo_c= ;;\r*) echo_n= echo_c='\\c' ;;\resac\rparse_server_arguments() {\rfor arg do\rcase \u0026quot;$arg\u0026quot; in\r--basedir=*) basedir=`echo \u0026quot;$arg\u0026quot; | sed -e 's/^[^=]*=//'`\rbindir=\u0026quot;$basedir/bin\u0026quot;\rif test -z \u0026quot;$datadir_set\u0026quot;; then\rdatadir=\u0026quot;$basedir/data\u0026quot;\rfi\rsbindir=\u0026quot;$basedir/sbin\u0026quot;\rlibexecdir=\u0026quot;$basedir/libexec\u0026quot;\r;;\r--datadir=*) datadir=`echo \u0026quot;$arg\u0026quot; | sed -e 's/^[^=]*=//'`\rdatadir_set=1\r;;\r--pid-file=*) mysqld_pid_file_path=`echo \u0026quot;$arg\u0026quot; | sed -e 's/^[^=]*=//'` ;;\r--service-startup-timeout=*) service_startup_timeout=`echo \u0026quot;$arg\u0026quot; | sed -e 's/^[^=]*=//'` ;;\resac\rdone\r}\rwait_for_pid () {\rverb=\u0026quot;$1\u0026quot; # created | removed\rpid=\u0026quot;$2\u0026quot; # process ID of the program operating on the pid-file\rpid_file_path=\u0026quot;$3\u0026quot; # path to the PID file.\ri=0\ravoid_race_condition=\u0026quot;by checking again\u0026quot;\rwhile test $i -ne $service_startup_timeout ; do\rcase \u0026quot;$verb\u0026quot; in\r'created')\r# wait for a PID-file to pop into existence.\rtest -s \u0026quot;$pid_file_path\u0026quot; \u0026amp;\u0026amp; i='' \u0026amp;\u0026amp; break\r;;\r'removed')\r# wait for this PID-file to disappear\rtest ! -s \u0026quot;$pid_file_path\u0026quot; \u0026amp;\u0026amp; i='' \u0026amp;\u0026amp; break\r;;\r*)\recho \u0026quot;wait_for_pid () usage: wait_for_pid created|removed pid pid_file_path\u0026quot;\rexit 1\r;;\resac\r# if server isn't running, then pid-file will never be updated\rif test -n \u0026quot;$pid\u0026quot;; then\rif kill -0 \u0026quot;$pid\u0026quot; 2\u0026gt;/dev/null; then\r: # the server still runs\relse\r# The server may have exited between the last pid-file check and now. if test -n \u0026quot;$avoid_race_condition\u0026quot;; then\ravoid_race_condition=\u0026quot;\u0026quot;\rcontinue # Check again.\rfi\r# there's nothing that will affect the file.\rlog_failure_msg \u0026quot;The server quit without updating PID file ($pid_file_path).\u0026quot;\rreturn 1 # not waiting any more.\rfi\rfi\recho $echo_n \u0026quot;.$echo_c\u0026quot;\ri=`expr $i + 1`\rsleep 1\rdone\rif test -z \u0026quot;$i\u0026quot; ; then\rlog_success_msg\rreturn 0\relse\rlog_failure_msg\rreturn 1\rfi\r}\r# Get arguments from the my.cnf file,\r# the only group, which is read from now on is [mysqld]\rif test -x \u0026quot;$bindir/my_print_defaults\u0026quot;; then\rprint_defaults=\u0026quot;$bindir/my_print_defaults\u0026quot;\relse\r# Try to find basedir in /etc/my.cnf\r# 2.注释掉conf=/etc/my.cnf\r# conf=/etc/my.cnf\rprint_defaults=\rif test -r $conf\rthen\rsubpat='^[^=]*basedir[^=]*=\\(.*\\)$'\rdirs=`sed -e \u0026quot;/$subpat/!d\u0026quot; -e 's//\\1/' $conf`\rfor d in $dirs\rdo\rd=`echo $d | sed -e 's/[ ]//g'`\rif test -x \u0026quot;$d/bin/my_print_defaults\u0026quot;\rthen\rprint_defaults=\u0026quot;$d/bin/my_print_defaults\u0026quot;\rbreak\rfi\rdone\rfi\r# Hope it's in the PATH ... but I doubt it\rtest -z \u0026quot;$print_defaults\u0026quot; \u0026amp;\u0026amp; print_defaults=\u0026quot;my_print_defaults\u0026quot;\rfi\r#\r# Read defaults file from 'basedir'. If there is no defaults file there\r# check if it's in the old (depricated) place (datadir) and read it from there\r#\rextra_args=\u0026quot;\u0026quot;\rif test -r \u0026quot;$basedir/my.cnf\u0026quot;\rthen\rextra_args=\u0026quot;-e $basedir/my.cnf\u0026quot;\rfi\r# 3.添加extra_args=\u0026quot;-c $conf\u0026quot;\rextra_args=\u0026quot;-c $conf\u0026quot;\rparse_server_arguments `$print_defaults $extra_args mysqld server mysql_server mysql.server`\r#\r# Set pid file if not given\r#\rif test -z \u0026quot;$mysqld_pid_file_path\u0026quot;\rthen\rmysqld_pid_file_path=$datadir/`hostname`.pid\relse\rcase \u0026quot;$mysqld_pid_file_path\u0026quot; in\r/* ) ;;\r* ) mysqld_pid_file_path=\u0026quot;$datadir/$mysqld_pid_file_path\u0026quot; ;;\resac\rfi\rcase \u0026quot;$mode\u0026quot; in\r'start')\r# Start daemon\r# Safeguard (relative paths, core dumps..)\rcd $basedir\recho $echo_n \u0026quot;Starting MySQL\u0026quot;\rif test -x $bindir/mysqld_safe\rthen\r# Give extra arguments to mysqld with the my.cnf file. This script\r# may be overwritten at next upgrade.\r# 4.增加配置\r$bindir/mysqld_safe --defaults-file=\u0026quot;$conf\u0026quot; --user=root --datadir=\u0026quot;$datadir\u0026quot; --pid-file=\u0026quot;$mysqld_pid_file_path\u0026quot; $other_args \u0026gt;/dev/null \u0026amp;\rwait_for_pid created \u0026quot;$!\u0026quot; \u0026quot;$mysqld_pid_file_path\u0026quot;; return_value=$?\r# Make lock for RedHat / SuSE\rif test -w \u0026quot;$lockdir\u0026quot;\rthen\rtouch \u0026quot;$lock_file_path\u0026quot;\rfi\rexit $return_value\relse\rlog_failure_msg \u0026quot;Couldn't find MySQL server ($bindir/mysqld_safe)\u0026quot;\rfi\r;;\r'stop')\r# Stop daemon. We use a signal here to avoid having to know the\r# root password.\rif test -s \u0026quot;$mysqld_pid_file_path\u0026quot;\rthen\r# signal mysqld_safe that it needs to stop\rtouch \u0026quot;$mysqld_pid_file_path.shutdown\u0026quot;\rmysqld_pid=`cat \u0026quot;$mysqld_pid_file_path\u0026quot;`\rif (kill -0 $mysqld_pid 2\u0026gt;/dev/null)\rthen\recho $echo_n \u0026quot;Shutting down MySQL\u0026quot;\rkill $mysqld_pid\r# mysqld should remove the pid file when it exits, so wait for it.\rwait_for_pid removed \u0026quot;$mysqld_pid\u0026quot; \u0026quot;$mysqld_pid_file_path\u0026quot;; return_value=$?\relse\rlog_failure_msg \u0026quot;MySQL server process #$mysqld_pid is not running!\u0026quot;\rrm \u0026quot;$mysqld_pid_file_path\u0026quot;\rfi\r# Delete lock for RedHat / SuSE\rif test -f \u0026quot;$lock_file_path\u0026quot;\rthen\rrm -f \u0026quot;$lock_file_path\u0026quot;\rfi\rexit $return_value\relse\rlog_failure_msg \u0026quot;MySQL server PID file could not be found!\u0026quot;\rfi\r;;\r'restart')\r# Stop the service and regardless of whether it was\r# running or not, start it again.\rif $0 stop $other_args; then\r$0 start $other_args\relse\rlog_failure_msg \u0026quot;Failed to stop running server, so refusing to try to start.\u0026quot;\rexit 1\rfi\r;;\r'reload'|'force-reload')\rif test -s \u0026quot;$mysqld_pid_file_path\u0026quot; ; then\rread mysqld_pid \u0026lt; \u0026quot;$mysqld_pid_file_path\u0026quot;\rkill -HUP $mysqld_pid \u0026amp;\u0026amp; log_success_msg \u0026quot;Reloading service MySQL\u0026quot;\rtouch \u0026quot;$mysqld_pid_file_path\u0026quot;\relse\rlog_failure_msg \u0026quot;MySQL PID file could not be found!\u0026quot;\rexit 1\rfi\r;;\r'status')\r# First, check to see if pid file exists\rif test -s \u0026quot;$mysqld_pid_file_path\u0026quot; ; then read mysqld_pid \u0026lt; \u0026quot;$mysqld_pid_file_path\u0026quot;\rif kill -0 $mysqld_pid 2\u0026gt;/dev/null ; then log_success_msg \u0026quot;MySQL running ($mysqld_pid)\u0026quot;\rexit 0\relse\rlog_failure_msg \u0026quot;MySQL is not running, but PID file exists\u0026quot;\rexit 1\rfi\relse\r# Try to find appropriate mysqld process\rmysqld_pid=`pidof $libexecdir/mysqld`\r# test if multiple pids exist\rpid_count=`echo $mysqld_pid | wc -w`\rif test $pid_count -gt 1 ; then\rlog_failure_msg \u0026quot;Multiple MySQL running but PID file could not be found ($mysqld_pid)\u0026quot;\rexit 5\relif test -z $mysqld_pid ; then if test -f \u0026quot;$lock_file_path\u0026quot; ; then log_failure_msg \u0026quot;MySQL is not running, but lock file ($lock_file_path) exists\u0026quot;\rexit 2\rfi log_failure_msg \u0026quot;MySQL is not running\u0026quot;\rexit 3\relse\rlog_failure_msg \u0026quot;MySQL is running but PID file could not be found\u0026quot;\rexit 4\rfi\rfi\r;;\r*)\r# usage\rbasename=`basename \u0026quot;$0\u0026quot;`\recho \u0026quot;Usage: $basename {start|stop|restart|reload|force-reload|status} [ MySQL server options ]\u0026quot;\rexit 1\r;;\resac\rexit 0\r十:修改完mysql.serve，在mysql3306文件夹下面执行\r#\r\rcd /home/mysql/mysql3306\rsupport-files/mysql.server start\r#查看是否已经启动\rnetstat -ntlp\r#将mysql3306加入服务\rcp /home/mysql/mysql3306/support-files/mysql.server /etc/init.d/mysql3306\r#开机自启\rchkconfig --add mysql3306\r#显示服务列表，如果3,4,5都是开的就说明是自启设置成功\rchkconfig --list\r#重启数据库的命令：\r/etc/init.d/mysql3306 restart\r十一:访问MySql，重置密码\r#\r\r#第二个数据库必须使用socket进入，否则默认为第一个数据库。因为配置了全局环境变量\rcd /home/mysql/mysql3306/bin/\r./mysql -uroot -p -h 127.0.0.1 --socket=../tmp/mysql.sock --port=3306\r#输入初始化的密码：a/NRxfzh;87p（上面保存的初始密码）\ralter user 'root'@'localhost' identified by 'suxia@cc2021!';\rflush privileges;\r#远程连接用户设置\ruse mysql;\rselect 'host' from user where user='root';\rupdate user set host = '%' where user ='root';\rflush privileges;\rselect 'host' from user where user='root';\r#退出\rexit\r十二:开放3306端口\r#\r\r#查看firewalld状态，如果是dead状态，即防火墙未开启\rsystemctl status firewalld\r#开启防火墙\rsystemctl start firewalld\r#确认firewalld状态\rsystemctl status firewalld\r#关闭\rsystemctl stop firewalld\r#开放端口\rfirewall-cmd --zone=public --add-port=3306/tcp --permanent\rfirewall-cmd --reload\rfirewall-cmd --zone=public --list-ports\r#关闭端口\rfirewall-cmd --zone=public --remove-port=3306/tcp --permanent firewall-cmd --reload\r十三:远程同步文件\r#\r\rrsync -av -e 'ssh -p 22' /home/mysql/mysql-8.0.21-linux-glibc2.12-x86_64.tar.xz root@ip:/home/mysql\r"}),a.add({id:233,href:'/life/docs/databases/mysql/mysql_%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E4%B8%89%E8%8C%83%E5%BC%8F/',title:"mysql_数据库设计三范式",section:"mysql学习笔记",content:"mysql_数据库设计三范式\r#\r\r 设计关系数据库时，遵从不同的规范要求，设计出合理的关系型数据库，这些不同的规范要求被称为不同的范式，各种范式呈递次规范，越高的范式数据库冗余越小。\n  目前关系数据库有六种范式：第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、巴斯-科德范式（BCNF）、第四范式(4NF）和第五范式（5NF，又称完美范式）。\n 数据库三范式\r#\r\r第一范式（1NF）\r#\r\r 所谓第一范式（1NF）是指在关系模型中，对域添加的一个规范要求，所有的域都应该是原子性的，即数据库表的每一列都是不可分割的原子数据项，而不能是集合，数组，记录等非原子数据项。即实体中的某个属性有多个值时，必须拆分为不同的属性。在符合第一范式（1NF）表中的每个域值只能是实体的一个属性或一个属性的一部分。简而言之，第一范式就是无重复的域。 说明：在任何一个关系数据库中，第一范式（1NF）是对关系模式的设计基本要求，一般设计中都必须满足第一范式（1NF）。不过有些关系模型中突破了1NF的限制，这种称为非1NF的关系模型。换句话说，是否必须满足1NF的最低要求，主要依赖于所使用的关系模型。  第二范式（2NF）\r#\r\r 在1NF的基础上，非码属性必须完全依赖于候选码（在1NF基础上消除非主属性对主码的部分函数依赖） 第二范式（2NF）是在第一范式（1NF）的基础上建立起来的，即满足第二范式（2NF）必须先满足第一范式（1NF）。第二范式（2NF）要求数据库表中的每个实例或记录必须可以被唯一地区分。选取一个能区分每个实体的属性或属性组，作为实体的唯一标识。例如在员工表中的身份证号码即可实现每个一员工的区分，该身份证号码即为候选键，任何一个候选键都可以被选作主键。在找不到候选键时，可额外增加属性以实现区分，如果在员工关系中，没有对其身份证号进行存储，而姓名可能会在数据库运行的某个时间重复，无法区分出实体时，设计辟如ID等不重复的编号以实现区分，被添加的编号或ID选作主键。（该主键的添加是在ER设计时添加，不是建库时随意添加） 第二范式（2NF）要求实体的属性完全依赖于主关键字。所谓完全依赖是指不能存在仅依赖主关键字一部分的属性，如果存在，那么这个属性和主关键字的这一部分应该分离出来形成一个新的实体，新实体与原实体之间是一对多的关系。为实现区分通常需要为表加上一个列，以存储各个实例的唯一标识。简而言之，第二范式就是在第一范式的基础上属性完全依赖于主键。  第三范式（3NF）\r#\r\r 在2NF基础上，任何非主属性不依赖于其它非主属性（在2NF基础上消除传递依赖） 第三范式（3NF）是第二范式（2NF）的一个子集，即满足第三范式（3NF）必须满足第二范式（2NF）。简而言之，第三范式（3NF）要求一个关系中不包含已在其它关系已包含的非主关键字信息。例如，存在一个部门信息表，其中每个部门有部门编号（dept_id）、部门名称、部门简介等信息。那么在员工信息表中列出部门编号后就不能再将部门名称、部门简介等与部门有关的信息再加入员工信息表中。如果不存在部门信息表，则根据第三范式（3NF）也应该构建它，否则就会有大量的数据冗余。简而言之，第三范式就是属性不依赖于其它非主属性，也就是在满足2NF的基础上，任何非主属性不得传递依赖于主属性。  巴斯-科德范式（BCNF）\r#\r\r Boyce-Codd Normal Form（巴斯-科德范式）\n  在3NF基础上，任何非主属性不能对主键子集依赖（在3NF基础上消除对主码子集的依赖） 巴斯-科德范式（BCNF）是第三范式（3NF）的一个子集，即满足巴斯-科德范式（BCNF）必须满足第三范式（3NF）。通常情况下，巴斯-科德范式被认为没有新的设计规范加入，只是对第二范式与第三范式中设计规范要求更强，因而被认为是修正第三范式，也就是说，它事实上是对第三范式的修正，使数据库冗余度更小。这也是BCNF不被称为第四范式的原因。某些书上，根据范式要求的递增性将其称之为第四范式是不规范，也是更让人不容易理解的地方。而真正的第四范式，则是在设计规范中添加了对多值及依赖的要求。 定义：关系模式R\u0026lt;U,F\u0026gt;∈1FNF,若X→Y且Y不是X的子集时X必含有码，则R\u0026lt;U,F\u0026gt;∈BCNF。也就是说，关系模式R\u0026lt;U,F\u0026gt;中，若每一个决定因素都包含码，则R\u0026lt;U,F\u0026gt;∈BCNF。   由BCNF的定义可以得到结论，一个满足BCNF的关系模式有：\n  -所有非主属性对每一个码都是完全函数依赖。 -所有主属性对每一个不包含它的码也是完全函数依赖。 -没有任何属性完全函数依赖于非码的任何一组属性。 若R∈BCNF，按定义排除了任何属性对码的传递依赖与部分依赖，所以R∈3NF。[1] 一般关系型数据库设计中，达到BCNF就可以了！  【数据库五大约束】\r#\r\r 1.primary KEY:设置主键约束； 2.UNIQUE：设置唯一性约束，不能有重复值； 3.DEFAULT 默认值约束，height DOUBLE(3,2)DEFAULT 1.2 height不输入是默认为1,2 4.NOT NULL：设置非空约束，该字段不能为空； 5.FOREIGN key :设置外键约束。  【主键】\r#\r\r 1.主键的注意事项？ 主键默认非空，默认唯一性约束，只有主键才能设置自动增长，自动增长一定是主键，主键不一定自动增长； 2.设置主键的方式？ 在定义列时设置：ID INT PRIMARY KEY 在列定义完之后设置：primary KEY（id）  【外键】\r#\r\r 1.设置外键的注意事项：  只有INNODB的数据库引擎支持外键，修改my.ini文件设置default-storage-engine=INNODB 外键必须与参照列的数据类型必须相同（数值型要求长度和无符号都相同，字符串要求类型相同，长度可以不同）。\n  2设置外键的语法：\nCONSTRAINT 外键名 FOREIGN KEY (外键字段)REFERENCES 参照表 (参照字段) ON DELETE SET NULL ON UPDATE CASCADE 设置参照完整性\n  3.外键约束的参照操作？\n   参照表的完整性操作：当对参照表的参照字段进行删除或更新时，外键表中的外键如何应对；\n  参照操作可选值：\n   RESTRICT拒绝参照表删除或更新参照字段；\n  RESTRICT和NO ACTION相同，但这个指令只在mysql生效;\n  CASCADE删除或更新参照表的参照字段时，外键表的记录同步删除更新；\n  SET NULL 删除或更新参照表的参照字段时，外键表的外键设为NULL;\n   1NF, 字段不可再分。这个关系数据库强制了，想建立复合的字段也建立不起来。关系数据库出现之前才有这个问题。 2NF，主键依赖，就是一张表里面的字段，必须是跟主键相关的，不能把无关的数据放进来。主键依赖，实质就是，这个信息如果是对象的属性，就放进来，否则就不放。 3NF，就是不能重复存储相同的信息。这个情况，其实是在一个对象里引用了另外一个对象，这个时候，存一个引用就够了，而不是重复的存储这个对象的多个副本。 2NF和3NF的本质是，对象的属性依赖对象。数据库的主键，作用是什么？它用来唯一的标识这个对象，同时，用来给其他对象引用 引用 引用（重要的事情说三次） 所以，实战中，所有数据库都是用int类型做主键（int，或者bigint），而且，主键一律是自增，这是不成文的规则，凡是不遵守这个规则的，都是错的（虽然理论上可以）这样， 数据库写数据的时候，几乎是永远不写入同一个对象的重复信息的，需要重复的时候，只写这个对象的ID  create table Courses(\rCourseID int identity primary key,\rCourseName nvarchar(50) not null\r)\rcreate table Departments( DepartmentID int identity primary key,	DepartmentName nvarchar(50) not null,	HeadName nvarchar(50) not null);\rcreate table Students(	StudentID int identity primary key,	Name nvarchar(50),	DepartmentID int not null	Constraint FkStudentDepartment foreign key (DepartmentID) references Departments(DepartmentID));\rcreate table Results(	ResultID int identity primary key,	StudentID int not null,	CourseID int not null,	Result int not null,\rConstraint FkResultStudent foreign key (StudentID) references Students(StudentID));\r11.数据库设计基础原则：三范式\r#\r\r 1）表必须有主键 2）字段内容不能是其他的字段加工而成 3）行数据不能相同  12.现今业界主流数据库设计原则：反三范式\r#\r\r 1）表不是必须有主键 2）字段存一些加工后的中间的结果，冗余设计 3）记录冗余   三范式追求的目标存储空间尽量小；反三范式追求的目标是查询速度。 创建数据库设计时首先按三范式设计，然后局部优化。\n "}),a.add({id:234,href:'/life/docs/javadir/tooldoc/spring%E5%B7%A5%E5%85%B7/',title:"spring工具类",section:"Java公共库文档总结 ",content:"spring工具类\r#\r\r Spring-core中提供了大量的工具类，常用的有StringUtils、ObjectUtils、NumberUtils、Base64Utils等，Spring工具类在spring-core.jar中的org.springframework.util包下。\n  1:StringUtils  方法名	返回值类型	作用	备注\risEmpty(Object str)	boolean	判断字符串是否为Null或者空字符串	null和''都为true\rhasLength(CharSequence str)	boolean	判断字符串长度是否大于1	null和''都为false\rhasText(CharSequence str)	boolean	判断字符串中是否有字符	null和空字白符都为false\rcontainsWhitespace(CharSequence str)	boolean	字符串中是否含有空白字符	trimWhitespace(CharSequence str)	String	去掉字符串中首尾的空白字符	trimAllWhitespace(String str)	String	去 掉字符串中所有的空白字符	trimLeadingWhitespace(String str)	String	去掉字符串左边的空白字符	trimTrailingWhitespace(String str)	String	去掉字符串右边边的空白字符	startsWithIgnoreCase(String str, String prefix)	String	判断字符串是否以xx开头，并且忽略大小写	getFilename(String path)	String	获取文件名	“mypath/myfile.txt” -\u0026gt; “myfile.txt”\rgetFilenameExtension(String path)	String	获取文件扩展名	“mypath/myfile.txt” -\u0026gt; “txt”\rstripFilenameExtension(String path)	String	去掉文件扩展名	“mypath/myfile.txt” -\u0026gt; “mypath/myfile”\rreplace(String inString, String oldPattern, String newPattern)	String	替换字符串	delete(String inString, String pattern)	String	从给定的字符串中删除所有匹配的字符	deleteAny(String inString, String charsToDelete)	String	删除所有指定字符	“az\\n” will delete ‘a’s, ‘z’s and new lines\rSystem.out.println(org.springframework.util.StringUtils.containsWhitespace(\u0026quot;sfas\u0026quot;));//是否有空白 false\rSystem.out.println(org.springframework.util.StringUtils.trimWhitespace(\u0026quot; - dfasd- \u0026quot;));//去除前后空格\rSystem.out.println(org.springframework.util.StringUtils.trimAllWhitespace(\u0026quot; - - - - fshjk s j - -\u0026quot;));//去除所有空格\rSystem.out.println(org.springframework.util.StringUtils.trimLeadingWhitespace(\u0026quot; - - - - fshjk s j - - \u0026quot;));//去除第字符串开头的空格\rSystem.out.println(org.springframework.util.StringUtils.trimTrailingWhitespace(\u0026quot; - - - - fshjk s j - - \u0026quot;));//去除第字符串结尾的空格\rSystem.out.println(org.springframework.util.StringUtils.substringMatch(\u0026quot;f sdfc\u0026quot;,2,\u0026quot;sd\u0026quot;));//判断字符串第几个位置起为某值\rSystem.out.println(org.springframework.util.StringUtils.countOccurrencesOf(\u0026quot;qwertyrtttttt\u0026quot;, \u0026quot;t\u0026quot;));//判断字符串字符重复次数\rSystem.out.println(org.springframework.util.StringUtils.replace(\u0026quot;yuiyuiyui\u0026quot;, \u0026quot;y\u0026quot;, \u0026quot;m\u0026quot;));//字符替换\rSystem.out.println(org.springframework.util.StringUtils.delete(\u0026quot;yuiyuiyui\u0026quot;, \u0026quot;y\u0026quot;));//删除匹配的字符\rSystem.out.println(org.springframework.util.StringUtils.deleteAny(\u0026quot;yuiyuiyui\u0026quot;, \u0026quot;yi\u0026quot;));//删除出现且匹配的字符\rSystem.out.println(org.springframework.util.StringUtils.quote(\u0026quot;yuiyuiyui\u0026quot;));//为字符串加上''号\rSystem.out.println(org.springframework.util.StringUtils.unqualify(\u0026quot;yuiyuiy.ui\u0026quot;));//字符串截取，，从'.'号+1的未知开始\rSystem.out.println(org.springframework.util.StringUtils.unqualify(\u0026quot;yuiyuiy.ui\u0026quot;,'y'));//字符串截取，，从字符最后出现的位置+1开始\rSystem.out.println(org.springframework.util.StringUtils.capitalize(\u0026quot;yuiyuiy\u0026quot;));//首字母大写\rSystem.out.println(org.springframework.util.StringUtils.uncapitalize(\u0026quot;YuIyuiy\u0026quot;));//首字母小写\rSystem.out.println(org.springframework.util.StringUtils.uncapitalize(\u0026quot;YuIyuiy\u0026quot;));//首字母小写 changeFirstCharacterCase(String str, boolean capitalize),capitalize为true则为大写\rSystem.out.println(org.springframework.util.StringUtils.getFilename(\u0026quot;D://Java\u0026quot;));//截取最后一个\\出现的未知+1的字符串 Java\rSystem.out.println(org.springframework.util.StringUtils.getFilenameExtension(\u0026quot;D:/Java.fdsdf\u0026quot;));//获取路劲下的后缀名 fdsdf\rSystem.out.println(org.springframework.util.StringUtils.stripFilenameExtension(\u0026quot;D:/Java.fdsdf\u0026quot;));//获取路劲下的后缀名之前的部分 D:/Java\r 2:ObjectUtils  isEmpty(Object obj)	boolean	判断对象是否为空	对象为null或者数组Map为空等都为true\risEmpty(Object[] array)	boolean	判断数组是否为空	isArray(Object obj)	boolean	判断对象是否为数组	containsElement(Object[] array, Object element)	boolean	判断数据组中是否包含给定的元素	addObjectToArray(A[] array, O obj)\r 3:NumberUtils  convertNumberToTargetClass(Number number, Class targetClass)	\u0026lt;T extends Number\u0026gt; T	将Number转为指定的类型\rparseNumber(String text, Class targetClass)	\u0026lt;T extends Number\u0026gt; T	将字符串转为数值类型\rparseNumber(String text, Class targetClass, NumberFormat numberFormat)	\u0026lt;T extends Number\u0026gt; T	将字符串转为数值类型\r 4:Base64Utils  encode(byte[] src)	byte[]	编码\rdecode(byte[] src)	byte[]	解码\r"}),a.add({id:235,href:'/life/docs/javadir/thread/practice/',title:"线程最佳实践",section:"多线程与并发 ",content:"线程最佳实践\r#\r\r"}),a.add({id:236,href:'/life/docs/javadir/middleware/rabbit-mq/ask/',title:"ask",section:"rabbit-mq",content:"应答机制\r#\r\r 消费者完成一个任务可能需要一段时间，如果其中一个消费者处理一个长的任务并仅只完成 了部分突然它挂掉了，会发生什么情况。RabbitMQ 一旦向消费者传递了一条消息，便立即将该消 息标记为删除。在这种情况下，突然有个消费者挂掉了，我们将丢失正在处理的消息。以及后续 发送给该消费这的消息，因为它无法接收到。\n 为了保证消息在发送过程中不丢失，rabbitmq 引入消息应答机制，消息应答就是:消费者在接 收到消息并且处理该消息之后，告诉 rabbitmq 它已经处理了，rabbitmq 可以把该消息删除了。\n  Channel.basicAck(用于肯定确认)\n  Channel.basicNack(用于否定确认)\n  Channel.basicReject(用于否定确认)\n  与 Channel.basicNack 相比少一个参数 , 不处理该消息了直接拒绝，可以将其丢弃了\n 一个消息没有确认并且该消费者掉线了  "}),a.add({id:237,href:'/life/docs/python/install/pyqt5_note/',title:"python pyqt5 介绍",section:"python 插件学习",content:"关于 PyQt5\r#\r\rPyQt5 是Digia的一套Qt5应用框架与python的结合，同时支持2.x和3.x。本教程使用的是3.x。Qt库由Riverbank Computing开发，是最强大的GUI库之一 ，官方网站：www.riverbankcomputing.co.uk/news。\nPyQt5是由一系列Python模块组成。超过620个类，6000函数和方法。能在诸如Unix、Windows和Mac OS等主流操作系统上运行。PyQt5有两种证书，GPL和商业证书。\nPyQt5类分为很多模块，主要模块有：\n QtCore 包含了核心的非GUI的功能。主要和时间、文件与文件夹、各种数据、流、URLs、mime类文件、进程与线程一起使用。 QtGui 包含了窗口系统、事件处理、2D图像、基本绘画、字体和文字类。 QtWidgets QtMultimedia QtBluetooth QtNetwork QtPositioning Enginio QtWebSockets QtWebKit QtWebKitWidgets QtXml QtSvg QtSql QtTest  QtWidgets类包含了一系列创建桌面应用的UI元素。 QtMultimedia包含了处理多媒体的内容和调用摄像头API的类。 QtBluetooth模块包含了查找和连接蓝牙的类。 QtNetwork包含了网络编程的类，这些工具能让TCP/IP和UDP开发变得更加方便和可靠。 QtPositioning包含了定位的类，可以使用卫星、WiFi甚至文本。 Engine包含了通过客户端进入和管理Qt Cloud的类。 QtWebSockets包含了WebSocket协议的类。 QtWebKit包含了一个基WebKit2的web浏览器。 QtWebKitWidgets包含了基于QtWidgets的WebKit1的类。 QtXml包含了处理xml的类，提供了SAX和DOM API的工具。 QtSvg提供了显示SVG内容的类，Scalable Vector Graphics (SVG)是一种是一种基于可扩展标记语言（XML），用于描述二维矢量图形的图形格式（这句话来自于维基百科）。 QtSql提供了处理数据库的工具。 QtTest提供了测试PyQt5应用的工具。\nPyQt4和PyQt5的区别\r#\r\rPyQt5不兼容PyQt4。PyQt5有一些巨大的改进。但是，迁移并不是很难，两者的区别如下：\n 重新组合模块，一些模块已经被废弃(QtScript)，有些被分为两个子模块(QtGui, QtWebKit)。 添加了新的模块，比如QtBluetooth, QtPositioning，和Enginio。 废弃了SINGAL()和SLOT()的调用方式，使用了新的信号和xx处理方式。 不再支持被标记为废弃的或不建议使用的API。  安装\r#\r\rpip3 install PyQt5 -i https://pypi.douban.com/simple pip3 install PyQt5-tools -i https://pypi.douban.com/simple  验证是否安装成功 code  import sys from PyQt5.QtWidgets import QWidget, QApplication app = QApplication(sys.argv) widget = QWidget() widget.resize(640, 480) widget.setWindowTitle(\u0026#34;Hello, PyQt5!\u0026#34;) widget.show() sys.exit(app.exec()) pyqt5原文文档 pyqt5中文文档 pyqt5 github 文档出处 pyqt5 博客园\nqyqt例子参考\n"}),a.add({id:238,href:'/life/docs/algorithm/data-structure/heap/',title:"堆(优化队列)",section:"数据结构",content:"堆(优化队列)\r#\r\r"}),a.add({id:239,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/b3akcg3n8k/',title:"我自己理解的聊天技巧",section:"自信",content:"  1:要让对方觉得你在用心和她/他聊天\n  2:要尽可能的照顾到对方的情绪因为聊天实际意义并不大共情的意义才是最大的 特别是情侣\n  3:聊天后 你如果在意这个人 应当复盘和做相应的记录比如 生日,爱好,兴趣\n  4:假如你以前不怎么会聊天 你最好每天总结聊天技巧\n  "}),a.add({id:240,href:'/life/docs/javadir/thread/tool/collection/',title:"并发集合框架",section:"并发工具 ",content:"collection\r#\r\r"}),a.add({id:241,href:'/life/docs/%E8%84%9A%E6%9C%AC/npm%E9%83%A8%E5%88%86%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/',title:"npm部分插件安装问题 ",section:"脚本",content:" less版本过高的解决办法  解决方法：\r卸载安装的高版本的less-loader ， 【npm uninstall less-loader】，\r安装指定低版本的less-loader 【npm install less-loader@4.1.0 --save】\r webpack Cannot read property \u0026lsquo;tap\u0026rsquo; of undefined ?  解决：\r这个报错是webpack依赖重复引入导致的，由于已经有依赖中引入的webpack，然后有自己引入的webpack。\r下面是生产的依赖，将\r“webpack”: “^4.0.0-beta.3”,\r“webpack-dev-server”: “2.7.1”,\r“webpack-manifest-plugin”: “1.2.1”,\r删掉，移除node_modules。重新npm install 。再启动项目，就搞定了\r 使用webpack打包报ERROR in TypeError: Cannot read property ‘tap‘ of undefined  降低版本 webpack\r假如降为4.44.2 则\rnpm install webpack@4.44.2 -g 全局\rnpm install webpack@4.44.2 -D 局部\r less-loader模块 TypeError: this.getOptions is not a function  原因： less-loader安装的版本过高\r解决方案： 1.npm uninstall less-loader\r2.npm install less-loader@6.0.0\r less-loader模块 Module not found: Error: Can\u0026rsquo;t resolve \u0026lsquo;less-loader\u0026rsquo;报错解决  npm install less less-loader --save-dev\r webpack打包css报错：UnhandledPromiseRejectionWarning: TypeError: this.getResolve is not a function  出错原因：\rcss-loader 和 style-loader 版本过高\r解决办法：在package.json文件中降低 css-loader 和 style-loader 版本\r extract-text-webpack-plugin 打包css报错的解决  降低webpack版本\r  如\n  webpack.config.js\n  const path = require(\u0026#39;path\u0026#39;); const ExtractTextPlugin = require(\u0026#34;extract-text-webpack-plugin\u0026#34;); module.exports = { entry: \u0026#39;./src/index.js\u0026#39;, output: { path: path.resolve(__dirname, \u0026#39;dist\u0026#39;), publicPath: \u0026#39;/dist/\u0026#39;, filename: \u0026#39;bundle.js\u0026#39; }, mode: \u0026#39;production\u0026#39;, module: { rules: [ { test: /\\.css$/, //loader: [\u0026#39;style-loader\u0026#39;,\u0026#39;css-loader\u0026#39;]  use: ExtractTextPlugin.extract({ fallback: \u0026#34;style-loader\u0026#34;, use: \u0026#34;css-loader\u0026#34; }) }, { test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/, loader: \u0026#39;url-loader\u0026#39;, options: { limit: 10000*4, name: \u0026#39;[name].[ext]?[hash]\u0026#39; } } ] }, plugins: [ new ExtractTextPlugin(\u0026#34;styles.css\u0026#34;), ] };  package.json  { \u0026#34;devDependencies\u0026#34;: { \u0026#34;css-loader\u0026#34;: \u0026#34;^0.28.7\u0026#34;, \u0026#34;extract-text-webpack-plugin\u0026#34;: \u0026#34;^4.0.0-beta.0\u0026#34;, \u0026#34;file-loader\u0026#34;: \u0026#34;^1.1.4\u0026#34;, \u0026#34;style-loader\u0026#34;: \u0026#34;^0.23.1\u0026#34;, \u0026#34;url-loader\u0026#34;: \u0026#34;^0.5.8\u0026#34;, \u0026#34;webpack\u0026#34;: \u0026#34;^4.12.0\u0026#34; } } "}),a.add({id:242,href:'/life/docs/python/base/python-object/',title:"python 面向对象",section:"python 基础学习",content:"面向对象\r#\r\r 类(Class): 用来描述具有相同的属性和方法的对象的集合。它定义了该集合中每个对象所共有的属性和方法。对象是类的实例。 类变量：类变量在整个实例化的对象中是公用的。类变量定义在类中且在函数体之外。类变量通常不作为实例变量使用。 数据成员：类变量或者实例变量, 用于处理类及其实例对象的相关的数据。 方法重写：如果从父类继承的方法不能满足子类的需求，可以对其进行改写，这个过程叫方法的覆盖（override），也称为方法的重写。 局部变量：定义在方法中的变量，只作用于当前实例的类。 实例变量：在类的声明中，属性是用变量来表示的。这种变量就称为实例变量，是在类声明的内部但是在类的其他成员方法之外声明的。 继承：即一个派生类（derived class）继承基类（base class）的字段和方法。继承也允许把一个派生类的对象作为一个基类对象对待。例如，有这样一个设计：一个Dog类型的对象派生自Animal类，这是模拟\u0026quot;是一个（is-a）\u0026ldquo;关系（例图，Dog是一个Animal）。 实例化：创建一个类的实例，类的具体对象。 方法：类中定义的函数。 对象：通过类定义的数据结构实例。对象包括两个数据成员（类变量和实例变量）和方法。  import random class Employee: # 所有员工的基类 empCount 变量是一个类变量，它的值将在这个类的所有实例之间共享 empCount = 0 # 类的构造函数或初始化方法，当创建了这个类的实例时就会调用该方法 def __init__(self, name, salary): self.name = name self.salary = salary Employee.empCount += 1 def displayCount(self): print(\u0026#34;Total Employee\u0026#34;, Employee.empCount, sep=\u0026#34; _\u0026#34;) def displayEmployee(self): print(\u0026#34;name:\u0026#34;, self.name, \u0026#34; ;\u0026#34;, \u0026#34;salary:\u0026#34;, self.salary) # 定义实例 1 t1 = Employee(\u0026#34;张三\u0026#34;, random.random() * random.random() * 10000) t1.displayCount() t1.displayEmployee() # 定义实例 2 t2 = Employee(\u0026#34;李四\u0026#34;, random.random() * random.random() * 10000) t2.displayCount() t2.displayEmployee() 内置类属性\r#\r\r dict : 类的属性（包含一个字典，由类的数据属性组成） doc :类的文档字符串 name: 类名 module: 类定义所在的模块（类的全名是'main.className'，如果类位于一个导入模块mymod中，那么className.module 等于 mymod） bases : 类的所有父类构成元素（包含了一个由所有父类组成的元组）  import random class Person: hand = \u0026#34;\u0026#34; footer = \u0026#34;\u0026#34; head = \u0026#34;\u0026#34; # 这里是继承 Person class Teacher(Person) : # 静态类变量 empCount = 0 def __init__(self,name,position): self.name = name self.position = position def print(self): print(\u0026#34;名字:\u0026#34;,self.name,\u0026#34; 职位:\u0026#34;,self.position) print(\u0026#34;__dict__ \u0026#34;,Teacher.__dict__ ,sep=\u0026#34;:\u0026#34;) print(\u0026#34;__doc__\u0026#34;,Teacher.__doc__,sep=\u0026#34;:\u0026#34;) print(\u0026#34;__name__\u0026#34;,Teacher.__name__,sep=\u0026#34;:\u0026#34;) print(\u0026#34;__module__\u0026#34;,Teacher.__module__,sep=\u0026#34;:\u0026#34;) print(\u0026#34;__bases__ \u0026#34;,Teacher.__bases__ ,sep=\u0026#34;:\u0026#34;) t1 = Teacher(\u0026#39;张老师\u0026#39;,\u0026#39;数学\u0026#39;) t1.print() t2 = Teacher(\u0026#39;李老师\u0026#39;,\u0026#39;英语\u0026#39;) t2.print() "}),a.add({id:243,href:'/life/docs/databases/mysql/mysql%E4%BA%8B%E5%8A%A1/',title:"mysql事务",section:"mysql学习笔记",content:"mysql事务\r#\r\r什么是事务\r#\r\r 一系列有序的数据库操作：  要么全部成功 要么全部回退到操作前的状态 中间状态对其他连接不可见   事务的基本操作：    基本操作 说明     start transaction 开始事务   commit 提交(全部完成)   rollback 回滚(回到初始状态)       创建一个临时表  CREATE TABLE `t_transaction` ( `id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) DEFAULT NULL, `num` bigint DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;  例子事务使用  -- 开启一个事务 start TRANSACTION ; -- 或者使用(非标准sql) begin ; insert into t_transaction( `name` ,`num`) values(\u0026#39;abc\u0026#39;,ROUND(RAND()*100)); -- 事务结束，插入成功 COMMIT ;  例子 事务 回滚  START TRANSACTION ; BEGIN ; insert into t_transaction( `name` ,`num`) values(\u0026#39;kk\u0026#39;,ROUND(RAND()*100)); ROLLBACK ; -- 不会插入一条数据   事务回滚点  START TRANSACTION ; BEGIN ; insert into t_transaction( `name` ,`num`) values(\u0026#39;s1x\u0026#39;,ROUND(RAND()*100)); -- 设置回滚点1 savepoint a_point_1; insert into t_transaction( `name` ,`num`) values(\u0026#39;s1\u0026#39;,ROUND(RAND()*100)); -- 回滚到指定点 ROLLBACK to a_point_1; commit ; 自动提交\r#\r\r autocommit可以在session级别设置 每个DML操作都自动提交 DDL永远都是自动提交，无法通过rollback回滚  事务的四个基本属性(ACID)\r#\r\r 原子性(Atomicity) 一致性(Consistency) 隔离性(Isolation) 持久性(Durability)  事务的原子性\r#\r\r 包含在事务中的操作要么全部被执行，要么都不执行 中途数据库或应用发生异常，未提交的事务都应该被回滚  事务的一致性\r#\r\r 数据的正确性，合理性，完整性 数据一致性应该符合应用需要规则：  余额不能是负数 交易对象必须先有账号 用户账号不能重复   事务的结果需要满足数据的一致性约束  事物的持久性\r#\r\r 提交完成的事务对数据库的影响必须是永久性的  数据库异常不会丢失事务更新 通常认为成功写入磁盘的数据即为持久化成功    事务的持久化的实现\r#\r\r 数据文件持久化  随机同步刷新(慢)   事务日志持久化与实例恢复  顺序同步刷新(快) -\u0026gt; 事务日志 随机异步刷新 -\u0026gt; 磁盘 事务日志 -\u0026gt; 磁盘(实例恢复)    事务的隔离性\r#\r\r 数据库事务在提交完成前，中间的任何数据变化对其他的事务都是不可见的。  数据库隔离现象\r#\r\r   隔离现象 描述     脏读(Dirty Read) 事务B读到事务A尚未提交的数据变更   不可重复读(NonRepeatable Read) 事务B读取前后两次读取一条记录之间该记录被事务A修改并提交，于是事务B读到了不一样的结果   幻读(Phantom Read) 事务B按条件匹配到了若干行记录并修改。但是由于修改过程中事务A新插入了符合条件记录，导致B更新完成后发现仍有符合条件却未被更新的记录。    数据库隔离等级\r#\r\r   隔离等级 脏读 不可重复读 幻读     未提交读 可能 可能 可能   已提交读 不可能 可能 可能   可重复读 不可能 不可能 可能   可串行化读 不可能 不可能 不可能    MySQL的事务隔离级别\r#\r\r InnoDB默认标记为可重复读 InnoDB并不是标准定义上的课重复读 InnoDB默认在可重复读的基础上避免幻读  MySQL事务隔离级别设置\r#\r\r 可在global/session/下个事务，级别分别进行设置 建议使用Read committed(同Oracle) 或者建议使用默认的Repeatable read  set tx_isolation = \u0026#39;\u0026#39; -- 设置隔离级别 事务与并发写\r#\r\r 某个正在更新的记录再提交或回滚前不能被其他事务同时更新  事务回滚的实现\r#\r\r 回滚段(rollback segment)与数据前像  "}),a.add({id:244,href:'/life/docs/javadir/tooldoc/spring%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E7%B1%BB/',title:"spring常用的工具类",section:"Java公共库文档总结 ",content:"spring常用的工具类\r#\r\r内置的resouce类型\r#\r\rUrlResource\rClassPathResource\rFileSystemResource\rServletContextResource\rInputStreamResource\rByteArrayResource\rEncodedResource 也就是Resource加上encoding, 可以认为是有编码的资源\rVfsResource(在jboss里经常用到, 相应还有 工具类 VfsUtils)\rorg.springframework.util.xml.ResourceUtils 用于处理表达资源字符串前缀描述资源的工具. 如: \u0026amp;quot;classpath:\u0026amp;quot;. 有 getURL, getFile, isFileURL, isJarURL, extractJarFileURL 工具类\r#\r\rorg.springframework.core.annotation.AnnotationUtils 处理注解\rorg.springframework.core.io.support.PathMatchingResourcePatternResolver 用 于处理 ant 匹配风格(com/*.jsp, com/**/*.jsp),找出所有的资源, 结合上面的resource的概念一起使用,对于遍历文件很有用. 具体请详细查看javadoc\rorg.springframework.core.io.support.PropertiesLoaderUtils 加载Properties资源工具类,和Resource结合\rorg.springframework.core.BridgeMethodResolver 桥接方法分析器. 关于桥接方法请参考: http://java.sun.com/docs/books/jls/third_edition/html/expressions.html#15.12.4.5\rorg.springframework.core.GenericTypeResolver 范型分析器, 在用于对范型方法, 参数分析.\rorg.springframework.core.NestedExceptionUtils\rxml工具\r#\r\rorg.springframework.util.xml.AbstractStaxContentHandler\rorg.springframework.util.xml.AbstractStaxXMLReader\rorg.springframework.util.xml.AbstractXMLReader\rorg.springframework.util.xml.AbstractXMLStreamReader\rorg.springframework.util.xml.DomUtils\rorg.springframework.util.xml.SimpleNamespaceContext\rorg.springframework.util.xml.SimpleSaxErrorHandler\rorg.springframework.util.xml.SimpleTransformErrorListener\rorg.springframework.util.xml.StaxUtils\rorg.springframework.util.xml.TransformerUtils\r其它工具集\r#\r\rorg.springframework.util.xml.AntPathMatcherant风格的处理\rorg.springframework.util.xml.AntPathStringMatcher\rorg.springframework.util.xml.Assert断言,在我们的参数判断时应该经常用\rorg.springframework.util.xml.CachingMapDecorator\rorg.springframework.util.xml.ClassUtils用于Class的处理\rorg.springframework.util.xml.CollectionUtils用于处理集合的工具\rorg.springframework.util.xml.CommonsLogWriter\rorg.springframework.util.xml.CompositeIterator\rorg.springframework.util.xml.ConcurrencyThrottleSupport\rorg.springframework.util.xml.CustomizableThreadCreator\rorg.springframework.util.xml.DefaultPropertiesPersister\rorg.springframework.util.xml.DigestUtils摘要处理, 这里有用于md5处理信息的\rorg.springframework.util.xml.FileCopyUtils文件的拷贝处理, 结合Resource的概念一起来处理, 真的是很方便\rorg.springframework.util.xml.FileSystemUtils\rorg.springframework.util.xml.LinkedCaseInsensitiveMap\rkey值不区分大小写的LinkedMap\rorg.springframework.util.xml.LinkedMultiValueMap一个key可以存放多个值的LinkedMap\rorg.springframework.util.xml.Log4jConfigurer一个log4j的启动加载指定配制文件的工具类\rorg.springframework.util.xml.NumberUtils处理数字的工具类, 有parseNumber 可以把字符串处理成我们指定的数字格式, 还支持format格式, convertNumberToTargetClass 可以实现Number类型的转化. org.springframework.util.xml.ObjectUtils有很多处理null object的方法. 如nullSafeHashCode, nullSafeEquals, isArray, containsElement, addObjectToArray, 等有用的方法\rorg.springframework.util.xml.PatternMatchUtilsspring里用于处理简单的匹配. 如 Spring's typical \u0026amp;quot;xxx*\u0026amp;quot;, \u0026amp;quot;*xxx\u0026amp;quot; and \u0026amp;quot;*xxx*\u0026amp;quot; pattern styles\rorg.springframework.util.xml.PropertyPlaceholderHelper用于处理占位符的替换\rorg.springframework.util.xml.ReflectionUtils反映常用工具方法. 有 findField, setField, getField, findMethod, invokeMethod等有用的方法\rorg.springframework.util.xml.SerializationUtils用于java的序列化与反序列化. serialize与deserialize方法\rorg.springframework.util.xml.StopWatch一个很好的用于记录执行时间的工具类, 且可以用于任务分阶段的测试时间. 最后支持一个很好看的打印格式. 这个类应该经常用\rorg.springframework.util.xml.StringUtils\rorg.springframework.util.xml.SystemPropertyUtils\rorg.springframework.util.xml.TypeUtils用于类型相容的判断. isAssignable\rorg.springframework.util.xml.WeakReferenceMonitor弱引用的监控 和web相关的工具\r#\r\rorg.springframework.web.util.CookieGenerator\rorg.springframework.web.util.HtmlCharacterEntityDecoder\rorg.springframework.web.util.HtmlCharacterEntityReferences\rorg.springframework.web.util.HtmlUtils\rorg.springframework.web.util.HttpUrlTemplate\r这个类用于用字符串模板构建url, 它会自动处理url里的汉字及其它相关的编码. 在读取别人提供的url资源时, 应该经常用 String url = \u0026amp;quot;http://localhost/myapp/{name}/{id}\u0026amp;quot;\rorg.springframework.web.util.JavaScriptUtils\rorg.springframework.web.util.Log4jConfigListener\r用listener的方式来配制log4j在web环境下的初始化\rorg.springframework.web.util.UriTemplate\rorg.springframework.web.util.UriUtils处理uri里特殊字符的编码\rorg.springframework.web.util.WebUtils\rorg.springframework.web.util.\r"}),a.add({id:245,href:'/life/docs/physics/',title:"physics",section:"Docs",content:"physics\n"}),a.add({id:246,href:'/life/docs/python/install/pyqt_layout/',title:"python pyqt5 layout",section:"python 插件学习",content:"layout (布局管理)\r#\r\rQLayout\r#\r\rQBoxLayout\r#\r\rQHNoxLayout\r#\r\rQVBoxLayout\r#\r\rQGridLayout\r#\r\rQStackedLayout\r#\r\rQFormLayout\r#\r\r参考1\n"}),a.add({id:247,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/6ngdcha8bk/',title:"使自己成熟稳重",section:"自信",content:"如何改变性格\r#\r\rcase1\r#\r\r1、自我反省\r#\r\r稻盛和夫说，要每天反省。 他非常强调反省，他每天都会不断地问自己：今天有没有让别人感到不愉快？待人是否亲切？是否傲慢？有没有自私的行为？\n通过这样的一些问题，不断回望自己，回顾自己的一天。 对照做人最基本的准则，确认自己的言行举止是否得当。 自我反省是人生的最高境界，通过过不断检讨自己的行为，更好地适应他人，也让自己变得更好。 正是这种正面的自我反省，才会让我们始终不偏离正确的航向，成功的步伐就会越迈越大。\n2、注重自己有深刻感受的地方\r#\r\r只有我们自己有深刻感受的地方，才能容易改。 如果我们没有那些经历和感受，别人说太多，自己用再多的方法，也起不到任何作用。 我们要注重自己的亲身体验。 只有经常吃亏、经常碰壁并且反思自己，才能够慢慢改变自己。 时间长了性格自然会变好。\n3、改变自己的习惯\r#\r\r习惯是很容易影响一个人的，如果自己以前的生活、说话做事的习惯有不好的地方，我们都要学会改变。 想要改变自己，养成所希望的性格，我们要学会尝试去做一些跟以前截然不同的事，并且不断形成新的习惯。 这样子别人对你的看法就会发生改变，情感也会发生变化。 这样我们也会受到积极的鼓舞，就会更加有信心，性格也会变得更好。\n4、打开自己的心门\r#\r\r我们要学会敞开自己的心门，只有敞开心扉，我们才能成为阳光乐观的人。 坚持下去你就会发现你会变得更加开朗。 我们不要总是沉浸在自己的世界之中。你 要知道生活中某些重要的事情对我们的影响非常巨大，能够改变我们的观点和做法，这样子就会慢慢影响着我们为人处世得方式，性格也会慢慢改变。\n5、虚心接受意见\r#\r\r生活中很多人会很自我，觉得自己认为的就是对的。 这种人大多数是固执已见，很难听得进去别人的意见或建议，只认准自己的理论，觉得自己的就是对的，很多时候我们并不想跟这样的人深交。 所以如果你觉得自己属于这种人，就要学会去改变下自己。 学会接受他人的意见，学会倾听和尝试。 这样子我们才能够更好跟别人走在一起，并且有更多的共同话题\n6、敢于尝试\r#\r\r有句话说得好：“不管舞台有多大，你不上台演讲，永远只是个观众；不管平台有多好，不参与就赚不到钱；不管胆子有多大，都不敢闯入，永远发挥不了作用。只有敢于尝试、敢想敢干、敢于突破的人才会成功！”\n每一个优秀的人，都是敢于去尝试，去不断折腾。\n因为只有敢于去尝试，你才能知道自己究竟有多么优秀，你才能配得上当初努力付出的自己。\n反之，做任何事情都不敢去尝试，那么只会原地踏步，甚至往后退。\n一件事情，如果你下定决心去做，有可能成功，也有可能不成功。\n但是，只要你去做，就要百分之五十的成功率，你不去做，就一点可能都没有。 任何事如果仅仅是停留在想的阶段，那么都不会有进展，有结果的。 人要敢于尝试，才能遇见不一样的自己。\n要想改变性格，必须要坚持。\n只有坚持才有希望，只有坚持才能得到自己想要的。\ncase2\r#\r\r从小到大我就被长辈朋友说傻、呆、笨、二。一直以来也比较佛系，因为有一堆爱我的人，他们也认可我的才华。直到最近一次，被一个人再次提起。我才开始意识到，很多时候某些聪明人第一眼就能看出我的气质，不是偶然，也不是不够了解我（然而我之前一直以为他们并不懂我）。而是我的确有这样的性格特点，当然这不是缺陷，只要不影响工作和生活，完全可以继续我行我素地活下去。但是我开始不甘心了，我希望自己在处理专业以外事情上能够通畅无阻、游刃有余。如果每次都被打上这样的标签，我不会愿意。我也不愿一辈子都这样。以前安慰自己傻人有傻福，单纯坦率没有心机很难得。直到我发现有另外一种人，他们的确没有心机，但是他们有趣，懂得察言观色，又很真性情。这就是把聪明用在对的地方，而且学识丰富，活出自我的人。我想，这会是我的目标，以下是我的自我缺点分析和解决方法。自己想了一些办法，怕忘记才写下来的，共勉：\n1.不爱思考（笨）\n多思考，观察事情，寻找规律和共性，总结经验，用于下一次相似问题的处理。\n2.说话不经过大脑（一根筋）\n宁可晚回复，也要说对的话、精准的话。如此反复训练，逐渐训练话术与语速。\n3.没有时间观念（拖延）\n超强计划力，不断给自己定目标，绝对不浪费任何时间。\n4.没有说服能力，容易妥协，不维护自我利益，总被人坑（傻）\n多用逻辑清楚三点表达法，交流前自己先用辩证法辩一遍，没有逻辑漏洞了，再去说服别人。\n5.不懂拒绝，没有主见（弱）\n先自我认定观点三次，认为没有问题，大胆说出自己的观点。凡事多说，我觉得，我想，我要，我不要，拒绝。多说，可以吗？好不好？求你啦！把征服欲激发出来。\n6.不有趣，不幽默、反应慢（愣）\n多看综艺、奇葩说、吐槽大会。多与人说话，观察别人说话的话术，学以致用。开始接不上话是正常，慢慢多接几句就会逐渐掌握沟通的节奏。\n7.怂、做傻事、出糗（二）\n凡事注意形象，我行我素是对的，但是不可以不注重形象，觉得我是这样就这样了。一定要强硬，行为干练、说话中气足、眼神坚定对视，给人超强的无形气场。可以保持文艺气质（打扮），但要有独立自主的感觉。并且小心谨慎，凡事多个心眼。该要面子的时候要一些面子，在出于自己都觉得丢脸的情况下，低级的错误绝对不允许自己犯。\n8.敏感、不自信（情绪化）\n太过在意别人对自己的恶言恶语，意味着内心不够强大。显得非常蠢，别人说两句话就把自己搞得地动山摇。对于熟悉的人，过份迁就。需要宁我负天下人，休让天下人负我。不要害怕自己得罪了他，会给穿小鞋。你怕得罪她，她也怕得罪你。若有实力，自然有人跪舔。人生过客说的话无需太过在意，你的人生的缺点和性格需要自己来扭转和把握。不信你看，她的人生也过的一塌糊涂。你可以把她当作是嫉妒。好友说的可听，但他们看到你的闪光点，觉得你的问题不是问题。一般的交涉者，他们说的可听一半，客观但是也对你很不公平。因为他们忘记了你的过人之处。所以表太过在意，但是缺点是一定要改的，晚改不如早改，否则处理很多事情都会很被动。\n9.怕做决定、怕担责、反复、纠结（乱）\n每天从小事纠结到大事也纠结，纠结完还要把事情说给别人听。因为怕做决定，所以很依赖询问别人的意见，试图让别人帮自己做决定。其实又是怕担责任的表现。试着大胆地，在分析完所有之后，做一个最痛快的决定，之后出了事情及时站出。绝对不推卸责任，避免因为自己的判断失误而背锅，但是锅来了就要勇敢承担。\n10.手忙脚乱、慌慌张张、大惊小怪（神经大条、弱）\n遇事则乱，第一是没有事先预估好风险，没有想好处理办法。没见过大风大浪，没经验也是一点原因，多看多感受吧。看到别人被虐，可以多想想发生在自己身上时会咋做。\n11.专注力差，浮躁易怒情绪化\n心不够静，浮浮躁躁。碎片式的工作模式要改掉，要持续投入一件事情，并且做到心无杂念。工作没一会，就偷偷看看微信、看看消息这样会完蛋。学会情绪管理，任何时候都要peace，心如止水。办公室不是展示真性情的地方，只能是表达观点的地方。\ncase3\r#\r\r基因，家庭资源，以及人物初始性格。\n注意，我的用词，是人物的初始性格。\n而不是人物的终极性格。\n也就是说，人物的初始性格到终极性格这个区间是可以有所作为的。\n也是我们唯一能够改变的东西了。 也就是说，改变命运的确需要改变性格。 为什么性格对于命运的作用非常大呢？ 这个我仔细分析一下。所谓的性格。 不过是一种固定的对待外界事物的习惯反应。 下面我会列一些单因素的影响，但我提这个单因素的时候，是控制变量法。 比如所有其他条件不变的情况下，只有这个因素起作用的时候，不然就没法讨论了。\n我举个例子，害羞的人面对陌生人就不会主动勾搭，只会被动接受； 胆大的人面对事情就会去尝试，但会担很多风险； 风骚的女人会获得男人的资源，而害羞的女人也许资源就会少很多； 勤奋的人会容易做的比别人出彩； 爱干净的人就不容易得病；做爱戴套的人自律的人，不容易得性病； 说话很谨慎不说大话的人，会让人觉得靠谱； 一个爱嘲讽别人的人，是没有什么真心朋友的。\n我简单列举了一些性格，对于事物的影响。\n大家首先不要把自己当做人来看待。\n只是把自己当做一个客观物体。 你不过是有了这么多行为模式，条件反射罢了。\n你就可以很冷静的分析出自己的性格了。\n这些性格，在恒定不变的情况下，他会对同样的事物，同样的人，做出相同的反应。 如果是这样的话，你的命运轨迹，会以5厘米做为半径画圆，画出一个小圆。 这就是你的命运，你所获得的所有馈赠都是在这个圆之内的。 但如果，你本来是个很胆小的人，但你突然很勇敢了，比如像我过去的自己一样。\n本来是个社交恐惧患者，如今却可以很自然的交朋友了。\n那么，你的半径，会变大，比如变成10里面了。\n那你的画出来的圆，就比过去大很多了。\n再假如，你原来很懒惰，你变勤奋了；你从浮躁，变的冷静； 你从虚伪变的真诚，你从纵欲变的节欲。 你的半径就会越来越大，那么通过时间的积累加上事物推移到你命运， 你这个人物面前的馈赠，事物就会发生神奇的反应。\n因为这个世界上的所有客观存在物体，人或者事都是一样的， 但你的反馈方式变了，也就是你的行为方式，性格变了， 那么事物，人对你的反应也会变化。 你的命运，将会从过去的一条路，走向另外一条路，这就是改变命运。\n改变命运并不玄幻，这是很简单的事情。\n但同时很难，难在改变性格。\n简单是性格一变，你的反馈方式一变，人和事对你的影响一变，你的选择一变，你的习惯一变，命运就变。\n比如我现在天天起来写作，跑步，跑步对我的健康会越来越有帮助，帮我脱离抑郁症，同时让我精力更加充沛，\n我就有更多的时间，更多的精力做更多的事情，不然每天上了班就没有心情做业余的事情了，只要坚持跑步，我就比不跑步的时候，其实专注力高很多，效率也高很多。\n一天就可以多出2-3个小时，因为之前的2-3个小时都是浪费的，\n当然，这是个理想状态，但至少可以多1个小时还要减掉跑步的时间。\n而且跑步，让我更加有动力，更有好奇心，更有欲望和人接触，这样，无形中多了很多意外的惊喜。\n所有的馈赠都来源于你的经历，而你的经历，都来源于你是不是多做了一些事，多接触了一些人。\n而做自媒体这件事情，就可以帮助我接触很多人，提高对社会的认知等等。\n所以，坚持跑步，写作这两件事情，本质上对于我来说就是改变命运的手段之一。\n因为积累的东西，在变化，在影响着我，但这两个东西的核心还是性格。\n因为我好为人师，因为我追求深度，真理，知识，智慧，加上我喜欢自律。\n如果我经常不自律，我会不舒服，我的性格会迫使我去做到自律。\n这样我才会很开心。\n每一个人一样的，也许家庭的初始性格给你设定的是。\n内向，自卑，懒惰，不爱干净，说大话，情绪化，安贫乐道，节约，纵欲，沉迷，贪财等等。\n这些东西，只要你超越了，比如从自卑变自信了，那你的性格就变了，命运轨迹也变了。\n好，说了半天，只说了原因。\n现在说一下如何做。\nHow to do。\n因为，每一个人，都是客观存在的物体，我刚刚提到过。\n都是很多条件组成的个体。\n比如A：自信，强势，暴躁，攻击性强，体育能力强。\nB:自卑，懦弱，温柔，被动，学习能力强。\n不同的条件，组成不同的人，相似的人，只是条件相似罢了，只是因为人过于负责，所以人会觉得自己是魔幻的个体。\n但任何一个人都无法逃脱物理学的定律。\n决定整个宇宙基础的学科，就是物理。\n所以都可以用控制变量法，或者一些物理学的研究方法。\nx904LK\u0026quot;\u0026gt;唯物主义讲。\n世界是物质的，物质是运动的，运动是有规律的。\n没错，人也是物质的，人的运动也是有规律的。\n人的运动不是外在的走动，而是内心的运动。\n人类的内心运动叫做人性，人的个体的运动叫做个性。\n但个性是属于这个人性的子集里面的。\n你要改变个性，首先了解人性。\n了解人性是了解不可改变的边界，然后着眼个性，找到可改变的因素。\n就是说共性一般不可改变，但个性是可以改变的。\n或者说，如果你不顺着共性走，客观规律走，你是做无用功。\n就是我们要按规律办事。\n不按规律去改造自己的性格，那么就是愚蠢。\n那么发现规律，并且发现运用规律并且实践出来的真理，我把它统称为。\n智慧。\n如何发现规律呢。\n这个我以前讲过如何独立思考。\n运用里面的三个方法就可以了。\n第一，怀疑一切。\n第二，分析，调查，研究。\n第三，实证，实践，以及不断通过实践得出的反馈来进一步完善理论，从而理论再进一步指导实践，完成知行合一。\n举个例子，如果你觉得你天生是个懦弱的人。\n第一件事情，先要学会怀疑。\n怀疑自己这种想法是错误的。\n好，那就说明，你认为自己不是个懦弱的人，这个思维逻辑是有问题的。\n下一步，要进行分析，调查，研究。 看看自己过去的行为，看看有没有勇敢的行为，什么时候，什么情况下你很勇敢，什么情况下你很软弱。 结果你调查发现。 那个胆子很大的人去鬼屋的时候胆子很小，你却比他胆子大。 但他平时在学校，在人群中是很胆大的，你的胆子却比他小。\n好这一下你就确立了一个范围，你懦弱，仅仅是对于人， 但不是对于神魔鬼怪。 也就是说，你的恐惧，仅仅是因为人。 然后你可以进一步追问。\n这种追问，就是要觉察。 为什么，自己会怕这些人。 到底是怕什么。\n你可能通过觉察，就发现了，原来你怕人，其实是怕失去爱。 怕失去别人对你的认可，怕别人不理你，怕别人抛弃你，怕别人嘲笑你，讽刺你。 这统称为怕失去爱。\n当然觉察到了这件事情，很可能需要很长时间。 同时需要学习很多心理学的材料，你才能发现。\n好，既然是怕失去爱，有没有办法治愈呢。 首先是爱自己。\n那么如何爱自己呢，那就是尊重自己的欲望，自己感受，表达自己欲望，和感受。 如何表达呢。 勇敢。\n所以，就要说到第三步，实践，检验真理。 比如你可以搭讪陌生人，挑战自己的恐惧边界，你越怕什么，越做什么。 当然只要做这件事情的不会对你造成什么风险，不犯法，不触及你的生命安危，你大可以做。\n比如我当时最怕美女了，那我就疯狂接触美女，搭讪美女，后来。 这个神经的链条重新被塑造了。 我的社交恐惧消失了，取而代之是一个新的神经反馈回路，就是看见美女会兴奋，而非恐惧。\n这就是进一步通过行为，改变了，神经。 属于心理学和神经科学的领域。\n当然，爱的作用才是根本，要持续爱自己，尊重自己感受，表达自己想法，然后试错，找到一个平衡。 然后不断的再去强化自己的理论，找到调整理论，进一步实践，指导行为。\n大家有没有发现，这三步最难的是哪一步。 其实是觉察。 当你真的觉察到了，你就可以悟道了。 你就可以理性的去做，理性的面对了。 或者做正确的事情了。\n当你知道你在做正确且有意义的事情的时候，这本来就很能够给你勇气。 因为你是掌握真理的，你有真理这个强大的后盾。 但是需要通过实践来检验，不断的调整真理，也就是说，当真正你实践检验成功了，这才是真正的真理，属于你个人的真理，不代表属于别人。\n那么如何觉察呢，这个就是佛家的方式，我经常提到过的。 身受心法。 这是通过自己来觉察。 也可以通过学习知识，观察生活，实践，观察人物，来觉察。 方法多种多样。\n都必不可少，都可以起到帮助你修行的目的。 找到那些客观存在的规律，这个规律不属于别人，只属于你自己。 当然还有一些大规律，比如刚刚说的学习，观察，实践，这些都是指导生活的理性方法，可以好好用之。\n当你不断的通过努力，通过学习，觉察，克服痛苦和恐惧，不断自律，你就再不断的改变自己的命运。\n但这个过程极其艰难。即是告诉了你，也许你也做不到，因为本来改变命运的人都是少数。 不过佛渡有缘人，这篇文章写的还是比较晦涩，但我已经尽量简单了。 没有一个成功是随随便便的，都是需要极大的付出。 付出你的心情，精力，舒适程度，暂时的快乐。你才能走过这条荆棘之路，获得一个重生。\n再次强调，改变性格的过程是不断实践加学习的过程，这个过程注定是痛苦的。 但成长过后的快乐也是很美好的，而且能够让你更加强大。 至于要不要去承受，这是自己的选择。\n"}),a.add({id:248,href:'/life/docs/%E8%84%9A%E6%9C%AC/my-plugins/',title:"webpack 应用自己插件 ",section:"脚本",content:" webpack.config.js  const ConsoleLogOnBuildWebpackPlugin = require(\u0026#34;./src/console_log_on_build_webpack_plugin.js\u0026#34;); module.exports = { entry: { index: \u0026#34;./src/index.js\u0026#34; }, mode: \u0026#39;development\u0026#39;, plugins: [ new ConsoleLogOnBuildWebpackPlugin() ] };  package.json  { \u0026#34;name\u0026#34;: \u0026#34;demo08\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;webpack.config.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;, \u0026#34;build\u0026#34; : \u0026#34;webpack\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;, \u0026#34;devDependencies\u0026#34;: { \u0026#34;webpack\u0026#34;: \u0026#34;^5.44.0\u0026#34;, \u0026#34;webpack-cli\u0026#34;: \u0026#34;^4.7.2\u0026#34; } }  src console_log_on_build_webpack_plugin.js index.js  // console_log_on_build_webpack_plugin.js const pluginName = \u0026#39;ConsoleLogOnBuildWebpackPlugin\u0026#39;; class ConsoleLogOnBuildWebpackPlugin { apply(compiler) { compiler.hooks.run.tap(pluginName, compilation =\u0026gt; { console.log(\u0026#34;webpack 构建过程开始！\u0026#34;); }); } } module.exports = ConsoleLogOnBuildWebpackPlugin; //index.js console.log(\u0026#34;print \u0026#34;+ Math.random()) ;  命令  D:\\IdeaProjects\\cycle\\study\\webpack\\demo08\u0026gt;npm add -D webpack webpack-cli npm WARN demo08@1.0.0 No description npm WARN demo08@1.0.0 No repository field. + webpack-cli@4.7.2 + webpack@5.45.1 added 121 packages from 155 contributors in 6.969s 16 packages are looking for funding run `npm fund` for details D:\\IdeaProjects\\cycle\\study\\webpack\\demo08\u0026gt;npm run build \u0026gt; demo08@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo08 \u0026gt; webpack webpack 构建过程开始！ asset index.js 1.22 KiB [emitted] (name: index) ./src/index.js 38 bytes [built] [code generated] webpack 5.45.1 compiled successfully in 75 ms D:\\IdeaProjects\\cycle\\study\\webpack\\demo08\u0026gt;node dist/index.js print 0.9374784084603167 D:\\IdeaProjects\\cycle\\study\\webpack\\demo08\u0026gt; "}),a.add({id:249,href:'/life/docs/databases/mysql/mysql%E5%87%BD%E6%95%B0/',title:"mysql函数",section:"mysql学习笔记",content:"mysql函数\r#\r\r日期函数\r#\r\r  返回当前日期，只包含年月日 select curdate()\n  返回当前时间，只包含时分秒 select curtime()\n  返回当前的日期和时间，年月日时分秒全都包含 select now()\n  提取具体日期类型\r#\r\r year() yearweek() ,hour(),month()等等   select year(now()) as \u0026lsquo;年\u0026rsquo;,yearweek(now()) as \u0026lsquo;年,周\u0026rsquo;,hour(now()) as \u0026lsquo;周\u0026rsquo;,minute(now()) as \u0026lsquo;小时\u0026rsquo;,month(now()) \u0026lsquo;月\u0026rsquo;,monthname(now()) \u0026lsquo;月名字\u0026rsquo;,dayofmonth(now()) as \u0026lsquo;当月多少日\u0026rsquo;   EXTRACT() 函数用于返回日期/时间的单独部分，比如年、月、日、小时、分钟等等。   (select extract(year from now()),extract(month from now()),extract(day from now()),extract(hour from now()),extract(minute from now()))  日期格式\r#\r\r DATE_FORMAT(date,fmt)函数：按字符串 fmt 格式化日期 date 值 (select date_format(now(),'%Y-%m-%d'))  日期运算\r#\r\r  date_add(date,interval number dateType) example (select date_add(now(),interval 2 year) as \u0026lsquo;add 2 year date\u0026rsquo;) (select date_add(now(),interval -2 hour) as \u0026lsquo;add 2\u0026rsquo;)也可以传入负数即回到过去某个时间\n  date_sub(date,interval number dateType) example (select date_sub(now(),interval 2 year))\n  datediff(date,date) 计算两个日期之间相差的天数 (select datediff(now(),date_add(now(),interval 2 month)) as \u0026lsquo;计算两个日期之间相差天数\u0026rsquo;)\n  流程函数\r#\r\r if 函数  create table salary (userid int,salary decimal(9,2));\rinsert into salary values(1,1000),(2,2000), (3,3000),(4,4000),(5,5000), (1,null);\r (select if(s.salary\u0026gt;2000,\u0026lsquo;high\u0026rsquo;,\u0026lsquo;low\u0026rsquo;),s.salary from salary s)   IFNULL(value1,value2)函数：这个函数一般用来替换 NULL 值的，我们知道 NULL 值是不能参与数值运算的   (select ifnull(s.salary,0),s.salary from salary s)当检测到值的时候用0代替  数值函数\r#\r\r ABS(x)函数：返回 x 的绝对值   select abs(-56),abs(round(rand()*10))   cell(x)函数 返回大于 x 的最大整数值 相当于向上取   SELECT ceil(0.6),ceiling(0.3),ceil(round(rand()))   floor()返回小于 x 的最大整数值 相当于向下取   SELECT floor(0.6),floor(0.3),floor(round(rand()))   mod(x,y) 返回 x/y 的模   SELECT mod(5,3)   rand() 返回 0 到 1 内的随机值 ROUND(x,y) 返回参数 x 的四舍五入的有 y 位小数的值   SELECT round(2.5,3)   sum()函数   select sum(f.f_price) as \u0026lsquo;总价格\u0026rsquo; from fruits f  字符串函数\r#\r\r CANCAT(S1,S2,…Sn) 连接 S1,S2,…Sn 为一个字符串   SELECT concat(\u0026lsquo;hello\u0026rsquo;,\u0026lsquo;wrold\u0026rsquo;),concat(curdate(),' \u0026lsquo;,curtime())   INSERT(str,x,y,instr) 将字符串 str 从第 x 位置开始，y 个字符长的子串替换为字符串 instr(可以用作修改和删除以及增加)   SELECT insert(\u0026lsquo;Highlights of Premier Li'\u0026rsquo;s news conference\u0026rsquo;,11,0,'\u0026mdash;') 在index=11 取0个字符串替换为xxx   REPEAT(str,x) 返回 str 重复 x 次的结果   select REPEAT(\u0026lsquo;Tech aims to help restless sleepers \\n\u0026rsquo;,3) 字符串重复3次   REPLACE(str,a,b)函数：用字符串 b 替换字符串 str 中所有出现的字符串 a。   select replace(\u0026lsquo;hello_world!\u0026rsquo;,'_\u0026rsquo;,' \u0026lsquo;) 把下划线替换为空格   SUBSTRING(str,x,y)函数：返回从字符串 str 中的第 x 位置起 y 个字符长度的字串。此函数经常用来对给定字符串进行字串的提取(ps也可以用作随机字符串)   select substring(\u0026lsquo;Century-old folding fan store attracts foreign apprentice\u0026rsquo;,12,8) 截取字符串函数   length() 获取字符串长度 select length(''+uuid_short()) as uuidShort , length(uuid()) 这里使用了mysql的uuid  "}),a.add({id:250,href:'/life/docs/python/install/pyqt_resources/',title:"python pyqt5 皮肤和图标",section:"python 插件学习",content:"皮肤选择\r#\r\rQDarkStyleSheet\r#\r\r 最完整的深色/浅色Qt主题\n pip install qdarkstyle  例子  # PyQt5 使用例子 import sys import qdarkstyle from PyQt5 import QtWidgets # create the application and the main window app = QtWidgets.QApplication(sys.argv) window = QtWidgets.QMainWindow() # setup stylesheet app.setStyleSheet(qdarkstyle.load_stylesheet_pyqt5()) # or in new API app.setStyleSheet(qdarkstyle.load_stylesheet(qt_api=\u0026#39;pyqt5\u0026#39;)) # run window.show() app.exec_() Qt-Material\r#\r\r 一个仿Material的样式，适用于PySide6, PySide2以及PyQt5\n pip install qt-material  例子  # 使用例子 import sys # from PySide6 import QtWidgets # from PySide2 import QtWidgets from PyQt5 import QtWidgets from qt_material import apply_stylesheet # create the application and the main window app = QtWidgets.QApplication(sys.argv) window = QtWidgets.QMainWindow() # setup stylesheet apply_stylesheet(app, theme=\u0026#39;dark_teal.xml\u0026#39;) # run window.show() app.exec_() PyQt 图标库\r#\r\rQtAwesome\r#\r\r 一个图标库\n pip install qtawesome  例子  from PyQt5 import QtCore, QtGui, QtWidgets class Ui_MainWindow(object): def setupUi(self, MainWindow): MainWindow.setObjectName(\u0026#34;MainWindow\u0026#34;) MainWindow.resize(500, 500) sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding) sizePolicy.setHorizontalStretch(0) sizePolicy.setVerticalStretch(0) sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth()) MainWindow.setSizePolicy(sizePolicy) MainWindow.setMaximumSize(QtCore.QSize(800, 600)) MainWindow.setStyleSheet(\u0026#34;\u0026#34;) self.centralwidget = QtWidgets.QWidget(MainWindow) self.centralwidget.setObjectName(\u0026#34;centralwidget\u0026#34;) self.pushButton = QtWidgets.QPushButton(self.centralwidget) self.pushButton.setGeometry(QtCore.QRect(30, 30, 121, 51)) font = QtGui.QFont() font.setPointSize(11) self.pushButton.setFont(font) self.pushButton.setObjectName(\u0026#34;pushButton\u0026#34;) self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget) self.pushButton_2.setGeometry(QtCore.QRect(30, 110, 121, 51)) font = QtGui.QFont() font.setPointSize(11) self.pushButton_2.setFont(font) self.pushButton_2.setObjectName(\u0026#34;pushButton_2\u0026#34;) MainWindow.setCentralWidget(self.centralwidget) self.retranslateUi(MainWindow) QtCore.QMetaObject.connectSlotsByName(MainWindow) def retranslateUi(self, MainWindow): _translate = QtCore.QCoreApplication.translate MainWindow.setWindowTitle(_translate(\u0026#34;MainWindow\u0026#34;, \u0026#34;MainWindow\u0026#34;)) self.pushButton.setIcon(qta.icon(\u0026#39;fa.video-camera\u0026#39;)) # 设置图标 self.pushButton.setText(_translate(\u0026#34;MainWindow\u0026#34;, \u0026#34;Icon1\u0026#34;)) self.pushButton_2.setIcon(qta.icon(\u0026#39;fa.eye\u0026#39;, color=\u0026#39;red\u0026#39;)) # 设置图标 self.pushButton_2.setText(_translate(\u0026#34;MainWindow\u0026#34;, \u0026#34;Icon2\u0026#34;)) import qtawesome as qta import sys if __name__ == \u0026#39;__main__\u0026#39;: QtCore.QCoreApplication.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling) app = QtWidgets.QApplication(sys.argv) widgets = QtWidgets.QMainWindow() window = Ui_MainWindow() window.setupUi(widgets) widgets.show() sys.exit(app.exec_()) 综合例子\r#\r\r# marsmarcin # 2020.3.11 # a test version for a beautiful system from PyQt5 import QtCore, QtGui, QtWidgets import sys import qtawesome class MainUi(QtWidgets.QMainWindow): def __init__(self): super().__init__() self.init_ui() def init_ui(self): self.setFixedSize(1024, 600) self.main_widget = QtWidgets.QWidget() # 创建窗口主部件 self.main_layout = QtWidgets.QGridLayout() # 创建主部件的网格布局 self.main_widget.setLayout(self.main_layout) # 设置窗口主部件布局为网格布局 self.left_widget = QtWidgets.QWidget() # 创建左侧部件 self.left_widget.setObjectName(\u0026#39;left_widget\u0026#39;) self.left_layout = QtWidgets.QGridLayout() # 创建左侧部件的网格布局层 self.left_widget.setLayout(self.left_layout) # 设置左侧部件布局为网格 self.right_widget = QtWidgets.QWidget() # 创建右侧部件 self.right_widget.setObjectName(\u0026#39;right_widget\u0026#39;) self.right_layout = QtWidgets.QGridLayout() self.right_widget.setLayout(self.right_layout) # 设置右侧部件布局为网格 self.main_layout.addWidget(self.left_widget, 0, 0, 12, 2) # 左侧部件在第0行第0列，占12行2列 self.main_layout.addWidget(self.right_widget, 0, 2, 12, 10) # 右侧部件在第0行第3列，占12行10列 self.setCentralWidget(self.main_widget) # 设置窗口主部件 # self.left_close = QtWidgets.QPushButton(\u0026#34;\u0026#34;) # 关闭按钮 self.left_close = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.times\u0026#39;, color=\u0026#39;white\u0026#39;), \u0026#34;\u0026#34;) # self.left_visit = QtWidgets.QPushButton(\u0026#34;\u0026#34;) # 空白按钮 self.left_visit = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.gamepad\u0026#39;, color=\u0026#39;white\u0026#39;), \u0026#34;\u0026#34;) # self.left_mini = QtWidgets.QPushButton(\u0026#34;\u0026#34;) # 最小化按钮 self.left_mini = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.film\u0026#39;, color=\u0026#39;white\u0026#39;), \u0026#34;\u0026#34;) self.left_close.clicked.connect(self.close_window) # 关联 self.left_label_1 = QtWidgets.QPushButton(\u0026#34;每日推荐\u0026#34;) self.left_label_1.setObjectName(\u0026#39;left_label\u0026#39;) self.left_label_2 = QtWidgets.QPushButton(\u0026#34;我的音乐\u0026#34;) self.left_label_2.setObjectName(\u0026#39;left_label\u0026#39;) self.left_label_3 = QtWidgets.QPushButton(\u0026#34;联系与帮助\u0026#34;) self.left_label_3.setObjectName(\u0026#39;left_label\u0026#39;) self.left_button_1 = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.music\u0026#39;, color=\u0026#39;white\u0026#39;), \u0026#34;华语流行\u0026#34;) self.left_button_1.setObjectName(\u0026#39;left_button\u0026#39;) self.left_button_2 = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.sellsy\u0026#39;, color=\u0026#39;white\u0026#39;), \u0026#34;在线FM\u0026#34;) self.left_button_2.setObjectName(\u0026#39;left_button\u0026#39;) self.left_button_3 = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.film\u0026#39;, color=\u0026#39;white\u0026#39;), \u0026#34;热门MV\u0026#34;) self.left_button_3.setObjectName(\u0026#39;left_button\u0026#39;) self.left_button_4 = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.home\u0026#39;, color=\u0026#39;white\u0026#39;), \u0026#34;本地音乐\u0026#34;) self.left_button_4.setObjectName(\u0026#39;left_button\u0026#39;) self.left_button_5 = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.download\u0026#39;, color=\u0026#39;white\u0026#39;), \u0026#34;下载管理\u0026#34;) self.left_button_5.setObjectName(\u0026#39;left_button\u0026#39;) self.left_button_6 = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.heart\u0026#39;, color=\u0026#39;white\u0026#39;), \u0026#34;我的收藏\u0026#34;) self.left_button_6.setObjectName(\u0026#39;left_button\u0026#39;) self.left_button_7 = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.comment\u0026#39;, color=\u0026#39;white\u0026#39;), \u0026#34;反馈建议\u0026#34;) self.left_button_7.setObjectName(\u0026#39;left_button\u0026#39;) self.left_button_8 = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.star\u0026#39;, color=\u0026#39;white\u0026#39;), \u0026#34;关注我们\u0026#34;) self.left_button_8.setObjectName(\u0026#39;left_button\u0026#39;) self.left_button_9 = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.question\u0026#39;, color=\u0026#39;white\u0026#39;), \u0026#34;遇到问题\u0026#34;) self.left_button_9.setObjectName(\u0026#39;left_button\u0026#39;) self.left_xxx = QtWidgets.QPushButton(\u0026#34; \u0026#34;) self.left_layout.addWidget(self.left_mini, 0, 0, 1, 1) self.left_layout.addWidget(self.left_close, 0, 2, 1, 1) self.left_layout.addWidget(self.left_visit, 0, 1, 1, 1) self.left_layout.addWidget(self.left_label_1, 1, 0, 1, 3) self.left_layout.addWidget(self.left_button_1, 2, 0, 1, 3) self.left_layout.addWidget(self.left_button_2, 3, 0, 1, 3) self.left_layout.addWidget(self.left_button_3, 4, 0, 1, 3) self.left_layout.addWidget(self.left_label_2, 5, 0, 1, 3) self.left_layout.addWidget(self.left_button_4, 6, 0, 1, 3) self.left_layout.addWidget(self.left_button_5, 7, 0, 1, 3) self.left_layout.addWidget(self.left_button_6, 8, 0, 1, 3) self.left_layout.addWidget(self.left_label_3, 9, 0, 1, 3) self.left_layout.addWidget(self.left_button_7, 10, 0, 1, 3) self.left_layout.addWidget(self.left_button_8, 11, 0, 1, 3) self.left_layout.addWidget(self.left_button_9, 12, 0, 1, 3) self.right_bar_widget = QtWidgets.QWidget() # 右侧顶部搜索框部件 self.right_bar_layout = QtWidgets.QGridLayout() # 右侧顶部搜索框网格布局 self.right_bar_widget.setLayout(self.right_bar_layout) self.search_icon = QtWidgets.QLabel(chr(0xf002) + \u0026#39; \u0026#39; + \u0026#39;搜索 \u0026#39;) self.search_icon.setFont(qtawesome.font(\u0026#39;fa\u0026#39;, 16)) self.right_bar_widget_search_input = QtWidgets.QLineEdit() self.right_bar_widget_search_input.setPlaceholderText(\u0026#34;输入歌手、歌曲或用户，回车进行搜索\u0026#34;) self.right_bar_layout.addWidget(self.search_icon, 0, 0, 1, 1) self.right_bar_layout.addWidget(self.right_bar_widget_search_input, 0, 1, 1, 8) self.right_layout.addWidget(self.right_bar_widget, 0, 0, 1, 9) self.right_recommend_label = QtWidgets.QLabel(\u0026#34;今日推荐\u0026#34;) self.right_recommend_label.setObjectName(\u0026#39;right_lable\u0026#39;) self.right_recommend_widget = QtWidgets.QWidget() # 推荐封面部件 self.right_recommend_layout = QtWidgets.QGridLayout() # 推荐封面网格布局 self.right_recommend_widget.setLayout(self.right_recommend_layout) self.recommend_button_1 = QtWidgets.QToolButton() self.recommend_button_1.setText(\u0026#34;个性电台\u0026#34;) # 设置按钮文本 self.recommend_button_1.setIcon(QtGui.QIcon(\u0026#39;./r1.jpg\u0026#39;)) # 设置按钮图标 self.recommend_button_1.setIconSize(QtCore.QSize(100, 100)) # 设置图标大小 self.recommend_button_1.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon) # 设置按钮形式为上图下文 self.recommend_button_2 = QtWidgets.QToolButton() self.recommend_button_2.setText(\u0026#34;跑步者\u0026#34;) self.recommend_button_2.setIcon(QtGui.QIcon(\u0026#39;./r2.jpg\u0026#39;)) self.recommend_button_2.setIconSize(QtCore.QSize(100, 100)) self.recommend_button_2.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon) self.recommend_button_3 = QtWidgets.QToolButton() self.recommend_button_3.setText(\u0026#34;睡前\u0026#34;) self.recommend_button_3.setIcon(QtGui.QIcon(\u0026#39;./r3.jpg\u0026#39;)) self.recommend_button_3.setIconSize(QtCore.QSize(100, 100)) self.recommend_button_3.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon) self.recommend_button_4 = QtWidgets.QToolButton() self.recommend_button_4.setText(\u0026#34;随心听\u0026#34;) self.recommend_button_4.setIcon(QtGui.QIcon(\u0026#39;./r4.jpg\u0026#39;)) self.recommend_button_4.setIconSize(QtCore.QSize(100, 100)) self.recommend_button_4.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon) self.recommend_button_5 = QtWidgets.QToolButton() self.recommend_button_5.setText(\u0026#34;经典日漫\u0026#34;) self.recommend_button_5.setIcon(QtGui.QIcon(\u0026#39;./01.jpg\u0026#39;)) self.recommend_button_5.setIconSize(QtCore.QSize(100, 100)) self.recommend_button_5.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon) self.right_recommend_layout.addWidget(self.recommend_button_1, 0, 0) self.right_recommend_layout.addWidget(self.recommend_button_2, 0, 1) self.right_recommend_layout.addWidget(self.recommend_button_3, 0, 2) self.right_recommend_layout.addWidget(self.recommend_button_4, 0, 3) self.right_recommend_layout.addWidget(self.recommend_button_5, 0, 4) self.right_layout.addWidget(self.right_recommend_label, 1, 0, 1, 9) self.right_layout.addWidget(self.right_recommend_widget, 2, 0, 2, 9) self.right_newsong_lable = QtWidgets.QLabel(\u0026#34;最新歌曲\u0026#34;) self.right_newsong_lable.setObjectName(\u0026#39;right_lable\u0026#39;) self.right_playlist_lable = QtWidgets.QLabel(\u0026#34;热门歌单\u0026#34;) self.right_playlist_lable.setObjectName(\u0026#39;right_lable\u0026#39;) self.right_newsong_widget = QtWidgets.QWidget() # 最新歌曲部件 self.right_newsong_layout = QtWidgets.QGridLayout() # 最新歌曲部件网格布局 self.right_newsong_widget.setLayout(self.right_newsong_layout) self.newsong_button_1 = QtWidgets.QPushButton( \u0026#34;Bohemian Rhapsody Queen Bohemian Rhapsody 05::54\u0026#34;) self.newsong_button_2 = QtWidgets.QPushButton( \u0026#34;Dance Monkey Tones and I The Kids Are Coming 03::29\u0026#34;) self.newsong_button_3 = QtWidgets.QPushButton( \u0026#34;Girls Like You Maroon 5 Red Pill Blues 03::55\u0026#34;) self.newsong_button_4 = QtWidgets.QPushButton( \u0026#34;Cheap Thrills Sia Cheap Thrills 03::31\u0026#34;) self.newsong_button_5 = QtWidgets.QPushButton( \u0026#34;Государственный гимн СССР 03::29\u0026#34;) self.newsong_button_6 = QtWidgets.QPushButton(\u0026#34;リブート ミワ reboot 04::02\u0026#34;) self.right_newsong_layout.addWidget(self.newsong_button_1, 0, 1, ) self.right_newsong_layout.addWidget(self.newsong_button_2, 1, 1, ) self.right_newsong_layout.addWidget(self.newsong_button_3, 2, 1, ) self.right_newsong_layout.addWidget(self.newsong_button_4, 3, 1, ) self.right_newsong_layout.addWidget(self.newsong_button_5, 4, 1, ) self.right_newsong_layout.addWidget(self.newsong_button_6, 5, 1, ) self.right_playlist_widget = QtWidgets.QWidget() # 播放歌单部件 self.right_playlist_layout = QtWidgets.QGridLayout() # 播放歌单网格布局 self.right_playlist_widget.setLayout(self.right_playlist_layout) self.playlist_button_1 = QtWidgets.QToolButton() self.playlist_button_1.setText(\u0026#34;助眠白噪音：调整...\u0026#34;) self.playlist_button_1.setIcon(QtGui.QIcon(\u0026#39;./p1.jpg\u0026#39;)) self.playlist_button_1.setIconSize(QtCore.QSize(100, 100)) self.playlist_button_1.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon) self.playlist_button_2 = QtWidgets.QToolButton() self.playlist_button_2.setText(\u0026#34;当代古典乐：走进...\u0026#34;) self.playlist_button_2.setIcon(QtGui.QIcon(\u0026#39;./p2.jpg\u0026#39;)) self.playlist_button_2.setIconSize(QtCore.QSize(100, 100)) self.playlist_button_2.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon) self.playlist_button_3 = QtWidgets.QToolButton() self.playlist_button_3.setText(\u0026#34;沉静如海 : 被复古...\u0026#34;) self.playlist_button_3.setIcon(QtGui.QIcon(\u0026#39;./p3.jpg\u0026#39;)) self.playlist_button_3.setIconSize(QtCore.QSize(100, 100)) self.playlist_button_3.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon) self.playlist_button_4 = QtWidgets.QToolButton() self.playlist_button_4.setText(\u0026#34;歌慌必备 : 打破感...\u0026#34;) self.playlist_button_4.setIcon(QtGui.QIcon(\u0026#39;./p4.jpg\u0026#39;)) self.playlist_button_4.setIconSize(QtCore.QSize(100, 100)) self.playlist_button_4.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon) self.right_playlist_layout.addWidget(self.playlist_button_1, 0, 0) self.right_playlist_layout.addWidget(self.playlist_button_2, 0, 1) self.right_playlist_layout.addWidget(self.playlist_button_3, 1, 0) self.right_playlist_layout.addWidget(self.playlist_button_4, 1, 1) self.right_layout.addWidget(self.right_newsong_lable, 4, 0, 1, 5) self.right_layout.addWidget(self.right_playlist_lable, 4, 5, 1, 4) self.right_layout.addWidget(self.right_newsong_widget, 5, 0, 1, 5) self.right_layout.addWidget(self.right_playlist_widget, 5, 5, 1, 4) self.right_process_bar = QtWidgets.QProgressBar() # 播放进度部件 self.right_process_bar.setValue(49) self.right_process_bar.setFixedHeight(3) # 设置进度条高度 self.right_process_bar.setTextVisible(False) # 不显示进度条文字 self.right_playconsole_widget = QtWidgets.QWidget() # 播放控制部件 self.right_playconsole_layout = QtWidgets.QGridLayout() # 播放控制部件网格布局层 self.right_playconsole_widget.setLayout(self.right_playconsole_layout) self.console_button_1 = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.backward\u0026#39;, color=\u0026#39;#F76677\u0026#39;), \u0026#34;\u0026#34;) self.console_button_2 = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.forward\u0026#39;, color=\u0026#39;#F76677\u0026#39;), \u0026#34;\u0026#34;) self.console_button_3 = QtWidgets.QPushButton(qtawesome.icon(\u0026#39;fa.pause\u0026#39;, color=\u0026#39;#F76677\u0026#39;, font=18), \u0026#34;\u0026#34;) self.console_button_3.setIconSize(QtCore.QSize(30, 30)) self.right_playconsole_layout.addWidget(self.console_button_1, 0, 0) self.right_playconsole_layout.addWidget(self.console_button_2, 0, 2) self.right_playconsole_layout.addWidget(self.console_button_3, 0, 1) self.right_playconsole_layout.setAlignment(QtCore.Qt.AlignCenter) # 设置布局内部件居中显示 self.right_layout.addWidget(self.right_process_bar, 9, 0, 1, 9) self.right_layout.addWidget(self.right_playconsole_widget, 10, 0, 1, 9) self.left_close.setFixedSize(16, 16) # 设置关闭按钮的大小 self.left_visit.setFixedSize(16, 16) # 设置按钮大小 self.left_mini.setFixedSize(16, 16) # 设置最小化按钮大小 self.left_close.setStyleSheet( \u0026#39;\u0026#39;\u0026#39;QPushButton{background:#F76677;border-radius:5px;}QPushButton:hover{background:red;}\u0026#39;\u0026#39;\u0026#39;) self.left_visit.setStyleSheet( \u0026#39;\u0026#39;\u0026#39;QPushButton{background:#F7D674;border-radius:5px;}QPushButton:hover{background:yellow;}\u0026#39;\u0026#39;\u0026#39;) self.left_mini.setStyleSheet( \u0026#39;\u0026#39;\u0026#39;QPushButton{background:#6DDF6D;border-radius:5px;}QPushButton:hover{background:green;}\u0026#39;\u0026#39;\u0026#39;) self.left_widget.setStyleSheet(\u0026#39;\u0026#39;\u0026#39; QPushButton{border:none;color:white;} QPushButton#left_label{ border:none; border-bottom:1px solid white; font-size:18px; font-weight:700; font-family: \u0026#34;Helvetica Neue\u0026#34;, Helvetica, Arial, sans-serif; } QPushButton#left_button:hover{border-left:4px solid red;font-weight:700;} QWidget#left_widget{ background:gray; border-top:1px solid white; border-bottom:1px solid white; border-left:1px solid white; border-top-left-radius:10px; border-bottom-left-radius:10px; } \u0026#39;\u0026#39;\u0026#39;) self.right_bar_widget_search_input.setStyleSheet( \u0026#39;\u0026#39;\u0026#39;QLineEdit{ border:1px solid gray; width:300px; border-radius:10px; padding:2px 4px; }\u0026#39;\u0026#39;\u0026#39;) self.right_widget.setStyleSheet(\u0026#39;\u0026#39;\u0026#39; QWidget#right_widget{ color:#232C51; background:white; border-top:1px solid darkGray; border-bottom:1px solid darkGray; border-right:1px solid darkGray; border-top-right-radius:10px; border-bottom-right-radius:10px; } QLabel#right_lable{ border:none; font-size:16px; font-weight:700; font-family: \u0026#34;Helvetica Neue\u0026#34;, Helvetica, Arial, sans-serif; } \u0026#39;\u0026#39;\u0026#39;) self.right_recommend_widget.setStyleSheet( \u0026#39;\u0026#39;\u0026#39; QToolButton{border:none;} QToolButton:hover{border-bottom:2px solid #F76677;} \u0026#39;\u0026#39;\u0026#39;) self.right_playlist_widget.setStyleSheet( \u0026#39;\u0026#39;\u0026#39; QToolButton{border:none;} QToolButton:hover{border-bottom:2px solid #F76677;} \u0026#39;\u0026#39;\u0026#39;) self.right_newsong_widget.setStyleSheet(\u0026#39;\u0026#39;\u0026#39; QPushButton{ border:none; color:gray; font-size:12px; height:40px; padding-left:5px; padding-right:10px; text-align:left; } QPushButton:hover{ color:black; border:1px solid #F3F3F5; border-radius:10px; background:LightGray; } \u0026#39;\u0026#39;\u0026#39;) self.right_process_bar.setStyleSheet(\u0026#39;\u0026#39;\u0026#39; QProgressBar::chunk { background-color: #F76677; } \u0026#39;\u0026#39;\u0026#39;) self.right_playconsole_widget.setStyleSheet(\u0026#39;\u0026#39;\u0026#39; QPushButton{ border:none; } \u0026#39;\u0026#39;\u0026#39;) self.setWindowOpacity(0.9) # 设置窗口透明度 self.setAttribute(QtCore.Qt.WA_TranslucentBackground) # 设置窗口背景透明 self.setWindowFlags(QtCore.Qt.FramelessWindowHint) # 隐藏边框 self.main_layout.setSpacing(0) # 无边框的拖动 def mouseMoveEvent(self, e: QtGui.QMouseEvent): # 重写移动事件 self._endPos = e.pos() - self._startPos self.move(self.pos() + self._endPos) def mousePressEvent(self, e: QtGui.QMouseEvent): if e.button() == QtCore.Qt.LeftButton: self._isTracking = True self._startPos = QtCore.QPoint(e.x(), e.y()) def mouseReleaseEvent(self, e: QtGui.QMouseEvent): if e.button() == QtCore.Qt.LeftButton: self._isTracking = False self._startPos = None self._endPos = None # 关闭按钮动作函数 def close_window(self): self.close() def main(): app = QtWidgets.QApplication(sys.argv) gui = MainUi() gui.show() sys.exit(app.exec_()) if __name__ == \u0026#39;__main__\u0026#39;: main() "}),a.add({id:251,href:'/life/docs/algorithm/data-structure/hashtable/',title:"哈希",section:"数据结构",content:"哈希\r#\r\r"}),a.add({id:252,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/swtj6fgd6s/',title:"复盘",section:"自信",content:"复盘\r#\r\r复盘，借鉴于围棋的一个术语。在围棋中的意思是：下完一盘棋之后，要重新在棋盘上走一遍， 看看那些棋子下得好，哪些棋子下得不好等等。重新走一遍并且思考的过程就称为复盘或者复局。 这种走一遍不是简单地重新将棋子按照原来顺序摆满棋盘，而是要对每一手重新进行思考， 一方面是还原当时的思考逻辑，另一方面因为是事后的重来，可以过滤对局时的情绪， 获得一种站在画面外看画的角度，给自己理解重新思考的机会。\n把复盘用于企业经营管理是柳传志柳总最先提出来，指通过对已经发生的事情进行回顾， 总结得失总结经验教训，从而掌握规律和方法，以便更好地达成终极目标， 或者再次发生同类事情时更好地处理。\n复盘，可以流于形式，也可以非常深刻，取决于两方面因素，一方面是心态——开放的心态可以让我们正视问题、坦诚表达， 从而带来深刻的复盘，抵触防御的心态只能带来流于形式的复盘；一个是方法，复盘是有方法的，有高手在实践中，总结出复盘四步法：\n Step1.回顾目标  回忆下你做这件事之前，你的目的或期望是什么？ 这个目标设定得靠谱、精确吗？应用“SMART法则”扫描目标 有没有发生“目标损耗”？事前定了个高目标，事后没达到，安慰自己说：“还是有成长的”。 团队是否还记得目标？是否对于目标有共同的认知？\n Step2. 评估结果  满分100分，你给自己打多少分？ 差了多少分？差在哪里? 如果能够再提高10分，你希望提高在哪里？\n Step3.分析原因  情景再现，一个个环节回顾事情的事前、事中、事后全流程，分析成功或失败的关键原因。 可控的：有没有更好的做法？是不是全力以赴？ 需要合作的 :自己的部分做好了吗？需要合作部分,是否为别人留出了足够的空间、时间和支持？ 不可控的：是否有充分沟通，即时跟进进度？ 有没有方式纳入控制？有没有控制风险？\n Step4. 总结经验  哪些事情应该坚持做，哪些应该马上停止做？ 哪些人、行为的价值值得重新评估？ 哪些事可以做得更好？具体该如何做？ 对整个事情背后的规律，你有什么新的认识？ 有没有哪些“经验”，其实是假设？\n 参考  "}),a.add({id:253,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/8m3fmhf6t3/',title:"如何变得更加成熟",section:"自信",content:" 顺境做事,逆境读书,绝境养生 不要因为自己受到不公就否定这个世界上的公平\n 一:成熟的标志是什么\r#\r\r 拿事儿  这个词，既包括一个人具有独立主持完成一项工作所需要的专业技术能力和沟通交流能力，也包括 了一个人在决策和执行中有权拒绝他人干扰的权威性以及主动承担其可能造成不良后果的诚信度。 一个人能拿住一件事儿，大到治理一家单位，小到能带老丈人去医院看病，就表明了他是一个可以 被视作拥有公民权的独立成年个体。\n人平事，事评人。成熟不成熟，还得事上见。每个人的能力有大有小，但只要能拿住一件事，就是 一个成熟的人。 不管男人女人，成年了，就都得拿事儿。\n 不再憧憬爱情  人和人是有巨大的不同的，人和人的差别比哈士奇和泰迪的差别更大。\n有的人年纪轻轻，就混吃等死，有的人年过半百，仍旧坚守信念。\n有的人少年老成，喜怒不形于色，有的人头发花白，仍旧叽叽喳喳。\n有的人，勇于承担责任，在家里，在单位，都是顶呱呱，但有的人，一辈子的妈宝，能留就留，能滑就滑。\n有的人，年少荒唐，但成年之后，顶天立地。但也有的人，年轻的时候人模狗样，年纪大了，为了利益，无所不用其极，毫无底线，一切皆可交易。\n那你说什么叫做成熟？\n难道那些没有承担，没有大脑，连人品都没有的人就永远不成熟了？？虽然是歪瓜裂枣，但也不能青春永驻不是。\n但是，所有的人，不管男女，当你有了一定的社会经验，你都天然的会懂得，爱情这玩意，是属于少男少女的青春荷尔蒙。\n有就有，没有就是没有，你没办法强求。\n当你还在憧憬爱情，你就还没有经受过社会的毒打。当你放弃了这种想法，有一天爱情或许会来找你，但概率也并不高。\n人生这场游戏，每个人都认为自己独一无二，但其实大家都是生产线上批量生产的，每个人大脑中都有一些出厂就有的先天设置。在社会上摸爬滚打之后，这些设置有的就必须改变，有的或许可以长久保留。每个人的境遇不同而不同。\n但是，相同的是，在经过社会的洗礼之后，成熟的人会懂得，自己的依靠和寄托，可以是事业，可以是金钱，也可以是情怀。同样，可以是无耻，可以是没有底线，可以是一切皆可交易，也可以是匍匐脚下，\n但，唯独不会是爱情。\n如果你的寄托是爱情，那只是你选择了匍匐脚下，而又死要面子活受罪的不愿意承认罢了。\n爱情只不过是性心理驱动的大脑逆向合理化之后的自我幻想。\n世间真有这种东西，不用怀疑。\n但就像海市蜃楼，你千万不要把这当成真实。\n 自我维持  最核心的标志是自我维持。其他都是衍生品或具体个性化选择\n自我维持必然意味着，对权利和义务、收益和成本、机会和代价，首先有默认，其次有全面和较为准确的评估。而不是，仅能看到权利、收益和机会，无视义务、成本和代价，或假想该由他人承担 — 这本质上是巨婴。\n在此基础上，个性化选择的方向，是完全无所谓的。有些人选择入世，有些人选择出世；有些人选择积极地照耀他人，有些人选择守好自己的城堡；有些人天然esfj，有些人天然intp……都可以很成熟，也都可以不成熟，核心不是这些具体方向的选择或天性特征，而依然是是否能做到自我维持，认清权责，并全套接受。\n另一个常见的衍生品，则是情绪相对较为稳定。想清楚权责，就会建立合理预期 — 对潜在收益的预期，对可能的不确定性即风险的预期。实现收益时，会明白这是承担了对应风险的溢价实现，于是不会喜出望外；无法实现收益乃至出现损失时，也会明白这是预期必然对应的随机性，于是也不会过于失落。\n总之，成熟的根本特征是自我维持。其他特征，或者，仅是自我维持的自然衍生；或者，并非成熟的必然特征，仅是一种个性化的具体选择。\n 放弃和取舍  懂得且愿意，为了最少数的原则（或欲望），而放弃最大多数的原则（或执念）。\n人生的成熟过程，其实就是一个被现实不断打磨的过程。\n而打磨本身其实就是一次次大大小小的挫折组成的。\n生活像锉刀一样，锉去了你的理想，你的锐气，你的欲望。\n在这样的历程中，学会了取舍，学会了坚强，学会了隐忍，学会了放弃。\n而所有的一切，只是你想要集中所有的力量去保护好你心中最重要的东西。\n所以，成熟其实至少包涵着两个层面的问题：\n1.在认知上，经过历练、筛选和左右权衡，认识到什么东西才是对自己最重要的。\n哪些东西是不能放弃的，而哪些东西是可以完全放弃的或暂时放弃的。\n这就是关于取舍的认知。没有经历过打磨的人，其实是很难清楚地知道取舍的。\n他们总觉得再努力一下，什么都有可能拥有，所以是舍不得舍弃某些欲望的。\n就像一个人被无数次灌输健康很重要的观点，但是在他经历严重病痛折磨前，其实很难真正体会这一点的。\n2.在实践上，能够真正做到放下，且豁达、坦然。\n认知是一回事儿，实践是另一回事儿。\n在成熟这个问题上，知难，行也难。\n因为很多取舍，本身就是两难。\n你必须在两个都非常重要的东西之间，选择保留一个而放弃一个。\n而很多人往往在痛苦的纠结中，犹豫不决，错失良机。 即便做了选择，也一辈子或长期处于懊丧之中，自责之中。 只有真正成熟的人，才能活得通透，活得坦然，哪怕是在别人看来错误的选择，他也能坦然视之。 活得理性而坚定，淡定而从容，这个时候，一个男生自然而然会由内而外地散发出成熟的气质。 所以，成熟，不是能装出来的，也不是有钱有势就行，甚至不是办事能力，恰恰相反，成熟更像是一种在应对灾难时所表现出来的心理抗性或抵抗力。 譬如面对死亡，谁也没有能力解决，成熟与不成熟的一个表现就是你能否坦然面对死亡。 对于失败，也是如此。\n对于割舍，亦复如是！\n 这事我搞定 按我个人经验的话，主要看他说“这事我搞定”的频次。 年轻的小男生其实是很怕担责的，我前两年招了个新人小弟，211研究生，刚来的时候一看小伙长 得挺高挺帅，没想到工作起来那么菜…… 干啥啥不行，甩锅第一名。 遇到问题或者惹麻烦了就把我推出去，说是我安排的…… 关键是人菜脾气大，每件事都有自己的想法，不仅经常我行我素按自己的思路开展工作。 最令人头大的是他还有一套自己的歪理邪说，把什么事都能说得振振有词。 比如这个宣传工作要拍照为什么没拍，说这不是宣传口的工作，不能助长对方的嚣张气焰。 比如这个材料要写为什么没写，说这个材料都是假话空话套话，写了也没人看，何必要写。 比如这个记者采访专题为什么拒绝，说这些记者都是骗钱的，来了就要收费，多一事不如少一事。 基本上第一年第二年，我每次和领导谈话的主要课题之一，就包括能不能把这倒霉孩子开除了。 当然了，国企是很难裁员的……即便裁员用完部门招聘指标的我也很难再招人，只能硬着头皮用…… 但疫情结束后，我感觉他的工作态度发生了天翻地覆的改变。 基本上自己负责的工作，都能正常按时弄完，如果有难处，也不吭气，自己熬夜到1到2点，也一定要当晚发给我。 遇到不会弄的会主动问了，问了但是不再是甩锅给我，而是自己学会，弄好了再交给我。 最令人惊讶的是，他会主动看我做的东西，然后主动找我要活儿干了。 这基本上以前是不可想象的。 我后面有次单独吃饭就问他，到底是什么改变了他。 他说他爹这几年一直在工地打工，每个月只给自己留300块生活费，其余的钱都打给自己，希望自己早点在武汉立足，买房结婚。 他说他知道自己之前在混，但是反正混我们也会包容他，他没必要认真弄，挨骂就挨骂，死猪不怕开水烫。  他沉默了几秒钟，说爹年纪大了，以后不能再这么混下去了。 到了去年，翻过年来，他已经可以独当一面了。 遇到什么急活儿脏活儿，或者是周末要加班处理的事情，他会很干脆的说： “这事我搞定！” 而且真的能基本搞定，虽然细节上依然有粗糙和稚嫩之处，但的确看得出来是用心做的了。 一个男孩，在面对世界时终于下定决心，要把责任主动扛起来，而且他真的咬咬牙能扛住时。 我觉得这就是跨过了那条属于男人的分界线。 从此以后，知难而进，一往无前，再无半点怯懦。\n 坚持目标  有很多，但我只说心里最明显的答案。 他开始主动或被动地放弃了一向坚持的原则，为了某个更重要的目的而忍受，甚至明知道自己在践踏自己的原则，还要学会适应、学习、甚至擅长自己曾经鄙视的游戏规则。 他成了一个为了重要目标而卑贱苟且的人。 他在心里装着对错，但在行为上已经没有对错了。 这些目标可以是，家人的生活、事业的成功以及理想的实现，但有时候，仅仅是为了生存。 我愿你永远不需要变得“成熟”。人到中年仍然可以保持赤子之心行为的人，一定具有超强的能力，所以在某些方面，仅仅是某些方面，仍然可以坚持少年时期坚信的对错。\n"}),a.add({id:254,href:'/life/docs/%E8%84%9A%E6%9C%AC/webpack%E7%83%AD%E6%9B%B4%E6%96%B0/',title:"webpack 热更新 ",section:"脚本",content:" package.json  { \u0026#34;name\u0026#34;: \u0026#34;demo09\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;index.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;webpack\u0026#34;, \u0026#34;dev\u0026#34;: \u0026#34;webpack-dev-server\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;, \u0026#34;devDependencies\u0026#34;: { \u0026#34;html-webpack-plugin\u0026#34;: \u0026#34;^5.3.2\u0026#34;, \u0026#34;webpack\u0026#34;: \u0026#34;^5.45.1\u0026#34;, \u0026#34;webpack-cli\u0026#34;: \u0026#34;^3.3.12\u0026#34;, \u0026#34;webpack-dev-server\u0026#34;: \u0026#34;^3.11.2\u0026#34; } }  webpack.config.js  const path = require(\u0026#34;path\u0026#34;); const webpack = require(\u0026#34;webpack\u0026#34;); const HtmlWebpackPlugin = require(\u0026#39;html-webpack-plugin\u0026#39;); module.exports = { entry: { \u0026#34;index\u0026#34;: \u0026#34;./src/index.js\u0026#34; }, mode: \u0026#34;development\u0026#34;, output: { path: path.resolve(__dirname, \u0026#39;dist\u0026#39;) }, plugins: [ new HtmlWebpackPlugin({ title : \u0026#34;hot module replacement\u0026#34; }), new webpack.HotModuleReplacementPlugin() ], devServer: { contentBase: path.join(__dirname, \u0026#39;dist\u0026#39;), compress: true, port: 9000, hot:true } }  src/index.js  function randomString(e) { e = e || 32; var t = \u0026#34;ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678\u0026#34;, a = t.length, n = \u0026#34;\u0026#34;; for (i = 0; i \u0026lt; e; i++) n += t.charAt(Math.floor(Math.random() * a)); return n; } console.log(\u0026#34;---\u0026#34; + randomString(22) + \u0026#34;----\u0026#34;); const el = document.createElement(\u0026#34;div\u0026#34;) ; el.innerText = randomString(20) ; document.body.append(el) ;  命令  D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\u0026gt;npm init -y Wrote to D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\\package.json: { \u0026#34;name\u0026#34;: \u0026#34;demo09\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;webpack.config.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34; } D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\u0026gt;npm install --save-dev html-webpack-plugin npm notice created a lockfile as package-lock.json. You should commit this file. npm WARN html-webpack-plugin@5.3.2 requires a peer of webpack@^5.20.0 but none is installed. You must install peer dependencies yourself. npm WARN demo09@1.0.0 No description npm WARN demo09@1.0.0 No repository field. + html-webpack-plugin@5.3.2 added 37 packages from 56 contributors in 4.007s 10 packages are looking for funding run `npm fund` for details D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\u0026gt;npm add -D webpack webpack-cli npm WARN demo09@1.0.0 No description npm WARN demo09@1.0.0 No repository field. + webpack@5.45.1 + webpack-cli@4.7.2 added 117 packages from 155 contributors in 8.096s 26 packages are looking for funding run `npm fund` for details D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\u0026gt;npm add -D webpack-dev-server npm WARN deprecated chokidar@2.1.8: Chokidar 2 will break on node v14+. Upgrade to chokidar 3 with 15x less dependencies. npm WARN deprecated fsevents@1.2.13: fsevents 1 will break on node v14+ and could be using insecure binaries. Upgrade to fsevents 2. npm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated npm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated npm WARN deprecated querystring@0.2.0: The npm WARN demo09@1.0.0 No description npm WARN demo09@1.0.0 No repository field. npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\\fsevents): npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\u0026#34;os\u0026#34;:\u0026#34;darwin\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;any\u0026#34;} (current: {\u0026#34;os\u0026#34;:\u0026#34;win32\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;x64\u0026#34;}) + webpack-dev-server@3.11.2 added 366 packages from 222 contributors in 22.282s 38 packages are looking for funding run `npm fund` for details D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\u0026gt;npm i --save-dev npm WARN demo09@1.0.0 No description npm WARN demo09@1.0.0 No repository field. npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\\fsevents): npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\u0026#34;os\u0026#34;:\u0026#34;darwin\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;any\u0026#34;} (current: {\u0026#34;os\u0026#34;:\u0026#34;win32\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;x64\u0026#34;}) up to date in 1.964s 38 packages are looking for funding run `npm fund` for details D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\u0026gt;webpack asset index.js 40.2 KiB [emitted] (name: index) asset index.html 243 bytes [emitted] runtime modules 25.8 KiB 9 modules ./src/index.js 412 bytes [built] [code generated] webpack 5.45.1 compiled successfully in 136 ms D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\u0026gt;  到目前为止未出现任何问题\n  执行运行开发服务器命令  D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\u0026gt;npm run dev \u0026gt; demo09@1.0.0 dev D:\\IdeaProjects\\cycle\\study\\webpack\\demo09 \u0026gt; webpack-dev-server internal/modules/cjs/loader.js:905 throw err; ^ Error: Cannot find module \u0026#39;webpack-cli/bin/config-yargs\u0026#39; Require stack: - D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\\node_modules\\webpack-dev-server\\bin\\webpack-dev-server.js at Function.Module._resolveFilename (internal/modules/cjs/loader.js:902:15) at Function.Module._load (internal/modules/cjs/loader.js:746:27) at Module.require (internal/modules/cjs/loader.js:974:19) at require (internal/modules/cjs/helpers.js:92:18) at Object.\u0026lt;anonymous\u0026gt; (D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\\node_modules\\webpack-dev-server\\bin\\webpack-dev-server.js:65:1) at Module._compile (internal/modules/cjs/loader.js:1085:14) at Object.Module._extensions..js (internal/modules/cjs/loader.js:1114:10) at Module.load (internal/modules/cjs/loader.js:950:32) at Function.Module._load (internal/modules/cjs/loader.js:790:14) at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:76:12) { code: \u0026#39;MODULE_NOT_FOUND\u0026#39;, requireStack: [ \u0026#39;D:\\\\IdeaProjects\\\\cycle\\\\study\\\\webpack\\\\demo09\\\\node_modules\\\\webpack-dev-server\\\\bin\\\\webpack-dev-server.js\u0026#39; ] } npm ERR! code ELIFECYCLE npm ERR! errno 1 npm ERR! demo09@1.0.0 dev: `webpack-dev-server` npm ERR! Exit status 1 npm ERR! npm ERR! Failed at the demo09@1.0.0 dev script. npm ERR! This is probably not a problem with npm. There is likely additional logging output above. npm ERR! A complete log of this run can be found in: npm ERR! C:\\Users\\dell\\AppData\\Roaming\\npm-cache\\_logs\\2021-07-18T08_20_36_958Z-debug.log   找到解决办法就是降低webpack-cli版本\n  接下来的命令\n  D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\u0026gt;npm uninstall webpack-cli npm WARN demo09@1.0.0 No description npm WARN demo09@1.0.0 No repository field. npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\\fsevents): npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\u0026#34;os\u0026#34;:\u0026#34;darwin\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;any\u0026#34;} (current: {\u0026#34;os\u0026#34;:\u0026#34;win32\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;x64\u0026#34;}) removed 40 packages in 2.099s 33 packages are looking for funding run `npm fund` for details D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\u0026gt;npm install webpack-cli@3 -D npm WARN webpack-cli@3.3.12 requires a peer of webpack@4.x.x but none is installed. You must install peer dependencies yourself. npm WARN demo09@1.0.0 No description npm WARN demo09@1.0.0 No repository field. npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\\fsevents): npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\u0026#34;os\u0026#34;:\u0026#34;darwin\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;any\u0026#34;} (current: {\u0026#34;os\u0026#34;:\u0026#34;win32\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;x64\u0026#34;}) + webpack-cli@3.3.12 added 42 packages from 27 contributors in 5.207s 33 packages are looking for funding run `npm fund` for details  运行  D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\u0026gt;npm run dev \u0026gt; demo09@1.0.0 dev D:\\IdeaProjects\\cycle\\study\\webpack\\demo09 \u0026gt; webpack-dev-server i ｢wds｣: Project is running at http://localhost:9000/ i ｢wds｣: webpack output is served from / i ｢wds｣: Content not from webpack is served from D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\\dist i ｢wdm｣: asset index.js 407 KiB [emitted] (name: index) asset index.html 243 bytes [emitted] runtime modules 25.9 KiB 10 modules cacheable modules 339 KiB modules by path ./node_modules/webpack-dev-server/client/ 20.9 KiB 10 modules modules by path ./node_modules/html-entities/lib/*.js 61 KiB 5 modules modules by path ./node_modules/webpack/hot/*.js 4.3 KiB 4 modules modules by path ./node_modules/url/ 37.4 KiB ./node_modules/url/url.js 22.8 KiB [built] [code generated] ./node_modules/url/node_modules/punycode/punycode.js 14.3 KiB [built] [code generated] ./node_modules/url/util.js 314 bytes [built] [code generated] modules by path ./node_modules/querystring/*.js 4.51 KiB ./node_modules/querystring/index.js 127 bytes [built] [code generated] ./node_modules/querystring/decode.js 2.34 KiB [built] [code generated] ./node_modules/querystring/encode.js 2.04 KiB [built] [code generated] ./node_modules/webpack/hot/ sync nonrecursive ^\\.\\/log$ 170 bytes [built] [code generated] webpack 5.45.1 compiled successfully in 424 ms i ｢wdm｣: Compiled successfully.   链接http://localhost:9000/得到结果\n  结束 webpack-dev-server\n  ctrl + c 终止批处理操作吗(Y/N)? Y D:\\IdeaProjects\\cycle\\study\\webpack\\demo09\u0026gt; "}),a.add({id:255,href:'/life/docs/python/base/pathlib/',title:"python pathlib",section:"python 基础学习",content:"pathlib\r#\r\r文件读写\r#\r\r读\r#\r\rimport pathlib as pathLib paths = (\u0026#39;file\u0026#39;, \u0026#39;f.txt\u0026#39;) file1 = pathLib.Path.open(pathLib.Path.cwd().joinpath(*paths), mode=\u0026#34;r+\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) list1 = file1.readlines() for x in list1: print(x) file1.close() 写\r#\r\rimport pathlib as pathLib import random import time import hashlib # 写文件 fileName1 = str(random.randrange(100, 100000) + random.randrange(100, 100000) + random.randrange(100, 100000)) paths = (\u0026#39;file\u0026#39;, fileName1 + \u0026#39;.txt\u0026#39;) # 判断文件夹是否存在 if pathLib.Path(pathLib.Path.cwd().joinpath(\u0026#39;file\u0026#39;)).exists(): pass else: #不存在则建立文件夹 pathLib.Path.mkdir(pathLib.Path(pathLib.Path.cwd().joinpath(\u0026#39;file\u0026#39;))) file1 = pathLib.Path.open(pathLib.Path.cwd().joinpath(*paths), mode=\u0026#34;w\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) strList = [] for x in range(1, 100, 2): strX = str(time.time() * time.time() * x) mn = hashlib.md5(strX.encode(encoding=\u0026#39;utf-8\u0026#39;)) strList.append(mn.hexdigest() + \u0026#39;\\n\u0026#39;) print(strList) file1.writelines(strList) file1.close() 写文件 (复杂)\r#\r\rimport pathlib as pathLib import random import time import hashlib # 判断文件夹是否存在 if pathLib.Path(pathLib.Path.cwd().joinpath(\u0026#39;file\u0026#39;)).exists(): pass else: # 不存在则建立文件夹 pathLib.Path.mkdir(pathLib.Path(pathLib.Path.cwd().joinpath(\u0026#39;file\u0026#39;))) for dir in [\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;]: if pathLib.Path(pathLib.Path.cwd().joinpath(*(\u0026#39;file\u0026#39;, dir))).exists(): pass else: # 不存在则建立文件夹 pathLib.Path.mkdir(pathLib.Path(pathLib.Path.cwd().joinpath(*(\u0026#39;file\u0026#39;, dir)))) pass # 写文件 fileName1 = str(random.randrange(100, 100000) + random.randrange(100, 100000) + random.randrange(100, 100000)) paths = (\u0026#39;file\u0026#39;, dir, fileName1 + \u0026#39;.txt\u0026#39;) file1 = pathLib.Path.open(pathLib.Path.cwd().joinpath(*paths), mode=\u0026#34;w\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) strList = [] for x in range(1, 100, 2): strX = str(time.time() * time.time() * x) mn = hashlib.md5(strX.encode(encoding=\u0026#39;utf-8\u0026#39;)) strList.append(mn.hexdigest() + \u0026#39;\\n\u0026#39;) print(strList) file1.writelines(strList) file1.close() print(\u0026#34;所有写入完毕!\u0026#34;)  获取文件列表  import pathlib as pathLib paths = (\u0026#39;file\u0026#39;) #读取所有文件夹下的文件 fileList = pathLib.Path.iterdir(pathLib.Path.cwd().joinpath(paths)) def ergodicFile(f): if f.is_dir(): print(f\u0026#34;文件夹:{f.absolute()}\u0026#34;) for ff in f.iterdir(): ergodicFile(ff) else: print(f.name) print(f.absolute()) for f in fileList: ergodicFile(f) 文件夹压缩 zip\r#\r\rimport zipfile as zipUtils import pathlib as pathLib import random # 判断文件夹是否存在 if pathLib.Path(pathLib.Path.cwd().joinpath(\u0026#39;file_zip\u0026#39;)).exists(): pass else: #不存在则建立文件夹 pathLib.Path.mkdir(pathLib.Path(pathLib.Path.cwd().joinpath(\u0026#39;file_zip\u0026#39;))) # 压缩文件路径 zip_file_path = pathLib.Path.cwd().joinpath((\u0026#34;file_zip\u0026#34;), str(random.randrange(1, 100000)) + \u0026#34;srmdir_all.zip\u0026#34;) print(zip_file_path) zipFile = zipUtils.ZipFile(zip_file_path, \u0026#39;w\u0026#39;, zipUtils.ZIP_DEFLATED) fileList = pathLib.Path.iterdir(pathLib.Path.cwd().joinpath((\u0026#39;file\u0026#39;))) for f in fileList: if f.is_file(): pass # 目标地址path 源地址path zipFile.write(f.absolute(), f.name) pass zipFile.close() 文件夹复杂压缩 zip\r#\r\rimport zipfile as zipUtils import pathlib as pathLib import random import os as osUtils # 压缩文件 zip_file_path = pathLib.Path(pathLib.Path.cwd().joinpath(\u0026#39;file_zip\u0026#39;)) # 压缩文件路径 sourceFileDir = pathLib.Path(pathLib.Path.cwd().joinpath((\u0026#39;file\u0026#39;))) # 判断文件夹是否存在 if zip_file_path.exists(): pass else: # 不存在则建立文件夹 pathLib.Path.mkdir(zip_file_path) zip_file_path = pathLib.Path.joinpath(zip_file_path, str(random.randrange(1, 100000)) + \u0026#34;srmdir_all.zip\u0026#34;) print(zip_file_path) print(sourceFileDir) zipFile = zipUtils.ZipFile(zip_file_path, \u0026#39;w\u0026#39;, zipUtils.ZIP_DEFLATED) def zipFileFun(sourceFileDir, zipFile): for dirpath, dirnames, filenames in osUtils.walk(sourceFileDir): # 这一句很重要，不replace的话，就从根目录开始复制 fpath = dirpath.replace(str(sourceFileDir), \u0026#39;\u0026#39;) # 这句话理解我也点郁闷，实现当前文件夹以及包含的所有文件的压缩 fpath = fpath and fpath + osUtils.sep or \u0026#39;\u0026#39; for filename in filenames: zipFile.write(osUtils.path.join(dirpath, filename), fpath + filename) print(\u0026#39;压缩成功\u0026#39;, osUtils.path.join(dirpath, filename), fpath + filename) zipFileFun(sourceFileDir, zipFile) zipFile.close() print(\u0026#34;复杂压缩结束!\u0026#34;) 文件夹解压 zip\r#\r\rimport zipfile as zipUtils import pathlib as pathLib import random import os as osUtils # 解压文件路径 extracta_file_path = pathLib.Path(pathLib.Path.cwd().joinpath(\u0026#39;extracta\u0026#39;)) # 压缩文件路径 sourceFileDir = pathLib.Path(pathLib.Path.cwd().joinpath(*(\u0026#39;file_zip\u0026#39;,\u0026#39;69134srmdir_all.zip\u0026#39;))) # 判断文件夹是否存在 if extracta_file_path.exists(): pass else: # 不存在则建立文件夹 pathLib.Path.mkdir(extracta_file_path) zip_file = zipUtils.ZipFile(sourceFileDir) # 解压 zip_extract = zip_file.extractall(extracta_file_path) zip_file.close() 简单属性\r#\r\rimport pathlib as pathLib import os as osUtils fileDir = pathLib.Path.cwd().joinpath((\u0026#39;DemoOther.py\u0026#39;)) print(f\u0026#34;返回电脑用户的目录: {fileDir.home()}\u0026#34;) print(f\u0026#34;返回文件当前所在目录: {fileDir.cwd()}\u0026#34;) print(f\u0026#34;返回文件: {fileDir.parts}\u0026#34;) print(f\u0026#34;返回根目录: {fileDir.anchor}\u0026#34;) print(f\u0026#34;返回根目录: {fileDir.root}\u0026#34;) print(f\u0026#34;返回父级目录: {fileDir.parent}\u0026#34;) print(f\u0026#34;返回所有上级目录的列表: {fileDir.parents}\u0026#34;) print(f\u0026#34;后缀: {fileDir.suffix}\u0026#34;) print(f\u0026#34;返回文件后缀列表: {fileDir.suffixes}\u0026#34;) print(f\u0026#34;获得文件属性: {fileDir.stat()}\u0026#34;) print(f\u0026#34;返回文件名+文件后缀: {fileDir.name}\u0026#34;) print(f\u0026#34;返回文件名: {fileDir.stem}\u0026#34;) print(f\u0026#34;获得文件路径: {str(fileDir)}\u0026#34;) print(f\u0026#34;获得文件路径base: {str(fileDir).replace(osUtils.sep + fileDir.name, \u0026#39;\u0026#39;)}\u0026#34;) pathlib和os常用操作对比\r#\r\r   pathlib操作 os及os.path操作 功能描述     Path.resolve() os.path.abspath() 获得绝对路径   Path.chmod() os.chmod() 修改文件权限和时间戳   Path.mkdir() os.mkdir() 创建目录   Path.rename() os.rename() 文件或文件夹重命名，如果路径不同，会移动并重新命名   Path.replace() os.replace() 文件或文件夹重命名，如果路径不同，会移动并重新命名，如果存在，则破坏现有目标。   Path.rmdir() os.rmdir() 删除目录   Path.unlink() os.remove() 删除一个文件   Path.unlink() os.unlink() 删除一个文件   Path.cwd() os.getcwd() 获得当前工作目录   Path.exists() os.path.exists() 判断是否存在文件或目录name   Path.home() os.path.expanduser() 返回电脑的用户目录   Path.is_dir() os.path.isdir() 检验给出的路径是一个文件   Path.is_file() os.path.isfile() 检验给出的路径是一个目录   Path.is_symlink() os.path.islink() 检验给出的路径是一个符号链接   Path.stat() os.stat() 获得文件属性   PurePath.is_absolute() os.path.isabs() 判断是否为绝对路径   PurePath.joinpath() os.path.join() 连接目录与文件名或目录   PurePath.name os.path.basename() 返回文件名   PurePath.parent os.path.dirname() 返回文件路径   Path.samefile() os.path.samefile() 判断两个路径是否相同   PurePath.suffix os.path.splitext() 分离文件名和扩展名    "}),a.add({id:256,href:'/life/docs/python/base/file/',title:"python 文件",section:"python 基础学习",content:"文件\r#\r\r open()  open() 函数用于创建或打开指定文件，该函数的常用语法格式如下：\nfile = open(file_name [, mode='r' [ , buffering=-1 [ , encoding = None ]]])\r此格式中，用 [] 括起来的部分为可选参数，即可以使用也可以省略。其中，各个参数所代表的含义如下：\n  file：表示要创建的文件对象。\n  file_name：要创建或打开文件的文件名称，该名称要用引号（单引号或双引号都可以）括起来。需要注意的是，如果要打开的文件和当前执行的代码文件位于同一目录，则直接写文件名即可；否则，此参数需要指定打开文件所在的完整路径。\n  mode：可选参数，用于指定文件的打开模式。可选的打开模式如表 1 所示。如果不写，则默认以只读（r）模式打开文件。\n  buffering：可选参数，用于指定对文件做读写操作时，是否使用缓冲区（本节后续会详细介绍）。\n  encoding：手动设定打开文件时所使用的编码格式，不同平台的 ecoding 参数值也不同，以 Windows 为例，其默认为 cp936（实际上就是 GBK 编码）。\n  open 函数支持的文件打开模式\n     模式 意义 注意事项     r 只读模式打开文件，读文件内容的指针会放在文件的开头。 操作的文件必须存在。   rb 以二进制格式、采用只读模式打开文件，读文件内容的指针位于文件的开头，一般用于非文本文件，如图片文件、音频文件等。    r+ 打开文件后，既可以从头读取文件内容，也可以从开头向文件中写入新的内容，写入的新内容会覆盖文件中等长度的原有内容。    rb+ 以二进制格式、采用读写模式打开文件，读写文件的指针会放在文件的开头，通常针对非文本文件（如音频文件）。    w 以只写模式打开文件，若该文件存在，打开时会清空文件中原有的内容。 若文件存在，会清空其原有内容（覆盖文件）；反之，则创建新文件。   wb 以二进制格式、只写模式打开文件，一般用于非文本文件（如音频文件）    w+ 打开文件后，会对原有内容进行清空，并对该文件有读写权限。    wb+ 以二进制格式、读写模式打开文件，一般用于非文本文件    a 以追加模式打开一个文件，对文件只有写入权限，如果文件已经存在，文件指针将放在文件的末尾（即新写入内容会位于已有内容之后）；反之，则会创建新文件。     ab 以二进制格式打开文件，并采用追加模式，对文件只有写权限。如果该文件已存在，文件指针位于文件末尾（新写入文件会位于已有内容之后）；反之，则创建新文件。     a+ 以读写模式打开文件；如果文件存在，文件指针放在文件的末尾（新写入文件会位于已有内容之后）；反之，则创建新文件。     ab+ 以二进制模式打开文件，并采用追加模式，对文件具有读写权限，如果文件存在，则文件指针位于文件的末尾（新写入文件会位于已有内容之后）；反之，则创建新文件。       File对象的属性     属性 描述     file.closed 返回true如果文件已被关闭，否则返回false。   file.mode 返回被打开文件的访问模式。   file.name 返回文件的名称。   file.softspace 如果用print输出后，必须跟一个空格符，则返回false。否则返回true。     如下实例：  def fileF4(dir): f1 = open(dir, \u0026#34;r+\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) print(\u0026#34;文件名: \u0026#34;, f1.name) print(\u0026#34;是否已关闭: \u0026#34;, f1.closed) print(\u0026#34;访问模式: \u0026#34;, f1.mode) fileF4(\u0026#34;D:\\\\pythonProjects\\\\t2\\\\readme.md\u0026#34;)  open() 使用的一些例子  import os import random import time dir1 = \u0026#34;D:\\\\pythonProjects\\\\t2\\\\打包编辑器安装.md\u0026#34; def fileF1(dir): f1 = open(dir, \u0026#34;r\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) # 读取 # file 表示已打开的文件对象；size 作为一个可选参数，用于指定一次最多可读取的字符（字节）个数，如果省略，则默认一次性读取所有内容 # print(f1.read()) print(f1.read(20)) # 关闭文件 f1.close() def fileF2(dir): f1 = open(dir, \u0026#34;r+\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) # file 为打开的文件对象；size 为可选参数，用于指定读取每一行时，一次最多读取的字符（字节）数 print(f1.readline()) print(f1.readline(1)) print(f1.readline(2)) print(f1.readline(5)) # 关闭文件 f1.close() def fileF3(dir): f1 = open(dir, \u0026#34;r+\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) # readlines() 函数用于读取文件中的所有行，它和调用不指定 size 参数的 read() 函数类似，只不过该函数返回是一个字符串列表，其中每个元素为文件中的一行内容。 lines = f1.readlines() for str in lines: print(str) f1.close() def fileF4(dir): f1 = open(dir, \u0026#34;r+\u0026#34;, encoding=\u0026#34;UTF-8\u0026#34;) print(\u0026#34;文件名: \u0026#34;, f1.name) print(\u0026#34;是否已关闭: \u0026#34;, f1.closed) print(\u0026#34;访问模式: \u0026#34;, f1.mode) def fileF5(): # write()方法可将任何字符串写入一个打开的文件。需要重点注意的是，Python字符串可以是二进制数据，而不是仅仅是文字。 # write()方法不会在字符串的结尾添加换行符(\u0026#39;\\n\u0026#39;)： # 语法 fileObject.write(string) num1 = int(time.time()) num2 = int(random.random() * 100 * random.random()) * int(random.random() * 100) + int(random.random() * 100 * random.random()) str2 = os.path.abspath(os.path.join(os.getcwd(), os.pardir)) + \u0026#34;\\\\file\u0026#34; + \u0026#34;\\\\\u0026#34; + str(num1) + \u0026#34;.txt\u0026#34; fo = open(str2, \u0026#34;w\u0026#34;) fo.write(str(num2 + time.time())) fo.flush() fo.close() def fileF6(): strList = [] for x in range(0,100): strList.append(str(time.time() * time.time()) + \u0026#39;\\n\u0026#39; ) str2 = os.path.abspath(os.path.join(os.getcwd(), os.pardir)) + \u0026#34;\\\\file\u0026#34; + \u0026#34;\\\\\u0026#34; + str(float(time.time())) + \u0026#34;_writelines.txt\u0026#34; fo = open(str2, \u0026#34;w\u0026#34;) # 写入函数只有 write() 和 writelines() 函数，而没有名为 writeline 的函数 fo.writelines(strList) fo.flush() fo.close() # fileF1(dir1) # fileF2(dir1) # fileF3(dir1) # fileF4(dir1) # fileF5() fileF6() OS\r#\r\r os.path 模块     方法 说明     os.getcwd() 返回当前工作目录   os.path.abspath(path) 返回 path 的绝对路径。   os.path.basename(path) 获取 path 路径的基本名称，即 path 末尾到最后一个斜杠的位置之间的字符串。   os.path.commonprefix(list) 返回 list（多个路径）中，所有 path 共有的最长的路径。   os.path.dirname(path) 返回 path 路径中的目录部分。   os.path.exists(path) 判断 path 对应的文件是否存在，如果存在，返回 True；反之，返回 False。和 lexists() 的区别在于，exists()会自动判断失效的文件链接（类似 Windows 系统中文件的快捷方式），而 lexists() 却不会。   os.path.lexists(path) 判断路径是否存在，如果存在，则返回 True；反之，返回 False。   os.path.expanduser(path) 把 path 中包含的 \u0026ldquo;~\u0026rdquo; 和 \u0026ldquo;~user\u0026rdquo; 转换成用户目录。   os.path.expandvars(path) 根据环境变量的值替换 path 中包含的 \u0026ldquo;$name\u0026rdquo; 和 \u0026ldquo;${name}\u0026quot;。   os.path.getatime(path) 返回 path 所指文件的最近访问时间（浮点型秒数）。   os.path.getmtime(path) 返回文件的最近修改时间（单位为秒）。   os.path.getctime(path) 返回文件的创建时间（单位为秒，自 1970 年 1 月 1 日起（又称 Unix 时间））。   os.path.getsize(path) 返回文件大小，如果文件不存在就返回错误。   os.path.isabs(path) 判断是否为绝对路径。   os.path.isfile(path) 判断路径是否为文件。   os.path.isdir(path) 判断路径是否为目录。   os.path.islink(path) 判断路径是否为链接文件（类似 Windows 系统中的快捷方式）。   os.path.ismount(path) 判断路径是否为挂载点。   os.path.join(path1[, path2[, \u0026hellip;]]) 把目录和文件名合成一个路径。   os.path.normcase(path) 转换 path 的大小写和斜杠。   os.path.normpath(path) 规范 path 字符串形式。   os.path.realpath(path) 返回 path 的真实路径。   os.path.relpath(path[, start]) 从 start 开始计算相对路径。   os.path.samefile(path1, path2) 判断目录或文件是否相同。   os.path.sameopenfile(fp1, fp2) 判断 fp1 和 fp2 是否指向同一文件。   os.path.samestat(stat1, stat2) 判断 stat1 和 stat2 是否指向同一个文件。   os.path.split(path) 把路径分割成 dirname 和 basename，返回一个元组。   os.path.splitdrive(path) 一般用在 windows 下，返回驱动器名和路径组成的元组。   os.path.splitext(path) 分割路径，返回路径名和文件扩展名的元组。   os.path.splitunc(path) 把路径分割为加载点与文件。   os.path.walk(path, visit, arg) 遍历path，进入每个目录都调用 visit 函数，visit 函数必须有 3 个参数(arg, dirname, names)，dirname 表示当前目录的目录名，names 代表当前目录下的所有文件名，args 则为 walk 的第三个参数。   os.path.supports_unicode_filenames 设置是否可以将任意 Unicode 字符串用作文件名。    import os import time # 返回当前工作目录 print(os.getcwd()) # 返回 path 的绝对路径 print(os.path.abspath(os.getcwd())) dir1x = os.getcwd() + \u0026#34;\\\\\u0026#34;+str(int(time.time())) # 创建目录 os.mkdir(dir1x) print(dir1x) # os.chdir(dir1x) # print(\u0026#34;新目录\u0026#34;,os.getcwd()) # 获取 path 路径的基本名称，即 path 末尾到最后一个斜杠的位置之间的字符串 如 readme.md print(os.path.basename(\u0026#34;D:\\\\pythonProjects\\\\t2\\\\readme.md\u0026#34;)) # 判断路径是否为文件 print(os.path.isfile(\u0026#34;D:\\\\pythonProjects\\\\t2\\\\readme.md\u0026#34;)) # 判断路径是否为目录 print(os.path.isdir(\u0026#34;D:\\\\pythonProjects\\\\t2\u0026#34;)) import os import time import random str2 = os.path.abspath(os.path.join(os.getcwd(), os.pardir)) + \u0026#34;\\\\file\u0026#34; + \u0026#34;\\\\\u0026#34; + \u0026#34;_writelines.txt\u0026#34; strDir = os.path.abspath(os.path.join(os.getcwd(), os.pardir)) + \u0026#34;\\\\file\u0026#34; + \u0026#34;\\\\\u0026#34; + str(random.random()) str21 = os.path.abspath(os.path.join(os.getcwd(), os.pardir)) + \u0026#34;\\\\file\u0026#34; + \u0026#34;\\\\\u0026#34; + \u0026#34;_zzx.txt\u0026#34; str3 = os.path.dirname(str2) + \u0026#34;\\\\_v0000.text\u0026#34; os1 = open(str2, \u0026#34;w\u0026#34;) os2 = open(str21, \u0026#34;w\u0026#34;) strList = [] for x in range(0, 100): strList.append(str(time.time() * time.time()) + \u0026#39;\\n\u0026#39;) os1.writelines(strList) os1.flush() os1.close() os2.write(os.getcwd()) os2.flush() os2.close() print(str3) print(str2) # 重命名 os.rename(str2, str3) print(str21) # 删除文件 os.remove(str21) os.mkdir(strDir) print(strDir) # 删除文件夹 os.rmdir(strDir) "}),a.add({id:257,href:'/life/docs/think/not_control/',title:"失控",section:"思维",content:" 失控  "}),a.add({id:258,href:'/life/docs/databases/mysql/mysql%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/',title:"mysql存储引擎",section:"mysql学习笔记",content:"mysql存储引擎\r#\r\rMySQL 存储引擎概述\r#\r\r MySQL 5.0 支持的存储引擎包括 MyISAM、 InnoDB、 BDB、 MEMORY、 MERGE、 EXAMPLE、 NDB Cluster、ARCHIVE、CSV、BLACKHOLE、FEDERATED 等，其中 InnoDB 和 BDB 提供事务安 全表，其他存储引擎都是非事务安全表。\n  查看当前引擎 show ENGINES  MyISAM存储引擎\r#\r\r 不支持事务、也不支持外键，优势是访问速度快，对事务完整性没有 要求或者以select，insert为主的应用基本上可以用这个引擎来创建表\n  支持3种不同的存储格式，分别是：静态表；动态表；压缩表   静态表：表中的字段都是非变长字段，这样每个记录都是固定长度的，优点存储非常迅速，容易缓存，出现故障容易恢复；缺点是占用的空间通常比动态表多（因为存储时会按照列的宽度定义补足空格）ps：在取数据的时候，默认会把字段后面的空格去掉，如果不注意会把数据本身带的空格也会忽略。 动态表：记录不是固定长度的，这样存储的优点是占用的空间相对较少；缺点：频繁的更新、删除数据容易产生碎片，需要定期执行OPTIMIZE TABLE或者myisamchk-r命令来改善性能 压缩表：因为每个记录是被单独压缩的，所以只有非常小的访问开支\n  动态表：记录不是固定长度的，这样存储的优点是占用的空间相对较少；缺点：频繁的更新、删除数据容易产生碎片，需要定期执行OPTIMIZE TABLE或者myisamchk-r命令来改善性能\n  压缩表：因为每个记录是被单独压缩的，所以只有非常小的访问开支\n InnoDB存储引擎\r#\r\r nnoDB 存储表和索引有两种方式\n  使用共享表空间存储，这种方式创建的表的表结构保存在.frm 文件中，数据和索引 保存在 innodb_data_home_dir 和 innodb_data_file_path 定义的表空间中，可以是 多个文件。 使用多表空间存储，这种方式创建的表的表结构仍然保存在.frm 文件中，但是每个 表的数据和索引单独保存在.ibd 中。如果是个分区表，则每个分区对应单独的.ibd 文件，文件名是“表名+分区名” ，可以在创建分区的时候指定每个分区的数据文件 的位置，以此来将表的 IO 均匀分布在多个磁盘 多表空间的数据文件没有大小限制，不需要设置初始大小，也不需要设置文件的最大限 制、扩展大小等参数。 对于使用多表空间特性的表，可以比较方便地进行单表备份和恢复操作，但是直接复 制.ibd 文件是不行的，因为没有共享表空间的数据字典信息，直接复制的.ibd 文件和.frm 文 件恢复时是不能被正确识别的，但可以通过以下命令：  ALTER TABLE tbl_name DISCARD TABLESPACE;\rALTER TABLE tbl_name IMPORT TABLESPACE;\rMEMORY存储引擎\r#\r\r Memory存储引擎使用存在于内存中的内容来创建表。每个memory表只实际对应一个磁盘文件，格式是.frm。 memory类型的表访问非常的快，因为它的数据是放在内存中的，并且默认使用HASH索引，但是一旦服务关闭，表中的数据就会丢失掉。 MEMORY存储引擎的表可以选择使用BTREE索引或者HASH索引，两种不同类型的索引有其不同的使用范围\n  Hash索引优点： Hash 索引结构的特殊性，其检索效率非常高，索引的检索可以一次定位，不像B-Tree 索引需要从根节点到枝节点，最后才能访问到页节点这样多次的IO访问，所以 Hash 索引的查询效率要远高于 B-Tree 索引。 Hash索引缺点： 那么不精确查找呢，也很明显，因为hash算法是基于等值计算的，所以对于“like”等范围查找hash索引无效，不支持；\n  Memory类型的存储引擎主要用于哪些内容变化不频繁的代码表，或者作为统计操作的中间结果表，便于高效地对中间结果进行分析并得到最终的统计结果，。 对存储引擎为memory的表进行更新操作要谨慎，因为数据并没有实际写入到磁盘中，所以一定要对下次重新启动服务后如何获得这些修改后的数据有所考虑。\n MERGE存储引擎\r#\r\r Merge存储引擎是一组MyISAM表的组合，这些MyISAM表必须结构完全相同，merge表本身并没有数据，对merge类型的表可以进行查询，更新，删除操作，这些操作实际上是对内部的MyISAM表进行的。\n "}),a.add({id:259,href:'/life/docs/%E8%84%9A%E6%9C%AC/webpack-other-loader/',title:"webpack 其他 loader ",section:"脚本",content:"url-loader file-loader\r#\r\r package.json  { \u0026#34;name\u0026#34;: \u0026#34;demo10\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;webpack.config.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;webpack\u0026#34;, \u0026#34;dev\u0026#34;: \u0026#34;webpack-dev-server\u0026#34; }, \u0026#34;keywords\u0026#34;: [], \u0026#34;author\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;, \u0026#34;devDependencies\u0026#34;: { \u0026#34;css-loader\u0026#34;: \u0026#34;^3.0.0\u0026#34;, \u0026#34;file-loader\u0026#34;: \u0026#34;^6.2.0\u0026#34;, \u0026#34;html-webpack-plugin\u0026#34;: \u0026#34;^5.3.2\u0026#34;, \u0026#34;less\u0026#34;: \u0026#34;^4.1.1\u0026#34;, \u0026#34;less-loader\u0026#34;: \u0026#34;^10.0.1\u0026#34;, \u0026#34;style-loader\u0026#34;: \u0026#34;^3.1.0\u0026#34;, \u0026#34;url-loader\u0026#34;: \u0026#34;^2.2.0\u0026#34;, \u0026#34;webpack\u0026#34;: \u0026#34;^5.45.1\u0026#34;, \u0026#34;webpack-cli\u0026#34;: \u0026#34;^3.3.12\u0026#34;, \u0026#34;webpack-dev-server\u0026#34;: \u0026#34;^3.11.2\u0026#34; } }  webpack.config.js  const path = require(\u0026#34;path\u0026#34;); const webpack = require(\u0026#34;webpack\u0026#34;); const HtmlWebpackPlugin = require(\u0026#39;html-webpack-plugin\u0026#39;); module.exports = { entry: { \u0026#34;index\u0026#34;: \u0026#34;./src/main.js\u0026#34; }, mode: \u0026#34;development\u0026#34;, output: { path: path.resolve(__dirname, \u0026#39;dist\u0026#39;), // publicPath: \u0026#39;dist/\u0026#39; ,  assetModuleFilename: \u0026#39;images/[hash][ext][query]\u0026#39; , // filename: \u0026#39;[name].js\u0026#39;,  }, module : { rules: [ { test: /.css$/, use: [\u0026#34;style-loader\u0026#34;, \u0026#34;css-loader\u0026#34;] , }, { test: /.less$/, use: [\u0026#34;style-loader\u0026#34;, \u0026#34;css-loader\u0026#34;,\u0026#34;less-loader\u0026#34;] , }, { test: /\\.(png|jpg|gif)$/,//匹配png/jpg/gif格式图片  use: [ { loader: \u0026#39;url-loader\u0026#39;, options: { limit: 8192,//图片小于8KB时候将图片转成base64字符串，大于8KB需要使用file-loader  name: \u0026#39;[name].[hash:8].[ext]\u0026#39;//img表示文件父目录，[name]表示文件名,[hash:8]表示将hash截取8位[ext]表示后缀  } } ] } ] } , plugins: [ new HtmlWebpackPlugin({ title : \u0026#34;hot module replacement\u0026#34; }), new webpack.HotModuleReplacementPlugin() ], devServer: { contentBase: path.join(__dirname, \u0026#39;dist\u0026#39;), compress: true, port: 9000, hot:true } }  目录  ▸\\demo10\r▸ \\demo10\\dist\r▸ \\demo10\\dist\\beautifulGirl.ee61b496.jpg\r▸ \\demo10\\dist\\big.95b47a61.jpg\r▸ \\demo10\\dist\\index.html\r▸ \\demo10\\dist\\index.js\r▸ \\demo10\\dist\\small.af5d0583.jpg\r▸ \\demo10\\package.json\r▸ \\demo10\\src\r▸ \\demo10\\src\\css\r▸ \\demo10\\src\\css\\normal.css\r▸ \\demo10\\src\\css\\special.less\r▸ \\demo10\\src\\img\r▸ \\demo10\\src\\img\\beautifulGirl.jpg\r▸ \\demo10\\src\\img\\big.jpg\r▸ \\demo10\\src\\img\\small.jpg\r▸ \\demo10\\src\\js\r▸ \\demo10\\src\\js\\utils.js\r▸ \\demo10\\src\\main.js\r▸ \\demo10\\webpack.config.js\r 命令  D:\\IdeaProjects\\cycle\\study\\webpack\\demo10\u0026gt;npm init -y\rWrote to D:\\IdeaProjects\\cycle\\study\\webpack\\demo10\\package.json:\r{\r\u0026quot;name\u0026quot;: \u0026quot;demo10\u0026quot;,\r\u0026quot;version\u0026quot;: \u0026quot;1.0.0\u0026quot;,\r\u0026quot;description\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;main\u0026quot;: \u0026quot;webpack.config.js\u0026quot;,\r\u0026quot;scripts\u0026quot;: {\r\u0026quot;test\u0026quot;: \u0026quot;echo \\\u0026quot;Error: no test specified\\\u0026quot; \u0026amp;\u0026amp; exit 1\u0026quot;\r},\r\u0026quot;keywords\u0026quot;: [],\r\u0026quot;author\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;license\u0026quot;: \u0026quot;ISC\u0026quot;\r}\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo10\u0026gt;npm add -D webpack webpack-cli@3.3.12\rnpm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated\rnpm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated\rnpm notice created a lockfile as package-lock.json. You should commit this file.\rnpm WARN webpack-cli@3.3.12 requires a peer of webpack@4.x.x but none is installed. You must install peer dependencies yourself.\rnpm WARN demo10@1.0.0 No description\rnpm WARN demo10@1.0.0 No repository field.\r+ webpack@5.45.1\r+ webpack-cli@3.3.12\radded 259 packages from 205 contributors in 10.071s\r11 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo10\u0026gt;npm add -D webpack webpack-cli\rnpm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated\rnpm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated\rnpm WARN webpack-cli@3.3.12 requires a peer of webpack@4.x.x but none is installed. You must install peer dependencies yourself.\rnpm WARN demo10@1.0.0 No description\rnpm WARN demo10@1.0.0 No repository field.\r+ webpack-cli@3.3.12\r+ webpack@5.45.1\rupdated 2 packages in 6.122s\r1 package is looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo10\u0026gt;npm add -D css-loader style-loader less-loader\rnpm WARN webpack-cli@3.3.12 requires a peer of webpack@4.x.x but none is installed. You must install peer dependencies yourself.\rnpm WARN less-loader@10.0.1 requires a peer of less@^3.5.0 || ^4.0.0 but none is installed. You must install peer dependencies yourself.\rnpm WARN demo10@1.0.0 No description\rnpm WARN demo10@1.0.0 No repository field.\r+ less-loader@10.0.1\r+ css-loader@6.1.0\r+ style-loader@3.1.0\radded 18 packages from 49 contributors in 2.728s\r15 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo10\u0026gt;npm add -D file-loader\rnpm WARN less-loader@10.0.1 requires a peer of less@^3.5.0 || ^4.0.0 but none is installed. You must install peer dependencies yourself.\rnpm WARN webpack-cli@3.3.12 requires a peer of webpack@4.x.x but none is installed. You must install peer dependencies yourself.\rnpm WARN demo10@1.0.0 No description\rnpm WARN demo10@1.0.0 No repository field.\r+ file-loader@6.2.0\radded 3 packages from 5 contributors in 2.354s\r16 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo10\u0026gt;npm add -D html-webpack-plugin\rnpm WARN less-loader@10.0.1 requires a peer of less@^3.5.0 || ^4.0.0 but none is installed. You must install peer dependencies yourself.\rnpm WARN webpack-cli@3.3.12 requires a peer of webpack@4.x.x but none is installed. You must install peer dependencies yourself.\rnpm WARN demo10@1.0.0 No description\rnpm WARN demo10@1.0.0 No repository field.\r+ html-webpack-plugin@5.3.2\radded 33 packages from 19 contributors in 3.392s\r26 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo10\u0026gt;npm add -D webpack-dev-server\rnpm WARN deprecated chokidar@2.1.8: Chokidar 2 will break on node v14+. Upgrade to chokidar 3 with 15x less dependencies.\rnpm WARN deprecated fsevents@1.2.13: fsevents 1 will break on node v14+ and could be using insecure binaries. Upgrade to fsevents 2.\rnpm WARN deprecated querystring@0.2.0: The\rnpm WARN less-loader@10.0.1 requires a peer of less@^3.5.0 || ^4.0.0 but none is installed. You must install peer dependencies yourself.\rnpm WARN webpack-cli@3.3.12 requires a peer of webpack@4.x.x but none is installed. You must install peer dependencies yourself.\rnpm WARN demo10@1.0.0 No description\rnpm WARN demo10@1.0.0 No repository field.\rnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\\fsevents):\rnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\u0026quot;os\u0026quot;:\u0026quot;darwin\u0026quot;,\u0026quot;arch\u0026quot;:\u0026quot;any\u0026quot;} (current: {\u0026quot;os\u0026quot;:\u0026quot;win32\u0026quot;,\u0026quot;arch\u0026quot;:\u0026quot;x64\u0026quot;})\r+ webpack-dev-server@3.11.2\radded 204 packages from 137 contributors in 13.658s\r38 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo10\u0026gt;npm i --save-dev\rnpm WARN less-loader@10.0.1 requires a peer of less@^3.5.0 || ^4.0.0 but none is installed. You must install peer dependencies yourself.\rnpm WARN webpack-cli@3.3.12 requires a peer of webpack@4.x.x but none is installed. You must install peer dependencies yourself.\rnpm WARN demo10@1.0.0 No description\rnpm WARN demo10@1.0.0 No repository field.\rnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\\fsevents):\rnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\u0026quot;os\u0026quot;:\u0026quot;darwin\u0026quot;,\u0026quot;arch\u0026quot;:\u0026quot;any\u0026quot;} (current: {\u0026quot;os\u0026quot;:\u0026quot;win32\u0026quot;,\u0026quot;arch\u0026quot;:\u0026quot;x64\u0026quot;})\rup to date in 1.955s\r38 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo10\u0026gt;npm add -D url-loader@2.2.0\rnpm WARN less-loader@10.0.1 requires a peer of less@^3.5.0 || ^4.0.0 but none is installed. You must install peer dependencies yourself.\rnpm WARN webpack-cli@3.3.12 requires a peer of webpack@4.x.x but none is installed. You must install peer dependencies yourself.\rnpm WARN url-loader@2.2.0 requires a peer of webpack@^4.0.0 but none is installed. You must install peer dependencies yourself.\rnpm WARN demo10@1.0.0 No description\rnpm WARN demo10@1.0.0 No repository field.\rnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\\fsevents):\rnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\u0026quot;os\u0026quot;:\u0026quot;darwin\u0026quot;,\u0026quot;arch\u0026quot;:\u0026quot;any\u0026quot;} (current: {\u0026quot;os\u0026quot;:\u0026quot;win32\u0026quot;,\u0026quot;arch\u0026quot;:\u0026quot;x64\u0026quot;})\r+ url-loader@2.2.0\radded 3 packages from 3 contributors in 2.921s\r39 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo10\u0026gt;npm add -D less\rnpm WARN url-loader@2.2.0 requires a peer of webpack@^4.0.0 but none is installed. You must install peer dependencies yourself.\rnpm WARN webpack-cli@3.3.12 requires a peer of webpack@4.x.x but none is installed. You must install peer dependencies yourself.\rnpm WARN demo10@1.0.0 No description\rnpm WARN demo10@1.0.0 No repository field.\rnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\\fsevents):\rnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\u0026quot;os\u0026quot;:\u0026quot;darwin\u0026quot;,\u0026quot;arch\u0026quot;:\u0026quot;any\u0026quot;} (current: {\u0026quot;os\u0026quot;:\u0026quot;win32\u0026quot;,\u0026quot;arch\u0026quot;:\u0026quot;x64\u0026quot;})\r+ less@4.1.1\radded 11 packages from 13 contributors in 3.771s\r39 packages are looking for funding\rrun `npm fund` for details\r//\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo10\u0026gt;npm add -D css-loader@3.0.0\rnpm WARN url-loader@2.2.0 requires a peer of webpack@^4.0.0 but none is installed. You must install peer dependencies yourself.\rnpm WARN webpack-cli@3.3.12 requires a peer of webpack@4.x.x but none is installed. You must install peer dependencies yourself.\rnpm WARN css-loader@3.0.0 requires a peer of webpack@^4.0.0 but none is installed. You must install peer dependencies yourself.\rnpm WARN demo10@1.0.0 No description\rnpm WARN demo10@1.0.0 No repository field.\rnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\\fsevents):\rnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\u0026quot;os\u0026quot;:\u0026quot;darwin\u0026quot;,\u0026quot;arch\u0026quot;:\u0026quot;any\u0026quot;} (current: {\u0026quot;os\u0026quot;:\u0026quot;win32\u0026quot;,\u0026quot;arch\u0026quot;:\u0026quot;x64\u0026quot;})\r+ css-loader@3.0.0\radded 13 packages from 10 contributors and removed 35 packages in 3.166s\r38 packages are looking for funding\rrun `npm fund` for details\rD:\\IdeaProjects\\cycle\\study\\webpack\\demo10\u0026gt;npm run build\r\u0026gt; demo10@1.0.0 build D:\\IdeaProjects\\cycle\\study\\webpack\\demo10\r\u0026gt; webpack\rassets by status 160 KiB [cached] 2 assets\rassets by path . 82.9 KiB\rasset index.js 82.7 KiB [emitted] (name: index)\rasset index.html 243 bytes [compared for emit]\rruntime modules 26.6 KiB 12 modules\rcacheable modules 20.8 KiB\rmodules by path ./src/ 12.6 KiB\rmodules by path ./src/css/ 5.44 KiB\rmodules by path ./src/css/*.css 2.85 KiB 2 modules\rmodules by path ./src/css/*.less 2.59 KiB 2 modules\rmodules by path ./src/img/*.jpg 6.43 KiB 3 modules\r./src/main.js 517 bytes [built] [code generated]\r./src/js/utils.js 257 bytes [built] [code generated]\rmodules by path ./node_modules/ 8.13 KiB\rmodules by path ./node_modules/style-loader/dist/runtime/*.js 5.02 KiB 6 modules\rmodules by path ./node_modules/css-loader/dist/runtime/*.js 3.11 KiB\r./node_modules/css-loader/dist/runtime/api.js 2.61 KiB [built] [code generated]\r./node_modules/css-loader/dist/runtime/getUrl.js 511 bytes [built] [code generated]\rwebpack 5.45.1 compiled successfully in 437 ms\r 重要文件内容  css/normal.css\rbody{\r/* background-color: red; */\rbackground: url(\u0026quot;../img/small.jpg\u0026quot;);\r/*background: url(\u0026quot;../img/big.jpg\u0026quot;);*/\r}\rbody {background-image:url(../img/big.jpg);}\rcss/special.less\r@fontSize:50px;//定义变量字体大小\r@fontColor:orange;//定义变量字体颜色\rbody{\rfont-size: @fontSize;\rcolor: @fontColor;\r}\rjs/utils.js\rexport default function randomString(e) {\re = e || 32;\rvar t = \u0026quot;ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678\u0026quot;,\ra = t.length,\rn = \u0026quot;\u0026quot;;\rfor (i = 0; i \u0026lt; e; i++) n += t.charAt(Math.floor(Math.random() * a));\rreturn n;\r}\rmain.js\rimport img from './img/beautifulGirl.jpg';\rimport utils from './js/utils';\r//依赖css文件\rrequire('./css/normal.css');\r//依赖less文件\rrequire('./css/special.less');\r// console.log(\u0026quot;---\u0026quot; + utils.randomString(22) + \u0026quot;----\u0026quot;);\rconst el = document.createElement(\u0026quot;div\u0026quot;) ;\r// el.innerText = utils.randomString(20) ;\rel.innerText = \u0026quot;sdhsdhhds\u0026quot; ;\rdocument.body.append(el) ;\rconst elimg = document.createElement(\u0026quot;img\u0026quot;) ;\rdocument.body.append(elimg) ;\relimg.setAttribute(\u0026quot;src\u0026quot;,img) ;\rimg/beautifulGirl.jpg big.jpg small.jpg\r"}),a.add({id:260,href:'/life/docs/python/base/list/',title:"python list",section:"python 基础学习",content:" 所谓序列，指的是一块可存放多个值的连续内存空间，这些值按一定顺序排列，可通过每个值所在位置的编号（称为索引）访问它们\n 创建\r#\r\r# 定义一个列表 aList = [] 添加新的元素 append , insert ,extend\r#\r\r# 定义一个列表 aList = [] aList.append(\u0026#34;a\u0026#34;) aList.insert(len(aList),\u0026#34;insert\u0026#34;) print(aList) list1 = [\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34; , \u0026#34;c\u0026#34;] list2 = [1, 2, 3] list1.extend(list2) print(list1) 遍历列表\r#\r\raList = [2,4,5] for x in aList: print(x) 索引问题\r#\r\r# 第一项的索引为 0 # 末尾索引为 -1 # 倒数第二索引为 -2 针对 删除 del 和访问 ,以及insert都有效 检查元素是否存在\r#\r\raList = [2,4,5] if 1 in aList: print(\u0026#39;1存在\u0026#39;) else: print(\u0026#39;1不存在\u0026#39;) 删除元素\r#\r\raList = [] aList.append(\u0026#34;a\u0026#34;) aList.insert(len(aList),\u0026#34;insert\u0026#34;) del aList[-1] print(aList) thislist = [\u0026#34;apple\u0026#34;, \u0026#34;banana\u0026#34;, \u0026#34;cherry\u0026#34;] thislist.remove(\u0026#34;banana\u0026#34;) print(thislist) 合并列表\r#\r\rlista = [1,2] listb = [3,4,2] list3 = lista + listb print(list3) 清空列表 clear\r#\r\rlista = [3, 4] print(lista) lista.clear() print(lista) 修改列表\r#\r\rlista = [3, 4] print(lista) lista[-1] = 0 print(lista) 构造函数 list() 构造函数创建一个新列表 不会影响原来列表\r#\r\rlista = [1, 2] print(lista) listc = list(lista) print(listc) 复制列表 copy 不会影响原来列表\r#\r\rlista = [3, 2] print(lista) listc = lista.copy() print(listc) 颠倒列表的顺序 reverse\r#\r\rlista = [3, 2] print(lista) lista.reverse() print(lista) 返回具有指定值的元素数量 count\r#\r\rlista = [3, 2,\u0026#39;b\u0026#39;,\u0026#39;b\u0026#39;] print(lista.count(\u0026#39;b\u0026#39;)) 返回指定值首次出现的位置 index\r#\r\rlista = [3, \u0026#39;a\u0026#39;,\u0026#39;b\u0026#39;,\u0026#39;b\u0026#39;] print(lista.index(\u0026#39;a\u0026#39;)) 删除指定位置的元素 pop\r#\r\rfruits = [\u0026#39;apple\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;cherry\u0026#39;] fruits.pop(1) print(fruits) 删除具有指定值的项目 remove\r#\r\rfruits = [\u0026#39;apple\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;cherry\u0026#39;] fruits.remove(\u0026#39;banana\u0026#39;) print(fruits) 切片\r#\r\r使用模式: [start:end:step]\r其中start表示切片开始的位置,默认是0\rend表示切片截止的位置(不包含),默认是列表长度\rstep表示切片的步长,默认是1\r当start是0时,可以省略;当end是列表的长度时,可以省略.\r当step是1时,也可以省略,并且省略步长时可以同时省略最后一个冒号.\r此外,当step为负数时,表示反向切片,这时start值应该比end值大.\r注意:切片操作创建了一个新的列表.\rfruits = [\u0026#39;apple\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;cherry\u0026#39;, \u0026#34;西红柿tomato\u0026#34;, \u0026#34;菠萝pineapple\u0026#34;, \u0026#34;西瓜watermelon\u0026#34;, \u0026#34;香蕉banana\u0026#34;, \u0026#34;柚子shaddock（pomelo）\u0026#34;, \u0026#34;橙子orange\u0026#34;, \u0026#34;苹果apple\u0026#34;, \u0026#34;柠檬lemon\u0026#34;, \u0026#34;樱桃cherry\u0026#34;, \u0026#34;桃子peach\u0026#34;, \u0026#34;梨pear\u0026#34;, \u0026#34;枣Chinese date（去核枣pitted date）\u0026#34;, \u0026#34;椰子coconut\u0026#34;, \u0026#34;草莓strawberry\u0026#34;, \u0026#34;树莓raspberry\u0026#34;, \u0026#34;蓝莓blueberry\u0026#34;, \u0026#34;黑莓blackberry\u0026#34;, \u0026#34;葡萄grape\u0026#34;, \u0026#34;甘蔗sugar cane\u0026#34;, \u0026#34;芒果mango\u0026#34;, \u0026#34;木瓜pawpaw或者papaya\u0026#34;, \u0026#34;杏子apricot\u0026#34;, \u0026#34;油桃nectarine\u0026#34;, \u0026#34;柿子persimmon\u0026#34;, \u0026#34;石榴pomegranate\u0026#34;, \u0026#34;榴莲jackfruit\u0026#34;, \u0026#34;槟榔果areca nut\u0026#34;, \u0026#34;西班牙产苦橙bitter orange\u0026#34;, \u0026#34;猕猴桃kiwi fruit or Chinese gooseberry\u0026#34;, \u0026#34;金橘cumquat\u0026#34;, \u0026#34;蟠桃flat peach\u0026#34;, \u0026#34;荔枝litchi\u0026#34;, \u0026#34;青梅greengage\u0026#34;, \u0026#34;山楂果haw\u0026#34;, \u0026#34;水蜜桃honey peach\u0026#34;, \u0026#34;香瓜、甜瓜musk melon\u0026#34;, \u0026#34;李子plum\u0026#34;, \u0026#34;杨梅waxberry red bayberry\u0026#34;, \u0026#34;桂圆longan\u0026#34;, \u0026#34;沙果crab apple\u0026#34;, \u0026#34;杨桃starfruit\u0026#34;, \u0026#34;枇杷loquat\u0026#34;, \u0026#34;柑橘tangerine\u0026#34;, \u0026#34;莲雾wax-apple\u0026#34;, \u0026#34;番石榴 guava肉、蔬菜类\u0026#34;] print(fruits.copy()[::]) # 返回包含原列表所有元素的新列表 print() print(fruits.copy()[::-1]) # 返回原列表的一个逆序列表 print() print(fruits.copy()[::2]) # 取列表下标偶数位元素 print() print(fruits.copy()[1::2]) # 取列表下标奇数位元素 print(fruits.copy()[0:2]) # 取列表下标0-2的元素 print(fruits.copy()[-4:-1]) # 取列表下标倒数第四到倒数第一的元素 "}),a.add({id:261,href:'/life/docs/databases/mysql/mysql_procedure/',title:"mysql存储过程",section:"mysql学习笔记",content:"MySQL mysql存储过程概述\r#\r\r 存储过程是存储在数据库的一组SQL语句集，用户可以通过存储过程名和传参多次调用的程序模块。\n 特点：\r#\r\r 使用灵活，可以使用流控制语句，自定义变量等完成复杂的业务逻辑。 提高数据安全性，屏蔽应用程序直接对表的操作，易于进行审计。 减少网络传输。 提高代码维护的复杂度，实际使用中要评估场景是否适合。  存储过程-基本语法： (非常重要)\r#\r\rCREATE\r[DEFINER = { user | CURRENT_USER }]\rPROCEDURE sp_name ([proc_parameter[,...]])\r[characteristic ...] routine_body\rproc_parameter:\r[ IN | OUT | INOUT ] param_name type\rtype:\rAny valid MySQL data type\rcharacteristic:\rCOMMENT 'string'\r| [NOT] DETERMINISTIC\rroutine_body:\rValid SQL routine statement\r-- $ 可以改为分号 假如你直接是在控制台那么建议用$\rdelimiter $ --将sql语句结束符号修改为$,这样只有sql遇到$时才开始执行\rcreate procedure 存储过程名(参数列表)\rbegin\rsql语句集合\rend$\rdelimiter ; --将结束符修改为默认的分号 例子\r#\r\r-- 创建一个表 CREATE TABLE `t_user` ( `USER_ID` int NOT NULL AUTO_INCREMENT, `USER_NAME` char(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, `USER_PASSWORD` char(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, `USER_EMAIL` char(80) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, PRIMARY KEY (`USER_ID`), KEY `IDX_NAME` (`USER_NAME`) ) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8; -- 插入2000条数据  DROP PROCEDURE IF EXISTS proc_initData;--如果存在此存储过程则删掉 DELIMITER $ CREATE PROCEDURE proc_initData() BEGIN DECLARE i INT DEFAULT 1; WHILE i\u0026lt;=2000 DO INSERT INTO t_user(USER_NAME,USER_PASSWORD,USER_EMAIL) VALUES(MD5(UUID()),MD5(UUID()), CONCAT(substring(UUID(),1,7) , \u0026#39;@\u0026#39;, substring(UUID(),4,8) ,\u0026#39;.com\u0026#39;) ); SET i = i+1; END WHILE; END $ CALL proc_initData(); -- 执行完成后 到 mysql函数中可以查到proc_initData这个函数 实际上存储过程也是一种函数  -- $ 可以用分号代替  DROP PROCEDURE IF EXISTS proc_initData;--如果存在此存储过程则删掉 DELIMITER ; CREATE PROCEDURE proc_initData() BEGIN DECLARE i INT DEFAULT 1; WHILE i\u0026lt;=3 DO INSERT INTO t_user(USER_NAME,USER_PASSWORD,USER_EMAIL) VALUES(MD5(UUID()),MD5(UUID()), CONCAT(substring(UUID(),1,7) , \u0026#39;@\u0026#39;, substring(UUID(),4,8) ,\u0026#39;.com\u0026#39;) ); SET i = i+1; END WHILE; END ; CALL proc_initData(); 查看存储结构\r#\r\rSHOW CREATE PROCEDURE proc_initData ; SHOW PROCEDURE STATUS LIKE \u0026#39;%pro%\u0026#39;; 删除存储过程\r#\r\rDrop procedure [if exists] sp_name; 例子\r#\r\rdrop procedure if exists pro_insert_user; 修改存储过程 (实际无法修改 修改的是存储特征)\r#\r\r-- ALTER PROCEDURE 存储过程名 [ 特征 ... ] Alter procedure proc_name[characteristic…]  特征指定了存储过程的特性，可能的取值有：\n  CONTAINS SQL 表示子程序包含 SQL 语句，但不包含读或写数据的语句。 NO SQL 表示子程序中不包含 SQL 语句。 READS SQL DATA 表示子程序中包含读数据的语句。 MODIFIES SQL DATA 表示子程序中包含写数据的语句。 SQL SECURITY { DEFINER |INVOKER } 指明谁有权限来执行。 DEFINER 表示只有定义者自己才能够执行。 INVOKER 表示调用者可以执行。 COMMENT \u0026lsquo;string\u0026rsquo; 表示注释信息。  例子\r#\r\r-- 创建 delimiter ; Alter procedure pro_t11(IN param1 varchar(255), IN param2 varchar(255), OUT result varchar(2000)) begin set result = concat(param1, \u0026#39;_---_\u0026#39;,param2); end; call pro_t11(uuid(), md5(uuid()), @param); select @param; -- 修改 ALTER PROCEDURE pro_t11 MODIFIES SQL DATA SQL SECURITY INVOKER; -- 结果 ALTER PROCEDURE pro_t11 MODIFIES SQL DATA SQL SECURITY INVOKER \u0026gt; OK \u0026gt; 时间: 0.077s 传递参数\r#\r\r 语法结构\n create procedure 存储过程名([in/out/inout] 参数名 参数类型)\r...\r IN : 该参数可以作为输入，也就是需要调用方传入值 , 默认 OUT: 该参数作为输出，也就是该参数可以作为返回值 INOUT: 既可以作为输入参数，也可以作为输出参数  IN\r#\r\r in类型传参示例：对于之前创建的查看db1数据库中有哪些存储过程的get_project_plan_details_count，我们可以给get_project_plan_details_count一个输入参数，实现查看项目任务数量。\n --创建table CREATE TABLE `tb_project_plan_details` ( `id` int(11) NOT NULL AUTO_INCREMENT COMMENT \u0026#39;id\u0026#39;, `project_work_stage_id` int(11) DEFAULT NULL COMMENT \u0026#39;工作阶段编号\u0026#39;, `plan_id` int(11) DEFAULT NULL COMMENT \u0026#39;项目计划编号\u0026#39;, `project_id` int(11) DEFAULT NULL COMMENT \u0026#39;项目编号\u0026#39;, `project_phase_id` int(11) DEFAULT NULL COMMENT \u0026#39;任务节点编号\u0026#39;, `project_phase_details_id` int(11) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;工作内容编号\u0026#39;, `project_phase_name` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;工作事项\u0026#39;, `plan_start_date` datetime DEFAULT NULL COMMENT \u0026#39;计划开始日期\u0026#39;, `plan_end_date` datetime DEFAULT NULL COMMENT \u0026#39;计划结束日期\u0026#39;, `plan_hours` decimal(18,2) DEFAULT NULL COMMENT \u0026#39;计划工时\u0026#39;, `plan_remarks` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;计划说明\u0026#39;, `execute_user_account` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;执行人\u0026#39;, `execute_department_id` int(11) DEFAULT NULL COMMENT \u0026#39;执行部门编号\u0026#39;, `bis_enable` bit(1) DEFAULT b\u0026#39;1\u0026#39; COMMENT \u0026#39;是否启用\u0026#39;, `proportion` decimal(18,2) DEFAULT \u0026#39;100.00\u0026#39; COMMENT \u0026#39;权重占比\u0026#39;, `sorting` int(11) DEFAULT \u0026#39;1\u0026#39; COMMENT \u0026#39;排序\u0026#39;, `pid` int(11) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;上级编号\u0026#39;, `first_pid` int(11) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;第一级上级，如果为第一级则为0\u0026#39;, `bis_start` bit(1) DEFAULT b\u0026#39;0\u0026#39; COMMENT \u0026#39;任务是否已开始\u0026#39;, `process_ins_id` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;流程实例编号\u0026#39;, `task_submit_time` datetime DEFAULT NULL COMMENT \u0026#39;最终成果提交时间\u0026#39;, `task_remarks` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;工作成果描述\u0026#39;, `actual_hours` decimal(18,2) DEFAULT NULL COMMENT \u0026#39;实际工时\u0026#39;, `bis_all_submit` bit(1) DEFAULT b\u0026#39;0\u0026#39; COMMENT \u0026#39;是否整体提交\u0026#39;, `bis_again_submit` bit(1) DEFAULT b\u0026#39;0\u0026#39; COMMENT \u0026#39;是否是多次提交\u0026#39;, `status` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT \u0026#39;running\u0026#39; COMMENT \u0026#39;流程状态\u0026#39;, `bis_partake` bit(1) DEFAULT b\u0026#39;1\u0026#39; COMMENT \u0026#39;是否参与\u0026#39;, `return_details_id` int(11) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;退回前任务编号\u0026#39;, `return_process_ins_id` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;退回流程实例编号\u0026#39;, `bis_new` bit(1) DEFAULT b\u0026#39;1\u0026#39; COMMENT \u0026#39;是否最新任务\u0026#39;, `sign_filed` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;用户标识，无其它用途\u0026#39;, `bis_last_layer` bit(1) DEFAULT b\u0026#39;1\u0026#39; COMMENT \u0026#39;是否最后一个层级\u0026#39;, `return_details_reason` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;退回说明\u0026#39;, `creator` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;创建人\u0026#39;, `gmt_created` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT \u0026#39;创建时间\u0026#39;, `gmt_modified` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT \u0026#39;最后更新时间，记录变化后会自动更新时间戳\u0026#39;, `project_work_stage_key` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;阶段KEY\u0026#39;, `bis_finish` bit(1) DEFAULT NULL COMMENT \u0026#39;任务是否完成\u0026#39;, `task_status` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;任务状态\u0026#39;, `select_project_tree_node` json DEFAULT NULL COMMENT \u0026#39;选择的项目树任务,json\u0026#39;, `submit_count` int(11) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;提交统计(提交了多少次-任务重做了几次)\u0026#39;, `bis_supplement` bit(1) DEFAULT b\u0026#39;0\u0026#39; COMMENT \u0026#39;是否是补充任务\u0026#39;, `other_remark` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;其他说明\u0026#39;, `new_report_number` bit(1) DEFAULT b\u0026#39;0\u0026#39; COMMENT \u0026#39;如果是报告任务，是否需要重新获取文号\u0026#39;, `task_model` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;任务类型\u0026#39;, `form_code` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;表单编号\u0026#39;, `other_task_user` json DEFAULT NULL COMMENT \u0026#39;其他任务责任人\u0026#39;, `material_class_id` int(11) DEFAULT NULL COMMENT \u0026#39;资料分类\u0026#39;, `service_bean_name` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT \u0026#39;自定义服务bean名称\u0026#39;, `track_audit_class_id` int(11) DEFAULT NULL COMMENT \u0026#39;审计事项分类\u0026#39;, `simple_task` bit(1) DEFAULT b\u0026#39;0\u0026#39; COMMENT \u0026#39;是否简单任务方式填写\u0026#39;, PRIMARY KEY (`id`) USING BTREE, KEY `index_plan_id` (`plan_id`) USING BTREE, KEY `work_stage_id_index` (`project_work_stage_id`) USING BTREE, KEY `phase_id_index` (`project_phase_id`) USING BTREE, KEY `project_id_index` (`project_id`) USING BTREE, KEY `un_index` (`submit_count`,`status`,`sorting`) USING BTREE ) ENGINE=InnoDB AUTO_INCREMENT=14273 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC; --准备数据 INSERT INTO `pmcc_costs`.`tb_project_plan_details`(`id`, `project_work_stage_id`, `plan_id`, `project_id`, `project_phase_id`, `project_phase_details_id`, `project_phase_name`, `plan_start_date`, `plan_end_date`, `plan_hours`, `plan_remarks`, `execute_user_account`, `execute_department_id`, `bis_enable`, `proportion`, `sorting`, `pid`, `first_pid`, `bis_start`, `process_ins_id`, `task_submit_time`, `task_remarks`, `actual_hours`, `bis_all_submit`, `bis_again_submit`, `status`, `bis_partake`, `return_details_id`, `return_process_ins_id`, `bis_new`, `sign_filed`, `bis_last_layer`, `return_details_reason`, `creator`, `gmt_created`, `gmt_modified`, `project_work_stage_key`, `bis_finish`, `task_status`, `select_project_tree_node`, `submit_count`, `bis_supplement`, `other_remark`, `new_report_number`, `task_model`, `form_code`, `other_task_user`, `material_class_id`, `service_bean_name`, `track_audit_class_id`, `simple_task`) VALUES (50, 8, 59, 14, 13, 0, \u0026#39;收集资料\u0026#39;, \u0026#39;2018-06-20 00:00:00\u0026#39;, \u0026#39;2018-06-20 00:00:00\u0026#39;, 1.00, \u0026#39;1\u0026#39;, \u0026#39;luohong\u0026#39;, 8, b\u0026#39;1\u0026#39;, 20.00, 1, 0, 0, b\u0026#39;0\u0026#39;, \u0026#39;362948\u0026#39;, \u0026#39;2018-06-20 18:21:19\u0026#39;, \u0026#39;1\u0026#39;, 1.00, b\u0026#39;0\u0026#39;, b\u0026#39;0\u0026#39;, \u0026#39;finish\u0026#39;, b\u0026#39;1\u0026#39;, 0, NULL, b\u0026#39;1\u0026#39;, NULL, b\u0026#39;1\u0026#39;, NULL, NULL, \u0026#39;2019-10-08 16:18:28\u0026#39;, \u0026#39;2019-10-08 16:18:28\u0026#39;, NULL, NULL, NULL, NULL, 0, b\u0026#39;0\u0026#39;, NULL, b\u0026#39;0\u0026#39;, NULL, NULL, NULL, NULL, NULL, NULL, b\u0026#39;0\u0026#39;); INSERT INTO `pmcc_costs`.`tb_project_plan_details`(`id`, `project_work_stage_id`, `plan_id`, `project_id`, `project_phase_id`, `project_phase_details_id`, `project_phase_name`, `plan_start_date`, `plan_end_date`, `plan_hours`, `plan_remarks`, `execute_user_account`, `execute_department_id`, `bis_enable`, `proportion`, `sorting`, `pid`, `first_pid`, `bis_start`, `process_ins_id`, `task_submit_time`, `task_remarks`, `actual_hours`, `bis_all_submit`, `bis_again_submit`, `status`, `bis_partake`, `return_details_id`, `return_process_ins_id`, `bis_new`, `sign_filed`, `bis_last_layer`, `return_details_reason`, `creator`, `gmt_created`, `gmt_modified`, `project_work_stage_key`, `bis_finish`, `task_status`, `select_project_tree_node`, `submit_count`, `bis_supplement`, `other_remark`, `new_report_number`, `task_model`, `form_code`, `other_task_user`, `material_class_id`, `service_bean_name`, `track_audit_class_id`, `simple_task`) VALUES (54, 9, 60, 14, 19, 0, \u0026#39;招标施工图\u0026#39;, \u0026#39;2018-06-20 00:00:00\u0026#39;, \u0026#39;2018-06-20 00:00:00\u0026#39;, 1.00, \u0026#39;1\u0026#39;, \u0026#39;luohong\u0026#39;, 8, b\u0026#39;1\u0026#39;, 10.00, 5, 0, 0, b\u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;, NULL, NULL, NULL, b\u0026#39;0\u0026#39;, b\u0026#39;0\u0026#39;, \u0026#39;running\u0026#39;, b\u0026#39;1\u0026#39;, 0, NULL, b\u0026#39;1\u0026#39;, NULL, b\u0026#39;1\u0026#39;, NULL, NULL, \u0026#39;2019-10-08 16:18:28\u0026#39;, \u0026#39;2021-05-13 14:27:51\u0026#39;, NULL, NULL, NULL, NULL, 0, b\u0026#39;0\u0026#39;, NULL, b\u0026#39;0\u0026#39;, NULL, NULL, NULL, NULL, NULL, NULL, b\u0026#39;0\u0026#39;); INSERT INTO `pmcc_costs`.`tb_project_plan_details`(`id`, `project_work_stage_id`, `plan_id`, `project_id`, `project_phase_id`, `project_phase_details_id`, `project_phase_name`, `plan_start_date`, `plan_end_date`, `plan_hours`, `plan_remarks`, `execute_user_account`, `execute_department_id`, `bis_enable`, `proportion`, `sorting`, `pid`, `first_pid`, `bis_start`, `process_ins_id`, `task_submit_time`, `task_remarks`, `actual_hours`, `bis_all_submit`, `bis_again_submit`, `status`, `bis_partake`, `return_details_id`, `return_process_ins_id`, `bis_new`, `sign_filed`, `bis_last_layer`, `return_details_reason`, `creator`, `gmt_created`, `gmt_modified`, `project_work_stage_key`, `bis_finish`, `task_status`, `select_project_tree_node`, `submit_count`, `bis_supplement`, `other_remark`, `new_report_number`, `task_model`, `form_code`, `other_task_user`, `material_class_id`, `service_bean_name`, `track_audit_class_id`, `simple_task`) VALUES (58, 9, 60, 14, 20, 0, \u0026#39;施工图\u0026#39;, \u0026#39;2018-06-20 00:00:00\u0026#39;, \u0026#39;2018-06-20 00:00:00\u0026#39;, 1.00, \u0026#39;2\u0026#39;, \u0026#39;luohong\u0026#39;, 8, b\u0026#39;1\u0026#39;, 30.00, 9, 0, 0, b\u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;2018-06-21 11:25:08\u0026#39;, \u0026#39;1\u0026#39;, 1.00, b\u0026#39;0\u0026#39;, b\u0026#39;0\u0026#39;, \u0026#39;finish\u0026#39;, b\u0026#39;1\u0026#39;, 0, NULL, b\u0026#39;1\u0026#39;, NULL, b\u0026#39;1\u0026#39;, NULL, NULL, \u0026#39;2019-10-08 16:18:28\u0026#39;, \u0026#39;2019-10-08 16:18:28\u0026#39;, NULL, NULL, NULL, NULL, 0, b\u0026#39;0\u0026#39;, NULL, b\u0026#39;0\u0026#39;, NULL, NULL, NULL, NULL, NULL, NULL, b\u0026#39;0\u0026#39;); -- 开始  DROP PROCEDURE IF EXISTS get_project_plan_details_count; DELIMITER ; CREATE PROCEDURE get_project_plan_details_count( in custom_id int(20)) BEGIN SELECT count(id) as count FROM `tb_project_plan_details` where `project_id` = custom_id ; END ; CALL get_project_plan_details_count(14); OUT\r#\r\r out类型传参示例：根据传入的身高变量，获取当前身高的所属的身材类型\n DROP PROCEDURE IF EXISTS pro_t4; create procedure pro_t4(in height int , out description varchar(100)) begin if height \u0026gt;= 180 then set description=\u0026#39;高挑\u0026#39;; elseif height \u0026gt;= 170 and height \u0026lt; 180 then set description=\u0026#39;标准\u0026#39;; else set description=\u0026#39;一般\u0026#39;; end if; end; -- 调用 call pro_t4(180,@res); select @res ; -- 在变量前添加@符号的变量叫做用户会话变量，这种的作用于是整个会话过程。 INOUT\r#\r\r-- 带INOUT的存储过程  DROP PROCEDURE IF EXISTS sp_inout; DELIMITER ; CREATE PROCEDURE sp_inout(INOUT p_num INT) BEGIN SET p_num=p_num*10; END ; -- 调用并输出结果 SET @p_num=2; call sp_inout(@p_num); SELECT @p_num; 随机练习\r#\r\r-- 练习1 drop procedure if exists pro_t10 ; DELIMITER ; create procedure pro_t10(INOUT param int) begin set param = param*10; end; set @param = 2; call pro_t10(@param); select @param ; -- 练习2 drop procedure if exists pro_t11; delimiter ; create procedure pro_t11(in param1 varchar(255), in param2 varchar(255), out result varchar(2000)) begin set result = concat(param1, \u0026#39;---\u0026#39;,param2); end; call pro_t11(uuid(), md5(uuid()), @param); select @param; 存储过程体 (非常重要)\r#\r\r 存储过程体中可以使用各种sql语句和过程式语句的组合，来封装数据库应用中复杂的业务逻辑和处理规则，以实现数据库应用的灵活编程。下面主要介绍几个用于构造存储过程体的常用语法元素。\n 局部变量\r#\r\r 在存储过程体中可以声明局部变量，用来存储存储过程体中临时结果\n DECLARE var_name[,…] type [DEFAULT value] Var_name:指定局部变量的名称 Type:用于声明局部变量的数据类型 default子句:用于为局部变量指定一个默认值。若没有指定，默认为null.\r 例如 Declare cid int(10);  使用说明\r#\r\r 局部变量只能在存储过程体的begin…end语句块中声明。 局部变量必须在存储过程体的开头处声明。 局部变量的作用范围仅限于声明它的begin..end语句块，其他语句块中的语句不可以使用它。 局部变量不同于用户变量，两者区别：局部变量声明时，在其前面没有使用@符号，并且它只能在begin..end语句块中使用；而用户变量在声明时，会在其名称前面使用@符号，同时已声明的用户变量存在于整个会话之中。  例子\r#\r\rdrop procedure if exists pro_add_t1; delimiter ; create procedure pro_add_t1(in a1 int,in a2 int ,out result int ) begin declare x int default 0; set x = a1 + a2; set result = x; -- 虽然可以 result = a1 + a2 但是我们为了用上局部变量还是多走一步  end; call pro_add_t1(1,2,@result) ; select @result ; set语句\r#\r\r 使用set语句为局部变量赋值\n  Set var_name=expr Set cid=910;  例子\r#\r\rdrop procedure if exists pro_set_example_t1; delimiter ; create procedure pro_set_example_t1(in a1 int(12),in text_v1 longtext,in f_float float(12,7),in d_double double(14,6),out result longtext) begin declare spl varchar(200) default \u0026#39; \u0026#39; ; set result = concat(a1,spl,text_v1,spl,f_float,spl,d_double) ; end; call pro_set_example_t1(1,uuid(),rand(),rand(),@result) ; select @result ;  set 中 := 和 =作用一致  drop procedure if exists pro_set_example_t2; delimiter ; create procedure pro_set_example_t2(in a1 int(12),out result longtext) begin declare par1 int default 0 ; declare par2 int default 0 ; set par1 := par1 + 1 ; set par2 = par2 + 1 ; set a1 = a1 + 1; set result = CONCAT_WS(\u0026#39;-\u0026#39;, par1 , par2 , a1) ; end; call pro_set_example_t2(round(rand()*10),@result) ; select @result ;  := 特殊作用 (用变量实现行号时，必须用:=)  CREATE TABLE `temp_date` ( `id` int NOT NULL AUTO_INCREMENT, `age` float(14,2) DEFAULT NULL COMMENT \u0026#39;age\u0026#39;, `name` varchar(255) DEFAULT NULL, `birthday` date DEFAULT NULL COMMENT \u0026#39;生日\u0026#39;, `gmt_created` datetime DEFAULT CURRENT_TIMESTAMP, `gmt_modified` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT=\u0026#39;临时用户表\u0026#39;; set @param = ROUND(RAND()*100); SELECT @param as param_one , @param := @param + 1 as param_two ; -- 来看下在具体例子中的妙处吧 -- (SELECT @rownum := 0) new_table 表示派生出来了一个新的临时表 SELECT * FROM temp_date , (SELECT @rownum := 0) new_table ; -- 然后在赋值上去 SELECT * ,( @rownum := @rownum + 1)as rownum FROM temp_date , (SELECT @rownum := 0) new_table ; 流程控制语句\r#\r\r(1)条件判断语句\r#\r\r If语句  If search_condition then statement_list [elseif search_condition then statement_list]… [else statement_list] End if -- 参考\rif 满足条件 then\r执行语句\relseif 满足条件 then\r执行语句\relse 执行语句\rend if;\r例子\r#\r\rdrop procedure if exists pro_if_example_t ; delimiter ; create procedure pro_if_example_t(in input double,inout text_value longtext) begin declare remark_ varchar(200) default \u0026#39;学生\u0026#39; ; if input \u0026gt;= 90 then set text_value = concat(\u0026#39;a+\u0026#39; ,remark_) ; elseif input\u0026lt;90 and input \u0026gt;= 80 then set text_value = concat(\u0026#39;a\u0026#39; ,remark_) ; elseif input\u0026lt;80 and input \u0026gt;= 70 then set text_value = concat(\u0026#39;a-\u0026#39; ,remark_) ; elseif input \u0026gt;= 60 and input \u0026lt; 70 then set text_value = concat(\u0026#39;b+\u0026#39; ,remark_) ; else set text_value = concat(\u0026#39;c\u0026#39; ,remark_) ; end if; end; set @input = 100*rand(); call pro_if_example_t(@input,@result) ; select @result ; -- 不能字符串和数字相加 如 \u0026#39;b+\u0026#39; + remark_ 可以考虑 concat(\u0026#39;b+\u0026#39; ,remark_) (2)循环语句\r#\r\r While语句、repeat语句和loop语句。\n while\r#\r\r[begin_label:] while search_condition do Statement_list End while [end_label]\rwhile 满足的条件 do\r执行sql语句\rend while;\r例子\r#\r\rdrop procedure if exists pro_example_while_t; delimiter ; create procedure pro_example_while_t(in len int,out result longtext) begin declare i int default 0; declare v_text longtext default \u0026#39;\u0026#39; ; while i \u0026lt;= len do set v_text = concat(v_text,\u0026#39;,\u0026#39;,i) , i = i+1; end while ; set result = v_text ; end ; call pro_example_while_t(200,@result) ; select @result ; -- 其他 drop procedure if exists pro_example_while_t3; delimiter ; create procedure pro_example_while_t3(in len int,out result int) begin declare total int default 0; declare i int default 0; while i \u0026lt; len do set i = i +1; set total = total + i ; end while ; set result = total ; end; call pro_example_while_t3(100,@result) ; select @result ; repeat结构\r#\r\rrepeat\r执行sql语句\runtil 不满的条件\rend repeat;\r例子\r#\r\rdrop procedure if exists pro_example_repeat_t; delimiter ; create procedure pro_example_repeat_t(in len_value int,out result_value longtext) begin declare i int default 0; declare v_text longtext default \u0026#39;\u0026#39; ; repeat set i = i +1; set v_text = concat( v_text,i,\u0026#39;-\u0026#39;) ; until i \u0026gt;= len_value end repeat; set result_value = v_text ; end ; call pro_example_repeat_t(200,@result) ; select @result; loop和leave语句\r#\r\r[loop标签名:] loop\r执行sql语句(sql语句中应该包括，退出循环的命令：leave loop标签名;如果没有将会造成死循环)\rend loop [loop标签名];\r例子\r#\r\rdrop procedure if exists pro_loop_example_t; delimiter ; create procedure pro_loop_example_t(in len_value int, inout result int) begin declare i int default 0; declare total int default 0; label_loop:loop if i \u0026gt;= len_value then leave label_loop; end if; set i = i + 1; set total = total + i; end loop label_loop; set result = total; end; call pro_loop_example_t(100,@result) ; select @result; (3)Case 语句\r#\r\rcase when 条件 then\r执行sql语句\rwhen 条件 then\r执行sql语句\r...\relse\r执行sql语句\rend case;\rdrop procedure if exists pro_case_example_t2; delimiter ; create procedure pro_case_example_t2(in number_value double, out result longtext) begin declare temp_value longtext; case when number_value \u0026gt;= 90 then set temp_value = \u0026#39;非常优秀\u0026#39;; when number_value \u0026lt; 90 and number_value \u0026gt;= 80 then set temp_value = \u0026#39;优秀\u0026#39;; when number_value \u0026lt; 80 and number_value \u0026gt;= 70 then set temp_value = \u0026#39;良\u0026#39;; when number_value \u0026lt; 70 and number_value \u0026gt;= 60 then set temp_value = \u0026#39;及格\u0026#39;; when number_value \u0026lt; 60 then set temp_value = \u0026#39;未及格\u0026#39;; end case; set result = temp_value; end; set @input = rand() * 100 + rand() * 100; call pro_case_example_t2(@input, @result); select @result; select … into 语句 (通过select … into 方式进行赋值操作)\r#\r\r 把选定列的值直接存储到局部变量中，语法格式\n  说明:存储过程体中的select…into语句返回的结果集只能有一行数据。\n Select col_name[,…] into var_name[,…] table_expr Col_name:用于指定列名 Var_name:用于指定要赋值的变量名 Table_expr:表示select语句中的from字句及后面的语法部分  例子1  drop procedure if exists pro_select_into_example_t2; delimiter ; create procedure pro_select_into_example_t2(out result longtext) begin declare name_value longtext; declare password_value longtext; select USER_NAME , USER_PASSWORD into name_value , password_value from `t_user` where USER_ID=\u0026#39;2019\u0026#39;; set result = concat(name_value,\u0026#39;-\u0026#39;,password_value); end; call pro_select_into_example_t2( @result); select @result;  例子2  DROP PROCEDURE IF EXISTS pro_set_example_ty; delimiter ; CREATE PROCEDURE pro_set_example_ty ( INOUT result VARCHAR ( 255 ) ) BEGIN DECLARE	c1 DOUBLE DEFAULT 0; DECLARE	c2 DOUBLE DEFAULT 0; -- INTO函数不一定需要from字句及后面的语法部分 	SELECT	round( rand( ) * 10 ),	round( rand( ) * 10 ) INTO c1,	c2; SET result = CONCAT_WS( \u0026#39;-\u0026#39;, c1, c2 ); END; SET @result = \u0026#39;\u0026#39;; CALL pro_set_example_ty ( @result ); SELECT @result; 定义处理程序\r#\r\r 是事先定义程序执行过程中可能遇到的问题。并且可以在处理程序中定义解决这些问题的办法。这种方式可以提前预测可能出现的问题，并提出解决方法\n DECLARE handler_type HANDLER FOR condition_value[,…] sp_statement handler_type:CONTINUE | EXIT | UNDO Condition_value:Sqlwarning | not found | sqlexception\r handler_type(自定义程序类型)   为错误处理方式，参数取值有三个\n  CONTINUE continue 表示遇到错误不处理，继续执行 EXIT 退出 UNDO 撤销   表示遇到错误后，撤销之前的操作，MysqL中，暂时不支持这样的操作\n   Condition_value\n  例子一 违反完整性约束 SQLSTATE \u0026lsquo;23000\u0026rsquo;\n  -- 先创建一个表 drop table if EXISTS t_table_x ; CREATE TABLE t_table_x (s1 int,primary key (s1)); -- 定义第一个存储过程 没有任何错误的 (SET @x2 = 1)表示发生了错误就把 @x2 = 1 drop procedure if exists pro_handler_example_t1; delimiter ; CREATE PROCEDURE pro_handler_example_t1() BEGIN DECLARE CONTINUE HANDLER FOR SQLSTATE \u0026#39;23000\u0026#39; SET @x2 = 1; SET @x = 1; INSERT INTO t_table_x VALUES (10); SET @x = 2; INSERT INTO t_table_x VALUES (20); SET @x = 3; END; call pro_handler_example_t1() ; SELECT @x; -- @x = 3 -- 表数据 10 20 -- SELECT @x2 = 1;  -- 定义第二个存储过程 第三条语句违反约束 drop procedure if exists pro_handler_example_t2; delimiter ; CREATE PROCEDURE pro_handler_example_t2() BEGIN DECLARE CONTINUE HANDLER FOR SQLSTATE \u0026#39;23000\u0026#39; SET @x2 = 1; SET @x = 1; INSERT INTO t_table_x VALUES (10); SET @x = 2; INSERT INTO t_table_x VALUES (20); SET @x = 3; INSERT INTO t_table_x VALUES (20); SET @x = 4; END; call pro_handler_example_t2() ; SELECT @x; -- @x = 4 -- 表数据 10 20 -- 可以看到一共插入了三条语句 由于其中一条违反了约束只有两条语句,但是SET @x = 4依然被执行了是为什么呢，就是因为handler_type=CONTINUE(表示遇到错误不处理，继续执行) -- 我们对上面的handler_type定义的值作改动 改为 EXIT 定义是退出 那么实际结果如何呢  -- 定义第三个存储过程 drop procedure if exists pro_handler_example_t3; delimiter ; CREATE PROCEDURE pro_handler_example_t3() BEGIN DECLARE EXIT HANDLER FOR SQLSTATE \u0026#39;23000\u0026#39; SET @x2 = 1; SET @x = 1; INSERT INTO t_table_x VALUES (10); SET @x = 2; INSERT INTO t_table_x VALUES (20); SET @x = 3; INSERT INTO t_table_x VALUES (20); SET @x = 4; END; call pro_handler_example_t3() ; SELECT @x; -- @x = 3 -- 表数据 10 20 -- 可以看到 SET @x = 4; 正如预期的那样没有执行这正是handler_type=EXIT 的作用 在发生错误的时候就退出了 -- 最后我们把 handler_type=EXIT 改为 handler_type=UNDO 虽然mysql不支持但是还是把它写一下 drop procedure if exists pro_handler_example_t4; delimiter ; CREATE PROCEDURE pro_handler_example_t4() BEGIN DECLARE UNDO HANDLER FOR SQLSTATE \u0026#39;23000\u0026#39; SET @x2 = 1; SET @x = 1; INSERT INTO t_table_x VALUES (10); SET @x = 2; INSERT INTO t_table_x VALUES (20); SET @x = 3; INSERT INTO t_table_x VALUES (20); SET @x = 4; END; -- 就不执行了 因为mysql不支持嘛 理论上 @x=\u0026#39;\u0026#39; 并且t_table_x没有这其中插入的任意数据  例子二 NOTFOUND条件用于游标(这个经常用)  -- 我们使用游标 并且结合mysql临时表的语法作一个遍历查询  drop procedure if exists pro_handler_example_cursor_not_found; delimiter ; CREATE PROCEDURE pro_handler_example_cursor_not_found() begin declare id_value int default 0; declare password_value varchar(100) default \u0026#39;\u0026#39;; declare name_value varchar(100) default \u0026#39;\u0026#39;; -- 定义 游标结束的变量 declare v_finished INTEGER DEFAULT 0; -- 定义游标结束后到底该咋办 必须在游标定义语句的下一行 declare get_user_data_list_cursor cursor for select USER_NAME, USER_PASSWORD,USER_ID from `t_user`; declare continue handler for not found set v_finished = 1; -- 定义一个临时表 (临时表只在会话中或者会话结束以后mysql自动删除)  DROP TEMPORARY TABLE if exists t_user_temp_print; CREATE TEMPORARY TABLE t_user_temp_print( id INT , name varchar(100), password varchar(100) ); -- 打开光标  open get_user_data_list_cursor; while v_finished != 1 do FETCH get_user_data_list_cursor into name_value, password_value , id_value; INSERT INTO t_user_temp_print(`id`,`name`,`password`) values(id_value,name_value,password_value) ; end while ; -- 关闭光标  close get_user_data_list_cursor; -- 打印数据 	select * from t_user_temp_print; -- 删除临时表 	DROP TABLE t_user_temp_print ; end; call pro_handler_example_cursor_not_found(); id name password 9	8d80af597433177f201f86f1fe0f9d9d	64a3680910b95bc6361b560fc5e07970 10	d0e1cc42e2774e52cce412e9f5027491	ea346e9806c5f80b2a2eda551b45827b 11	88693fb73cab1f860ccfaf80de83e204	a624aa6c82faa32379892106b6daa249 12	6d47c9fffc66612fbc057201a4d910bd	1e34c1122675a45e525a1ab1b6348ca2 13	418f57775bfcdb3e0687e6c423e57d05	0a7089f91c7ab7850df0802e5ca3bc12 14	ea0f6876c57dcc3f82a36208a97afea6	b6a8591804f06e9bd99fb2114cb50861 15	3d0a07879b2e826e0b29d8ced8e92b4c	875e61c2fe9025fa30326bad73e070ca 16	877b734119235886088a5124a7fe8ddf	c293b45da05a29a3e9204625831977c5 17	f3f3c624bb418b63bdc3f580dd5039b0	860514262f38d33545d6c8301d5921b2 18	bffcad8fdfd4a95d2062d6e83098186d	2fff3c910cca03887ab6b26ee2b76cf3 19	2f1e409ea4569648270507e424a09621	78ffe25a4e2ef08605f2c25a2392f611 20	2f87b8d6988cd55c4361768735955861	e4dd44e0bf104610f915c26854f0e6f2 21	94879aadb598a19ab612b97fa0f0c769	92912589c3a3ddb4457ccc5f183df822 22	69cbf1919065ce7a04f0cb486d7a0320	03bed78d5031fd536f0af3a6f0e3cc1f 23	b77b1800acc41f27d8158c05c53ca743	fb1001ca32eea35a0a561416e9bd1996 24	57dab3aacd9776d067f7f42f1adf92d3	ddc141fef43e5d6f87659fdc5455333c 25	1208d1d73683c335a8e601f6eef5a5b4	c45e0d126705c9f83c35ed218e1b9a4e 26	fe85827612e43eee230250d8f94f12ac	301a625913e87498b656836118294225 26	fe85827612e43eee230250d8f94f12ac	301a625913e87498b656836118294225 游标（光标）\r#\r\r 游标又称光标是用来存储查询结果集的数据类型，在存储过程和函数中可以使用光标对结果集进行循环的处理。类似高级编程语言中的集合类型。 光标的使用包括光标的声明、open、fetch和 close，其语法分别如下\n  声明光标  declare 光标名称 cursor for sql语句;\r 打开光标  open 光标名;\r 获取光标(将光标当前数据存储到变量中)  fetch 光标名 into 变量名[,变量名...];\r 关闭光标  close 光标名;\r 简单例子  drop procedure if exists pro_cursor_example_t2; delimiter ; create procedure pro_cursor_example_t2() begin declare name_value longtext; declare password_value longtext; -- 定义光标  declare get_user_data_list cursor for select USER_NAME, USER_PASSWORD from `t_user`; -- 打开光标  open get_user_data_list; -- 获取光标  fetch get_user_data_list into name_value, password_value; -- 打印 获取到的数据  select concat(\u0026#39;name: \u0026#39;,name_value,\u0026#39; password: \u0026#39;,password_value) as print_data; -- 关闭光标  close get_user_data_list; end; call pro_cursor_example_t2();  复杂例子  CREATE TABLE `t_user` ( `USER_ID` int NOT NULL AUTO_INCREMENT, `USER_NAME` char(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, `USER_PASSWORD` char(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, `USER_EMAIL` char(80) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, PRIMARY KEY (`USER_ID`), KEY `IDX_NAME` (`USER_NAME`) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb3; drop procedure if exists pro_cursor_example_t_3; delimiter ; create procedure pro_cursor_example_t_3() begin declare name_value varchar(100) default \u0026#39;\u0026#39;; declare v_finished INTEGER DEFAULT 0; declare id_value int default 0; declare password_value varchar(100) default \u0026#39;\u0026#39;; -- 定义光标  declare get_user_data_list_cursor cursor for select USER_NAME, USER_PASSWORD,USER_ID from `t_user`; DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_finished = 1; DROP TEMPORARY TABLE if exists t_user_temp_print; CREATE TEMPORARY TABLE t_user_temp_print( id INT PRIMARY KEY, name varchar(100), password varchar(100) ); -- 打开光标  open get_user_data_list_cursor; label_while_loop : LOOP FETCH get_user_data_list_cursor into name_value, password_value , id_value; IF v_finished = 1 THEN	LEAVE label_while_loop; END IF; INSERT INTO t_user_temp_print(`id`,`name`,`password`) values(id_value,name_value,password_value) ; END LOOP label_while_loop; -- 关闭光标  close get_user_data_list_cursor; -- 打印数据 	select * from t_user_temp_print; -- 删除临时表 	DROP TABLE t_user_temp_print ; end; call pro_cursor_example_t_3(); drop procedure if exists pro_cursor_example_t_4; delimiter ; create procedure pro_cursor_example_t_4() begin declare name_value varchar(100) default \u0026#39;\u0026#39;; declare v_finished INTEGER DEFAULT 0; declare id_value int default 0; declare password_value varchar(100) default \u0026#39;\u0026#39;; -- 定义光标  declare get_user_data_list_cursor cursor for select USER_NAME, USER_PASSWORD,USER_ID from `t_user`; DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_finished = 1; DROP TEMPORARY TABLE if exists t_user_temp_print; CREATE TEMPORARY TABLE t_user_temp_print( id INT , name varchar(100), password varchar(100) ); -- 打开光标  open get_user_data_list_cursor; while v_finished != 1 do FETCH get_user_data_list_cursor into name_value, password_value , id_value; INSERT INTO t_user_temp_print(`id`,`name`,`password`) values(id_value,name_value,password_value) ; end while ; -- 关闭光标  close get_user_data_list_cursor; -- 打印数据 	select * from t_user_temp_print; -- 删除临时表 	DROP TABLE t_user_temp_print ; end; call pro_cursor_example_t_4(); -- 创建结构基于现有表的临时表  CREATE TEMPORARY TABLE temp_table_name SELECT * FROM original_table LIMIT 0;  公司实际例子 1  drop procedure if exists pro_cursor_base_cost_norm_dezm_material; delimiter ; create procedure pro_cursor_base_cost_norm_dezm_material(in custom_year int(20) , in custom_version VARCHAR(255)) begin declare uuid_value VARCHAR(255); declare code_value VARCHAR(255); declare v_finished INTEGER DEFAULT 0; -- 定义光标  declare get_user_data_list cursor for select `uuid`,`code`	from `tb_base_cost_norm_dezm` where year = custom_year and speciality_number is not null GROUP BY speciality_number; DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_finished = 1; -- 打开光标  open get_user_data_list; while v_finished != 1 do -- 获取光标  fetch get_user_data_list into uuid_value, code_value; INSERT INTO tb_base_cost_norm_dezm_material_copy1 ( version, version_code,uuid, name, m_code,ggxh, unit_price,units_name ) SELECT uuid_value, code_value, MD5( UUID( ) ), name, m_code, ggxh, unit_price, units_name FROM tb_base_cost_norm_dezm_material_copy1 WHERE 1 = 1 AND tb_base_cost_norm_dezm_material_copy1.version = custom_version ; -- 打印 获取到的数据  select concat(\u0026#39;uuid: \u0026#39;,uuid_value,\u0026#39; code: \u0026#39;,code_value) as print_data; end while ; -- 关闭光标  close get_user_data_list; end; call pro_cursor_base_cost_norm_dezm_material(2015,\u0026#39;TuXavbSi\u0026#39;);  公司实际例子2  drop procedure if exists pro_cursor_base_cost_norm_dezm_material_consume; delimiter ; create procedure pro_cursor_base_cost_norm_dezm_material_consume() begin declare quota_value VARCHAR(255); declare m_code_value VARCHAR(255); declare v_finished INTEGER DEFAULT 0; -- 定义光标  declare get_user_data_list cursor for select quota_code,m_code from tb_base_cost_norm_dezm_material_consume where 1=1 and quota_code is not null and m_code is not null GROUP BY quota_code,m_code ; DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_finished = 1; -- 打开光标  open get_user_data_list; while v_finished != 1 do -- 获取光标  fetch get_user_data_list into quota_value, m_code_value; INSERT INTO tb_base_cost_norm_dezm_material_consume_copy1 ( quota_code, m_code,uuid, dezm_uuid ) SELECT quota_value, m_code_value, MD5( UUID( ) ), tb_base_cost_norm_dezm_items.uuid from tb_base_cost_norm_dezm_material_consume right join tb_base_cost_norm_dezm_items on tb_base_cost_norm_dezm_items.serial_number = tb_base_cost_norm_dezm_material_consume.quota_code where 1=1 and tb_base_cost_norm_dezm_material_consume.quota_code = quota_value and tb_base_cost_norm_dezm_material_consume.m_code = m_code_value; -- 打印 获取到的数据  select concat(\u0026#39;quota_code: \u0026#39;,quota_value,\u0026#39; m_code: \u0026#39;,m_code_value) as print_data; end while ; -- 关闭光标  close get_user_data_list; end; call pro_cursor_base_cost_norm_dezm_material_consume(); SELECT serial_number, count(serial_number) as count from tb_base_cost_norm_dezm_items WHERE 1=1 GROUP BY serial_number HAVING count \u0026gt; 1 ; 参考1(重点)\n参考2\n参考3\n参考4\n"}),a.add({id:262,href:'/life/docs/algorithm/data-structure/graph/',title:"图",section:"数据结构",content:"图\r#\r\r"}),a.add({id:263,href:'/life/docs/%E8%84%9A%E6%9C%AC/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%80%E6%9C%AF%E5%8F%82%E8%80%83/',title:"小程序技术总结参考 ",section:"脚本",content:"多端比较\r#\r\r   框架名称 h5 小程序 weex Native 可否使用其它ui     taro Y Y N Y ui根据修改就可以适配taro如 vant,light-ui,WeUI,Antd Design Mobile,自带的,京东ui等   uniapp Y Y Y N 只能用它自己的   Chameleon Y Y Y N ui根据修改就可以适配Chameleon light-ui,自带的,滴滴ui   mpvue Y Y N N 只能使用自己的 例如美团外卖     weex和Native 可以以一定的方式转为app 比如android ios  Chameleon\r#\r\r CML (Chameleon) 是一个跨多端开发的统一解决方案，它可以像变色龙一样适应不同的环境。一次开发，多端运行，一端所见即多端所见。\n  点评  滴滴的开源小程序框架 使用的是类vue语法 安装它自己的规范开发 比如 c-model 和v-model功能差不多但是不能直接使用v-model,一定要使用得这样 //注意这个 lang=\u0026#39;vue\u0026#39; \u0026lt;template lang=\u0026#39;vue\u0026#39;\u0026gt; \u0026lt;page title=\u0026#34;chameleon\u0026#34;\u0026gt; \u0026lt;view\u0026gt;\u0026lt;text\u0026gt;message:{{message}}\u0026lt;/text\u0026gt;\u0026lt;/view\u0026gt; \u0026lt;input v-model=\u0026#34;message\u0026#34;\u0026gt;\u0026lt;/input\u0026gt; \u0026lt;/page\u0026gt; \u0026lt;/template\u0026gt; 实际上uniapp照样也是使用的类vue 只不过uniapp模拟了几乎绝大多数的vue api 其实这种类vue挺恐怖的 框架自己把vue拿来魔改或者自己研发了一种数据驱动的响应式js框架 uniapp\r#\r\r uni-app 是一个使用 Vue.js 开发小程序、H5、App的统一前端框架。 开发者使用 Vue 语法编写代码，uni-app 框架将其编译到 小程序（微信/支付宝/百度/字节跳动/QQ/钉钉）、App（iOS/Android）、H5等多个平台，保证其正确运行并达到优秀体验\n  点评  类vue语法目前有说法是已经用的全套vue语法了 ,支持多端 比如 小程序,h5,app 可以以一定的约束下达成一次编写多端运行 但是前提条件你必须用它的组件, 否则就会出问题 taro\r#\r\r Taro 一套 遵循React 语法规范的多端开发解决方案。使用 Taro，只书写一套代码，再通过 Taro 的编译工具，将源代码分别编译出可以在不同端（微信小程序、H5、App 端等）运行的代码。同时 Taro 还提供了开箱即用的语法检测和自动补全等功能\n  点评  支持非常多的数据驱动响应式js框架如vue,react,Nerv 也可以从某程度上支持android和ios 目前是转为Native应用然后到android和ios 然后就是ui 支持非常的多 可以使用非自带的ui,目前它的设计的框架和理念在小程序框架应该是最好的,有很多人看好它 最好当你使用vue的时候你基本上可以使用任何vue语法使用react也是如此 似乎没做这些限制 对开发极其的友好   taro ui 参考demo\n  Antd Design Mobile\n  WeUI\n  vant UI\n  Taro UI 可以一定程度的定制化 定制化\n  taro 内置组件\n  经验总结\r#\r\r法律法规微信小程序总结\r#\r\r最开始的时候我们都没有做过微信小程序 然后到网上去调研了下 其实用原生微信小程序的逻辑写的项目其实很少的,因为很多企业都认为是没有必要为了微信小程序就单独去学习 小程序编写页面的那种规范,大多是选择使用第三方的框架然后反编译为微信小程序格式 最开始是选择的 chameleon 然后在看chameleon 的时候发现的taro 然后相比较之下觉得taro更适合一点 taro 接入的成本也比较低 也利于后续升级 假如项目性能不够了 还可以改为react模型的应用 期间的话 也需要一些东西 没接触过的比如获取手机号码，获取微信小程序 以及和后端联调所幸都依依解决了 也有一些问题比如vuex在h5调试的刷新F5刷新页面 变量状态就消失和环境变量只能在linux下才行,打包后应用体积超过2M等 后面陆续的把这些都处理了 本次应用是vue2+vuex+taro+vant Taro Vant开发配置攻略\r#\r\r Taro v3.3+\n 在 Taro 中使用有赞前端团队开源的移动端组件库Vant。\nVant 官方示例：https://vant-contrib.gitee.io/vant/mobile.html#/zh-CN。\n能直接兼容使用的组件大概为 70%，具体适配情况请见下文。\nGetting Start\r#\r\r# 安装 CLI npm i @tarojs/cli@alpha -g # 启动项目 cd taro-vant npm i taro build --type weapp --watch # 预览项目时需要以 prod 模式打包 taro build --type weapp 目录结构\r#\r\r项目目录结构\r#\r\r├── dist 编译结果目录\r|\r├── config 项目编译配置目录\r| ├── index.js 默认配置\r| ├── dev.js 开发环境配置\r| └── prod.js 生产环境配置\r|\r├── src 源码目录\r| ├── pages 页面文件目录\r| | └── index index 页面目录\r| | ├── index.js index 页面逻辑\r| | ├── index.css index 页面样式\r| | └── index.config.js index 页面配置\r| |\r| ├── app.js 项目入口文件\r| ├── app.css 项目总通用样式\r| └── app.config.js 项目入口配置\r|\r├── project.config.json 微信小程序项目配置 project.config.json\r├── project.tt.json 字节跳动小程序项目配置 project.tt.json\r├── project.swan.json 百度小程序项目配置 project.swan.json\r├── project.qq.json QQ 小程序项目配置 project.qq.json\r|\r├── babel.config.js Babel 配置\r├── tsconfig.json TypeScript 配置\r├── .eslintrc ESLint 配置\r|\r└── package.json\r 编译配置  └── config 项目编译配置目录\r├── index.js 默认配置\r├── dev.js 开发环境配置\r└── prod.js 生产环境配置\r  用于配置 Taro 项目的编译行为、修改 Webpack 配置等，详情请参考编译配置和编译配置详情。\n  源码组织\n  和小程序规范一样，Taro 包含一个描述整体程序的 app 和多个描述各自页面的 page。\n  app\r└── src 源码目录\r├── app.js 项目入口文件\r├── app.css 项目总通用样式\r└── app.config.js 项目入口配置\r小程序的主体由下面三个文件组成：\r#\r\r  文件	必须	作用\n  app.js	是	小程序入口逻辑\n  app.css	否	小程序全局样式\n  app.config.js	是	小程序全局配置\n  代码示例请根据你选择的框架进行查看：React, PReact, Vue, Vue3。\n   小程序全局配置    app.config.js 对应小程序规范的全局配置文件 app.json，优势在于它是 JS 文件可以编写逻辑。配置以微信小程序的全局配置为规范。详情请参考全局配置。\n  小程序全局样式    小程序全局样式文件可以通过 ES6 规范的 import 进行引入。\n  app.js\rimport './app.css';\rpage\n└── src 源码目录\r└── pages 页面文件目录\r└── index index 页面目录\r├── index.js index 页面逻辑\r├── index.css index 页面样式\r└── index.config.js index 页面配置\r一个小程序页面由三个文件组成，如下：\r#\r\r  文件	必须	作用\n  page.js	是	页面入口逻辑\n  page.css	否	页面样式\n  page.config.js	否	页面配置\n   页面配置    page.config.js 对应小程序规范的页面配置文件 page.json，优势在于它是 JS 文件可以编写逻辑。配置以微信小程序的页面配置为规范。详情请参考页面配置。\n  页面样式    页面的样式文件可以通过 ES6 规范的 import 进行引入。\n  pages/index/index.js\rimport './index.css';\r  页面路由    页面路由与小程序规范一致，需要在小程序全局配置 app.config.js 中进行配置。\n  项目配置\n  └──project.config.json 微信小程序项目配置 project.config.json\r  各类小程序平台均有自己的项目配置文件，Taro 支持对它们进行适配，详情请参考项目配置。\n  Babel 配置\n  └── babel.config.js Babel 配置\r  请参考 Babel 配置\n  ESLint 配置\n  └── .eslintrc ESLint 配置\r建议的配置\r#\r\r 打包压缩  //config -\u0026gt; dev.js module.exports = { env: { NODE_ENV: \u0026#39;\u0026#34;development\u0026#34;\u0026#39; }, defineConstants: { }, mini: { webpackChain: (chain, webpack) =\u0026gt; { chain.merge({ plugin: { install: { plugin: require(\u0026#39;terser-webpack-plugin\u0026#39;), args: [{ terserOptions: { compress: true, // 默认使用terser压缩  // mangle: false,  keep_classnames: true, // 不改变class名称  keep_fnames: true // 不改变函数名称  } }] } } }) } }, h5: {} }   环境变量 (taro原生只能是linux)\n  考虑使用 cross-env\n  关于分享好友和朋友圈可以考虑 用一个公共js 来处理这些便于加密和后续的解密等操作\n  当环境不一致参考package.json\r#\r\r{\r\u0026quot;name\u0026quot;: \u0026quot;kbs_station_weapp\u0026quot;,\r\u0026quot;version\u0026quot;: \u0026quot;1.0.0\u0026quot;,\r\u0026quot;private\u0026quot;: true,\r\u0026quot;description\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;templateInfo\u0026quot;: {\r\u0026quot;name\u0026quot;: \u0026quot;default\u0026quot;,\r\u0026quot;typescript\u0026quot;: true,\r\u0026quot;css\u0026quot;: \u0026quot;less\u0026quot;\r},\r\u0026quot;scripts\u0026quot;: {\r\u0026quot;build:weapp\u0026quot;: \u0026quot;cross-env NODE_ENV=development taro build --type weapp\u0026quot;,\r\u0026quot;build:weapp:p\u0026quot;: \u0026quot;cross-env NODE_ENV=production taro build --type weapp\u0026quot;,\r\u0026quot;build:p\u0026quot;: \u0026quot;cross-env NODE_ENV=production taro build --type weapp\u0026quot;,\r\u0026quot;build:d\u0026quot;: \u0026quot;cross-env NODE_ENV=development taro build --type weapp\u0026quot;,\r\u0026quot;build:p:linux\u0026quot;: \u0026quot;set NODE_ENV=production \u0026amp;\u0026amp; taro build --type weapp\u0026quot;,\r\u0026quot;build:d:linux\u0026quot;: \u0026quot;set NODE_ENV=development \u0026amp;\u0026amp; taro build --type weapp\u0026quot;,\r\u0026quot;build:swan\u0026quot;: \u0026quot;taro build --type swan\u0026quot;,\r\u0026quot;build:alipay\u0026quot;: \u0026quot;taro build --type alipay\u0026quot;,\r\u0026quot;build:tt\u0026quot;: \u0026quot;taro build --type tt\u0026quot;,\r\u0026quot;build:h5\u0026quot;: \u0026quot;cross-env NODE_ENV=development taro build --type h5\u0026quot;,\r\u0026quot;build:h5:p\u0026quot;: \u0026quot;cross-env NODE_ENV=production taro build --type h5\u0026quot;,\r\u0026quot;build:rn\u0026quot;: \u0026quot;taro build --type rn\u0026quot;,\r\u0026quot;build:qq\u0026quot;: \u0026quot;taro build --type qq\u0026quot;,\r\u0026quot;build:jd\u0026quot;: \u0026quot;taro build --type jd\u0026quot;,\r\u0026quot;build:quickapp\u0026quot;: \u0026quot;taro build --type quickapp\u0026quot;,\r\u0026quot;dev:weapp\u0026quot;: \u0026quot;cross-env NODE_ENV=development taro build --type weapp --watch\u0026quot;,\r\u0026quot;dev:weapp:p\u0026quot;: \u0026quot;cross-env NODE_ENV=production taro build --type weapp --watch\u0026quot;,\r\u0026quot;dev:swan\u0026quot;: \u0026quot;npm run build:swan -- --watch\u0026quot;,\r\u0026quot;dev:alipay\u0026quot;: \u0026quot;npm run build:alipay -- --watch\u0026quot;,\r\u0026quot;dev:tt\u0026quot;: \u0026quot;npm run build:tt -- --watch\u0026quot;,\r\u0026quot;dev:h5\u0026quot;: \u0026quot;cross-env NODE_ENV=development taro build --type h5 --watch\u0026quot;,\r\u0026quot;dev:h5:p\u0026quot;: \u0026quot;cross-env NODE_ENV=production taro build --type h5 --watch\u0026quot;,\r\u0026quot;dev:rn\u0026quot;: \u0026quot;npm run build:rn -- --watch\u0026quot;,\r\u0026quot;dev:qq\u0026quot;: \u0026quot;npm run build:qq -- --watch\u0026quot;,\r\u0026quot;dev:jd\u0026quot;: \u0026quot;npm run build:jd -- --watch\u0026quot;,\r\u0026quot;dev:quickapp\u0026quot;: \u0026quot;npm run build:quickapp -- --watch\u0026quot;\r},\r\u0026quot;browserslist\u0026quot;: [\r\u0026quot;last 3 versions\u0026quot;,\r\u0026quot;Android \u0026gt;= 4.1\u0026quot;,\r\u0026quot;ios \u0026gt;= 8\u0026quot;\r],\r\u0026quot;author\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;dependencies\u0026quot;: {\r\u0026quot;@babel/runtime\u0026quot;: \u0026quot;^7.7.7\u0026quot;,\r\u0026quot;@tarojs/cli\u0026quot;: \u0026quot;3.4.12\u0026quot;,\r\u0026quot;@tarojs/components\u0026quot;: \u0026quot;3.4.12\u0026quot;,\r\u0026quot;@tarojs/plugin-framework-vue2\u0026quot;: \u0026quot;^3.4.12\u0026quot;,\r\u0026quot;@tarojs/plugin-html\u0026quot;: \u0026quot;3.4.12\u0026quot;,\r\u0026quot;@tarojs/runtime\u0026quot;: \u0026quot;3.4.12\u0026quot;,\r\u0026quot;@tarojs/taro\u0026quot;: \u0026quot;3.4.12\u0026quot;,\r\u0026quot;qrcode\u0026quot;: \u0026quot;^1.5.1\u0026quot;,\r\u0026quot;vant\u0026quot;: \u0026quot;^2.12.13\u0026quot;,\r\u0026quot;vue\u0026quot;: \u0026quot;^2.5.0\u0026quot;,\r\u0026quot;vue-template-compiler\u0026quot;: \u0026quot;^2.5.0\u0026quot;,\r\u0026quot;vuex\u0026quot;: \u0026quot;^3.0.0\u0026quot;,\r\u0026quot;vuex-persist\u0026quot;: \u0026quot;^3.1.3\u0026quot;\r},\r\u0026quot;devDependencies\u0026quot;: {\r\u0026quot;@babel/core\u0026quot;: \u0026quot;^7.8.0\u0026quot;,\r\u0026quot;@tarojs/mini-runner\u0026quot;: \u0026quot;3.4.12\u0026quot;,\r\u0026quot;@tarojs/plugin-less\u0026quot;: \u0026quot;^2.2.10\u0026quot;,\r\u0026quot;@tarojs/webpack-runner\u0026quot;: \u0026quot;3.4.12\u0026quot;,\r\u0026quot;@types/webpack-env\u0026quot;: \u0026quot;^1.13.6\u0026quot;,\r\u0026quot;@typescript-eslint/eslint-plugin\u0026quot;: \u0026quot;^4.15.1\u0026quot;,\r\u0026quot;@typescript-eslint/parser\u0026quot;: \u0026quot;^4.15.1\u0026quot;,\r\u0026quot;babel-plugin-import\u0026quot;: \u0026quot;^1.13.3\u0026quot;,\r\u0026quot;babel-preset-taro\u0026quot;: \u0026quot;3.4.12\u0026quot;,\r\u0026quot;cross-env\u0026quot;: \u0026quot;^7.0.3\u0026quot;,\r\u0026quot;eslint\u0026quot;: \u0026quot;^6.8.0\u0026quot;,\r\u0026quot;eslint-config-taro\u0026quot;: \u0026quot;3.4.12\u0026quot;,\r\u0026quot;eslint-plugin-vue\u0026quot;: \u0026quot;^6.x\u0026quot;,\r\u0026quot;less\u0026quot;: \u0026quot;^4.1.3\u0026quot;,\r\u0026quot;less-loader\u0026quot;: \u0026quot;^11.0.0\u0026quot;,\r\u0026quot;sass\u0026quot;: \u0026quot;^1.25.0\u0026quot;,\r\u0026quot;sass-loader\u0026quot;: \u0026quot;^8.0.2\u0026quot;,\r\u0026quot;stylelint\u0026quot;: \u0026quot;9.3.0\u0026quot;,\r\u0026quot;typescript\u0026quot;: \u0026quot;^4.1.0\u0026quot;,\r\u0026quot;vue-loader\u0026quot;: \u0026quot;^15.9.2\u0026quot;,\r\u0026quot;webpack\u0026quot;: \u0026quot;^4.26.1\u0026quot;\r}\r}\r"}),a.add({id:264,href:'/life/docs/python/base/python_datetime/',title:"python datetime",section:"python 基础学习",content:"datetime\r#\r\r构造函数\r#\r\r 创建日期对象  import datetime import time time1 = datetime.datetime(year=2008,month=4,day=12) time2 = datetime.datetime(2027,6,23) print(time1) print(time2) 日期对象格式化为可读字符串\r#\r\r 格式化参考     指令 描述 实例 TIY     %a Weekday，短版本 Wed 试一试   %A Weekday，完整版本 Wednesday 试一试   %w Weekday，数字 0-6，0 为周日 3 试一试   %d 日，数字 01-31 31 试一试   %b 月名称，短版本 Dec 试一试   %B 月名称，完整版本 December 试一试   %m 月，数字01-12 12 试一试   %y 年，短版本，无世纪 18 试一试   %Y 年，完整版本 2018 试一试   %H 小时，00-23 17 试一试   %I 小时，00-12 05 试一试   %p AM/PM PM 试一试   %M 分，00-59 41 试一试   %S 秒，00-59 08 试一试   %f 微妙，000000-999999 548513 试一试   %z UTC 偏移 +0100 试一试   %Z 时区 CST 试一试   %j 天数，001-366 365 试一试   %U 周数，每周的第一天是周日，00-53 52 试一试   %W 周数，每周的第一天是周一，00-53 52 试一试   %c 日期和时间的本地版本 Mon Dec 31 17:41:00 2018 试一试   %x 日期的本地版本 12/31/18 试一试   %X 时间的本地版本 17:41:00 试一试   %% A % character % 试一试     例子  import datetime x = datetime.datetime(2019, 10, 1) print(x.strftime(\u0026#34;%y\u0026#34;)) print(x.strftime(\u0026#34;%Y\u0026#34;)) print(x.strftime(\u0026#34;%m\u0026#34;)) print(x.strftime(\u0026#34;%d\u0026#34;)) def formateDate(date): lista = [] lista.append(date.strftime(\u0026#34;%Y\u0026#34;)) lista.append(date.strftime(\u0026#34;%m\u0026#34;)) lista.append(date.strftime(\u0026#34;%d\u0026#34;)) return \u0026#34;-\u0026#34;.join(lista) print(formateDate(x))  strptime  import datetime str1 = \u0026#39;2022-06-11 11:03\u0026#39; str2 = \u0026#39;2022-06-11\u0026#39; # 字符串 匹配格式必须一致 否则会报错 time1 = datetime.datetime.strptime(str2,\u0026#34;%Y-%m-%d\u0026#34;) time2 = datetime.datetime.strptime(str1,\u0026#34;%Y-%m-%d%H:%M\u0026#34;) print(time1) print(time2)  使用正则表达式 将字符串转为日期  日期加减比较\r#\r\r 日期加减 使用 timedelta实现  import datetime # timedelta 就只有这几个参数 要是年和月换成天或者周就是 python3.6 # def __new__(cls, days=0, seconds=0, microseconds=0, # milliseconds=0, minutes=0, hours=0, weeks=0) date1 = datetime.datetime(2019, 10, 1) print(date1) # 增加天 # datetime.timedelta date1 = date1 + datetime.timedelta(days=1) print(date1) # 增加小时 date1 = date1 + datetime.timedelta(hours=1) print(date1) # 增加分钟 date1 = date1 + datetime.timedelta(minutes=2) print(date1) # 减少分钟 date1 = date1 + datetime.timedelta(minutes=-1) print(date1) # 增加秒 date1 = date1 + datetime.timedelta(seconds=20) print(date1) # 增加毫秒 date1 = date1 + datetime.timedelta(milliseconds=10) print(date1) # 增加周 date1 = date1 + datetime.timedelta(weeks=1) print(date1) # 增加一年 # 闰年366天 , 平年365天 公历年份是整百数的，必须是400的倍数才是世界闰年（如2000是世纪闰年，1900不是世纪闰年 if (date1.year + 1) % 400 == 0: date1 = date1 + datetime.timedelta(days=366) print(\u0026#34;闰年\u0026#34;) else: print(\u0026#34;平年\u0026#34;) date1 = date1 + datetime.timedelta(days=365) print(date1) # 计算给定月份的总天数 def computeMonthDay(monthMin, monthMax, year): tempDay = 0 day2Month = 0 if year % 400 == 0: day2Month = 29 else: day2Month = 28 day31List = [1, 3, 5, 7, 8, 10, 12] day30List = [4, 6, 9, 11] for x in range(monthMin + 1, monthMax + 1): print(f\u0026#34;x:{x}\u0026#34;) if x == 2: tempDay += day2Month elif x in day31List: tempDay += 31 elif x in day30List: tempDay += 30 return tempDay # 在当前日期任意增加几月 但是没有超过12 month1 = 12 if month1 + date1.month \u0026lt;= 12: date1 = date1 + datetime.timedelta(days=computeMonthDay(date1.month, date1.month + month1, date1.year)) else: month2 = 12 - month1 date1 = date1 + datetime.timedelta(days=computeMonthDay(date1.month, date1.month + month2, date1.year)) date1 = date1 + datetime.timedelta(days=computeMonthDay(0, month1 - month2, date1.year)) print(date1) # 任意月份 # month2 输入的任意月份 month2 = 31 # month2X 实际添加的月份 month2X = 0 # 实际添加的年份 year1 = 0 if month2 \u0026gt;= 12: year1 = int(month2 / 12) month2X = month2 - year1 * 12 else: year1 = 0 month2X = month2 - year1 * 12 print(f\u0026#34;year:{year1} ; month2X:{month2X}\u0026#34;) if year1 \u0026gt; 0: for x in range(0,year1): if (date1.year + 1) % 400 == 0: date1 = date1 + datetime.timedelta(days=366) else: date1 = date1 + datetime.timedelta(days=365) else: if month2X + date1.month \u0026lt;= 12: date1 = date1 + datetime.timedelta(days=computeMonthDay(date1.month, date1.month + month2X, date1.year)) else: month2 = 12 - month2X date1 = date1 + datetime.timedelta(days=computeMonthDay(date1.month, date1.month + month2, date1.year)) date1 = date1 + datetime.timedelta(days=computeMonthDay(0, month2X - month2, date1.year)) # 结束 print(date1)  日期比较  import datetime first_date = datetime.date(2022, 2, 22) second_date = datetime.date(2022, 3, 1) print(first_date \u0026lt; second_date) "}),a.add({id:265,href:'/life/docs/algorithm/data-structure/adt/',title:"ADT",section:"数据结构",content:"ADT\r#\r\r"}),a.add({id:266,href:'/life/docs/python/base/python_try_except/',title:"Python Try Except",section:"python 基础学习",content:"try 块允许您测试代码块以查找错误。\nexcept 块允许您处理错误。\nfinally 块允许您执行代码，无论 try 和 except 块的结果如何\n异常处理\r#\r\r当我们调用 Python 并发生错误或异常时，通常会停止并生成错误消息。\n可以使用 try 语句处理这些异常：\ntry: print(x) except: print(\u0026#34;x没有定义\u0026#34;) 多个异常\r#\r\rtry: print(x) except NameError: print(\u0026#34;参数 x 没有定义\u0026#34;) except: print(\u0026#34;Something else went wrong\u0026#34;) Else\r#\r\r如果没有引发错误，那么您可以使用 else 关键字来定义要执行的代码块：\ntry: print(\u0026#34;你好啊!\u0026#34;) except: print(\u0026#34;抛出错误了\u0026#34;) else: print(\u0026#34;继续执行\u0026#34;) Finally\r#\r\r如果指定了 finally 块，则无论 try 块是否引发错误，都会执行 finally 块\ntry: x1 = 2 / 0 except: print(\u0026#34;异常 除数为0\u0026#34;) finally: print(\u0026#34;不管抛出异常与否都会执行\u0026#34;) 引发异常\r#\r\r抛出（引发）异常，请使用 raise 关键词\ndef divFunction(x,y): if y == 0: raise Exception(\u0026#34;除数不能为0\u0026#34;) return x / y print(f\u0026#34; 3 % 0: {divFunction(3,0)}\u0026#34;) "}),a.add({id:267,href:'/life/docs/databases/mysql/mysql_procedure_function/',title:"mysql存储函数",section:"mysql学习笔记",content:"参考1(重点)\n参考2\n"}),a.add({id:268,href:'/life/docs/databases/mysql/mysql_operation_maintenance/',title:"mysql运维",section:"mysql学习笔记",content:"一: 备份\r#\r\r1: 备份内容\r#\r\r  数据 (数据文件或文本格式数据)\n  操作日志(binlog) (数据库变更日志)\n  2:冷备份与热备份\r#\r\r  冷备份 (关闭数据库服务，完整拷贝数据文件)\n  热备份 (在不影响数据库读写服务的情况下备份数据库)\n  3:本地备份与远程备份\r#\r\r  本地备份 (在数据库服务器本地进行备份)\n  远程备份 (远程连接数据库进行备份)\n  4:全量备份与增量备份\r#\r\r  全量备份 (备份完整的数据库)\n  增量备份 (只备份上一次备份以来发生修改的数据)\n  5:备份周期\r#\r\r 考虑因素： 数据库大小(决定备份时间) 恢复速度要求(快速or慢速) 备份方式(全量or增量)  6:常用工具及用法\r#\r\r mysqldump - 逻辑备份，热备 xtrabackup - 物理备份， 热备 Lvm/zfs snapshot - 物理备份 mydumper - 逻辑备份，热备 cp - 物理备份，冷备  常用工具及用法 - mysqldump\r#\r\r 逻辑备份  -- 备份全部数据库的数据库结构 mysqldump -h localhost -p3307 -uroot -p123456 -A \u0026gt; D:\\data\\databases\\mysql\\mysql_all_2023-09-02.sql mysqldump -h localhost -p3307 -uroot -p123456 -A -d \u0026gt; D:\\data\\mysql_all.sql -- 备份全部数据库的数据和结构 mysqldump -h localhost -p3307 -uroot -p123456 -A \u0026gt; D:\\data\\mysql_all_2.sql mysqldump -h localhost -p3307 -uroot -p123456 -A \u0026gt; D:\\data\\databases\\mysql\\mysql_all_data_2023-09-02.sql -- 备份单个数据库的结构和数据 mysqldump -h localhost -p3307 -uroot -p123456 --databases test3 \u0026gt; D:\\data\\test3_all.sql -- 备份单个数据库的结构(当你需要备份结构和数据同时的时候移除-d 参数即可) mysqldump -h localhost -p3307 -uroot -p123456 --databases test3 -d \u0026gt; D:\\data\\test3_all_1.sql -- 备份单个数据库的数据 mysqldump -h localhost -p3307 -uroot -p123456 --databases test3 -t \u0026gt; D:\\data\\test3_data_1.sql mysqldump -h 127.0.0.1 -p3307 -uroot -p123456 --databases test3 \u0026gt; D:\\data\\databases\\mysql\\2023-09-02_x_test3.sql -- 备份多个数据库的数据 (貌似无法备份指定端口和主机的数据) mysqldump -u root -p123456 --databases mybatis-plus shard-jdbc-slave \u0026gt; D:\\data\\databases\\mysql\\2023-09-02_shard-jdbc-slave_mybatis-plus_3306.sql -- 备份单个数据库的结构 mysqldump -h localhost -p3307 -uroot -p123456 test3 -d \u0026gt; D:\\data\\test3_jiegou.sql -- 备份单个数据库的结构和数据 mysqldump -h localhost -p3307 -uroot -p123456 --databases test3 \u0026gt; D:\\data\\test3.sql -- 登录数据库 mysql -h localhost -p3307 -uroot -p123456 -- 备份单个数据库数据 生成环境  mysqldump --column-statistics=0 -h 192.168.2.206 -p3306 -uroot -p123456 --databases pmcc_acc \u0026gt; E:\\data\\sql\\pmcc_acc_all.sql 7:主从复制\r#\r\r要求\r#\r\r 主从复制必须满足一定的条件的 当你随便按照某种写法设置了很可能压根没达到要求\n   主从配置需要注意的点\n 主从服务器操作系统版本和位数一致； Master 和 Slave 数据库的版本要一致； Master 和 Slave 数据库中的数据要一致； Master 开启二进制日志， Master 和 Slave 的 server_id 在局域网内必须唯一；    MySQL 主从复制（也称 A/B 复制） 的原理\n Master将数据改变记录到二进制日志(binary log)中，也就是配置文件log-bin指定的文件， 这些记录叫做二进制日志事件(binary log events)； Slave 通过 I/O 线程读取 Master 中的 binary log events 并写入到它的中继日志(relay log)； Slave 重做中继日志中的事件， 把中继日志中的事件信息一条一条的在本地执行一次，完 成数据在本地的存储， 从而实现将改变反映到它自己的数据(数据重放)。    主从配置的简要步骤\n  Master 上的配置\n 安装数据库； 修改数据库配置文件， 指明 server_id， 开启二进制日志(log-bin)； 启动数据库， 查看当前是哪个日志， position 号是多少； 登录数据库， 授权数据复制用户（IP 地址为从机 IP 地址， 如果是双向主从， 这里的还需要授权本机的 IP 地址， 此时自己的 IP 地址就是从 IP 地址)； 备份数据库（记得加锁和解锁）； 传送备份数据到 Slave 上； 启动数据库；    Slave 上的配置\n 安装数据库； 修改数据库配置文件， 指明 server_id（如果是搭建双向主从的话， 也要开启二进制 日志 log-bin）； 启动数据库， 还原备份； 查看当前是哪个日志， position 号是多少（单向主从此步不需要， 双向主从需要）； 指定 Master 的地址、 用户、 密码等信息； 开启同步， 查看状态。    第一种\r#\r\r主mysql\r#\r\r 配置  [mysqld] # skip-grant-tables 暂时注释了 容易引起 mysql服务启动后立马关闭 这个错误 # 设置3306端口 port=3306 # 自定义设置mysql的安装目录，即解压mysql压缩包的目录 # 切记此处一定要用双斜杠\\\\，单斜杠这里会出错。 basedir=D:\\CS\\databases\\mysql-8.0.27-winx64 # 自定义设置mysql数据库的数据存放目录 datadir=D:\\CS\\databases\\mysql-8.0.27-winx64\\\\data # 允许最大连接数 max_connections=200 # 允许连接失败的次数，这是为了防止有人从该主机试图攻击数据库系统 max_connect_errors=10 # 服务端使用的字符集默认为UTF8 character-set-server=utf8mb4 # 创建新表时将使用的默认存储引擎 default-storage-engine=INNODB # 默认使用“mysql_native_password”插件认证 default_authentication_plugin=mysql_native_password #要同步的数据库 binlog-do-db：指定mysql的binlog日志记录哪个db binlog-do-db=shard-jdbc-master # 设置 MySQL 服务器的唯一标识符 mysql同步的数据中是包含server-id的，用于标识该语句最初是从哪个server写入的，因此server-id一定要有的 server-id = 1 # 开启主库的binlog日志 log-bin = mysql-bin #屏蔽系统库同步 binlog-ignore-db=mysql binlog-ignore-db=information_schema binlog-ignore-db=performance_schema sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION [mysql] # 设置mysql客户端默认字符集 default-character-set=utf8mb4 [client] # 设置mysql客户端连接服务端时默认使用的端口和默认字符集 port=3306 default-character-set=utf8mb4  命令  -- 授权主备复制专用账号 -- 创建用户 前面db_sync是用户名后面的db_sync是密码 CREATE USER \u0026#39;db_sync\u0026#39;@\u0026#39;%\u0026#39; IDENTIFIED BY \u0026#39;db_sync\u0026#39;; -- 查看用户 select user,host from mysql.user; -- 权限赋予 GRANT REPLICATION SLAVE ON *.* TO \u0026#39;db_sync\u0026#39;@\u0026#39;%\u0026#39; ; -- 刷新权限  FLUSH PRIVILEGES; -- 确认位点 记录下文件名以及位点 show master status; 从mysql\r#\r\r 配置  [mysqld] # skip-grant-tables 暂时注释了 容易引起 mysql服务启动后立马关闭 这个错误 # 设置3309端口 port=3309 # 自定义设置mysql的安装目录，即解压mysql压缩包的目录 # 切记此处一定要用双斜杠\\\\，单斜杠这里会出错。 basedir=D:\\CS\\databases\\mysql-8.0.27-slave # 自定义设置mysql数据库的数据存放目录 datadir=D:\\CS\\databases\\mysql-8.0.27-slave\\\\data # 允许最大连接数 max_connections=200 # 允许连接失败的次数，这是为了防止有人从该主机试图攻击数据库系统 max_connect_errors=10 # 服务端使用的字符集默认为UTF8 character-set-server=utf8mb4 # 创建新表时将使用的默认存储引擎 default-storage-engine=INNODB # 默认使用“mysql_native_password”插件认证 default_authentication_plugin=mysql_native_password #屏蔽系统库同步 binlog-ignore-db=mysql binlog-ignore-db=information_schema binlog-ignore-db=performance_schema #开启日志 log-bin=mysql-bin #设置服务id，主从不能一致 # 设置 MySQL 服务器的唯一标识符 mysql同步的数据中是包含server-id的，用于标识该语句最初是从哪个server写入的，因此server-id一定要有的 server-id = 2 #设置需要同步的数据库 replicate_wild_do_table=shard-jdbc-master.% #屏蔽系统库同步 replicate_wild_ignore_table=mysql.% replicate_wild_ignore_table=information_schema.% replicate_wild_ignore_table=performance_schema.% sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION [mysql] # 设置mysql客户端默认字符集 default-character-set=utf8mb4 [client] # 设置mysql客户端连接服务端时默认使用的端口和默认字符集 port=3309 default-character-set=utf8mb4  命令  #先停止同步 STOP SLAVE; #修改从库指向到主库，使用上一步记录的文件名以及位点 CHANGE MASTER TO master_host = \u0026#39;localhost\u0026#39;, master_user = \u0026#39;db_sync\u0026#39;, master_password = \u0026#39;db_sync\u0026#39;, master_log_file = \u0026#39;mysql-bin.000001\u0026#39;, master_log_pos = 654363; #启动同步 START SLAVE; #查看从库状态Slave_IO_Runing和Slave_SQL_Runing都为Yes说明同步成功，如果不为Yes，请检查error_log，然后排查相关异常。 show slave status ; stop slave #master服务器的ip地址 CHANGE MASTER TO master_host =\u0026#39;localhost\u0026#39;, #第5步中创建的账号 master_user =\u0026#39;db_sync\u0026#39;, #第5步中创建的密码 master_password =\u0026#39;db_sync\u0026#39;, #上一步中的File master_log_file =\u0026#39;mysql-bin.000004\u0026#39;, #上一步中的Position master_log_pos = 525, get_master_public_key=1; start slave ; #查看从库状态Slave_IO_Runing和Slave_SQL_Runing都为Yes说明同步成功，如果不为Yes，请检查error_log，然后排查相关异常。 show slave status ; 第二种\r#\r\r主mysql\r#\r\r 配置  [mysqld] # skip-grant-tables 暂时注释了 容易引起 mysql服务启动后立马关闭 这个错误 # 设置3307端口 port=3307 # 自定义设置mysql的安装目录，即解压mysql压缩包的目录 # 切记此处一定要用双斜杠\\\\，单斜杠这里会出错。 basedir=D:\\CS\\databases\\mysql_8.027 # 自定义设置mysql数据库的数据存放目录 datadir=D:\\CS\\databases\\mysql_8.027\\\\data # 允许最大连接数 max_connections=200 # 允许连接失败的次数，这是为了防止有人从该主机试图攻击数据库系统 max_connect_errors=10 # 服务端使用的字符集默认为UTF8 character-set-server=utf8mb4 # 创建新表时将使用的默认存储引擎 default-storage-engine=INNODB # 默认使用“mysql_native_password”插件认证 default_authentication_plugin=mysql_native_password sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION # 开启慢sql slow_query_log=ON # 慢sql存的地址 slow_query_log_file=D:\\CS\\databases\\mysql_8.027\\log\\slow.log # 会记录没有使用索引的查询sql,但前提是必须开启 slow_query_log=\u0026#39;ON\u0026#39; log-queries-not-using-indexes =on # 超过10秒则属于慢SQL,慢查询时间,这里为10秒,超过10秒会被记录 long_query_time=10 # 查询日志,开启对所有执行语句进行记录 general_log=on # 查询日志,存放位置 general_log_file=D:\\CS\\databases\\mysql_8.027\\log\\query.log # 查询日志，文件中的时间显示已系统时间为准 log_timestamps = SYSTEM server-id = 3 # 开启主库的binlog日志 log-bin=mysql-bin #屏蔽系统库同步 binlog-ignore-db=mysql binlog-ignore-db=sys binlog-ignore-db=information_schema binlog-ignore-db=performance_schema #要同步的数据库 binlog-do-db：指定mysql的binlog日志记录哪个db binlog-do-db=chinese [mysql] # 设置mysql客户端默认字符集 default-character-set=utf8mb4 [client] # 设置mysql客户端连接服务端时默认使用的端口和默认字符集 port=3307 default-character-set=utf8mb4  命令  -- 授权主备复制专用账号 -- 创建用户 前面repl_xx_gongsi是用户名后面的xx_gongsi_master_123456是密码 CREATE USER \u0026#39;repl_xx_gongsi\u0026#39;@\u0026#39;127.0.0.1\u0026#39; IDENTIFIED WITH mysql_native_password BY \u0026#39;xx_gongsi_master_123456\u0026#39;; -- 查看用户 select user,host from mysql.user; -- 权限赋予 GRANT REPLICATION SLAVE ON *.* TO \u0026#39;repl_xx_gongsi\u0026#39;@\u0026#39;127.0.0.1\u0026#39;; -- 刷新权限  FLUSH PRIVILEGES; -- 确认位点 记录下文件名以及位点 show master status; 从mysql\r#\r\r[mysqld] # skip-grant-tables 暂时注释了 容易引起 mysql服务启动后立马关闭 这个错误 # 设置3308端口 port=3308 # 自定义设置mysql的安装目录，即解压mysql压缩包的目录 # 切记此处一定要用双斜杠\\\\，单斜杠这里会出错。 basedir=D:\\CS\\databases\\mysql_8.027_3308_slave # 自定义设置mysql数据库的数据存放目录 datadir=D:\\CS\\databases\\mysql_8.027_3308_slave\\\\data # 允许最大连接数 max_connections=200 # 允许连接失败的次数，这是为了防止有人从该主机试图攻击数据库系统 max_connect_errors=10 # 服务端使用的字符集默认为UTF8 character-set-server=utf8mb4 # 创建新表时将使用的默认存储引擎 default-storage-engine=INNODB # 默认使用“mysql_native_password”插件认证 default_authentication_plugin=mysql_native_password sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION # 开启慢sql slow_query_log=ON # 慢sql存的地址 slow_query_log_file=D:\\CS\\databases\\mysql_8.027_3308_slave\\log\\slow.log # 会记录没有使用索引的查询sql,但前提是必须开启 slow_query_log=\u0026#39;ON\u0026#39; log-queries-not-using-indexes =on # 超过10秒则属于慢SQL,慢查询时间,这里为10秒,超过10秒会被记录 long_query_time=10 # 查询日志,开启对所有执行语句进行记录 general_log=on # 查询日志,存放位置 general_log_file=D:\\CS\\databases\\mysql_8.027_3308_slave\\log\\query.log # 查询日志，文件中的时间显示已系统时间为准 log_timestamps = SYSTEM server-id = 4 #屏蔽系统库同步 replicate_wild_ignore_table=mysql.% replicate_wild_ignore_table=information_schema.% replicate_wild_ignore_table=performance_schema.% replicate_wild_ignore_table=sys.% #设置需要同步的数据库 replicate_wild_do_table=chinese.% [mysql] # 设置mysql客户端默认字符集 default-character-set=utf8mb4 [client] # 设置mysql客户端连接服务端时默认使用的端口和默认字符集 port=3308 default-character-set=utf8mb4  命令  #先停止同步 STOP SLAVE; #修改从库指向到主库，使用上一步记录的文件名以及位点  CHANGE MASTER TO MASTER_HOST=\u0026#39;127.0.0.1\u0026#39;, MASTER_USER=\u0026#39;repl_xx_gongsi\u0026#39;, master_port = 3307, MASTER_PASSWORD=\u0026#39;xx_gongsi_master_123456\u0026#39;, MASTER_LOG_FILE=\u0026#39;mysql-bin.000003\u0026#39;, MASTER_LOG_POS=1099; #启动同步 START SLAVE; #查看从库状态Slave_IO_Runing和Slave_SQL_Runing都为Yes说明同步成功，如果不为Yes，请检查error_log，然后排查相关异常。 show slave status ; "}),a.add({id:269,href:'/life/docs/python/base/python_regex/',title:"Python RegEx",section:"python 基础学习",content:"RegEx 或正则表达式是形成搜索模式的字符序列。\nRegEx 可用于检查字符串是否包含指定的搜索模式\nRegEx 模块\r#\r\r导入 re 模块后，就可以开始使用正则表达式了\nRegEx 函数\r#\r\rre 模块提供了一组函数，允许我们检索字符串以进行匹配：\n   函数 描述     findall 返回包含所有匹配项的列表   search 如果字符串中的任意位置存在匹配，则返回 Match 对象   split 返回在每次匹配时拆分字符串的列表   sub 用字符串替换一个或多个匹配项    元字符\r#\r\r元字符是具有特殊含义的字符：\n   字符 描述 示例 TIY     [] 一组字符 \u0026ldquo;[a-m]\u0026rdquo; 试一试   \\ 示意特殊序列（也可用于转义特殊字符） \u0026ldquo;\\d\u0026rdquo; 试一试   . 任何字符（换行符除外） \u0026ldquo;he..o\u0026rdquo; 试一试   ^ 起始于 \u0026ldquo;^hello\u0026rdquo; 试一试   $ 结束于 \u0026ldquo;world$\u0026rdquo; 试一试   * 零次或多次出现 \u0026ldquo;aix*\u0026rdquo; 试一试   + 一次或多次出现 \u0026ldquo;aix+\u0026rdquo; 试一试   {} 确切地指定的出现次数 \u0026ldquo;al{2}\u0026rdquo; 试一试   | 两者任一 \u0026ldquo;falls stays\u0026rdquo;   () 捕获和分组      特殊序列\r#\r\r特殊序列指的是 \\ 后跟下表中的某个字符，拥有特殊含义：\n   字符 描述 示例 TIY     \\A 如果指定的字符位于字符串的开头，则返回匹配项 \u0026ldquo;\\AThe\u0026rdquo; 试一试   \\b 返回指定字符位于单词的开头或末尾的匹配项 r\u0026quot;\\bain\u0026quot; r\u0026quot;ain\\b\u0026quot; 试一试   \\B 返回指定字符存在的匹配项，但不在单词的开头（或结尾处） r\u0026quot;\\Bain\u0026quot; r\u0026quot;ain\\B\u0026quot; 试一试 试一试   \\d 返回字符串包含数字的匹配项（数字 0-9） \u0026ldquo;\\d\u0026rdquo; 试一试   \\D 返回字符串不包含数字的匹配项 \u0026ldquo;\\D\u0026rdquo; 试一试   \\s 返回字符串包含空白字符的匹配项 \u0026ldquo;\\s\u0026rdquo; 试一试   \\S 返回字符串不包含空白字符的匹配项 \u0026ldquo;\\S\u0026rdquo; 试一试   \\w 返回一个匹配项，其中字符串包含任何单词字符 （从 a 到 Z 的字符，从 0 到 9 的数字和下划线 _ 字符） \u0026ldquo;\\w\u0026rdquo; 试一试   \\W 返回一个匹配项，其中字符串不包含任何单词字符 \u0026ldquo;\\W\u0026rdquo; 试一试   \\Z 如果指定的字符位于字符串的末尾，则返回匹配项 \u0026ldquo;Spain\\Z\u0026rdquo; 试一试    集合（Set）\r#\r\r集合（Set）是一对方括号 [] 内的一组字符，具有特殊含义：\n   集合 描述 试一试     [arn] 返回一个匹配项，其中存在指定字符（a，r 或 n）之一 试一试   [a-n] 返回字母顺序 a 和 n 之间的任意小写字符匹配项 试一试   [^arn] 返回除 a、r 和 n 之外的任意字符的匹配项 试一试   [0123] 返回存在任何指定数字（0、1、2 或 3）的匹配项 试一试   [0-9] 返回 0 与 9 之间任意数字的匹配 试一试   [0-5][0-9] 返回介于 0 到 9 之间的任何数字的匹配项 试一试   [a-zA-Z] 返回字母顺序 a 和 z 之间的任何字符的匹配，小写或大写 试一试   [+] 在集合中，+、*、.、 、()、$、{} 没有特殊含义，因此 [+] 表示：返回字符串中任何 + 字符的匹配项    例子 模块\r#\r\r search() 函数 （仅仅是第一个查到的）  search() 函数搜索字符串中的匹配项，如果存在匹配则返回 Match 对象。\n如果有多个匹配，则仅返回首个匹配项\nsearch()会全文扫描，匹配整个字符串，直到找到第一个符合的，就返回第一个符合的\nimport re as reUtils txt1 = \u0026#34;China is a great country\u0026#34; result1 = reUtils.search(\u0026#34;^China.*country$\u0026#34;,txt1) print(result1.group()) print(result1.span()) print(result1.end()) print(result1.start()) print(len(txt1))  match函数 (必须从第一个开始)  re.match从字符串的起始位置匹配一个模式（从头开始匹配），如果不是起始位置匹配成功的话，match()返回none。\n函数语法：\n   参数 描述     pattern 匹配的正则表达式   string 要匹配的字符串   flags 标志位，用于控制正则表达式的匹配方式，如：是否区分大小写、多行匹配等。    import re as regexUtils print(regexUtils.match(\u0026#39;www\u0026#39;,\u0026#39;www.runoob.com\u0026#39;).span()) #在起始位置匹配 print(regexUtils.match(\u0026#39;www\u0026#39;,\u0026#39;www.runoob.com\u0026#39;).group()) print(regexUtils.match(\u0026#39;com\u0026#39;,\u0026#39;www.runoob.com\u0026#39;)) #不在起始位置匹配  findall函数  找到re匹配的所有字符串，返回一个列表\nimport re as regexUtils str1 = \u0026#34;2023年2月份，全国居民消费价格同比上涨1.0%。其中，城市上涨1.0%，农村上涨1.0%；食品价格上涨2.6%，非食品价格上涨0.6%；消费品价格上涨1.2%，服务价格上涨0.6%。1­­—2月平均，全国居民消费价格比上年同期上涨1.5%\u0026#34; list1 = regexUtils.findall(\u0026#34;\\\\d+\u0026#34;,str1) print(list1)  finditer函数 返回Match 列表  参数和findall一样\n# coding=UTF-8 # 解决 SyntaxError: Non-UTF-8 code starting with \u0026#39;\\xe7\u0026#39; in file import re as regexUtils str1 = \u0026#34;2月份，食品烟酒类价格同比上涨2.1%，影响CPI（居民消费价格指数）上涨约0.59个百分点。食品中，鲜果价格上涨8.5%，影响CPI上涨约0.18个百分点；蛋类价格上涨7.8%，影响CPI上涨约0.05个百分点；粮食价格上涨2.7%，影响CPI上涨约0.05个百分点；畜肉类价格上涨1.9%，影响CPI上涨约0.06个百分点，其中猪肉价格上涨3.9%，影响CPI上涨约0.05个百分点；水产品价格下降1.5%，影响CPI下降约0.03个百分点。\u0026#34; matches = regexUtils.finditer(\u0026#34;\\\\d+\u0026#34;,str1) for x in matches: print(x.group())  compile函数  compile()为预加载正则表达式，用于编译正则表达式，生成一个Pattern对象，供match()和search()两个函数使用。 语法格式为：\nre.compile(pattern[,flags]) 参数含义：\npattern：一个字符串形式的正则表达式 flags：可选，表示匹配模式，具体参数为如下：\n   re.l 忽略大小写     re.L 表示特殊字符集\\w,\\W,\\b,\\B,\\s,\\S，依赖于当前环境   re.M 多行模式   re.S 包含换行符在内的任意字符   re.U 表示特殊字符集\\w,\\W,\\b,\\B,\\d,\\D,\\s,\\S,依赖于Unicode字符属性数据库   re.X 为了增加可读性，忽略空格和#后面的注释    1.指标解释 居民消费价格指数（Consumer Price Index，简称CPI）是度量居民生活消费品和服务价格水平随着时间变动的相对数，综合反映居民购买的生活消费品和服务价格水平的变动情况。 2.统计范围 居民消费价格统计调查涵盖全国城乡居民生活消费的食品烟酒、衣着、居住、生活用品及服务、交通通信、教育文化娱乐、医疗保健、其他用品及服务等8大类、268个基本分类的商品与服务价格。 3.调查方法 采用抽样调查方法抽选确定调查网点，按照“定人、定点、定时”的原则，直接派人到调查网点或从互联网采集原始价格。数据来源于全国31个省（区、市）约500个市县、近10万家价格调查点，包括商场（店）、超市、农贸市场、服务网点和互联网电商等。 4.数据说明 由于“四舍五入”原因，有时会出现合计数据与分类数据高值或低值相同的情况。 # coding=UTF-8 # 解决 SyntaxError: Non-UTF-8 code starting with \u0026#39;\\xe7\u0026#39; in file import pathlib import re as regexUtils paths = (\u0026#39;file\u0026#39;, \u0026#39;Demo8.txt\u0026#39;) file1 = pathlib.Path.open(pathlib.Path.cwd().joinpath(*paths), encoding=\u0026#34;UTF-8\u0026#34;) list1 = file1.readlines() str1 = \u0026#34;\u0026#34;.join(list1) rule1 = \u0026#34;\\\\d+.....\u0026#34; compile1 = regexUtils.compile(rule1,regexUtils.X) matches = compile1.finditer(str1) # compile1.findall() # compile1.match() # compile1.search() # compile1.split() # compile1.sub() for x in matches: print(x.group())  sub() 函数   sub() 函数把匹配替换为选择的文本\n # coding=UTF-8 # 解决 SyntaxError: Non-UTF-8 code starting with \u0026#39;\\xe7\u0026#39; in file import pathlib import re as regexUtils import random str1 = \u0026#34;China is a great country\u0026#34; x = regexUtils.sub(\u0026#34;\\\\s\u0026#34;, str(random.randrange(1,1000)), str1) y = regexUtils.sub(\u0026#34;\\\\s\u0026#34;, \u0026#34;\u0026lt;-\u0026gt;\u0026#34;, str1) print(x) print(y)  split() 函数  # coding=UTF-8 # 解决 SyntaxError: Non-UTF-8 code starting with \u0026#39;\\xe7\u0026#39; in file import pathlib import re as regexUtils str1 = \u0026#34;\u0026#34;\u0026#34; 李杜诗篇万口传，至今已觉不新鲜。 出自清代：赵翼的《论诗五首》 满眼生机转化钧，天工人巧日争新。 预支五百年新意，到了千年又觉陈。 李杜诗篇万口传，至今已觉不新鲜。 江山代有才人出，各领风骚数百年。 只眼须凭自主张，纷纷艺苑漫雌黄。 矮人看戏何曾见，都是随人说短长。 少时学语苦难圆，只道工夫半未全。 到老始知非力取，三分人事七分天。 诗解穷人我未空，想因诗尚不曾工。 熊鱼自笑贪心甚，既要工诗又怕穷。 \u0026#34;\u0026#34;\u0026#34; list1 = regexUtils.split(\u0026#34;\\\\W\u0026#34;,str1) # print(list1) for ss in list1: print(ss) "}),a.add({id:270,href:'/life/docs/python/base/python_json/',title:"Python JSON",section:"python 基础学习",content:"JSON 是用于存储和交换数据的语法。\nJSON 是用 JavaScript 对象表示法（JavaScript object notation）编写的文本\n解析 JSON - 把 JSON 转换为 Python\r#\r\rimport json # 一些 JSON: x = \u0026#39;{ \u0026#34;name\u0026#34;:\u0026#34;Bill\u0026#34;, \u0026#34;age\u0026#34;:63, \u0026#34;city\u0026#34;:\u0026#34;Seatle\u0026#34;}\u0026#39; # 解析 x: y = json.loads(x) print(f\u0026#34;json 类型 {type(y)}\u0026#34;) print(y) 把 Python 转换为 JSON\r#\r\rimport json dict2 = {\u0026#39;name\u0026#39;:\u0026#39;李世民\u0026#39;,\u0026#39;age\u0026#39;:18} json1 = json.dumps(dict2) print(json1) "}),a.add({id:271,href:'/life/docs/python/base/python_string_formatting/',title:"Python 字符串格式化",section:"python 基础学习",content:"字符串 format()\r#\r\rformat() 方法允许您格式化字符串的选定部分。\n有时文本的一部分是你无法控制的，也许它们来自数据库或用户输入？\n要控制此类值，请在文本中添加占位符（花括号 {}），然后通过 format() 方法运行值：\n  {} 占位符好\n  简单例子\n  woollenSweater = \u0026#34;这件毛衣{}块钱!\u0026#34; print(woollenSweater.format(52)) # 这件毛衣52块钱! print(\u0026#34;这件毛衣{:.2f}块钱!\u0026#34;.format(52.34)) # 这件毛衣52.34块钱!  多个值  text1 = \u0026#34;{}创立了这个公司,一共花了{}年,是一个享誉世界的人\u0026#34; print(f\u0026#34;参数 李世民_4: {text1.format(\u0026#39;李世民\u0026#39;,4)}\u0026#34;) print(f\u0026#34;参数 朱元璋_22: {text1.format(\u0026#39;朱元璋\u0026#39;,22)}\u0026#34;) #参数 李世民_4: 李世民创立了这个公司,一共花了4年,是一个享誉世界的人 #参数 朱元璋_22: 朱元璋创立了这个公司,一共花了22年,是一个享誉世界的人 "}),a.add({id:272,href:'/life/docs/python/base/python_cmd_input/',title:"Python 命令行输入",section:"python 基础学习",content:"命令行输入 Python 允许命令行输入。\n这意味着我们能够要求用户输入。\nPython 3.6 中的方法与 Python 2.7 略有不同。\nPython 3.6 使用 input() 方法。\nPython 2.7 使用 raw_input() 方法\n 例子  # Python 3.6 print(\u0026#34;请输入您的姓名\u0026#34;) name = input() print(\u0026#34;请输入您的年龄\u0026#34;) age = input() print(f\u0026#34;您的姓名:{name} ; 您的年龄:{age}\u0026#34;) # 请输入您的姓名 # 张三 # 请输入您的年龄 # 25 # 您的姓名:张三 ; 您的年龄:25 "}),a.add({id:273,href:'/life/docs/%E8%84%9A%E6%9C%AC/vue%E8%84%9A%E6%89%8B%E6%9E%B6%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F/',title:"vue脚手架创建方式 ",section:"脚本",content:"第一种方式\r#\r\r   npm i -g @vue/cli-init or npm install @vue/cli-init@5.0.8 -g    D:\\IdeaProjects\\cycle\\study\\vuecli\\demoB\u0026gt;vue init webpack learnrouter ? Project name learnrouter ? Project description \u0026#39;这是一个vue路由器\u0026#39; ? Author zch ? Vue build runtime ? Install vue-router? Yes ? Use ESLint to lint your code? No ? Set up unit tests Yes ? Pick a test runner noTest ? Setup e2e tests with Nightwatch? Yes ? Should we run `npm install` for you after the project has been created? (recommended) npm vue-cli · Generated \u0026#34;learnrouter\u0026#34;. # Installing project dependencies ... # ======================== npm WARN deprecated extract-text-webpack-plugin@3.0.2: Deprecated. Please use https://github.com/webpack-contrib/mini-css-extract-plugin npm WARN deprecated html-webpack-plugin@2.30.1: out of support npm WARN deprecated browserslist@2.11.3: Browserslist 2 could fail on reading Browserslist \u0026gt;3.0 config used in other tools. npm WARN deprecated core-js@2.6.12: core-js@\u0026lt;3.3 is no longer maintained and not recommended for usage due to the number of issues. Because of the V8 engine whims, feature detection in old core-js versions could cause a slowdown up to 100x even if nothing is polyfilled. Please, upgrade your dependencies to the actual version of core-js. npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142 npm WARN deprecated uglify-es@3.3.9: support for ECMAScript is superseded by `uglify-js` as of v3.13.0 npm WARN deprecated bfj-node4@5.3.1: Switch to the `bfj` package for fixes and new features! npm WARN deprecated chokidar@2.1.8: Chokidar 2 will break on node v14+. Upgrade to chokidar 3 with 15x less dependencies. npm WARN deprecated har-validator@5.1.5: this library is no longer supported npm WARN deprecated mkdirp@0.5.1: Legacy versions of mkdirp are no longer supported. Please update to mkdirp 1.x. (Note that the API surface has changed to use Promises in 1.x.) npm WARN deprecated json3@3.3.2: Please use the native JSON object instead of JSON 3 npm WARN deprecated fsevents@1.2.13: fsevents 1 will break on node v14+ and could be using insecure binaries. Upgrade to fsevents 2. npm WARN deprecated browserslist@1.7.7: Browserslist 2 could fail on reading Browserslist \u0026gt;3.0 config used in other tools. npm WARN deprecated socks@1.1.10: If using 2.x branch, please upgrade to at least 2.1.6 to avoid a serious bug with socket data flow and an import issue introduced in 2.1.0 npm WARN deprecated querystring@0.2.0: The npm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated npm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated \u0026gt; chromedriver@2.46.0 install D:\\IdeaProjects\\cycle\\study\\vuecli\\demoB\\learnrouter\\node_modules\\chromedriver \u0026gt; node install.js Current existing ChromeDriver binary is unavailable, proceding with download and extraction. Downloading from file: https://chromedriver.storage.googleapis.com/2.46/chromedriver_win32.zip Saving to file: C:\\Users\\dell\\AppData\\Local\\Temp\\2.46\\chromedriver\\chromedriver_win32.zip Received 781K... Received 1568K... Received 2352K... Received 3134K... Received 3920K... Received 4523K total. Extracting zip contents Copying to target path D:\\IdeaProjects\\cycle\\study\\vuecli\\demoB\\learnrouter\\node_modules\\chromedriver\\lib\\chromedriver Done. ChromeDriver binary available at D:\\IdeaProjects\\cycle\\study\\vuecli\\demoB\\learnrouter\\node_modules\\chromedriver\\lib\\chromedriver\\chromedriver.exe \u0026gt; core-js@2.6.12 postinstall D:\\IdeaProjects\\cycle\\study\\vuecli\\demoB\\learnrouter\\node_modules\\core-js \u0026gt; node -e \u0026#34;try{require(\u0026#39;./postinstall\u0026#39;)}catch(e){}\u0026#34; Thank you for using core-js ( https://github.com/zloirock/core-js ) for polyfilling JavaScript standard library! The project needs your help! Please consider supporting of core-js on Open Collective or Patreon: \u0026gt; https://opencollective.com/core-js \u0026gt; https://www.patreon.com/zloirock Also, the author of core-js ( https://github.com/zloirock ) is looking for a good job -) \u0026gt; uglifyjs-webpack-plugin@0.4.6 postinstall D:\\IdeaProjects\\cycle\\study\\vuecli\\demoB\\learnrouter\\node_modules\\webpack\\node_modules\\uglifyjs-webpack-plugin \u0026gt; node lib/post_install.js npm notice created a lockfile as package-lock.json. You should commit this file. npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\\webpack-dev-server\\node_modules\\fsevents): npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\u0026#34;os\u0026#34;:\u0026#34;darwin\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;any\u0026#34;} (current: {\u0026#34;os\u0026#34;:\u0026#34;win32\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;x64\u0026#34;}) npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\\watchpack-chokidar2\\node_modules\\fsevents): npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\u0026#34;os\u0026#34;:\u0026#34;darwin\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;any\u0026#34;} (current: {\u0026#34;os\u0026#34;:\u0026#34;win32\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;x64\u0026#34;}) npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.3.2 (node_modules\\fsevents): npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {\u0026#34;os\u0026#34;:\u0026#34;darwin\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;any\u0026#34;} (current: {\u0026#34;os\u0026#34;:\u0026#34;win32\u0026#34;,\u0026#34;arch\u0026#34;:\u0026#34;x64\u0026#34;}) added 1406 packages from 1012 contributors in 64.416s 57 packages are looking for funding run `npm fund` for details # Project initialization finished! # ======================== To get started: cd learnrouter npm run dev Documentation can be found at https://vuejs-templates.github.io/webpack 第二种方式\r#\r\r npm install vue @vue/cli -g or npm install @vue/cli@5.0.3 -g  D:\\IdeaProjects\\cycle\\study\\vuecli\\demoC\u0026gt;vue create cli-test2 Vue CLI v4.5.13 ? Please pick a preset: Manually select features ? Check the features needed for your project: Choose Vue version, Babel, Router, CSS Pre-processors ? Choose a version of Vue.js that you want to start the project with 2.x ? Use history mode for router? (Requires proper server setup for index fallback in production) Yes ? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): Less ? Where do you prefer placing config for Babel, ESLint, etc.? In package.json ? Save this as a preset for future projects? Yes ? Save preset as: y � Preset y saved in C:\\Users\\dell\\.vuerc Vue CLI v4.5.13 ✨ Creating project in D:\\IdeaProjects\\cycle\\study\\vuecli\\demoC\\cli-test2. ⚙️ Installing CLI plugins. This might take a while... \u0026gt; core-js@3.16.1 postinstall D:\\IdeaProjects\\cycle\\study\\vuecli\\demoC\\cli-test2\\node_modules\\core-js \u0026gt; node -e \u0026#34;try{require(\u0026#39;./postinstall\u0026#39;)}catch(e){}\u0026#34; \u0026gt; ejs@2.7.4 postinstall D:\\IdeaProjects\\cycle\\study\\vuecli\\demoC\\cli-test2\\node_modules\\ejs \u0026gt; node ./postinstall.js added 1218 packages from 636 contributors in 51.798s 78 packages are looking for funding run `npm fund` for details � Invoking generators... � Installing additional dependencies... added 16 packages from 69 contributors in 5.772s 78 packages are looking for funding run `npm fund` for details ⚓ Running completion hooks... � Generating README.md... � Successfully created project cli-test2. � Get started with the following commands: $ cd cli-test2 $ npm run serve D:\\IdeaProjects\\cycle\\study\\vuecli\\demoC\u0026gt;cd cli-test2 D:\\IdeaProjects\\cycle\\study\\vuecli\\demoC\\cli-test2\u0026gt;npm run serve \u0026gt; cli-test2@0.1.0 serve D:\\IdeaProjects\\cycle\\study\\vuecli\\demoC\\cli-test2 \u0026gt; vue-cli-service serve INFO Starting development server... 98% after emitting CopyPlugin DONE Compiled successfully in 2258ms 下午9:46:24 App running at: - Local: http://localhost:8080/ - Network: http://192.168.31.246:8080/ Note that the development build is not optimized. To create a production build, run npm run build. "}),a.add({id:274,href:'/life/docs/python/base/math/',title:"python math",section:"python 基础学习",content:"math\r#\r\rmath 模块常量\r#\r\r   常量 描述     math.e 返回欧拉数 (2.7182\u0026hellip;)   math.inf 返回正无穷大浮点数   math.nan 返回一个浮点值 NaN (not a number)   math.pi π 一般指圆周率。 圆周率 PI (3.1415\u0026hellip;)   math.tau 数学常数 τ = 6.283185\u0026hellip;，精确到可用精度。Tau 是一个圆周常数，等于 2π，圆的周长与半径之比。    math 模块方法\r#\r\r   方法 描述     math.acos(x) 返回 x 的反余弦，结果范围在 0 到 pi 之间。   math.acosh(x) 返回 x 的反双曲余弦值。   math.asin(x) 返回 x 的反正弦值，结果范围在 -pi/2 到 pi/2 之间。   math.asinh(x) 返回 x 的反双曲正弦值。   math.atan(x) 返回 x 的反正切值，结果范围在 -pi/2 到 pi/2 之间。   math.atan2(y, x) 返回给定的 X 及 Y 坐标值的反正切值，结果是在 -pi 和 pi 之间。   math.atanh(x) 返回 x 的反双曲正切值。   math.ceil(x) 将 x 向上舍入到最接近的整数   math.comb(n, k) 返回不重复且无顺序地从 n 项中选择 k 项的方式总数。   math.copysign(x, y) 返回一个基于 x 的绝对值和 y 的符号的浮点数。   math.cos() 返回 x 弧度的余弦值。   math.cosh(x) 返回 x 的双曲余弦值。   math.degrees(x) 将角度 x 从弧度转换为度数。   math.dist(p, q) 返回 p 与 q 两点之间的欧几里得距离，以一个坐标序列（或可迭代对象）的形式给出。 两个点必须具有相同的维度。   math.erf(x) 返回一个数的误差函数   math.erfc(x) 返回 x 处的互补误差函数   math.exp(x) 返回 e 的 x 次幂，Ex， 其中 e = 2.718281\u0026hellip; 是自然对数的基数。   math.expm1() 返回 Ex - 1， e 的 x 次幂，Ex，其中 e = 2.718281\u0026hellip; 是自然对数的基数。这通常比 math.e ** x 或 pow(math.e, x) 更精确。   math.fabs(x) 返回 x 的绝对值。   math.factorial(x) 返回 x 的阶乘。 如果 x 不是整数或为负数时则将引发 ValueError。   math.floor() 将数字向下舍入到最接近的整数   math.fmod(x, y) 返回 x/y 的余数   math.frexp(x) 以 (m, e) 对的形式返回 x 的尾数和指数。 m 是一个浮点数， e 是一个整数，正好是 x == m * 2**e 。 如果 x 为零，则返回 (0.0, 0) ，否则返回 0.5 \u0026lt;= abs(m) \u0026lt; 1 。   math.fsum(iterable) 返回可迭代对象 (元组, 数组, 列表, 等)中的元素总和，是浮点值。   math.gamma(x) 返回 x 处的伽马函数值。   math.gcd() 返回给定的整数参数的最大公约数。   math.hypot() 返回欧几里得范数，sqrt(sum(x**2 for x in coordinates))。 这是从原点到坐标给定点的向量长度。   math.isclose(a,b) 检查两个值是否彼此接近，若 a 和 b 的值比较接近则返回 True，否则返回 False。。   math.isfinite(x) 判断 x 是否有限，如果 x 既不是无穷大也不是 NaN，则返回 True ，否则返回 False 。   math.isinf(x) 判断 x 是否是无穷大，如果 x 是正或负无穷大，则返回 True ，否则返回 False 。   math.isnan() 判断数字是否为 NaN，如果 x 是 NaN（不是数字），则返回 True ，否则返回 False 。   math.isqrt() 将平方根数向下舍入到最接近的整数   math.ldexp(x, i) 返回 x * (2**i) 。 这基本上是函数 math.frexp() 的反函数。   math.lgamma() 返回伽玛函数在 x 绝对值的自然对数。   math.log(x[, base]) 使用一个参数，返回 x 的自然对数（底为 e ）。   math.log10(x) 返回 x 底为 10 的对数。   math.log1p(x) 返回 1+x 的自然对数（以 e 为底）。   math.log2(x) 返回 x 以 2 为底的对数   math.perm(n, k=None) 返回不重复且有顺序地从 n 项中选择 k 项的方式总数。   math.pow(x, y) 将返回 x 的 y 次幂。   math.prod(iterable) 计算可迭代对象中所有元素的积。   math.radians(x) 将角度 x 从度数转换为弧度。   math.remainder(x, y) 返回 IEEE 754 风格的 x 除于 y 的余数。   math.sin(x) 返回 x 弧度的正弦值。   math.sinh(x) 返回 x 的双曲正弦值。   math.sqrt(x) 返回 x 的平方根。   math.tan(x) 返回 x 弧度的正切值。   math.tanh(x) 返回 x 的双曲正切值。   math.trunc(x) 返回 x 截断整数的部分，即返回整数部分，删除小数部分     平方根例子  print(math.pow(3,2)+math.pow(4,2)) print(math.pow(math.pow(3,2)+math.pow(4,2),0.5)) print(math.sqrt(math.pow(3,2)+math.pow(4,2))) statistics \u0026mdash; 数学统计函数\r#\r\r   方法 描述     statistics.harmonic_mean() 计算给定数据的调和平均值（中心位置）   statistics.mean() 计算给定数据的平均值（平均值）   statistics.median() 计算给定数据的中位数（中间值）   statistics.median_grouped() 计算分组连续数据的中位数   statistics.median_high() 计算给定数据的高中位数   statistics.median_low() 计算给定数据的低中位数   statistics.mode() 计算给定数值或名义数据的众数（集中趋势）   statistics.pstdev() 计算整个总体的标准差   statistics.stdev() 计算数据样本的标准差   statistics.pvariance() 计算整个总体的方差   statistics.variance() 根据数据样本计算方差    "}),a.add({id:275,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/pqpys8speb/',title:"每天保持心情的5句话",section:"自信",content:"每天保持好心情的5句话\r#\r\r  1:如果自己不伤害自己,这世界没有人能伤害我。面对一切外在风雨,我就对自己说一句话,我爱自己\n  2:身体和心灵是自己的,没有人能代替我照顾自己,往后余生,一定好好照顾自己,一心一意让自己快乐健康。\n  3:把时间浪费在美好的事情,比如读书 运动旅游。不要浪费在无聊的事情和人上。\n  4:允许自己做不到 做不好。完美不是苛责自己,而是接纳自己,然后,继续前行\n  5:不必讨好任何人,不要依赖任何人,自己和别人是平等的,抬起头生活。\n  假如你遇到难事 这个时候最应该做的就是什么都不做 这个时候要让自己内心平静下来 否则你会干出你事后后悔的事情来\r#\r\r"}),a.add({id:276,href:'/life/docs/%E8%84%9A%E6%9C%AC/javascript/',title:"javascript ",section:"脚本",content:"目录\r#\r\r ECMAScript 6  "}),a.add({id:277,href:'/life/docs/javadir/groovy/',title:"groovy 学习与使用 ",section:" Java技术栈",content:" Groovy是一种面向对象的动态类型语言，跟Java一样运行在JVM上。\n（注：给Java静态世界带来动态能力的语言）\n 目录\r#\r\r  groovy中对象的比较以及非空判断\n  groovy使用场景\n  groovy变量\n  groovy变量和数据类型加强\n  groovy基本概念\n  groovy学习\n  groovy数据类型\n  如何在groovy中获取以另一个变量命名的变量的值\n  "}),a.add({id:278,href:'/life/docs/javadir/tooldoc/',title:"Java公共库文档总结 ",section:" Java技术栈",content:"目录\r#\r\r Apache Commons 工具类介绍及简单使用 org.apache.commons.io.FilenameUtils 操作 dom4j 处理 xml Guava 基于java1.6的类库集合的扩展项目 常用 Console 调试命令 jsoup学习文档 spring工具 spring常用的工具类  "}),a.add({id:279,href:'/life/docs/python/base/annotation/',title:"Python 注解",section:"python 基础学习",content:"Python 注解\r#\r\r 注解是Python3.5引入的，通过注解可以提高我们代码的可读性，编译器会通过注解帮你做类型检查，避免一些错误\n "}),a.add({id:280,href:'/life/docs/databases/mysql_163%E8%AF%BE%E5%A0%82/%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82mysql_chapter1/',title:"MySQL数据库基础",section:"网易云课堂MySQL微专业学习笔记",content:"MySQL数据库基础\r#\r\r1.1-认识MySQL\r#\r\r什么是数据库\r#\r\r 计算机处理和存储的一切信息都是数据。 计算机系统中一种用于存取数据的程序。 一种：  计算机系统中有很多种能够存取数据的程序 它们各有特征和长处，有自己的适用范围。   存取：  能够保存数据避免丢失。 能够按照需求找到符合条件的数据。    为什么要使用数据库\r#\r\r数据库帮助我们解决一下数据存取难题：\n 较大数据量 网络控制 并发访问 高性能要求 事务控制 持久化和数据安全 查询数据需求逻辑复杂  数据库分类\r#\r\r  关系型数据库\n MySQL Oracle SQL Server PostgreSQL    非关系型数据库\n hadoop：存放大数据 mongoDB： 文档型数据库 redis：键值型数据库 Cassandra：分布式数据库    最显著的区别：是否使用结构化查询语句（SQL）\n为什么学习MySQL\r#\r\rMySQL：The world\u0026rsquo;s most popular open source database\n  最流行\n  开源\n  并不是最先进\n  前三强中唯一的开源数据库。\n  在互联网企业中占据绝对主流地位。\n  基于GPL协议开放源代码\n  社区版完全免费\n  代码允许自由的进行修改\n  易于学习：\n MySQL具备关系型数据库核心功能但是特性并不繁多。 架构设计上趋于精简。 非常适合新手学习关系型数据库，入门后可向其他数据库发展。    谁需要学习MySQL\r#\r\r 应用开发者 DBA  学习目标 - 应用开发者\r#\r\r有助于利用MySQL开发出性能优异的应用程序\n学习目标 - DBA\r#\r\r为企业提供可靠的数据库技术保障\n1.2-轻松安装MySQL\r#\r\r轻松部署MySQL\r#\r\r Windows下安装MySQL  图形化工具安装， MySQL Installer   Linux（Ubuntu）下安装MySQL  包管理安装，apt-get    Windows安装时在安装中间starting server时报错解决办法是手动进入服务管理把MySQL服务的登录方式改为用本地账户且允许与桌面交互\n在Ubuntu下可以用apt-cache search mysql-server查看可用的软件包\n使用sudo apt-get install mysql-server-5.6安装MySQL5.6\n启动与停止MySQL服务：\n# 启动 sudo /etc/init.d/mysql start # 或者 sudo service mysql start # 停止 sudo /etc/init.d/mysql stop # 或者 sudo service mysql stop # 重启 sudo service mysql restart # 查看状态 sudo /etc/init.d/mysql status 1.3-MySQL数据库连接\r#\r\r工作中常用到的三种连接方式\r#\r\r Java App + JDBC client（其他语言也有，比如Python的MySQLdb） MySQL client \u0026ldquo;MySQL\u0026rdquo; utility  使用应用程序连接MySQL\r#\r\r 应用程序使用驱动（connector/driver）客户端连接MySQL MySQL驱动程序涵盖各种主流语言  使用命令行连接MySQL\r#\r\r 安装MySQL客户端软件包 设置环境变量（Linux）  如何安装MySQL-client\r#\r\r 从软件源安装sudo apt-get install mysql-client  验证MySQL的安装\r#\r\rmysql -V\n命令行连接MySQL的两种方式\r#\r\r Socket连接（本地连接） TCP/IP连接（远程连接）  使用Socket连接\r#\r\r# 需要指定socket文件和用户名、密码 mysql -S/tmp/mysql.sock -uroot -p 远程连接\r#\r\r# 需要指定IP和端口 mysql -h127.0.0.1 -P3306 -uroot -p 本地连接VS远程连接\r#\r\r 本地连接只能在MySQL服务器上创建，常用作为MySQL状态检查，或程序和MySQL部署在一台机器上。 远程连接在MySQL服务器内外都能生效，适合应用服务器和MySQL部署在不同机器上的场景。  在Windows下用命令行连接MySQL\r#\r\rmysql -hlocalhost -P3306 -uroot -p 连接进入之后可以做什么\r#\r\r# 数据库状态 status; # 展示当前连接 show processlist; 使用命令行连接MySQL的注意事项\r#\r\r socket一般存储路径为：/tmp/mysql.sock  # 如果找不到文件可以通过tcp连接进来然后通过如下命令查找 show global variables like \u0026#39;socket\u0026#39;;  socket文件的权限必须是777 不要将密码直接输入在命令行里，存在安全风险！  命令行连接MySQL的特点\r#\r\r MySQL命令行里有丰富的扩展参数 DBA运维管理工具大多使用命令行方式 多台机器可以同时操作，对于DBA来说非常有效率  使用图形客户端连接MySQL\r#\r\r 常用的图形客户端工具  Navicat MySQLWorkBench    图形GUI工具的优势\r#\r\r 操作简单易于上手 支持图形化的导入、导出 可视化界面输出，输出可视化  总结\r#\r\r 应用程序需要使用API接口连接MySQL 开发工程师可以使用图形工具连接MySQL 命令行客户端才是DBA的最爱  1.4-SQL语言入门\r#\r\r关系型数据库\r#\r\r 数据存放在表中 表的每一行被称为记录 表中所有记录都有相同的字段（列）  SQL是什么\r#\r\r Structured Query Language 是一种特殊目的的编程语言，用于关系型数据库中的标准数据存取操作 与数据库进行沟通的钥匙  SQL语言与数据库\r#\r\r 用SQL创建表，定义表中的字段 用SQL向表中增加，删除，修改记录 用SQL从表中查询到想要的记录 用SQL操作数据库的一切  SQL语句的分类\r#\r\r   SQL语句的分类 大致用途     DDL(Data Definition Language) 创建表，删除表，修改表……   DML(Data Manipulation Language) 向表中插入记录，修改或者删除表中的记录……   select 根据条件从表中查询出想要得到的记录   DCL(Data Control Language) 控制数据库的访问权限等设置   TCL(Transaction Control Language) 控制事务进展     DDL  CREATE TABLE DROP TABLE ALTER TABLE   DML  SELECT FROM TABLE INSERT INTO TABLE UPDATE TABLE SET DELETE FROM TABLE   DCL  GRANT REVOKE   TCL  COMMIT ROLLBACK    example:\n# 查看当前有哪些数据库 show databases; # 使用名为test的数据库 use test; # 创建一张学生表 create table stu( id int(10), name varchar(20), age int(10), primary key(id)); # 每一张表都需要包含一个主键，主键唯一标识一条记录，唯一的字段，不可重复不能为空，通过`primary key`关键字来定义。 # 查看创建好的表 show create table stu; # 新加一个字段 alter table stu add column gender varchar(20); # 修改一个字段 alter table stu modify column gender varchar(40); # 删除一个字段 alter table stu drop column gender; # 删除表 drop table stu; # 查看当前数据库中的表 show tables; # 向表中插入数据 insert into stu(id,name,age) values(1,\u0026#39;pw\u0026#39;,28); # 插入全部字段时可以只写表名 insert into stu values(2,\u0026#39;nss\u0026#39;,29); # 查看刚才添加的数据,\u0026#34;*\u0026#34;代表查询全部字段 select * from stu; # 如果只想查询两个字段，则只写要查询的字段名 select name, age from stu; # 也可以根据某个条件进行查询，比如只查询id为1的记录 select name age from stu where id=1; # 更新语句 update stu set age=29 where id=1; # 删除表中的数据 delete from stu where id=1; 1.5-认识DBA\r#\r\r什么是DBA\r#\r\rDBA是数据库管理员，就像是足球队的守门员，是业务最后一道屏障，是业务稳定运行的基石，可以提供更畅快的用户体验\n为什么需要DBA\r#\r\r 小公司  没有专职DBA 但肯定有懂数据库的人   大公司  专职DBA 数据存储技术专家    互联网业务有以下严格要求：\n 高性能（数据库是重要的一环） 高可用（需要业务不中断的运行） 可扩展（支撑海量数据和业务，数据库拓展） 安全性（核心业务数据敏感）  没有DBA，就没有稳定的数据库，请求变慢，数据丢失，安全问题，用户投诉，无穷无尽\nDBA要做哪些工作\r#\r\r 基础运维工作  安装部署 监控 故障处理   安全运维工作  数据备份与恢复 安全访问、安全漏洞 审计   性能调优  数据库优化 容量评估、软硬件升级   开发支持工作  存储方案制定 数据库设计 数据库变更、SQL Review   流程与培训  数据库开发规范 运维流程标准化 业务培训    DBA需要哪些技能\r#\r\r 专业技能  数据库原理 Linux与Shell 计算机体系结构 网络原理 数据库系统与操作 服务器硬件 业务架构设计   软技能  责任心、执行力 坚韧、抗压 学习与沟通能力 正直、诚信 耐心，注重细节 分析能力 团队协作    DBA如何发展\r#\r\r 小公司or大公司 发展通道：  DBA -\u0026gt; 业务架构师 DBA -\u0026gt; 运维专家 DBA -\u0026gt; 数据库研发    小结\r#\r\r 认识DBA 管理好数据库 DBA工作很重要 专业技能与软技能并重 不错的发展前景 互联网公司很缺优秀的DBA  "}),a.add({id:281,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/talk_theme/girl/seiffjx8c7/',title:"和女孩聊天话题",section:"聊天话题",content:"认知聊天基础\r#\r\r 高情商的聊天，并不一定要学会固定的话术，学会揣摩对方的情绪，避免话术的客套，让双方都能发自内心的感受到舒服，这才是真正的\n  聊天前做好准备，要了解你的聊天对象喜欢什么，在意什么，忌讳什么；赞美，每个人都喜欢得到对方的认同，而赞美是最好的认同方式；找对方感兴趣的话题；倾听；表示交谈愉快。\n  社交方式有各种各样，最重要的是底层逻辑。聊天技巧很多,但是主要的核心，技巧、话术、都是辅助，核心是——让和你聊天的人感觉到舒服。聊天技巧包括情商，完全是可以通过后天提升的，无他为手熟尔，多聊多反思，终会有所收获。\n  1、聊天前做好准备  首先，你要了解你的聊天对象喜欢什么，在意什么，忌讳什么，这样才不会在聊天中出现尴尬。想要了解聊天对象的信息，可以问问他（她）周围要好的朋友，亲戚等。\n 2、赞美  每个人都喜欢得到对方的认同，而赞美是最好的认同方式。比如，他穿了一件很帅气的T恤，你可以说“哇，不知道是你衬托了这件衣服，还是衣服衬托了你”。\n 3、找对方感兴趣的话题  之前的准备，现在就有所大用了，你应该专找对方喜欢的话题来谈论，这样可以大大的提高对方对你的好感。\n 4、倾听  当看到对方说的滔滔不绝的时候，千万不要打断他，他正处于兴奋中，倾听也是一种很好的得到他人好感的方式。\n 5、表示交谈愉快  在聊天快结束时，不得不加一句“今天的谈话，我感到很愉快”\n一级话题\r#\r\r适用阶段：初始期（相识0~2周）\n  愉悦度：★★★☆☆\n  门槛度：☆☆☆☆☆\n  要点：先讲自己，再问对方\n这一阶段，聊天的核心目的不是拉进亲密度\n而在于建立基本好感➕消除女生对我们的防卫心态\n多数人对初次交流的目的是极度模糊的——没有想清楚我要在第一次聊天时达到什么目的\n因而容易进退失据\n不是放不开手脚，就是过分热络——共同的结局是尴尬收场、难有下文\n如果在第一阶段就冒冒失失地去聊有门槛度的话题\n大部分女生都不愿接茬\n该阶段，应当从如下话题入手\n 1，你好，我是xxx的xxx  “我是xxx”不足以给对方留下印象\n“我是xxx的xxx”属于异化表达，会引起对方的好奇心\n当然了，两个xxx绝对不是人名哈\n是方式／状态＋人名\n举例\n你好，我是那天被迫相亲但吃了不少还认识了你的xxx\n你好，我是那天说要加你结果真加了你的xxx\n你好，我是练习时长两年半的个人练习生蔡徐坤（狗头.jgp）\n诸如此类，灵活运用～\n 2，不要问对方“在干嘛”  要先主动分享当下状态，再去询问她的状态\n例如“我刚吃完饭 / 刚结束手头的工作，你呢？”\nps：很多学员在咨询中问到“为什么我要先分享我的状态”\n这里统一解答一下：\n不分享自身状态的情况下，直接询问对方的状态\n这样的行事态度，会显得我们很有窥探欲\n尽管男生们常常是无心之失——压根没意识到这回事\n但无心又如何呀？就算是是无心，女生也照样能感觉得到你的窥探欲\n在交往初期——也就是双方还不熟的阶段\n一旦给人留下窥探欲很旺、不怎么交代自己情况却老爱问三问四的印象\n是断然不会被纳入考虑范围的——连做备胎的资格都没有，就问你，绝不绝？\n接着继续⬇️\n 3，对方分享完她的状态后，不要因为急着接话去做评价  比如女生说“我正在吃饭呢~”\n大量男学员立马接一句“这么晚才吃饭啊！”\nnonono～\n男生思维下这是一种关心\n女生视角下这简直就聊不下去\n为什么呢？因为你已经对她做出了评价\n一来女生们很反感『刚认识的男生』评价她的生活\n起初她们接到评价时，只会觉得隐隐约约不舒服\n一旦次数多了，她们的内心活动直接就是——\n“大哥，你谁啊？对我说三道四？”\n二来是，既然你已经做出了评价\n那她下一句只能接受或拒绝评价\n而不管她的回复是“是啊/ 还好吧/ 不会吧/ 没有很晚啊”（接受or拒绝）\n你都会发现——我好像没话回了\n于是聊天开始一路跑尬\n所以，正确的做法是反客为主\n女生的回复涉及什么，你就扒拉什么\n她说自己还没吃饭 / 正准备吃饭 / 在吃饭 / 吃完饭\n那么我们就回复饮食相关话题，比如\n她：“我刚吃完午饭~”\n你：“我还没点餐，有没有什么推荐？”\n有的男生可能会好奇\n老师，我为什么不直接问她“你中午吃什么”呢？\n原因很简单——因为这会暴露我们的窥探欲和目的性\n属于下策\n而让她给你推荐菜色\n一来你能慢慢摸清她平时爱吃什么\n二来她本人也不会因为被问及隐私而感到尴尬或不快\n一举两得\n 4只是让你问菜，不是让你真的和她聊菜  不得不说\n很多男女学员一到聊天框前，脑子就不中用了\n整场聊天都像是在找浮木\n一旦找到一根浮木就死死抱住，连换一根都不敢\n而健康的聊天应该像你和你朋友那样\n从单位领导聊到996福报\n再聊到房价聊到韭菜最后聊到活什么活啊死了算了\n你看，是发散式的，是谈天说地的\n所以规范又高效的展开是这样的\n你：“我常吃xxx和xxxx，看来今天中午要改改口味了~”\n她：【哭笑】哈哈哈，偶尔换换口味也不错嘛~\n你：确实啊，我在大学期间变得很爱吃辣，偶尔换换口味能打开新世界的\n表达赞成＋分享自己的口味变迁\n点到为止，不要变成倾诉\n毕竟这一阶段，人家没打算倾听你（无兴趣➕无精力）\n不点到为止，而是大讲特讲，其实是暴露自己情商低\n接下来女生要么也分享自己的口味变迁史，要么问为什么\n如果是前者，你可以问一些小问题\n比如，“我是接触了四川火锅后才爱上吃辣的，你的口味转折点是哪一道菜？”\n如果是后者，那就要简略分享自己的口味变迁史，末了再加一个很空的观点\n比如\n“小时候是甜食爱好者，后来上了大学，室友都爱吃辣，大家常常一同吃火锅，慢慢地我就爱上火锅了，\n环境很大程度上会改变一个人\n会聊的女孩开始能接话＆反向分享自己\n而不会聊的女生，即使搭不上话\n也会觉得你蛮有内涵，不会很干、很空\nps：基础教学完毕，下面直接扔备选话题\n备选话题本质都是高安全度的引子\n核心是用引子去发散式聊\n 5 近期的天气  天气(喜欢or讨厌)\n→天气带来的不便/感受\n→去年这种天气下我在干什么等等等等\n 6 近期的时事热点  刚刚看到推送，说xxx（附截图）\n→表达浅层看法（不评价当事双方，仅评价事件本身）\n→你怎么看？\n 7 近期身边的偶然性事件  遇到狗狗/看到某某路段发生xxx事件等等\n 8 近期工作强度  有利于给她开个窗吐槽自己生活工作\n 9 实时社交动态分享  正和朋友吃饭/正在和朋友玩xxx/正在\u0026hellip;\u0026hellip;\n 10 爱好共享  倾听她＆让她了解你\n 11 生活习惯共享  不要挑太普通的习惯来共享，否则对方会觉得这很无聊\n找点和别人不一样的习惯去同她分享\n备选话题的本质是高安全度的引子\n优质交流的核心\n是利用合适的引子去发散式聊天\n另，初期忌查户口/问个不停却不分享自己\n为什么查户口式聊天会被女生们口诛笔伐？\n根源在于，查户口之前没有交户口\n交户口是个简单粗暴的说法\n往细了讲，就是给出自己的隐私，再去获取对方的隐私\n这一行为的作用是抵消女方在隐私被探取时的不安全感\n同时也能让女方感觉到被尊重\n运用到具体聊天当中，就是先说自己，再问对方\n二级话题\r#\r\r适用阶段：关键期（相识1~2个月）\n愉悦度：★★★★☆\n门槛度：★★☆☆☆\n操作要点：高低频交错、同步情绪\n在二阶段，聊天的目的不再是消除防卫\n而是拉近距离+自我展示\n以拉近距离为目的，话题选择面非常广\n主要集中在回忆共享＆观点交流二个大面\n以自我展示为目的时，不能单独摘话题\n打个比方\n没头没尾的发自家五菱宏光的方向盘给她，这就是不对的\n这会吸引到嫌富爱贫的女孩（可是世界上没有这样的女孩啊hhh\n极端点说\n炫得过于直接，哪怕经济实力碾压对方，终究还是落了下乘\n直接展示经济实力，你喜欢的女孩会有不适感\n所以自我展示，要结合话题来做（下面会举例）\n话不多说，直接给话题！\n 话题1，童年  非常重要，必须要聊\n一旦聊及童年，女生给出的信息都非常重要（可以知悉她的亲密模式、长期心理状态）\n但童年作为一个信息量极大的内容\n不宜直接去聊\n如果你直接问她：\n“那个，你童年过得咋样啊”\n人家就这表情\n正确的做法是自己撬开一个口子\n这种零食我小时候常吃”\n“对，记得小时候好像就有看过”\n“你这样一说我才想起来，我小时候老爸还经常说我xxx”\n再来就是，要选择最有可能产生共鸣的、相对愉悦的话题去聊\n例如小学放学后的回家路上\n童年干过的糗事(偷用爸爸妈妈东西等等\n回外婆家跟表兄弟们玩耍的快乐等等，都是合适的话题\n另:在她打字的时候，不要急着接话\n只要足够沉默，对方都会不自觉地多说一些\n且女生一旦开始大段打字叙事，就会很烦对面频频接话，这点切记\n 话题2,学生时代  同样要聊，但不宜聊多\n因为学生时代最好放在暧昧期升温用\n放在这里属于砍柴用牛刀\n所以最好是“随便提一嘴”\n除非女生自己聊嗨起来，否则不要在这个阶段刻意做引导\n 短期目标  注意，是短期目标，不是梦想／理想\n考证、考级、考驾照、瘦八斤等等，这些就算作短期目标\n讨论短期目标的好处有两个\n一是方便观察对方的近期状态 有目标意味着近期会更忙一些，对方的上进心也更好一些\n二是培养衍生话题\n自我剖白会为她带来一定的愉悦感\n可以问她为什么会有这个目标，在她向你阐述原因时，你就提供了一定的情绪价值;\n也可以关心她的目标进度，加重自己在她生活中的参与感;\n如果你本身已经达成了该目标，还可以给她提供一定的帮助（实质价值）\n 双方爱好  聊到爱好时，无需因为两个人爱好不一致而害怕\n事实上，哪怕二人爱好完全不相同也不打紧\n爱好方面，只要不涉及观念冲突就ok\n打个比方，一位热爱赌博，另一位喜欢攒钱，那么这两人的观念冲突就很大\n至于一位喜欢读书、宅家，另一位热爱户外运动这种情况，初期反而更容易互相吸引到彼此\n交流爱好好处有二\n一是明确对方自我取悦的方式\n二是借爱好以言明自身之性情\n尽量选择爱好中比较小众的一项作为展示 不宜言之过甚（对方一般不会对你的爱好有太大兴趣） 如果没有小众爱好，就选择利他性较高的一样活动充作爱好（如爱做家务、爱读书、爱攒钱等等\n如若没有爱好，建议先培养爱好。\n另，如果爱好是健身，不要一言不合发肌肉照\n年纪小的女孩会被吓到\n青涩的女生对于男性性张力，有害怕➕抵触这两层情绪\n对她们来讲，肌肉带来的「攻击力印象」＞魅力\n25+的女生：可能会对你的好身材产生一点想法\n但更多的女生，还是会不由自主地觉得“这男好像有点油腻？”\n收集话题1\r#\r\r  聊热剧，比如说最近热映的电影，热播的网剧，女生都是喜欢追剧的（当然也不能一概而论，但大概率是这样的哈），比如说前一段很火的《庆余年》。\n  聊热点问题，比如说最近的热点资讯或者大家都在关注的东西。这样能保证最起码你们能有的聊不至于冷场哈，像《奇葩说》或者《吐槽大会》这种话题性的节目就是不错的选择。\n  聊宠物，是不是经常会在校园里看到有女孩子给流浪狗或者流浪猫喂东西，所以说女生还是比较喜欢这些小萌物的。而且你如果和女生聊宠物的话，会给人一种比较有爱心的感觉。\n  聊爱好，这里不是让你聊自己的爱好哈，当然如果你和女生有爱好的交集是最好的。切忌巴拉巴拉说一堆自己喜欢但是女生无感的话题。如果不知道女孩子爱好是啥，去看看朋友圈，问问她的同学最好是闺蜜，做好功课啊喂……\n  聊美食，路边摊烧烤啥的还是和你的兄弟盟聊吧，女生还是比较喜欢甜点、奶茶之类的小零食。附近你去过什么比较好的奶茶店，蛋糕店等等，可以和她分享一下。\n  不聊毫无连续性的话题\r#\r\r「你吃饭了没？」，回答肯定就是吃了或者没吃啊……\n「你多大了？」，回答肯定是永远十八岁啊，而且你知道岁数也没用啊……\n「有男朋友吗？」，咋地还想捷足先登吗……\n收集话题2\r#\r\r 1.聊旅行  如何聊？你可以先讲一个你之前旅游时发生的故事，比如发生过的有意思的事或者一些经验。比如 你可以说之前你去旅游，路过一段盘山公路，司机是个老司机，开车技术一流，但是把全车人都 搞吐了，你是不知道，那车上的味道真是\u0026hellip;（你先开口分享，打开自己的心扉）\n然后问她最近几年去过认为最美的地方，让她主动和你分享。或者看她朋友圈分享的去过的地方然 后找她感兴趣的话题聊。这个时候就要打开对方的心扉了，让对方讲自己的经历，当她愿意说的越 多的时候，你的成功率越高。\n  聊吃喝玩乐    电影，美食，音乐，或者参加过的一些活动。同理，先聊自己，再引导对方聊她自己。如果对方放 不开或者不知道聊什么，你一定要主动去引导，这就需要你提前通过她在朋友圈，微博等社交网络 中发现她的兴趣所在，然后找她感兴趣的话题聊\n 3 聊你的朋友，她的朋友  同理，你自己先聊一个关于你的朋友有趣的事，比如你的一个朋友曾经在学校全体师生会议时，抢 过了校长的话筒，当着全校人的面表白\u0026hellip;.. 然后引导她多分享，多说话。\n  聊你至今为止，做过最疯狂，最炫酷或者最有趣的事    比如你跳过伞，海里潜过水，蹦极，见过你的偶像，单人旅行过等，然后引导她分享自己的故事。\n  聊彼此癖好，怪癖    如果前面的聊天铺垫的不错，成功吸引了女生和你聊天的兴趣，那么你才能聊这个话题 因为这个话题比较隐私，如果女生愿意和你分享，可以瞬间拉近关系\n  问女生的看法和建议    为什么要问女生的看法？因为这样会让她觉得自己很特别，有价值\n比如男女感情问题，你有个朋友和前女友还保持联系，问她怎么看，通过这个问题她的回答，可以看她的三观是否和你相符\n 7.聊她的激情/人生  这个问题主要是要了解什么事清让她有动力，她的价值观，人生，事业，兴趣。如果有共同的价值观，你俩会瞬间产生心的共鸣。\n最关键的是这种话题她可能更想说，会滔滔不绝，特别是对内向的女生。\n参考\n"}),a.add({id:282,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/esxjjecmn5/',title:"PDCA循环工作法",section:"自信",content:"一、PDCA循环理念\r#\r\rPDCA的4个阶段： ①P计划：设定目标、提出课题、制定KPI指标、找出解决方法； ②D实施：行动措施、制定KDI指标、落实为具体行动； ③C检查：检验KGI指标、检查KDI指标、检查KPI指标、找出成功和失败； ④A调整：找出调整方案、为下一个循环做准备。\n二、计划的8个步骤\r#\r\r①定量化目标管理； ②找出目标与现状差距； ③制定课题，提出解决方案； ④课题排序，锁定三个主要课题； ⑤课题的KPI指标化； ⑥制定解决方案，达成KPI指标； ⑦将解决方案按优先顺序排序； ⑧将计划可视化。\n三、执行的5个步骤\r#\r\r①将解决方案转换为行动措施； ②将行动措施排除优先顺序，确定重点； ③量化行动措施KDI； ④将行动措施落实为“TODO”，待办任务； ⑤逐步推进具体任务；\n四、反思的5个步骤\r#\r\r①确定KGI达成率； ②确定KPI达成率； ③确定KDI达成率； ④查明失败原因； ⑤分析成功经验；\n五、调整的3个步骤\r#\r\r①根据验证结果提出解决方案；\n②将调整方案排除优先顺序；\n③连接下一轮PDCA循环。\n"}),a.add({id:283,href:'/life/docs/python/base/container/',title:"Python 容器问题",section:"python 基础学习",content:"容器\r#\r\r 元组转换为集合  强制转换成字符串\r#\r\r  str()\n  将列表（list）转为字符串\n  var1 = [1, 2, 3, 4] var2 = str(var1) print(type(var2)) # \u0026lt;class \u0026#39;str\u0026#39;\u0026gt; print(repr(var2)) # \u0026#39;[1, 2, 3, 4]\u0026#39;  注：repr() 函数将对象转化为供解释器读取的形式，返回一个对象的字符串格式  import random str1 = str(random.randrange(1,2000)) print(str1) print(repr(str1)) \u0026#34;\u0026#34;\u0026#34; 230 \u0026#39;230\u0026#39; \u0026#34;\u0026#34;\u0026#34;  将元组（tuple）转为字符串  var1 = (1, 2, 3, 4) var2 = str(var1) print(type(var2)) # \u0026lt;class \u0026#39;str\u0026#39;\u0026gt; print(repr(var2)) # \u0026#39;(1, 2, 3, 4)\u0026#39;s  将集合（set）转为字符串  var1 = {1, 2, 3} var2 = str(var1) print(type(var2)) # \u0026lt;class \u0026#39;str\u0026#39;\u0026gt; print(repr(var2)) # \u0026#39;{1, 2, 3}\u0026#39;  将字典（dict）转为字符串  var1 = {\u0026#34;name\u0026#34;: \u0026#34;tom\u0026#34;, \u0026#34;age\u0026#34;:18} var2 = str(var1) print(type(var2)) # \u0026lt;class \u0026#39;str\u0026#39;\u0026gt; print(repr(var2)) # \u0026#34;{\u0026#39;name\u0026#39;: \u0026#39;tom\u0026#39;, \u0026#39;age\u0026#39;: 18}\u0026#34;  将数字（number）转为字符串  var1 = 100 var2 = str(var1) print(type(var2)) # \u0026lt;class \u0026#39;str\u0026#39;\u0026gt; print(repr(var2)) # \u0026#39;100\u0026#39;  将布尔（bool）转为字符串  var1 = True var2 = str(var1) print(type(var2)) # \u0026lt;class \u0026#39;str\u0026#39;\u0026gt; print(repr(var2)) # \u0026#39;True\u0026#39; 总结： str() 函数可以将所有的数据类型转为字符串，在当前的数据类型两边加上引号\n强制转换成列表\r#\r\r list()   将字符串（str）转为列表  var1 = \u0026#34;Hello\u0026#34; var2 = list(var1) print(var2) # [\u0026#39;H\u0026#39;, \u0026#39;e\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;o\u0026#39;] print(type(var2)) # \u0026lt;class \u0026#39;list\u0026#39;\u0026gt;  将元组（tuple）转为列表  var1 = (2, 3, 4) var2 = list(var1) print(var2) # [2, 3, 4] print(type(var2)) # \u0026lt;class \u0026#39;list\u0026#39;\u0026gt;  将集合（set）转为列表  var1 = {\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c\u0026#34;} var2 = list(var1) print(var2) # [\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;] print(type(var2)) # \u0026lt;class \u0026#39;list\u0026#39;\u0026gt;  将字典（dict）转为列表  var1 = {\u0026#34;aa\u0026#34;: 1, \u0026#34;bb\u0026#34;: 2, \u0026#34;cc\u0026#34;: 3} var2 = list(var1) # 将字典中的键（key）转为列表，不包括值（value） print(var2) # [\u0026#39;aa\u0026#39;, \u0026#39;bb\u0026#39;, \u0026#39;cc\u0026#39;] print(type(var2)) # \u0026lt;class \u0026#39;list\u0026#39;\u0026gt; 强制转换成元组\r#\r\r tuple()   将字符串（str）转为元组  var1 = \u0026#34;hello\u0026#34; var2 = tuple(var1) print(type(var2)) # \u0026lt;class \u0026#39;tuple\u0026#39;\u0026gt; print(repr(var2)) # (\u0026#39;h\u0026#39;, \u0026#39;e\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;o\u0026#39;) print(var2) # (\u0026#39;h\u0026#39;, \u0026#39;e\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;o\u0026#39;)  将列表（list）转为元组  var1 = [\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c\u0026#34;] var2 = tuple(var1) print(type(var2)) # \u0026lt;class \u0026#39;tuple\u0026#39;\u0026gt; print(repr(var2)) # (\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;)  将集合（set）转为元组  var1 = {1, 2, 3, 4} var2 = tuple(var1) print(type(var2)) # \u0026lt;class \u0026#39;tuple\u0026#39;\u0026gt; print(repr(var2)) # (1, 2, 3, 4)  将字典（dict）转为元组  var1 = {\u0026#34;a\u0026#34;: 1, \u0026#34;b\u0026#34;: 2, \u0026#34;c\u0026#34;: 3} var2 = tuple(var1) print(type(var2)) # \u0026lt;class \u0026#39;tuple\u0026#39;\u0026gt; # 将字典中的键（key）转为元组，不包括值（value） print(repr(var2)) # (\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;) 强制转换成集合\r#\r\r  set()\n  将字符串（str）转为集合\n  var1 = \u0026#34;你好啊，啊 \u0026#34; var2 = set(var1) print(type(var2)) # \u0026lt;class \u0026#39;set\u0026#39;\u0026gt; print(repr(var2)) # {\u0026#39;你\u0026#39;, \u0026#39;，\u0026#39;, \u0026#39;好\u0026#39;, \u0026#39; \u0026#39;, \u0026#39;啊\u0026#39;}  将列表（list）转为集合  var1 = [1, 2, 3, 1, 4, 2] var2 = set(var1) print(type(var2)) # \u0026lt;class \u0026#39;set\u0026#39;\u0026gt; print(repr(var2)) # {1, 2, 3, 4}  将元组转为（tuple）集合  var1 = (1, 2, 3, 1) var2 = set(var1) print(type(var2)) # \u0026lt;class \u0026#39;set\u0026#39;\u0026gt; print(repr(var2)) # {1, 2, 3}  将字典（dict）转为集合  var1 = {\u0026#34;name\u0026#34;: \u0026#34;tom\u0026#34;, \u0026#34;age\u0026#34;: 20} var2 = set(var1) print(type(var2)) # \u0026lt;class \u0026#39;set\u0026#39;\u0026gt; # 将字典中的键（key）转为集合，不包括值（value） print(repr(var2)) # {\u0026#39;name\u0026#39;, \u0026#39;age\u0026#39;} 强制转换成字典\r#\r\r要求: 必须是等长的二级容器，并且里面的元素个数只能是2个\n  dict()\n  外层是列表，里层是列表或者元组\n  list1 = [[\u0026#34;a\u0026#34;, 2], [\u0026#34;b\u0026#34;, 3]] dict1 = dict(list1) print(dict1) # {\u0026#39;a\u0026#39;: 2, \u0026#39;b\u0026#39;: 3} print(type(dict1)) # \u0026lt;class \u0026#39;dict\u0026#39;\u0026gt;  外层是元组，里层是列表或元组  tup1 = ((\u0026#34;a\u0026#34;, 2), (\u0026#34;b\u0026#34;, 3)) dict1 = dict(tup1) print(dict1) # {\u0026#39;a\u0026#39;: 2, \u0026#39;b\u0026#39;: 3} print(type(dict1)) # \u0026lt;class \u0026#39;dict\u0026#39;\u0026gt;  外层是集合，里层是列表或元组  set1 = {(\u0026#34;a\u0026#34;, 2), (\u0026#34;b\u0026#34;, 3)} dict1 = dict(set1) print(dict1) # {\u0026#39;a\u0026#39;: 2, \u0026#39;b\u0026#39;: 3} print(type(dict1)) # \u0026lt;class \u0026#39;dict\u0026#39;\u0026gt; 总结\r#\r\r运算符\r#\r\r   运算符 支持的容器类型     +（合并） 字符串、列表、元组   *（复制） 字符串、列表、元组   in（元素是否存在） 字符串、列表、元组、字典   not in（元素是否不存在） 字符串、列表、元组、字典    str1 = \u0026#39;aaa\u0026#39; str2 = \u0026#39;bbb\u0026#39; tuple1 = (10, 20) tuple2 = (\u0026#39;ccc\u0026#39;, \u0026#39;ddd\u0026#39;) list1 = [10, 20] list2 = [\u0026#39;iii\u0026#39;, \u0026#39;jjj\u0026#39;] dict1 = {\u0026#39;name\u0026#39;: \u0026#39;YYQX\u0026#39;} dict2 = {\u0026#39;age\u0026#39;: 20} print(str1 + str2) print(tuple2 + tuple1) print(list1 + list2) print(str1 * 3) print(tuple2 * 3) print(list2 * 3) print(\u0026#39;a\u0026#39; in str1) print(\u0026#39;a\u0026#39; not in str1) print(\u0026#39;name\u0026#39; in dict1) print(\u0026#39;age\u0026#39; in dict2) # 结果 \u0026#34;\u0026#34;\u0026#34; D:\\CS\\python_venv\\my_venv\\Scripts\\python.exe D:\\pythonProjects\\moduleProject\\container\\Demo24.py aaabbb (\u0026#39;ccc\u0026#39;, \u0026#39;ddd\u0026#39;, 10, 20) [10, 20, \u0026#39;iii\u0026#39;, \u0026#39;jjj\u0026#39;] aaaaaaaaa (\u0026#39;ccc\u0026#39;, \u0026#39;ddd\u0026#39;, \u0026#39;ccc\u0026#39;, \u0026#39;ddd\u0026#39;, \u0026#39;ccc\u0026#39;, \u0026#39;ddd\u0026#39;) [\u0026#39;iii\u0026#39;, \u0026#39;jjj\u0026#39;, \u0026#39;iii\u0026#39;, \u0026#39;jjj\u0026#39;, \u0026#39;iii\u0026#39;, \u0026#39;jjj\u0026#39;] True False True True Process finished with exit code 0 \u0026#34;\u0026#34;\u0026#34; 公共方法\r#\r\r   函数 描述     len() 计算容器中元素个数   del或del() 删除   max() 返回容器中元素最大值   min() 返回容器中元素最小值   range(start,end,step) 生成从start到end的数字，步长为step，供for循环使用(range()生成的序列不包含end数字)   enumerate() 函数用于将一个可遍历的数据对象（如列表、元组和字符串）组合为一个索引序列，同时列出数据和数据下标，一般用在for循环当中    str1 = \u0026#39;abcd\u0026#39; list1 = [10, 20, 30, 40, 50] tuple1 = (10, 20, 30, 40, 50) set1 = {10, 20, 30, 40, 50} dict1 = {\u0026#39;name\u0026#39;: \u0026#39;YYQX\u0026#39;, \u0026#39;age\u0026#39;: 18} print(len(str1)) print(len(list1)) print(len(tuple1)) print(len(set1)) print(len(dict1)) # 结果 \u0026#34;\u0026#34;\u0026#34; D:\\CS\\python_venv\\my_venv\\Scripts\\python.exe D:\\pythonProjects\\moduleProject\\container\\Demo25.py 4 5 5 5 2 \u0026#34;\u0026#34;\u0026#34; 转换\r#\r\r1 tuple() 作用：将某个序列转换成元组\n2 list() 作用：将某个序列转换成列表\n3 set() 作用：将某个序列转换成集合\n4 dict() 作用：将二值性数据快速转化为字典\n5 str()\n字符串与列表转化\n"}),a.add({id:284,href:'/life/docs/javadir/middleware/',title:"中间件 ",section:" Java技术栈",content:"目录\r#\r\r Redis 学习与使用 nginx 学习与使用 testng 学习与使用 mycat 学习与使用 uml 学习与使用 elasticsearch 学习与使用  "}),a.add({id:285,href:'/life/docs/databases/mysql_163%E8%AF%BE%E5%A0%82/%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82mysql_chapter2/',title:"MySQL数据库对象与应用",section:"网易云课堂MySQL微专业学习笔记",content:"MySQL数据库对象与应用\r#\r\r2.1-MySQL数据类型\r#\r\rNumber不止一种\r#\r\r 整形 浮点型  整形\r#\r\r INT SMALLINT MEDIUMINT BIGINT     type Storage Minumun Value Maximum Value      (Bytes) (Signed/Unsigned) (Signed/Unsigned)   TINYINT 1 -128 127     0 255   SMALLINT 2 -32768 32767     0 65535   MEDIUMINT 3 -8388608 8388607     0 16777215   INT 4 -2147483648 2147483647     0 4294967295   BIGINT 8 -9223372036854775808 9223372036854775807     0 18446744073709551615    老生常谈的问题\r#\r\rint(11) VS int(21) 存储空间，还是存储范围有区别？\n答案是：两者完全一样，只是在显示的时候补全0的位数不一样。\n可以通过下面的例子来验证：\ncreate table t(a int(11) zerofill, b int(21) zerofill); insert into t values (1, 1); select * from t; MySQL默认是不带0补全的。\n只是在一些特殊情况下两者显示有区别，其本质完全一样。\n浮点型\r#\r\r FLOAT(M, D) DOUBLE(M, D)     属性 存储空间 精度 精确性     Float 4 bytes 单精度 非精确   Double 8 bytes 双精度 比Float精度高    精度丢失问题\r#\r\r 精度丢失  一个例子：\ncreate table t(a int(11), b float(7, 4)); insert into t values (2, 123.12345); select * from t; 定点数-更精确的数字类型\r#\r\r DECIMAL  高精度的数据类型，常用来存储交易相关的数据 DECIMAL(M,N).M代表总精度，N代表小数点右侧的位数（标度） 1 \u0026lt; M \u0026lt; 254, 0 \u0026lt; N \u0026lt; 60; 存储空间变长    性别、省份信息\r#\r\r一般使用tinyint、char(1)、enum类型。\n经验之谈\r#\r\r 存储性别、省份、类型等分类信息时选择TINYINT或者ENUM BIGINT存储空间更大，INT和BIGINT之间通常选择BIGINT 交易等高精度数据选择使用DECIMAL  存储用户名的属性\r#\r\r CHAR VARCHAR TEXT  CAHR与VARCHAR\r#\r\r CHAR和VARCHAR存储的单位都是字符 CHAR存储定长，容易造成空间的浪费 VARCHAR存储变长，节省存储空间  字符与字节的区别\r#\r\r   编码\\输入字符串 网易 netease     gbk(双字节) varchar(2)/4 bytes varchar(7)/7 bytes   utf8(三字节) varchar(2)/6 bytes varchar(7)/7 bytes   utf8mb4(四字节) varchar(2) ? varchar(7)/7 bytes    对于utf8mb4号称占用四字节但是并不绝对。如果在utf8可以覆盖到的范围则仍然占用3字节。\nutf8mb4最有优势的应用场景是用于存储emoji表情\nemoji表情\r#\r\r MySQL版本 \u0026gt; 5.5.3 JDBC驱动版本 \u0026gt; 5.1.13 库和表的编码设为utf8mb4  TEXT与CHAR和VARCHAR的区别\r#\r\r CHAR和VARCHAR存储单位为字符 TEXT存储单位为字节，总大小为65535字节，约为64KB CHAR数据类型最大为255字符 VARCHAR数据类型为变长存储，可以超过255个字符 TEXT在MySQL内部大多存储格式为溢出页，效率不如CHAR  一个例子：\ncreate table t (a char(256)); create table t (a varchar(256)); 存储头像\r#\r\r BLOB BINARY  性能太差，不推荐\n经验之谈\r#\r\r CHAR与VARCHAR定义的长度是字符长度不是字节长度 存储字符串推荐使用VARCHAR(N),N尽量小 虽然数据库可以存储二进制数据，但是性能低下，不要使用数据库存储文件音频等二进制数据  存储生日信息\r#\r\r DATE TIME DATETIME TIMESTAMP BIGINT  时间类型的区别在哪里\r#\r\r  存储空间上的区别\n DATE三字节，如：2015-05-01 TIME三字节，如：11:12:00 TIMESTAMP，如：2015-05-01 11::12:00 DATETIME八字节，如：2015-05-01 11::12:00    存储精度的区别\n DATE精确到年月日 TIME精确到小时分钟和秒 TIMESTAMP、DATETIME都包含上述两者    TIMESTAMP VS DATETIME\r#\r\r 存储范围的区别  TIMESTAMP存储范围：1970-01-01 00::00:01 to 2038-01-19 03:14:07 DATETIME的存储范围：1000-01-01 00:00:00 to 9999-12-31 23:59:59    MySQL在5.6.4版本之后，TimeStamp和DateTime支持到微妙\n 字段类型与市区的关联关系  TIMESTAMP会根据系统时区进行转换，DATETIME则不会    字段类型和时区的关系\r#\r\r 国际化的系统  一个例子：\ncreate table test (a datetime, b timestamp); select now(); insert into test values (now(), now()); select * from test; set time_zone = \u0026#39;+00:00\u0026#39;; select * from test; BIGINT如何存储时间类型\r#\r\r 应用程序将时间转换为数字类型  2.2-MySQL数据对象\r#\r\rMySQL常见的数据对象有哪些\r#\r\r DataBase/Schema Table Index View/Trigger/Function/Procedure  库、表、行层级关系\r#\r\r 一个DataBase对应一个Schema 一个Schema包含一个或多个表 一个表里面包含一个或多个字段 一个表里包含一条或多条记录 一个表包含一个或多个索引  多DataBase用途\r#\r\r 业务隔离 资源隔离  表上有哪些常用的数据对象\r#\r\r 索引 约束 视图、触发器、函数、存储过程  什么是数据库索引\r#\r\r 读书的时候如何快速定位某一章节  查找书籍目录 在自己喜欢的章节加书签，直接定位   索引就是数据库中的数据的目录（索引和数据是分开存储的）  索引和数据是两个对象 索引主要是用来提高数据库的查询效率 数据库中数据变更同样需要同步索引数据的变更    如何创建索引（一）\r#\r\rCREATE [UNIQUE|FULLTEXT|SPATIAL] INDEX index_name [index_type] ON tbl_name (index_col_name,...) [index_option] [algorithm_option | lock_option] ... index_col_name: col_name [(length)] [ASC | DESC] index_type: USING {BTREE | HASH} 如何创建索引（二）\r#\r\rALTER [IGNORE] TABLE tbl_name [alter_specification [, alter_specification] ...] [partition_options] alter_specification: table_options | ADD [COLUMN] col_name column_definition [FIRST | AFTER col_name] ADD [COLUMN] (col_name column_definition,...) ADD {INDEX|KEY} [index_name] [index_type] (index_col_name,...) [index_option] ... | ADD [CONSTRAINT [symbol]] PRIMARY KEY [index_type] (index_col_name,...) [index_option] ... | ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] 约束\r#\r\r 生活中的约束有哪些  每个人的指纹信息必须唯一 每个人的身份证要求唯一 网上购物需要先登录才能下单   唯一约束  对一张表的某个字段或者某几个字段设置唯一键约束，保证在这个表里对应的数据必须唯一，如：用户ID、手机号、身份证等。    创建唯一约束\r#\r\r 唯一约束是一种特殊的索引 唯一约束可以是一个或者多个字段 唯一约束可以在创建表的时候建好，也可以后面再补上 主键也是一种唯一约束  唯一约束\r#\r\r以如下这张表为例\nCREATE TABLE `order` ( `id` int(10) unsigned NOT NULL AUTO_INCREMENT, `orderid` int(10) unsigned NOT NULL, `bookid` int(10) unsigned NOT NULL DEFAULT \u0026#39;0\u0026#39;, `userid` int(10) unsigned NOT NULL DEFAULT \u0026#39;0\u0026#39;, `number` tinyint(3) unsigned NOT NULL DEFAULT \u0026#39;0\u0026#39;, `address` varchar(128) NOT NULL DEFAULT \u0026#39;\u0026#39;, `postcode` varchar(128) NOT NULL DEFAULT \u0026#39;\u0026#39;, `orderdate` datetime NOT NULL DEFAULT \u0026#39;0000-00-00 00:00:00\u0026#39;, `status` tinyint(3) unsigned zerofill DEFAULT \u0026#39;000\u0026#39;, PRIMARY KEY (`id`), UNIQUE KEY `idx_orderid` (`orderid`), UNIQUE KEY `idx_uid_orderid` (`userid`, `orderid`), KEY `bookid` (`bookid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8  索引有哪些  主键索引 ID 单键索引 orderid 单键索引 bookid 组合索引 (userid + orderid)   唯一约束有哪些  主键约束 (ID) 单键唯一索引 (orderid) 组合唯一索引 (userid + orderid)    添加唯一约束\r#\r\r 添加主键  alter table `order` add primary key (id);   添加唯一索引  alter table `order` add unique key idx_uk_orderid (orderid);    外键约束\r#\r\r 外键指两张表的数据通过某种条件关联起来  创建外键约束\r#\r\r 将用户表和订单表通过外键关联起来  alter table `order` add CONSTRAINT constraint_uid FOREIGN KEY (userid) REFERENCES user(userid);   使用外键的注意事项  必须是INNODB表，Myisam和其他引擎不支持外键 相互约束的字段类型必须要求一样 主表的约束字段要求有索引 约束名称必须要唯一，即使不在一张表上    View\r#\r\r 产品需求  假如有其他部门的同事想查询我们数据库里的数据，但是我们并不想暴露表结构，并且只提供给他们部分数据    View的作用\r#\r\r 视图将一组查询语句构成的结果集，是一种虚拟结构，并不是实际数据 视图能简化数据库的访问，能够将多个查询语句结构化为一个虚拟结构 视图可以隐藏数据库后端表结构，提高数据库安全性 视图也是一种权限管理，只对用户提供部分数据  创建View\r#\r\r 创建已完成订单的视图  create view order_view as select * from `order` where status=1;    Trigger\r#\r\r 产品需求  随着客户个人等级的提升， 系统需要自动更新用户的积分，其中一共有两张表，分别为：用户信息表和积分表   Trigger俗称触发器，指可以在数据写入表A之前或者之后可以做一些其他动作 使用Trigger在每次更新用户表的时候出发更新积分表  除此之外还有哪些\r#\r\r Function Procedure  2.3-MySQL权限管理\r#\r\r连接MySQL的必要条件\r#\r\r 网络要通畅 用户名和密码要正确 数据库需要加IP白名单 更细粒度的验证（库、表、列权限类型等等）  数据有哪些权限\r#\r\rshow privileges命令可以查看全部权限\n权限粒度\r#\r\r Data Privileges  DATA: SELECT, INSERT, UPDATE, DELETE   Definition Privileges  DataBase: CREATE, ALTER, DROP Table: CREATE, ALTER, DROP VIEW/FUNCTION/TRIGGER/PROCEDURE: CREATE, ALTER, DROP   Administrator Privileges  Shutdown DataBase Replication Slave Replication Client File Privilege    MySQL赋权操作\r#\r\rGRANT priv_type [(column_list)] [, priv_type [column_list]] ... ON [object_type] priv_level TO user_specification [, user_specification] ... [REQUIRE {NONE | ssl_option [[AND] ssl_option] ...}] [WITH with_option ...] GRANT PROXY ON user_specification TO user_specification [, user_specification] ... [WITH GRANT OPTION] 如何新建一个用户并赋权\r#\r\r 使用MySQL自带的命令  CREATE USER 'netease'@'localhost' IDENTIFIED BY 'netease163'; GRANT SELECT ON *.* TO 'netease'@'localhost' WITH GRANT OPTION;    其他方法\r#\r\r 更改数据库记录  首先向User表里面插入一条记录，根据自己的需要选择是否向db和table_pirv表插入记录 执行flush privileges命令，让权限信息生效    更简单的办法\r#\r\r GRANT语句会判断是否存在该用户，如果不存在则新建  GRANT SELECT ON *.* TO 'NETEASE'@'localhost' IDENTIFIED BY 'netease163' WITH GRANT OPTION;    查看用户的权限信息\r#\r\r 查看当前用户的权限  show grants;   查看其它用户的权限  show grants for netease@'localhost';    如何更改用户的权限\r#\r\r 回收不需要的权限  revoke select on *.* from netease@'localhost';   重新赋权  grant insert on *.* to netease@'localhost';    如何更改用户密码\r#\r\r 用新密码，grant语句重新授权 更改数据库记录，Update User表的Password字段  注意：用这种办法，更改完需要flush privileges刷新权限信息，不推荐    删除用户\r#\r\rDROP USER user [, user] ... With Grant Option\r#\r\r 允许被授予权利的人把这个权利授予其他的人  MySQL权限信息存储结构\r#\r\r MySQL权限信息是存在数据库表中 MySQL账号对应的密码也加密存储在数据库表中 每一种权限类型在元数据里都是枚举类型，表明是否有该权限  有哪些权限相关的表\r#\r\r user db table_pirv columns_pirv host  权限验证流程\r#\r\r查询时从user-\u0026gt;db-\u0026gt;table_pirv-\u0026gt;columns_pirv依次验证，如果通过则执行查询。\n小结\r#\r\r MySQL权限信息都是以数据记录的形式存储在数据库的表中。 MySQL的权限验证相比网站登录多了白名单环节，并且粒度更细，可以精确到表和字段。  MySQL权限上有哪些问题\r#\r\r 使用Binary二进制安装管理用户没有设置密码 MySQL默认的test库不受权限控制，存在安全风险  mysql_secure_installation\r#\r\r You can set a Password for root accounts. You can remove root accounts that are accessible from outside the localhost. You can remove anonymous-user accounts. You can remove the test database.  小结\r#\r\r 权限相关的操作不要直接操作表，统一使用MySQL命令。 使用二进制安装MySQL安装后，需要重置管理用户(root)的密码。 线上数据库不要留test库  实践课：数据库对象\r#\r\r何为表结构设计\r#\r\r 表结构设计需要在正式进行开发之前完成 根据产品需求将复杂的业务模型抽象出来  设计表的时候需要注意哪些\r#\r\r 理解各个表的依赖关系 理解各个表的功能特点  字段之间的约束、索引 字段类型、字段长度    收集表属性\r#\r\r 昵称 生日 性别 手机号码 住宅号码 邮编 住宅地址 注册地址 登录IP 上一次登录时间 邮件地址  理解表的功能特点——数据用途\r#\r\rcreate table tb_account( account_id int not null auto_increment primary key, nick_name varchar(20), true_name varchar(20), sex char(1), mail_address varchar(50), phone1 varchar(20) not null, phone2 varchar(20), password varchar(30) not null, create_time datetime, account_state tinyint, last_login_time datetime, last_login_ip varchar(20) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 create table tb_goods( good_id bigint not null auto_increment primary key, goods_name varchar(100) not null, pic_url varchar(500) not null, store_quantity int not null, goods_note varchar(4096), producer varchar(500), category_id int not null ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 create table tb_goods_category( category_id int not null auto_increment primary key, category_level smallint not null, category_name varchar(500), upper_category_id int not null ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 create table tb_order( order_id bigint not null auto_increment primary key, account_id int not null, create_time datetime, order_amount decimal(12,2), order_state tinyint, update_time datetime, order_ip varchar(20), pay_method varchar(20), user_notes varchar(500) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 create table tb_order_item( order_item_id bigint not null auto_increment primary key, order_id bigint not null, goods_id bigint not null, goods_quantity int not null, goods_amount decimal(12,2), uique key uk_order_goods(order_id, goods_id) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 数据类型——命名规范\r#\r\r 所有表名，字段名全部使用小写字母 不同业务，表名使用不同前缀区分。 生成环境表名字段名要有实际意义 单个字段尽量使用字段全名；多个字段之间用下划线分隔  字段设计规范\r#\r\r 字段类型选择，尽量选择能满足应用要求的最小数据类型 尽量使用整形代替字符型。整形在字段长度、索引大小等方面开销小效率更高，如邮编字段，手机号码等 注释，每个字段必须以comment语句给出字段的作用 经常访问的大字段需要单独放到一张表中，避免降低sql效率，图片、电影等大文件数据禁止存数据库 新业务统一建议使用utf8mb4字符集  用户赋权\r#\r\r 理解用户到底需要什么权限  普通用户只有数据读写权限 系统管理员具有super权限   权限粒度要做到尽可能的细  普通用户不要设置with grant option属性 权限粒度：系统层面\u0026gt;库层面\u0026gt;表层面\u0026gt;字段层面   禁止简单密码  线上密码要求随机    2.4-SQL语言进阶\r#\r\r本课程涉及建表SQL\n-- ---------------------------- -- Table structure for `play_fav` -- ---------------------------- DROP TABLE IF EXISTS `play_fav`; CREATE TABLE `play_fav` ( `userid` bigint(20) NOT NULL COMMENT \u0026#39;收藏用户id\u0026#39;, `play_id` bigint(20) NOT NULL COMMENT \u0026#39;歌单id\u0026#39;, `createtime` bigint(20) NOT NULL COMMENT \u0026#39;收藏时间\u0026#39;, `status` int(11) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;状态，是否删除\u0026#39;, PRIMARY KEY (`play_id`,`userid`), KEY `IDX_USERID` (`userid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=\u0026#39;歌单收藏表\u0026#39;; -- ---------------------------- -- Records of play_fav -- ---------------------------- INSERT INTO play_fav VALUES (\u0026#39;2\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO play_fav VALUES (\u0026#39;116\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;1430223383\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO play_fav VALUES (\u0026#39;143\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO play_fav VALUES (\u0026#39;165\u0026#39;, \u0026#39;2\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO play_fav VALUES (\u0026#39;170\u0026#39;, \u0026#39;3\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO play_fav VALUES (\u0026#39;185\u0026#39;, \u0026#39;3\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO play_fav VALUES (\u0026#39;170\u0026#39;, \u0026#39;4\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO play_fav VALUES (\u0026#39;170\u0026#39;, \u0026#39;5\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;); -- ---------------------------- -- Table structure for `play_list` -- ---------------------------- DROP TABLE IF EXISTS `play_list`; CREATE TABLE `play_list` ( `id` bigint(20) NOT NULL COMMENT \u0026#39;主键\u0026#39;, `play_name` varchar(255) DEFAULT NULL COMMENT \u0026#39;歌单名字\u0026#39;, `userid` bigint(20) NOT NULL COMMENT \u0026#39;歌单作者账号id\u0026#39;, `createtime` bigint(20) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;歌单创建时间\u0026#39;, `updatetime` bigint(20) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;歌单更新时间\u0026#39;, `bookedcount` bigint(20) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;歌单订阅人数\u0026#39;, `trackcount` int(11) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;歌曲的数量\u0026#39;, `status` int(11) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;状态,是否删除\u0026#39;, PRIMARY KEY (`id`), KEY `IDX_CreateTime` (`createtime`), KEY `IDX_UID_CTIME` (`userid`,`createtime`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=\u0026#39;歌单\u0026#39;; -- ---------------------------- -- Records of play_list -- ---------------------------- INSERT INTO play_list VALUES (\u0026#39;1\u0026#39;, \u0026#39;老男孩\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;1430223383\u0026#39;, \u0026#39;1430223383\u0026#39;, \u0026#39;5\u0026#39;, \u0026#39;6\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO play_list VALUES (\u0026#39;2\u0026#39;, \u0026#39;情歌王子\u0026#39;, \u0026#39;3\u0026#39;, \u0026#39;1430223384\u0026#39;, \u0026#39;1430223384\u0026#39;, \u0026#39;7\u0026#39;, \u0026#39;3\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO play_list VALUES (\u0026#39;3\u0026#39;, \u0026#39;每日歌曲推荐\u0026#39;, \u0026#39;5\u0026#39;, \u0026#39;1430223385\u0026#39;, \u0026#39;1430223385\u0026#39;, \u0026#39;2\u0026#39;, \u0026#39;4\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO play_list VALUES (\u0026#39;4\u0026#39;, \u0026#39;山河水\u0026#39;, \u0026#39;2\u0026#39;, \u0026#39;1430223386\u0026#39;, \u0026#39;1430223386\u0026#39;, \u0026#39;5\u0026#39;, null, \u0026#39;0\u0026#39;); INSERT INTO play_list VALUES (\u0026#39;5\u0026#39;, \u0026#39;李荣浩\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;1430223387\u0026#39;, \u0026#39;1430223387\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;10\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO play_list VALUES (\u0026#39;6\u0026#39;, \u0026#39;情深深\u0026#39;, \u0026#39;5\u0026#39;, \u0026#39;1430223388\u0026#39;, \u0026#39;1430223389\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;1\u0026#39;); -- ---------------------------- -- Table structure for `song_list` -- ---------------------------- DROP TABLE IF EXISTS `song_list`; CREATE TABLE `song_list` ( `id` bigint(20) NOT NULL COMMENT \u0026#39;主键\u0026#39;, `song_name` varchar(255) NOT NULL COMMENT \u0026#39;歌曲名\u0026#39;, `artist` varchar(255) NOT NULL COMMENT \u0026#39;艺术节\u0026#39;, `createtime` bigint(20) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;歌曲创建时间\u0026#39;, `updatetime` bigint(20) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;歌曲更新时间\u0026#39;, `album` varchar(255) DEFAULT NULL COMMENT \u0026#39;专辑\u0026#39;, `playcount` int(11) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;点播次数\u0026#39;, `status` int(11) DEFAULT \u0026#39;0\u0026#39; COMMENT \u0026#39;状态,是否删除\u0026#39;, PRIMARY KEY (`id`), KEY `IDX_artist` (`artist`), KEY `IDX_album` (`album`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=\u0026#39;歌曲列表\u0026#39;; -- ---------------------------- -- Records of song_list -- ---------------------------- INSERT INTO song_list VALUES (\u0026#39;1\u0026#39;, \u0026#39;Good Lovin\\\u0026#39; Gone Bad\u0026#39;, \u0026#39;Bad Company\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;Straight Shooter\u0026#39;, \u0026#39;453\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO song_list VALUES (\u0026#39;2\u0026#39;, \u0026#39;Weep No More\u0026#39;, \u0026#39;Bad Company\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;Straight Shooter\u0026#39;, \u0026#39;280\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO song_list VALUES (\u0026#39;3\u0026#39;, \u0026#39;Shooting Star\u0026#39;, \u0026#39;Bad Company\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;Straight Shooter\u0026#39;, \u0026#39;530\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO song_list VALUES (\u0026#39;4\u0026#39;, \u0026#39;大象\u0026#39;, \u0026#39;李志\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;1701\u0026#39;, \u0026#39;560\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO song_list VALUES (\u0026#39;5\u0026#39;, \u0026#39;定西\u0026#39;, \u0026#39;李志\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;1701\u0026#39;, \u0026#39;1023\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO song_list VALUES (\u0026#39;6\u0026#39;, \u0026#39;红雪莲\u0026#39;, \u0026#39;洪启\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;红雪莲\u0026#39;, \u0026#39;220\u0026#39;, \u0026#39;0\u0026#39;); INSERT INTO song_list VALUES (\u0026#39;7\u0026#39;, \u0026#39;风柜来的人\u0026#39;, \u0026#39;李宗盛\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;作品李宗盛\u0026#39;, \u0026#39;566\u0026#39;, \u0026#39;0\u0026#39;); -- ---------------------------- -- Table structure for `stu` -- ---------------------------- DROP TABLE IF EXISTS `stu`; CREATE TABLE `stu` ( `id` int(10) NOT NULL DEFAULT \u0026#39;0\u0026#39;, `name` varchar(20) DEFAULT NULL, `age` int(10) DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=latin1; -- ---------------------------- -- Records of stu -- ---------------------------- -- ---------------------------- -- Table structure for `tbl_proc_test` -- ---------------------------- DROP TABLE IF EXISTS `tbl_proc_test`; CREATE TABLE `tbl_proc_test` ( `id` int(11) NOT NULL AUTO_INCREMENT, `num` int(11) DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of tbl_proc_test -- ---------------------------- INSERT INTO tbl_proc_test VALUES (\u0026#39;11\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;12\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;13\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;14\u0026#39;, \u0026#39;24\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;15\u0026#39;, \u0026#39;120\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;16\u0026#39;, \u0026#39;720\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;17\u0026#39;, \u0026#39;5040\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;18\u0026#39;, \u0026#39;40320\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;19\u0026#39;, \u0026#39;362880\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;20\u0026#39;, \u0026#39;3628800\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;21\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;22\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;23\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;24\u0026#39;, \u0026#39;24\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;25\u0026#39;, \u0026#39;1\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;26\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;27\u0026#39;, \u0026#39;6\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;28\u0026#39;, \u0026#39;24\u0026#39;); INSERT INTO tbl_proc_test VALUES (\u0026#39;29\u0026#39;, \u0026#39;120\u0026#39;); -- ---------------------------- -- Table structure for `tbl_test1` -- ---------------------------- DROP TABLE IF EXISTS `tbl_test1`; CREATE TABLE `tbl_test1` ( `user` varchar(255) NOT NULL COMMENT \u0026#39;主键\u0026#39;, `key` varchar(255) NOT NULL, `value` varchar(255) NOT NULL, PRIMARY KEY (`user`,`key`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=\u0026#39;行列转换测试\u0026#39;; -- ---------------------------- -- Records of tbl_test1 -- ---------------------------- INSERT INTO tbl_test1 VALUES (\u0026#39;li\u0026#39;, \u0026#39;age\u0026#39;, \u0026#39;18\u0026#39;); INSERT INTO tbl_test1 VALUES (\u0026#39;li\u0026#39;, \u0026#39;dep\u0026#39;, \u0026#39;2\u0026#39;); INSERT INTO tbl_test1 VALUES (\u0026#39;li\u0026#39;, \u0026#39;sex\u0026#39;, \u0026#39;male\u0026#39;); INSERT INTO tbl_test1 VALUES (\u0026#39;sun\u0026#39;, \u0026#39;age\u0026#39;, \u0026#39;44\u0026#39;); INSERT INTO tbl_test1 VALUES (\u0026#39;sun\u0026#39;, \u0026#39;dep\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO tbl_test1 VALUES (\u0026#39;sun\u0026#39;, \u0026#39;sex\u0026#39;, \u0026#39;female\u0026#39;); INSERT INTO tbl_test1 VALUES (\u0026#39;wang\u0026#39;, \u0026#39;age\u0026#39;, \u0026#39;20\u0026#39;); INSERT INTO tbl_test1 VALUES (\u0026#39;wang\u0026#39;, \u0026#39;dep\u0026#39;, \u0026#39;3\u0026#39;); INSERT INTO tbl_test1 VALUES (\u0026#39;wang\u0026#39;, \u0026#39;sex\u0026#39;, \u0026#39;male\u0026#39;); -- ---------------------------- -- Procedure structure for `proc_test1` -- ---------------------------- DROP PROCEDURE IF EXISTS `proc_test1`; DELIMITER ;; CREATE DEFINER=`root` PROCEDURE `proc_test1`(IN total INT,OUT res INT) BEGIN DECLARE i INT; SET i = 1; SET res = 1; IF total \u0026lt;= 0 THEN SET total = 1; END IF; WHILE i \u0026lt;= total DO SET res = res * i; INSERT INTO tbl_proc_test(num) VALUES (res); SET i = i + 1; END WHILE; END ;; DELIMITER ; 说明\r#\r\r 本课程介绍以MySQL SQL语法为基础，不同数据库SQL语法存在差异，并未完全遵照ANSI标准。 本课程结合一个实际项目（云音乐），介绍各种SQL语言在实际应用中如何实现业务功能。  SQL进阶语法——order by\r#\r\r场景1：歌单按时间排序\n-- 查看全部歌单 select * from play_list; -- 按创建时间排序 select * from play_list order by createtime; -- MySQL默认升序，如果按降序排列，则使用如下语句。 select * from play_list order by createtime desc; -- 也可以按照多个字段来排序 select * from play_list order by bookedcount, trackcount; SQL进阶语法——distinct\r#\r\r场景2：统计云音乐创建歌单的用户\n-- 有重复 select userid from play_list; -- 去重 select distinct userid from play_list; -- 多个字段 select distinct userid, play_name from play_list;  distinct用于返回唯一不同的值 可以返回多列的唯一组合 底层实现使用排序，如果数据量大会消耗较多的IO和CPU  SQL进阶语法——group by\r#\r\r场景3-1：统计云音乐创建歌单的用户列表和每人创建歌单的数量。\n-- 每个用户歌单的最大订阅数 select userid, max(bookedcount) from play_list group by userid; -- 每个用户歌单的数量 select userid, count(*) from play_list group by userid;  group by 根据单列或多列对数据进行分组，通常结合聚合函数使用，如count(*).  SQL进阶语法——group by having\r#\r\r场景3-2：统计云音乐创建歌单的用户列表和每人创建歌单的数量，并且只显示歌单数量排序大于等于2的用户\nselect userid, count(*) from play_list group by userid having count(*) \u0026gt;= 2;  having 是对结果进行过滤  SQL进阶语法-like\nselect * from play_list where play_name like \u0026#39;%男孩%\u0026#39;;    通配符 描述     % 代替一个或多个字符   _ 代替单个字符   [charlist] 中括号中的任何一个字符   [^charlist] 或者 [!charlist] 不在中括号中的任何单一字符     除了百分号在最右面的情况以外，他会对这个表中所有的记录进行一次查询匹配，而没办法使用索引，效率较低。大表中需要慎用like。可以使用全文检索的手段。  SQL进阶语法-limit, offset\r#\r\r场景4：查询一个月内创建歌单（从第6行开始显示10条记录）\nselect * from play_list where (createtime between 1427791323 and 1430383307) limit 10 offset 6;  offset后的值不建议太大，需要消耗的IO较大  case when\r#\r\r case when 实现类似编程语言的if else功能，可以对SQL的输出结果进行选择判断。  场景5：对于未录入歌曲的歌单(trackcount = null)，输出结果时歌曲数返回0.\nselect case when play_name, trackcount is null then 0 else trackcount end from play_list; select相关进阶语法\r#\r\rSELECT [DISTINCT] select_expr [, select_expr ...] [FROM table_references [WHERE where_condition] [GROUP BY {col_name | expr | position} [ASC | DESC], ... [WITH ROLLUP]] [HAVING where_condition] [ORDER BY {col_name | expr | position} [ASC | DESC], ...] [LIMIT { [offset, ] row_count | row_count OFFSET offset}] [FOR UPDATE | LOCK IN SHARE MODE]] 连接-Join\r#\r\r连接的作用是用一个SQL语句把多个表中相互关联的数据查出来\n场景6：查询收藏“老男孩”歌单的用户列表\nselect * from play_list, play_fav where play_list.id=play_fav.play_id; select play_fav.userid from play_list, play_fav where play_list.id=play_fav.play_id and play_list.play_name=\u0026#39;老男孩\u0026#39;; -- 另一种写法 select f.userid from play_list lst join play_fav f on lst.id=f.play_id where lst.play_name = \u0026#39;老男孩\u0026#39;; 子查询\r#\r\r MySQL还有另一种写法，可以实现同样的功能。  select userid from play_fav where play_id=(select id from play_list where play_name = \u0026#39;老男孩\u0026#39;); 子查询：内层查询的结果作为外层的比较条件。一般子查询都可以转换成连接，推荐使用连接。\n 不利于MySQL的查询优化器进行优化，可能存在性能问题 连接的实现是嵌套循环，选择一个驱动表，遍历驱动表，查询内层表，依次循环。驱动表会至少查询一边，如果有索引等，内层表可以非常快，查询优化器会选择数据小的表作为驱动表。 子查询由人为规定驱动表和内层表  连接- left Join\r#\r\rselect lst.play_name from play_list lst left join play_fav f on lst.id = f.play_id where f.play_id is null;  LEFT JOIN从左表(play_list)返回所有的行，即使在右表中(play_fav)中没有匹配的行。 与LEFT JOIN相对应的有RIGHT JOIN关键字，会从右表那里返回所有的行，即使在左表中没有匹配的行。  场景7：查询出没有用户收藏的歌单\nSQL进阶语法-union\r#\r\r场景8：老板想看创建和收藏歌单的所有用户，查询play_list和play_fav两表中所有的userid\nselect userid from play_list union select userid from play_fav; -- 默认会去重， 不想去重的话使用union all代替union。 DML进阶语法\r#\r\r 多值插入： insert into table values(\u0026hellip;.),(\u0026hellip;.)  可以一次插入多行数据，减少与数据库的交互提高效率 eg： insert into A values(4, 33), (5, 33);   覆盖插入： replace into table values (\u0026hellip;.)  可以简化业务逻辑的判断   忽略插入： insert ignore into table value (\u0026hellip;.)  可以简化业务逻辑的判断   查询插入： insert into table_a select * from table_b  常用于导表操作   insert主键重复则update  INSERT INTO TABLE tbl VALUES (id, col1, col2) ON DUPLICATE KEY UPDATE col2=....; eg: insert into A values(2, 40) on duplicate key update age=40; 可以简化前端业务逻辑的判断   连表update  A表：id, age B表：id, name, age A表id与B表id关联，根据B表的age值更新A表的age。 eg: update A,B set A.age=B.age where A.id=B.id;   连表删除  A表：id, age B表：id, name, age A表id与B表id关联，根据B表的age值删除A表的数据。 eg: delete A from A,B where A.id=B.id and B.name='pw';    总结\r#\r\r select查询进阶语法  order by/distinct/group by having (聚合函数) /like (%前缀后缀)   连接语法  内连接、左连接、右连接、 Union [ALL]   DML进阶语法  insert/连表update/连表delete    2.5-内置函数\r#\r\r聚合函数\r#\r\r 聚合函数面向一组数据，对数据进行聚合运算后返回单一的值。 MySQL聚合函数的基本语法：SELECT function(列) from 表 常用聚合函数：     函数 描述     AVG() 返回列的平均值   COUNT(DISTINCT) 返回列去重后的行数   COUNT() 返回列的行数   MAX() 返回列的最大值   MIN() 返回列的最小值   SUM() 返回列的总和   GROUP_CONCAT() 返回一组值的连接字符串(MySQL独有)    实例还是上节中的那些表\n场景1：查询每张专辑总的点播次数和每首歌的平均点播次数。\nselect album, sum(playcount), avg(playcount) from song_list group by album; 场景2：查询全部歌曲中的最大的播放次数和最小的播放次数。\nselect max(playcount), min(playcount) from song_list; 场景2续：查询播放次数最多的歌曲\n-- 错误查法 select song_name, max(playcount) from song_list; -- 正确查法 select song_name, playcount from song_list order by playcount desc limit 1;  select count(*) from song_list; select count(1) from song_list; select count(song_name) from song_list;  count(*)和count(1)基本一样，没有明显的性能差异。 count(*)和count(song_name)差别在于count(song_name)会除去song_name is null的情况\n场景3：显示每张专辑的歌曲列表\nselect album, GROUP_CONCAT(song_name) from song_list group by album; -- 默认最大只能连接1024个字符，但是可以通过改数据库参数来改变。 使用聚合函数做数据库行列转换\r#\r\rselect user, max(case when \u0026#39;key\u0026#39;=\u0026#39;age\u0026#39; then value end) age, max(case when \u0026#39;key\u0026#39;=\u0026#39;sex\u0026#39; then value end) sex, max(case when \u0026#39;key\u0026#39;=\u0026#39;dep\u0026#39; then value end) dep, from tbl_test1 group by user; 预定义函数\r#\r\r 预定义函数面向单值数据，返回一对一的处理结果(聚合函数可以理解成多对一)。 预定义函数基本语法： select function(列) from 表; select * from 表 where 列 = function(value) ...   预定义函数-字符串函数\r#\r\r   函数 描述     LENGTH() 返回列的字节数   CHAR_LENGTH() 返回列的字符数   TRIM()/RTRIM()/LTRIM() 去除两边空格/去除右边空格/去除左边空格   SUBSTRING(str, pos, [len]) 从pos位置截取字符串str，截取len长度   LOCATE(substr, str, [pos]) 返回substr在str字符串中的位置   REPLACE(str, from_str, to_str) 将str字符串中的from_str替换成to_str   LOWER(), UPPER() 字符串转换为小写/大写     字符串函数 - 实例  SELECT SUBSTRING(\u0026#39;abcdef\u0026#39;, 3); -- \u0026#39;cdef\u0026#39; SELECT SUBSTRING(\u0026#39;abcdef\u0026#39;, -3); -- \u0026#39;def\u0026#39; SELECT SUBSTRING(\u0026#39;abcdef\u0026#39;, 3, 2); -- \u0026#39;cd\u0026#39; SELECT LOCATE(\u0026#39;bar\u0026#39;, \u0026#39;foobarbar\u0026#39;); -- 4 SELECT LOCATE(\u0026#39;xbar\u0026#39;, \u0026#39;foobar\u0026#39;); -- 0 SELECT LOCATE(\u0026#39;bar\u0026#39;, \u0026#39;foobarbar\u0026#39;, 5); -- 7 预定义函数-时间处理函数\r#\r\r   函数 描述     CURDATE() 当前日期   CURTIME() 当前时间   NOW() 显示当前时间日期(常用)   UNIX_TIMESTAMP() 当前时间戳   DATE_FORMAT(date, format) 按指定格式显示时间   DATE_ADD(date, INTERVAL unit) 计算指定日期向后加一段时间的日期   DATE_SUB(date, INTERVAL unit) 计算指定日期向前减一段时间的日期     实例：  SELECT NOW() + INTERVAL 1 MONTH; SELECT NOW() - INTERVAL 1 WEEK; 预定义函数-数字处理函数\r#\r\r   函数 描述     ABS() 返回数值的绝对值   CEIL() 对小数向上取整 CEIL(1.2)=2   ROUND() 四舍五入   POW(num, n) num的n次幂 POW(2, 2)=4   FLOOR() 对小数向下取整 CELL(1.2)=1   MOD(N, M) 取模(返回n除以m的余数)=N % M   RAND() 取0~1之间的一个随机数    算数、逻辑运算\r#\r\r 比较运算     函数 描述     IS, IS NOT 判定布尔值 IS True, IS NOT False, IS NULL   \u0026gt;, \u0026gt;= 大于，大于等于   \u0026lt;, \u0026lt;= 小于，小于等于   = 等于   !=, \u0026lt;\u0026gt; 不等于   BETWEEN M AND N 取M和N之间的值   IN, NOT IN 检查是否在或不在一组值之中    实例：查询一个月内userid为1,3,5的用户创建的歌单\nselect * from play_list where (createtime between 1427791323 and 1430383307) and userid in (1,3,5);  *,/,DIV,%,MOD,-,+ NOT, AND, \u0026amp;\u0026amp;, XOR, OR, ||  2.6-触发器与存储过程\r#\r\r触发器\r#\r\r 是什么  触发器是加在表上的一个特殊程序，当表上出现特定的事件(INSERT/UPDATE/DELETE)时触发该程序执行。   做什么  数据订正；迁移表；实现特定的业务逻辑。    触发器-基本语法\r#\r\rCREATE [DEFINER = { user | CURRENT_USER }] TRIGGER trigger_name trigger_time trigger_event ON tbl_name FOR EACH ROW trigger_body t trigger_time: { BEFORE | AFTER } trigger_event: { INSERT | UPDATE | DELETE } 触发器-实例\r#\r\r学生表：\nCREATE TABLE `stu` ( `name` varchar(50), `course` varchar(50), `score` int(11), PRIMARY KEY (`name`) ) ENGINE=InnoDB; 用于更正成绩的触发器：\nDELIMITER // CREATE TRIGGER trg_upd_score BEFORE UPDATE ON `stu` FOR EACH ROW BEGIN IF NEW.score \u0026lt; 0 THEN SET NEW.score = 0; ELSEIF NEW.score \u0026gt; 100 THEN SET NEW.score = 100; END IF; END; // DELIMITER ; 注意事项\r#\r\r 触发器对性能有损耗，应慎重使用。 同一类事件在一个表中只能创建一次。 对于事务表，触发器执行失败则整个语句回滚。 Row格式的主从复制，触发器不会在从库上执行。 使用触发器时应防止递归执行。  存储过程\r#\r\r 定义：存储过程是存储在数据库的一组SQL语句集，用户可以通过存储过程名和传参多次调用的程序模块。 特点：  使用灵活，可以使用流控制语句，自定义变量等完成复杂的业务逻辑。 提高数据安全性，屏蔽应用程序直接对表的操作，易于进行审计。 减少网络传输。 提高代码维护的复杂度，实际使用中要评估场景是否适合。    存储过程-基本语法\r#\r\rCREATE [DEFINER = { user | CURRENT_USER }] PROCEDURE sp_name ([proc_parameter[,...]]) [characteristic ...] routine_body proc_parameter: [ IN | OUT | INOUT ] param_name type type: Any valid MySQL data type characteristic: COMMENT \u0026#39;string\u0026#39; | [NOT] DETERMINISTIC routine_body: Valid SQL routine statement 存储过程-实例\r#\r\rCREATE PROCEDURE proc_test1 (IN total INT, OUT res INT) BEGIN DECLARE i INT; SET i = 1; SET res = 1; IF total \u0026lt;= 0 THEN SET total = 1; END IF; WHILE i \u0026lt;= total DO SET res = res * i; INSERT INTO tbl_proc_test(num) VALUES (res); SET i = i + 1; END WHILE; END; 存储过程-流控制语句\r#\r\r   流控制 描述     IF IF search_condition THEN statement_list [ELSEIF search_condition THEN statement_list][ELSE statement_list] END IF   CASE CASE case_value WHEN when_value THEN statement_list [ELSE statement_list] END CASE   WHILE WHILE search_condition DO statement_list END WHILE   REPEAT REPEAT statement_list UNTIL search_condition END REPEAT    存储过程-调用\r#\r\rset @total=10; set @res=1; call proc_test1(@total, @res); select @res; 自定义函数\r#\r\r 自定义函数与存储过程类似，但是必须带有返回值(RETURN)。 自定义函数与sum(), max()等MySQL原生函数使用方法类似： SELECT func(val); SELECT * from tbl where col=func(val);  由于自定义函数可能在遍历数据中使用，要注意性能损耗  自定义函数-基本语法\r#\r\rCREATE [DEFINER = { user | CURRENT_USER}] FUNCTION sp_name ([func_parameter[,...]]) RETURNS type [characteristic ...] routine_body func_parameter: param_name type type: Any valid MySQL data type characteristic: COMMENT \u0026#39;string\u0026#39; | [NOT] DETERMINISTIC routine_body: Valid SQL routine statement 自定义函数-实例\r#\r\rCREATE FUNCTION func_test1 (total INT) RETURNS INT BEGIN DECLARE i INT; DECLARE res INT; SET i = 1; SET res = 1; IF total \u0026lt;= 0 THEN SET total = 1; END IF; WHILE i \u0026lt; total DO SET res = res * i; SET i = i + 1; END WHILE; RETURN res; END; 自定义函数-调用\r#\r\rselect func_test1(4); 小结\r#\r\r 知识点：触发器、存储过程、自定义函数 互联网场景：触发器和存储过程不利于水平扩展，多用于统计和运维操作中。  2.7-MySQL字符集\r#\r\r字符集基础\r#\r\r 字符集：数据库中的字符集包含两层含义  各种文字和符号的集合，包括各国家文字、标点符号、图形符号、数字等。 字符的编码方式，即二进制数据与字符的映射规则。    字符集-分类\r#\r\r ASCII：美国信息互换标准编码；英语和其他西欧语言；单字节编码，7位表示一个字符，共128字符。 GBK：汉字内码扩展规范；中日韩汉字、英文、数字；双字节编码；共收录了21003个汉字，GB2312的扩展。 UTF-8:Unicode标准的可变长度字符编码；Unicode标准（统一码），业界统一标准，包括世界上数十种文字的系统；UTF-8使用一至四个字节为每个字符编码。 其他常见字符集：UTF-32，UTF-16，Big5，latin1  MySQL字符集\r#\r\r 查看字符集  SHOW CHARACTER SET;  新增字符集  # 编译时加入： --with-charset= ./configure --prefix=/usr/local/mysql3 --with-plugins=innobase --with-charset=gbk 字符集与字符序\r#\r\r charset和collation  collation：字符序，字符的排序与比较规则，每个字符集都有对应的多套字符序。 不同的字符序决定了字符串在比较排序中的精度和性能不同。    查看字符序\nshow collation; mysql的字符序遵从命名惯例：以_ci(表示大小写不敏感)，以_CS(表示大小写敏感)，以_bin(表示用编码值进行比较)。\n字符集设置级别\r#\r\r charset和collation的设置级别：  服务器级 \u0026raquo; 数据库级 \u0026raquo; 表级 \u0026raquo; 列级   服务器级  系统变量(可动态设置)：  character_set_server：默认的内部操作字符集 character_set_system：系统元数据(各字段名等)字符集      字符集设置级别\r#\r\r 服务器级  配置文件\r[mysqld]\rcharacter_set_server=utf8\rcollation_server=utf8_general_ci\r 数据库级  CREATE DATABASE db_name CHARACTER SET latin1 COLLATE latin1_swedish_ci;  character_set_database：当前选中数据库的默认字符集  主要影响load data等语句的默认字符集，CREATE DATABASE的字符集如果不设置，默认使用character_set_server的字符集。\n 表级  CREATE TABLE tbl1 (....) DEFAULT CHARSET=utf8 DEFAULT COLLATE=utf8_bin;  列级  CREATE TABLE tbl1 (col1 VARCHAR(5) CHARACTER SET latin1 COLLATE latin1_german1_ci); 字符集设置级别\r#\r\r 数据存储字符集使用规则：  使用列集的CHARACTER SET设定值； 若列级字符集不存在，则使用对应表级的DEFAULT CHARACTER SET设定值； 若表级字符集不存在，则使用数据库级的DEFAULT CHARACTER SET设定值； 若数据库级字符集不存在，则使用服务器级character_set_server设定值。    -- 查看字符集 show [global] variables like \u0026#39;character%\u0026#39;; show [global] variables like \u0026#39;collation%\u0026#39;; -- 修改字符集 set global character_set_server=utf8; -- 全局 alter table xxx convert to character set xxx; -- 表 客户端连接与字符集\r#\r\r 连接与字符集  character_set_client：客户端来源数据使用的字符集。 character_set_connection：连接层字符集。 character_set_results：查询结果字符集。    mysql \u0026gt; set names utf8;\r配置文件设置：\r[mysql]\rdefault-character-set=utf8\r 字符转换过程  client \u0026gt; character_set_client \u0026gt; character_set_connection \u0026gt; Storage \u0026gt; character_set_results \u0026gt;client\n推荐使用统一的字符集\n  常见乱码原因：\n 数据存储字符集不能正确编码(不支持)client发来的数据：client(utf8)-\u0026gt;Storage(latin1) 程序连接使用的字符集与通知mysql的character_set_client等不一致或不兼容。    使用建议\n 创建数据库/表时显式的指定字符集，不使用默认。 连接字符集与存储字符集设置一致，推荐使用utf8。 驱动程序连接时显式指定字符集(set names XXX).    mysql CAPI:初始化数据库句柄后马上用mysql_options设定MYSQL_CHARSET_NAME属性为utf8.\n  mysql php API:连接到数据库以后显式用SET NAMES语句设置一次连接字符集。\n  mysql JDBC: url=\u0026ldquo;jdbc:mysql://localhost:3306/blog_dbo?user=xx\u0026amp;password=xx\u0026amp;userUnicode=true\u0026amp;characterEncoding=utf8\u0026rdquo;\n  小结\r#\r\r 字符集：表示的字符集和/字符编码方式 字符的设置级别：服务器/数据库/表/列 客户端字符集：乱码产生的原因与解决方式  2.8程序连接MySQL\r#\r\r程序连接MySQL基本原理\r#\r\rJDBC客户端应用 -\u0026gt; java.sql.*或javax.sql.* -\u0026gt; 驱动程序 -\u0026gt; SQLserver/Oracle/MySQL\nJava代码示例\r#\r\r结构：\nDriverManager -\u0026gt; Driver(是驱动程序对象的接口，指向具体数据库驱动程序对象)=DriverManager.getDriver(String URL) -\u0026gt; Connectinon(是连接对象接口，指向具体数据库连接对象)=DriverManager.getConnection(String URL) -\u0026gt; Statement(执行静态SQL语句接口)=Connection.CreateStatement() -\u0026gt; ResultSet(是指向结果集对象的接口)=Statement.excuteXXX()\nimport java.sql.*; /** * 使用JDBC连接MySQL */ public class DBTest { public static Connection getConnection() throws SQLException, java.lang.ClassNotFoundException { //第一步：加载MySQL的JDBC的驱动  Class.forName(\u0026#34;com.mysql.jdbc.Driver\u0026#34;); //设置MySQL连接字符串,要访问的MySQL数据库 ip,端口,用户名,密码  String url = \u0026#34;jdbc:mysql://localhost:3306/blog\u0026#34;; String username = \u0026#34;blog_user\u0026#34;; String password = \u0026#34;blog_pwd\u0026#34;; //第二步：创建与MySQL数据库的连接类的实例  Connection con = DriverManager.getConnection(url, username, password); return con; } public static void main(String args[]) { Connection con = null; try { //第三步：获取连接类实例con，用con创建Statement对象类实例 sql_statement  con = getConnection(); Statement sql_statement = con.createStatement(); /************ 对数据库进行相关操作 ************/ //如果同名数据库存在，删除  sql_statement.executeUpdate(\u0026#34;drop table if exists user;\u0026#34;); //执行了一个sql语句生成了一个名为user的表  sql_statement.executeUpdate(\u0026#34;create table user (id int not null auto_increment,\u0026#34; + \u0026#34; name varchar(20) not null default \u0026#39;name\u0026#39;, age int not null default 0, primary key (id) ); \u0026#34;); //向表中插入数据  System.out.println(\u0026#34;JDBC 插入操作:\u0026#34;); String sql = \u0026#34;insert into user(name,age) values(\u0026#39;liming\u0026#39;, 18)\u0026#34;; int num = sql_statement.executeUpdate(\u0026#34;insert into user(name,age) values(\u0026#39;liming\u0026#39;, 18)\u0026#34;); System.out.println(\u0026#34;execute sql : \u0026#34; + sql); System.out.println(num + \u0026#34; rows has changed!\u0026#34;); System.out.println(\u0026#34;\u0026#34;); //第四步：执行查询，用ResultSet类的对象，返回查询的结果  String query = \u0026#34;select * from user\u0026#34;; ResultSet result = sql_statement.executeQuery(query); /************ 对数据库进行相关操作 ************/ System.out.println(\u0026#34;JDBC 查询操作:\u0026#34;); System.out.println(\u0026#34;------------------------\u0026#34;); System.out.println(\u0026#34;userid\u0026#34; + \u0026#34; \u0026#34; + \u0026#34;name\u0026#34; + \u0026#34; \u0026#34; + \u0026#34;age \u0026#34;); System.out.println(\u0026#34;------------------------\u0026#34;); //对获得的查询结果进行处理，对Result类的对象进行操作  while (result.next()) { int userid = result.getInt(\u0026#34;id\u0026#34;); String name = result.getString(\u0026#34;name\u0026#34;); int age = result.getInt(\u0026#34;age\u0026#34;); //取得数据库中的数据  System.out.println(\u0026#34; \u0026#34; + userid + \u0026#34; \u0026#34; + name + \u0026#34; \u0026#34; + age); } //关闭 result,sql_statement  result.close(); sql_statement.close(); //使用PreparedStatement更新记录  sql = \u0026#34;update user set age=? where name=?;\u0026#34;; PreparedStatement pstmt = con.prepareStatement(sql); //设置绑定变量的值  pstmt.setInt(1, 15); pstmt.setString(2, \u0026#34;liming\u0026#34;); //执行操作  num = pstmt.executeUpdate(); System.out.println(\u0026#34;\u0026#34;); System.out.println(\u0026#34;JDBC 更新操作:\u0026#34;); System.out.println(\u0026#34;execute sql : \u0026#34; + sql); System.out.println(num + \u0026#34; rows has changed!\u0026#34;); //关闭PreparedStatement  pstmt.close(); //流式读取result，row-by-row  query = \u0026#34;select * from user\u0026#34;; PreparedStatement ps = (PreparedStatement) con.prepareStatement (query,ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY); ps.setFetchSize(Integer.MIN_VALUE); result = ps.executeQuery(); /************ 对数据库进行相关操作 ************/ System.out.println(\u0026#34;JDBC 查询操作:\u0026#34;); System.out.println(\u0026#34;------------------------\u0026#34;); System.out.println(\u0026#34;userid\u0026#34; + \u0026#34; \u0026#34; + \u0026#34;name\u0026#34; + \u0026#34; \u0026#34; + \u0026#34;age \u0026#34;); System.out.println(\u0026#34;------------------------\u0026#34;); //对获得的查询结果进行处理，对Result类的对象进行操作  while (result.next()) { int userid = result.getInt(\u0026#34;id\u0026#34;); String name = result.getString(\u0026#34;name\u0026#34;); int age = result.getInt(\u0026#34;age\u0026#34;); //取得数据库中的数据  System.out.println(\u0026#34; \u0026#34; + userid + \u0026#34; \u0026#34; + name + \u0026#34; \u0026#34; + age); } //关闭 result,ps  result.close(); ps.close(); con.close(); } catch(java.lang.ClassNotFoundException e) { //加载JDBC错误,所要用的驱动没有找到  System.err.print(\u0026#34;ClassNotFoundException\u0026#34;); //其他错误  System.err.println(e.getMessage()); } catch (SQLException ex) { //显示数据库连接错误或查询错误  System.err.println(\u0026#34;SQLException: \u0026#34; + ex.getMessage()); } } } JDBC使用技巧\r#\r\r Statement与PreparedStatement的区别 connection, Statement与ResultSet关闭的意义 jdbc连接参数的使用 ResultSet游标的使用(setFetchSize)  Statement与PreparedStatement的区别\r#\r\r PreparedStatement在数据库端预编译，效率高，可以防止SQL注入。 对数据库执行一次性存取的时候，用Statement对象进行处理。 线上业务推荐使用PreparedStatement.  PreparedStatement背后的故事\r#\r\rPREPARE -\u0026gt; EXECUTE -\u0026gt; DEALLOCATE PREPARE\nPREPARE stmt1 FROM \u0026#39;SELECT productCode, productName From products WHERE productCode = ?\u0026#39;; SET @pc = \u0026#39;S10_1678\u0026#39;; EXECUTE stmt1 USING @pc; DEALLOCATE PREPARE stmt1; connection, Statement与ResultSet关闭的意义\r#\r\r MySQL数据库端为connection与ResultSet维护内存状态，一直不关闭会占用服务端资源。 MySQL最大连接数受max_connections限制，不能无限创建连接，所以用完要及时关闭。 JDBC connection关闭后ResultSet, Statement会自动关闭。但是如果使用连接池将不会关闭，因此推荐主动关闭。  jdbc连接参数的使用\r#\r\r 字符集设置：  url=\u0026ldquo;jdbc:mysql://localhost:3306/blog_dbo?userUnicode=true\u0026amp;characterEncoding=utf8\u0026rdquo;;\n 超时设置：  url=\u0026ldquo;jdbc:mysql://localhost:3306/blog_dbo?connectionTimeout=1000\u0026amp;socketTimeout=30000\u0026rdquo;;\nResultSet游标的使用\r#\r\r 默认的ResultSet对象不可更新，仅有一个向前移动的指针。因此，只能迭代它一次，并且只能按从第一行到最后一行的顺序进行。可以生成可滚动和/或可更新的ResultSet对象。 setFetchSize()是设置ResultSet每次向数据库取的行数，防止数据返回量过大将内存爆掉。  Python连接MySQL\r#\r\r Python：脚本语言，无需编译、易开发 DBA使用Python的一般场景是编写自动化运维工具、报表、数据迁移 Python MySQL驱动：python-mysqldb  import MySQLdb # 建立和mysql数据库的连接 conn = MySQLdb.connect(host=\u0026#39;localhost\u0026#39;, port=3306,user=\u0026#39;bloguser\u0026#39;,passwd=\u0026#39;xxxx\u0026#39;) # 获取游标 curs = conn.cursor() # 选择数据库 conn.select_db(\u0026#39;blog\u0026#39;) # 执行SQL，创建一个表 curs.execute(\u0026#34;create table blog (id int, name varchar(200))\u0026#34;) # 插入一条记录 value = [1, \u0026#39;user1\u0026#39;] curs.execute(\u0026#34;insert into blog values(%s, %s)\u0026#34;, value) # 插入多条记录 values = [(2, \u0026#34;user2\u0026#34;), (3, \u0026#34;user3\u0026#34;)] curs.executemany(\u0026#34;insert into blog values(%s, %s)\u0026#34;, values) # 提交 conn.commit() # 关闭游标 curs.close() # 关闭连接 conn.close() 2.9-DAO框架的使用\r#\r\rDAO框架\r#\r\r 在应用程序中使用数据访问对象(DAO),使我们可以将底层数据访问逻辑与业务逻辑分离开来。DAO框架构建了为每一个数据源提供CRUD(创建、读取、更新、删除)操作的类。 DAO模式是标准J2EE设计模式之一。开发人员用这种模式将底层数据访问操作与高层业务逻辑分离开。一个典型的DAO框架实现有以下组操作：  一个DAO工厂类 一个DAO接口(select/insert/delete/update) 一个实现了DAO接口的具体类 数据传输对象    DAO框架的特点\r#\r\r 屏蔽底层数据访问细节，实现业务逻辑和数据访问逻辑的分离。 简化代码开发，提高代码复用率。 相较于原生的SQL可能会带来额外的 性能损耗(利用反射机制封装对象，SQL转换等)  MyBatis简介\r#\r\r MyBatis是一个主流的DAO框架，是apache的一个开源项目iBatis的升级版。 MyBatis支持普通SQL查询，存储过程和高级映射，消除就几乎所有JDBC代码和参数的手工设置以及结果集的检索。 接口丰富、使用简单 相较于hibernate更加轻量级，支持原生的sql语句。 支持查询缓存  MyBatis代码示例\r#\r\r 环境搭建，数据源于映射配置文件的编写 单值、多值查询 增删改数据 连表查询  示例代码在sorence/DAO框架代码示例.rar\nMyBatis工作流程\r#\r\r 加载配置并初始化，内部生成MappedStatement对象。 调用MyBatis提供的API(SqlSession.select/insert\u0026hellip;.)，将SQL ID与数据对象传递给处理层。 处理层解析MappedStatement对象，获取MySQL的连接，执行相应的SQL语句，接收返回结果。 MyBatis将接收到的返回结果封装成对应的数据对象返回。  MyBatis使用技巧\r#\r\r 区分#{}和${}的不同应用场景： #{}会生成预编译SQL，会正确的处理数据的类型，而${}仅仅是文本替换。 注意MyBatis封装数据时的性能损耗： 只返回需要的行数和字段。 使用MyBatis自带的连接池功能： \u0026lt;dataSource type=\u0026quot;POOLED\u0026quot;\u0026gt;  "}),a.add({id:286,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/talk_theme/girl/dpa4wtnhf8/',title:"耍朋友",section:"聊天话题",content:"  女生都特别在意细节 所以一定要认真 做一些事可以多向别人请教 多上网查看 多演练\n  其实任何事情都是这样 一定要认真仔细\n  一旦开始就要百分之百尽力\n  和女生聊天不要一个人滔滔不绝的讲个不停 尽量要讲两个人共同的话题 尽量讲 女生感兴趣的话题 当然了 如果实在找不到话题 那么自己讲自己活跃气氛也不错 对了可以讲自己被父母逼相亲 亲戚朋友聚会的事情\n  case1\n  并不是看着清纯的一定没谈过恋爱，更不是看着可爱的一定没谈过恋爱， 如果非要说的话，最可靠的评判标准就是这个女人是否老实。 对于男人来说，老实的男人不会撩妹，反过来呢，那些老实的女生，傻傻的，十有八九没谈过恋爱。 为什么这么说？因为无论是平淡的一段感情，还是刻骨铭心的一段感情，或者是伤痕累累的一段感情， 甚至是过眼云烟的短暂经历，都会改变一个女生对爱情和男人的看法、想法以及行为和表现，所以只要感情经历足够多，傻子也可以蜕变成情圣。就拿渣女来说，学会了温柔撩人也就算了，如果连男生想什么都能猜出来十有八九必定已经阅人无数。相反，如果一个女生不骚不婊不可爱不机灵，差不多没谈过恋爱，所以原谅她的不懂事，这个女生并非不爱你！我不否认有的人天生双商高，没谈过恋爱也表现得成熟而有魅力，也不否认有高手扮猪吃老虎，假装老实人打你个措手不及。每次讲到这一点时，我总是忍不住想要长篇大论――那继续和大家分享，如果你遇到的人是装出来的老实你怎么办？或者是天生的完美人格你却怀疑对方？我们都知道，很多事情并不像看上去那样，但是，我们可以从现象探寻本质。但是我知道大多数人是做不到“从现象探寻本质这一点的”。最可怕的人就是装傻的人和真傻的人，如果你想看透对方的本质，那么请你继续往下看。当你遇到只问你的信息，但对自己的信息却小心翼翼的姑娘，小心一些。她是在以居高临下的姿态考察你，筛选你，这种女的会因为你外在条件好和你在一起，但是她永远不会爱你。这种女的，说白了，不真诚。你作为一个爷们儿，一定要摆好框架，不要被对方牵着鼻子走。老实人之所以廉价，就是因为没原则无底线，也不敢跟姑娘提要求，毕竟有个姑娘跟自己约会就足够自己满足自豪好几天了。所谓有自己的框架，应该时不时停下来问问自己的人生目标是什么，想成为什么人。当她离你而去的时候你还有一技傍身，而不是几张朋友圈的恩爱照和一无是处的青春回忆。小心对方的回头，因为你不知道对方回头的动机。女人善变，但大部分情况下她们回头找你的理由都是暂时找不到更好的了，就找你先凑合一下吧。我不否认有的女生怀念旧情，不舍得，但是你也要想想当初她离开你的原因是什么。别被她感人的台词骗得泪流满面。如果你想了解一个女生，先看她的圈子。她的闺蜜没什么水准的话，她也不会好到哪里去。物以类聚人以群分这句话不是没有道理的，想法不同的人不会不谋而合，想法不同的朋友时间久了也会把人带跑偏。找机会参加女生的朋友聚会，你会有意外收获的！女人属猫，一直招惹她会让女生烦你。等你身上有了她想要的东西自然会回来找你，别怕错过。错过了，说明还是不喜欢你，没什么可惋惜的。喜欢你的人一定会主动，性格慢热或者天性凉薄都是借口。说自己慢热的女生，大概率是对你没感觉却又想长期吊着你的绿茶。真慢热的女的一般不会直接说自己慢热，除非脑子不太灵光。经常去夜店的女生，要远离。她们口中的“偶尔去”就是经常去。我也去过夜店，灯红酒绿肆无忌惮确实令人着迷，但是我知道它的样子，那些姑娘很性感。虽然很可能有误伤，但是老实人玩不起概率游戏，就这么简单，还不如选择远离。以前爱玩儿现在收心了也就算了，人品差点的，让你头上长草，你怕不怕？约不出来微信不回就放弃吧。我知道存在技术差异和魅力差异，但是女生不认可咱们，真没必要上赶着。大家都是成年人，第一次邀约说明不了啥，再二再三拒绝那就算了吧，拒绝邀约的理由不管怎么美化，本质就是我看不上你。但是，这个姑娘你先留着，冷处理就行了，别再为她花心思，谁知道以后会怎么样呢。追逐过程中，感觉自己负面情绪过多的话，这姑娘八成不适合你。问题是，很多人早早就意识到了却还是无法控制自己继续付出。毕竟付出越多越难以放弃，舔狗也是越舔越难以自拔，我都理解。但是看了这篇文章就再次提醒提醒自己。身边有个懂女人的朋友出谋划策很重要。让你闷头死追无脑献殷勤的是狗头军师，别信。然而大部分女人给别人教的泡妞手段，无非就是买买买送送送，感动感动加感动。这不是误人子弟呢嘛，说实话，私信我买套课程，你会发觉自己会脱胎换骨。摸清对方的段位再做决策。如果自己段位远低于对方，比如姑娘长得特好看，天天有人惦记着，你却没谈过恋爱。趁早撒手，强行在一起基本上是被吃到死的份。游戏中的越级闯关都应该知道：级别差太多，结局只能是自己费力之后一无所得。我的建议就是提升自己，不然就算闯关成功，耗费的装备和药水值得你这么做？想体验相对纯粹些的爱情，越早越好。不论男女一过三十，基本都认清了生活和现实，出来工作越早的越现实。离异女的能别碰就别碰。女人是感性动物是这个社会上最大的谎言。离异之后但凡有点脑子的，都会在婚前把婚后的利益算的清清楚楚。这也不怪她们，毕竟之前感性一次吃了大亏。时不时评估一下自己和对方的付出，维持一段关系，保持相对的平衡。花小钱要果断，花大钱还是免了吧，这不是你的责任。你下注了，她跟了，你们就继续玩；你下注了，她还不下注，不管她怎么跟你花言巧语“我要下注了”，别信！说什么女人的青春值钱，那男人的青春不值钱？真正的爱情永远是平等的。不要闷头给追求对象送礼物。送礼物可以，要么她先送了，你回礼；要么，你俩确定关系以后你再送。喜欢你的姑娘，不会因为你忘记一次生日礼物就拒绝你你，而一个她看不上的挫男，年年送生日礼物她也不会高看对方一眼。别自己感动自己了，追是吸引而不是讨好。碰到人品好的，徒增对方的社交压力；碰到人品差的，等于给对方把你当提款机的机会。什么时候一个人急不可耐地给对方送礼？是求人办事的时候。问题是，感情这东西，它也不是求来的啊。相对应的，无缘无故送你礼物的姑娘八成对你有兴趣，一般也是新司机。真诚是对的，要么狠要么稳，别徘徊。如果你精通pua，我支持你通过这种方式吸引女生；如果你你不精通，班门弄斧的样子真的很搞笑。老实人其实挺受欢迎的，你单位的阿姨肯定不会殷勤地给一个流里流气的痞子介绍对象，不过你要有点儿眼力见儿。那些臭毛病你得离远点，想改变对方是痴心妄想。朋友圈爱炫富的，远离；网红脸的，远离；脾气不好一点就炸的，有时候你买错一瓶水她就炸了，其实也不是脾气不好，也可能是单纯不喜欢你然后顺便拿你出气而已，远离；虚荣心爆棚的，远离；很多姑娘会把虚荣心延伸到感情上，攀比过后要么你累死，要么你被绿；有纹身的，要么有故事要么就是社会姐，私密部位也有的，自求多福吧。永远不要当舔狗。有机会有能力翻翻对方的微博，再看看知乎上秀腿秀胸回答下边的评论，你就知道一个女人每天能被舔多少次了。舔她的人那么多，你又和他们有何不同？就让她们迷失在舔狗的舌头里好了，过了三十，一个人真实的斤两才会显现出来。其实大部分姑娘不会一开始就把对她有好感的男人当舔狗的，舔狗的帽子是那些低自尊、没脾气的男的自己戴上去的。说自己没有追求者的，别信。人家肯定不会对外说一个月薪不多长得巨丑的人在追她，因为太丢人了。最擅长从男人身上攫取利益的女人总是对外宣称单身，同时多线发展，以吸引傻子们对其不断投资。宣称自己追求者众多的姑娘，别怂，直接默认这些竞争者们不存在就可以了。说自己的追求者多，要么是在对外营造“洛阳纸贵”的氛围，实际上追她的没多少个。要么，就是追她的她一个都没看上，根本无法构成你的威胁，否则她早脱单了，还能等到你碰上她？不要开口问她们喜欢什么样的男人。寻找渠道了解一下对方的前任，总结一下他们的共同点。那个共同点就是她眼中一个男人的核心价值，不过挺麻烦的何必这么累呢。所以说，一个人的选择，往往比他的嘴巴更能反映出内心真实的想法。不要信她们的嘴巴或者自己在朋友圈发的所谓的择偶标准。你也不要附和她那些所谓的择偶标准，这么做也会暴露出你有迎合她口味的倾向，只有低价值的人才会想法迎合别人。门当户对太重要了，中华文化源远流长是有原因的。和一个姑娘聊的特别投缘，很大原因是你俩出身背景相似，有时候跟喜不喜欢没啥关系。分清自己是有钱还是有魅力。大部分姑娘在这个二十六七岁以前更多关注的是男方提供的情绪价值，这个年纪以后则更多关注的是男方提供的物质价值。爱情这东西，往往跟情绪价值联系在一起，所以以前不理你，现在回头来找你的姑娘八成并不爱你，而是年纪到了人家需求变了而已。就别沾沾自喜地认为自己这几年挣了钱魅力就大了，两码事儿。女人大部分喜欢找能令自己仰望的男人，小部分会找跟自己能够势均力敌的男人，但没有一个愿意找比自己弱的男人。这话背后的含义是，如果你看到一个女人找了个条件比自己差很多的男人，那么那个男人在某一你看不见的方面一定有强过她的地方。追到了也别得意，注意观察细节，看看对方是在玩儿还是真的爱你。很多情侣动辄朝另一半撒泼，就是不够喜欢，真的不是什么性格问题，彭于晏当她男朋友她会随便发脾气找茬子？有钱并不能帮你得到爱情。你可能只能得到姑娘的人，却永远得不到她的心。这件事将会极大增加自己被绿的概率。所以分辨出一个人是不是真的爱你，很重要。这句话的另一半是，别先画地为牢地认为自己在一无所有的时候没资格谈恋爱。其实当你一无所有的时候，碰到的姑娘才是最真的。一定不要上头，记得给自己划条时间线。这个不行就赶紧放弃。明明人家不鸟你或者明明你条件比她好你却还是执迷不悟死追不放；你这不是傻吗？从现实利益的考量角度来说，找个喜欢你的比找个你喜欢的舒服很多。而且很多时候喜欢你的各方面的条件是优于你喜欢的那个。好姑娘真的很多，别放弃。被渣女玩过一次的话，问题在她；如果次次遇人不淑的人是你，那有问题的人是你。保持忠诚和专一其实是非常难得的品质。可惜女孩子希望的是她们喜欢的人有这个品质然后反过来对她们忠诚专一。换句话说，人家不喜欢你，你再专一都没用。看清对方对你的态度，分清好坏。女人的高傲都是摆给自己不喜欢的人看的，碰到喜欢的瞬间化身小女人。不要死皮赖脸地追，勉强追到了你还得继续无底线付出，长期看也难以维系。人都是自作聪明的生物，那就不要自作聪明。想让对方知道你的价值和优点，不要过于明显地展示，而是要让她以为是她自己发现的。明显地展示自己价值的，比如朋友圈秀豪车钥匙，坐头等舱，出席所谓社会名流会议的，吸引来的也就是没什么层次的女人。好姑娘看到你这么炫，直接会排除你。追求阶段，在确定自己没有犯原则性错误的情况下，注意，绝对不要低头道歉。宁可冷酷到底也别装绅士，唯唯诺诺的男人一点儿魅力都没有。舔狗最擅长的事就是反复道歉，结果就是本来不是什么大事，他搞成了大事，然后继续舔。千万千万不要让对方知道你在揣测她的心思。你会被她朋友圈发的每一条状态玩到心态崩溃。女人早期天然比男人擅长情感博弈，特别擅长玩弄弱势地位者的感情。你需要做的是对她永远保留三分神秘你追不到的，大概率是综合评分远高于你的姑娘。如果有女孩追你，你一直都看不上，想通背后的道理，你就知道自己应不应该反过来追女生。水平强于你太多的，根本就入不了对方的眼，你怎么追都没用；水平低于你太多的，人家倒贴你；水平和你差不多的，根本不需要太追。这个评分包括很多方面，其中对于感情的把控和pua能力指数作为评分标准，真正的高手还是有的，比如我。喜欢不喜欢你，细节足以说明一切。注意力从头到尾压根就没在你身上的人，就别瞎费心思了。约出来了，但是长时间低头玩手机不说话，不主动开启话题，不问你的个人消息，这就是对你没兴趣。女人爱不爱你跟你优不优秀没有什么关系。她们的感情是毫无逻辑的。 我朋友婚前房车一概没有，俩人靠女朋友死工资过，然而他有车有房了之后，这姑娘居然先提出分手。迷信“有车有房有钱就会有姑娘喜欢”的理论的人，最终结果要么就是累死在挣钱的路上，要么就是吸引来看重金钱的绿茶。事业上的优秀和感情上的优秀完全是两码事。我常说你十座金钱换不来的姑娘我一颗糖能追回来，这句话不是骗人的。但是大部分人两者都不优秀；少数人有能力把握其中之一；两者能兼顾的人，我很敬佩。事业优秀、外表光鲜的成熟大叔，往往都有不为人知的黑暗面；情场上顺风顺水的浪子事业、学业基本看不成；人其实经不起细看。永远别贪恋远高于自己阶层的女人，更别相信“捡漏”这种事情会在自己身上发生。不要觉得找个低于自己阶层的女人就万事大吉了。对低于自己阶层的女人，同样不可松懈。对穷人家庭出身，还有点姿色的女人，尤其要警惕。忽冷忽热未必就是把你当备胎。对方一开始对你感兴趣的可能仅仅是你的附加价值，并不是对你感兴趣。女人在男女之事上的洞察力极高，一旦她们发现自己想要的东西你身上其实并没有，她们自然会脱身走人，并且没有丝毫犹豫。另一方面，确实有把男人当备胎的女人。当然她们也会用所谓的“考察期”来使自己的逻辑自洽——只是她们从来不告诉你，碰到自己喜欢的，确定关系能有多快，快到能立刻献身的地步。这个时候她们又会告诉你她找到了真爱，哦，我的老天，真是完美的理由啊！用考察期作理由的，就是不够喜欢你。追姑娘特简单，只要别对她太上心就好。开车的时候，新司机最容易犯的错误是注意力过于集中。追求女生也是一样，注意力太集中的弊端太多了，无论是吸引力还是感情维护都会让你很累。女人说“我有钱，我不在乎另一半有没有钱，无所谓”，别太相信这句话。事实上，说这句话的人，要的是物质需求加精神需求，只不过披了个“只要精神需求”的外衣而已。毕竟聪明点的美女勾搭富豪，第一步就是要先表现出对金钱的鄙夷，本来富豪最怕的就是人家冲着你的钱来。你真的以为一个用惯卡地亚香奈儿的女人，会喜欢上一个不懂摄影、没多少旅游见闻、没什么品味的男人？哪一项不需要钱？有些东西，你有钱甚至都未必接触的到。浅薄的小资产阶级有点小钱之后便阵阵作响，恨不得把自己能秀的东西秀个遍：男的秀车秀表，女的秀旅游秀包秀舔狗，用所谓的“品味”来包装自己，以求得一个高于自己原生阶层的人。不要觉得对方足够主动了你就能吃定她。散步时拉你的手、私底下对你撒娇、坐公交时睡着靠在你肩膀上——这些最容易让男人精虫上脑了。人家今天能对你这么做，明天就能对别人这么做。脑袋里那根弦请一直搭上，绿茶最喜欢用的就是这招。货悖而入者，亦悖而出。以不正当的手段得来的“爱情”，最后一定会以不正当的手段失去。别觉得自己能挖墙脚有多厉害，人家只不过从功利的角度考量了一下你而已，等有更好的了，照样蹬了你。在一起以后，想和你结婚过日子的，会把你当存钱罐。而不想结婚只想和你玩玩的，会把你当提款机。虽然价值观可能不同，但总的来说你感受到的都是真的。长得漂亮、家里有钱的姑娘啥都不缺，就缺一个能虐她的人。所以跟她们打交道，开舔必死。反倒是你越不把她们当回事，她们越对你感兴趣。但是想虐别人，得先有那个实力。所以归根到底，还是要提升自己的竞争力。这个世界上真正独立自主的女性极少。当然你问周围的姑娘，她们独立自主吗？她们一定会告诉你是的。但问题是，为什么这些姑娘的择偶标准里都有一条“男方收入不能低于我”。既然独立自主了，为什么还惦记别人的工资有多少呢？忙事业归忙事业，有时候还是要抬头看看前边的路和旁边的人。男人，还是要多交些异性朋友。跟异性打交道太少，最终的结果就是经验不足被吃到死。在微信朋友圈动辄抱怨自己没有男朋友、想要谈恋爱的女的，别去招惹。这种人，十个里面九个是绿茶。还有，朋友圈喜欢配一句心灵鸡汤加上一张自拍的，大概率是绿茶，微商除外。傻小子就知道盯着膜看。奉劝你们不要把找个处女或者不接受婚前性行为的姑娘当做终极目标。让你开心的非处和天天生气的处女你咋选？何况有的女生和自己不满意的男人谈恋爱时，向对方强调自己洁身自好，不接受婚前性行为。男的一听，“哇，碰到这么洁身自好的姑娘是自己的福气”，然后死心塌地。姑娘则趁此机会享受对方的好，同时寻找下家。所有不认可婚前性行为的理由，本质就一个，那就是你太丑，还没有进入我身体的资格。最恶心的就是技术性处女，边缘性行为玩了个遍，还对外宣称自己是处女的人，极其恶心人。真诚确实有用，尤其是在感情上受过重大创伤的女人。这种女人要么从此彻底不信男人，要么只信给自己花钱的男人。跟她们相处，你花言巧语越多，越会被对方拒绝。问题是在感情上受过重大创伤的，男人女人都会有执念，所以这种人你敢要么？对外声称自己希望找个灵魂有趣的人的人，不分男女，择偶方面天生具有优越感。这种优越感来自于对自身条件的过高估计，过高估计的后果你们明白的，说实话这一点影响的方面太大了。 "}),a.add({id:287,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/h847ijsjzr/',title:"表达能力提高",section:"自信",content:" “一个人的成功，15％靠技术支持，85％靠ロ才艺术” 无论在工作还是生活中 表达能力都是一项稀缺又非常重要的能力 如果你曾因为表达能力差吃过亏 那就要好好提升你的表达力了\n  1朗读  睡前20分钟朗读一篇新闻或者你喜欢的文章,切记不要默读,一定要高于平常说话的音量读出来,可以慢读、快读的方式\n 2录制视频  每天三分钟 尝试着用手机录制视频演讲 多次对着镜头表达自己观点 分享自己想法 在分析视频你自己讲话是否自然 语言是否磕巴 有停顿 及时发现问题去调整它 你会越来越优秀的\n  3跟读 每天花10分钟跟着主持人一起去读 ,像康辉老师,董卿老师啊 因为他们吐字清晰 发音标准\n  4镜子练习\n  每天早上 你对着镜子说一些鼓励自己的话 比如\u0026quot;小周 早上好啊 你今天一定要努力哦 你是最棒的 你只要坚持你就可以获得自己想要的 加油 \u0026quot; 时间久了你就会变得从容越来越自信\n 5速读训练  找一段喜欢的文字 慢慢的加快阅读速度 训练自己的口齿\n 6背诵法  背诵跟自己有共鸣的文字 慢慢的增加自己的素材储备\n 7即兴演讲  就是每天你任选3个词 你把那三个词组成一段话或者一个故事 你表达出来\n 8公开表达  你可以把自己录制的视频 给自己身边的朋友看 所谓\u0026quot;当局者迷,旁边者清\u0026quot; 这一点是让他们帮你挑出存在的问题,并且公开你的视频 也可以锻炼你自己的胆量 不要不好意识 不好意思的人是没有办法提高自己的自信的\n 9多观察思考 多看辩论赛或者电影 综艺节目 他们人物之间的对话 哪个人说话是比较高情商的  "}),a.add({id:288,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/ca7cqmh4j8/',title:"任务分类法",section:"自信",content:"任务分类法\r#\r\r一:分类的目的是什么？\r#\r\r 不知你会感到这样吗？有时候完成不了任务，可能是当下在犹豫做什么事之中放走了时间。分类可以避免这种情况，让你在需要时，二话不说就可以根据即刻的情况，迅速找到对应清单下的任务开干，减少因为找不到可做任务而拖延的现象。\n 二:任务分类法\r#\r\r 按照任务属性分类，可将事项分类为工作、学习、生活、娱乐…… 🉑这种分类方法最为常见、符合直觉、也适用于大多数人。  三:场景分类法\r#\r\r 可以让你在某种特定的场景下，迅速找到自己当下要做的事情。比如工具场景和地点场景； 🉑任务不多或者在某种特定场景效率更高的人，可采取这种分类  四:四象限分类法\r#\r\r 按照任务的重要紧急程度，将待办事项分类成四个象限：重要紧急、重要不紧急、不重要紧急、不重要不紧急。 🉑适合任务较多、事情繁琐的人使用  五:能量分类法\r#\r\r  按照待办事项需要耗费多少能量，来进行分类。可将其分为：\n  非常耗费能量、比较耗费能量\n  不耗费能量、有助于恢复能量。\n  🉑如果你常有这种差异很大的任务，那么可以试试能量分类法。✨\n  六:时长分类法\r#\r\r 按照任务需花费的时长，将其分类为： 10分钟以内、半个小时以内 30分钟到1个小时、一个小时以上。 🉑非常适合于碎片化时间较多的人。  总结\r#\r\r  🌈分类方法没有好与不好，\n  按照自己的实际情况和使用习惯去分类，才是最适合自己最好的分类方式呀\n  也可以混搭来用💖💖\n  参考1\n  参考2\n  参考3\n  "}),a.add({id:289,href:'/life/docs/databases/mysql_163%E8%AF%BE%E5%A0%82/%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82mysql_chapter3/',title:"MySQL事务与存储引擎",section:"网易云课堂MySQL微专业学习笔记",content:"MySQL事务与存储引擎\r#\r\r3.1-数据库事务\r#\r\r什么是事务\r#\r\r 一系列有序的数据库操作：  要么全部成功 要么全部回退到操作前的状态 中间状态对其他连接不可见   事务的基本操作：    基本操作 说明     start transaction 开始事务   commit 提交(全部完成)   rollback 回滚(回到初始状态)      -- 开启一个事务 start transaction; -- 或者使用(非标准sql) begin; insert into t values (1, 1, 1); -- 事务结束，插入成功 commit; begin; insert into t values (2, 1, 1); insert into t values (3, 1, 1); insert into t values (4, 1, 1); -- 事务结束，没有插入数据 rollback; begin; insert into t values (1, 1, 1); savepoint a1; insert into t values (2, 1, 1); -- 回滚到指定的保存点 rollback to a1; commit; 自动提交\r#\r\r autocommit可以在session级别设置 每个DML操作都自动提交 DDL永远都是自动提交，无法通过rollback回滚  事务的四个基本属性(ACID)\r#\r\r 原子性(Atomicity) 一致性(Consistency) 隔离性(Isolation) 持久性(Durability)  事务的原子性\r#\r\r 包含在事务中的操作要么全部被执行，要么都不执行 中途数据库或应用发生异常，未提交的事务都应该被回滚  事务的一致性\r#\r\r 数据的正确性，合理性，完整性 数据一致性应该符合应用需要规则：  余额不能是负数 交易对象必须先有账号 用户账号不能重复   事务的结果需要满足数据的一致性约束  事物的持久性\r#\r\r 提交完成的事务对数据库的影响必须是永久性的  数据库异常不会丢失事务更新 通常认为成功写入磁盘的数据即为持久化成功    事务的持久化的实现\r#\r\r 数据文件持久化  随机同步刷新(慢)   事务日志持久化与实例恢复  顺序同步刷新(快) -\u0026gt; 事务日志 随机异步刷新 -\u0026gt; 磁盘 事务日志 -\u0026gt; 磁盘(实例恢复)    事务的隔离性\r#\r\r 数据库事务在提交完成前，中间的任何数据变化对其他的事务都是不可见的。  数据库隔离现象\r#\r\r   隔离现象 描述     脏读(Dirty Read) 事务B读到事务A尚未提交的数据变更   不可重复读(NonRepeatable Read) 事务B读取前后两次读取一条记录之间该记录被事务A修改并提交，于是事务B读到了不一样的结果   幻读(Phantom Read) 事务B按条件匹配到了若干行记录并修改。但是由于修改过程中事务A新插入了符合条件记录，导致B更新完成后发现仍有符合条件却未被更新的记录。    数据库隔离等级\r#\r\r   隔离等级 脏读 不可重复读 幻读     未提交读 可能 可能 可能   已提交读 不可能 可能 可能   可重复读 不可能 不可能 可能   可串行化读 不可能 不可能 不可能    MySQL的事务隔离级别\r#\r\r InnoDB默认标记为可重复读 InnoDB并不是标准定义上的课重复读 InnoDB默认在可重复读的基础上避免幻读  MySQL事务隔离级别设置\r#\r\r 可在global/session/下个事务，级别分别进行设置 建议使用Read committed(同Oracle) 或者建议使用默认的Repeatable read  set tx_isolation = \u0026#39;\u0026#39; -- 设置隔离级别 事务与并发写\r#\r\r 某个正在更新的记录再提交或回滚前不能被其他事务同时更新  事务回滚的实现\r#\r\r 回滚段(rollback segment)与数据前像  3.2-存储引擎概述\r#\r\rMySQL程序层次架构\r#\r\rMySQL存储引擎\r#\r\r 有多种可选方案，可插拔，可修改存储引擎 基于表选择使用何种存储引擎  主要存储引擎\r#\r\r   存储引擎 常用度 支持事务     InnoDB 主要，推荐 是   MyISAM 古老，偶尔有用，系统表 否   MEMORY 偶尔临时表有用，纯内存 否   BLACKHOLE 不用来存放数据，个别特殊用处 否   TokuDB 新颖，个别特殊场景有奇效 是   Cluster 新颖，分布式，内存，线上不要用 是    InnoDB存储引擎\r#\r\r 索引组织表 支持事务 支持行级锁 数据块缓存 日志持久化 稳定可靠，性能好，线上尽量使用InnoDB  MyISAM存储引擎\r#\r\r 堆表 不支持事务 只维护索引缓存池，表数据缓存交给操作系统 锁粒度较大 数据文件可以直接拷贝，偶尔可能会用上 不建议线上业务数据使用  MWMORY存储引擎\r#\r\r 数据全内存存放，无法持久化 性能较高 不支持事务 适合偶尔作为临时表使用 create temporary table tmp (id int) engine = memory ;  BLACKHOLE存储引擎\r#\r\r 数据不作任何存储 利用MySQL Replicate，充当日志服务器 在MySQL Replicate环境中充当代理主  TokuDB\r#\r\r 分形树存储结构 支持事务 行锁 压缩效率较高 适合大批量insert的场景  MySQL Cluster\r#\r\r 多主分布式集群 数据节点间冗余，高可用 支持事务 设计上易于扩展 面向未来，线上慎用  改变表的存储引擎\r#\r\ralter table m ENGINE=innodb;\n3.3-InnoDB存储引擎\r#\r\rInnoDB存储引擎体系架构\r#\r\rInnoDB相关的磁盘文件\r#\r\r   文件 名称 数量 位置     系统表空间 ibdata1 一个实例一个 innodb_data_home_dir   日志文件 ib_logfile0/1 一个实例两个(可配置) innodb_log_group_home_dir   表定义文件 表名.frm 每张表一个 Schema目录下   表数据文件 表名.ibd 如果innodb_file_per_table = 1, 则每张表一个 Schema目录下    InnoDB系统表空间文件\r#\r\r ibdata1里存放了什么:  回滚段 所有InnoDB表元数据信息 Double Write, Insert buffer dump等等\u0026hellip;.   自动扩展机制  InnoDB与磁盘文件有关的参数\r#\r\r   参数 样例值 备注     innodb_data_home_dir /data/mysql/node_1 数据主目录   innodb_log_group_home_dir /data/mysql/node_1 一般同上   innodb_data_file_path ibdata1:512M:autoextned 请开启autoextned   innodb_autoextend_increment 128 MB,勿太大或太小   innodb_file_per_table 1 强烈建议开启   innodb_log_file_size 100MB 性能相关   innodb_log_files_in_group 2 性能相关    InnoDB数据文件存储结构\r#\r\r 索引组织表(聚簇表) 根据表逻辑主键排序 数据节点每页16K 根据主键寻址速度很快 主键值递增的insert插入效率较好 主键值随机insert插入效率差 因此，InnoDB表必须指定主键，建议使用自增数字  InnoDB数据块缓存池\r#\r\r 数据的读写需要经过缓存 数据以整页(16K)为单位读取到缓存中 缓存中的数据以LRU策略换出 IO效率高，性能好  InnoDB Buffer Pool相关参数\r#\r\r   参数 样例值 备注     innodb_buffer_pool_size 10G 根据总物理内存设置    InnoDB数据持久化与事务日志\r#\r\r 事务日志实时持久化 内存变化数据(脏数据)增量异步刷出到磁盘 实例故障靠重放日志恢复 性能好，可靠，恢复快  InnoDB日志持久化相关参数\r#\r\r   参数 样例值 备注     innodb_flush_log_at_trx_commit 1 可选：0：每隔1s写入并持久化一次日志。1：每次commit都写入并持久化日志。2：每次提交日志写到内存，每1s持久化一次    InnoDB行级锁\r#\r\r 写不阻塞读 不同行间的写互相不阻塞 并发性能好  InnoDB与事务ACID\r#\r\r 事务ACID特性完整支持  回滚段失败回滚 支持主外键约束 事务版本+回滚段=MVCC 事务日志持久化   默认可重复读隔离级别，可以调整  3.4-InnoDB事务锁\r#\r\r什么是计算机程序锁\r#\r\r 计算机程序锁  控制对共享资源进行并发访问 保护数据的完整性和一致性    数据库中的锁\r#\r\r 分为两个大类      lock latch/mutex     对象 事务 线程   保护 数据库逻辑内容 内存数据结构   持续时间 事务过程中 临界资源争抢     我们主要关心的是事务锁  数据库事务并发\r#\r\r 对同一行记录的修改必须串行化  事务锁粒度\r#\r\r 行锁  InnoDB, Oracle   页锁  SQL Server   表锁  MyISAM, Memory   锁升级  InnoDB存储引擎中的锁模式与粒度\r#\r\r 四种基本锁模式  共享锁(S) - 读锁 - 行锁 排他锁(X) - 写锁 - 行锁 意向共享锁(IS) - 表级 意向排他锁(IX) - 表级   意向锁  意向锁总是自动先加，并且意向锁自动加自动释放 意向锁提示数据库这个session将要在接下来施加何种锁 意向锁和X/S锁级别不同，除了阻塞全表级别的X/S锁外其他任何锁    InnoDB锁模式互斥\r#\r\r数据库加锁操作\r#\r\r 一般的select语句不加任何锁，也不会被任何事物锁阻塞  读的隔离性由MVCC确保   S锁  手动：select * from tb_test lock in share mode; 自动：insert前   X锁  手动：select * from tb_test lock for update; 自动：update，delete前    InnoDB行锁的实现\r#\r\r 通过索引项加锁实现  只有条件走索引才能实现行级锁 索引上有重复值，可能锁住多个记录 查询有多个索引可以走，可以对不同索引加锁 是否对索引加锁实际上取决于MySQL执行计划   自增主键做条件更新，性能最好  没有索引的话会对整张表加锁。\nInnoDB的gap lock\r#\r\r 什么是幻读 gap lock消灭幻读  InnoDB消灭幻读仅仅为了确保statement模式replicate的主从一致性   小心gap lock 自增主键做条件更新，性能最好  死锁\r#\r\r  什么是死锁\n A、B两个事务，A先更新t1，同时B更新t2，A再更新t2，B再更新t1就发生了死锁。    死锁数据库自动解决\n 数据库挑选冲突事务中回滚代价较小的事务回滚    死锁预防\n 单表死锁可以根据批量更新里的更新条件排序 可能冲突的跨表事务尽量避免并发 尽量缩短事务长度    业务逻辑加锁\r#\r\r  业务流程中的悲观锁\n 任何的并发修改都有可能造成我们的业务逻辑最终的错误，在事务流程中一开始就加锁，最后释放    如何缩短锁的时间\n  "}),a.add({id:290,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/em24ppenbm/',title:"如何保持积极乐观的心态",section:"自信",content:"如何保持积极乐观的心态\r#\r\r"}),a.add({id:291,href:'/life/docs/plan/',title:"计划 ",section:"Docs",content:"关于信息技术\r#\r\r关于人类组织\r#\r\r关于实际执行\r#\r\r关于精妙的技巧\r#\r\r"}),a.add({id:292,href:'/life/docs/databases/mysql_163%E8%AF%BE%E5%A0%82/%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82mysql_chapter4/',title:"MySQL应用优化",section:"网易云课堂MySQL微专业学习笔记",content:"MySQL应用优化\r#\r\r4.1-MySQL索引优化与设计\r#\r\r什么是索引\r#\r\r 索引的意义 —— 快速定位要查找的数据  数据库索引查找\r#\r\r 全表扫描 VS 索引查找  如何根据首字母找到所在行\r#\r\r 二分查找 B+tree  InnoDB表聚簇索引\r#\r\r索引中只放着排序字段和ID\n创建索引\r#\r\r 单列索引  create index idx_test1 on tb_student (name);  联合索引  create index idx_test2 on tb_student (name, age);  索引中先根据name排序，name相同的情况下，根据age排序  索引维护\r#\r\r 索引维护由数据库自动完成 插入/修改/删除每一个索引行都会变成一个内部封装的事务 索引越多，事务越长，代价越高 索引越多对表的插入和索引字段修改就越慢 控制表上索引的数量，切忌胡乱添加无用索引  如何使用索引\r#\r\r 依据WHERE查询条件建立索引  select a, b from tab_a where c=? ; idx_c (c) select a, b from tab_a where c=? and d=?; idx_cd (c, d)  排序order by, group by, distinct字段添加索引  select * from tb_a order by a; select a, count(*) from tb_a group by a; idx_a (a) select * from tb_a order by a, b; idx_a_b (a, b) select * from tb_a order where c=? by a; idx_c_a (c, a) 索引与字段选择性\r#\r\r  某个字段其值的重复程度\n  选择性很差的字段通常不适合创建单列索引\n 男女比例相仿的列表中性别不适合创建单列索引 如果男女比例极不平衡，要查询的又是少数方(理工院校查女生)可以考虑使用索引    联合索引中选择性好的字段应该排在前面\n  select * from tab_a where gender=? and name=?; idx_a1 (name, gender) 联合索引与前缀查询\r#\r\r 联合索引能为前缀单列，复列查询提供帮助  idx_smp (a, b, c) where a=? ; where a=? and b=? ; where a=? and c=? ;(部分ok)  合理创建联合索引，避免冗余 (a) , (a, b) , (a, b, c) X (a, b, c) ok  长字段上的索引\r#\r\r 在非常长的字段上建立索引影响性能 InnoDB索引单字段(utf8)只能取前767 bytes 对长字段处理的方法  Email类，建立前缀索引  Mail_addr varchar(2048) idx_mailadd (Mail_addr(30)) ok  住址类，拆分字段  Home_address varchar(2048) idx_mailadd (Mail_addr(30)) ? -- 很可能前半段都是相同的省市区街道名称 Province varchar(1024), City varchar(1024), District varchar(1024), Local_address varchar(1024) ... -- 建立联合索引或单列索引   索引覆盖扫\r#\r\r 最核心SQL考虑索引覆盖 select Name from tb_user where UserID=? Key idx_uid_name(UserID, Name)  不需要回表获取name字段，IO最小，效率最高  无法使用索引的情况\r#\r\r 索引列进行数学运算或函数运算 where id+1=10; X where id = (10-1); ok year(col) \u0026lt; 2007; X col \u0026lt; \u0026#39;2007-01-01\u0026#39;; ok  未含符合索引的前缀字段 Idx_abc (a, b, c): where b=? and c=?; X (b, c) ok  前缀通配,'_\u0026lsquo;和\u0026rsquo;%\u0026lsquo;通配符 Like \u0026#39;%xxx%\u0026#39;; X Like \u0026#39;xxx%\u0026#39;; ok  where 条件使用NOT, \u0026lt;\u0026gt;, != 字段类型匹配  并不绝对，但是无法预测地会造成问题，不要使用  a int(11), idx_a (a) where a = \u0026#39;123\u0026#39;; X where a = 123 ; ok   利用索引排序\r#\r\ridx_a_b (a, b)\n 能够使用索引帮助排序的查询：  order by a a = 3 order by b order by a, b order by a desc, b desc a \u0026gt; 5 order by a  不能使用索引帮助排序的查询：  order by b a \u0026gt; 5 order by b a in (1, 3) order by b order by a asc, b desc 如何确定一个查询走没走索引，走了哪个索引\r#\r\r explain是确定一个查询如何走索引最简便有效的方法 explain select * from tb_test ; 关注的项目  type:查询access的方式 key:本次查询最终选择使用哪个索引，NULL为未使用索引 key_len:选择的索引使用的前缀长度或者整个长度 rows:可以理解为查询逻辑读，需要扫描过的记录行数 extra:额外信息，主要指的fetch data的具体方式    4.2-MySQL数据库设计\r#\r\r什么是Schema设计\r#\r\r 设计数据库的表，索引，以及表和表的关系  在数据模型的基础上将关系模型转化为数据库表 满足业务模型需要基础上根据数据库和应用特点优化表结构    为什么Schema需要设计\r#\r\r Schema关系到应用程序功能与性能  满足业务功能需要 同性能密切相关 数据库扩展性 满足周边需求(统计，迁移等)   关系型数据库修改Schema经常是高危操作  Schema设计要体现一定的前瞻性    完全由开发者主导的Schema设计\r#\r\r 着眼于实现当前功能 完全基于功能的设计可能存在一些隐患  不合理的表结构或索引设计造成性能问题 没有合理评估到数据量的增长造成空间紧张而且难以维护 需求频繁修改造成表结构经常变更 业务重大调整导致数据经常需要重构订正    基于性能的表设计\r#\r\r 根据查询需要设计好索引 根据核心查询需求，适当调整表结构 基于一些特殊业务需求，调整实现方式  索引\r#\r\r 正确使用索引 更新尽可能使用主键或唯一索引 主键尽可能使用自增ID字段 核心查询覆盖扫描  用户登录需要根据用户名返回密码用于验证create index idx_uname_passwd on tb_user (username, password); 建立联合索引避免回表取数据    反范式，冗余必要字段\r#\r\r 针对核心SQL保留查询结果所必须的冗余字段，避免频繁join  例：消息表中冗余了每次读消息必须返回的nickname字段，避免每次读消息都变成join操作。代价是用户修改nickname成本变高。    拆分大字段\r#\r\r 拆分大字段到单独表中，避免范围扫描代价大  例：博文表拆分两份，标题表只保留标题和内容缩略部分，用于快速批量返回标题列表，正文表保存大段博文内容，用于点开文章单个读取    避免过多字段或过长行\r#\r\r 根据SQL必要返回设计字段，有必要就拆表，避免过多字段 一次没有必要获取那么多列数据 行过长导致表数据页记录变少，范围扫描性能降低 更新数据也代价增加 16K也最少放2行，可能出现行迁移  分页查询\r#\r\r 避免limit + offset过大 应该使用自增主键ID模拟分页  第一页，直接查 得到第一页的max(id)=123(一般是最后一条记录) 第二页，带上id\u0026gt;123查询：where id\u0026gt;123 limit 100 这样每次只需要扫描100条数据   要求业务上禁止查询XX页之后的数据  热点读数据特殊处理\r#\r\r 根据数据获取的频率或数量不同对热点数据做特殊处理  例1：论坛系统中置顶帖、公告贴，可以单独拆分存储，由于每次访问都要全部读出来，单独放在一起，避免每次都到普通表中随机找出来    热点写数据特殊处理\r#\r\r 根据数据获取的频率或数量不同对热点数据做特殊处理  例2：微博系统中对于大量关注的热点账号消息从\u0026quot;推\u0026quot;改为\u0026quot;拉\u0026quot;，避免过量insert操作。    准实时统计\r#\r\r 对不需要精确结果的计数等统计要求，建立定期更新结果表  例：首页要求展示动态成交总金额，维护一个计数表，每分钟根据原表注册时间获取增量sum值更新计数表，避免每次用户刷新都要扫描交易全记录表    实时统计改进1 - 触发器实时统计\r#\r\r 对需要精确统计的计数利用数据库触发器维护计数表  例：用户量冲亿活动要求实时统计，用户表上加触发器，每次有新用户插入就同时在计数表+1    实时统计改进2 - 缓存实时统计\r#\r\r 对需要精确统计的计数利用前端缓存实时维护计数  例：用户量冲亿活动要求实时统计，注册数量在缓存中实时维护，每注册一个就+1，完全避免数据库读写操作。缓存万一故障失效，可从数据库整体count重新获取。    实时统计改进2 - 最大自增ID获取总数\r#\r\r 很多逻辑可以利用自增ID主键最大值直接作为总数  例：用户量冲亿活动要求实时统计，用户表加上自增ID作为主键，只要取当时max(ID)就可以得到用户总数    课拓展性设计\r#\r\r 可拓展性  硬件资源增长有极限的情况下处理尽可能久的线上业务   数据分级，冷数据归档与淘汰  可以不断释放空间供新数据使用   为数据分布式做准备  分库分表 水平拆分 牺牲一定的关系模型支持    分区表与数据淘汰\r#\r\r range分区 适合数据需要定期过期的大表 单个分区扫描迁移数据到历史库避免全表扫描IO开销 删除单个分区非常高效  分区表与垂直分区\r#\r\r list分区 适合将来可能要基于地区，类目等方式垂直拆分数据的方式 清理节点上不要的数据非常高效  分区表与水平分区\r#\r\r hash分区 适合将来需要做水平拆分的表 清理节点上不要的数据非常高效  MySQL分区表的局限\r#\r\r 主键或唯一键必须包含在分区字段内 分区字段必须是整数类型，或者加上返回整数的函数  满足周边需求\r#\r\r 为周边需求额外增加表设计  为后台统计任务增加特殊索引 为数据迁移或统计需求增加时间戳    统计和后台需求\r#\r\r 统计运行SQL往往和线上有很大不同  利用MySQL——主多从，主从可以建不同索引的特性将统计分流到特定从库 包括一些特殊用户批量查询等，所有对线上有IO压力的查询都要读写分离    自动更新时间戳\r#\r\r 统计需求经常要求从线上读走增量数据 表的第一个timestamp类型字段再写入时如果不填值，会自动写入系统时间戳 表的第一个timestamp类型字段每次记录发生更新后都会自动更新 在update_time字段上建索引用于定时导出增量数据  Schema设计与前瞻性\r#\r\r 基于历史经验教训，预防和解决同类问题 把折腾DBA够呛的所有Schema改造的原因记录并分析总结 例： 业务为例用户信息加密做了大改造  数据库结果大量改动，增加了加密字段，验证策略表，所有表重新订正数据等等 是否所有用到用户信息管理的应用都要去上线就用密文？   程序bug误删数据，线上风险大  改造业务流程，不再删除数据，加入is_deleted标记位，经常给各种表加 今后的类似表是否一上线就都用标记位的方式，并加上修改原因字段？   支付类应用后期做了风控改造  对线上订单大表改造，加了限额，终端类型等字段 遇到支付类应用，是否一上线就提示业务是否需要考虑风控并留好相关字段？    4.3-MySQL容量评估\r#\r\r性能容量评估\r#\r\r 分析线上业务场景 评估数据库服务器所需性能指标 预估可能成为瓶颈的服务器资源 帮助数据库性能调优  数据库服务器硬件性能指标\r#\r\r 磁盘IO性能 内存容量 CPU 网络吞吐量 磁盘容量  数据库业务特点关键词\r#\r\r OLTP/OLAP类型 并发请求 读写比例 数据量 冷热数据比 数据分级存储  OLTP/OLAP\r#\r\r T = Transaction 面向广大用户，高并发，较短事务操作 互联网应用绝大部分属于OLTP OLTP看重服务器CPU，内存，写事务较多或内存不够则依赖磁盘IO A = Analytical 通常面向内部人员，大规模复查询 OLAP看重磁盘扫描的IO能力，部分依赖内存排序  并发请求 - 衡量线上业务繁忙程度\r#\r\r 业务高峰时数据库的每秒并发访问量是多少 通过应用服务器数量，连接池配置判断 通过产品估算初上线用户规模和用户增长速度判断 通过实际业务业务类型判断 并发量相关资源：CPU  读写比例 - 描述应用程序如何使用数据库\r#\r\r 线上业务select只读与update/delete/insert写操作比例 delete/update通常都是先读再写 insert需要区分数据写入时持续insert还是大量导入数据 根据业务实际场景分析 多读场景相关资源：内存 多写场景相关资源：磁盘IO  数据量 - 总量\r#\r\r 数据库服务器存储设备可扩容能力的上限 根据估算的业务量，写入模式，分析数据增长量 预估一个硬件升级周期内数据库可存放数据的总量，上线时要留好余量 数据总量相关资源：磁盘容量  冷数据与热数据 - 有用数据的实时集合\r#\r\r 热数据，线上最新一定周期内将被反复访问的数据 冷数据，线上保存着的，最近不会被在线用户用到的数据 估算活跃用户量，数据增长量等预估热数据量 内存大小尽可能足够存放线上实时热数据 热数据相关资源：内存  线上数据分层存储 - 缓解线上磁盘空间压力\r#\r\r 最新热数据确保放在内存中 还可能访问到的较早数据存放在线上库磁盘中 更早的不会常规访问的数据定期迁移至历史库中 区分哪些数据时效性强可以迁移  服务器资源选型 - 将可选方案列出来\r#\r\r   资源指标 可选方案     磁盘IO性能 单盘 -\u0026gt; 盘阵; SATA -\u0026gt; SAS; HDD -\u0026gt; SSD   内存容量 较小内存 -\u0026gt; 较大内存   CPU 普通 -\u0026gt; 多核，超线程   网络吞吐量 千兆 -\u0026gt; 万兆; 单网卡 -\u0026gt; 多路;   磁盘容量 单盘 -\u0026gt; 盘阵; 单盘 -\u0026gt; LVM    案例一，网易云音乐曲库数据库服务器评估\r#\r\r 用于存放线上数千万歌曲信息 确定属于OLTP线上类型数据库 并发请求量  50台应用服务器，每台最大连接数100 可能峰值5000qps，并发请求量较大   CPU需求高 读写比例  访问模式以用户列出歌单和播放歌曲时查询歌曲信息为主，用户只有只读查询 写数据发生在录入新歌或修改歌曲信息时后台操作，写比例小，且为批量导入 读写比100:1   数据总量  估算每首歌信息8K，总计5000万，总量400G 数据总量增长相对缓慢   冷热数据  5000万歌曲中大约40%可能被访问，10%属于热点歌曲 热数据大约\u0026lt;=40G   数据分级存储需求  由于没有用户产生的数据，歌曲信息无法分级存储   内存需求一般，\u0026gt;=40G 磁盘IO能力需求一般 网络流量要求，8k*2500/1024 ≈ 20MB/S，一般     资源指标 可选方案     磁盘IO性能 两块SAS做RAID1   内存容量 96G内存   CPU 2c8core超线程 相当于32核   网络吞吐量 千兆双网卡bunding   磁盘容量 900G    案例二，网易理财销售数据库服务器评估\r#\r\r 用于存放理财用户线上订单 确定属于OLTP线上类型数据库 业务场景有明显特征  特定高息产品秒杀销售时间窗有大量并发订单写入 平时只有少量订单查询和请求，和较低的常规产品购买请求   评估应以满足最关键的业务高峰为基准 并发请求量  秒杀期间持续时间短，但是并发量预估30台应用服务器约2000tps   读写比例  高峰时写订单是主要开销操作   CPU要求高 磁盘IO要求很高 数据总量  根据业务分析，订单属于写入瞬时量大，总量较小，单笔金额较高 总量预估一年成交百万级别，增长较稳定 判断数据存储需求小于200G   冷热数据  峰值写入为主，内存要求存放热点期间产生的脏数据即可   数据分级存储需求  用户订单业务约定页面展示最近半年订单，半年前的需要到历史查询页面专门查询 因此可以做分级存储，迁移所有半年前的订单至历史库   内存需求一般， \u0026gt;= 30G 磁盘空间需求一般， \u0026gt;=200G 磁盘IO能力需求很高 网络要求较高  并发流量较高 响应速度要求高       资源指标 可选方案     磁盘IO性能 两块SSD做RAID1   内存容量 64G内存   CPU 2c8core超线程 相当于32核   网络吞吐量 万兆双网卡bunding   磁盘容量 600G    4.4-MySQL性能测试\r#\r\r为什么需要性能测试\r#\r\r 对线上产品缺乏心理预估 重现线上异常 规划未来的业务增长 测试不同硬件软件配置  性能测试的分类\r#\r\r 设备层的测试 业务层的测试 数据库层的测试  设备层的测试\r#\r\r 关注的指标  服务器、磁盘性能 磁盘坏块率 服务器寿命    业务层测试\r#\r\r 针对业务进行测试  数据库层测试\r#\r\r 什么情况下要做MySQL的测试  测试不同的MySQL分支版本 测试不同的MySQL版本 测试不同的MySQL参数搭配    MySQL测试分类\r#\r\r CPU Bound IO Bound  写入测试 更新测试 纯读测试 混合模式\n常用的测试工具\r#\r\r 开源的MySQL性能测试工具  sysbench tpcc-mysql mysqlslap   针对业务编写性能测试工具  blogbench    性能测试衡量指标\r#\r\r 服务吞吐量(TPS, QPS) 服务响应时间 服务并发性  Sysbench\r#\r\r 业界较为出名的性能测试工具 可以测试磁盘、CPU、数据库 支持多种数据库：Oracle, DB2, MySQL 需要自己下载编译安装 建议版本：sysbench0.5  编译安装Sysbench\r#\r\r 下载sysbench  git clone https://github.com/akopytov/sysbench.git   编译\u0026amp;安装  ./autogen.sh ./configure make \u0026amp;\u0026amp; make install    Sysbench流程\r#\r\r 常见的做法  初始化数据 -\u0026gt; 运行测试 -\u0026gt; 清理数据\nPrepare语法\r#\r\rsysbench --test=parallel_prepare.lua --oltp_tables_count=1 --rand-init=on --oltp-table-size=500000000 --mysql-host=127.0.0.1 --mysql-port=3306 --mysql-user=sys --mysql-password=netease --mysql-db=sbtest --max-requests=0 prepare    参数 含义     \u0026ndash;test=parallel_prepare.lua 运行导数据的脚本   \u0026ndash;oltp_tables_count 测试需要几张表   \u0026ndash;oltp-table-size 每张表的大小   \u0026ndash;mysql-host MySQL Host   \u0026ndash;mysql-port MySQL Port   \u0026ndash;mysql-db MySQL DB   \u0026ndash;mysql-user MySQL User   \u0026ndash;mysql-password MySQL Password   \u0026ndash;rand-init 是否随机初始化数据   \u0026ndash;max-requests 执行多少个请求之后停止   prepare 执行导数据    Sysbench表结构\r#\r\rcreate table \u0026#39;sbtest1\u0026#39;( \u0026#39;id\u0026#39; int(10) unsigned not null AUTO_INCREMENT, \u0026#39;k\u0026#39; int(10) unsigned not null DEFAULT \u0026#39;0\u0026#39;, \u0026#39;c\u0026#39; char(120) not null DEFAULT \u0026#39;\u0026#39;, \u0026#39;pad\u0026#39; char(60) not null DEFAULT \u0026#39;\u0026#39;, PRIMARY KEY (\u0026#39;id\u0026#39;), KEY \u0026#39;k_1\u0026#39; (\u0026#39;k\u0026#39;) ) ENGINE=InnoDB AUTO_INCREMENT=3000000001 DEFAULT CHARSET=utf8 MAX_ROWS=1000000 Run语法\r#\r\rsysbench --test=oltp.lua --oltp_tables_count=1 --num-threads=100 --oltp-table-size=500000000 --oltp-read-only=off --report-interval=10 --rand-type=uniform --mysql-host=127.0.0.1 --mysql-port=3306 --mysql-user=sys --mysql-password=netease --mysql-db=sbtest --max-time=1000 --max-requests=0 run    参数 含义     \u0026ndash;test=oltp.lua 需要运行的lua脚本   \u0026ndash;oltp_tables_count 测试需要几张表   \u0026ndash;oltp-table-size 每张表的大小   \u0026ndash;num-threads 测试并发线程数   \u0026ndash;oltp-read-only 是否为只读测试   \u0026ndash;report-interval 结果输出间隔   \u0026ndash;rand-type 数据分布模式，热点数据或者随机数据   \u0026ndash;max-time 最大运行时间   \u0026ndash;max-requests 执行多少个请求之后停止   prepare 开始测试    特殊情况\r#\r\r 写入测试  写入数据进行测试 -\u0026gt; 清理数据\ncleanup\r#\r\r 手动drop掉表和database 使用sysbench提供的cleanup命令  sysbench --test=parallel_prepare.lua --oltp_tables_count=1 --rand-init=on --oltp-table-size=500000000 --mysql-host=127.0.0.1 --mysql-port=3306 --mysql-user=sys --mysql-password=netease --mysql-db=sbtest --max-requests=0 cleanup Tpcc-mysql\r#\r\r  TPC-C是专门针对联机交易处理系统(OLTP系统)的规范\n  Tpcc-mysql由percona根据规范实现\n  下载Tpcc-mysql\n bzr branch lp:~percona-dev/perconatools/tpcc-mysql    编译安装\n  使用Tpcc-mysql的步骤\r#\r\r创建表结构和索引 -\u0026gt; 导数据 -\u0026gt; 运行测试 -\u0026gt; 数据清理\n创建表结构\r#\r\r create_table.sql add_fkey_idx.sql  Tpcc-load\r#\r\rtpcc_load [server] [DB] [user] [pass] [warehouse]\n   函数 含义     server 数据库IP   DB DB名称   user 用户名   pass 密码   warehouse 仓库数量    Tpcc-start\r#\r\rtpcc_start -h server_host -P port -d database_name -u mysql_user -p mysql_password -w warehouse -c connections -r warmup_time -I running_time -i report-interval -f report-file    函数 含义     warehouse 仓库数量   connections 并发线程数   warmup_time 预热时间   running_time 运行时间   report_interval 输出时间间隔   report_file 输出文件    总结\r#\r\r IO Bound测试数据量要远大于内存、CPU Bound测试数据量要小于内存 测试时间建议大于60分钟，减小误差 Sysbench更倾向于测试MySQL性能、TPCC更接近于业务 运行测试程序需要同时监控机器负载，MySQL各项监控指标  "}),a.add({id:293,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/mm8cnxmzyz/',title:"社恐、性格闷、胆子小",section:"自信",content:"解决办法\r#\r\r"}),a.add({id:294,href:'/life/docs/databases/mysql_163%E8%AF%BE%E5%A0%82/%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82mysql_chapter5/',title:"MySQL运维实践",section:"网易云课堂MySQL微专业学习笔记",content:"MySQL运维实践\r#\r\r5.1-MySQL日志系统\r#\r\r什么是日志\r#\r\r 日志(log)是一种顺序记录事件流水的文件 记录计算机程序运行过程中发生了什么 多种多样的用途  帮助分析程序问题 分析服务请求的特征、流量等 判断工作是否成功执行 等等……    MySQL日志的分类\r#\r\r 服务器日志  记录进程启动运行过程中的特殊事件，帮助分析MySQL服务遇到的问题 根据需求抓取特定的SQL语句，追踪性能可能存在的问题的业务SQL   事务日志  记录应用程序对数据的所有更改 可用于数据恢复 可用于实例间数据同步       分类 日志名称     服务器日志 服务错误日志   服务器日志 慢查询日志   服务器日志 综合查询日志   事务日志 存储引擎事务日志   事务日志 二进制日志    服务错误日志\r#\r\r 记录实例启动运行过程中重要消息 配置参数  log_error = /data/mysql_data/node-1/mysql.log   内容并非全是错误消息 如果mysqld进程无法正常启动首先查看错误日志  慢查询日志\r#\r\r 记录执行时间超过一定阈值的SQL语句 配置参数  slow_query_log = 1 slow_query_log_file = /data/mysql_data/node-1/mysql-slow.log long_query_time = 5  用于分析系统中可能存在性能问题的SQL  综合查询日志\r#\r\r 如果开启将会记录系统中所有SQL语句 配置参数  general_log = 1 general_log_file = /data/mysql_data/node-1/mysql-slow.log  偶尔用于帮助分析系统问题，对性能有影响  查询日志的输出与文件切换\r#\r\r 日志输出参数  log_output={file|table|none}\n 如果日志文件过大，可以定期截断并切换新文件  flush log;\n存储引擎事务日志\r#\r\r 部分存储引擎拥有重做日志(redo log) 如InnoDB, TokuDB等WAL(Write Ahead Log)机制存储引擎 日志随着事务commit优先持久化，确保异常恢复不丢数据 日志顺序写性能较好  InnoDB事务日志重用机制\r#\r\r InnoDB事务日志采用两组文件交替重用  二进制日志binlog\r#\r\r binlog (binary log) 记录数据引起数据变化的SQL语句或数据逻辑变化的内容 MySQL服务层记录，无关存储引擎 binlog的主要作用：  基于备份恢复数据 数据库主从同步 挖掘分析SQL语句    开启binlog\r#\r\r 主要参数  log_bin = c:/tmp/mylog/mysql-bin\rsql_log_bin = 1\rsync_binlog = 1\r 查看binlog  show binary logs;\nbinlog管理\r#\r\r 主要参数  max_binlog_size = 100MB\rexpire_logs_days = 7\r  binlog始终生成新文件，不会重用\n  手工清理binlog\n  purge binary logs to 'mysql-bin.000009';\rpurge binary logs before '2016-4-2 21:00:40'\r查看binlog内容\r#\r\r 日志  show binlog events in 'mysql-bin.000011';\rshow binlog events in 'mysql-bin.000011' from 60 limit 3;\r mysqlbinlog工具  mysqlbinlog c:/tmp/mylog/mysql-bin.000001\r--start-datetime | --stop-datetime\r--start-position | --stop-position\rbinlog格式\r#\r\r 主要参数  binlog_format = {ROW|STATEMENT|MIXED}\n 查看row模式的binlog内容  mysqlbinlog --base64-output=decode-rows -v c:/tmp/mylpg/mysql-bin.000001\n5.2-MySQL数据备份\r#\r\r基本指数 - 备份用途\r#\r\r 数据备灾  应对硬件故障数据丢失 应对人为或程序bug导致数据删除   制作镜像库以供服务  需要将数据迁移、统计分析等用处 需要为线上数据建立一个镜像    基本知识 - 备份内容\r#\r\r 数据  数据文件或文本格式数据   操作日志(binlog)  数据库变更日志    基本知识 - 冷备份与热备份\r#\r\r 冷备份  关闭数据库服务，完整拷贝数据文件   热备份  在不影响数据库读写服务的情况下备份数据库    基本知识 - 物理备份与逻辑备份\r#\r\r 物理备份  以数据页的形式拷贝数据   逻辑备份  导出为裸数据或者SQL(insert)语句    基本知识 - 本地备份与远程备份\r#\r\r 本地备份  在数据库服务器本地进行备份   远程备份  远程连接数据库进行备份    基本知识 - 全量备份与增量备份\r#\r\r 全量备份  备份完整的数据库   增量备份  只备份上一次备份以来发生修改的数据    基本知识 - 备份周期\r#\r\r考虑因素：\n 数据库大小(决定备份时间) 恢复速度要求(快速or慢速) 备份方式(全量or增量)  常用工具及用法\r#\r\r mysqldump - 逻辑备份，热备 xtrabackup - 物理备份， 热备 Lvm/zfs snapshot - 物理备份 mydumper - 逻辑备份，热备 cp - 物理备份，冷备  常用工具及用法 - mysqldump\r#\r\rMySQL官方自带的命令行工具\n主要示例：\n 演示使用mysqldump备份表、库、实例  # 备份所有数据库 mysqldump -uroot -p123456 --socket=/var/run/mysqld/mysqld.sock --all-databases \u0026gt; /dbbackup/all_db.sql # 备份指定的数据库 mysqldump -uroot -p123456 --socket=/var/run/mysqld/mysqld.sock --databases db2 \u0026gt; /dbbackup/db2.sql # 备份单个表 mysqldump -uroot -p123456 --socket=/var/run/mysqld/mysqld.sock db2 t1 \u0026gt;/dbbackup/db2_t1.sql # 还原表 mysql \u0026gt; source /dbbackup/db2_t1.sql  演示使用mysqldump制作一致性备份  mysqldump --single-transaction -uroot -p123456 --all-databases \u0026gt; /dbbackup/add_db_2.sql  演示使用mysqldump远程备份一个数据库  mysqldump -utest -ptest -h192.168.0.68 -P3306 --all-databases \u0026gt; /dbbackup/remote_bakall.sql  演示使用mysqldump导出数据为csv格式  mysqldump -uroot -p123456 --single-transaction --fields-terminated-by=, db1 -T /tmp 常用工具及用法 - xtrabackup\r#\r\r特点：\n 开源，在线备份InnoDB表 支持限速备份，避免对业务造成影响 支持流备 支持增量备份 支持备份文件压缩与加密 支持并行备份与恢复，速度快  xtrabackup备份原理\r#\r\r 基于InnoDB的crash-recovery功能 备份期间允许用户读写，写请求产生redo日志 从磁盘上拷贝数据文件 从InnoDB redo log file实时拷贝走备份期间产生的所有redo日志 恢复的时候 数据文件 + redo日志 = 一致性数据  实用脚本innobackupex\r#\r\r 开源Perl脚本，封装调用xtrabackup及一系列相关工具与OS操作，最终完成备份过程 支持备份InnoDB和其他引擎的表 备份一致性保证  innobackupex备份基本流程\r#\r\rstart xtrabackup_log -\u0026gt; copy .ibd; ibdata1 -\u0026gt; FLUSH TABLE WITH READ LOCK -\u0026gt; copy .FRM; MYD; MYI; misc files -\u0026gt; Get binary log position -\u0026gt; UNLOCK TABLES -\u0026gt; stop and copy xtrabackup_log\ninnobackupex使用\r#\r\r主要示例：\n 全量备份  innobackupex --user=root --password=123456 --defaults-file=/etc/mysql/my.cnf /dbbackup  增量备份  innobackupex --user=root --password=123456 --defaults-file=/etc/mysql/my.cnf --incremental --incremental-dir /dbbackup/2016-4-3_13:24:32 /dbbackup  流方式备份  innobackupex --user=root --password=123456 --defaults-file=/etc/mysql/my.cnf --stream=xbstream /dbbackup/ \u0026gt; /dbbackup/stream.bak  并行备份  innobackupex --user=root --password=123456 --defaults-file=/etc/mysql/my.cnf --parallel=4 /dbbackup/  限流备份  innobackupex --user=root --password=123456 --defaults-file=/etc/mysql/my.cnf --throttle=10 /dbbackup/  压缩备份  innobackupex --user=root --password=123456 --defaults-file=/etc/mysql/my.cnf --compress --compress-thread 4 /dbbackup/ 如何制定备份策略\r#\r\r需要考虑的因素\n 数据库是不是都是innodb引擎表 -\u0026gt; 备份方式，热备or冷备 数据量大小 -\u0026gt; 逻辑备份or物理备份，全量or增量 数据库本地磁盘空间十分充足 -\u0026gt; 备份到本地or远程 需要多块恢复 -\u0026gt; 备份频率 小时or天  5.3-MySQL数据恢复\r#\r\r什么时候需要恢复数据\r#\r\r 硬件故障(如磁盘损坏) 人为删除(如误删除数据、被黑) 业务回滚(如游戏bug需要回档) 正常需求(如部署镜像库、查看历史某时刻数据)  数据恢复的必要条件\r#\r\r 有效备份 完整的数据库操作日志(binlog)  数据恢复思路\r#\r\r 最新一次备份 + binlog恢复到故障时间点(适用于各种数据丢失场景) 挖掘最后一次备份到故障点之间的binlog获取相关SQL语句，构造反转SQL语句并应用到数据库(只是用于记录丢失，且binlog必须是row格式)  反转SQL语句\r#\r\r例：\nt1(id primary key, a int)\n反转SQL语句：\ninsert into t(id, a) values(1, 1) -\u0026gt; delete t1 where id=1 and a=1 update t1 set a=5 where id=1 -\u0026gt; update t1 set a=1 where id=1 delete from t1 where id=1 -\u0026gt; insert into t(id, a) values(1, 1)\n数据库恢复工具与命令\r#\r\r mysqldump备份 -\u0026gt; source恢复 xtrabackup备份 -\u0026gt; xtrabackup恢复 binlog备份 -\u0026gt; mysqlbinlog恢复  详细示例讲解\r#\r\r 恢复某几条误删数据 恢复误删表、库 将数据库恢复到指定时间点  恢复误删除数据\r#\r\rcase：误操作，删除数据忘记带完整条件，执行delete from user where age \u0026gt; 30 [and sex=male]\n需求：将被删除的数据还原\n恢复前提：完整的数据库操作日志(binlog)\ndelete from user where sex=\u0026#39;female\u0026#39;; # 首先需要找到binlog里的信息 mysqlbinlog -vv mysql-bin.000001 # 找出sql语句，然后写出反转sql语句 恢复误删表、库\r#\r\rcase：业务被黑，表被删除了(drop teble user)\n需求：将表恢复\n前提：备份 + 备份以来完整binlog\ninnobackupex --apply-log /dbbackup/filename # 查看binlog的位置点 cat xtrabackup_binlog_info # 查看结束点 mysqlbinlog -vv filename mysqlbinlog -vv --start-position=2556990 -- stop-position=2776338 mysqlbinlog -vv --start-position=2556990 -- stop-position=2776338 | mysql -uroot -p123456 --sock=/dbbackup/mysql_3309/mysqld.sock 课程小结\r#\r\r 恢复是已经非常苦逼的差事，尽量避免做。我们要做数据卫士而不是救火队员。(线上应该严格把控权限，数据变更操作应事先测试，操作时做好备份) 有效备份(+binlog)是重中之重，对数据库定期备份是必须的 备份是一切数据恢复的基础  5.4-MySQL线上部署\r#\r\rMySQL线上部署\r#\r\r考虑因素：\n 版本选择， 5.1、5.5还是5.6？ 分支选择，官方社区版？ percona server？ Mariadb？ 安装方式，包安装？二进制包安装？源码安装？ 路径配置，参数配置(尽量模板化、标准化) 一个实例多个库 or 多个实例单个库？  二进制安装MySQL\r#\r\r 下载软件包 解压放到指定目录(比如/usr/local) 将MySQL目录放到PATH中 初始化实例，编辑配置文件并启动 账户安全设置  编译安装MySQL\r#\r\r 下载MySQL源码安装包 安装必要包(make cmake bison-devel ncurses-devel build-essential) Cmake配置MySQL编译选项，可以定制需要安装的功能 make \u0026amp;\u0026amp; make install 初始化实例，编辑配置文件并启动 账户安全设置  MySQL升级\r#\r\r 下载MySQL5.6安装包并配置MySQL5.6安装包安装路径 关闭MySQL5.5实例，修改部分参数，使用MySQL5.6软件启动 执行MySQL5.6路径下mysql_upgrade脚本 验证是否成功升级  MySQL多实例安装\r#\r\r 部署好mysql软件 编辑多个配置文件，初始化多个实例 启动MySQL实例  MySQL多实例部署\r#\r\r为啥多实例部署？\n 充分利用系统资源 资源隔离 业务、模块隔离  MySQL线上安装小结\r#\r\r 根据需求选择合适的版本以及分支，建议使用或升级到较高版本5.5或5.6 如果需要定制MySQL功能的话，可以考虑编译安装，否则的话建议使用二进制包安装，比较省事 根据机器配置选择部署多个MySQL实例还是单个实例，机器配置非常好的话，建议部署多实例  5.5-MySQL主从复制\r#\r\rMySQL主从复制\r#\r\r 一主一从 主主复制 一主多从 多主一从 联级复制  MySQL主从复制用途\r#\r\r 实时灾备，用于故障切换 读写分离，提供查询服务 备份，避免影响业务  MySQL主从复制部署\r#\r\r主从部署必要条件\n 主库开启binlog日志(设置log-bin参数) 主从server-id不同 从库服务器能连通主库  主从部署步骤：\n 备份还原(mysqldump或xtrabackup) 授权(grant replication slave on .) 配置复制，并启动(change master to) 查看主从复制信息(show slave status\\G)  MySQL复制存在的问题\r#\r\r存在的问题\n 主机宕机后，数据可能丢失 从库只有一个sql thread，主库写压力大，复制很可能延时  解决方法：\n 半同步复制 并行复制  MySQL semi-sync(半同步复制)\r#\r\r半同步复制\n 5.5集成到MySQL，以插件形式存在，需要单独安装 确保事务提交后binlog至少传输到一个从库 不保证从库应用完这个事务的binlog 性能有一定的降低，响应时间更长 网络异常或从库宕机，卡住主库，直到超时或从库恢复  MySQL异步复制\r#\r\rMySQL semi-sync(半同步复制)\r#\r\r配置MySQL半同步复制\r#\r\r只需一次：\n主库：\nINSTALL PLUGIN rpl_semi_sync_master SONAME 'semisync_master.so';\n从库：\nINSTALL PLUGIN rpl_semi_sync_slave SONAME 'semisync_slave.so';\n动态设置：\n主库：\nSET GLOBAL rpl_semi_sync_master_enabled=1; SET GLOBAL rpl_semi_sync_master_timeout=N; master 延迟切异步\n从库：\nSET GLOBAL rpl_semi_sync_slave_enabled=1;\n配置MySQL并行复制\r#\r\r并行复制\n 社区版5.6中新增 并行是指从库多线程apply binlog 库级别并行应用binlog，同一个数据库更改还是串行的(5.7版并行复制基于事务组)  设置\nset global slave_parallel_workers=10; 设置sql线程数为10\n联级复制\r#\r\rA -\u0026gt; B -\u0026gt; C\nB中添加参数： log_slave_updates B将把A的binlog记录到自己的binlog日志中\n复制监控\r#\r\r查询从库状态：\nshow slave status\\G\n复制出错处理\r#\r\r常见：1062(主键冲突) 1032(记录不存在) 解决：手动处理 或： 跳过复制出错 set global sql_slave_skip_counter=1\n总结\r#\r\r MySQL主从复制是MySQL高可用性、高性能(负载均衡)的基础 简单、灵活，部署方式多样，可以根据不同业务场景部署不同复制结构 MySQL主从复制目前也存在一些问题，可以根据需要部署复制增强功能来解决问题 复制过程中应该时刻监控复制状态，复制出错或延时可能给系统造成影响 MySQL复制是MySQL数据库工程师必知必会的一项基本技能  5.6-MySQL日常运维\r#\r\rDBA运维工作\r#\r\r日常\n 导数据、数据修改、表结构变更 加权限、问题处理 其他 数据库选型部署、设计、监控、备份、优化等  导数据及注意事项\r#\r\r 数据最终形式(csv、sql文本 还是直接导入某库中) 导数据方法(mysqldump、select into outfile) 导数据注意事项  导出为csv格式需要file权限，而且只能数据库本地导 避免锁库锁表(mysqldump使用——single-transaction选项不锁表) 避免对业务造成影响，尽量在镜像库做    数据修改及注意事项\r#\r\r 修改前切记做好备份 开事务做，修改完检查好了再提交 避免一次 修改大量数据，可以分批修改 避免业务高峰期做  表结构变更注意事项\r#\r\r 在低峰期做 表结构变更是否会有锁？(5.6包含online ddl功能) 使用pt-online-schema-change完成表结构变更  可以避免主从延时 可以避免负载过高，可以限速    加权限及注意事项\r#\r\r 只给符合需求的最低权限 避免授权时修改密码 避免给应用账号super权限  问题处理(数据库慢？)\r#\r\r 数据库慢在哪？ show processlist查看mysql连接信息 查看系统状态(iostat, top, vmstat)  小结\r#\r\r 日常工作比较简单，但是任何一个操作都可能影响线上服务 结合不同环境，不同要求选择最合适的方法处理 日常工作应该求稳不求快，保障线上稳定是DBA的最大责任  5.7-MySQL参数调优\r#\r\r为什么要调整参数\r#\r\r 不同服务器之间的配置、性能不一样 不同业务场景对数据的需求不一样 MySQL的默认参数只是个参考值，并不适合所有的应用场合  优化之前我们需要知道什么\r#\r\r 服务器相关的配置 业务相关的情况 MySQL相关的配置  服务器上需要关注哪些\r#\r\r 硬件情况 操作系统版本 CPU、网卡节电模式 服务器numa设置 RAID卡缓存  磁盘调度策略-write back\r#\r\r 数据写入cache既返回，数据异步的从cache刷入存储介质  磁盘调度策略-write through\r#\r\r 数据同时写入cache和存储介质才返回写入成功  Write Back VS Write Through\r#\r\r write Back 性能优于 Write Through Write Through 比 Write Back安全性高  RAID\r#\r\r RAID Redundant Array of Independent Disks  生产环境里一般不太会用裸设备，通常会使用RAID卡对一块盘或多块盘做RAID RAID卡会预留一块内存，来保证数据高效存储与读取 常见的RAID类型有:RAID1、RAID0、RAID10和RAID5    RAID0 VS RAID1\r#\r\r RAID 0 - Block Striped. No Mirror. No Parity. RAID 1 - Block Mirrored. No Stripe. No Parity.  RAID5 VS RAID10\r#\r\r RAID 5 - Block Striped. Distributed Parity.(至少三块盘，每块里有两个数据块和一个校验块) RAID 10 - Block Mirrored.(每两块盘做RAID1，然后再按组做RAID0，至少四块盘)  RAID如何保证数据安全\r#\r\r BBU(Backup Battery Unit)  BBU保证在WB策略下，即使服务器发生掉电或者宕机，也能够将缓存数据写入到磁盘，从而保证数据的安全    MySQL有哪些注意事项\r#\r\r MySQL的部署安装 MySQL的监控 MySQL参数调优  部署MySQL的要求\r#\r\r 推荐的MySQL版本: \u0026gt;= MySQL5.5 推荐的MySQL存储引擎: InnoDB  系统调优的依据：监控\r#\r\r 实时监控MySQL的slow log 实时监控数据库服务器的负载情况 实时监控MySQL内部状态值  通常关注哪些MySQL Status\r#\r\r Com_Select/Update/Delete/Insert Bytes_received/Bytes_sent Buffer Pool Hit Rate Threads_connected/Threads_created/Threads_running  MySQL参数调优\r#\r\r 为什么要调整MySQL的参数  MySQL是通用数据库，但业务是多变的，默认参数无法满足所有业务需求 MySQL内部一些参数是在MySQL一些很老的版本时候做的，可能之前是做限流和保护用的，但随着机器性能的提高，这些保护类的参数可能会成为性能瓶颈    读优化\r#\r\r 合理利用索引对MySQL查询性能至关重要 适当的调整参数也能提升查询性能  innodb_buffer_pool_size\r#\r\r InnoDB存储引擎自己维护一块内存区域完成新老数据的替换 内存越大越能缓存更多的数据  innodb_thread_concurrency\r#\r\r innoDB内部并发控制参数，设置为0代表不做控制 如果并发请求较多，参数设置较小，后进来的请求将会排队  写优化\r#\r\r 表结构设计上使用自增字段作为表的主键 只对合适的字段加索引，索引太多影响写入性能 监控服务器磁盘IO情况，如果写延迟较大则需要扩容 选择正确的MySQL版本，合理设置参数  哪些参数有助于提高写入性能\r#\r\r innoDB_flush_log_at_trx_commit \u0026amp;\u0026amp; sync_binlog innodb log file size innodb_io_capacity innodb insert buffer  主要影响MySQL写性能的两个参数\r#\r\r innoDB_flush_log_at_trx_commit sync_binlog  innoDB_flush_log_at_trx_commit\r#\r\r 控制InnoDB事务的刷新方式，一共有三个值：0,1,2  N=0 - 每隔一秒，把事务日志缓存区的数据写到日志文件中，以及把日志文件的数据刷新到磁盘上(高效，但不安全) N=1 - 每个事务提交时候，把事务日志从缓存区写到日志文件中，并且刷新日志文件的数据到磁盘上，优先使用此模式保障数据安全性(低效，非常安全) N=2 - 每事务提交的时候，把事务日志数据从缓存区写到日志文件中；每隔一秒，但不一定刷新到磁盘上，而是取决于操作系统的调度(高效，但不安全)    sync_binlog\r#\r\r 控制每次写入Binlog，是否都需要进行一次持久化  如何保证事务的安全\r#\r\r innoDB_flush_log_at_trx_commit 和 sync_binlog都设为1 事务要和Binlog保证一致性  (加锁)-\u0026gt; xa_prepare, Fsync -\u0026gt; Write And Fsync Binlog -\u0026gt; InnoDB Commit, Fsync -\u0026gt;(释放锁)\n串行有哪些问题\r#\r\r SAS盘一般每秒只能有150~200个Fsync。 换算到数据库每秒只能执行50~60个事务  社区和官方的改进\r#\r\r MariaDB提出改进，即使这两个参数都是1也能做到合并效果，性能得到了大幅提高。 官方吸收了MariaDB的思想，并在此基础上进行了改进，性能再次得到了提高  Tips:\n 官方在MySQL5.6版本之后才做了这个优化 Percona和MariaDB版本在MySQL5.5已经包含了这个优化  InnoDB Redo log\r#\r\r Write ahead Log  Redo log的作用\r#\r\r Redo log用在数据库崩溃会的故障恢复  Redo log有哪些问题\r#\r\r 如果写入频繁导致Redo log里对应的最老的数据脏页还没有刷新到磁盘，此时数据库将卡住，强制刷新脏页到磁盘 MySQL默认配置两个文件才10M，非常容易写满，生产环境中应适当调整大小。  innodb_io_capacity\r#\r\r InnoDB每次刷多少个脏页，决定InnoDB存储引擎的吞吐能力。 在SSD等高性能存储介质下，应该提高该参数以提高数据库的性能。  Insert Buffer\r#\r\r 顺序读写 VS 随机读写 随机请求性能远小于顺序请求  尽可能多的随机请求合并为顺序请求才是提高数据库性能的关键\n MySQL从5.1版本开始支持Insert Buffer MySQL5.5版本之后同时支持update和delete的merge Insert Buffer只对二级索引且非唯一索引有效  总结\r#\r\r 服务器配置要合理(内核版本、磁盘调度策略、RAID卡缓存) 完善的监控系统，提前发现问题 数据库版本要跟上，不要太新，也不要太老 数据库性能优化：  查询优化：索引优化为主，参数优化为辅 写入优化：业务优化为主，参数优化为辅    "}),a.add({id:295,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/nnefbyyxgr/',title:"逻辑推导",section:"自信",content:"逻辑推导\r#\r\r逻辑自洽\r#\r\r 按照自身的逻辑推演的话，自己可以证明自己本身至少不是矛盾或者错误的\n  没有发现任何矛盾达到自我完备\n 自圆其说\r#\r\r 意思是指使自己的说法前后一致，没有自相矛盾的地方\n 逻辑\r#\r\r通常所说的逻辑，是指我们从某些已知条件出发推出合理的结论的规律\n因此我们可以说，逻辑的可靠性受两个因素的影响：\n第一是：已知条件\n第二是：推导方式、过程\n“推导方式、过程” 决定着结论的可靠性\n在限定条件下，我们所熟知的各种公理、定理必然可导出正确的答案\n但必须注意这些公理、定理所适用的范围以及使用的限制条件。\n错误归因\r#\r\r客观的事情经过错误的归因,就极容易出现错误的推断 很多人分析问题时,喜欢结诸于间接论证, 由A推出B由B得出C,最后证明A可以推出C 这固然是一种正确的逻辑形式,但放到具体个例时常常由于错误归因 ,得出错误的结论 再以错误的结论进一步递推 当然最终的结论就是错误的\n错用诛心论的本质是诉诸动机,它其实也是错误归因的一种表现\n资料来源\n"}),a.add({id:296,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/sstzyfd5je/',title:"社哲讲堂",section:"自我提升",content:" 社哲讲堂 剖析\n 目录\r#\r\r"}),a.add({id:297,href:'/life/docs/databases/mysql/mysql_%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/',title:"数据库设计的规范",section:"mysql学习笔记",content:"数据库设计的规范\r#\r\r 数据库表和字段都大写 表都要加业务后缀，例如_C客户表 _B基础表 _P权限表 必须有主键，主键是表名去掉业务后缀，加_ID，大多表的主键使用UUID 字段多个单词时，全大写，用下划线隔开 类型INT/LONG/DOUBLE/TIMESTAMP/CHAR/VARCHAR2 尽量化在这几个类型中，这样数据库设计相当简单 排序号定死名称ORDER_NO 权限两个字段CREATE_BY创建人，CREATE_DEPT创建部门 记录创建时间CREATE_TIME  "}),a.add({id:298,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/iqcs36rgjy/',title:"人际剖析",section:"自我提升",content:" 人际关系 剖析\n 目录\r#\r\r 什么叫魅力 我无所畏惧，因为 从此你不再受伤害 关于爱情令人不解的一切  "}),a.add({id:299,href:'/life/docs/databases/mysql/mysql%E6%9F%A5%E8%AF%A2/',title:"mysql查询",section:"mysql学习笔记",content:"mysql学习(下面所有都是针对mysql而言)\r#\r\rsql排序语句\r#\r\r 升序   (select f.* from fruits f WHERE s_id IN (101,102) order by f_name)==(select f.* from fruits f WHERE s_id IN (101,102) order by f_name asc)   对于sql的升序而言,当使用了order by之后如果不添加desc那么默认是升序 order by f_name 和 order by f_name ASC 效果一致 降序   (select f.* from fruits f WHERE s_id not IN (101,102) order by f_name DESC )   order by之后加上DESC结果集就是降序   上面结合了 关键字in可以看到 in (101,102)和not in (101,102)\n 带between and 的范围查询\r#\r\r (select f.* from fruits f WHERE f.f_price between 2.00 and 14.00)查询价格在2.00元到14.00元之间的数据,这样也可以(select f.* from fruits f WHERE f.f_price\u0026gt;2.00 and f.f_price\u0026lt;12.67)  带like的字符串匹配查询\r#\r\r (select f.* from fruits f WHERE f.f_name like \u0026lsquo;%g%')查询f_name包含g的记录 (select f.* from fruits f WHERE f.f_name like \u0026lsquo;b%')查询以b开头的记录,同理结尾的字符也是一样原理  查询null值\r#\r\r (select c.* from customers c WHERE c.c_email is null)查询email为null的数据  带and 的多条件查询\r#\r\r (select f.* from fruits f WHERE f.s_id=\u0026lsquo;101\u0026rsquo; and f.f_price\u0026gt;=5)  带or 的多条件查询\r#\r\r (select f.* from fruits f WHERE f.s_id=\u0026lsquo;101\u0026rsquo; or f.s_id=\u0026lsquo;102\u0026rsquo;)  查询结果不重复\r#\r\r (select distinct f.* from fruits f)添加了过滤字段distinct  分组查询\r#\r\r (select f.s_id,count(*) as total from fruits f group by f.s_id) (select f.s_id,count(*) as total,group_concat(f.f_name) as g_name from fruits f group by f.s_id) 这里使用了一个函数group_concat (select f.s_id,count(*) as total,group_concat(f.f_name) as g_name,sum(f.f_price) as price from fruits f group by f.s_id)  HAVING\r#\r\r [在 SQL 中增加 HAVING 子句原因是，WHERE 关键字无法与合计函数一起使用]   (select f.s_id,count(*) as total,group_concat(f.f_name) as g_name,sum(f.f_price) as price from fruits f group by f.s_id having sum(f.f_price)\u0026gt;20)  合并使用\r#\r\rSELECT count( project_work_stage_id ) project_work_stage_id, count( project_phase_id ) project_phase_id_count, sum( actual_hours ) actual_hours_sum, AVG( actual_hours ) actual_hours_avg, GROUP_CONCAT( id ) ids, project_id FROM tb_project_plan_details WHERE 1 = 1 GROUP BY project_id # 以项目编号分组 HAVING # having的好处是可以把列中查询用作比较 	project_phase_id_count \u0026gt;= 3 # 工作事项数量必须大于等于3 ORDER BY project_phase_id_count DESC #确定最大数 	LIMIT 1; #确定最大数 分页查询\r#\r\r (select f.* from fruits f LIMIT 10,5) ||(3-1)*5,5  连接查询(多表)\r#\r\r (select c.,o. from customers c,orders o where c.c_id=o.c_id)普通查询 (select c.,o. from customers c inner join orders o on o.c_id=c.c_id)内连接查询,这里需要注意的是内连接查询的是公共部分,必须是两者都有相同的记录 外连接包括左外连接和右外连接 (select c.,o. from customers c right join orders o on o.c_id=c.c_id)右连接是orders table和customers table的公共部分+orders表记录 (select c.,o. from customers c left join orders o on o.c_id=c.c_id)左连接是orders table和customers table的公共部分+customers表记录 (由于mysql不支持全连接full join,所以必须采用其它方法)//select * from orders full join customers on orders.c_id=customers.c_id  索引\r#\r\rcreate table myUser(\rid VARCHAR(255) NOT NULL PRIMARY KEY ,\rname VARCHAR(255),\rcreateTime TIMESTAMP,\rINDEX indexName (name(244))\r)ENGINE=InnoDB DEFAULT CHARSET=utf8\r (show INDEX from myUser)查看所在表的索引  DROP TABLE IF EXISTS user_test;\rCREATE TABLE user_test(\rid int AUTO_INCREMENT PRIMARY KEY,\ruser_name varchar(30) NOT NULL,\rsex bit(1) NOT NULL DEFAULT b'1',\rcity varchar(50) NOT NULL,\rage int NOT NULL\r) ENGINE=InnoDB DEFAULT CHARSET=utf8\r 创建一个组合索引： ALTER TABLE user_test ADD INDEX idx_user(user_name , city , age) 匹配最左前缀是指优先匹配最左索引列，如：上面创建的索引可用于查询条件为：（user_name ）、（user_name, city）、（user_name , city , age）  注：满足最左前缀查询条件的顺序与索引列的顺序无关，如：（city, user_name）、（age, city, user_name）\n"}),a.add({id:300,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/talk_theme/',title:"聊天话题",section:"自我提升",content:" 由于在国内我们需要灵活的调整我们说话的主题这里我自己收集整理一下这些数据\n 目录\r#\r\r 和女孩聊天认知基础  一级话题 二级话题 收集话题1 收集话题2    "}),a.add({id:301,href:'/life/docs/databases/mysql/mysql_regexp/',title:"mysql正则表达式",section:"mysql学习笔记",content:"一:数据准备\r#\r\rCREATE TABLE `t_user` ( `USER_ID` int NOT NULL AUTO_INCREMENT, `USER_NAME` char(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, `USER_PASSWORD` char(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, `USER_EMAIL` char(80) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, PRIMARY KEY (`USER_ID`), KEY `IDX_NAME` (`USER_NAME`) ) ENGINE=InnoDB AUTO_INCREMENT=209 DEFAULT CHARSET=utf8mb3; -- 如果存在此存储过程则删掉 DROP PROCEDURE IF EXISTS proc_initData; DELIMITER ; CREATE PROCEDURE proc_initData() BEGIN DECLARE i INT DEFAULT 1; WHILE i\u0026lt;=6000 DO INSERT INTO t_user(USER_NAME,USER_PASSWORD,USER_EMAIL) VALUES(MD5(UUID()),MD5(UUID()), CONCAT(substring(UUID(),1,7) , \u0026#39;@\u0026#39;, substring(UUID(),4,8) ,\u0026#39;.com\u0026#39;) ); SET i = i+1; END WHILE; END ; CALL proc_initData(); 二:符号介绍\r#\r\r模式	描述（具体匹配什么）\r^	匹配字符串的开始位置。\r$	匹配字符串的结束位置。\r.	匹配除 \u0026quot;\\n\u0026quot; 之外的任何单个字符。\r[...]	匹配所包含的任意一个字符。\r[^...]	匹配未包含的任意字符。\r?	匹配它前面的零个或一个子表达式（字符串）。\r*	匹配它前面的零个或多个子表达式（字符串）。\r+	匹配它前面的一个或多个子表达式（字符串）。\r[abc]	匹配方括号之间列出的任何字符。\r[^abc]	匹配方括号之间未列出的任何字符。\r[A-Z]	匹配任何大写字母。\r[a-z]	匹配任何小写字母。\r[0-9]	匹配从0到9的任何数字。\r[[:\u0026lt;:]]	匹配单词的开头。\r[[:\u0026gt;:]]	匹配单词的结尾。\r[:class:]	匹配字符类，即[：alpha：]匹配字母，[：space：]匹配空格，[：punct：]匹配标点符号，[：upper：] 匹配上层字母。\rp1|p2|p3	匹配任何模式，p1或 p2或p3\r{n}	匹配n前面元素的子表达式\r{m,n}	匹配m到前面元素的n个子表达式\rselect * from t_user; -- 包含8的正则匹配 select * from t_user where USER_NAME REGEXP \u0026#39;8\u0026#39;; -- 包含8或者9的正则匹配 or select * from t_user where USER_NAME REGEXP \u0026#39;8|9\u0026#39;; -- 以8开头的正则匹配 SELECT * from t_user where USER_NAME REGEXP \u0026#39;^8\u0026#39; ; -- 以1结尾的正则匹配 SELECT * from t_user where USER_NAME REGEXP \u0026#39;1$\u0026#39; ; -- 以8或者9开头的正则匹配 SELECT * from t_user where USER_NAME REGEXP \u0026#39;^[8-9]\u0026#39; ; -- 以a-z开头的正则匹配 并且第二位是数字8的正则匹配 SELECT * from t_user where USER_NAME REGEXP \u0026#39;^[a-z]8\u0026#39; ; -- 转义符号 由于.是特殊符号 那么要找包含.的字符必须转义 SELECT * from t_user where USER_PASSWORD REGEXP \u0026#39;\\\\.\u0026#39; ; -- ^[8]* 以8开头有0个或者多个 [a-z]+ 有1个或者多个 0? 有0个或者1个匹配 [:alpha:]{1,4} 任意字符1到4个 SELECT * from t_user where USER_NAME REGEXP \u0026#39;^[8]*[a-z]+0?[:alpha:]{1,4}\u0026#39; ; SELECT CONCAT(USER_ID,\u0026#39;-\u0026#39;,USER_PASSWORD,\u0026#39; USER_NAME:\u0026#39;,USER_NAME) as new_name from t_user where USER_NAME REGEXP \u0026#39;^[8]*[a-z]+0?[:alpha:]{1,4}\u0026#39; ; "}),a.add({id:302,href:'/life/docs/databases/mysql/mysql%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90/',title:"mysql用户与权限",section:"mysql学习笔记",content:" mysql.version=5.7 (必须注意版本)\n 创建用户\r#\r\r ( CREATE USER \u0026lsquo;bob\u0026rsquo;@'%' IDENTIFIED BY \u0026lsquo;07fa533360d9\u0026rsquo;; ) 创建bob用户 密码:07fa533360d9 ( CREATE USER \u0026ldquo;test\u0026rdquo;@\u0026ldquo;localhost\u0026rdquo; IDENTIFIED BY \u0026lsquo;123456\u0026rsquo; )创建test用户　密码123456 ( CREATE USER \u0026ldquo;test\u0026rdquo;@\u0026ldquo;192.168.87.26\u0026rdquo; IDENTIFIED BY \u0026lsquo;123456\u0026rsquo; )创建test用户　密码123456   参数说明:'%\u0026lsquo;表示所有情况都能访问;\u0026lsquo;localhost\u0026rsquo;表示本机才能访问;\u0026lsquo;192.168.87.26\u0026rsquo; 某个具体 ip 才能访问\n 授权命令 (GRANT privileges ON databasename.tablename TO \u0026lsquo;username\u0026rsquo;@\u0026lsquo;host\u0026rsquo; )\r#\r\rGRANT SELECT,INSERT privileges on spring.* to \u0026lsquo;alice\u0026rsquo;@\u0026lsquo;localhost\u0026rsquo; identified by \u0026lsquo;123456\u0026rsquo;\n 参数说明:databasename表示数据库名字;tablename数据库表的名字;username用户名;host表示链接地址如本机localhost,远程任意%,具体ip192.168.87.26\n 授权syncUser用户拥有shard-jdbc-master数据库的所有权限\r#\r\rcreate database testDB;\r# 授予用户在本地服务器对该数据库的全部权限\r# 只能是127.0.0.1才看得到 这里 127.0.0.1 可以换成如localhost\rgrant all privileges on `shard-jdbc-master`.* to 'syncUser'@'127.0.0.1' ; # 授予用户通过外网IP对于该数据库的全部权限\rgrant all privileges on `shard-jdbc-master`.* to 'syncUser'@'%' ;\r授权syncUser用户拥有shard-jdbc-slave数据库的所有权限\r#\r\rgrant select on `shard-jdbc-slave`.* to \u0026#39;syncUser\u0026#39;@\u0026#39;localhost\u0026#39;; /*给予查询权限*/ grant insert on `shard-jdbc-slave`.* to \u0026#39;syncUser\u0026#39;@\u0026#39;localhost\u0026#39;; /*添加插入权限*/ grant delete on `shard-jdbc-slave`.* to \u0026#39;syncUser\u0026#39;@\u0026#39;localhost\u0026#39;; /*添加删除权限*/ grant update on `shard-jdbc-slave`.* to \u0026#39;syncUser\u0026#39;@\u0026#39;localhost\u0026#39;; /*添加权限*/ flush privileges; /*刷新权限*/ 指定部分权限给用户\r#\r\rgrant select,update on testDB.* to \u0026quot;blake\u0026quot;@\u0026quot;localhost\u0026quot; identified by '123456';\rGRANT SELECT, INSERT ON spring.user TO 'alice'@'localhost'; 撤销权限\r#\r\rREVOKE privilege ON databasename.tablename FROM 'username'@'host'; #撤销\rREVOKE grant option ON databasename.tablename FROM 'username'@'host'; #收回\r修改用户密码\r#\r\rupdate mysql.user set authentication_string=password('123456') where User='blake' and Host='localhost';\r 关于修改密码也可以这样 1:select password(\u0026lsquo;1234\u0026rsquo;); 得到string 如1234==\u0026gt;*A4B6157319038724E3560894F7F932C8886EBFCF\n update mysql.user set authentication_string=\u0026quot;*A4B6157319038724E3560894F7F932C8886EBFCF\u0026quot; where User='bob' and Host='localhost';\r 关于远程访问修改\n UPDATE user SET Host='%' WHERE User='alice' AND Host='localhost' LIMIT 1;\rUPDATE user SET Host='192.168.87.26' WHERE User='alice' AND Host='%' LIMIT 1;\r删除用户bob\r#\r\rdelete from user WHERE User='bob'\r刷新系统权限表\r#\r\rflush privileges; 查看权限\r#\r\rshow grants for 'blake'@'localhost';\r"}),a.add({id:303,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/git_andsower/',title:"git出现的问题",section:"解决问题",content:"收集 git 出现的问题\n"}),a.add({id:304,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/idea/',title:"idea出现的问题",section:"解决问题",content:"收集 idea出现的问题\n"}),a.add({id:305,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/maven/',title:"maven出现的问题",section:"解决问题",content:"收集 maven出现的问题\n"}),a.add({id:306,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/visual_studio_code/',title:"visual_studio_code",section:"解决问题",content:"visual studio code\n"}),a.add({id:307,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/',title:"自信",section:"自我提升",content:" 从自身做起才是一个新的提升的开始  说话声音小中气不足\r#\r\r一:\r#\r\r是不是胆子小的问题？自信心不足面对别人说话就小声。我在老板面前说话像老鼠，但是在前女友面前说话像老虎。 这是底气不足的问题。多练习，能大声说话时就大声说话，例如点餐呼叫服务员，例如遇到色魔被XX时叫大叫救命， 例如去银行打劫的时候, 都要多练习。这要靠自己不停建立自信心去克服。多社交多接触不同的人。\n如果不是自信心问题那就是气息问题，中气不足啊。我有时睡眠不够也会说不出话，建议早睡早起，多喝水，多做运动！ 说话也是要用力的，其他肌肉强壮了说话也会更轻松。所以第一步先练好身体！做什么都先得要有一个健康的身体。 你看躺医院的人哪个能大声说话的, 只能晚上大声慘叫。\n身体不好还会口干舌燥的，都不想说话。 还经常有痰！多喝水多喝水多喝水，少吃煎炸食物，少吃糖！被糖粘住喉咙也是不好受，也容易生痰。\n第二步呢，学会省力！！省喉咙的力！如果说话只用喉咙是很累很辛苦的，很容易坏嗓子。 等如你举重只用手腕的力量来举，肯定会废了。会举重的必定懂得要用上全身的力，由下而上，包括小腿大腿，腰，臂。\n说话也是一样，尝试有意识地放松喉咙，让气流自然地通过。 练习下发嘿，嘿，嘿，嘿，哈，哈，哈，哈，哈，哈这样的音， 如果想说话更有力，可以尝试下用腹部，先吸一口气到两腰鼓起，然后维持住腰部鼓起的状态，用这状态说话。 慢慢体会下，练习下。记住喉咙放松喉咙放松喉咙放松。\n还有说是咬字不清的问题。这和音量无关。 试下说慢一点，咬清楚每一个字，用夸张一点的口形去咬字。口嘴动作大一点。 我唱歌时就是学了这方法，然后唱得清楚了声音也会变好。 说到这里我有点不好意思了，其实我很多时候说话也不清楚别人听不到，都问我是不是说给自己听。 所以我很理解什么原因造成。一因为没自信二因为懒，嘴唇不想动！但是我现在需要说得清楚的时候还是可以说得很清楚， 需要大声的时候还是可以说得很大声（都是近年才掌握到方法）。不过身体累的时候我还是会打回原形跟以前一样。\n二:\r#\r\r说话声音小是个非常普遍的问题，我想把话剧演员的训练方法分享给你。\n因为话剧演员不能靠麦克，只靠自己把声音传到剧场的最后一排，所以他们的方法非常有用。\n说话的基础是呼吸。只有通过呼吸让足够的气息通过声带，才能产生声波，并引起共鸣。  有了共鸣的帮助，我们的音量就能放大。\n很多人使用的是胸式呼吸，也就是呼吸时，胸部起伏，腹部不怎么动，或者是吸气时腹部瘪下去，呼气时腹部还原。  这种方法一般吸气量不大，气只存在于肺的中上部。气量有限，所以说话声音会虚而不实，稍微大喊一声，就会感到底气不足。\n 不信的话，你可以试试深吸一口气，然后一口气清晰地念出1至50，胸式呼吸的人一般念到20左右就上气不接下气了。\n  更好的方法是腹式呼吸：吸气时腹部和胸部都扩张，能让气吸得更深、更多，呼气时腹部和胸部慢慢瘪下去，呼气更平稳、更长久。\n  教你一个感受腹式呼吸的方法：平躺，然后膝盖弯曲抬起，双手抱住膝盖，尽力让大腿向胸部靠拢，保持肩膀放松。\n  然后用鼻子深呼吸，这时应该能明显感受到小腹微微扩张，大腿和小腹之间有一点对抗的感觉。\n找到腹式呼吸后，就可以练习让呼吸更长：直立状态下，用鼻子吸气，吸4秒，用嘴巴吐气，吐4秒。  这个时长能达到、没有不舒服后，可以增加到6秒、8秒、10秒。\n学会了深长的呼吸，再来练习控制呼气：吸足气以后，呼气时不要一口气全吐光，而是让气流像“一条线”从门牙缝往外喷出，同时发出“嘶”声，要慢而长。  先练习一次吐气达到10秒，然后慢慢延长至15秒、20秒、30秒……越长越好。你会慢慢发现自己的气息明显增强了。\n上面一步练好了，就可以加上共鸣了：在吐气的时候，不发“嘶”的音，而可以发“咪”“妈”“你”“啊”这些单音。  发音时，要细细地去感受鼻腔或者头腔的振动，可以用手摸摸鼻子，在微微振动就是在共鸣。\n单音会了，可以再提升一点难度——唱音阶来感受共鸣。  试着用一口气，匀速地唱完“DO RE MI FA SO FA MI RE DO”9个音，唱的时候气息一定要慢而长，并且同时能感受到共鸣腔的振动。\n 如果9个音能完整顺利唱下来，并且能感受到鼻腔、胸腔的共鸣，就可以增加难度，一口气唱完“DO RE MI FA SO LA TI DO（高音）TI LA SO FA MI RE DO”15个音。\n  当你已经全都会了以上的共鸣练习，恭喜你，终于可以练大声说话了：\n  找一个不会影响别人的地方，站直，双手叉腰，肩膀放松，抬头，眼睛看着前方。想象在离你十米远的地方有一个人，你要和他打招呼，清晰完整地念出“嗨”，将声音送到十米远。\n注意，千万不要扯着嗓子喊，这时需要的是用气息和共鸣结合，让音量增大，而不是声调的升高。\n 找到音量变大的感觉后，可以逐字念句子，比如“半个月亮爬上来”。你也可以逐字念出背诵过的唐诗宋词，或你喜欢的歌词及诗歌。\n  最后提醒你：发声训练确实很单调，依靠大量的重复训练，不要带着“练一周就有明显进步”的心态。\n  你可以每天练习10-20分钟，坚持半年，一定有进步。\n三:\r#\r\r中气不足。\n外加没自信。\n不用改，在面对自信的人或事时，声音自然会大起来。现在只是自己处在不安全的环境中，声音放小是一种防御机制。不会一直如此的\n四:\r#\r\r说话声音小是因为害羞不自信么 我曾经看到一句话 对我不自信的状态很有帮助：你可以害怕 但别让别人知道。 我会去试着接触不太熟悉的人，心里告诉自己是的我害怕，但就假装不害怕不让她知道就好了。我觉得这个心里暗示很好，让你接受害怕是可以的，没关系的，慢慢的我就从假装不害怕变成了真的不害怕了\n五\r#\r\r底气不够，要内调外养。内调可以学舞蹈，培养自信心，外养就要多吃红枣，红糖。气血充足了，说话才有力道。一个人的气场足够强大的时候就百毒不侵了，那些牛鬼蛇神都会害怕你，你就万事皆顺宜了！\n"}),a.add({id:308,href:'/life/docs/databases/mysql/mysql%E7%B4%A2%E5%BC%95/',title:"mysql索引",section:"mysql学习笔记",content:"索引\r#\r\r MySQL使用索引快速查找具有特定列值的行。如果没有索引，MySQL必须扫描整个表以找到相关的行。较大的表，搜索速度越慢。\n  索引由类型和方法组成(有的时候你没有指定就是使用的默认方法Btree这是一种B+树)有的人也把方法称为方式  讨论索引之前讨论树这种结构\r#\r\r  B树\n  B树有如下特点:\n  所有键值分布在整颗树中（索引值和具体data都在每个节点里）；\n  任何一个关键字出现且只出现在一个结点中；\n  搜索有可能在非叶子结点结束（最好情况O(1)就能找到数据）；\n  在关键字全集内做一次查找,性能逼近二分查找；\n  与AVL 树，红黑树相比性能没那么好但是可以处理较大数据量后者虽然查得快但是处理大量数据有一定的问题比如(耗内存,数据库可能会有海量的数据)\n  B+树\n  B+树是B-树的变体，也是一种多路搜索树, 它与 B- 树的不同之处在于\n  所有关键字存储在叶子节点出现,内部节点(非叶子节点并不存储真正的 data) 为所有叶子结点增加了一个链指针\n  (自己理解)B+树每个节点都包含了指向其子节点的指针虽然没有直接包含子节点但是相当于间接包含了子节点\n  因此B+树是大多数 MySQL 存储引擎的默认索引类型\n  讨论hash结构\r#\r\r 哈希索引能以 O(1) 时间进行查找，但是失去了有序性，它具有以下限制 无法用于排序与分组 只支持精确查找，无法用于部分查找和范围查找。 InnoDB 存储引擎有一个特殊的功能叫“自适应哈希索引”，当某个索引值被使用的非常频繁时，会在 B+Tree 索引之上再创建一个哈希索引，这样就让 B+Tree 索引具有哈希索引的一些优点，比如快速的哈希查找。   MySQL中，只有Memory存储引擎显示支持hash索引，是Memory表的默认索引类型，尽管Memory表也可以使用B-Tree索引 也就是我们从某种程度日常开发基本就接触BTREE数据结构了\n 索引创建和更改语法\r#\r\r-- 创建 索引 CREATE \u0026lt;索引名\u0026gt; ON \u0026lt;表名\u0026gt; (\u0026lt;列名\u0026gt; [\u0026lt;长度\u0026gt;] [ ASC | DESC]) CREATE \u0026lt;索引类型\u0026gt; \u0026lt;索引名\u0026gt; ON \u0026lt;表名\u0026gt; (\u0026lt;列名\u0026gt; [\u0026lt;长度\u0026gt;] [ ASC | DESC]) CREATE INDEX indexName ON table_name (column_name) CREATE TABLE 也可以创建TABLE -- 仅仅在这直接列举了 -- 包含一个索引 CREATE TABLE test_demo( id INT NOT NULL, name varchar(200) NOT NULL, UNIQUE INDEX uk_idx_id(id) ); -- 包含3个索引 -- 设定为主键后数据库会自动建立索引，innodb为聚簇索引 CREATE TABLE test_demo( id INT(10) UNSIGNED AUTO_INCREMENT , uuid INT NOT NULL, name varchar(200) NOT NULL, PRIMARY KEY(id), INDEX single_idx_name(name(20)) , UNIQUE KEY uk_idx_id(uuid) ); DROP INDEX \u0026lt;索引名\u0026gt; ON \u0026lt;表名\u0026gt; ALTER TABLE \u0026lt;表名\u0026gt; DROP PRIMARY KEY：表示删除表中的主键。一个表只有一个主键，主键也是一个索引 ALTER TABLE \u0026lt;表名\u0026gt; DROP INDEX index_name：表示删除名称为 index_name 的索引 ALTER TABLE \u0026lt;表名\u0026gt; DROP FOREIGN KEY fk_symbol：表示删除外键 索引类型\r#\r\r Normal 普通索引 Unique 唯一索引 Full Text 全文索引 SPATIAL 空间索引   不管什么索引类型 都可以被一列或者多列使用 这点很重要\n Normal 普通索引\r#\r\rdrop table if EXISTS t_example_index ; CREATE TABLE t_example_index ( c1 INT NOT NULL AUTO_INCREMENT PRIMARY KEY, c2 VARCHAR(100), c3 VARCHAR(100), n1 int(12), n2 int(12), n3 int(12)) ENGINE=InnoDB; -- Normal 表示普通索引，大多数情况下都可以使用 -- 没有指定索引方法 CREATE INDEX index_c1 ON t_example_index ( n1 ); mysql\u0026gt; SHOW INDEX FROM t_example_index ; +-----------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+ | Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression | +-----------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+ | t_example_index | 0 | PRIMARY | 1 | c1 | A | 0 | NULL | NULL | | BTREE | | | YES | NULL | | t_example_index | 1 | index_c1 | 1 | n1 | A | 0 | NULL | NULL | YES | BTREE | | | YES | NULL | +-----------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+ 2 rows in set (0.06 sec) -- 当使用 NORMAL 的时候不需要加上NORMAL CREATE NORMAL INDEX index_c2 ON t_example_index ( n2 ); -- 使用多列一起组成索引 CREATE INDEX index_c2 ON t_example_index ( n2,n3 ); mysql\u0026gt; SHOW INDEX FROM t_example_index ; +-----------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+ | Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression | +-----------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+ | t_example_index | 0 | PRIMARY | 1 | c1 | A | 0 | NULL | NULL | | BTREE | | | YES | NULL | | t_example_index | 1 | index_c1 | 1 | n1 | A | 0 | NULL | NULL | YES | BTREE | | | YES | NULL | | t_example_index | 1 | index_c2 | 1 | n2 | A | 0 | NULL | NULL | YES | BTREE | | | YES | NULL | | t_example_index | 1 | index_c2 | 2 | n3 | A | 0 | NULL | NULL | YES | BTREE | | | YES | NULL | +-----------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+ 4 rows in set (0.09 sec) Unique 唯一索引\r#\r\rdrop table if EXISTS t_example_index_x2 ; CREATE TABLE t_example_index_x2 ( c1 INT NOT NULL AUTO_INCREMENT PRIMARY KEY, c2 VARCHAR(100), c3 VARCHAR(100), n1 int(12), n2 int(12), n3 int(12)) ENGINE=InnoDB; -- 使用单列索引 CREATE UNIQUE INDEX index_c1 ON t_example_index_x2 ( n1 ); -- 使用2列索引 CREATE UNIQUE INDEX index_c2_3 ON t_example_index_x2 ( n2,n3 ); Full Text 全文索引\r#\r\rdrop table if EXISTS t_example_full_text_index ; CREATE TABLE t_example_full_text_index ( id int(11) NOT NULL AUTO_INCREMENT, pro_date datetime DEFAULT NULL, price_remark varchar(255) DEFAULT NULL, title varchar(255) NOT NULL, post_content text, body text, remark text, gmt_created datetime DEFAULT CURRENT_TIMESTAMP, gmt_modified datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (id) ); -- 单列索引 CREATE FULLTEXT INDEX post_content_full_index on t_example_full_text_index(post_content) ; mysql\u0026gt; SHOW INDEX FROM t_example_full_text_index ; +---------------------------+------------+-------------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+ | Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression | +---------------------------+------------+-------------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+ | t_example_full_text_index | 0 | PRIMARY | 1 | id | A | 0 | NULL | NULL | | BTREE | | | YES | NULL | | t_example_full_text_index | 1 | post_content_full_index | 1 | post_content | NULL | 0 | NULL | NULL | YES | FULLTEXT | | | YES | NULL | +---------------------------+------------+-------------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+ 2 rows in set (0.18 sec) -- 组合索引  CREATE FULLTEXT INDEX body_and_title_full_index on t_example_full_text_index(body,title) ; mysql\u0026gt; SHOW INDEX FROM t_example_full_text_index ; +---------------------------+------------+---------------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+ | Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression | +---------------------------+------------+---------------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+ | t_example_full_text_index | 0 | PRIMARY | 1 | id | A | 0 | NULL | NULL | | BTREE | | | YES | NULL | | t_example_full_text_index | 1 | post_content_full_index | 1 | post_content | NULL | 0 | NULL | NULL | YES | FULLTEXT | | | YES | NULL | | t_example_full_text_index | 1 | body_and_title_full_index | 1 | body | NULL | 0 | NULL | NULL | YES | FULLTEXT | | | YES | NULL | | t_example_full_text_index | 1 | body_and_title_full_index | 2 | title | NULL | 0 | NULL | NULL | | FULLTEXT | | | YES | NULL | +---------------------------+------------+---------------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+ 4 rows in set (0.23 sec) -- 提一句全文索引的使用方法 SELECT * FROM t_example_full_text_index WHERE MATCH (post_content) AGAINST (\u0026#39;北京\u0026#39; IN NATURAL LANGUAGE MODE); -- ALTER TABLE t_example_full_text_index ADD FULLTEXT INDEX remark_index(remark) ; SPATIAL 空间索引\r#\r\r 空间索引创建中，要求空间类型的字段必须为非空\n drop table if EXISTS tb_geometry_example ; CREATE TABLE tb_geometry_example( id int(11) NOT NULL AUTO_INCREMENT, geo GEOMETRY NOT NULL, geo_a GEOMETRY NOT NULL, geo_b GEOMETRY NOT NULL, geo_c GEOMETRY NOT NULL, title varchar(255) NOT NULL, remark varchar(500) NOT NULL, PRIMARY KEY (id) ) ENGINE=MyISAM; CREATE SPATIAL INDEX geo_index on tb_geometry_example(geo); CREATE SPATIAL INDEX geo_a_geo_b_index on tb_geometry_example(geo_a,geo_b) \u0026gt; 1070 - Too many key parts specified; max 1 parts allowed \u0026gt; 时间: 0s -- 说明不能组合索引 ALTER TABLE tb_geometry_example ADD SPATIAL INDEX geo_a_index(geo_a) ; 索引方法\r#\r\r索引组合的方式\r#\r\r 单列索引  参考本文前面\r 唯一索引  主键和唯一索引的区别\r1、主键是一种约束，唯一索引是一种索引，两者在本质上是不同的。\r2、主键创建后一定包含一个唯一性索引，唯一性索引不一定就是主键。\r3、唯一性索引列允许空值， 而主键列不允许为空值。\r4、主键可以被其他表引用为外键，而唯一索引不能。\r5、 一个表最多只能创建一个主键，但是可以创建多个唯一索引。\r6、主键更适合那些不容易改变的唯一标识，如自动递增列，身份证号等。\r7、在RBO 模式下，主键的执行计划优先级高于唯一索引。两者可以提高查询的速度。\r 多列索引(组合索引)  参考本文前面\r 前缀索引  指的是mysql like 某些对那列字段增加索引可以使用like 但是只能是前缀查询如keyword%\rselect title,content from demo_like_table where 1=1 and title like ‘73%';\r具体参考本主题的mysql优化\r 隐藏索引  实际指的是主键 主键是一种特殊索引 即使你没有指定主键列是索引它也是索引\r聚簇索引和非聚簇索引\r#\r\r  聚集索引。表数据按照索引的顺序来存储的，也就是说索引项的顺序与表中记录的物理顺序一致。对于聚集索引，叶子结点即存储了真实的数据行，不再有另外单独的数据页。 在一张表上最多只能创建一个聚集索引，因为真实数据的物理顺序只能有一种\n  非聚集索引。表数据存储顺序与索引顺序无关。对于非聚集索引，叶结点包含索引字段值及指向数据页数据行的逻辑指针，其行数量与数据表行数据量一致\n  总结一下：聚集索引是一种稀疏索引，数据页上一级的索引页存储的是页指针，而不是行指针。而对于非聚集索引，则是密集索引，在数据页的上一级索引页它为每一个数据行存储一条索引记录\n  一个表只能有一个聚簇索引\n   目前，只有solidDB和InnoDB支持聚簇索引，MyISAM不支持聚簇索引。一些DBMS允许用户指定聚簇索引，但是MySQL的存储引擎到目前为止都不支持\n InnoDB的聚簇索引\r#\r\r InnoDB对主键建立聚簇索引。 如果你不指定主键，InnoDB会用一个具有唯一且非空值的索引来代替。 如果不存在这样的索引，InnoDB会定义一个隐藏的主键，然后对其建立聚簇索引  Hash索引\r#\r\rCREATE TABLE tb_test_hash ( fname VARCHAR(50) NOT NULL, lname VARCHAR(50) NOT NULL ) ENGINE=MEMORY; ALTER TABLE tb_test_hash ADD INDEX hash_index(fname) ; DROP INDEX hash_index on tb_test_hash; 索引注意事项\r#\r\r哪些情况适合创建索引\r#\r\r 字段的数值有唯一性的限制   业务上具有唯一特性的字段，即使是组合字段，也必须建成唯一索引。（来源：Alibaba） 说明：不要以为唯一索引影响了 insert 速度，这个速度损耗可以忽略，但提高查找速度是明显的。\n  频繁作为 WHERE 查询条件的字段   某个字段在SELECT语句的 WHERE 条件中经常被使用到，那么就需要给这个字段创建索引了。尤其是在 数据量大的情况下，创建普通索引就可以大幅提升数据查询的效率。\n  经常 GROUP BY 和 ORDER BY 的列   索引就是让数据按照某种顺序进行存储或检索，因此当我们使用 GROUP BY 对数据进行分组查询，或者 使用 ORDER BY 对数据进行排序的时候，就需要 对分组或者排序的字段进行索引 。如果待排序的列有多 个，那么可以在这些列上建立 组合索引\n  UPDATE、DELETE 的 WHERE 条件列   对数据按照某个条件进行查询后再进行 UPDATE 或 DELETE 的操作，如果对 WHERE 字段创建了索引，就 能大幅提升效率。原理是因为我们需要先根据 WHERE 条件列检索出来这条记录，然后再对它进行更新或 删除。如果进行更新的时候，更新的字段是非索引字段，提升的效率会更明显，这是因为非索引字段更 新不需要对索引进行维护\n  DISTINCT 字段需要创建索引  有时候我们需要对某个字段进行去重，使用 DISTINCT，那么对这个字段创建索引，也会提升查询效率。\r比如，我们想要查询课程表中不同的 student_id 都有哪些，如果我们没有对 student_id 创建索引，执行\rSQL 语句：\r运行结果（600637 条记录，运行时间 0.683s ）：\r如果我们对 student_id 创建索引，再执行 SQL 语句：\r运行结果（600637 条记录，运行时间 0.010s ）：\r你能看到 SQL 查询效率有了提升，同时显示出来的 student_id 还是按照 递增的顺序 进行展示的。这是因\r为索引会对数据按照某种顺序进行排序，所以在去重的时候也会快很多。\r 多表 JOIN 连接操作时，创建索引注意事项   首先， 连接表的数量尽量不要超过 3 张 ，因为每增加一张表就相当于增加了一次嵌套的循环，数量级增 长会非常快，严重影响查询的效率。\n  其次， 对 WHERE 条件创建索引 ，因为 WHERE 才是对数据条件的过滤。如果在数据量非常大的情况下， 没有 WHERE 条件过滤是非常可怕的。\n  最后， 对用于连接的字段创建索引 ，并且该字段在多张表中的 类型必须一致 。比如 course_id 在 student_info 表和 course 表中都为 int(11) 类型，而不能一个为 int 另一个为 varchar 类型。 举个例子，如果我们只对 student_id 创建索引，执行 SQL 语句：\n SELECT course_id, name, student_info.student_id, course_name\rFROM student_info JOIN course\rON student_info.course_id = course.course_id\rWHERE name = '462eed7ac6e791292a79';\r-- 运行结果（1 条数据，运行时间 0.189s ）：\r-- 这里我们对 name 创建索引，再执行上面的 SQL 语句，运行时间为 0.002s 。\r索引使用注意事项\r#\r\r 如果对大的文本进行搜索，使用全文索引而不要用使用 like ‘%…%’ like语句不要以通配符开头 对于LIKE：在以通配符%和_开头作查询时，MySQL不会使用索引。like操作一般在全文索引中会用到（InnoDB数据表不支持全文索引）  -- 例如下句会使用索引 SELECT * FROM mytable WHERE username like \u0026#39;admin%\u0026#39; 而下句就不会使用 SELECT * FROM mytable WHEREt Name like \u0026#39;%admin\u0026#39;  不要在列上进行运算 索引列不能是表达式的一部分，也不是是函数的参数  -- 例如以下两个查询无法使用索引 -- 1:表达式  select actor_id from sakila.actor where actor_id+1=5; -- 2:函数参数 select ... where TO_DAYS(CURRENT_DATE) - TO_DAYS(date_col)\u0026lt;=10;  尽量不要使用NOT IN、\u0026lt;\u0026gt;、!= 操作 应尽量避免在 where 子句中使用!=或\u0026lt;\u0026gt;操作符，否则将引擎放弃使用索引而进行全表扫描  -- 对于not in，可以用not exists或者（外联结+判断为空）来代替；很多时候用 exists 代替 in 是一个好的选择： select num from a where num in(select num from b) ; -- 用下面的语句替换 select num from a where exists(select 1 from b where num=a.num) ;   对于\u0026lt;\u0026gt;，用其它相同功能的操作运算代替，如a\u0026lt;\u0026gt;0 改为 a\u0026gt;0 or a\u0026lt;0\n  or条件\n  用 or 分割开的条件， 如果 or 前的条件中的列有索引， 而后面的列中没有索引， 那么涉及到的索引都不会被用到\n  应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描\n  如:\n  -- 假设num1有索引，num2没有索引 select id from t where num1=10 or num2=20 ; -- 会放弃使用索引，可以改为这样查询 select id from t where num1=10 union all select id from t where num2=20 ; -- 这样虽然num2没有使用索引，但至少num1会使用索引，提高效率   组合索引的使用要遵守“最左前缀”原则'\n  组合索引：当不需要考虑排序和分组时，将选择性最高的列放在前面通常是最好的\n  -- 如 CREATE TABLE People ( last_name varchar(50) not null, first_name varchar(50) not null, birthday date not null, gender enum(\u0026#39;m\u0026#39;, \u0026#39;f\u0026#39;) not null, key(last_name, first_name, birthday) );  查询必须从索引的最左边的列开始，否则无法使用索引。例如，你不能直接利用索引查找在某一天出生的人 不能跳过某一索引列。例如，你不能利用索引查找last name为Smith且出生于某一天的人 存储引擎不能使用索引中范围条件右边的列。例如，如果你的查询语句为WHERE last_name=\u0026ldquo;Smith\u0026rdquo; AND first_name LIKE \u0026lsquo;J%\u0026rsquo; AND dob=\u0026lsquo;1976-12-23\u0026rsquo;，则该查询只会使用索引中的前两列，因为LIKE是范围查询 假如你一定要使用like 查询并且用到索引 那么参考本主题mysql优化 使用索引排序时，ORDER BY也要遵守“最左前缀”原则 当索引的顺序与ORDER BY中的列顺序相同，且所有的列是同一方向（全部升序或者全部降序）时，可以使用索引来排序 ORDER BY子句和查询型子句的限制是一样的：需要满足索引的最左前缀的要求，有一种情况下ORDER BY子句可以不满足索引的最左前缀要求，那就是前导列为常量时：WHERE子句或者JOIN子句中对前导列指定了常量 如果查询是连接多个表，仅当ORDER BY中的所有列都是第一个表的列时才会使用索引。其它情况都会使用filesort文件排序 如果列类型是字符串，那么一定记得在 where 条件中把字符常量值用引号引起来，否则的话即便这个列上有索引，MySQL 也不会用到的，因为MySQL 默认把输入的常量值进行转换以后才进行检索  explain select * from company2 where name = \u0026#39;294\u0026#39; ;  最后  只有当数据库里已经有了足够多的测试数据时，它的性能测试结果才有实际参考价值。\r如果在测试数据库里只有几百条数据记录，它们往往在执行完第一条查询命令之后就被全部加载到内存里，\r这将使后续的查询命令都执行得非常快——不管有没有使用索引。只有当数据库里的记录超过了1000条、\r数据总量也超过了 MySQL服务器上的内存总量时，数据库的性能测试结果才有意义。\r在不确定应该在哪些数据列上创建索引的时候，人们从EXPLAIN SELECT命令那里往往可以获得一些帮助。\r这其实只是简单地给一条普通的SELECT命令加一个EXPLAIN关键字作为前缀而已。\r有了这个关键字，MySQL将不是去执行那条SELECT命令，而是去对它进行分析。\rMySQL将以表格的形式把查询的执行过程和用到的索引(如果有的话)等信息列出来。\r"}),a.add({id:309,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/my_self/x5xdewmh5e/',title:"所有命运的馈赠，早已暗中标好了价格",section:"自信",content:"所有命运的馈赠，早已暗中标好了价格\r#\r\r好什么 最终要亡在什么上\r#\r\r以什么上台或者以什么为基本盘 盘么最终你的弱点就是你的基本盘 特别是高管或者大人物\r#\r\r"}),a.add({id:310,href:'/life/docs/databases/mysql/mysql%E6%95%B4%E7%90%86/',title:"mysql整理",section:"mysql学习笔记",content:"mysql整理\r#\r\r跨库更新数据\r#\r\rUPDATE pmcc_assess.tb_project_info aTable INNER JOIN ( SELECT id as data_id, uuid as data_uuid FROM pmcc_contract.tb_cms_contract bTable ) bTable ON aTable.contract_id = bTable.data_uuid SET aTable.contract_uuid = bTable.data_uuid , aTable.contract_id = null where 1=1 and aTable.contract_uuid is null and aTable.contract_id is not null and aTable.id = 596; UPDATE pmcc_assess.tb_project_info aTable INNER JOIN ( SELECT id as data_id, uuid as data_uuid FROM pmcc_contract.tb_cms_contract bTable ) bTable ON aTable.contract_uuid = bTable.data_uuid SET aTable.contract_id = bTable.data_id where 1=1 and aTable.contract_id is null and aTable.contract_uuid is not null and aTable.id = 596; 步长\r#\r\rSHOW VARIABLES LIKE \u0026#39;auto_inc%\u0026#39;; SET @@auto_increment_increment=3; -- 将自增长步长设置为3  SET @@auto_increment_offset=4; -- 将自增长开始值设置为4  SHOW VARIABLES LIKE \u0026#39;auto_inc%\u0026#39;; alter table `user` drop column id; alter table `user`add id BIGINT; alter table `user` change id id BIGINT not null auto_increment primary key; 统计sql\r#\r\r# 处理 uuid重复问题 UPDATE tb_data_block SET uuid = CONCAT( MD5(UUID()) ,\u0026#39;_\u0026#39;,UUID_SHORT(),\u0026#39;_\u0026#39;, MD5(curtime()) ) WHERE uuid is null ; UPDATE tb_data_automatic_position SET uuid = CONCAT( MD5(UUID()) ,\u0026#39;_\u0026#39;,UUID_SHORT(),\u0026#39;_\u0026#39;, MD5(RAND()) ) WHERE uuid is null ; #查询当天的记录 select count(1) from tableName where TO_DAYS(timeField) = TO_DAYS(NOW()) # 从今天开始退回几天的实体数量 假如是1那么就是昨天 select count(1) from tb_basic_building where 1=1 and TO_DAYS(NOW()) - TO_DAYS(gmt_created) = 4 ; # 统计 当周的实体数量  SELECT count(1) FROM tableName WHERE YEARWEEK(date_format(timeField,\u0026#39;%Y-%m-%d\u0026#39;),1) = YEARWEEK(now(),1); # 统计 当月的实体数量 SELECT count(1) FROM tableName WHERE 1=1 AND DATE_FORMAT( timeField, \u0026#39;%Y%m\u0026#39; ) = DATE_FORMAT( CURDATE( ) , \u0026#39;%Y%m\u0026#39; ) /*最近一周*/ SELECT count(1) as count_num FROM tb_basic_building WHERE DATE_SUB(CURDATE(),INTERVAL 1 WEEK) \u0026lt;= DATE(gmt_created); /*某个年份下*/ SELECT sum( CASE MONTH ( a.gmt_created ) WHEN \u0026#39;1\u0026#39; THEN 1 ELSE 0 END ) AS january, sum( CASE MONTH ( a.gmt_created ) WHEN \u0026#39;2\u0026#39; THEN 1 ELSE 0 END ) AS february, sum( CASE MONTH ( a.gmt_created ) WHEN \u0026#39;3\u0026#39; THEN 1 ELSE 0 END ) AS march, sum( CASE MONTH ( a.gmt_created ) WHEN \u0026#39;4\u0026#39; THEN 1 ELSE 0 END ) AS april, sum( CASE MONTH ( a.gmt_created ) WHEN \u0026#39;5\u0026#39; THEN 1 ELSE 0 END ) AS may, sum( CASE MONTH ( a.gmt_created ) WHEN \u0026#39;6\u0026#39; THEN 1 ELSE 0 END ) AS june, sum( CASE MONTH ( a.gmt_created ) WHEN \u0026#39;7\u0026#39; THEN 1 ELSE 0 END ) AS july, sum( CASE MONTH ( a.gmt_created ) WHEN \u0026#39;8\u0026#39; THEN 1 ELSE 0 END ) AS august, sum( CASE MONTH ( a.gmt_created ) WHEN \u0026#39;9\u0026#39; THEN 1 ELSE 0 END ) AS september, sum( CASE MONTH ( a.gmt_created ) WHEN \u0026#39;10\u0026#39; THEN 1 ELSE 0 END ) AS october, sum( CASE MONTH ( a.gmt_created ) WHEN \u0026#39;11\u0026#39; THEN 1 ELSE 0 END ) AS november, sum( CASE MONTH ( a.gmt_created ) WHEN \u0026#39;12\u0026#39; THEN 1 ELSE 0 END ) AS december FROM tb_basic_building a WHERE YEAR ( a.gmt_created ) = 2021; /*按自然周统计(所有)*/ SELECT DATE_FORMAT(gmt_created,\u0026#39;%y年%u周\u0026#39;) as week_name,min(gmt_created) as week_check_start_time,count(*) as count_num FROM tb_basic_building GROUP BY DATE_FORMAT(gmt_created,\u0026#39;%y%u\u0026#39;) ORDER BY week_name asc; /*某年某月下的每周统计数量*/ SELECT DATE_FORMAT(gmt_created,\u0026#39;%y年%u周\u0026#39;) as w,min(gmt_created) as st,count(*) as count_num FROM tb_basic_building where 1=1 and month(gmt_created)=9 and YEAR(gmt_created) = 2021 GROUP BY DATE_FORMAT(gmt_created,\u0026#39;%y%u\u0026#39;) ORDER BY w asc; /*按月统计(所有)*/ SELECT DATE_FORMAT(gmt_created,\u0026#39;%y年%m月\u0026#39;) as m,count(*) as count_num FROM tb_basic_building GROUP BY DATE_FORMAT(gmt_created,\u0026#39;%y%m\u0026#39;) ORDER BY m asc /*按季度统计*/ SELECT FLOOR((DATE_FORMAT(gmt_created,\u0026#39;%m\u0026#39;)-1)/3)+1 as quarter_num,min(gmt_created) as quarter_check_start_time,count(*) as count_num FROM tb_basic_building WHERE DATE_FORMAT(gmt_created,\u0026#39;%Y\u0026#39;) = 2021 GROUP BY FLOOR((DATE_FORMAT(gmt_created,\u0026#39;%m\u0026#39;)-1)/3)+1 ORDER BY quarter_num asc; /*按年统计*/ SELECT DATE_FORMAT(gmt_created,\u0026#39;%Y\u0026#39;) as year_name,count(*) as count_num FROM tb_basic_building GROUP BY DATE_FORMAT(gmt_created,\u0026#39;%Y\u0026#39;) ORDER BY year_name asc; /*按天统计*/ SELECT count(id) count_num, DATE(gmt_created) day_name FROM tb_basic_building GROUP BY DATE(gmt_created) ORDER BY DATE(gmt_created) DESC; /*按周统计*/ SELECT count(id) count_num, WEEK(gmt_created) week_name FROM tb_basic_building GROUP BY WEEK(gmt_created) ORDER BY WEEK(gmt_created) DESC; /*按月统计*/ SELECT count(id) count_num, MONTH(gmt_created) month_name FROM tb_basic_building GROUP BY MONTH(gmt_created) ORDER BY MONTH(gmt_created) DESC; 添加字段\r#\r\ralter table tb_project_plan_details add `bis_mobile` bit(1) DEFAULT b\u0026#39;0\u0026#39; COMMENT \u0026#39;是否为移动端创建\u0026#39;; 查询插入\r#\r\r-- 一:处理 清单版本  -- bom_dir_gbq_2003 转移到 tb_base_cost_norm_qdxm_items 中  -- 2003版本 tb_base_cost_norm_dezm uuid = \u0026#39;ZQF8pnF4\u0026#39;  -- 删除2003版本的数据  delete from tb_base_cost_norm_qdxm_items WHERE version = \u0026#39;ZQF8pnF4\u0026#39;; -- 批量插入数据  INSERT INTO tb_base_cost_norm_qdxm_items ( version, uuid, serial_number, NAME, units_name, project_feature, project_content ) SELECT \u0026#39;ZQF8pnF4\u0026#39;, MD5( UUID( ) ), dir_code, dir_name, dir_name, class_tag, CONCAT( start_quota_code, \u0026#39;-\u0026#39;, end_quota_code ) FROM pmcc_costs.bom_dir_gbq_2003 WHERE 1 = 1 AND pmcc_costs.bom_dir_gbq_2003.dir_code is not null ; INSERT INTO tb_base_cost_norm_qdxm_items ( version, uuid, serial_number, NAME, units_name, project_feature, project_content ) SELECT \u0026#39;ZQF8pnF4\u0026#39;, MD5( UUID( ) ), quota_code, quota_name, units, project_feature, project_content FROM pmcc_costs.bom_quota_gbq_2003 WHERE 1 = 1 AND pmcc_costs.bom_quota_gbq_2003.quota_code is not null ; -- bom_dir_gbq_2008 转移到 tb_base_cost_norm_qdxm_items 中  -- 2008版本 tb_base_cost_norm_dezm uuid = \u0026#39;N1BryK2L\u0026#39;  -- 删除2008版本的数据  delete from tb_base_cost_norm_qdxm_items WHERE version = \u0026#39;N1BryK2L\u0026#39;; -- 批量插入数据  INSERT INTO tb_base_cost_norm_qdxm_items ( version, uuid, serial_number, NAME, units_name, project_feature, project_content ) SELECT \u0026#39;N1BryK2L\u0026#39;, MD5( UUID( ) ), dir_code, dir_name, dir_name, class_tag, CONCAT( start_quota_code, \u0026#39;-\u0026#39;, end_quota_code ) FROM pmcc_costs.bom_dir_gbq_2008 WHERE 1 = 1 AND pmcc_costs.bom_dir_gbq_2008.dir_code is not null ; INSERT INTO tb_base_cost_norm_qdxm_items ( version, uuid, serial_number, NAME, units_name, project_feature, project_content ) SELECT \u0026#39;N1BryK2L\u0026#39;, MD5( UUID( ) ), quota_code, quota_name, units, project_feature, project_content FROM pmcc_costs.bom_quota_gbq_2008 WHERE 1 = 1 AND pmcc_costs.bom_quota_gbq_2008.quota_code IS NOT NULL; -- bom_dir_gbq_qg 转移到 tb_base_cost_norm_qdxm_items 中  -- qg版本 tb_base_cost_norm_dezm uuid = \u0026#39;J1fdFWPW\u0026#39;  -- 删除(全国)qg版本的数据  delete from tb_base_cost_norm_qdxm_items WHERE version = \u0026#39;J1fdFWPW\u0026#39;; -- 批量插入数据  INSERT INTO tb_base_cost_norm_qdxm_items ( version, uuid, serial_number, NAME, units_name, project_feature, project_content ) SELECT \u0026#39;J1fdFWPW\u0026#39;, MD5( UUID( ) ), dir_code, dir_name, dir_name, class_tag, CONCAT( start_quota_code, \u0026#39;-\u0026#39;, end_quota_code ) FROM pmcc_costs.bom_dir_gbq_qg WHERE 1 = 1 AND pmcc_costs.bom_dir_gbq_qg.dir_code is not null ; INSERT INTO tb_base_cost_norm_qdxm_items ( version, uuid, serial_number, NAME, units_name, project_feature, project_content ) SELECT \u0026#39;J1fdFWPW\u0026#39;, MD5( UUID( ) ), quota_code, quota_name, units, project_feature, calculation_rules FROM pmcc_costs.bom_quota_gbq_qg WHERE 1 = 1 AND pmcc_costs.bom_quota_gbq_qg.quota_code is not null ; -- 二:开始处理定额版本  -- 2009  delete from tb_base_cost_norm_dezm_items WHERE version = \u0026#39;LdRmHFky\u0026#39;; -- 处理定额版本详细  INSERT INTO tb_base_cost_norm_dezm_items ( version, uuid, serial_number, name,units_name, base_price,rgf,clf,jxf,zhf,project_feature,project_content ) SELECT \u0026#39;LdRmHFky\u0026#39;, MD5( UUID( ) ), quota_code, quota_name, units, base_price, cost_of_labor, cost_of_raw_materials, cost_of_mechanical, cost_of_comprehensive, project_feature, project_content FROM pmcc_costs.bom_quota_sc_2009 WHERE 1 = 1 AND pmcc_costs.bom_quota_sc_2009.quota_code is not null ; -- 处理材料	 INSERT INTO tb_base_cost_norm_dezm_material ( version, uuid, name, ggxh,unit_price, units_name ) SELECT \u0026#39;LdRmHFky\u0026#39;, MD5( UUID( ) ), m_name, m_code, m_price, m_units FROM pmcc_costs.bom_material_sc_2009 WHERE 1 = 1 AND pmcc_costs.bom_material_sc_2009.m_code is not null ; -- 处理关联表  INSERT INTO tb_base_cost_norm_dezm_material_consume ( uuid, quota_code, m_code, cl_consume ) SELECT MD5( UUID( ) ), quota_code, m_code, m_consume FROM pmcc_costs.bom_material_consume_sc_2009; -- 更新 dezm_uuid 	UPDATE tb_base_cost_norm_dezm_material_consume a_table INNER JOIN tb_base_cost_norm_dezm_items b_table ON a_table.quota_code = b_table.serial_number SET a_table.dezm_uuid = b_table.uuid WHERE 1 = 1 AND a_table.dezm_uuid IS NULL ; -- 更新 cl_uuid UPDATE tb_base_cost_norm_dezm_material_consume a_table INNER JOIN tb_base_cost_norm_dezm_material b_table ON a_table.m_code = b_table.ggxh SET a_table.cl_uuid = b_table.uuid WHERE 1 = 1 AND a_table.cl_uuid IS NULL AND b_table.version = \u0026#39;LdRmHFky\u0026#39; ; -- 处理 2015  delete from tb_base_cost_norm_dezm_items WHERE version = \u0026#39;TuXavbSi\u0026#39;; -- 处理定额版本详细  INSERT INTO tb_base_cost_norm_dezm_items ( version, uuid, serial_number, name,units_name, base_price,rgf,clf,jxf,zhf,project_feature,project_content ) SELECT \u0026#39;TuXavbSi\u0026#39;, MD5( UUID( ) ), quota_code, quota_name, units, base_price, cost_of_labor, cost_of_raw_materials, cost_of_mechanical, cost_of_comprehensive, project_feature, project_content FROM pmcc_costs.bom_quota_sc_2015 WHERE 1 = 1 AND pmcc_costs.bom_quota_sc_2015.quota_code is not null ; -- 处理材料	 INSERT INTO tb_base_cost_norm_dezm_material ( version, uuid, name, ggxh,unit_price, units_name ) SELECT \u0026#39;TuXavbSi\u0026#39;, MD5( UUID( ) ), m_name, m_code, m_price, m_units FROM pmcc_costs.bom_material_sc_2015 WHERE 1 = 1 AND pmcc_costs.bom_material_sc_2015.m_code is not null ; -- 处理关联表 	INSERT INTO tb_base_cost_norm_dezm_material_consume ( uuid, quota_code, m_code, cl_consume ) SELECT MD5( UUID( ) ), quota_code, m_code, m_consume FROM pmcc_costs.bom_material_consume_sc_2015; -- 处理2020  delete from tb_base_cost_norm_dezm_items WHERE version = \u0026#39;tQYJwqlO\u0026#39;; -- 处理定额版本详细  INSERT INTO tb_base_cost_norm_dezm_items ( version, uuid, serial_number, name,units_name, base_price,rgf,clf,jxf,zhf,project_feature,project_content ) SELECT \u0026#39;tQYJwqlO\u0026#39;, MD5( UUID( ) ), quota_code, quota_name, units, base_price, cost_of_labor, cost_of_raw_materials, cost_of_mechanical, cost_of_comprehensive, project_feature, project_content FROM pmcc_costs.bom_quota_sc_2020 WHERE 1 = 1 AND pmcc_costs.bom_quota_sc_2020.quota_code is not null ; -- 处理材料	 INSERT INTO tb_base_cost_norm_dezm_material ( version, uuid, name, ggxh,unit_price, units_name ) SELECT \u0026#39;tQYJwqlO\u0026#39;, MD5( UUID( ) ), m_name, m_code, m_price, m_units FROM pmcc_costs.bom_material_sc_2020 WHERE 1 = 1 AND pmcc_costs.bom_material_sc_2020.m_code is not null ; -- 处理关联表 	INSERT INTO tb_base_cost_norm_dezm_material_consume ( uuid, quota_code, m_code, cl_consume ) SELECT MD5( UUID( ) ), quota_code, m_code, m_consume FROM pmcc_costs.bom_material_consume_sc_2020; -- 更新关联表 id 	UPDATE tb_base_cost_norm_dezm_material_consume a_table INNER JOIN tb_base_cost_norm_dezm_items b_table ON a_table.quota_code = b_table.serial_number SET a_table.dezm_uuid = b_table.uuid WHERE 1 = 1 AND a_table.dezm_uuid IS NULL ; UPDATE tb_base_cost_norm_dezm_material_consume a_table INNER JOIN tb_base_cost_norm_dezm_material b_table ON a_table.m_code = b_table.ggxh SET a_table.cl_uuid = b_table.uuid WHERE 1 = 1 AND a_table.cl_uuid IS NULL ; "}),a.add({id:311,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/',title:"解决问题",section:"自我提升",content:"学习的最好方式是解决问题\n"}),a.add({id:312,href:'/life/docs/databases/mysql/mysq_advanced_optimization/',title:"mysql优化",section:"mysql学习笔记",content:"mysql like 优化\r#\r\r思路\r#\r\r 要提高Mysql 的查询效率最有效的办法是让所有的查询走索引字段，但是在Mysql中 Like 关键字只有对前缀查询(\u0026ldquo;keyword%\u0026quot;)走索引 例如: select title,content from demo_like_table where 1=1 and title like \u0026lsquo;73%'; 我们常常需要模糊查询（\u0026quot;%keyword%\u0026quot;）或后缀查询(\u0026quot;%keyword\u0026rdquo;) 解决办法的思路是想办法让模糊查询和后缀查询都能走索引就可以达到目的 后缀查询解决方案：使用新建字段反转索引然后关键字段反转变成前缀查询 select REVERSE(rtitle) as title,content from demo_like_table where 1=1 and rtitle like \u0026lsquo;73%'; 上面虽然用的前缀查询但是实际起到了后缀查询的效果  -- 创建一个表 CREATE TABLE `demo_like_table` ( `id` int NOT NULL AUTO_INCREMENT, `rtitle` varchar(255) DEFAULT NULL, `title` varchar(255) DEFAULT NULL, `content` longtext, `create_date` datetime DEFAULT NULL, PRIMARY KEY (`id`), UNIQUE KEY `rtitle` (`rtitle`) USING BTREE, UNIQUE KEY `title` (`title`) USING BTREE ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; -- 创建一个存储过程插入10w条数据  DROP PROCEDURE IF EXISTS pro_demo_like_table;--如果存在此存储过程则删掉 DELIMITER ; CREATE PROCEDURE pro_demo_like_table(IN len_value int) BEGIN DECLARE i INT DEFAULT 1; DECLARE `temp_value` VARCHAR(255) DEFAULT \u0026#39;\u0026#39;; WHILE i\u0026lt;= len_value DO set temp_value = substring(UUID(),1,7) ; INSERT INTO demo_like_table(title,rtitle,content,create_date) VALUES(`temp_value`, concat(REVERSE(`temp_value`),\u0026#39;\u0026#39;) ,MD5(UUID()), NOW()); SET i = i+1; END WHILE; END ; -- 借用了一个反转函数 REVERSE  CALL pro_demo_like_table(100000); -- 看一下数据(取少部分数据) id rtitle title content create_date 1	7b24016	61042b7	f1c4052d07190711480433bb5868d45f	2022-06-13 22:01:53 2	810e216	612e018	7da9f8cfc164709eaa538d00764b46fe	2022-06-13 22:01:53 3	df29316	61392fd	62c7635129b115d4b856ad55b2204f4e	2022-06-13 22:01:53 4	84a0416	6140a48	d8afb2f28952e446eb324fc92b211909	2022-06-13 22:01:53 5	6e28416	61482e6	86b76454892329da4b5f20f9a4900cb0	2022-06-13 22:01:54 6	60bf416	614fb06	5970f2b5e0635c73028823e425eebda4	2022-06-13 22:01:54 7	2037516	6157302	53b3c4a700d63267ea2f9efbd9aea224	2022-06-13 22:01:54 8	88be516	615eb88	fa8fd07bfe053316ffd0b0e99a53d702	2022-06-13 22:01:54 9	5e36616	61663e5	8deb3030510e1245c8d90ffa5be26e2f	2022-06-13 22:01:54 10	f4cd616	616dc4f	e76a2db7b00aaa32ecaca17d759f31ca	2022-06-13 22:01:54 11	4245716	6175424	4a243f6dde1d498dd4035c5b55f17908	2022-06-13 22:01:54 12	e880816	618088e	f2e7b09be96035cd9b0159c9dfb1818f	2022-06-13 22:01:54 13	cacb816	618bcac	4fac609c5d69f4f32925b4ab1142e883	2022-06-13 22:01:54 select REVERSE(rtitle) as title,content from demo_like_table where 1=1 and rtitle like \u0026#39;73%\u0026#39;; select title,content from demo_like_table where 1=1 and title like \u0026#39;73%\u0026#39;; 索引优化\r#\r\r索引\r#\r\r 排好序的快速查找数据结构,影响查找和排序\n 索引重建操作\r#\r\r 在MySQL数据库中,没有类似于SQL Server数据库或Oracle数据库中索引重建的语法（ALTER INDEX \u0026hellip; REBUILD）在官方文档中\u0026quot;2.11.10 Rebuilding or Repairing Tables or Indexes\u0026quot;中，提到下面三种方式可以Rebuild Index\n   Dump and Reload Method\n  ALTER TABLE Method\n  REPAIR TABLE Method\n  1:DROP INDEX + CREATE INDEX方法\n  drop table if exists t_example_index ; CREATE TABLE t_example_index ( c1 INT NOT NULL AUTO_INCREMENT PRIMARY KEY, c2 VARCHAR(100), c3 VARCHAR(100) ) ENGINE=InnoDB; create index ix_t1_c2 on t_example_index(c2); DROP INDEX ix_t1_c2 ON t_example_index; create index ix_t1_c2 on t_example_index(c2);  2:ALTER TABLE方法 ALTER TABLE t_example_index ENGINE = InnoDB  SELECT table_name,create_time FROM information_schema.TABLES WHERE table_name=\u0026#39;t_example_index\u0026#39;; ALTER TABLE t_example_index ENGINE = InnoDB ; -- ALTER TABLE t_example_index ENGINE=InnoDB 其实等价于REBUILD表（REBUILD表就是重建表的意思），所以索引也等价于重新创建了  SELECT table_name,create_time FROM information_schema.TABLES WHERE table_name=\u0026#39;t_example_index\u0026#39;;  3:REPAIR TABLE方法 (REPAIR TABLE方法用于修复被破坏的表，而且它仅仅能用于MyISAM, ARCHIVE,CSV类型的表)  drop table if exists t_example_index_x2 ; CREATE TABLE t_example_index_x2 ( c1 INT NOT NULL AUTO_INCREMENT PRIMARY KEY, c2 VARCHAR(100), c3 VARCHAR(100) ) ENGINE=MyISAM; REPAIR TABLE t_example_index_x2; -- 此方法需要去检查索引文件t_example_index_x2.MYI 才能发现索引修复了  4: OPTIMIZE TABLE方法   简单来说，OPTIMIZE TABLE操作使用Online DDL模式修改Innodb普通表和分区表，该方式会在prepare阶段和commit阶段持有表级锁：在prepare阶段修改表的元数据并且创建一个中间表，在commit阶段提交元数据的修改。由于prepare阶段和commit阶段在整个事务中的时间比例非常小，可以认为该OPTIMIZE TABLE的过程中不影响表的其他并发操作\n drop table if exists t_example_index_z ; CREATE TABLE t_example_index_z ( c1 INT NOT NULL AUTO_INCREMENT PRIMARY KEY, c2 VARCHAR(100), c3 VARCHAR(100) ) ENGINE=InnoDB; SELECT table_name,create_time FROM information_schema.TABLES WHERE table_name=\u0026#39;t_example_index_z\u0026#39;; OPTIMIZE TABLE t_example_index_z; SELECT table_name,create_time FROM information_schema.TABLES WHERE table_name=\u0026#39;t_example_index_z\u0026#39;; 缓存(在某些版本无法实现)\r#\r\r 缓存相关的配置参数  show variables like \u0026#39;%query_cache%\u0026#39;; +------------------------------+---------+ | Variable_name | Value | +------------------------------+---------+ | have_query_cache | YES | --查询缓存是否可用 | query_cache_limit | 1048576 | --可缓存具体查询结果的最大值 | query_cache_min_res_unit | 4096 | --查询缓存分配的最小块的大小(字节) | query_cache_size | 599040 | --查询缓存的大小 | query_cache_type | ON | --是否支持查询缓存 | query_cache_wlock_invalidate | OFF | --控制当有写锁加在表上的时候，是否先让该表相关的 Query Cache失效 +------------------------------+---------+ 6 rows in set (0.02 sec)  开启缓存  -- 设置缓存内存大小 set global query_cache_size = 600000; -- 开启查询缓存 set global query_cache_type = ON; 全文\r#\r\r v 5.7.6   在MySQL 5.7.6之前，全文索引只支持英文全文索引，不支持中文全文索引，需要利用分词器把中文段落预处理拆分成单词，然后存入数据库。\n  从MySQL 5.7.6开始，MySQL内置了ngram全文解析器，用来支持中文、日文、韩文分词。本文使用的MySQL 版本是5.7.22，InnoDB数据库引擎。\n ngram全文解析器\r#\r\r ngram就是一段文字里面连续的n个字的序列。ngram全文解析器能够对文本进行分词，每个单词是连续的n个字的序列。例如，用ngram全文解析器对“生日快乐”进行分词\n  MySQL 中使用全局变量ngram_token_size来配置ngram中n的大小，它的取值范围是1到10，默认值是2 如果需要搜索单字，就要把ngram_token_size设置为1,因为中文单词最少是两个汉字，推荐使用默认值2 全局变量ngram_token_size的两种设置方法 1、启动mysqld命令时  mysqld --ngram_token_size=2  修改MySQL配置文件  [mysqld] ngram_token_size=2 n=1: \u0026#39;生\u0026#39;, \u0026#39;日\u0026#39;, \u0026#39;快\u0026#39;, \u0026#39;乐\u0026#39; n=2: \u0026#39;生日\u0026#39;, \u0026#39;日快\u0026#39;, \u0026#39;快乐\u0026#39; n=3: \u0026#39;生日快\u0026#39;, \u0026#39;日快乐\u0026#39; n=4: \u0026#39;生日快乐\u0026#39; -- 1:创建包含FULLTEXT(全文索引)的表 CREATE TABLE tb_posts ( id int(11) NOT NULL AUTO_INCREMENT, pro_date datetime DEFAULT NULL, price_remark varchar(255) DEFAULT NULL, title varchar(255) NOT NULL, post_content text, gmt_created datetime DEFAULT CURRENT_TIMESTAMP, gmt_modified datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (id), FULLTEXT KEY post_content (post_content) ); -- 2:通过 alter table 的方式来添加  ALTER TABLE tb_posts ADD FULLTEXT INDEX ft_index (post_content) WITH PARSER ngram; -- 3、直接通过create index的方式  CREATE FULLTEXT INDEX ft_index ON tb_posts (post_content) WITH PARSER ngram; 全文检索模式\r#\r\r 常用的全文检索模式有两种 1、自然语言模式(NATURAL LANGUAGE MODE)   自然语言模式是MySQL 默认的全文检索模式。自然语言模式不能使用操作符，不能指定关键词必须出现或者必须不能出现等复杂查询。\n  2、BOOLEAN模式(BOOLEAN MODE)   BOOLEAN模式可以使用操作符，可以支持指定关键词必须出现或者必须不能出现或者关键词的权重高还是低等复杂查询。\n -- 普通短语搜索  SELECT * FROM tb_posts WHERE MATCH (post_content) AGAINST (\u0026#39;天津\u0026#39; ); -- 自然语言模式 -- 包含北京关键词 SELECT * FROM tb_posts WHERE MATCH (post_content) AGAINST (\u0026#39;北京\u0026#39; IN NATURAL LANGUAGE MODE); -- 布尔模式 -- 必须包含 SELECT * FROM tb_posts WHERE MATCH (post_content) AGAINST (\u0026#39;无锡\u0026#39; IN BOOLEAN MODE); -- 通配符搜索 -- 匹配包含北京的字符串前缀开头的数据 SELECT * FROM tb_posts WHERE MATCH (post_content) AGAINST (\u0026#39;北京*\u0026#39; ); -- 如果通配符中的前缀术语长于ngram令牌大小，MySQL将把前缀术语转换为ngram短语并忽略通配符运算符 SELECT * FROM tb_posts WHERE MATCH (post_content) AGAINST (\u0026#39;北京顺鑫石门国际*\u0026#39; );   全文停用词\n  查看停用的默认词 SELECT * FROM INFORMATION_SCHEMA.INNODB_FT_DEFAULT_STOPWORD;\n  思路 创建一个表和默认停用词相同的结构 然后你自己加记录进去 然后在设置这个表为自定义的停用词\n  -- Create a new stopword table  CREATE TABLE my_stopwords(value VARCHAR(30)) ENGINE = INNODB; -- Insert stopwords (for simplicity, a single stopword is used in this example)  INSERT INTO my_stopwords(value) VALUES (\u0026#39;Ishmael\u0026#39;); -- Create the table  CREATE TABLE opening_lines ( id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY, opening_line TEXT(500), author VARCHAR(200), title VARCHAR(200) ) ENGINE=InnoDB; -- Insert data into the table  INSERT INTO opening_lines(opening_line,author,title) VALUES (\u0026#39;Call me Ishmael.\u0026#39;,\u0026#39;Herman Melville\u0026#39;,\u0026#39;Moby-Dick\u0026#39;), (\u0026#39;A screaming comes across the sky.\u0026#39;,\u0026#39;Thomas Pynchon\u0026#39;,\u0026#39;Gravity\\\u0026#39;s Rainbow\u0026#39;), (\u0026#39;I am an invisible man.\u0026#39;,\u0026#39;Ralph Ellison\u0026#39;,\u0026#39;Invisible Man\u0026#39;), (\u0026#39;Where now? Who now? When now?\u0026#39;,\u0026#39;Samuel Beckett\u0026#39;,\u0026#39;The Unnamable\u0026#39;), (\u0026#39;It was love at first sight.\u0026#39;,\u0026#39;Joseph Heller\u0026#39;,\u0026#39;Catch-22\u0026#39;), (\u0026#39;All this happened, more or less.\u0026#39;,\u0026#39;Kurt Vonnegut\u0026#39;,\u0026#39;Slaughterhouse-Five\u0026#39;), (\u0026#39;Mrs. Dalloway said she would buy the flowers herself.\u0026#39;,\u0026#39;Virginia Woolf\u0026#39;,\u0026#39;Mrs. Dalloway\u0026#39;), (\u0026#39;It was a pleasure to burn.\u0026#39;,\u0026#39;Ray Bradbury\u0026#39;,\u0026#39;Fahrenheit 451\u0026#39;); -- Set the innodb_ft_server_stopword_table option to the new stopword table SET GLOBAL innodb_ft_server_stopword_table = \u0026#39;test/my_stopwords\u0026#39;; -- Create the full-text index (which rebuilds the table if no FTS_DOC_ID column is defined) CREATE FULLTEXT INDEX idx ON opening_lines(opening_line);  设置  SET GLOBAL innodb_ft_aux_table=\u0026#39;test/opening_lines\u0026#39;; "}),a.add({id:313,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E6%B2%9F%E9%80%9A%E6%8A%80%E5%B7%A7/',title:"沟通技巧",section:"自我提升",content:"沟通技巧\r#\r\r"}),a.add({id:314,href:'/life/docs/databases/mysql/mysql_select/',title:"mysql新查询",section:"mysql学习笔记",content:"一:创建计算字段\r#\r\r-- 将 fruits.f_name 和 suppliers.s_city创建为了一个新字段连在一起来计算查询 select fruits.f_name as name ,suppliers.s_city as city from suppliers left join fruits on fruits.s_id = suppliers.s_id where 1=1 and CONCAT(fruits.f_name,\u0026#39;-\u0026#39;,suppliers.s_city) = \u0026#39;apple-Tianjin\u0026#39; ; -- 员工的部门和名称组合为新字段 select CONCAT_WS(\u0026#39;-\u0026#39;,dept.d_name,employee.e_name) as name from employee left join dept on dept.d_no = employee.dept_no 二:函数\r#\r\r 聚集函数 预定义函数-字符串函数 预定义函数-时间处理函数 预定义函数-数字处理函数 算数、逻辑运算 流程函数  1:聚集函数 (聚合函数可以理解成多对一)\r#\r\r 什么是聚合函数   聚合函数作用于一组数据，并对一组数据返回一个值\n  常用聚合函数：     函数 描述     AVG() 返回列的平均值   COUNT(DISTINCT) 返回列去重后的行数   COUNT() 返回列的行数   MAX() 返回列的最大值   MIN() 返回列的最小值   SUM() 返回列的总和   GROUP_CONCAT() 返回一组值的连接字符串(MySQL独有)     例子一  -- 计算表中数量,最小值,最大值,平均值,平均值,累加值 select count(*) as count_value ,MIN(f_price) as min_value,MAX(f_price) as max_value,AVG(f_price) as avg_value ,SUM(f_price) as sum_value from fruits  例子二  SELECT c_name,GROUP_CONCAT(grade), sum(grade) as total_grade ,avg(grade) as avg_grade FROM score GROUP BY c_name 2:预定义函数-字符串函数\r#\r\r   函数 描述     LENGTH() 返回列的字节数   CHAR_LENGTH() 返回列的字符数   TRIM()/RTRIM()/LTRIM() 去除两边空格/去除右边空格/去除左边空格   SUBSTRING(str, pos, [len]) 从pos位置截取字符串str，截取len长度   LOCATE(substr, str, [pos]) 返回substr在str字符串中的位置   REPLACE(str, from_str, to_str) 将str字符串中的from_str替换成to_str   LOWER(), UPPER() 字符串转换为小写/大写     例子  SELECT `USER_NAME`, LENGTH( `USER_NAME` ) AS name_length, CHAR_LENGTH( USER_NAME ) AS string_length, LOWER( USER_NAME ) AS LOWER_NAME, UPPER( USER_NAME ) AS UPPER_NAME, REPLACE ( USER_NAME, \u0026#39;0\u0026#39;, \u0026#39;O\u0026#39; ) AS REPLACE_NAME, SUBSTRING( USER_NAME, \u0026#39;0\u0026#39;, 5 ) AS SUBSTRING_NAME, TRIM( `USER_NAME` ) AS TRIM_NAME FROM `t_user` LIMIT 2,40 3:预定义函数-数字处理函数\r#\r\r   函数 描述     ABS() 返回数值的绝对值   CEIL() 对小数向上取整 CEIL(1.2)=2   ROUND() 四舍五入   POW(num, n) num的n次幂 POW(2, 2)=4   FLOOR() 对小数向下取整 CELL(1.2)=1   MOD(N, M) 取模(返回n除以m的余数)=N % M   RAND() 取0~1之间的一个随机数     例子一  select ABS(-22.4) as ABS_VALUE,CEIL(1.4)as CEIL_VALUE,ROUND(1.49)as ROUND_VALUE,FLOOR(1.4) as FLOOR_VALUE,POW(2,3) AS POW_VALUE,RAND()*10 AS RAND_VALUE,MOD(8,3) AS MOD_VALUE ;  例子二  SELECT ABS( `f_price` ) AS ABS_VALUE, CEIL( `f_price` ) AS CEIL_VALUE, ROUND( `f_price` ) AS ROUND_VALUE, FLOOR( `f_price` ) AS FLOOR_VALUE, POW( `f_price`, 3 ) AS POW_VALUE, RAND( ) * `f_price` AS RAND_VALUE, MOD ( `f_price`, 3 ) AS MOD_VALUE FROM `fruits`; 4:预定义函数-时间处理函数\r#\r\r   函数 描述     CURDATE() 当前日期   CURTIME() 当前时间   NOW() 显示当前时间日期(常用)   UNIX_TIMESTAMP() 当前时间戳   DATE_FORMAT(date, format) 按指定格式显示时间   DATE_ADD(date, INTERVAL unit) 计算指定日期向后加一段时间的日期   DATE_SUB(date, INTERVAL unit) 计算指定日期向前减一段时间的日期     例子1  -- 使用临时日期函数来创建查询 基本全部用到了上面的函数  SELECT CURDATE( ) AS CURDATE, CURTIME( ) AS CURTIME, NOW( ) AS NOW, DATE_ADD( NOW( ), INTERVAL 1 MONTH ) AS DATE_ADD_ONE_MONTH, DATE_SUB( NOW( ), INTERVAL 1 MONTH ) AS DATE_SUB_ONE_MONTH, UNIX_TIMESTAMP( ) AS UNIX_TIMESTAMP, DATE_FORMAT( NOW( ), \u0026#39;%Y-%m-%d %H-%i-%S\u0026#39; ) AS DATE_FORMAT;   例子2 这里我们结合实际来说\n  需要准备数据 来查询 这里我们使用存储过程来创建特定的日期表\n  -- 创建表  CREATE TABLE `temp_date` ( `id` int NOT NULL AUTO_INCREMENT, `age` float(14,2) DEFAULT NULL COMMENT \u0026#39;age\u0026#39;, `name` varchar(255) DEFAULT NULL, `birthday` date DEFAULT NULL COMMENT \u0026#39;生日\u0026#39;, `gmt_created` datetime DEFAULT CURRENT_TIMESTAMP, `gmt_modified` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT=\u0026#39;临时用户表\u0026#39;; -- 存储过程创建数据  -- 创建生成指定范围的随机数字 DROP PROCEDURE IF EXISTS proc_random_num; DELIMITER ; CREATE PROCEDURE proc_random_num(in custom_start_value double(12,2),in custom_end_value double(12,2),out result_value double(12,2)) BEGIN DECLARE start_value_p1 double(12,2) DEFAULT 0; DECLARE end_value_p1 double(12,2) DEFAULT 0; DECLARE num double DEFAULT 0; DECLARE num_value double DEFAULT 0; DECLARE range_value_t double DEFAULT 0; DECLARE random_value_t double DEFAULT 0; set `start_value_p1` = `custom_start_value` ; set `end_value_p1` = `custom_end_value` ; set range_value_t = `custom_end_value` - `custom_start_value` ; set random_value_t = RAND(); set num_value = `custom_start_value` + ROUND(random_value_t * range_value_t) ; set result_value = num_value ; -- SELECT start_value_p1,`end_value_p1` ; END ; -- 创建生成指定范围的随机日期  DROP PROCEDURE IF EXISTS proc_random_date;--如果存在此存储过程则删掉 DELIMITER ; CREATE PROCEDURE proc_random_date(in custom_start_year int(20),in custom_end_year int(20),in custom_start_month int(20),in custom_end_month int(20),in custom_start_day int(20),in custom_end_day int(20),out result_string LONGTEXT) BEGIN DECLARE a1 int default 0; DECLARE a2 int default 0; DECLARE a3 int default 0; DECLARE string_value LONGTEXT DEFAULT \u0026#39;\u0026#39; ; -- 调用生成指定范围的数字存储过程 	CALL proc_random_num(`custom_start_year` , `custom_end_year` , a1) ; CALL proc_random_num(`custom_start_month` , `custom_end_month` , a2) ; CALL proc_random_num(`custom_start_day` , `custom_end_day` , a3) ; set string_value = CONCAT_WS( \u0026#39;-\u0026#39;, a1 , a2 , a3) ; set result_string = string_value ; END ; CALL proc_random_date(1890,2022,1,12,1,31,@result); select @result; -- 插入指定数量的日期  -- 创建插入数据的存储过程  DROP PROCEDURE IF EXISTS proc_insert_into_temp_date;--如果存在此存储过程则删掉 DELIMITER ; CREATE PROCEDURE proc_insert_into_temp_date(in custom_value int(20)) BEGIN DECLARE i INT DEFAULT 1; DECLARE num_value INT DEFAULT 0; DECLARE date_value_param VARCHAR(255) ; SET num_value = custom_value ; WHILE i\u0026lt;=num_value DO CALL proc_random_date(1890,2022,1,12,1,31,date_value_param); INSERT INTO temp_date(`name`,`age`,`birthday`) VALUES(MD5(UUID()),CEILING(RAND()*100),date_value_param); SET i = i+1; END WHILE; END ; set @result_num = 1000; CALL proc_insert_into_temp_date(@result_num); -- 完成数据准备  -- 开始查询  SELECT DATE_ADD( `birthday`, INTERVAL 1 MONTH ) AS DATE_ADD_ONE_MONTH, DATE_SUB( `birthday`, INTERVAL 1 MONTH ) AS DATE_SUB_ONE_MONTH, DATE_FORMAT( `birthday`, \u0026#39;%Y-%m-%d %H-%i-%S\u0026#39; ) AS DATE_FORMAT FROM temp_date limit 1,30 5:流程函数\r#\r\rselect IF ( 0.5 \u0026gt; rand(),\u0026#39;大于\u0026#39;,\u0026#39;小于\u0026#39;) as if_value , rand() as rand_value ; set @input = ROUND(RAND()*10) ; select case @input when 0 then \u0026#39;其它\u0026#39; when 1 then \u0026#39;星期一\u0026#39; when 2 then \u0026#39;星期二\u0026#39; when 3 then \u0026#39;星期三\u0026#39; when 4 then \u0026#39;星期四\u0026#39; when 5 then \u0026#39;星期五\u0026#39; when 6 then \u0026#39;星期六\u0026#39; else \u0026#39;星期天\u0026#39; end as \u0026#39;column1\u0026#39;,@input as value_; -- 如果 expr1 = expr2 返回 NULL 然后expr1为null那么同样返回null select NULLIF(1,1) as v1, NULLIF(2,1) as v2 ,NULLIF(null,3) as v3,NULLIF(4,null) as v4,NULLIF(null,null) as v5; -- IFNULL(expr1,expr2) 如果expr1不是 NULL， 则IFNULL()返回 expr1；否则返回 expr2。 select IFNULL(1,0) as v1 ,IFNULL(null,0) as v2 ; 三:创建联结\r#\r\r使用表别名\r#\r\r student 取名为 tb_stu\n select concat(tb_stu.department,\u0026#39;-\u0026#39;,tb_stu.name) as name from student as tb_stu;  当在一次查询中 不止一次地引用相同的表\n 自联结\r#\r\r 当你知道某个童鞋的分数是98你想查看和98分数相同科目的其他童鞋的分数\n -- 不适用联结查询的方法 select c_name ,grade from score where c_name = (select c_name from score where grade = 98 ) -- 使用联结的查询方法 (清晰很多) select tb1.c_name ,tb1.grade from score tb1, score tb2 where 1=1 and tb1.c_name = tb2.c_name and tb2.grade = 98; 自然联结\r#\r\r 当对多个表联结查询或者对一个表进行两次引用查询 这个时候有相同的列可能要出现 这个时候我们手动控制某些列出现某些列不出现\n -- fruits 中s_id和suppliers中s_id是相同的列名称  select fruits.*,suppliers.s_name as s_name , suppliers.s_city as s_city from fruits ,suppliers where suppliers.s_id = fruits.s_id 外部联结\r#\r\r 将一个表中的行与另一个表中的行关联，但有时候需要包含那些没有关联的行\n select customers.cust_id,orders.order_num from customers left outer join orders on customers.cust_id = orders.cust_id 使用带聚集函数的联结\r#\r\r四:分组查询、过滤、EXISTS\r#\r\rselect count(id)as count,age,birthday from temp_date group by age ; select count(id)as count,age,birthday from temp_date group by age having age \u0026gt; 20 and count \u0026gt; 10 ;  exists (里面一定是返回布尔值) exists (expression) sql 返回结果集为真 not exists (expression) sql 不返回结果集为真  -- 取满足条件的  SELECT * FROM tb_school_fraction_info WHERE 1 = 1 AND EXISTS ( SELECT * FROM tb_school_fraction_info_base WHERE tb_school_fraction_info_base.school = tb_school_fraction_info.school ) GROUP BY school ORDER BY school LIMIT 100; -- 取不满足条件的数据		SELECT * FROM tb_school_fraction_info WHERE 1 = 1 AND NOT EXISTS ( SELECT * FROM tb_school_fraction_info_base WHERE tb_school_fraction_info_base.school = tb_school_fraction_info.school AND tb_school_fraction_info_base.id \u0026gt; 2000 ) GROUP BY school ORDER BY school LIMIT 100; 五:全文搜索\r#\r\r v 5.7.6   在MySQL 5.7.6之前，全文索引只支持英文全文索引，不支持中文全文索引，需要利用分词器把中文段落预处理拆分成单词，然后存入数据库。\n  从MySQL 5.7.6开始，MySQL内置了ngram全文解析器，用来支持中文、日文、韩文分词。本文使用的MySQL 版本是5.7.22，InnoDB数据库引擎。\n ngram全文解析器\r#\r\r ngram就是一段文字里面连续的n个字的序列。ngram全文解析器能够对文本进行分词，每个单词是连续的n个字的序列。例如，用ngram全文解析器对“生日快乐”进行分词\n  MySQL 中使用全局变量ngram_token_size来配置ngram中n的大小，它的取值范围是1到10，默认值是2 如果需要搜索单字，就要把ngram_token_size设置为1,因为中文单词最少是两个汉字，推荐使用默认值2 全局变量ngram_token_size的两种设置方法 1、启动mysqld命令时  mysqld --ngram_token_size=2  修改MySQL配置文件  [mysqld] ngram_token_size=2 n=1: \u0026#39;生\u0026#39;, \u0026#39;日\u0026#39;, \u0026#39;快\u0026#39;, \u0026#39;乐\u0026#39; n=2: \u0026#39;生日\u0026#39;, \u0026#39;日快\u0026#39;, \u0026#39;快乐\u0026#39; n=3: \u0026#39;生日快\u0026#39;, \u0026#39;日快乐\u0026#39; n=4: \u0026#39;生日快乐\u0026#39; -- 1:创建包含FULLTEXT(全文索引)的表 CREATE TABLE tb_posts ( id int(11) NOT NULL AUTO_INCREMENT, pro_date datetime DEFAULT NULL, price_remark varchar(255) DEFAULT NULL, title varchar(255) NOT NULL, post_content text, gmt_created datetime DEFAULT CURRENT_TIMESTAMP, gmt_modified datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (id), FULLTEXT KEY post_content (post_content) ); -- 2:通过 alter table 的方式来添加  ALTER TABLE tb_posts ADD FULLTEXT INDEX ft_index (post_content) WITH PARSER ngram; -- 3、直接通过create index的方式  CREATE FULLTEXT INDEX ft_index ON tb_posts (post_content) WITH PARSER ngram; 全文检索模式\r#\r\r 常用的全文检索模式有两种 1、自然语言模式(NATURAL LANGUAGE MODE)   自然语言模式是MySQL 默认的全文检索模式。自然语言模式不能使用操作符，不能指定关键词必须出现或者必须不能出现等复杂查询。\n  2、BOOLEAN模式(BOOLEAN MODE)   BOOLEAN模式可以使用操作符，可以支持指定关键词必须出现或者必须不能出现或者关键词的权重高还是低等复杂查询。\n -- 普通短语搜索  SELECT * FROM tb_posts WHERE MATCH (post_content) AGAINST (\u0026#39;天津\u0026#39; ); -- 自然语言模式 -- 包含北京关键词 SELECT * FROM tb_posts WHERE MATCH (post_content) AGAINST (\u0026#39;北京\u0026#39; IN NATURAL LANGUAGE MODE); -- 布尔模式 -- 必须包含 SELECT * FROM tb_posts WHERE MATCH (post_content) AGAINST (\u0026#39;无锡\u0026#39; IN BOOLEAN MODE); -- 通配符搜索 -- 匹配包含北京的字符串前缀开头的数据 SELECT * FROM tb_posts WHERE MATCH (post_content) AGAINST (\u0026#39;北京*\u0026#39; ); -- 如果通配符中的前缀术语长于ngram令牌大小，MySQL将把前缀术语转换为ngram短语并忽略通配符运算符 SELECT * FROM tb_posts WHERE MATCH (post_content) AGAINST (\u0026#39;北京顺鑫石门国际*\u0026#39; );   全文停用词\n  查看停用的默认词 SELECT * FROM INFORMATION_SCHEMA.INNODB_FT_DEFAULT_STOPWORD;\n  思路 创建一个表和默认停用词相同的结构 然后你自己加记录进去 然后在设置这个表为自定义的停用词\n  -- Create a new stopword table  CREATE TABLE my_stopwords(value VARCHAR(30)) ENGINE = INNODB; -- Insert stopwords (for simplicity, a single stopword is used in this example)  INSERT INTO my_stopwords(value) VALUES (\u0026#39;Ishmael\u0026#39;); -- Create the table  CREATE TABLE opening_lines ( id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY, opening_line TEXT(500), author VARCHAR(200), title VARCHAR(200) ) ENGINE=InnoDB; -- Insert data into the table  INSERT INTO opening_lines(opening_line,author,title) VALUES (\u0026#39;Call me Ishmael.\u0026#39;,\u0026#39;Herman Melville\u0026#39;,\u0026#39;Moby-Dick\u0026#39;), (\u0026#39;A screaming comes across the sky.\u0026#39;,\u0026#39;Thomas Pynchon\u0026#39;,\u0026#39;Gravity\\\u0026#39;s Rainbow\u0026#39;), (\u0026#39;I am an invisible man.\u0026#39;,\u0026#39;Ralph Ellison\u0026#39;,\u0026#39;Invisible Man\u0026#39;), (\u0026#39;Where now? Who now? When now?\u0026#39;,\u0026#39;Samuel Beckett\u0026#39;,\u0026#39;The Unnamable\u0026#39;), (\u0026#39;It was love at first sight.\u0026#39;,\u0026#39;Joseph Heller\u0026#39;,\u0026#39;Catch-22\u0026#39;), (\u0026#39;All this happened, more or less.\u0026#39;,\u0026#39;Kurt Vonnegut\u0026#39;,\u0026#39;Slaughterhouse-Five\u0026#39;), (\u0026#39;Mrs. Dalloway said she would buy the flowers herself.\u0026#39;,\u0026#39;Virginia Woolf\u0026#39;,\u0026#39;Mrs. Dalloway\u0026#39;), (\u0026#39;It was a pleasure to burn.\u0026#39;,\u0026#39;Ray Bradbury\u0026#39;,\u0026#39;Fahrenheit 451\u0026#39;); -- Set the innodb_ft_server_stopword_table option to the new stopword table SET GLOBAL innodb_ft_server_stopword_table = \u0026#39;test/my_stopwords\u0026#39;; -- Create the full-text index (which rebuilds the table if no FTS_DOC_ID column is defined) CREATE FULLTEXT INDEX idx ON opening_lines(opening_line);  设置  SET GLOBAL innodb_ft_aux_table=\u0026#39;test/opening_lines\u0026#39;; 六:行转列\u0026amp;列转行\r#\r\r行转列\r#\r\r 数据准备  -- 创建表  -- ---------------------------- -- Table structure for user_column_row -- ---------------------------- DROP TABLE IF EXISTS `user_column_row`; CREATE TABLE `user_column_row` ( `id` int(0) NOT NULL AUTO_INCREMENT, `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT \u0026#39;姓名\u0026#39;, `features` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT \u0026#39;特征\u0026#39;, `value` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT \u0026#39;数值\u0026#39;, PRIMARY KEY (`id`) USING BTREE ) ENGINE = MyISAM AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic; -- ---------------------------- -- Records of user_column_row -- ---------------------------- INSERT INTO `user_column_row` VALUES (2, \u0026#39;小明\u0026#39;, \u0026#39;身高\u0026#39;, \u0026#39;172.00\u0026#39;); INSERT INTO `user_column_row` VALUES (3, \u0026#39;小明\u0026#39;, \u0026#39;体重\u0026#39;, \u0026#39;48kg\u0026#39;); INSERT INTO `user_column_row` VALUES (4, \u0026#39;小明\u0026#39;, \u0026#39;年龄\u0026#39;, \u0026#39;23\u0026#39;); INSERT INTO `user_column_row` VALUES (5, \u0026#39;小红\u0026#39;, \u0026#39;身高\u0026#39;, \u0026#39;161.00\u0026#39;); INSERT INTO `user_column_row` VALUES (6, \u0026#39;小红\u0026#39;, \u0026#39;体重\u0026#39;, \u0026#39;40kg\u0026#39;); INSERT INTO `user_column_row` VALUES (7, \u0026#39;小红\u0026#39;, \u0026#39;年龄\u0026#39;, \u0026#39;19\u0026#39;); INSERT INTO `user_column_row` VALUES (8, \u0026#39;小花\u0026#39;, \u0026#39;身高\u0026#39;, \u0026#39;153.00\u0026#39;); INSERT INTO `user_column_row` VALUES (9, \u0026#39;小花\u0026#39;, \u0026#39;体重\u0026#39;, \u0026#39;42kg\u0026#39;); INSERT INTO `user_column_row` VALUES (10, \u0026#39;小花\u0026#39;, \u0026#39;年龄\u0026#39;, \u0026#39;17\u0026#39;); INSERT INTO `user_column_row` VALUES (11, \u0026#39;小明\u0026#39;, \u0026#39;身高\u0026#39;, \u0026#39;172.33\u0026#39;); INSERT INTO `user_column_row` VALUES (12, \u0026#39;小军\u0026#39;, \u0026#39;身高\u0026#39;, NULL); INSERT INTO `user_column_row` VALUES (13, \u0026#39;小军\u0026#39;, \u0026#39;体重\u0026#39;, NULL); INSERT INTO `user_column_row` VALUES (14, \u0026#39;小军\u0026#39;, \u0026#39;年龄\u0026#39;, NULL); INSERT INTO `user_column_row` VALUES (15, \u0026#39;小胖\u0026#39;, NULL, NULL); INSERT INTO `user_column_row` VALUES (16, \u0026#39;小胖\u0026#39;, NULL, NULL); INSERT INTO `user_column_row` VALUES (17, \u0026#39;小胖\u0026#39;, NULL, NULL);   例子\n  进行之前 先说一个语句 mysql case…when…then 这个经常用来处理行转列\n  CASE WHEN features = \u0026lsquo;体重\u0026rsquo; THEN value ELSE \u0026lsquo;0kg\u0026rsquo; END 表示 匹配到体重就使用value 假如匹配不到就使用0kg\n  -- 第一次\rSELECT\rtb_user.id,tb_user.NAME , ( CASE WHEN `features` = '体重' THEN `value` ELSE '0kg' END ) AS weight ,\r( CASE WHEN `features` = '身高' THEN `value` ELSE '0cm' END ) AS height,\r( CASE WHEN `features` = '年龄' THEN `value` ELSE 0 END ) AS age FROM user_column_row tb_user GROUP BY tb_user.NAME;\r-- 结果\rid name weight height age\r2	小明	0kg	172.00	0\r5	小红	0kg	161.00	0\r8	小花	0kg	153.00	0\r12	小军	0kg	0\r15	小胖	0kg	0cm	0\r-- 可以看到根本没有达到目的\r-- 第二次\rSELECT\rtb_user.id,tb_user.NAME , ( CASE WHEN `features` = '体重' THEN `value` ELSE '0kg' END ) AS weight ,\r( CASE WHEN `features` = '身高' THEN `value` ELSE '0cm' END ) AS height,\rmax( CASE WHEN `features` = '年龄' THEN `value` ELSE 0 END ) AS age FROM user_column_row tb_user GROUP BY tb_user.NAME;\r-- 结果\r2	小明	0kg	172.00	23\r5	小红	0kg	161.00	19\r8	小花	0kg	153.00	17\r12	小军	0kg	0\r15	小胖	0kg	0cm	0\r-- 对年龄进行取最大倒是满足了 但是不是所有的行数据都是数字啊 所以还是不靠谱\r-- 第三次\rSELECT\rtb_user.id,tb_user.NAME ,\rgroup_concat(CASE WHEN `features` = '体重' THEN `value` ELSE '0kg' END) AS weight,\rgroup_concat(CASE WHEN `features` = '身高' THEN `value` ELSE '0cm' END) AS height,\rgroup_concat(CASE WHEN `features` = '年龄' THEN `value` ELSE ' 0 ' END) AS age FROM user_column_row tb_user GROUP BY tb_user.NAME order by tb_user.id;\r-- 结果\rid NAME weight height age\r2	小明	0kg,48.0kg,0kg,0kg	172.00,0cm,0cm,172.33	0 , 0 ,23, 0 5	小红	0kg,40.0kg,0kg	161.00,0cm,0cm	0 , 0 ,19\r8	小花	0kg,42.0kg,0kg	153.00,0cm,0cm	0 , 0 ,17\r12	小军	0kg,0kg	0cm,0cm	0 , 0 15	小胖	0kg,0kg,0kg	0cm,0cm,0cm	0 , 0 , 0 -- 可以看到已经全部取出组合而来 虽然结果值很乱 但是这是最靠谱的 把结果处理下就行啦,比如可以考虑代码直接处理或者存储过程处理\r-- 第四次 (优化第三次)\rSELECT\rtb_user.id,tb_user.NAME ,\rgroup_concat(DISTINCT CASE WHEN `features` = '体重' and `value` != '0kg' THEN `value` ELSE null END ) AS weight,\rgroup_concat(DISTINCT CASE WHEN `features` = '身高' and `value` != '0cm' THEN `value` ELSE null END) AS height,\rgroup_concat(DISTINCT CASE WHEN `features` = '年龄' and `value` != '0' THEN `value` ELSE null END) AS age FROM user_column_row tb_user GROUP BY tb_user.NAME order by tb_user.id;\r-- 结果\rid NAME weight height age\r2	小明	48kg	172.00,172.33	23\r5	小红	40kg	161.00	19\r8	小花	42kg	153.00	17\r12	小军	15	小胖	列转行\r#\r\r 数据准备  CREATE TABLE `user2` ( `id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT \u0026#39;名称\u0026#39;, `age` double(11,2) DEFAULT NULL COMMENT \u0026#39;年龄\u0026#39;, `height` double(11,2) DEFAULT NULL COMMENT \u0026#39;身高\u0026#39;, `weight` double(11,2) DEFAULT NULL COMMENT \u0026#39;体重\u0026#39;, PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; -- ---------------------------- -- Table structure for user2 -- ---------------------------- DROP TABLE IF EXISTS `user2`; CREATE TABLE `user2` ( `id` int(0) NOT NULL AUTO_INCREMENT, `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT \u0026#39;名称\u0026#39;, `age` double(11, 2) NULL DEFAULT NULL COMMENT \u0026#39;年龄\u0026#39;, `height` double(11, 2) NULL DEFAULT NULL COMMENT \u0026#39;身高\u0026#39;, `weight` double(11, 2) NULL DEFAULT NULL COMMENT \u0026#39;体重\u0026#39;, PRIMARY KEY (`id`) USING BTREE ) ENGINE = MyISAM AUTO_INCREMENT = 2 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic; -- ---------------------------- -- Records of user2 -- ---------------------------- INSERT INTO `user2` VALUES (2, \u0026#39;小明\u0026#39;, 22.00, 48.00, 178.40); INSERT INTO `user2` VALUES (3, \u0026#39;小胖\u0026#39;, 25.00, 50.00, 168.00);  列转行关键点：   union，使用\u0026rsquo;年龄' as 特征、\u0026lsquo;身高\u0026rsquo; as 特征、\u0026lsquo;体重\u0026rsquo; as 特征 来确定图5第3列的列名与每行数据该列的值，使用age as 数值、height as 数值、weight as 数值来确定图5第4列的列名与每行数据该列的值，3个select 查询出3张表格，再通过union连接成一张表格\n  union注意点   使用union连接表时需要注意表的字段一致，此处我们3个select 查询出3张表格字段是一致的\n  例子  select id , name ,\u0026#39;年龄\u0026#39; as features,age as value from user2 union select id , name ,\u0026#39;体重\u0026#39; as features,weight as value from user2 union select id , name ,\u0026#39;身高\u0026#39; as features,height as value from user2 -- 这里面有一个常设值 比如 \u0026#39;年龄\u0026#39; as features , \u0026#39;体重\u0026#39; as features 直接挂到列上的 除了这个就没有其它难点了 七:行锁(悲观锁),表锁,页面锁\r#\r\r 锁定用于确保事务完整性和数据库一致性。 锁定可以防止用户读取其他用户正在更改的数据，并防止多个用户同时更改相同的数据。 如果不使用锁定，数据库中的数据可能在逻辑上变得不正确，而针对这些数据进行查询可能会产生想不到的结果。\n  在计算机科学中，锁是在执行多线程时用于强行限制资源访问的同步机制，即用于在并发控制中保证对互斥要求的满足。在数据库的锁机制中介绍过，在DBMS中，可以按照锁的粒度把数据库锁分为行级锁(INNODB引擎)、表级锁(MYISAM引擎)和页级锁(BDB引擎 )。\n 行级锁\r#\r\r  行级锁是Mysql中锁定粒度最细的一种锁，表示只针对当前操作的行进行加锁。行级锁能大大减少数据库操作的冲突。其加锁粒度最小，但加锁的开销也最大。行级锁分为共享锁 和 排他锁。\n  特点:开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最低，并发度也最高。\n  表级锁\r#\r\r  表级锁是MySQL中锁定粒度最大的一种锁，表示对当前操作的整张表加锁，它实现简单，资源消耗较少，被大部分MySQL引擎支持。最常使用的MYISAM与INNODB都支持表级锁定。表级锁定分为表共享读锁（共享锁）与表独占写锁（排他锁）\n  特点:开销小，加锁快；不会出现死锁；锁定粒度大，发出锁冲突的概率最高，并发度最低。\n  页级锁\r#\r\r  页级锁是MySQL中锁定粒度介于行级锁和表级锁中间的一种锁。表级锁速度快，但冲突多，行级冲突少，但速度慢。所以取了折衷的页级，一次锁定相邻的一组记录。BDB支持页级锁\n  特点:开销和加锁时间界于表锁和行锁之间；会出现死锁；锁定粒度界于表锁和行锁之间，并发度一般\n  MySQL常用存储引擎的锁机制\r#\r\r MyISAM和MEMORY采用表级锁(table-level locking) BDB采用页面锁(page-level locking)或表级锁，默认为页面锁 InnoDB支持行级锁(row-level locking)和表级锁,默认为行级锁  Innodb中的行锁与表锁\r#\r\r 前面提到过，在Innodb引擎中既支持行锁也支持表锁，那么什么时候会锁住整张表，什么时候或只锁住一行呢？ InnoDB行锁是通过给索引上的索引项加锁来实现的，这一点MySQL与Oracle不同，后者是通过在数据块中对相应数据行加锁来实现的。InnoDB这种行锁实现特点意味着：只有通过索引条件检索数据，InnoDB才使用行级锁，否则，InnoDB将使用表锁！ 在实际应用中，要特别注意InnoDB行锁的这一特性，不然的话，可能导致大量的锁冲突，从而影响并发性能。 行级锁都是基于索引的，如果一条SQL语句用不到索引是不会使用行级锁的，会使用表级锁。行级锁的缺点是：由于需要请求大量的锁资源，所以速度慢，内存消耗大。  行级锁与死锁\r#\r\r MyISAM中是不会产生死锁的，因为MyISAM总是一次性获得所需的全部锁，要么全部满足，要么全部等待。而在InnoDB中，锁是逐步获得的，就造成了死锁的可能。\n  在MySQL中，行级锁并不是直接锁记录，而是锁索引。索引分为主键索引和非主键索引两种，如果一条sql语句操作了主键索引，MySQL就会锁定这条主键索引；如果一条语句操作了非主键索引，MySQL会先锁定该非主键索引，再锁定相关的主键索引。 在UPDATE、DELETE操作时，MySQL不仅锁定WHERE条件扫描过的所有索引记录，而且会锁定相邻的键值，即所谓的next-key locking。\n   当两个事务同时执行，一个锁住了主键索引，在等待其他相关索引。另一个锁定了非主键索引，在等待主键索引。这样就会发生死锁。\n  发生死锁后，InnoDB一般都可以检测到，并使一个事务释放锁回退，另一个获取锁完成事务。\n  有多种方法可以避免死锁，这里只介绍常见的三种\n  1、如果不同程序会并发存取多个表，尽量约定以相同的顺序访问表，可以大大降低死锁机会。\n  2、在同一个事务中，尽可能做到一次锁定所需要的所有资源，减少死锁产生概率；\n  3、对于非常容易产生死锁的业务部分，可以尝试使用升级锁定颗粒度，通过表级锁定来减少死锁产生的概率；\n  行锁例子\r#\r\r InnoDB实现了以下两种类型的行锁： 共享锁（S）：允许一个事务去读一行，阻止其他事务获得相同数据集的排它锁 排他锁（X）：允许获取排他锁的事务更新数据，阻止其他事务获得相同数据集的共享锁和排他锁     当前锁类型\\请求锁类型 S (共享锁) X(排他锁)     S(共享锁) 兼容 冲突   X(排他锁) 冲突 冲突       SQL 行锁类型 说明     INSERT\u0026hellip; 排他锁 自动加锁   UPDATE\u0026hellip; 排他锁 自动加锁   DELETE\u0026hellip; 排他锁 自动加锁   SELECT\u0026hellip; 不加任何锁    SELECT\u0026hellip; LOCK IN SHARE MODE 共享锁 需要在手动在SELECT之后LOCK IN SHARE MODE   SELECT\u0026hellip; FOR UPDATE 排他锁 需要在手动在SELECT之后FOR UPDATE     例子1 行级锁(排他锁)  -- 创建行锁条件 -- 1、表中创建索引， select 。。。 where 字段（必须是索引） 不然行锁就无效。 -- 2、必须要有事务，这样才是 行锁（排他锁） -- 3、在select 语句后面 加 上 FOR UPDATE；  start transaction ; select age,birthday from temp_date where 1=1 and age = 60 for update; -- 休眠5秒 select SLEEP(5); commit ; 表锁定例子\r#\r\r 获取表的锁的简单形式  LOCK TABLES table_name [READ | WRITE] -- 可将表的名称放在LOCK TABLES关键字后面，后跟一个锁类型。 MySQL提供两种锁类型：READ和WRITE  释放表的锁  UNLOCK TABLES;  表锁定为READ   同时可以通过多个会话获取表的READ锁。此外，其他会话可以从表中读取数据，而无需获取锁定。 持有READ锁的会话只能从表中读取数据，但不能写入。此外，其他会话在释放READ锁之前无法将数据写入表中。来自另一个会话的写操作将被放入等待状态，直到释放READ锁。 如果会话正常或异常终止，MySQL将会隐式释放所有锁。这也与WRITE锁相关。  lock table temp_date read; insert into temp_date(age,birthday) values(102,\u0026#39;2008-04-25\u0026#39;) ; -- 结果 lock table temp_date read \u0026gt; OK \u0026gt; 时间: 0s insert into temp_date(age,birthday) values(102,\u0026#39;2008-04-25\u0026#39;) \u0026gt; 1099 - Table \u0026#39;temp_date\u0026#39; was locked with a READ lock and can\u0026#39;t be updated \u0026gt; 时间: 0s -- 继续 select age,birthday from temp_date; -- 可以看到 READ锁 是可以读取数据的 -- 释放锁 unlock tables ;  表锁定WRITE   只有拥有表锁定的会话才能从表读取和写入数据。 在释放WRITE锁之前，其他会话不能从表中读写。  -- 加锁 lock table temp_date write; insert into temp_date(age,birthday) values(102,\u0026#39;2008-04-25\u0026#39;) ; -- 测试是否还可继续读(从其他会话查询,因为当前会话连接是有锁的) select age,birthday from temp_date; -- 发现已经被阻塞了 -- 释放锁 unlock tables ;  表锁了，强制释放    1、查看当前进程\n  show processlist;\n  2、查看当前运行的事务\n  SELECT * FROM information_schema.INNODB_TRX;\n  3、当前出现的锁\n  SELECT * FROM information_schema.INNODB_LOCKs;\n  4、kill掉对应进程\n  kill id\n  八:事务\r#\r\r什么是事务\r#\r\r 一系列有序的数据库操作：  要么全部成功 要么全部回退到操作前的状态 中间状态对其他连接不可见   事务的基本操作：    基本操作 说明     start transaction 开始事务   commit 提交(全部完成)   rollback 回滚(回到初始状态)       创建一个临时表  CREATE TABLE `t_transaction` ( `id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) DEFAULT NULL, `num` bigint DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;  例子事务使用  -- 开启一个事务 start TRANSACTION ; -- 或者使用(非标准sql) begin ; insert into t_transaction( `name` ,`num`) values(\u0026#39;abc\u0026#39;,ROUND(RAND()*100)); -- 事务结束，插入成功 COMMIT ;  例子 事务 回滚  START TRANSACTION ; BEGIN ; insert into t_transaction( `name` ,`num`) values(\u0026#39;kk\u0026#39;,ROUND(RAND()*100)); ROLLBACK ; -- 不会插入一条数据   事务回滚点  START TRANSACTION ; BEGIN ; insert into t_transaction( `name` ,`num`) values(\u0026#39;s1x\u0026#39;,ROUND(RAND()*100)); -- 设置回滚点1 savepoint a_point_1; insert into t_transaction( `name` ,`num`) values(\u0026#39;s1\u0026#39;,ROUND(RAND()*100)); -- 回滚到指定点 ROLLBACK to a_point_1; commit ; 自动提交\r#\r\r autocommit可以在session级别设置 每个DML操作都自动提交 DDL永远都是自动提交，无法通过rollback回滚  事务的四个基本属性(ACID)\r#\r\r 原子性(Atomicity) 一致性(Consistency) 隔离性(Isolation) 持久性(Durability)  事务的原子性\r#\r\r 包含在事务中的操作要么全部被执行，要么都不执行 中途数据库或应用发生异常，未提交的事务都应该被回滚  事务的一致性\r#\r\r 数据的正确性，合理性，完整性 数据一致性应该符合应用需要规则：  余额不能是负数 交易对象必须先有账号 用户账号不能重复   事务的结果需要满足数据的一致性约束  事物的持久性\r#\r\r 提交完成的事务对数据库的影响必须是永久性的  数据库异常不会丢失事务更新 通常认为成功写入磁盘的数据即为持久化成功    事务的持久化的实现\r#\r\r 数据文件持久化  随机同步刷新(慢)   事务日志持久化与实例恢复  顺序同步刷新(快) -\u0026gt; 事务日志 随机异步刷新 -\u0026gt; 磁盘 事务日志 -\u0026gt; 磁盘(实例恢复)    事务的隔离性\r#\r\r 数据库事务在提交完成前，中间的任何数据变化对其他的事务都是不可见的。  数据库隔离现象\r#\r\r   隔离现象 描述     脏读(Dirty Read) 事务B读到事务A尚未提交的数据变更   不可重复读(NonRepeatable Read) 事务B读取前后两次读取一条记录之间该记录被事务A修改并提交，于是事务B读到了不一样的结果   幻读(Phantom Read) 事务B按条件匹配到了若干行记录并修改。但是由于修改过程中事务A新插入了符合条件记录，导致B更新完成后发现仍有符合条件却未被更新的记录。    数据库隔离等级\r#\r\r   隔离等级 脏读 不可重复读 幻读     未提交读 可能 可能 可能   已提交读 不可能 可能 可能   可重复读 不可能 不可能 可能   可串行化读 不可能 不可能 不可能    MySQL的事务隔离级别\r#\r\r InnoDB默认标记为可重复读 InnoDB并不是标准定义上的课重复读 InnoDB默认在可重复读的基础上避免幻读  MySQL事务隔离级别设置\r#\r\r 可在global/session/下个事务，级别分别进行设置 建议使用Read committed(同Oracle) 或者建议使用默认的Repeatable read  set tx_isolation = \u0026#39;\u0026#39; -- 设置隔离级别 事务与并发写\r#\r\r 某个正在更新的记录再提交或回滚前不能被其他事务同时更新  事务回滚的实现\r#\r\r 回滚段(rollback segment)与数据前像  九:重要函数单独说明\r#\r\rcount 函数\r#\r\r 问题：用count(*)，count(1)，count(不存在NULL的列名)谁好呢?   其实，对于MyISAM引擎的表是没有区别的(O(1))。这种引擎内部有一计数器在维护着行数。 Innodb引擎的表用count(*),count(1)直接读行数，复杂度是O(n)，因为innodb真的要去数一遍。但好于具体的count(列名)。\n  问题：能不能使用count(列名)替换count(*)?   不要使用 count(列名)来替代 count() ， count() 是 SQL92 定义的标准统计行数的语法，跟数 据库无关，跟 NULL 和非 NULL 无关。\n  count(*)会统计值为 NULL 的行，而 count(列名)不会统计此列为 NULL 值的行。\n  解决MySQL5.7版本之后使用GROUP BY语句时报错   1、先使用SQL查询sql_mode  select @@global.sql_mode  2、重新设置sql_mode，删除ONLY_FULL_GROUP_BY  set @@global.sql_mode =\u0026#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION\u0026#39; 批量插入\r#\r\rmysql 出现 truncated incorrect double value （已解决）\r#\r\r 当 int 类型 与 字符串 相连的时候 用 + 就会报错 使用CONCAT(）函数来连接即可 列如 CONCAT(1,‘王’）代替 1 + ‘王’  MySQL 1064 You have an error in your SQL syntax 错误解决办法\r#\r\r 　这是因为数据库表中的字段名引用了关键字，例如上面报错字段“desc 写sql语句时，引用到与mysql关键字重名的字段时，加上`` 如: set start_value_p1 = custom_start_value ;  mysql中 FORM的疑问\r#\r\rCREATE TABLE `temp_date` ( `id` int NOT NULL AUTO_INCREMENT, `age` float(14,2) DEFAULT NULL COMMENT \u0026#39;age\u0026#39;, `name` varchar(255) DEFAULT NULL, `birthday` date DEFAULT NULL COMMENT \u0026#39;生日\u0026#39;, `gmt_created` datetime DEFAULT CURRENT_TIMESTAMP, `gmt_modified` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=1001 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT=\u0026#39;临时用户表\u0026#39;; -- 正常操作  SELECT id,age,birthday FROM temp_date ; -- 奇奇怪怪的东西出来了  SELECT id,age,birthday FROM (SELECT id,age,birthday FROM temp_date ) tb_table ; -- 注意上面tb_table还必须得加上 否则就报错误 Every derived table must have its own alias 相当于派生表了  -- 相当于FROM 实际可以跟上虚拟的派生表 Mysql 相邻两行记录某列的差值方法\r#\r\r 最终demo  SELECT r_tab.id, r_tab.age, r_tab.birthday, r_tab.diff , r_tab.diff_content FROM ( SELECT tb_r.id, tb_r.age, tb_r.birthday, (tb_r.age - tb_y.age)as diff ,(CONCAT_WS(\u0026#39;-\u0026#39;,tb_r.age,tb_y.age))as diff_content FROM ( SELECT tab.age,tab.id,(@rownum := @rownum + 1) AS rownum,tab.birthday FROM temp_date tab,(SELECT @rownum := 0) r_tx ) tb_r LEFT JOIN ( SELECT tab.age,tab.id,(@INDEX_NUM := @INDEX_NUM + 1) AS rownum,tab.birthday FROM temp_date tab,(SELECT @INDEX_NUM := 0) r_ty ) tb_y on tb_r.rownum = tb_y.rownum + 1 ) r_tab -- tb_r 和 tb_y比较后形成新的衍生或者派生表 r_tab 然后再把 r_tab 数据查出来  简化后  SELECT tb_r.id, tb_r.age, tb_r.birthday, (tb_r.age - tb_y.age)as diff ,(CONCAT_WS(\u0026#39;-\u0026#39;,tb_r.age,tb_y.age))as diff_content FROM ( SELECT tab.age,tab.id,(@rownum := @rownum + 1) AS rownum,tab.birthday FROM temp_date tab,(SELECT @rownum := 0) r_tx ) tb_r LEFT JOIN ( SELECT tab.age,tab.id,(@INDEX_NUM := @INDEX_NUM + 1) AS rownum,tab.birthday FROM temp_date tab,(SELECT @INDEX_NUM := 0) r_ty ) tb_y on tb_r.rownum = tb_y.rownum + 1 -- tb_r 和 tb_y 直接作比较得出数据就可以了 (然后这里用left join就是以tb_r为主)  在上面的例子解决后 增加 SQL实现相邻两行数据的加减乘除操作  SELECT tb_r.id, tb_r.age, tb_r.birthday,(tb_r.age + tb_y.age)as add_v, (tb_r.age - tb_y.age)as sub_v , (tb_r.age * tb_y.age)as mul_v,(tb_r.age / tb_y.age)as div_v FROM ( SELECT tab.age,tab.id,(@rownum := @rownum + 1) AS rownum,tab.birthday FROM temp_date tab,(SELECT @rownum := 0) r_tx ) tb_r LEFT JOIN ( SELECT tab.age,tab.id,(@INDEX_NUM := @INDEX_NUM + 1) AS rownum,tab.birthday FROM temp_date tab,(SELECT @INDEX_NUM := 0) r_ty ) tb_y on tb_r.rownum = tb_y.rownum + 1 -- 利用上面的例子实现加减乘除 "}),a.add({id:315,href:'/life/docs/databases/mysql/mysql_view/',title:"mysql视图",section:"mysql学习笔记",content:"数据库视图简介\r#\r\r 数据库视图是一个虚拟表或逻辑表，它被定义为带有INNER的SQL SELECT查询。因为数据库视图类似于由行和列组成的数据库表，所以您可以针对它查询数据。大多数数据库管理系统（包括MySQL）允许您通过数据库视图更新基础表中的数据，并具有一些先决条件\n 数据库视图的优点\r#\r\r  数据库视图允许您简化复杂查询：数据库视图由与许多基础表关联的SQL语句定义。您可以使用数据库视图向最终用户和外部应用程序隐藏基础表的复杂性。通过数据库视图，您只需使用简单的SQL语句而不是具有许多连接的复杂语句。\n  数据库视图有助于限制对特定用户的数据访问。您可能不希望所有用户都可以查询敏感数据的子集。您可以使用数据库视图仅将非敏感数据公开给特定用户组。\n  数据库视图提供额外的安全层。安全性是任何关系数据库管理系统的重要组成部分。数据库视图为数据库管理系统提供了额外的保护。数据库视图允许您创建只读视图以向特定用户公开只读数据。用户只能以只读视图检索数据，但无法更新数据。\n  数据库视图启用计算列。数据库表不应有计算列，但数据库视图应。假设orderDetails您在表中有quantityOrder（订购产品的数量）和priceEach（每个产品的价格）列。但是，orderDetails 表没有用于存储订单的每个行项目的总销售额的计算列。如果有，数据库模式将不是一个好的设计。在这种情况下，您可以创建一个名为的计算列total ，它是quantityOrder和priceEach计算结果的乘积。从数据库视图查询数据时，将动态计算计算列的数据。\n  数据库视图可实现向后兼容性。假设您有一个中央数据库，许多应用程序正在使用它。有一天，您决定重新设计数据库以适应新的业务需求。您删除了一些表并创建新表，并且您不希望更改影响其他应用程序。在此方案中，您可以使用与要删除的旧表相同的模式创建数据库视图\n  数据库视图的缺点\r#\r\r 性能：从数据库视图查询数据可能会很慢，尤其是在基于其他视图创建视图时。 表依赖项：您基于数据库的基础表创建视图。每当您更改与其关联的视图的这些表的结构时，您也必须更改视图。  创建视图\r#\r\rCREATE [ALGORITHM = {MERGE | TEMPTABLE | UNDEFINED}] VIEW view_name [(column_list)] AS select-statement; 视图的处理算法\r#\r\r MERGE   使用MERGE算法，MySQL首先将输入查询与SELECT定义视图的语句组合成单个查询。然后MySQL执行组合查询以返回结果集。 如果SELECT语句包含聚合函数，例如 MIN，MAX，SUM，COUNT，AVG 或DISTINCT，GROUP BY，HAVING，LIMIT，UNION，UNION ALL，子查询，则不允许使用MERGE算法。如果SELECT语句引用无表，则也不允许MERGE算法。如果不允许MERGE算法，MySQL将算法更改为UNDEFINED。请注意，将视图定义中的输入查询和查询组合到一个查询中称为视图分辨率\n  TEMPTABLE   使用TEMPTABLE算法，MySQL首先根据定义视图的SELECT语句创建临时表，然后对临时表执行输入查询。因为MySQL必须创建一个临时表来存储结果集并将数据从基表移动到临时表，所以TEMPTABLE 算法的效率低于MERGE算法。此外，使用TEMPTABLE 算法的视图不可更新。\n  UNDEFINED   在未指定显式算法的情况下创建视图时，这是默认UNDEFINED算法。UNDEFINED算法允许MySQL选择使用 MERGE或TEMPTABLE 算法。MySQL更喜欢MERGE 算法在TEMPTABLE 算法中，因为 MERGE算法效率更高\n create view temp_date_view as select count(age) as count_vlue,max(age) as max_value,min(age) as min_value,avg(age) as avg_value from temp_date where 1=1; -- 如果使用SHOW TABLE命令查看数据库中的所有表，我们还会看到temp_date_view视图显示在列表中 show tables; select * from temp_date_view; -- 要知道哪个对象是视图或表，请使用以下SHOW FULL TABLES命令 SHOW FULL TABLES ; insert into temp_date_view(max_value,min_value,count_vlue) values(100,3,20) ; \u0026gt; 1471 - The target table temp_date_view of the INSERT is not insertable-into \u0026gt; 时间: 0.047s -- 下面会说到可更新视图  基于另一个视图创建视图  -- 第一个视图 create view temp_date_view_source as select id,age,birthday from temp_date ; select * from temp_date_view_source; -- 第二个视图  create view temp_date_view_source_new as select id,age,birthday from temp_date_view_source where 1=1 and age \u0026gt; 50 ; select * from temp_date_view_source_new; 可更新视图\r#\r\r 在MySQL中，视图不仅可查询，还可以更新。这意味着您可以使用INSERT或 UPDATE语句通过可更新视图插入或更新基表的行。此外，您可以使用DELETE语句通过视图删除基础表的行。\n 要创建可更新视图，定义视图的SELECT语句不得包含以下任何元素\r#\r\r 聚合函数 ，如MIN，MAX，SUM，AVG和 COUNT。 DISTINCT GROUP BY子句。 HAVING子句。 UNION或UNION ALL子句。 左连接或外连接。 子查询 中的SELECT子句或在引用表WHERE语句出现在FROM子句中。 引用FROM子句中的不可更新视图 仅引用文字值 对基表的任何列的多次引用 使用TEMPTABLE算法创建视图，则无法更新视图 有时可以使用内部联接基于多个表创建可更新视图  CREATE TABLE `tb_office_info` ( `id` int NOT NULL AUTO_INCREMENT, `office_code` varchar(255) DEFAULT NULL, `phone` varchar(255) DEFAULT NULL, `city` varchar(255) DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; INSERT INTO `tb_office_info`(`id`, `office_code`, `phone`, `city`) VALUES (1, \u0026#39;1\u0026#39;, \u0026#39;+1 650 219 4782\u0026#39;, \u0026#39;San Francisco \u0026#39;); INSERT INTO `tb_office_info`(`id`, `office_code`, `phone`, `city`) VALUES (2, \u0026#39;2\u0026#39;, \u0026#39;+1 215 837 0825\u0026#39;, \u0026#39;Boston \u0026#39;); INSERT INTO `tb_office_info`(`id`, `office_code`, `phone`, `city`) VALUES (3, \u0026#39;3\u0026#39;, \u0026#39;+1 212 555 3000\u0026#39;, \u0026#39;NYC\u0026#39;); INSERT INTO `tb_office_info`(`id`, `office_code`, `phone`, `city`) VALUES (4, \u0026#39;4\u0026#39;, \u0026#39;+33 14 723 4404\u0026#39;, \u0026#39;Paris\u0026#39;); INSERT INTO `tb_office_info`(`id`, `office_code`, `phone`, `city`) VALUES (5, \u0026#39;5\u0026#39;, \u0026#39;+86 33 224 5000\u0026#39;, \u0026#39;Beijing \u0026#39;); INSERT INTO `tb_office_info`(`id`, `office_code`, `phone`, `city`) VALUES (6, \u0026#39;6\u0026#39;, \u0026#39; +61 2 9264 2451\u0026#39;, \u0026#39;Sydney\u0026#39;); INSERT INTO `tb_office_info`(`id`, `office_code`, `phone`, `city`) VALUES (7, \u0026#39;7\u0026#39;, \u0026#39;+44 20 7877 2041\u0026#39;, \u0026#39;London\u0026#39;); create view tb_office_info_view as select office_code as officeCode,phone,city from tb_office_info ; select * from tb_office_info_view; -- 验证 更新 UPDATE tb_office_info SET phone = \u0026#39;+33 14 723 5555\u0026#39; WHERE office_code = 4; select * from tb_office_info_view; -- 删除一行记录  delete from tb_office_info where office_code = 7; select * from tb_office_info_view; -- 视图记录同样更新了  显示视图定义\r#\r\r SHOW CREATE VIEW [database_name].[view_ name];  SHOW CREATE VIEW test3.temp_date_view_source; 修改视图\r#\r\r MySQL提供了两个语句，允许您修改现有视图：ALTER VIEW和 CREATE OR REPLACE VIEW  alter view temp_date_view_source_new as select id,age,birthday from temp_date_view_source where 1=1 and age \u0026gt; 30 ; create or replace view temp_date_view_source_new as select id,age,birthday from temp_date_view_source where 1=1 and age \u0026gt; 20; 删除视图\r#\r\r DROP VIEW [IF EXISTS] [database_name].[view_name]  -- 先创建一个我们要删除的视图  create view temp_date_view_source_new_x as select id,age,birthday from temp_date_view_source where 1=1 and age \u0026gt; 2; drop view if exists temp_date_view_source_new_x; WITH CHECK OPTION确保视图一致性\r#\r\r 有时，您创建一个视图以仅显示表的部分数据。但是，简单视图是可更新的，因此可以更新通过视图不可见的数据。此更新使视图不一致。要确保视图的一致性，请WITH CHECK OPTION在创建或修改视图时使用子句\n  WITH CHECK OPTION子句是CREATE VIEW声明的可选部分。WITH CHECK OPTION子句阻止您 更新或插入通过视图不可见的行。换句话说，每当您通过视图更新或插入基表的一行时，MySQL都会确保插入或更新操作符合视图的定义。\n  准备数据  CREATE TABLE `employees` ( `id` int NOT NULL AUTO_INCREMENT, `employeeNumber` varchar(100) DEFAULT NULL COMMENT \u0026#39;员工编号\u0026#39;, `lastName` varchar(255) DEFAULT NULL, `firstName` varchar(255) DEFAULT NULL, `extension` varchar(255) DEFAULT NULL, `email` varchar(255) DEFAULT NULL, `officeCode` varchar(255) DEFAULT NULL, `reportsTo` varchar(255) DEFAULT NULL, `jobTitle` varchar(255) DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1002, \u0026#39;Murphy\u0026#39;, \u0026#39;Diane\u0026#39;, \u0026#39;x5800\u0026#39;, \u0026#39;dmurphy@yiibai.com\u0026#39;, \u0026#39;1\u0026#39;, NULL, \u0026#39;President\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1056, \u0026#39;Patterson\u0026#39;, \u0026#39;Mary\u0026#39;, \u0026#39;x4611\u0026#39;, \u0026#39;mpatterso@yiibai.com\u0026#39;, \u0026#39;1\u0026#39;, 1002, \u0026#39;VP Sales\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1076, \u0026#39;Firrelli\u0026#39;, \u0026#39;Jeff\u0026#39;, \u0026#39;x9273\u0026#39;, \u0026#39;jfirrelli@yiibai.com\u0026#39;, \u0026#39;1\u0026#39;, 1002, \u0026#39;VP Marketing\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1088, \u0026#39;Patterson\u0026#39;, \u0026#39;William\u0026#39;, \u0026#39;x4871\u0026#39;, \u0026#39;wpatterson@yiibai.com\u0026#39;, \u0026#39;6\u0026#39;, 1056, \u0026#39;Sales Manager (APAC)\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1102, \u0026#39;Bondur\u0026#39;, \u0026#39;Gerard\u0026#39;, \u0026#39;x5408\u0026#39;, \u0026#39;gbondur@gmail.com\u0026#39;, \u0026#39;4\u0026#39;, 1056, \u0026#39;Sale Manager (EMEA)\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1143, \u0026#39;Bow\u0026#39;, \u0026#39;Anthony\u0026#39;, \u0026#39;x5428\u0026#39;, \u0026#39;abow@gmail.com\u0026#39;, \u0026#39;1\u0026#39;, 1056, \u0026#39;Sales Manager (NA)\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1165, \u0026#39;Jennings\u0026#39;, \u0026#39;Leslie\u0026#39;, \u0026#39;x3291\u0026#39;, \u0026#39;ljennings@yiibai.com\u0026#39;, \u0026#39;1\u0026#39;, 1143, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1166, \u0026#39;Thompson\u0026#39;, \u0026#39;Leslie\u0026#39;, \u0026#39;x4065\u0026#39;, \u0026#39;lthompson@yiibai.com\u0026#39;, \u0026#39;1\u0026#39;, 1143, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1188, \u0026#39;Firrelli\u0026#39;, \u0026#39;Julie\u0026#39;, \u0026#39;x2173\u0026#39;, \u0026#39;jfirrelli@yiibai.com\u0026#39;, \u0026#39;2\u0026#39;, 1143, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1216, \u0026#39;Patterson\u0026#39;, \u0026#39;Steve\u0026#39;, \u0026#39;x4334\u0026#39;, \u0026#39;spatterson@yiibai.com\u0026#39;, \u0026#39;2\u0026#39;, 1143, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1286, \u0026#39;Tseng\u0026#39;, \u0026#39;Foon Yue\u0026#39;, \u0026#39;x2248\u0026#39;, \u0026#39;ftseng@yiibai.com\u0026#39;, \u0026#39;3\u0026#39;, 1143, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1323, \u0026#39;Vanauf\u0026#39;, \u0026#39;George\u0026#39;, \u0026#39;x4102\u0026#39;, \u0026#39;gvanauf@yiibai.com\u0026#39;, \u0026#39;3\u0026#39;, 1143, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1337, \u0026#39;Bondur\u0026#39;, \u0026#39;Loui\u0026#39;, \u0026#39;x6493\u0026#39;, \u0026#39;lbondur@yiibai.com\u0026#39;, \u0026#39;4\u0026#39;, 1102, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1370, \u0026#39;Hernandez\u0026#39;, \u0026#39;Gerard\u0026#39;, \u0026#39;x2028\u0026#39;, \u0026#39;ghernande@gmail.com\u0026#39;, \u0026#39;4\u0026#39;, 1102, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1401, \u0026#39;Castillo\u0026#39;, \u0026#39;Pamela\u0026#39;, \u0026#39;x2759\u0026#39;, \u0026#39;pcastillo@gmail.com\u0026#39;, \u0026#39;4\u0026#39;, 1102, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1501, \u0026#39;Bott\u0026#39;, \u0026#39;Larry\u0026#39;, \u0026#39;x2311\u0026#39;, \u0026#39;lbott@yiibai.com\u0026#39;, \u0026#39;7\u0026#39;, 1102, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1504, \u0026#39;Jones\u0026#39;, \u0026#39;Barry\u0026#39;, \u0026#39;x102\u0026#39;, \u0026#39;bjones@gmail.com\u0026#39;, \u0026#39;7\u0026#39;, 1102, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1611, \u0026#39;Fixter\u0026#39;, \u0026#39;Andy\u0026#39;, \u0026#39;x101\u0026#39;, \u0026#39;afixter@yiibai.com\u0026#39;, \u0026#39;6\u0026#39;, 1088, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1612, \u0026#39;Marsh\u0026#39;, \u0026#39;Peter\u0026#39;, \u0026#39;x102\u0026#39;, \u0026#39;pmarsh@yiibai.com\u0026#39;, \u0026#39;6\u0026#39;, 1088, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1619, \u0026#39;King\u0026#39;, \u0026#39;Tom\u0026#39;, \u0026#39;x103\u0026#39;, \u0026#39;tking@gmail.com\u0026#39;, \u0026#39;6\u0026#39;, 1088, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1621, \u0026#39;Nishi\u0026#39;, \u0026#39;Mami\u0026#39;, \u0026#39;x101\u0026#39;, \u0026#39;mnishi@gmail.com\u0026#39;, \u0026#39;5\u0026#39;, 1056, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1625, \u0026#39;Kato\u0026#39;, \u0026#39;Yoshimi\u0026#39;, \u0026#39;x102\u0026#39;, \u0026#39;ykato@gmail.com\u0026#39;, \u0026#39;5\u0026#39;, 1621, \u0026#39;Sales Rep\u0026#39;); INSERT INTO `employees`(`employeeNumber`, `lastName`, `firstName`, `extension`, `email`, `officeCode`, `reportsTo`, `jobTitle`) VALUES (1702, \u0026#39;Gerard\u0026#39;, \u0026#39;Martin\u0026#39;, \u0026#39;x2312\u0026#39;, \u0026#39;mgerard@gmail.com\u0026#39;, \u0026#39;4\u0026#39;, 1102, \u0026#39;Sales Rep\u0026#39;);  语法  CREATE OR REPLACE VIEW view_name AS select_statement WITH CHECK OPTION;  先创建一个普通视图  create view vps as SELECT employeeNumber, lastname, firstname, jobtitle, extension, email, officeCode, reportsTo FROM employees WHERE jobTitle LIKE \u0026#39;%VP%\u0026#39;; select * from vps; -- result +----------------+-----------+-----------+--------------+-----------+----------------------+------------+-----------+ | employeeNumber | lastname | firstname | jobtitle | extension | email | officeCode | reportsTo | +----------------+-----------+-----------+--------------+-----------+----------------------+------------+-----------+ | 1056 | Patterson | Mary | VP Sales | x4611 | mpatterso@yiibai.com | 1 | 1002 | | 1076 | Firrelli | Jeff | VP Marketing | x9273 | jfirrelli@yiibai.com | 1 | 1002 | +----------------+-----------+-----------+--------------+-----------+----------------------+------------+-----------+ 2 rows in set (0.00 sec) -- 因为它vps 是一个简单的视图因此它是可更新的 -- 然后，我们插入一行到employees通过vps视图 INSERT INTO vps(employeeNumber,firstname,lastname,jobtitle,extension,email,officeCode,reportsTo) values(1703,\u0026#39;Lily\u0026#39;,\u0026#39;Bush\u0026#39;,\u0026#39;IT Manager\u0026#39;,\u0026#39;x9111\u0026#39;,\u0026#39;lilybush@classicmodelcars.com\u0026#39;,1,1002); -- 注意：新创建的员工在vps视图中不可见，因为她的职位是IT Manager，而不是VP -- 这就是问题所在 -- 这可能不是我们想要的，因为我们只通过vps视图公开VP员工，而不是其他员工 -- 要确保视图的一致性，以便用户只能显示或更新通过视图可见的数据，请WITH CHECK OPTION在创建或修改视图时使用  修改视图  create or replace view vps as SELECT employeeNumber, lastname, firstname, jobtitle, extension, email, officeCode, reportsTo FROM employees WHERE jobTitle LIKE \u0026#39;%VP%\u0026#39; with check option ;  通过视图在employees表中插入一行vps  INSERT INTO vps(employeeNumber,firstname,lastname,jobtitle,extension,email,officeCode,reportsTo) VALUES(1704,\u0026#39;John\u0026#39;,\u0026#39;Smith\u0026#39;,\u0026#39;IT Staff\u0026#39;,\u0026#39;x9112\u0026#39;,\u0026#39;johnsmith@classicmodelcars.com\u0026#39;,1,1703); INSERT INTO vps(employeeNumber,firstname,lastname,jobtitle,extension,email,officeCode,reportsTo) VALUES(1704,\u0026#39;John\u0026#39;,\u0026#39;Smith\u0026#39;,\u0026#39;IT Staff\u0026#39;,\u0026#39;x9112\u0026#39;,\u0026#39;johnsmith@classicmodelcars.com\u0026#39;,1,1703) \u0026gt; 1369 - CHECK OPTION failed \u0026#39;test3.vps\u0026#39; \u0026gt; 时间: 0s -- 已经起到了限制作用  通过视图插入一个职位名称SVP Marketing在employees表中的员工，vps看看MySQL是否允许我们这样做  INSERT INTO vps(employeeNumber,firstname,lastname,jobtitle,extension,email,officeCode,reportsTo) VALUES(1704,\u0026#39;John\u0026#39;,\u0026#39;Smith\u0026#39;,\u0026#39;SVP Marketing\u0026#39;,\u0026#39;x9112\u0026#39;,\u0026#39;johnsmith@classicmodelcars.com\u0026#39;,1,1076); \u0026gt; Affected rows: 1 \u0026gt; 时间: 0.15s select * from vps; +----------------+-----------+-----------+---------------+-----------+--------------------------------+------------+-----------+ | employeeNumber | lastname | firstname | jobtitle | extension | email | officeCode | reportsTo | +----------------+-----------+-----------+---------------+-----------+--------------------------------+------------+-----------+ | 1056 | Patterson | Mary | VP Sales | x4611 | mpatterso@yiibai.com | 1 | 1002 | | 1076 | Firrelli | Jeff | VP Marketing | x9273 | jfirrelli@yiibai.com | 1 | 1002 | | 1704 | Smith | John | SVP Marketing | x9112 | johnsmith@classicmodelcars.com | 1 | 1076 | +----------------+-----------+-----------+---------------+-----------+--------------------------------+------------+-----------+ 3 rows in set (0.00 sec) -- 已经插入进去了 "}),a.add({id:316,href:'/life/docs/databases/mysql/triggers/',title:"mysql触发器",section:"mysql学习笔记",content:"SQL触发器简介\r#\r\r SQL触发器是存储在数据库目录中的一组SQL语句。只要与表关联的事件发生，例如插入，更新或删除，就会执行或触发SQL触发器\n SQL触发器的优点\r#\r\r SQL触发器提供了另一种检查数据完整性的方法。 SQL触发器可以捕获数据库层中业务逻辑中的错误。 SQL触发器提供了另一种运行计划任务的方法。通过使用SQL触发器，您不必等待运行计划任务，因为在对表中的数据进行更改之前或之后会自动调用触发器。 SQL触发器对于审计表中数据的更改非常有用。  SQL触发器的缺点\r#\r\r SQL触发器只能提供扩展验证，并且不能替换所有验证。必须在应用程序层中完成一些简单的验证。例如，您可以使用JavaScript在客户端验证用户的输入，或者使用服务器端脚本语言（如JSP，PHP，ASP.NET，Perl）在服务器端验证用户的输入。 从客户端应用程序调用和执行SQL触发器是不可见的，因此很难弄清楚数据库层中发生了什么。 SQL触发器可能会增加数据库服务器的开销  MySQL 触发器的创建\r#\r\rMySQL触发语法\r#\r\rCREATE TRIGGER trigger_name trigger_time trigger_event ON table_name FOR EACH ROW BEGIN ... END;   触发器名称约定 [trigger time][table name][trigger event]，例如before_employees_update\n  触发激活时间可以是BEFORE或AFTER\n  触发事件可以是INSERT，UPDATE或者DELETE事件导致触发器被调用\n  触发器必须与特定表关联。如果没有表触发器将不存在，因此您必须在ON关键字后指定表名\n  将SQL语句放在BEGIN和END阻止之间\n  例子1\n  -- create table CREATE TABLE employees_audit ( id INT AUTO_INCREMENT PRIMARY KEY, employeeNumber INT NOT NULL, lastname VARCHAR(50) NOT NULL, changedat DATETIME DEFAULT NULL, action VARCHAR(50) DEFAULT NULL ); "}),a.add({id:317,href:'/life/docs/python/install/python_ml_getting_started/',title:"python 机器学习  ",section:"python 插件学习",content:"机器学习\r#\r\r"}),a.add({id:318,href:'/life/docs/english_study/',title:"英语学习",section:"Docs",content:"GitHub\r#\r\r人人都能用英语\n离谱的英语学习指南\n中国程序员容易发音错误的单词\n专为程序员编写的英语学习指南\n收集一些英语学习技巧\r#\r\r  If at the outset I brave, ending is different\n  如果当初我勇敢，结局是不是不一样。\n  Perseverance can sometimes equal genius in its results\n  毅力在效果上有时能同天才相比。\n  A man is not old until regrets take the place of dreams.\n  当后悔取代了梦想，一个人才算老了。\n  When I thought I couldn’t go on, I forced myself to keep going. My success is based on persistence, not luck.\n  当我以为我无法继续走下去时，我强迫自己要继续前进。我的成功是基于我的坚持，并非运气。\n  The early bird catches the worm\n  早起的鸟儿有虫吃\n  "}),a.add({id:319,href:'/life/docs/codereview/unit_test/',title:"单元测试",section:"编码",content:"测试业务代码\r#\r\r测试http请求\r#\r\r测试业务健壮性\r#\r\r检查代码的可读性和健壮性\r#\r\rPowerMock\r#\r\rjunit\r#\r\rtestng\r#\r\r"}),a.add({id:320,href:'/life/docs/codereview/tool_debug/',title:"开发工具调试",section:"编码",content:"IDEA\r#\r\r debug 调试  projectFormDataChangeLogService.deleteProjectFormDataChangeLogByBusinessUuid(deleteItemUuids) ;\r\\w+.deleteProjectFormDataChangeLogByBusinessUuid\\(\\w+\\);\r 去除数字  [\\w+.\n\\d+./\n-\\d+.\n\\d+./\nchrome\r#\r\r  debug 调试\n  postman 调试\n  "}),a.add({id:321,href:'/life/docs/car_study/',title:"汽车教学",section:"Docs",content:"科目一 科目二 科目三\n"}),a.add({id:322,href:'/life/docs/codereview/hsxkx5kbbp/',title:"编写可读代码的艺术",section:"编码",content:"编写可读代码的艺术\r#\r\r"}),a.add({id:323,href:'/life/docs/codereview/',title:"编码",section:"Docs",content:"一、编码\r#\r\r 如果还没想清楚，就用蛮力算法。——Ken Thompson 不要使用反正弦和反余弦函数——你总能用优美的恒等式，或者是计算向量点积来更好地解决问题。—— Jim Conyngham 在存储日期中的年份的时候，请使用四位数字。—— David Martin 避免使用不对称结构。—— Andy Huber 代码写的越急，程序跑得越慢。—— Roy Carlson 你用英语都写不出来的东西就别指望用代码写了。—— Peter Halpern 如果代码和注释不一致，那很可能两者都错了。—— Norm Schryer 如果你发现特殊情况太多，那你肯定是用错方法了。—— Carig Zerouni 先把数据结构搞清楚，程序的其余部分自现。—— David Jones  二、用户界面\r#\r\r 尽可能让用户界面风格保持一致和可预测。—— 匿名用户 计算机生成的输入通常会让一个原本设计接受手工输入的程序不堪重负。—— Dennis Ritchie 手工填写的表单里有20%都包含坏数据。—— Vic Vyssotsky 80%的表单会要你回答没有必要的问题。—— Mike Garey 不要让用户提供那些系统已经知道的信息。—— Rick Lemons 所有数据集的80%中，有95%的信息量都可以用清晰的图表示。—— William Cleveland  三、调试\r#\r\r 在我所有的程序错误中，80%是语法错误，剩下20%里，80%是简单的逻辑错误，在剩下4%里，80%是指针错误，只有余下的0.8%才是困难的问题。—— Marc Donner 在系统测试阶段找出并修正错误，要比开发者自己完成这一工作多付出2倍的努力。而当系统已经交付使用之后找出并修正错误，要比系统测试阶段多付出9倍的努力。因此，请坚持让开发者进行单元测试吧。—— Larry Bernstain 不要站着调试程序，那会使得你的耐心减半，你需要的是全神贯注。—— Dave Storer 别在注释里陷得太深——注释很可能会误导你，你要调试的只是代码。—— Dave Storer 测试只能证明程序有错误，而不能证明程序没有错误。—— Edsger Dijkstra 新系统的每一个新用户都可能发现一类新的错误。—— Brian Kernighan 东西没坏，就别乱修。 —— Ronald Reagan 如果我们没能力修好它，我们就会告诉你它根本没坏。—— Walt Weir 修正程序错误的第一步是要重现这个错误。—— Tom Duff  四、性能\r#\r\r 程序优化第一法则：不要优化。程序优化第二法则：还是不要优化。—— Michael Jackson 对于那些快速算法，我们总是可以拿一些速度差不多但是更容易理解的算法来替代它们。—— Douglas Jones 在一些机器上，间接寻址比基址寻址要慢，所以请把结构体或者记录中最常用的成员放在最前面。—— Mike Morton 在一个非IO密集型程序中，超过一半的运行时间是花在不足4%的代码上的。—— Don Knuth 在优化一个程序之前，请先用性能监视工具找到程序的“热点”。—— Mike Morton 当你为了加速，把一页代码变成几条简单的指令时，请不要忘了增加注释，以使源码的行数保持为一个常量。—— Mike Morton 如果程序员自己模拟实现了一个构造比编译器本身实现的那个构造还要快，那编译器的作者也太失败了。—— Guy Steele 要加速一个IO密集型程序，请首先考虑所有的IO，消除那些不必要的或冗余的IO，并使余下的部分尽可能地块。—— David Martin 最快的IO就是不IO。—— Nils-Peter Nelson 那些最便宜、最快而且可靠性最高的计算机组件压根就不存在。—— Gordon Bell 把一个本来就错了的程序变得更糟糕绝不是你的错。—— Bill McKeeman Lisp程序员知道所有东西的值，却不知道那些东西的计算成本。—— Alan Perlis  五、文档\r#\r\r 如果一句话反过来就必然不成立，那就根本没必要把这句话放进文档。—— Bob Martin 当你试图解释一条命令、一个语言特性或者是一种硬件的时候，请首先说明它要解决什么问题。 —— David Martin 一个 { 规格说明、设计、过程、测试计划 } 如果不能在一页A4纸上写明白，那么这个东西别人就没法理解。—— Mark Ardis 纸上的工作没结束，整个工作也就还没结束。—— 匿名  六、软件管理\r#\r\r 系统的结构反映出构建该系统的组织的结构。—— Richard Fairley 别坚持做没用的事情。—— 匿名 前90%的代码占用了90%的预定开发时间，余下的10%代码又花费了90%的预定开发时间。——Tom Cargill 只有不到10%的代码用于完成这个程序表面上的目的，余下的都在处理输入输出、数据验证、数据结构维护等家务活。—— Mary Shaw 正确的判断来源于经验，然而经验来源于错误的判断。—— Fred Brooks 如果有人基本上做出了你想要的东西，你就没必要自己写一个新程序，就算你非写不可，也请尽可能地利用现有的代码。—— Richard Hill 代码能借用就借用。—— Tom Duff 与客户保持良好的关系可以使生产率加倍。—— Larry Bernstain 把一个现有成熟程序转移到一种新语言或者新平台，只需要原来开发的十分之一的时间、人力、成本。—— Douglas Jones 那些用手做就很快了的事情，就不要用计算机去做了。—— Richard Hill 那些能用计算机迅速解决的问题，就别用手做了。—— Tom Duff 我想写的不只是程序，而且是会写程序的程序。—— Dick Sites 计划好抛弃一个原型，这是迟早的事情。—— Fred Brooks 如果开始就打算抛弃一个原型，那恐怕你得抛弃两个。—— Craig Zerouni 原型方法可以将系统开发的工作量减少40%。—— Larry Bernstain 拼命干活无法取代理解。—— H William  "}),a.add({id:324,href:'/life/docs/compilation_principle/',title:"编译原理",section:"Docs",content:"一、 编译程序\r#\r\r  1、 编译器是一种翻译程序，它用于将源语言（即用某种程序设计语言写成的）程序翻译为目标语言（即用二进制数表示的伪机器代码写成的）程序。后者在windows操作系统平台下，其文件的扩展名通常为.obj。该文件通常还要经过进一步的连接，生成可执行文件（机器代码写成的程序，文件扩展名为.exe）。通常有两种方式进行这种翻译，一种是编译，另一种是解释。后者并不生成可执行文件，只是翻译一条语句、执行一条语句。这两种方式相编译比解释运行的速度要快得多。\n  2、 编译过程的5个阶段：词法分析；语法分析；语义分析与中间代码产生；优化；目标代码生成。\n  3、 在这五个阶段中，词法分析的任务是识别源程序中的单词是否有误，编译程序中实现这种功能的部分一般称为词法分析器。在编译器中，词法分析器通常仅作为语法分析程序的一个子程序以便在它需要单词符号时调用。在这一编译阶段中发现的源程序错误，称为词法错误。\n  4、 语法分析阶段的目的是识别出源程序的语法结构（即语句或句子）是否错误，所以有时又常为句子分析。编译程序中负责这一功能的程序称为语法分析器或语法分析程序。在这一阶段中发现的错误称为语法错误。\n  5、 C语言的（源）程序必须经过编译才能生成目标代码，再经过链接才能运行。PASCAL语言、FORTRAN语言的源程序也要经过这样的过程。通常将C、PASCAL、FORTRAN这样的语言统称为高级语言。而将最终的可执行程序称为机器语言程序。\n  6、 在编译C语言程序的过程中，发现源程序中的一个标识符过长，超过了编译程序允许的范围，这个错误应在词法分析阶段发现，这种错误通常被称作词法错误。\n 词法分析器的任务是以词法规则为依据对输入的源程序进行单词及其属性的识别，识别出一个个单词符号。\n 词法分析的输入是源程序，输出是一个个单词的特殊符号，称为Token（标记或符号）。\n 语法分析器的类型有:自下而上、自上而下。常用的语法分析器有：递归下降分析方法是一种自上而下分析方法, 算符优先分析法属于自下而上分析方法，LR分析法属于自下而上分析方法等等。\n 通常用正规文法或正规式来描述程序设计语言的词法规则，而使用上下文无关文法来描述程序设计语言的语法规则。\n 语法分析阶段中，处理的输入数据是来自词法分析阶段的单词符号。它们是词法分析阶段的终结符。\n  7、 编译程序总框\n  8、 在计算机发展的早期阶段，内存较小的不能一次完成程序的编译。这时通常将编译过程分成若干遍来完成。每一遍完成一部分功能，称为多遍编译。 与采用高级程序设计语言写的词法分析器相比，用汇编语言写的词法分析通常分析速度要快些。\n  二. 词法与语法\r#\r\r  1、 程序语言主要由语法和语义两个方面来定义。\n  2、 任何语言的程序都可看成是某字符集上的一个长字符串。\n  3、 语言的语法：是指这样的一组规则（即产生式），用它可以生成和产生一个良定的程序。这些规则的一部分称为词法规则，另一部分称为语法规则。\n  4、 词法规则：单词符号的形成规则；语法规则：语法单位（句子）的形成规则。语义规则：定义程序句子的意义。\n  5、 一个程序语言的基本功能是描述数据和对数据的运算。\n  6、 高级语言的分类：强制式语言；应用式语言；基于规则的语言；面向对象的语言。\n  7、 一个语言的字母表为{a,b}，则字符串ab的前缀有a、ε，其中ε不是真前缀。\n  8、 字符串的连接运算一般不满足交换率。\n  9、 文法G是一个四元组，或者说由四个元素构成，即非终结符集合VN、非终结符号集合VT 、开始符号S、产生式集合P，它可以形式化地表示成G =（VN，VT，S，P）。 按照文法的定义，这4个元素中终结符号集合是这个文法所规定的语言的字母表，产生式集合代表文法所规定的语言语法实体的集合。对上下文无关文法，通常我们只需要写出这个文法的产生式集合就可以确定这个文法的其他所有元素。其中，第一条产生式的左部符号为开始符号，而所有产生式的左部符号构成的集合就是该文法的非终结符集合。\n   文法的例子： 设文法G=（VN，VT， S，P），其中P为产生式集合，它的每个元素的形式为产生式。\n  10、如果文法G的一个句子存在两棵不同的最左语法分析树，则这个文法是无二义的。\n  11、如果文法G的一个句子存在两棵不同的最右语法分析树，则这个文法是无二义的。\n  12、如果文法G的一个句子存在两棵不同的语法分析树，则这个文法是无法判断是否是二义的。\n  13、A为非终结符，如果文法存在产生式 ，则称 可以推导出 ；反之，称 可归约为 。\n  14、乔姆斯基（Chomsky）将文法分为四类，即0型文法、1文法、2文法、3文法。 按照乔姆斯基对方法的分类，上下文无关文法是2型文法，2型文法的描述能力最强，3型文法又称为正规文法。\n  15、产生式S→Sa | a产生的语言为L(G) = {an | n ≥ 1}。\n  16、确定有限自动机DFA是非确定有限自动机NFA的特例；对任一非确定有限自动机能找到一个与之等价的确定有限自动机。\n  17、DFA和NFA的主要区别有三点：一、DFA初态唯一，NFA初态不唯一；二、DFA弧标记为Σ上的元素，NFA弧标记为Σ*上的元素；三、DFA的函数为单射，NFA函数不是单射。\n  18、有限自动机中两个状态S1和S2是等价的是指，无论是从S1还是S2出发，停于终态时，所识别的输入字的集合相同。\n  19、自下而上的分析方法，是一个不断归约的过程。\n  20、递归下降分析器：当一个文法满足LL(1)条件时，我们就可以为它构造一个不带回溯的自上而下分析程序。这个分析程序是由一组递归过程组成的，每个过程对应文法的一个非终结符。 这个产生式中含有的左递归是直接左递归。递归下降分析法中，必须要消除所有的左递归。递归下降分析法中的试探分析法之所以要不断用一个产生式的多个候选式进行逐个试探，最根本的原因是这些候选式有公共左因子。\n  21、算符优先分析法是一种自下而上的分析方法，它适合分析各种程序设计语中的表达式，并宜于手工实现。目前最广泛的无回溯的“移进—归约”方法是自下而上分析方法。\n  22、在表驱动预测分析器中，\n  1）读入一个终结符a，若该终结符与栈项的终结符相同，并且不是结束标志$，则此时栈顶符号出栈；\n  2）若此时栈项符号是终结符并且是，并且读入的终结符不是，并且读入的终结符不是，说明源程序有语法错误；\n  3）若此时栈顶符号为，并且读入的终结符也是，并且读入的终结符也是，则分析成功。\n  23、算符优先分析方法不存在使用形如 这样的产生式进行的归约，即只要求终结符的位置与产生式结构一致，从而使得分析速度比LR分析法更快。\n  24、LR(0)的例子：\n  产生式E→ E+T对应的LR（0）项目中，待归约的项目是E→ E+∙T，移进项目是E→ E∙+T，还有两个项目为E→ ∙E+T和E→ E+T∙。 当一个LR(0)项目集中含有两个归约项目时，称这个项目集中含有归约-归约冲突。\n  25、LL(1)文法的产生式中一定没有公共左因子，即LL(1)文法中一定没有左递归。为了避免回溯，在LL(1)文法的预测分析表中，一个表项中至多只有一个产生式。 预测分析方法（即LL(1)方法），由一个栈，一个总控程序和一个预测分析表组成。其中构造出预测分析表是该分析方法的关键。\n  26、LR(0)与SLR(1)两种分析方法相比，SLR(1)的能力更强。\n  27、静态语义检查一般包括以下四个部分，即类型检查、控制流检查、名字匹配检查、一致性检查。C语言编译过程中下述常见的错误都属于检查的范围：\n  a） 将字符型指针的值赋给结构体类型的指针变量：类型检查。 b）switch语句中，有两个case语句中出现了相同的常量：一致性检查。 c）break语句在既不是循环体内、又不是break语句出现的地方出现：控制流检查。 d）goto语句中的标号在程序的函数中没有找到：一致性检查。 e）同一个枚举常量出现在两个枚举类型的定义当中：相关名字检查。\n 28、循环优化中代码外提是指对循环中的有些代码，如果它产生的结果在循环过程中是不变的，就把它提到循环体外来；而强度削弱是指把程序中执行时间较长的运算替换为执行时间较短的运算。 （完）  "}),a.add({id:325,href:'/life/docs/computer_composition_principle/',title:"计算机组成原理",section:"Docs",content:"一、计算机的组成及学习大纲\r#\r\r1. 计算机的组成\r#\r\r计算机的三大件 ：CPU、内存、主板\r#\r\r（1）CPU，中央处理器，计算机最核心的配件，负责所有的计算。\n（2）内存，你编写的程序、运行的游戏、打开的浏览器都要加载到内存中才能运行，程序读取的数据、计算的结果也都在内存中，内存的大小决定了你能加载的东西的多少。\n（3）主板，存放在内存中数据需要被CPU读取，CPU计算完成后，还要把数据写入到内存中，然而CPU不能直接插在内存上，这就需要主板出马了，主板上很多个插槽，CPU和内存都是插在主板上，主板的芯片组和总线解决了CPU和内存之间的通讯问题，芯片组控制数据传输的流转，决定数据从哪里流向哪里，总线是实际数据传输的告诉公里，总线速度决定了数据的传输速度。\n（4）输入/输出设备，其实有了以上三大件之后，计算机就可以跑起来了。我们日常使用的话还需要键盘、鼠标、显示器等输入/输出设备，而很多云服务器通过SSH远程登录就可以访问，就不需要配显示器、鼠标、键盘这些东西，节省成本且方便维护。\n（5）硬盘，有了硬盘数据才能长久的保存下来，大部分还会给自己的机器配上机箱和风扇，解决灰尘和散热问题，不过这些也不是必须的，用纸板和电风扇替代也一样可以用。\n（6）显卡，显卡里有GPU图形处理器，主要负责图形渲染，使用图形界面操作系统的计算机，显卡是必不可少的。现在的主板都带了内置的显卡，如果想玩游戏、做图形渲染，一般需要一张单独的显卡，插在主板上。\n2. 冯·诺依曼体系\r#\r\r现代计算机的硬件基础架构都是依赖于冯诺依曼提出的冯诺依曼体系结构，现代计算机的核心架构可以抽象为五个基础组件：运算器、控制器、存储器、输入设备和输出设备。\n具体到现代计算机，运算器和控制器组成了现代计算机的CPU，存储器对应着内存和硬盘，主板控制着CPU、内存、硬盘、输出/输出设备之间的通讯。\n冯诺依曼体系结构也叫做存储程序计算机，即可编程、可存储的计算机。\n任何一台计算机的任何一个部件都可以归到运算器、控制器、存储器、输入设备和输出设备中，而所有的现代计算机也都是基于这个基础架构来设计开发的。\n冯诺依曼体系结构确立了我们现代计算机的硬件基础架构，学习计算机组成原理，就是学习和拆解冯诺依曼体系。\n学习组成原理，就是学习以下内容：\n CPU（运算器+控制器）怎么工作，为什么这么设计； 内存和硬盘的工作原理； CPU是怎么和内存、硬盘、输入设备、输出设备通讯的； 从电路这样的硬件到最终开发给软件的接口是怎么运作的，为什么要这么设计，以及在软件开发层面怎么尽可能的用好它；  3. 计算机组成原理学习大纲\r#\r\r计算机组成原理知识地图\n学习大纲：\r#\r\r 计算机的基本组成：冯诺依曼体系结构的五大基本组件：运算器、控制器、存储器、输入设备和输出设备；计算机的两个核心指标：性能和功耗。 计算机的指令和计算：高级语言是怎么跑起来的，怎么通过编译器和汇编器变成机器指令的；操作系统怎么链接、装载、执行程序的；指令的执行是怎么控制的（控制器）。 运算器，数据在计算机中的表示（二进制和编码）；计算机是怎么实现加法、乘法等基本运算功能的。 CPU的设计：我们为什么需要CPU时钟；寄存器和内存怎么组成的；整个计算机的数据通路是如何构造的；CPU的流水线设计；数据和控制冒险；分支预测；CPU的异常和中断机制；指令的并行执行；CPU怎么通过SIMD来支持并行计算。 存储器的原理：CPU高速缓存、内存、SSD硬盘和机械硬盘的工作原理，及它们之间的性能差异；CPU和存储器之间怎么通讯的；什么是IO_WAIT；如何通过DMA提升程序性能；如何保证存储器里的数据不丢失；如何通过RAID、Erasure Code、ECC、HDFS，这些不同的技术来确保数据的完整性和访问性能。  总结：计算机组成原理是整个计算机科学的纲要，这门课程的很多知识点深挖下去都会变成一个核心课程。\n例如：\n 计算是怎么实现的，对应着数字电路课程。 CPU和存储器系统的优化，对应着计算机体系结构课程。 程序通过编译器和汇编器变成机器指令的编译过程，对应着编译原理课程。 操作系统是怎么链接、装载、执行程序的，对应着操作系统课程。  二、下面我们根据课程大纲，大致过一遍组成原理\r#\r\r1. 性能\r#\r\r衡量计算机的性能，主要有两个指标：响应时间和吞吐率。\n 响应时间，就是执行一个程序花费的时间，花的时间越短，性能就越好。 吞吐率，就是一定时间内，到底能处理多少数据和指令，处理的越多，性能就越好。  我们一般把性能定义为响应时间的倒数，也就是：性能 = 1 / 响应时间\n响应时间也就是CPU执行我们程序的时间，我们对时间这个指标进行拆解，把程序的CPU执行时间变成CPU时钟周期数和时钟周期时间的乘积。\n程序的CPU执行时间 = CPU时钟周期数 x 时钟周期时间\n程序的CPU执行时间 = 指令数 x 每条指令的平均时钟周期数 x 时钟周期时间\n所以优化性能，就要从这三者入手了：\n 指令数，代表执行我们的程序到底需要多少条指令，一般都是编译器去做。 每条指令的平均时钟周期数，就是执行一条指令需要的CPU周期数。 时钟周期时间，也就是计算机主频，摩尔定律就在提高我们计算机的主频，例如：主频为2.8GHz，简单理解就是1秒钟可以执行2.8G条指令。  2. 功耗\r#\r\r从上面可以看出，想要提升性能，可以通过减少响应时间的方法来提升，减少响应时间又有三条路可以走：减少指令数、减少周期数、提升主频。\n过去相当长的时间里，工程师们都在目光集中在提升计算机主频，在CPU中增加晶体管密度，提升晶体管“打开”和“关闭”的速度，这两者都会带来耗电和散热的问题。\nCPU的功耗 = 1/2 x 负载电容 x 电压的平方 x 开关频率 x 晶体管数量\n为了平衡性能和功耗，工程师们想尽办法把晶体管的制程从28nm缩小到7nm，让CPU中可以更多晶体管，同时呢又降低电压，这让我们的CPU性能也一直提升。\n但是，这种做法终有极限，所以工程师们又开始通过提升吞吐率来提升性能，而不是响应时间，所以我们现在的CPU慢慢的由单核发展成了2核、4核、8核的CPU，让更多的核心同时工作，通过并行来提升性能。\n总结\n无论是通过提升主频，还是增加更多的CPU核心数量并行处理，都有其瓶颈所在，仅仅通过“堆硬件“的方式，今天已经不能很好的满足我们对于性能的期望了，这就需要我们从其他方面入手了：\n 加速大概率事件 通过流水线提升性能，把CPU指令执行进行合理的拆分、细化。 通过预测提升性能，提前预测下一步做什么，提前进行响应的操作。  3. 计算机指令\r#\r\r从软件层面看，CPU就是一个执行各种计算机指令的机器，计算机指令就是指计算机能听懂的语言，我们把它叫做机器语言。\n不同的CPU由于架构不同，能听懂的语言也不同，也拥有不同的计算机指令集。\n也就是说，CPU不同-\u0026gt;指令集不同-\u0026gt;机器语言不同-\u0026gt;汇编语言不同\n那么，我们平常用的高级语言是怎么变成机器语言的呢？\n高级语言，需要编译成汇编语言，然后通过汇编器翻译成机器代码，才能让CPU去执行。\n"}),a.add({id:326,href:'/life/docs/codereview/design_pattern/',title:"设计模式",section:"编码",content:"设计模式\r#\r\r"}),a.add({id:327,href:'/life/docs/codereview/kedswrgngf/',title:"重构: 改善既有代码的设计",section:"编码",content:"重构: 改善既有代码的设计\r#\r\r"}),a.add({id:328,href:'/life/docs/life_and_life/',title:"生活就是生活",section:"Docs",content:" 生活就是生活\n   当你的视野足够高你就能看得更远，但是看得虽远但是未必有能力去到你看得更远的地方\n  一生何求 无非基本衣食无忧而已!这对于普通来说已经是最高奢求了\n  中国当下的尽头最好的出路 无他之路就是公务员和事业单位而已\n  "}),a.add({id:329,href:'/life/docs/memory/',title:"记忆技巧",section:"Docs",content:""}),a.add({id:330,href:'/life/docs/reduce_fat/',title:"减肥减脂技巧",section:"Docs",content:"每天总能量 - 每天消耗能量 = 每天剩余能量\r#\r\r  每天剩余能量 为负数那么你今天减脂有效果\n  每天剩余能量 如果为正数那么不好意思你不仅没瘦下来反正还胖了\n  每天剩余能量 如果为0则不偏不倚\n  消耗的能量的方式有哪些呢?\r#\r\r 1:减少摄入能量   早上吃好，午饭吃饱，晚饭吃少\n  可以的话晚饭尽量吃一碗饭，再加一个水果,再加上一定的运动\n  2:增加运动量  减肥运动方式\r#\r\r 8个最好的减肥运动方法\n    快走/步行/走路    \r快走是减肥的最佳方法之一，因为对于初学者新手小白来说，这是最方便又轻松的方法，如果你对健身一点儿都不懂，不会感到不知所措，更不用购买设备。不过，这是一种对减肥影响较小的运动，对关节造成的压力没有跑步大。\r据哈佛健康统计，一个70公斤的人每步行30分钟，可以燃烧167卡路里的热量（6.4公里/小时的速度，即中速稳健的步伐5）。\r一项针对20位肥胖女性的12周研究发现，每周快走步行50-70分钟，每周3次，可以使体内脂肪率减少1.5％，腰围平均减少2.8厘米。\r如果你是新手小白，可以把步行轻松融入您的日常活动中。要想在一天中增加步数，可以在午餐后时间散步，不坐电梯，趴公司楼梯，或带狗散步。具体来说，你的目标是每周步行3至4次，每次30分钟，然后可以随着身体的适应能力逐渐增加，以增加步行的时间或频率。\r总结：对于初学者来说，快走或步行是一项不错的运动，可以在任何地方进行，不需要设备，并且对关节的压力很小。建议在日常活动中增加步行或快走，能不坐车就不坐车，能不坐电梯就不坐电梯，爬楼梯。不过减肥效果与其他训练方式相比，是最差的。\r  慢跑或跑步    慢跑和跑步也是一个不错的训练方式，虽然不是最高效的减肥训练方式，但是，作为健身新手和初学者，甚至很少运动的人，可以帮助你在开始的1-2周内减肥减脂。\r慢跑和跑步尽管看上去很相似，但主要的区别在于：慢跑的速度通常在6.4-9.7公里/小时之间，而跑步的速度一般是快于9.7公里/小时的。\r据哈佛大学健康学院（Harvard Health）统计，如果以8公里/小时的速度慢跑，一个70公斤的人，每30分钟会燃烧约298卡路里的热量，如果以9.7公里/小时的速度，每30分钟会燃烧372卡路里的热量。\r此外研究还发现，慢跑或跑步可以帮助燃烧有害的内脏脂肪，通常称为腹部脂肪。这种类型的脂肪会包裹在你的内部器官周围，并会导致各种慢性疾病（例如心脏病和糖尿病）产生的风险。\r慢跑和跑步可以在任何地方进行，并且很容易融入到您的日常活动中。所以，如果你想开始跑步的话，可以定目标为每周跑3-4次，每次慢跑20–30分钟。当然了，这是最好的状态，但是，大可不必追求完美，每次跑3分钟，每周跑3次，也是可以的，做了总比不做强。培养习惯是关键，而不是在于运动多少，只要每次运动哪怕一分钟，你也是胜利了。长期保持，每天坚持比每次运动量更重要。别忘了，完美是拖延症的元凶。如果你有膝盖不适，膝关节酸痛，也许在户外跑步不是最佳的选择，可以在草地等较软的地面上跑步或慢跑。此外，许多跑步机都具有内置缓冲功能，这会让你的膝关节更容易适应。\r总结：慢跑和跑步是减肥减重的训练方式之一，很容易融入你每天的日常生活中，虽然不是最高效的减肥训练方式，但是也可以帮助燃烧腹部脂肪。\r 3.骑车或动感单车  动感单车或骑车是一种流行的运动方式，可以改善你的健康状况并帮你减肥。尽管传统上在户外骑自行车，但许多体育馆和健身中心都有固定自行车，以及动感单车，可在室内骑自行车。 哈佛大学健康学院（Harvard Health）估计，一个70公斤的人以中等速度（19–22.4 km / h）骑固定自行车，每30分钟燃烧约260卡路里热量。 骑车不仅可以减肥，而且研究发现，与那些不定期骑自行车的人相比，经常骑自行车的人具有更好的整体健康状况，更高的胰岛素敏感性以及更低的心脏病、癌症和死亡风险。 从初学者到专业运动员，骑自行车对各种健康水平的人都非常有用。而且，这是一种非负重，低冲击的运动，因此不会对关节造成太大的压力。但是，当然低冲击也就意味着，骑单车的减肥效果没有下面要提到的负重训练（力量训练）好。 总结：骑自行车对所有健康水平的人都非常有用，可以在户外骑自行车或在室内骑固定动感单车。它与多种健康益处相关，包括提高胰岛素敏感性和降低某些慢性疾病的风险。但是，减肥效果没有负重训练好。   负重训练（力量训练，无氧训练，抗阻训练，举铁）    负重训练是希望减肥的人最好的选择。根据哈佛健康统计，每进行一次30分钟的负重训练或力量训练，一个70公斤的人燃烧大约112卡路里的热量。 此外，负重训练还可以帮助您增强力量并促进肌肉生长，加速燃脂，从而提高你的静息代谢率（RMR），也就是说，增加你的身体在静止时燃烧的卡路里热量。一项为期6个月的研究表明，每周进行3次负重训练，每次只需11分钟，就可使代谢率提高平均7.4％，相当于每天坐着不动就可以多燃烧125卡路里的热量。另一项研究发现，进行24周的负重训练，可以使男性的新陈代谢率提高9％，相当于每天多燃烧140卡路里热量。女性的新陈代谢率可增加近4％，相当于每天即便不运动，也可以多燃烧50卡路里的热量。此外，大量研究还表明，与有氧运动相比，在进行负重训练后数小时，您的身体内仍继续在燃烧卡路里，就算是睡觉，看电视，看手机，躺着不动，身体内部也在告诉燃烧热量中。 总结：负重训练可以在训练时和训练后，通过身体内部加速燃烧卡路里来帮助您减肥减重。此外，负重训练还可以帮助你增加肌肉，从而提高你的静息代谢率，即增加身体在静止时燃烧的卡路里热量。   无氧间歇训练/HIIT/高强度间歇训练    无氧间歇训练，通常称为高强度间歇训练或HIIT，其实这是一个广义术语，是指短暂剧烈的运动与休息交替的训练方式。通常，无氧间歇HIIT训练持续3–30分钟，并且会燃烧大量卡路里热量。 在针对9位经常健身的男性的一项研究发现，做HIIT训练，每分钟燃烧的卡路里比其他类型的锻炼（包括负重训练，骑自行车和在跑步机上跑步）多消耗25–30％。这意味着HIIT可以帮助你燃烧更多的卡路里，同时减少运动时间。 但是，这种训练方式不能持续太长时间，如果真的尽自己最大努力完成，一般10分钟就已经是极限了，如果能做30分钟以上，说明并没有努力做。所以，消耗的总体热量还是没有负重训练高（负重训练的减肥效果是最好的），非常适合想做一些运动，但是实在没时间的人。 用这种方式来减肥减脂，还是比有氧运动要高效。此外，大量研究表明，HIIT在燃烧腹部脂肪方面特别有效，而腹部脂肪与许多慢性疾病有关。最重要的是，HIIT很容易融入您每天的当中去。 你需要做的只是选择一种运动类型，例如俯卧撑，跑步，跳跃或骑自行车或负重训练，以及设定好运动和休息的交替时间，如选择训练30秒，休息30秒等。例如，以最快速度骑单车30秒，然后以慢速骑车30秒，重复重复10分钟。 总结：无氧间歇训练是一种有效的减肥策略，可适用于许多不同类型的训练，包括跑步，跳跃，骑自行车等。在你的日常活动中加入无氧间歇训练，可以帮助你在更少的时间内燃烧更多的卡路里。不过总体减肥效果，还是没有负重训练好。   游泳    游泳是减肥和保持体形的一种很好方式。据哈佛大学健康学院（Harvard Health）估计，一个70公斤的人游泳半小时，燃烧约233卡路里的热量。 您的游泳方式会决定您燃烧多少卡路里。比如，每30分钟，一个70公斤的人在仰泳时，可以燃烧298卡路里，在蛙泳时燃烧372卡路里，在蝶泳时燃烧409卡路里，自由泳时消耗372卡路里。 一项针对24名中年妇女的12周研究发现，每周游泳3次，每次60分钟，可显着减少体内脂肪，提高柔韧性，并减少多种心脏病的危险因素，包括高总胆固醇和血液甘油三酸酯。 游泳的另一个优点是：对身体的冲击力小，这意味着您的关节更轻松。对于受伤或有关节疼痛的人来说，这是一个很好的选择。不过，正是由于对身体的冲击力小，游泳属于有氧运动，减肥减脂效果没有负重训练好。 总结：对于希望减肥的人来说，游泳是一种效率较低的运动。不过，它可以帮助您提高身体灵活性，并减少各种疾病的风险因素。   瑜伽    瑜伽是缓解压力的一种流行方法。虽然瑜伽通常不被认为是一种减肥运动，但它可以燃烧一定量的卡路里（看你做瑜伽的强度），并有许多其他健康益处，可帮助减肥。\r据哈佛大学健康学院（Harvard Health）估计，每练习30分钟瑜伽，一个70公斤的人可燃烧大约149卡路里的热量。一个对60位肥胖女性进行的为期12周的研究发现，与对照组相比，每周参加两次90分钟的瑜伽课程，她们的腰围平均减少了3.8厘米。此外，瑜伽小组被试人的身心压力健康得到了改善。\r除了燃烧卡路里外，研究还表明，瑜伽可以教人正念，帮助理性控制思维，可以帮助你抵抗不健康的食物，控制暴饮暴食，并更好地了解身体的饥饿信号。\r瑜伽课全城皆是，而且您可以在任何地方练习瑜伽，包括在家中舒适的环境，以及线上有很多指导教程和瑜伽app。\r总结：瑜伽是一项低强度的减肥运动，几乎可以在任何地方进行。不仅燃烧卡路里，还教会您正念和自控力，以帮助您抵抗食物的渴望。\r  普拉提    普拉提是一项针对新手和初学者的运动，可以帮助您在一定程度上减轻体重。\r根据美国运动委员会赞助的一项研究发现，一个体重64公斤的人在初学普拉提课上，30分钟可以燃烧108卡路里的热量。不过，进行负重训练等高级训练运动会燃烧168卡路里。\r尽管普拉提可能不会像跑步等有氧运动那样燃烧掉更多卡路里，但许多人发现它很有趣不枯燥，可能坚持起来比跑步会更容易。\r一项针对37名中年女性的为期8周的研究发现，与同期未进行运动的女性对照组相比，每周进行3次普拉提运动，每次运动90分钟，可明显减少腰部、腹部和臀部的围度。\r除了减肥以外，普拉提还可减轻腰痛，并改善您的力量、平衡、柔韧性、耐力和整体健康水平。\r您可以在家做普拉提运动或去专门提供普拉提课程的专业健身房。而且为了进一步增加普拉提的减肥效果，可以将其与健康的饮食习惯或其他形式的训练相结合，例如负重训练，减肥效果会更好。\r总结：普拉提是一种初学者运动，可以帮助您减轻体重，同时改善身体其他方面的力量，以及平衡性、柔韧性和耐力。\r"}),a.add({id:331,href:'/life/docs/%E7%94%B5%E8%A7%86%E5%89%A7%E6%95%B4%E7%90%86/',title:"电视剧整理",section:"Docs",content:"收集电视剧经典对话\n"}),a.add({id:332,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/',title:"自我提升",section:"Docs",content:"时间管理、精力管理、情绪管理\r#\r\r1、时间管理\r#\r\r改变自己从认识自己开始，管理时间也是从认识时间开始。 一开始，最好的方法就是记录时间，把每天花费的时间记录下来。 就像理财一样，先记录钱花在哪里，才知道哪些钱不该花，或者少花。记事本或者手写都行，怎么方便怎么来。\n第一阶段\r#\r\r可以这样简单记录，看看大块时间用在哪里。开会（0.5）吃饭（1.0）写作（2.0）刷抖音（3.0）写代码（4.0）你看，明显是刷抖音时间长，这个可以尽量减少或避免。\n第二阶段\r#\r\r记录具体时间和具体事件。 6:00 ~ 7:00 晨练 7:00 ~ 8:00 读书写作 8:00 ~ 9:00 去上班 9:00 ~ 11:00 工作 12:00 ~ 14:00 午休 14:00 ~ 16:00 梳理积分商城 16:00 ~ 16:30 休息 16:30 ~ 19:00 综合分析竞品商场 19:30 ~ 整理主要目的，看看哪个时间做了哪些事，具体花费多少时间，后边有大用。\n第三阶段\r#\r\r清晨安排三件事很多人不喜欢记录，太麻烦，记来记去也没什么改变。任何工具如果使用起来太复杂，就会有90%的人放弃。 清晨三件事，非常简单，也是我一直在用的。每天早晨起来，就按照重要程度，把当天最需要干完的三件事完成。 我今天最需要做完的三件事： 1.工作报告整理，各个项目组进度把控，协调资源。 2.跟客户谈具体合作事项。 3.公众号文章一篇，知乎问答一篇。工作时间，把前两项搞定，业余时间把最后一项搞定。 如果还剩下时间，我就会做一些长期规划的事，明天、后天，以及未来一个月需要准备做的事。做好以上这些，就能极大提升工作效率吗，不能。 你一定遇到过这种情况，时间很充足，坐在那里，啥也干不进去。比如，一下午过去了，报告一个字没有写，有时间，没状态。遇到这种情况，不是时间出了问题，而是你的精力出了问题。\n2、精力管理\r#\r\r有一本书《精力管理》，讲了精力来源的四个方面：体能、思维、情感、意志。我跟进自己的实践和观察，体能和思维对我影响很大。 体能也是精力最基本的来源。我记得上高中那会，早上为了节省饭钱，只吃馒头和方便面。那几天上早自习感觉特别累，总爱打瞌睡。 后来，吃了两个星期实在扛不住了，又去食堂吃饭了。那时候感觉特别饿，没精神，没有想过饮食这么重要。刚刚工作那会也是，早上不吃饭，死磕一上午，中午吃得又多犯困。 整个人一天的工作状态不是特别好，还好那会年轻，用精神力扛着。现在作息规律，早上跑步、读书，吃早饭。上午一般脑子清楚，一般做一些分析类工作。 午餐之后，会溜达一会，消消食，然后午睡。下午脑子不那么灵光，有一些疲倦，会做一些总结和整理工作。 晚上吃完饭，也有一个不错的状态，会做一些有创意的工作。一句话，你一定要在状态最好的时候，做最难最复杂的事。注意自己的精神状态，太疲惫了就休息一会，磨刀不误砍柴工。死磕的状态不能持续，要养成固定的习惯。\n3、情绪管理\r#\r\r做到以上两点，已经可以称为高手了。能够利用自己的情绪，高效率完成工作更是高手中的高手。有时间、精力充沛，但还是遇到一些工作，干不下去。 人人有七情六欲，当你发现自己不喜欢一项工作的时候，怎么都干不下去。这时候心里一直抵触，然后开始怀疑自己，是不是不适合做这个；欺骗自己，明天做也没关系。如果这件事对你很重要，就一定要逼自己做下去。 有一个小技巧：给自己1个小时的放空时间，在这个时间不带着情绪做事，不考虑要做的事有没有意义，有没有帮助，能够得到什么结果。把情绪放在做事上，不放在心里，在这一刻你可以把自己暂时当作没有情感的机器。 先不要急着否定我，你可以去试试，如果真的不好用，你可以来找我。我最开始写作的时候，最多能写500字，我看别人的文章动辄几千，心态直接就不好了。坐在椅子上，一直在想1000字太长了，根本写不出来，完不成。 没有把情绪用在内容上，而是用在否定自己上，情绪低落，心态消极。\n"}),a.add({id:333,href:'/life/docs/think/',title:"思维",section:"Docs",content:"批判性思维\n金字塔原理\n失控\n"}),a.add({id:334,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/r2xcf5nxjq/',title:"国内咨询平台",section:"自我提升",content:"国内靠谱咨询平台\r#\r\r广义平台\r#\r\r  知乎平台\n  创客匠人 慎重\n  得到 慎重\n  心理\r#\r\r  壹点灵\n  简单心理\n  糖心理\n  看见心理\n  思睿明 慎重\n  法律\r#\r\r 华律网 慎重   华律网创建于2004年，国内知名的一站式法律服务平台，提供法律咨询、找律师、法律知识等服务。截至2021年1月，华律网注册普通会员人数已达1亿多，日独立访客680万，日产生咨询10万多，注册律师人数近30万，华律网全线产品每年为超过30亿人次普及法律知识\n  找法网 慎重   找法网创立于2003年，国内知名的法律信息咨询网站，致力于为法律需求者提供免费多样的法律咨询服务。截至目前，找法网的业务已覆盖全国34个省，近370个大中小城市，吸引20多万执业律师、1亿余公众注册，创造了每天超10万次的法律咨询服务\n  中顾法律网 慎重   中顾法律网创办于2005年，是专业的法律服务平台，在法律资讯、咨询及法律爱好者交互等方面保持国内业界领先地位。目前，中顾法律网已有全国95%以上的执业律师加盟，涉及有50多个专长领域，城市分站遍布全国34省、近四百个大中城市\n  法律快车 慎重   法律快车创立于2004年，致力于打造放心的互联网法律服务平台，提供问律师、找律师、看知识等法律服务。法律快车融合了线上和线下法律服务的交易模式，提供全程的法律服务。目前，法律快车已覆盖180多个法律专业领域细分，为分散在全国360多个大中小城市的超23万律师和数千万法律需求者创造近在身边的法律服务机会\n 知识付费产业\r#\r\r 问答类：百度知道、知识星球、知乎 Live、在行 专栏类：得到、喜马拉雅、豆瓣时间、樊登读书会、吴晓波频道、十点课堂 平台类：腾讯课堂、网易云课堂、荔枝微课、千聊Live、学而思网校、cctalk 第三方工具：小鹅通、美阅教育\n "}),a.add({id:335,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%AE%B0%E5%BF%86/',title:"记忆方法",section:"自我提升",content:"记忆方法\r#\r\r 提高记忆的关键，在于想象和创意 编故事有助于提高记忆力  通过编故事，再加上逻辑或地点（后者更多一些）;\r编故事是加强了记忆桩之间的联系\r记忆和创造力\r#\r\r 记忆本身与创造力密不可分 ， 训练记忆力在很大程度上取决于你的创造力  要想记住毫不相关的信息和扑克牌，\r首先就要把它们变成图像。\r通过这种方式，\r那些零散的信息才可能会建立某种联系\r联想\r#\r\r利用事物间的联系通过联想进行记忆的方法。\r联想是由当前感知或思考的事物想起有关的另一事物，\r或者由头脑中想起的一件事物，又引起想到另一件事物。\r由于客观事物是相互联系的，各种知识也是相互联系的，因而在思维中，\r联想是一种基本的思维形式，是记忆的一种方法。\r联想，就是当人脑接受某一剌激时，浮现出与该刺激有关的事物形象的心理过程。\r一般来说，互相接近的事物、相反的事物、相似的事物之间容易产生联想。\r用联想来增强记忆是一种很常用的方法。\r记忆的一种主要机能就是在有关经验中建立联系，思维中的联想越活跃，经验的联系就越牢固。\r如能经常形成联想和运用联想，就可增强记忆的效果。\r联想是有规律可循的，联想的规律有接近律、类似律、对比律、因果律等，有接近联想、类似联想、对比联想、因果联想。\r  联想不仅快速，而且它还不是一个简单、一维的东西。首先，你在联想中会加入一些情感因素，甚至还没回想起一段经历，就已经产生了某种情绪。\n  一旦学会动用感情和感官，还有逻辑和创造力，来与不同事物间建立联系，你的记忆能力就会大大提高。除此之外，你还会慢慢习惯放松大脑，以最快的速度在不同事物之间建立联系。瞬间联想之所以对提高记忆力如此重要，是因为一个人在瞬间建立的联系往往是最牢靠的\n  如何在两个并无联系的单词之间建立联系\u0026ndash;记忆的关键，就在于将二者结合到一起。\n  如果没有过去的某些参照物作为参考，你就不能在两个概念( 包括单词、物体、活动等)之间建立联系。你的过去为你提供了某种经验，而正是这种经验可以帮助你由一个概念想到另一件概念。你的生活中发生的一切都像是积木中的模块，正是这一个个模块帮助你搭建了自己的人生大厦。要想在两个模块之间尽快建立联系，你需要用尽可能少的连接物来实现过渡。也就是说，要想从一件事情想到另外一件事情，最快的方式就是直接找到二者之间的联系\n   比如说我想记住两个单词：墙壁和小鸡。\r每个单词都能激发我丰富的联想，我必须找到某种连接物将两个单词连接起来。\r比如说：\r墙壁会让我想到一个相册，想找到我小时候放学后经常爬的墙等。\r随着联想越来越细致、快速，我突然想到了一个最明显的连接：一首叫\u0026lt;\u0026lt;小胖鸡\u0026gt;\u0026gt;的儿歌。\r好极了！小胖鸡坐着墙壁上，它是一个鸡蛋----而鸡蛋又是小鸡下的。\r这时我就会展开联想，想象一只小鸡坐在墙下下蛋。\r为了让这个联想更加生动，我想起了小时候我在唱歌时的样子，\r然后自然而然地想到了自己看着小鸡下蛋时吃吃发笑的情形。\r虽然我并不记得发生过这件事，但它却足以激发我的联想。\r这个过程听起来可能有些复杂、繁琐，但事实上，这在大脑中只是一瞬间发生的事情。\r链条法\r#\r\r 如何使用链条法记住5个单词 小提琴、武士、箱子、项链、雪球  首先想想你突然听到小提琴发出的悠扬乐声。\r然后看到一个武士在演奏小提琴，\r你甚至可以清楚地看到他把小提琴放到下巴下面--这武士满副盔甲，很是搞笑。\r然后你看到他脚边放了一个箱子，可能颜色很鲜艳，也可能已经很破旧了。\r你打开箱子，发现里面有一挂价值连城的钻石项链，钻石反射阳光，分外耀眼。\r最后你转过头去，突然一个雪球砸中你的脸颊，你甚至感觉到右脸有些发疼。\r记住，你越练习动用五官来加强想象，你的大脑就会越熟悉这种练习，你也就越容易记住自己想象的场景。\r  要要记住五个单词以及单词之间的顺序，需要在单词之间建立联系\n  使用链条法，关键在于上下文，我们可以把本来毫不关联的信息连接起来，将其放到一个场景中，这样它们就会变得很容易记住了。\n  你想象的东西一定要合理，或者至少应该符合逻辑。它们可以有些出奇，甚至古怪，但从理论上一定是合理或可能的。\n  在使用链条法记忆时，一定要注意你所想象的故事顺序。最简单的办法是按照顺序用这些单词编一个故事，故事本身应当有一定的逻辑性，只有这样，你才能记住单词的顺序。在回忆时忘记任何一个单词，都说明你编的故事不够清晰。如果真是这样，建议换个故事试试。\n  路径记忆法\r#\r\r  例子\n  第一个记忆桩：前门\n  第二个记忆桩：隔壁邻居家的房子\n  第三个记忆桩：公共汽车站\n  第四个记忆桩：商店\n  第五个记忆桩：停车场\n  在设计了固定的路径，并为每张扑克设定了一个具体的物体代码之后，我要做的就是把扑克放在路径中适当的记忆桩。\r比如说翻开的前5张牌是:方块6、黑桃3、梅花5、红桃8、方块4。记忆方式如下:\r我想象一架飞机(方块6)停在我家门口;\r邻居家门外有段木头(黑桃3)靠在篱笆墙上;\r在公共汽车站，我的小狗(梅花5)正在跳上跳下，冲着路过的汽车狂吠;\r商店里面，我(红桃8)正在买一份报纸;\r停车场里有一捆现金(方块4)。\r  重要:把要记忆的数据变换后放入路径中适当的记忆桩,相当于把数据嵌入记忆桩中,这也是为什么说联想是记忆中最重要的一点\n  这下我不会再记混顺序了，因为这段路径已经把每件事物都排好了位置。我用20张扑克进行测试，完全成功！连一个错误都没有。于是我决定延长这段路径，从我家大门开始，穿过村子，经过酒吧，穿过板球场，沿着一条可以看到大片绿色草坪的小路\u0026hellip;\u0026hellip;最后我的整个路径包括了52个记忆桩，正好是一幅扑克牌。\n  一条成功的路径必须满足三个条件:\n   1:记忆桩必须多样; 2:记忆桩之间的差异必须明显; 3:我与这些记忆桩必须有明显的互动。    地点就像是记忆中的锚\u0026ndash;它们可以成为我们回忆往事的参照点。我相信，如果没有这些地点，我们的思想，尤其是我们的记忆，就会变成一团乱麻，凌乱无序。\n  提高记忆能力的关键有三个:联想、地点、和想象\n  创建记忆路径库的5个秘诀\n   1:选择你非常熟悉的路径 2:选择对你比较有意义的路径 3:选择比较富于变化的路径 4:用特点路径来记忆特点事物 5:选择视角最佳的路径  想象感官训练(2)\r#\r\r 建议每天练习，直到确信自己可以在两个看似毫不相关的事物间建立生动具体的联系  方案一:	想象你手里正拿着个足球，它散发出新鲜橘子味，\r慢慢把这两个感觉汇集到一起。好了，然后想象足球是果冻做的在\r像时钟一样滴答走动，尝起来味道像巧克力。别着急，让这个形象至少在脑海里停留5分钟，尽量让它们鲜活起来。如果感觉大脑开始走神，立刻从头开始重复整个练习。\r然全熟悉第一套方案后，再进入下面的练习\r方案二:\r想象一头身上有粉点的灰色大象，它会像只猫咪一样喵喵叫，\r味道像块生姜，皮肤像是一根根刺人的荨麻，浑身散发出一股\r新鲜咖啡豆的味道。还是老样子，别着急，让这个形象在脑海里至少停留5分钟，尽量鲜活起来。\r记忆\u0026quot;自由玩耍\u0026quot; (3)\r#\r\r 词汇能引发记忆。迅速浏览一下下面的词汇，看看它们能让你想到什么。每个单词只要看一两秒即可，尽量不要去左右自己的想法，只是看着它们能让你想起什么就可以了。然后尽量去感受你所想到的形象、念头、情绪和感觉等\u0026mdash;-这可能只是一瞬间的事，也可能需要花上好几分钟。接着看下一个单词。这项训练的目的只是让你熟练使用自由联想，学会激发你的情绪和感觉。  kitten (猫咪)\rrainbow (彩虹)\rtoy (玩具)\rbirthday (生日)\rice cream (冰淇淋)\rsnow (雪)\rchurch (教堂)\rcushion (靠垫)\rsand (沙子)\rtoe nail (脚趾甲)\r 该项练习不仅能帮你回忆事件，还能帮你记住一些想法，以及伴随这些想法的情绪和感受。刚开始不要在意速度，你练习越久，速度就越快。  建立联系 (4)\r#\r\r 看看下面的单词，尽量用它们在你脑中激发出的第一反应在每一对单词之间建立联想。千万不要对这些联想做任何修改\u0026mdash;你只要放松大脑，在二者之间建立联系就可以了。这就是记忆两条不相关的信息，叫做链条法  你的第一段路径(练习N)\r#\r\r  1：围绕你的住所设计一个由12个记忆桩组成的路径\n  2: 在大脑中反复重复这条路径，直到你烂熟于心。如果可能，你甚至可以亲自走一趟\n  3:确定自己很熟悉这条路径之后，你可以用我前面提到的方法记住12件物品(蛋糕、马、报纸、水壶、鞭子、加农炮、香蕉、电话、猫王、天文望远镜、钟、咖啡)。你的想象要尽量鲜活\u0026ndash;记住，你可以动用逻辑、创造性，以及你所有的感官和情绪。\n  4: 接着盖着清单，看看你能按照正确的顺序记住多少。\n  5:顺序倒过来呢?\n  "}),a.add({id:336,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E5%86%A5%E6%83%B3/',title:"冥想",section:"自我提升",content:"冥想\r#\r\r呼吸冥想法\r#\r\r  1:坐好，后背挺直，然后闭上眼睛\n  2:关注你自己呼吸时的感觉,吸气，吸气，选择一个感受突出的地方，通常是你的鼻子或者耳朵、腹部然后集中注意力，关注你自己呼吸时的感觉。吸气，吸气，用嘴呼吸（最好关注腹部，因为我们大部分人都是腹部呼吸法）\n  3:一旦你开始这样做了脑子会乱想,你需要关注你到什么时候走神的，那么走神后重新调整后重新开始集中注意力开始冥想。\n  "}),a.add({id:337,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/paragraph/',title:"适合分享的段子和笑话",section:"自我提升",content:"段子\r#\r\r 王朔自嘲段子  王朔在酒馆喝的大醉，大吼一声:谁小说写的比我好？旁边王小波轻描淡写来一句:我写的比你好。\n王朔走过来揽住王小波的肩，继续张扬:谁能写小说比我们俩好？\n"}),a.add({id:338,href:'/life/docs/english_study/second_language_acquisition/',title:"第二语言习得",section:"英语学习",content:"习得\r#\r\r内隐知识和外显知识(implicit knowlage and explicit knowlege)\n输入假设(input hypothesis）\n输出假设(output hypothesis)\n互动假设(Interaction Hypothesis)\n注意假设（Noticing Hypothesis\n 不是学习\n  input i+1 output  "}),a.add({id:339,href:'/life/posts/change/2022-10-18/',title:"第n天记录",section:"Blog",content:"记录\r#\r\r当你和她不对等的时候 这个时候即便苦苦等待得来了相处也是痛苦的 好的感情一定是相互成就的 所以一定要大量的去追求女孩子 那个真心回应你的女孩子才是你值得用心去爱的\n相亲来的女孩子大都不是真心的还是放弃吧只是来了咱也用心对待 如果不用心就随她去吧\n双向奔赴的爱情最值得肯定.\n"}),a.add({id:340,href:'/life/posts/change/2022-10-12/',title:"第一天记录",section:"Blog",content:"记录下目前想法\r#\r\r人生没有谁是完美的,每个人都是独特的,当然你站在特殊的角度去强行评价一个人那多半是可以分出高低贵贱的,只是这就有点肤浅了主观在个人你是怎样去看待这个问题的\n你经历越多从表面上看你可能确实比较痛苦但是从反面看你经历这些之后你也就越坚强如果你以后要找灵感那么你的经历就天然成了你的优势之一\n最近我在想我不是正在改变嘛 我可以把这些录下来 然后既可以帮助自己观察自己状态 也可以用来帮助其他人\n"}),a.add({id:341,href:'/life/docs/%E8%84%9A%E6%9C%AC/packing/',title:"uniapp打包",section:"脚本",content:"android本地打包\r#\r\r参考1 参考2 参考3\nuniapp创建keystore jks 参考\n 这里是因为创建密匙文件有多种方式  第一步 下载 Android Studio 配置必要的数据\r#\r\r   配置 android sdk 选用google 可以官网下载也可以使用工具下载    配置 jdk ( java jdk建议)    假如你没有手机或者手机不在打包环境那么你需要配置模拟android平台    第二部(重要)\r#\r\r 我也是在网上找了下，发现网上的有残缺吧\n  1:HBuilderX版本 必须和 sdk一致  uniapp本地打包下载地址\n  2: Android Studio导入HBuilder-Integrate-AS\n  3:删除 HBuilder-Integrate-AS_c\\simpleDemo\\src\\main\\assets\\apps 下的 生成的包\n  4: 生成签名\n  C:\\Windows\\system32\u0026gt;c:\rC:\\Windows\\system32\u0026gt;cd C:\\Program Files\\Java\\jdk1.8.0_102\\bin\rC:\\Program Files\\Java\\jdk1.8.0_102\\bin\u0026gt;keytool -genkey -alias test -keyalg RSA -keysize 2048 -validity 36500 -keystore test.keystore\r输入密钥库口令:\r再次输入新口令:\r您的名字与姓氏是什么?\r[Unknown]: z\r您的组织单位名称是什么?\r[Unknown]: z\r您的组织名称是什么?\r[Unknown]: z\r您所在的城市或区域名称是什么?\r[Unknown]: z\r您所在的省/市/自治区名称是什么?\r[Unknown]: z\r该单位的双字母国家/地区代码是什么?\r[Unknown]: z\rCN=z, OU=z, O=z, L=z, ST=z, C=z是否正确?\r[否]: y\r输入 \u0026lt;test\u0026gt; 的密钥口令\r(如果和密钥库口令相同, 按回车):\rC:\\Program Files\\Java\\jdk1.8.0_102\\bin\u0026gt;keytool -list -v -keystore test.keystore\r输入密钥库口令:\r密钥库类型: JKS\r密钥库提供方: SUN\r您的密钥库包含 1 个条目\r别名: test\r创建日期: 2021-12-4\r条目类型: PrivateKeyEntry\r证书链长度: 1\r证书[1]:\r所有者: CN=z, OU=z, O=z, L=z, ST=z, C=z\r发布者: CN=z, OU=z, O=z, L=z, ST=z, C=z\r序列号: 1af7ad82\r有效期开始日期: Sat Dec 04 12:30:35 CST 2021, 截止日期: Mon Nov 10 12:30:35 CST 2121\r证书指纹:\rMD5: 66:3B:24:19:6D:84:19:1E:A3:FC:A1:55:18:36:12:1F\rSHA1: E1:E7:F7:EB:13:81:87:E1:31:AF:67:40:B8:9C:6C:71:77:69:7D:84\rSHA256: 92:00:0B:D4:7A:40:11:16:80:B9:70:D9:3E:02:C8:0A:8F:CF:B7:1A:04:16:AC:AC:D5:E8:50:31:92:68:33:2D\r签名算法名称: SHA256withRSA\r版本: 3\r扩展:\r#1: ObjectId: 2.5.29.14 Criticality=false\rSubjectKeyIdentifier [\rKeyIdentifier [\r0000: 7F C3 B2 D4 0B 79 96 A0 54 1C D7 49 FE 1A BE 87 .....y..T..I....\r0010: BB 9B A3 A3 ....\r]\r]\r*******************************************\r*******************************************\r  查看key C:\\Program Files\\Java\\jdk1.8.0_202\\bin\u0026gt;keytool -v -list -keystore test.keystore\n  5 将 jdk环境下生成的test.keystore找到并复制到HBuilder-Integrate-AS_c\\simpleDemo\\test.keystore\n  6: 回到刚才的黑窗子，查看sha1的指纹\n  7:生成appKey https://dev.dcloud.net.cn/ 去生成\n  需要 APPID 如__UNI__6A9874D 必须一致\r需要 Android 包名 如com.android.simple 必须和Android Studio中项目一致不能乱填\r需要 Android 证书签名SHA1 必须一致\r  8 到HBuilderX中打包 原生app本地打包 得到打包文件后将web包拷贝到HBuilder-Integrate-AS_c\\simpleDemo\\src\\main\\assets\\apps 下\n  9 需要修改的地方\n  dcloud_control.xml 中\r\u0026lt;hbuilder\u0026gt;\r\u0026lt;apps\u0026gt;\r\u0026lt;app appid=\u0026quot;__UNI__6A9874D\u0026quot; appver=\u0026quot;\u0026quot;/\u0026gt;\r\u0026lt;/apps\u0026gt;\r\u0026lt;/hbuilder\u0026gt;\rAndroidManifest.xml 中\r\u0026lt;meta-data\randroid:name=\u0026quot;dcloud_appkey\u0026quot;\randroid:value=\u0026quot;3f4b0a2ece1e41eb2a6e25cbf36e8f8c\u0026quot; /\u0026gt;\rbuild.gradle 中\rsigningConfigs {\rconfig {\rkeyAlias 'test'\rkeyPassword '123456'\rstoreFile file('test.keystore')\rstorePassword '123456'\rv1SigningEnabled true\rv2SigningEnabled true\r}\r}\r  10完毕 点击打包apk\n  如果是android studio 直接Generate Signed Bundle or APK或Build Bundle APK\n  github地址\n服务端打包\r#\r\rios本地打包\r#\r\r"}),a.add({id:342,href:'/life/docs/math/katex/',title:"KaTeX 使用指南",section:"数学",content:"网络数学排版库\r#\r\r KaTeX快捷代码可以让您在markdown文档中呈现数学排版。参见KaTeX\n \r\r\\[\rf(n)=\\begin{cases} 1 \u0026amp; n = 1 \\cr \\sum_{i=1}^{n-1} f(i) \u0026amp; \\text{Otherwise.}\\end{cases}\rf(n)=\\begin{dcases} 1 \u0026amp; n = 1 \\cr \\sum_{i=1}^{n-1} f(i) \u0026amp; \\text{Otherwise.}\\end{dcases}\r\\]\r\r简单的 API，没有依赖性——但在所有主流浏览器上都非常快。\r#\r\r 快速： KaTeX 同步呈现它的数学并且不需要重排页面。 打印质量： KaTeX 的布局基于 Donald Knuth 的 TeX，这是数学排版的黄金标准。 自包含： KaTeX 没有依赖性，可以很容易地与您的网站资源捆绑在一起。 服务器端渲染：无论浏览器或环境如何，KaTeX 都会产生相同的输出，因此您可以使用 Node.js 预渲染表达式并将它们作为纯 HTML 发送。  例子\r#\r\r code  {{\u0026lt; katex display \u0026gt;}} f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi {{\u0026lt; /katex \u0026gt;}}  展示  \r\\[\rf(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\r\\]\r\r 矩阵  \r\\[\r\\left(\r\\begin{matrix}\r1 \u0026amp; 2 \u0026amp; 3 \\\\\r4 \u0026amp; 5 \u0026amp; 6 \\\\\r7 \u0026amp; 8 \u0026amp; 9\r\\end{matrix}\r\\right)\r\\tag{小括号}\r\\]\r\r括号/上下箭头\r#\r\r\r\\[\r\\lparen\\rparen \\lbrack\\rbrack \\lbrace\\rbrace \\langle\\rangle \\vert\\vert \\Vert\\Vert \\lVert\\rVert\r\\]\r\r矩阵类\r#\r\r\r\\[\r\\begin{matrix}\ra \u0026amp; b \\cr\rc \u0026amp; d\r\\end{matrix}\r\\]\r\r排板类\r#\r\r\r\\[\r\\begin{aligned}\ra\u0026amp;=b\u0026#43;c \\cr\rd\u0026#43;e\u0026amp;=f\r\\end{aligned}\r\\begin{gathered}\ra=b \\cr\re=b\u0026#43;c\r\\end{gathered}\r\\begin{alignedat}{2}\r10\u0026amp;x\u0026#43; \u0026amp;3\u0026amp;y = 2 \\cr\r3\u0026amp;x\u0026#43;\u0026amp;13\u0026amp;y = 4\r\\end{alignedat}\r\\]\r\r情况分类\r#\r\r\r\\[\rx = \\begin{cases}\ra \u0026amp;\\text{if } b \\cr\rc \u0026amp;\\text{if } d\r\\end{cases}\r\\]\r\r数组\r#\r\r\r\\[\r\\begin{array}{cc}\ra \u0026amp; b \\cr\rc \u0026amp; d\r\\end{array}\r\\def\\arraystretch{1.5}\r\\begin{array}{c:c|c}\ra \u0026amp; b \u0026amp; c \\cr \\hline\rd \u0026amp; e \u0026amp; f \\cr\r\\hdashline\rg \u0026amp; h \u0026amp; i\r\\end{array}\r\\]\r\r希腊字母\r#\r\r\r\\[\r\\alpha \\Alpha A \\beta \\Beta B \\gamma \\Gamma \\varGamma \\delta \\Delta \\varDelta \\epsilon \\varepsilon \\Epsilon E \\zeta \\Zeta Z \\eta \\Eta E \\theta \\vartheta \\Theta \\varTheta \\iota \\Iota I \\kappa \\varkappa \\Kappa K \\lambda \\Lambda \\varLambda \\mu \\Mu M \\nu \\Nu N \\xi \\Xi \\varXi \\omicron \\Omicron O \\pi \\varpi \\Pi \\varPi \\rho \\varrho \\Rho P \\sigma \\varsigma \\Sigma \\varSigma \\tau \\Tau T \\upsilon \\Upsilon \\varUpsilon\r\\phi \\varphi \\Phi \\varPhi \\chi \\Chi X \\psi \\Psi \\varPsi \\omega \\Omega \\varOmega \\thetasym \\digamma\r\\]\r\r其他字母\r#\r\r\r\\[\r\\imath \\jmath \\aleph \\alef \\alefsym \\beth \\gimel \\daleth \\eth \\nabla \\partial \\Game \\Finv \\ell \\hbar \\hslash \\]\r\r标准函数\r#\r\r指数\r#\r\r\r\\[\r\\exp_a b = a^b, \\exp b = e^b, 10^m\r\\]\r\r对数\r#\r\r\r\\[\r\\ln c, \\lg d = \\log e, \\log_{10} f\r\\]\r\r三角函数\r#\r\r\r\\[\r\\sin a, \\cos b, \\tan c, \\cot d, \\sec e, \\csc f\r\\]\r\r微分及导数\r#\r\r\r\\[\rdt, \\mathrm{d}t, \\partial t, \\nabla\\psi\r\\]\r\r\r\\[\rdy/dx, \\mathrm{d}y/\\mathrm{d}x, \\frac{dy}{dx}, \\frac{\\mathrm{d}y}{\\mathrm{d}x}, \\frac{\\partial^2}{\\partial x_1\\partial x_2}y\r\\]\r\r\r\\[\r\\prime, \\backprime, f^\\prime, f\u0026#39;, f\u0026#39;\u0026#39;, f^{(3)}, \\dot y, \\ddot y\r\\]\r\r"}),a.add({id:343,href:'/life/posts/2021/oneday/',title:"2021-06-15",section:"Blog",content:"  努力\n  英语越来越重要了\n  "}),a.add({id:344,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/dns%E6%B1%A1%E6%9F%93/',title:"DNS 污染",section:"解决问题",content:"中国国内访问 GitHub 为什么很慢很卡甚至访问不了？如何加速访问 GitHub 网站？\r#\r\r个人总结：强扭的瓜不甜，修改 hosts 也就片刻好光景，要不了多久就变得比没改 hosts 之前更慢。所以还是顺其自然就好，不要白费力气去修改 hosts。\r#\r\r  摘要\n  网站分发加速网络的域名遭到 DNS 污染，DNS 不能直接找到那个最快的 IP！ 通过修改系统 hosts 文件的办法，绕过国内 DNS 解析，直接访问 GitHub 的 CDN 节点，从而达到加速的目的！\n  如何检验效果\n  操作之前先 ping 一下 github.com，两个请求超时，两个 93ms。\n  操作之后再 ping 一下 github.com，没有丢失，四个 287ms。\n  一、国内访问 GitHub 为什么很慢？\r#\r\r GitHub 的 CDN 域名遭到 DNS 污染，导致无法连接使用 GitHub 的加速分发服务器，才使得国内访问速度很慢。  二、如何解决 DNS 污染？\r#\r\r 通过修改 Hosts 文件，将域名解析直接指向 IP 地址来绕过 DNS 的解析，以此解决污染问题。  三、具体操作步骤\r#\r\r  1、打开 https://www.ipaddress.com/ 这个全球最好的 IP 地址查询工具网站来查询出域名当前对应的最优 IP。（不要用 ip168.com 这类国内的 IP 探针，其获取的国外域名的 ip 也是被 DNS 污染过的）\n  查询下面 3 个网址对应的 IP 地址\n  github.com : 140.82.113.4\n  assets-cdn.github.com : 185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153\n  github.global.ssl.fastly.net : 199.232.69.194\n  2、修改本地电脑系统 hosts 文件\n  Windows 系统中的文件路径： C:\\WINDOWS\\system32\\drivers\\etc\n  Linux 系统中的文件路径 /etc/hosts\n  直接在最后面加入以下代码\n  192.30.253.112 github.com\r140.82.113.4 github.com\r185.199.108.153 assets-cdn.github.com\r199.232.69.194 github.global.ssl.fastly.net\r 说明：在 Windows 系统中，包括 XP、Win7、Win8 、Win10 系统中，hosts 文件的位置都是一样的。如果 etc 文件夹中并没有 hosts 文件，那么可能是该文件隐藏了，可以设置一下，让其显示出来即可。\n   3、 更新dns缓存\n  修改后会直接生效，无需刷新 DNS 缓存，因为 hosts 的优先级大于 DNS 域名解析，添加完 hosts 之后，再访问对应的域名，已经就与 DNS 没关系了。如果未生效，重启操作系统或用命令刷新。\n  Windows 系统：ipconfig /flushdns\n  Linux 系统：systemctl restart nscd\n  Mac 系统：sudo dscacheutil -flushcache或sudo killall -HUP mDNSResponder\n  "}),a.add({id:345,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/githubpages%E7%BB%91%E5%AE%9A%E6%9D%A5%E8%87%AA%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84%E5%9F%9F%E5%90%8D/',title:"GitHubPages绑定来自阿里云的域名",section:"解决问题",content:"  原教程但是由于他使用的github的用户名做的域名映射器,这样不好的地方是有可能你使用自定义的方式建立github仓库名比如 English study,还有一个是他使用的阿里云的域名映射解析这些是老版本的\n  GitHub Pages 绑定来自阿里云的域名==原博客教程\n  我的使用\r#\r\rgithub url ==\u0026gt; https://github.com/noatnu/studyDoc , 买的域名 http://www.zhouchenghua.com/\r#\r\r 解析第一个设置   创建A记录，请将您的顶点域指向GitHub Pages的IP地址 https 解析ip,上面的192.30.252.153是http解析方式现在官方已经宣布过时了,选择下面任意一个都可以  185.199.108.153\r185.199.109.153\r185.199.110.153\r185.199.111.153\r 解析第二个设置    github 要做的事\n  创建 CNAME文件,写入www.zhouchenghua.com\n   这个是我设置github project 设置截图   ping 地址  C:\\Users\\noatn\u0026gt;ping www.github.com\r正在 Ping github.com [13.250.177.223] 具有 32 字节的数据:\r请求超时。\r请求超时。\r请求超时。\r请求超时。\r13.250.177.223 的 Ping 统计信息:\r数据包: 已发送 = 4，已接收 = 0，丢失 = 4 (100% 丢失)，\rC:\\Users\\noatn\u0026gt;ping www.github.com.noatnu.studyDoc\r正在 Ping www.github.com.noatnu.studyDoc [223.87.179.156] 具有 32 字节的数据:\r来自 223.87.179.156 的回复: 字节=32 时间=872ms TTL=54\r来自 223.87.179.156 的回复: 字节=32 时间=10ms TTL=54\r来自 223.87.179.156 的回复: 字节=32 时间=7ms TTL=54\r来自 223.87.179.156 的回复: 字节=32 时间=8ms TTL=54\r223.87.179.156 的 Ping 统计信息:\r数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，\r往返行程的估计时间(以毫秒为单位):\r最短 = 7ms，最长 = 872ms，平均 = 224ms\r  223.87.179.156这是我的静态博客地址 223.87.179.156\n  192.30.252.153 还可以改为223.87.179.156 ,不过不建议改 因为我们自己查出的ip不是固定ip 而 92.30.252.153是Github Pages服务器指定的IP地址，访问该IP地址即表示访问Github Pages\n  现在ipv4已经分配完了,虽然北美，日本，欧洲，韩国，香港等地的企业商 还有ipv4申请但是其实是他们以前申请保留下来的\n  按照我上面的截图设置即可 ,然后把我的github project url 下载下来看一下\n  所以设置完毕会等一段时间,大概至少会超过1个小时,因为这里面牵扯到阿里云的解析是否解析了你的域名映射,当然这不包括你的域名购买时间，注册以及实名认证这些时间,虽然官方说的时间是挺短的,当你做这些才会一声叹息啊\n  "}),a.add({id:346,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/git_andsower/git%E5%A4%84%E7%90%86/',title:"git处理网络和权限问题",section:"git出现的问题",content:" Push master to origin/master was rejected by remote  有三种原因\r1:push的这个工程是其他人新建的，找她开通master权限后，再次push\r2:git 工程错误\rgit pull\rgit pull origin master\rgit pull origin master --allow-unrelated-histories\r3:github 设置原因\r勾选了Keep my email addresses private\r解决办法2种\r第一种 通知账户人员取消勾选\r第二种\r重新设置你的全局用户E-mail\rgit config --list 查看这个时候一定不对\r因此重新设置全局email\r重置上次提交的作者信息 git commit --amend --reset-author\rgit config --global user.name \u0026quot;zch\u0026quot;\rgit config --global user.email \u0026quot;sdhshd@163.com\u0026quot;\rok\r对了你如果使用的不是idea而是git\r那么抛出的错误非常明显\r如果抛出\rgit报错--\u0026gt;! [remote rejected] master -\u0026gt; master (push declined due to email privacy restrictions)\r那么一定是这个原因\r git clone时报RPC failed; curl 18 transfer closed with outstanding read data remaining 错误  原因1：缓存区溢出\rgit config http.postBuffer 524288000\r执行上面命令如果依旧clone失败，考虑可能原因2：网络下载速度缓慢\r解决方法：命令行输入\rgit config --global http.lowSpeedLimit 0\rgit config --global http.lowSpeedTime 999999\r如果依旧clone失败，则首先浅层clone，然后更新远程库到本地\rgit clone --depth=1 http://gitlab.xxx.cn/yyy/zzz.git\rgit fetch --unshallow\r error: RPC failed； curl 28 OpenSSL SSL_read: Connection was reset, errno 10054 fatal: expected  git config --global http.sslVerify \u0026quot;false\u0026quot;\r  Failed to connect to 127.0.0.1 port 1080: Connection refused\n  这是由于设置了动态代理(最好下面方法都试一遍\u0026hellip;因为可能设置了不只一次o(╥﹏╥)o);\n  git查看\n  查询动态代理\rgit config --global http.proxy\rgit config --global https.proxy\r 若是有返回值  取消代理\rgit config --global --unset http.proxy\rgit config --global --unset httpx.proxy\r  git配置文件查看 打开c:\\Users\\当前用户里的.gitconfig文件(这个默认是隐藏文件), 将里面关于proxy的行删掉\n  环境变量查看 打开环境变量,查看查看用户变量和系统变量(两个都要看\u0026hellip;.我就是两个都设置了o(╥﹏╥)o),将里面的http_proxy(也可能不是这个名字,但是看值是127.0.0.1:1080这种的就是了,或者有proxy),把这一行删掉就行\n  Failed to connect to github.com port 443: Timed out\n  D:\\IdeaProjects\\motorcycle\u0026gt;git config --global --unset http.proxy\rD:\\IdeaProjects\\motorcycle\u0026gt;git config --global --unset https.proxy\rD:\\IdeaProjects\\motorcycle\u0026gt;\r  remote: HTTP Basic:Access denied fatal:Authentication failed for\n  最终解决方法，控制面板 \u0026gt; 用户账户\n   然后找到 凭据管理器 选择Windows凭据   如图删除掉之前使用者留下的 凭据再次执行pull 就会弹出一个对话框来让你输入该 仓库的用户名和密码了  "}),a.add({id:347,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/idea/idea/',title:"idea 解决working directory 设置到 target",section:"idea出现的问题",content:" idea 解决working directory 设置到 target  test ng D:\\IdeaProjects\\java-se-study\rrun config $MODULE_DIR$\r You aren‘t using a compiler supported by lombok, so lombok will not work and has been disabled  Compiler Shared build process Vm options 加上 -Djps.track.ap.dependencies=false\n"}),a.add({id:348,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/maven/idea%E8%A7%A3%E5%86%B3/',title:"idea 问题解决",section:"maven出现的问题",content:" idea导入项目出现Unable to import maven project: See logs for details提示\n 第一种解决办法\r#\r\r  删除项目根目录下.idea文件夹\n  关闭idea工具，重新打开选择File-\u0026gt;New-\u0026gt;Project from the existing source ,选择刚才的项目根目，下一步：\n  一直点next，最后点击主工程的pom.xml 完成！\n  第二种\r#\r\r  打开idea 的日志文件如果发现【Error】com.google.inject.CreationException: Unable to create injector\n  那么自定义配置Maven3.6.2报错 或者更高版本maven\n  原因：Maven3.6.2的版本兼容问题。\n  解决方法：重新下载较低版本Maven3.6.1及以下版本可以顺利解决。\n  用maven无论是新建项目还是导入没有下载到本地仓库的jar。出现了Unable to import maven project\n  打开cmd，ping localhost，显示一般故障\n  在左边控制栏，关闭防火墙，再开启防火墙 再次ping localhost，成功\n  对了 假如出现文件权限问题 那么更改maven的本地仓库地址\n  "}),a.add({id:349,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/visual_studio_code/visualstudiocode%E9%97%AE%E9%A2%98/',title:"Visual Studio Code 问题解决方案",section:"visual_studio_code",content:"Visual Studio Code 过滤文件 不显示某些文件\r#\r\r效果\r#\r\r 过滤工程中显示的文件 不显示某些类型的文件或文件夹  菜单\r#\r\r File/Preferences/ 搜索file exclude 选中workspack页签 添加一个过滤规则 如图:   "}),a.add({id:350,href:'/life/docs/english_study/word/',title:"单词记忆技巧",section:"英语学习",content:" 经验总结  记忆有四个过程:识记、保持、再认、回忆\r#\r\r识记:我们用一定的方法，经过努力将单词放进脑子里的这个过程就是在识记\r#\r\r保持:这些单词在脑子里会有一个积累，储存和巩固的动态过程。简单来说就是你识记在脑子里的单词是会被遗忘的。\r#\r\r再认:再认就是你背过的单词再次出现时能够识别出来的过程。\r#\r\r回忆:回忆是你将单词在头脑中独立地再现出来的过程。\r#\r\r  回忆和再认，本质上都是我们根据需要对自己脑海中的信息进行检索的过程，但是再认要比回忆简单的多。在你写作文时，回想单词怎么写的过程，就是回忆。例如，之前背过的那些高级词汇不管怎么想就是想不起来，整个作文都是because、but、good、so。在你做阅读理解时，回想这个单词是什么意思的过程，就是再认。例如，你那些高级词汇在阅读理解中出现，一下就认出来了。\n  很多时候，我们背单词只达到保持和再认的阶段，并没有真正达到可以回忆出来的程度。更有趣的是，当你背单词处于保持甚至是识记的过程的时候，就有了背过了的错觉。产生这种错觉可能会有以下几方面的原因:\n  ①在你重复性的读背一个单词的时候，会给你一个瞬时性记忆，让你感觉对这个词很熟悉了，你就错以为自己已经会了，但其实并没有记住。\n  ②在记忆的保持过程中，被遗忘了，自己没有发觉。\n  ③对于背单词app的不正确使用，熟悉了app上的单词，到了纸上就不认识了。\n  总得来说，之所以一到做题就忘了单词，就是因为背的单词没有达到可以回忆出来的程度。现在网上背单词的方法太多了，什么自然拼读法、词根词缀法、比较法、联想法等等实在是太多了，希望大家能找到一个适合自己的方法。\n  但是我还是想给大家提供一点建议:\r#\r\r  ①不管用什么方法背单词，一定要边写边读。\n  ②在不同的场合上认识单词，比如说，背单词app，词汇卡，试卷\n  ③经常性地复习，反复的记忆才能让记忆成为永久性记忆，达到回忆出来的程度。\n  ④最重要的一点就是要坚持下去，加油！\n  其它经验总结\r#\r\r 直接背句子，文章。自然会把意思记得更牢固，我们的老师是一个博士，他就是这么说的  为什么背过的单词在做题时遇到仍然不认识\r#\r\r第一，背的不熟，如果真的熟练了你起码会觉得“面熟” 第二，没有真正理解词汇的意思和用法。仅仅背一个词的意义肯定印象不会深，你还应该同时了解这个词的用法，会出现在什么语境中等等。 其实这还是对单词不熟悉。词汇不能仅仅从单词书上背诵，更重要的是放在文章里记忆和理解，这样既能了解单词的用法和词义，还能帮助巩固词汇量。试着改变一下背单词的方法，或许你能记住更多的单词。 只是背单词不行，最好是通过阅读一些自己喜欢的英语短文或者故事来记忆单词，看到多了自然就记住了。 背过后要常巩固，要学会运用，背过了就不再看几天就忘了，常看常新。 "}),a.add({id:351,href:'/life/docs/english_study/maimemo/',title:"墨墨背单词",section:"英语学习",content:"使用技巧\r#\r\r第一步：选择一本单词书，如下图，它有很多分类，我就拿考研的来举例了。\r#\r\r第二步：在第四个角标“设置”里头选择每日学习目标量\r#\r\r免费送600词汇量，在签到和分享过程中也会一直赠送的，虽然量不多，至少是送了！ 不够就买起来，这里确实会有一些朋友觉得单词收费略微昂贵，但是你想想如果你是app开发人或者是其中的工作人员之一， 会不会也希望以某一些方式来获益，而且你买了单词其实就是一种知识付费和你买单词书是一样的， 它比单词书好的地方是： 1⃣️能送你单词量，也就是只要你坚持打卡分享你的免费单词量是会越来越多； 2⃣️词书多即选择多，还能随时搜索忘记的单词； 3⃣️根据你的学习来提醒你复习（超级人性化，也不用另外去看表格想我今天该复习哪个单元了，该复习多少词汇量了） 4⃣️动力动力，花钱了还不学，钱太多啊！刚开始建议少一点， 因为这个app是根据艾宾浩斯遗忘曲线来学习和复习的，因此你每次学习完它都会根据你之前的学习情况来给你安排学习任务，也就是说， 比如我图上330个词其中276个是我之前学习过了的单词，而剩下的54个就是我今天需要新学的单词！） 第三部：回到第一个“复习”界面，开始背单词啦！\r#\r\r上面会有提示文，你先看这个单词你认不认识，认识你可以自己口述一下它的意思然后点击页面进行核对，点开页面下标： 认识；模糊；不认识。 词义无误选认识（哈哈哈说什么废话）有偏差选模糊（dbq还是废话）不认识就不认识了哦！ 这里一定一定要对自己诚实，认真选择！不会多看几遍就会了！ 每个单词会出现3次，3次也会慢慢有印象的，第三次还不会也没关系明天还会再让你学！✌️ 在背词的过程中可能会出现的情况 1.你非常熟悉的单词那么就在右上角的三个小点点里头点击熟识就ok啦； 2.你学的是英（美）音也是在小点点里切换哈！ 3.词义不够（补充啊，自己上！点击词义那一行最右图标在前面输入adj、v……系统都会自动识别的哈，每个词之间记得用；隔开（中文格式哦）这样编辑完成后回到界面就是和正常的一样啦！（我们真棒 ） 4.例句不够典型，点击例句那一行的长短线段图标就可以看到更多的例句啦！把你不想要的☑️取消换成你喜欢的例句就OK！（只能有3个例子哦） 第四部：背完单词，签到签到签到！\r#\r\r一定要peng一下哦（真的很大声哈哈哈）， 然后我会在“统计”的界面看看自己今天和之前的学习情况，做一下对比～然后就是复习啦（我经常是溜之大吉哈哈哈第二天再复习）， 如果你想今天在复习也是完全可以的！点击今天的小图标， 然后会出现“查看详情”字样，点击复习， 再在右上角中选择你喜欢的复习模式就ok啦！ “奇奇怪怪”的提醒\r#\r\r1:设置页面下拉到最后的更多设置里可以免费享用7天的例句发音哦！\r2:购买单词一定要点上面的链接能多送一些单词（我快乐了）\r3:然后......没有了！哈哈哈！\r"}),a.add({id:352,href:'/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%8E%B7%E5%8F%96%E9%87%91%E9%92%B1/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%B2%B9%E7%AE%A1youtube%E5%BC%80%E9%80%9A%E6%94%B6%E7%9B%8A%E8%B5%9A%E9%92%B1/',title:"如何在油管YouTube开通收益赚钱",section:"获取金钱",content:"如何在油管YouTube开通收益赚钱？\r#\r\r如果想在YouTube创业赚取美金，建议关注【YouTube运营笔记】，少走弯路，不被忽悠\n本篇主要由3个常见问题详细展开：\r#\r\r 如何在油管上开通获利？ 油管广告收益情况如何？ 油管除了广告还能怎么赚钱？  一、如何在YouTube开通获利？\r#\r\r第1步：你得有一个Gmail账号\r#\r\r YouTube账号是跟谷歌邮箱账号是关联的。想创建频道然后上传视频的基础条件就是，注册并登陆谷歌账号，目前一些国内手机注册会失败。   注：Gmail能登录就行，手机号码归属和注册地对后期收益不存在影响。\n 第2步：你得有一个YouTube频道\r#\r\r 一般而言只要你有了谷歌账号，就默认有一个YouTube频道了，但那个频道名称头像是跟谷歌邮箱是挂钩的，建议单独创建频道。此外，一个谷歌账号是创建多个频道的。   注：创建频道前，要想清楚频道的内容定位；频道创建后，还要对频道进行装修。\n 第3步：你得有策略地上传视频\r#\r\r 这一步非常重要，YouTube运营是一个技术活，不是随随便便发几个视频就有人看，也不是坚持发布就能做起来。有志要做的建议查看本专栏的其它文章，这里不细讲。   注：做YouTube成功的条件是「优质的内容+正确的方法」，缺一不可\n 第4步（重点）：你须达到获利门槛/申请开通\r#\r\r 想开通获利，必须满足以下条件：   1:选择支持YouTube合作伙伴计划的国家或地区。 2:12 个月内的有效观看时长累计超过4000小时。 3:频道拥有至少1000订阅。 4:拥有可关联的 AdSense 帐号。   其中，最为关键的同时最难的条件是4000小时和1000名订阅；「国家/地区」后台设置支持的国家/地区即可；「AdSense」是在频道达到获利门槛后显示注册入口，看似简单却最容易出错，资料要仔细填写，一旦填错后续非常麻烦。《YouTube运营新手最常踩5大坑，最后1个最坑人！》 除了订阅者数量和观看次数要求外，还有内容要求。获利申请的审核是官方人工审核，如果审核者认为频道或视频不符合条件，也是容易无法通过的，审核时间快则一两天，慢的一个多月也有。《YouTube获利政策：这11类内容没有收益》  二、油管广告收益情况如何？\r#\r\r YouTube将部分广告收入（55%）分给相应的Youtuber，就能构成一个良性循环的三赢局面：广告商得到宣传，Youtuber赚钱，油管平台赚钱同时有源源不断的优质内容创作出来。平台把55%的广告收益分给视频创作者，这对自媒体从业者而言，真不算低。    YouTube的千次播放（CPM）的收益差距略大，一般在1-10美元不等。影响视频收益主要因素包括：\n  1:观看地区：发达国家cpm远高于发展中国家，如果你的观众主要来自发达国家收益则更高。\n  2:频道领域：某些领域的内容有更高的CPM，比如数码、经济类就相对高。\n  3:视频时长：超过8分钟的视频，可以无限插入广告，收益更多。\n  4:频道/视频：频道或者某个视频比较优质的，会获得更多优质广告展示。\n  另外，还会受其他重大事件影响，比如2020年受疫情影响，大部分频道的CPM大幅下跌。《新冠疫情对YouTube影响有多大？2020多数频道单价下跌20%以上》\n  三、油管除了广告还能怎么赚钱？\r#\r\r  在油管做内容，广告收益是基本的收入保障，不过大部分YouTuber不会满足于只要广告收入。\n  油管除了一般广告收益方式，还有其他的变现方式。官方提供的变现方法还有：频道会员、商品搁架、超级留言和超级贴纸、YouTube Premium。这些功能需要较高的条件，同时收益不算太高。但自媒体变现总的而言离不开3大变现方式：广告、带货和打赏。\n    此外，国内常用的一些变现方法，在油管也是通用的，常见的有：\n  亚马逊联盟行销：类似国内的淘宝联盟，你帮商家带货后获取一定的佣金。\n  品牌合作推广：频道内容做得好，流量也够多，总会有商家来邀请你合作，这种方式的收益是比较高的。\n  电商带货：不同于联盟行销，联盟行销是帮别人卖自己拿佣金，而自己开店就可以获得更高的利润，当然也得投入更多的资源。\n  粉丝经济：如果你频道的粉丝粘度比较高，可以考虑做依靠粉丝赞助或者粉丝付费，此外目前兴起的直播打赏也是不错的变现方法。\n    这些是比较常见的变现方法，其实变现方法远不止这些。但是能否变现，能否获得更多的收益，其实核心还是靠内容：内容优质，流量多，那怎么变现都可以。\n  最后还想说，如果想在油管创业，最好把眼光放长远同时专心做好内容。做内容是一方面，油管还有很多旁门左道，赚大钱的自媒体团队往往不走寻常路，在此就不宜公开了。\n  如果想在YouTube创业赚钱，建议关注专栏【YouTube运营笔记】，少走弯路，不被忽悠。\n  YouTube闭坑指南：\n  文兄：90%新人必犯的7个错误\n  李大卫：YouTube收益开启全指南\n  文兄：10个错误导致99%频道走向失败\n  迷死任：YouTuber必了解Youtube审核机制\n  文兄：YouTube运营，新手最常踩5大坑！\n  文兄：油管获利政策：这11类内容无收益\n  文兄：YouTube互粉？别把频道玩坏了！\n  文兄：YouTube搬运赚钱？没那么简单\n  文兄：如何在YouTube开通收益赚钱？\n  YouTube运营攻略：\n  文兄：YouTube新频道如何快速涨粉？\n  李大卫：油管什么样的视频最多人看？\n  迷死任：爆款攻略：详解YouTube算法\n  文兄：Youtuber必备的12个网站（全）\n  李大卫：3个营销工具运营效果事半功倍\n  文兄：最全YouTube视频SEO 优化技巧\n  文兄：油管起标题6技巧，打造百万爆款\n  "}),a.add({id:353,href:'/life/docs/english_study/plan/',title:"英语学习计划",section:"英语学习",content:"  计划\n  首先 利用 赖世雄美语听力进行英标学习\n  接着 利用新概念学习\n  "}),a.add({id:354,href:'/life/docs/javadir/middleware/elasticsearch/',title:"Elasticsearch",section:"中间件 ",content:"elasticsearch\r#\r\r elasticsearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java语言开发的，并作为Apache许可条款下的开放源码发布，是一种流行的企业级搜索引擎\n  学习版本7.8(2021年的)  官方地址\nkibana地址(其它版本选择View past releases)\n官方推荐教程\n其它教程\nelasticsearch和kibana版本对应关系\n中文社区\n中文文档5.4\nelasticsearch与数据库的类比\r#\r\r   关系型数据库（比如Mysql） 非关系型数据库（Elasticsearch）     数据库Database 索引Index   表Table 类型Type   数据行Row 文档Document   数据列Column 字段Field   约束 Schema 映射Mapping     总结来说elasticsearch字段的含义可以理解为 数据库:Index 表:Type 行:Document 列:Field 约束:Mapping  HTTP API\r#\r\r创建索引库index\r#\r\r1:创建index\r#\r\r//PUT http://127.0.0.1:9200/shopping  var requestOptions = { method: \u0026#39;PUT\u0026#39;, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;acknowledged\u0026#34;: true, \u0026#34;shards_acknowledged\u0026#34;: true, \u0026#34;index\u0026#34;: \u0026#34;shopping\u0026#34; } 2:然后 PUT INDEX 不能重复去发送\r#\r\r//PUT http://127.0.0.1:9200/shopping  var requestOptions = { method: \u0026#39;PUT\u0026#39;, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;error\u0026#34;: { \u0026#34;root_cause\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;resource_already_exists_exception\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;index [shopping/rsMfEk24SteNXg44dofCJg] already exists\u0026#34;, \u0026#34;index_uuid\u0026#34;: \u0026#34;rsMfEk24SteNXg44dofCJg\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;shopping\u0026#34; } ], \u0026#34;type\u0026#34;: \u0026#34;resource_already_exists_exception\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;index [shopping/rsMfEk24SteNXg44dofCJg] already exists\u0026#34;, \u0026#34;index_uuid\u0026#34;: \u0026#34;rsMfEk24SteNXg44dofCJg\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;shopping\u0026#34; }, \u0026#34;status\u0026#34;: 400 } 3:POST也不能 只能 DELETE, GET, HEAD, PUT\r#\r\r//POST http://127.0.0.1:9200/shopping  var requestOptions = { method: \u0026#39;POST\u0026#39;, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); var result = { \u0026#34;error\u0026#34;: \u0026#34;Incorrect HTTP method for uri [/shopping] and method [POST], allowed: [DELETE, GET, HEAD, PUT]\u0026#34;, \u0026#34;status\u0026#34;: 405 } 4:查询索引库\r#\r\r// GET http://127.0.0.1:9200/shopping var requestOptions = { method: \u0026#39;GET\u0026#39;, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;shopping\u0026#34;: { \u0026#34;aliases\u0026#34;: {}, \u0026#34;mappings\u0026#34;: {}, \u0026#34;settings\u0026#34;: { \u0026#34;index\u0026#34;: { \u0026#34;creation_date\u0026#34;: \u0026#34;1689993056564\u0026#34;, \u0026#34;number_of_shards\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;number_of_replicas\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;uuid\u0026#34;: \u0026#34;rsMfEk24SteNXg44dofCJg\u0026#34;, \u0026#34;version\u0026#34;: { \u0026#34;created\u0026#34;: \u0026#34;7080099\u0026#34; }, \u0026#34;provided_name\u0026#34;: \u0026#34;shopping\u0026#34; } } } } 文档 增删查改\r#\r\r添加默认文档\r#\r\r// POST http://127.0.0.1:9200/shopping/_doc  var myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; }); var requestOptions = { method: \u0026#39;POST\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_doc\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); // 成果结果 // 注意不能多次生成 id=zhV_fIkB5CwRTRdtywp8 是ES生成的标识符  let result = { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;zhV_fIkB5CwRTRdtywp8\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 4, \u0026#34;_primary_term\u0026#34;: 1 } 添加自定义id的默认文档\r#\r\r// POST http://127.0.0.1:9200/shopping/_doc/1001  var myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;AG_PRICE\u0026#34;: 4.3, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;香蕉\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13103\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; }); var requestOptions = { method: \u0026#39;POST\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_doc/1001\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;1001\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 9, \u0026#34;_primary_term\u0026#34;: 1 } 文档修改\r#\r\rvar myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689609600000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689665740000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34;, \u0026#34;ROWNUM_\u0026#34;: 150 }); var requestOptions = { method: \u0026#39;PUT\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_doc/1001\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); // 成果结果  let result = { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;1001\u0026#34;, \u0026#34;_version\u0026#34;: 2, \u0026#34;result\u0026#34;: \u0026#34;updated\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 5, \u0026#34;_primary_term\u0026#34;: 1 } 文档修改(局部修改)\r#\r\rvar myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;doc\u0026#34;: { \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果(局部修改)\u0026#34; } }); var requestOptions = { method: \u0026#39;POST\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_update/1001\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;1001\u0026#34;, \u0026#34;_version\u0026#34;: 3, \u0026#34;result\u0026#34;: \u0026#34;updated\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 6, \u0026#34;_primary_term\u0026#34;: 1 }; 文档删除（根据id）\r#\r\rvar requestOptions = { method: \u0026#39;DELETE\u0026#39;, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_doc/1001\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;1001\u0026#34;, \u0026#34;_version\u0026#34;: 4, \u0026#34;result\u0026#34;: \u0026#34;deleted\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 7, \u0026#34;_primary_term\u0026#34;: 1 }; //重复删除 result = { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;1001\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;result\u0026#34;: \u0026#34;not_found\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 8, \u0026#34;_primary_term\u0026#34;: 1 } 文档全查询(url get)\r#\r\rvar requestOptions = { method: \u0026#39;GET\u0026#39;, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 0, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 5, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: 1.0, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;TxVFfIkB5CwRTRdtMwUW\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 14.5, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13201\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;YhVwfIkB5CwRTRdtrgkD\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 14.5, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13201\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;pBV-fIkB5CwRTRdtEgqc\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;zhV_fIkB5CwRTRdtywp8\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;1001\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 4.3, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;香蕉\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13103\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } } ] } } 文档 查询\r#\r\r简单条件查询\r#\r\rvar requestOptions = { method: \u0026#39;GET\u0026#39;, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search?q=CRAFT_NAME=芒果\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 26, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 2, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: 1.8790548, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;pBV-fIkB5CwRTRdtEgqc\u0026#34;, \u0026#34;_score\u0026#34;: 1.8790548, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;zhV_fIkB5CwRTRdtywp8\u0026#34;, \u0026#34;_score\u0026#34;: 1.8790548, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } } ] } } 简单条件查询json方式\r#\r\rvar myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;query\u0026#34;: { \u0026#34;match\u0026#34;: { \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34; } } }); var requestOptions = { method: \u0026#39;GET\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 0, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 2, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: 1.8790548, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;pBV-fIkB5CwRTRdtEgqc\u0026#34;, \u0026#34;_score\u0026#34;: 1.8790548, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;zhV_fIkB5CwRTRdtywp8\u0026#34;, \u0026#34;_score\u0026#34;: 1.8790548, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } } ] } } 文档全查询(json)\r#\r\rvar myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;query\u0026#34;: { \u0026#34;match_all\u0026#34;: {} } }); var requestOptions = { method: \u0026#39;GET\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 0, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 5, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: 1.0, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;TxVFfIkB5CwRTRdtMwUW\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 14.5, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13201\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;YhVwfIkB5CwRTRdtrgkD\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 14.5, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13201\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;pBV-fIkB5CwRTRdtEgqc\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;zhV_fIkB5CwRTRdtywp8\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;1001\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 4.3, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;香蕉\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13103\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } } ] } } 文档全查询(json+分页)\r#\r\rvar myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;query\u0026#34;: { \u0026#34;match_all\u0026#34;: {} }, \u0026#34;from\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;2\u0026#34; }); var requestOptions = { method: \u0026#39;GET\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 100, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 5, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: 1.0, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;TxVFfIkB5CwRTRdtMwUW\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 14.5, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13201\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;YhVwfIkB5CwRTRdtrgkD\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 14.5, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13201\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } } ] } } 文档全查询(json+分页+返回指定对象字段)\r#\r\rvar myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;query\u0026#34;: { \u0026#34;match_all\u0026#34;: {} }, \u0026#34;from\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;2\u0026#34;, \u0026#34;_source\u0026#34;: [ \u0026#34;AG_PRICE\u0026#34;, \u0026#34;CRAFT_NAME\u0026#34;, \u0026#34;C_UNIT\u0026#34;, \u0026#34;EUD_NAME\u0026#34; ] }); var requestOptions = { method: \u0026#39;GET\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 0, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 5, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: 1.0, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;YhVwfIkB5CwRTRdtrgkD\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 14.5, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;pBV-fIkB5CwRTRdtEgqc\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } } ] } } 文档全查询(json+分页+指定排序)\r#\r\rvar myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;query\u0026#34;: { \u0026#34;match_all\u0026#34;: {} }, \u0026#34;from\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;2\u0026#34;, \u0026#34;_source\u0026#34;: [ \u0026#34;AG_PRICE\u0026#34;, \u0026#34;CRAFT_NAME\u0026#34;, \u0026#34;C_UNIT\u0026#34;, \u0026#34;EUD_NAME\u0026#34;, \u0026#34;ID\u0026#34; ], \u0026#34;sort\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: { \u0026#34;order\u0026#34;: \u0026#34;desc\u0026#34; }, \u0026#34;ID\u0026#34;: { \u0026#34;order\u0026#34;: \u0026#34;asc\u0026#34; } } }); var requestOptions = { method: \u0026#39;GET\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 0, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 5, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: null, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;YhVwfIkB5CwRTRdtrgkD\u0026#34;, \u0026#34;_score\u0026#34;: null, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 14.5, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; }, \u0026#34;sort\u0026#34;: [ 14.5, 71860010 ] }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;pBV-fIkB5CwRTRdtEgqc\u0026#34;, \u0026#34;_score\u0026#34;: null, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; }, \u0026#34;sort\u0026#34;: [ 10.0, 71860010 ] } ] } } 文档 高级查询\r#\r\r批量插入\r#\r\r/* {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;shopping\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:20540}} {\u0026#34;AG_PRICE\u0026#34;:18,\u0026#34;CRAFT_NAME\u0026#34;:\u0026#34;芒果\u0026#34;,\u0026#34;C_UNIT\u0026#34;:\u0026#34;元/公斤\u0026#34;,\u0026#34;GET_P_DATE\u0026#34;:1689955200000,\u0026#34;CRAFT_INDEX\u0026#34;:\u0026#34;13228\u0026#34;,\u0026#34;PAR_INDEX\u0026#34;:13076,\u0026#34;PROMULGATE_DATE\u0026#34;:1690011326000,\u0026#34;ID\u0026#34;:20540,\u0026#34;P_INDEX\u0026#34;:\u0026#34;110500\u0026#34;,\u0026#34;EUD_PIC\u0026#34;:\u0026#34;/tc/20210328232229261943.jpg\u0026#34;,\u0026#34;EUD_NAME\u0026#34;:\u0026#34;北京朝阳区大洋路综合市场\u0026#34;} {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;shopping\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:20531}} {\u0026#34;AG_PRICE\u0026#34;:14,\u0026#34;CRAFT_NAME\u0026#34;:\u0026#34;芒果\u0026#34;,\u0026#34;C_UNIT\u0026#34;:\u0026#34;元/公斤\u0026#34;,\u0026#34;GET_P_DATE\u0026#34;:1689955200000,\u0026#34;CRAFT_INDEX\u0026#34;:\u0026#34;13228\u0026#34;,\u0026#34;PAR_INDEX\u0026#34;:13076,\u0026#34;PROMULGATE_DATE\u0026#34;:1690011312000,\u0026#34;ID\u0026#34;:20531,\u0026#34;P_INDEX\u0026#34;:\u0026#34;110600\u0026#34;,\u0026#34;EUD_PIC\u0026#34;:\u0026#34;/tc/20210422093833425915.jpeg\u0026#34;,\u0026#34;EUD_NAME\u0026#34;:\u0026#34;北京新发地农副产品批发市场信息中心\u0026#34;} {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;shopping\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:20531}} {\u0026#34;AG_PRICE\u0026#34;:22,\u0026#34;CRAFT_NAME\u0026#34;:\u0026#34;芒果(台农一号)\u0026#34;,\u0026#34;C_UNIT\u0026#34;:\u0026#34;元/公斤\u0026#34;,\u0026#34;GET_P_DATE\u0026#34;:1689955200000,\u0026#34;CRAFT_INDEX\u0026#34;:\u0026#34;15052367\u0026#34;,\u0026#34;PAR_INDEX\u0026#34;:13076,\u0026#34;PROMULGATE_DATE\u0026#34;:1690011314000,\u0026#34;ID\u0026#34;:20531,\u0026#34;P_INDEX\u0026#34;:\u0026#34;110600\u0026#34;,\u0026#34;EUD_PIC\u0026#34;:\u0026#34;/tc/20210422093833425915.jpeg\u0026#34;,\u0026#34;EUD_NAME\u0026#34;:\u0026#34;北京新发地农副产品批发市场信息中心\u0026#34;} {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;shopping\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:20536}} {\u0026#34;AG_PRICE\u0026#34;:20,\u0026#34;CRAFT_NAME\u0026#34;:\u0026#34;芒果\u0026#34;,\u0026#34;C_UNIT\u0026#34;:\u0026#34;元/公斤\u0026#34;,\u0026#34;GET_P_DATE\u0026#34;:1689955200000,\u0026#34;CRAFT_INDEX\u0026#34;:\u0026#34;13228\u0026#34;,\u0026#34;PAR_INDEX\u0026#34;:13076,\u0026#34;PROMULGATE_DATE\u0026#34;:1690011334000,\u0026#34;ID\u0026#34;:20536,\u0026#34;P_INDEX\u0026#34;:\u0026#34;111200\u0026#34;,\u0026#34;EUD_PIC\u0026#34;:\u0026#34;/tc/20210330163120050216.jpg\u0026#34;,\u0026#34;EUD_NAME\u0026#34;:\u0026#34;北京八里桥农产品中心批发市场有限公司\u0026#34;} {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;shopping\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:20570}} {\u0026#34;AG_PRICE\u0026#34;:8,\u0026#34;CRAFT_NAME\u0026#34;:\u0026#34;芒果\u0026#34;,\u0026#34;C_UNIT\u0026#34;:\u0026#34;元/公斤\u0026#34;,\u0026#34;GET_P_DATE\u0026#34;:1689955200000,\u0026#34;CRAFT_INDEX\u0026#34;:\u0026#34;13228\u0026#34;,\u0026#34;PAR_INDEX\u0026#34;:13076,\u0026#34;PROMULGATE_DATE\u0026#34;:1690011326000,\u0026#34;ID\u0026#34;:20570,\u0026#34;P_INDEX\u0026#34;:\u0026#34;121100\u0026#34;,\u0026#34;EUD_PIC\u0026#34;:\u0026#34;/tc/20200330233852289284.jpg\u0026#34;,\u0026#34;EUD_NAME\u0026#34;:\u0026#34;天津市红旗农贸综合批发市场有限公司\u0026#34;} {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;shopping\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:71830481}} {\u0026#34;AG_PRICE\u0026#34;:6,\u0026#34;CRAFT_NAME\u0026#34;:\u0026#34;芒果\u0026#34;,\u0026#34;C_UNIT\u0026#34;:\u0026#34;元/公斤\u0026#34;,\u0026#34;GET_P_DATE\u0026#34;:1689955200000,\u0026#34;CRAFT_INDEX\u0026#34;:\u0026#34;13228\u0026#34;,\u0026#34;PAR_INDEX\u0026#34;:13076,\u0026#34;PROMULGATE_DATE\u0026#34;:1690011322000,\u0026#34;ID\u0026#34;:71830481,\u0026#34;P_INDEX\u0026#34;:\u0026#34;140107\u0026#34;,\u0026#34;EUD_PIC\u0026#34;:\u0026#34;/tc/20220412164849161585.jpg\u0026#34;,\u0026#34;EUD_NAME\u0026#34;:\u0026#34;山西太原丈子头农产品物流园（原城东利民）\u0026#34;} {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;shopping\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:2550411}} {\u0026#34;AG_PRICE\u0026#34;:6,\u0026#34;CRAFT_NAME\u0026#34;:\u0026#34;芒果\u0026#34;,\u0026#34;C_UNIT\u0026#34;:\u0026#34;元/公斤\u0026#34;,\u0026#34;GET_P_DATE\u0026#34;:1689955200000,\u0026#34;CRAFT_INDEX\u0026#34;:\u0026#34;13228\u0026#34;,\u0026#34;PAR_INDEX\u0026#34;:13076,\u0026#34;PROMULGATE_DATE\u0026#34;:1690011323000,\u0026#34;ID\u0026#34;:2550411,\u0026#34;P_INDEX\u0026#34;:\u0026#34;140109\u0026#34;,\u0026#34;EUD_PIC\u0026#34;:\u0026#34;/tc/20201104152043439244.jpg\u0026#34;,\u0026#34;EUD_NAME\u0026#34;:\u0026#34;山西省太原市河西农产品有限公司\u0026#34;} {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;shopping\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:45065}} {\u0026#34;AG_PRICE\u0026#34;:8,\u0026#34;CRAFT_NAME\u0026#34;:\u0026#34;芒果\u0026#34;,\u0026#34;C_UNIT\u0026#34;:\u0026#34;元/公斤\u0026#34;,\u0026#34;GET_P_DATE\u0026#34;:1689955200000,\u0026#34;CRAFT_INDEX\u0026#34;:\u0026#34;13228\u0026#34;,\u0026#34;PAR_INDEX\u0026#34;:13076,\u0026#34;PROMULGATE_DATE\u0026#34;:1690011327000,\u0026#34;ID\u0026#34;:45065,\u0026#34;P_INDEX\u0026#34;:\u0026#34;140401\u0026#34;,\u0026#34;EUD_PIC\u0026#34;:\u0026#34;/tc/20201030190259796033.jpg\u0026#34;,\u0026#34;EUD_NAME\u0026#34;:\u0026#34;长治市金鑫瓜果批发市场\u0026#34;} {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;shopping\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:20969}} {\u0026#34;AG_PRICE\u0026#34;:8,\u0026#34;CRAFT_NAME\u0026#34;:\u0026#34;芒果\u0026#34;,\u0026#34;C_UNIT\u0026#34;:\u0026#34;元/公斤\u0026#34;,\u0026#34;GET_P_DATE\u0026#34;:1689955200000,\u0026#34;CRAFT_INDEX\u0026#34;:\u0026#34;13228\u0026#34;,\u0026#34;PAR_INDEX\u0026#34;:13076,\u0026#34;PROMULGATE_DATE\u0026#34;:1690011333000,\u0026#34;ID\u0026#34;:20969,\u0026#34;P_INDEX\u0026#34;:\u0026#34;320201\u0026#34;,\u0026#34;EUD_PIC\u0026#34;:\u0026#34;/tc/20221127110546103791.jpg\u0026#34;,\u0026#34;EUD_NAME\u0026#34;:\u0026#34;江苏无锡朝阳农产品大市场\u0026#34;} {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;shopping\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:20959}} {\u0026#34;AG_PRICE\u0026#34;:12,\u0026#34;CRAFT_NAME\u0026#34;:\u0026#34;芒果\u0026#34;,\u0026#34;C_UNIT\u0026#34;:\u0026#34;元/公斤\u0026#34;,\u0026#34;GET_P_DATE\u0026#34;:1689955200000,\u0026#34;CRAFT_INDEX\u0026#34;:\u0026#34;13228\u0026#34;,\u0026#34;PAR_INDEX\u0026#34;:13076,\u0026#34;PROMULGATE_DATE\u0026#34;:1690011319000,\u0026#34;ID\u0026#34;:20959,\u0026#34;P_INDEX\u0026#34;:\u0026#34;320401\u0026#34;,\u0026#34;EUD_PIC\u0026#34;:\u0026#34;/tc/20200817104333886984.jpg\u0026#34;,\u0026#34;EUD_NAME\u0026#34;:\u0026#34;江苏凌家塘市场发展有限公司\u0026#34;} * */ var myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = \u0026#34;{\\\u0026#34;create\\\u0026#34;:{\\\u0026#34;_index\\\u0026#34;:\\\u0026#34;shopping\\\u0026#34;,\\\u0026#34;_type\\\u0026#34;:\\\u0026#34;_doc\\\u0026#34;,\\\u0026#34;_id\\\u0026#34;:20540}}\\r\\n{\\\u0026#34;AG_PRICE\\\u0026#34;:18,\\\u0026#34;CRAFT_NAME\\\u0026#34;:\\\u0026#34;芒果\\\u0026#34;,\\\u0026#34;C_UNIT\\\u0026#34;:\\\u0026#34;元/公斤\\\u0026#34;,\\\u0026#34;GET_P_DATE\\\u0026#34;:1689955200000,\\\u0026#34;CRAFT_INDEX\\\u0026#34;:\\\u0026#34;13228\\\u0026#34;,\\\u0026#34;PAR_INDEX\\\u0026#34;:13076,\\\u0026#34;PROMULGATE_DATE\\\u0026#34;:1690011326000,\\\u0026#34;ID\\\u0026#34;:20540,\\\u0026#34;P_INDEX\\\u0026#34;:\\\u0026#34;110500\\\u0026#34;,\\\u0026#34;EUD_PIC\\\u0026#34;:\\\u0026#34;/tc/20210328232229261943.jpg\\\u0026#34;,\\\u0026#34;EUD_NAME\\\u0026#34;:\\\u0026#34;北京朝阳区大洋路综合市场\\\u0026#34;}\\r\\n{\\\u0026#34;create\\\u0026#34;:{\\\u0026#34;_index\\\u0026#34;:\\\u0026#34;shopping\\\u0026#34;,\\\u0026#34;_type\\\u0026#34;:\\\u0026#34;_doc\\\u0026#34;,\\\u0026#34;_id\\\u0026#34;:20531}}\\r\\n{\\\u0026#34;AG_PRICE\\\u0026#34;:14,\\\u0026#34;CRAFT_NAME\\\u0026#34;:\\\u0026#34;芒果\\\u0026#34;,\\\u0026#34;C_UNIT\\\u0026#34;:\\\u0026#34;元/公斤\\\u0026#34;,\\\u0026#34;GET_P_DATE\\\u0026#34;:1689955200000,\\\u0026#34;CRAFT_INDEX\\\u0026#34;:\\\u0026#34;13228\\\u0026#34;,\\\u0026#34;PAR_INDEX\\\u0026#34;:13076,\\\u0026#34;PROMULGATE_DATE\\\u0026#34;:1690011312000,\\\u0026#34;ID\\\u0026#34;:20531,\\\u0026#34;P_INDEX\\\u0026#34;:\\\u0026#34;110600\\\u0026#34;,\\\u0026#34;EUD_PIC\\\u0026#34;:\\\u0026#34;/tc/20210422093833425915.jpeg\\\u0026#34;,\\\u0026#34;EUD_NAME\\\u0026#34;:\\\u0026#34;北京新发地农副产品批发市场信息中心\\\u0026#34;}\\r\\n{\\\u0026#34;create\\\u0026#34;:{\\\u0026#34;_index\\\u0026#34;:\\\u0026#34;shopping\\\u0026#34;,\\\u0026#34;_type\\\u0026#34;:\\\u0026#34;_doc\\\u0026#34;,\\\u0026#34;_id\\\u0026#34;:20531}}\\r\\n{\\\u0026#34;AG_PRICE\\\u0026#34;:22,\\\u0026#34;CRAFT_NAME\\\u0026#34;:\\\u0026#34;芒果(台农一号)\\\u0026#34;,\\\u0026#34;C_UNIT\\\u0026#34;:\\\u0026#34;元/公斤\\\u0026#34;,\\\u0026#34;GET_P_DATE\\\u0026#34;:1689955200000,\\\u0026#34;CRAFT_INDEX\\\u0026#34;:\\\u0026#34;15052367\\\u0026#34;,\\\u0026#34;PAR_INDEX\\\u0026#34;:13076,\\\u0026#34;PROMULGATE_DATE\\\u0026#34;:1690011314000,\\\u0026#34;ID\\\u0026#34;:20531,\\\u0026#34;P_INDEX\\\u0026#34;:\\\u0026#34;110600\\\u0026#34;,\\\u0026#34;EUD_PIC\\\u0026#34;:\\\u0026#34;/tc/20210422093833425915.jpeg\\\u0026#34;,\\\u0026#34;EUD_NAME\\\u0026#34;:\\\u0026#34;北京新发地农副产品批发市场信息中心\\\u0026#34;}\\r\\n{\\\u0026#34;create\\\u0026#34;:{\\\u0026#34;_index\\\u0026#34;:\\\u0026#34;shopping\\\u0026#34;,\\\u0026#34;_type\\\u0026#34;:\\\u0026#34;_doc\\\u0026#34;,\\\u0026#34;_id\\\u0026#34;:20536}}\\r\\n{\\\u0026#34;AG_PRICE\\\u0026#34;:20,\\\u0026#34;CRAFT_NAME\\\u0026#34;:\\\u0026#34;芒果\\\u0026#34;,\\\u0026#34;C_UNIT\\\u0026#34;:\\\u0026#34;元/公斤\\\u0026#34;,\\\u0026#34;GET_P_DATE\\\u0026#34;:1689955200000,\\\u0026#34;CRAFT_INDEX\\\u0026#34;:\\\u0026#34;13228\\\u0026#34;,\\\u0026#34;PAR_INDEX\\\u0026#34;:13076,\\\u0026#34;PROMULGATE_DATE\\\u0026#34;:1690011334000,\\\u0026#34;ID\\\u0026#34;:20536,\\\u0026#34;P_INDEX\\\u0026#34;:\\\u0026#34;111200\\\u0026#34;,\\\u0026#34;EUD_PIC\\\u0026#34;:\\\u0026#34;/tc/20210330163120050216.jpg\\\u0026#34;,\\\u0026#34;EUD_NAME\\\u0026#34;:\\\u0026#34;北京八里桥农产品中心批发市场有限公司\\\u0026#34;}\\r\\n{\\\u0026#34;create\\\u0026#34;:{\\\u0026#34;_index\\\u0026#34;:\\\u0026#34;shopping\\\u0026#34;,\\\u0026#34;_type\\\u0026#34;:\\\u0026#34;_doc\\\u0026#34;,\\\u0026#34;_id\\\u0026#34;:20570}}\\r\\n{\\\u0026#34;AG_PRICE\\\u0026#34;:8,\\\u0026#34;CRAFT_NAME\\\u0026#34;:\\\u0026#34;芒果\\\u0026#34;,\\\u0026#34;C_UNIT\\\u0026#34;:\\\u0026#34;元/公斤\\\u0026#34;,\\\u0026#34;GET_P_DATE\\\u0026#34;:1689955200000,\\\u0026#34;CRAFT_INDEX\\\u0026#34;:\\\u0026#34;13228\\\u0026#34;,\\\u0026#34;PAR_INDEX\\\u0026#34;:13076,\\\u0026#34;PROMULGATE_DATE\\\u0026#34;:1690011326000,\\\u0026#34;ID\\\u0026#34;:20570,\\\u0026#34;P_INDEX\\\u0026#34;:\\\u0026#34;121100\\\u0026#34;,\\\u0026#34;EUD_PIC\\\u0026#34;:\\\u0026#34;/tc/20200330233852289284.jpg\\\u0026#34;,\\\u0026#34;EUD_NAME\\\u0026#34;:\\\u0026#34;天津市红旗农贸综合批发市场有限公司\\\u0026#34;}\\r\\n{\\\u0026#34;create\\\u0026#34;:{\\\u0026#34;_index\\\u0026#34;:\\\u0026#34;shopping\\\u0026#34;,\\\u0026#34;_type\\\u0026#34;:\\\u0026#34;_doc\\\u0026#34;,\\\u0026#34;_id\\\u0026#34;:71830481}}\\r\\n{\\\u0026#34;AG_PRICE\\\u0026#34;:6,\\\u0026#34;CRAFT_NAME\\\u0026#34;:\\\u0026#34;芒果\\\u0026#34;,\\\u0026#34;C_UNIT\\\u0026#34;:\\\u0026#34;元/公斤\\\u0026#34;,\\\u0026#34;GET_P_DATE\\\u0026#34;:1689955200000,\\\u0026#34;CRAFT_INDEX\\\u0026#34;:\\\u0026#34;13228\\\u0026#34;,\\\u0026#34;PAR_INDEX\\\u0026#34;:13076,\\\u0026#34;PROMULGATE_DATE\\\u0026#34;:1690011322000,\\\u0026#34;ID\\\u0026#34;:71830481,\\\u0026#34;P_INDEX\\\u0026#34;:\\\u0026#34;140107\\\u0026#34;,\\\u0026#34;EUD_PIC\\\u0026#34;:\\\u0026#34;/tc/20220412164849161585.jpg\\\u0026#34;,\\\u0026#34;EUD_NAME\\\u0026#34;:\\\u0026#34;山西太原丈子头农产品物流园（原城东利民）\\\u0026#34;}\\r\\n{\\\u0026#34;create\\\u0026#34;:{\\\u0026#34;_index\\\u0026#34;:\\\u0026#34;shopping\\\u0026#34;,\\\u0026#34;_type\\\u0026#34;:\\\u0026#34;_doc\\\u0026#34;,\\\u0026#34;_id\\\u0026#34;:2550411}}\\r\\n{\\\u0026#34;AG_PRICE\\\u0026#34;:6,\\\u0026#34;CRAFT_NAME\\\u0026#34;:\\\u0026#34;芒果\\\u0026#34;,\\\u0026#34;C_UNIT\\\u0026#34;:\\\u0026#34;元/公斤\\\u0026#34;,\\\u0026#34;GET_P_DATE\\\u0026#34;:1689955200000,\\\u0026#34;CRAFT_INDEX\\\u0026#34;:\\\u0026#34;13228\\\u0026#34;,\\\u0026#34;PAR_INDEX\\\u0026#34;:13076,\\\u0026#34;PROMULGATE_DATE\\\u0026#34;:1690011323000,\\\u0026#34;ID\\\u0026#34;:2550411,\\\u0026#34;P_INDEX\\\u0026#34;:\\\u0026#34;140109\\\u0026#34;,\\\u0026#34;EUD_PIC\\\u0026#34;:\\\u0026#34;/tc/20201104152043439244.jpg\\\u0026#34;,\\\u0026#34;EUD_NAME\\\u0026#34;:\\\u0026#34;山西省太原市河西农产品有限公司\\\u0026#34;}\\r\\n{\\\u0026#34;create\\\u0026#34;:{\\\u0026#34;_index\\\u0026#34;:\\\u0026#34;shopping\\\u0026#34;,\\\u0026#34;_type\\\u0026#34;:\\\u0026#34;_doc\\\u0026#34;,\\\u0026#34;_id\\\u0026#34;:45065}}\\r\\n{\\\u0026#34;AG_PRICE\\\u0026#34;:8,\\\u0026#34;CRAFT_NAME\\\u0026#34;:\\\u0026#34;芒果\\\u0026#34;,\\\u0026#34;C_UNIT\\\u0026#34;:\\\u0026#34;元/公斤\\\u0026#34;,\\\u0026#34;GET_P_DATE\\\u0026#34;:1689955200000,\\\u0026#34;CRAFT_INDEX\\\u0026#34;:\\\u0026#34;13228\\\u0026#34;,\\\u0026#34;PAR_INDEX\\\u0026#34;:13076,\\\u0026#34;PROMULGATE_DATE\\\u0026#34;:1690011327000,\\\u0026#34;ID\\\u0026#34;:45065,\\\u0026#34;P_INDEX\\\u0026#34;:\\\u0026#34;140401\\\u0026#34;,\\\u0026#34;EUD_PIC\\\u0026#34;:\\\u0026#34;/tc/20201030190259796033.jpg\\\u0026#34;,\\\u0026#34;EUD_NAME\\\u0026#34;:\\\u0026#34;长治市金鑫瓜果批发市场\\\u0026#34;}\\r\\n{\\\u0026#34;create\\\u0026#34;:{\\\u0026#34;_index\\\u0026#34;:\\\u0026#34;shopping\\\u0026#34;,\\\u0026#34;_type\\\u0026#34;:\\\u0026#34;_doc\\\u0026#34;,\\\u0026#34;_id\\\u0026#34;:20969}}\\r\\n{\\\u0026#34;AG_PRICE\\\u0026#34;:8,\\\u0026#34;CRAFT_NAME\\\u0026#34;:\\\u0026#34;芒果\\\u0026#34;,\\\u0026#34;C_UNIT\\\u0026#34;:\\\u0026#34;元/公斤\\\u0026#34;,\\\u0026#34;GET_P_DATE\\\u0026#34;:1689955200000,\\\u0026#34;CRAFT_INDEX\\\u0026#34;:\\\u0026#34;13228\\\u0026#34;,\\\u0026#34;PAR_INDEX\\\u0026#34;:13076,\\\u0026#34;PROMULGATE_DATE\\\u0026#34;:1690011333000,\\\u0026#34;ID\\\u0026#34;:20969,\\\u0026#34;P_INDEX\\\u0026#34;:\\\u0026#34;320201\\\u0026#34;,\\\u0026#34;EUD_PIC\\\u0026#34;:\\\u0026#34;/tc/20221127110546103791.jpg\\\u0026#34;,\\\u0026#34;EUD_NAME\\\u0026#34;:\\\u0026#34;江苏无锡朝阳农产品大市场\\\u0026#34;}\\r\\n{\\\u0026#34;create\\\u0026#34;:{\\\u0026#34;_index\\\u0026#34;:\\\u0026#34;shopping\\\u0026#34;,\\\u0026#34;_type\\\u0026#34;:\\\u0026#34;_doc\\\u0026#34;,\\\u0026#34;_id\\\u0026#34;:20959}}\\r\\n{\\\u0026#34;AG_PRICE\\\u0026#34;:12,\\\u0026#34;CRAFT_NAME\\\u0026#34;:\\\u0026#34;芒果\\\u0026#34;,\\\u0026#34;C_UNIT\\\u0026#34;:\\\u0026#34;元/公斤\\\u0026#34;,\\\u0026#34;GET_P_DATE\\\u0026#34;:1689955200000,\\\u0026#34;CRAFT_INDEX\\\u0026#34;:\\\u0026#34;13228\\\u0026#34;,\\\u0026#34;PAR_INDEX\\\u0026#34;:13076,\\\u0026#34;PROMULGATE_DATE\\\u0026#34;:1690011319000,\\\u0026#34;ID\\\u0026#34;:20959,\\\u0026#34;P_INDEX\\\u0026#34;:\\\u0026#34;320401\\\u0026#34;,\\\u0026#34;EUD_PIC\\\u0026#34;:\\\u0026#34;/tc/20200817104333886984.jpg\\\u0026#34;,\\\u0026#34;EUD_NAME\\\u0026#34;:\\\u0026#34;江苏凌家塘市场发展有限公司\\\u0026#34;}\\r\\n\u0026#34;; var requestOptions = { method: \u0026#39;POST\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_doc/_bulk\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 620, \u0026#34;errors\u0026#34;: true, \u0026#34;items\u0026#34;: [ { \u0026#34;create\u0026#34;: { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20540\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 11, \u0026#34;_primary_term\u0026#34;: 1, \u0026#34;status\u0026#34;: 201 } }, { \u0026#34;create\u0026#34;: { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20531\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 12, \u0026#34;_primary_term\u0026#34;: 1, \u0026#34;status\u0026#34;: 201 } }, { \u0026#34;create\u0026#34;: { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20531\u0026#34;, \u0026#34;status\u0026#34;: 409, \u0026#34;error\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;version_conflict_engine_exception\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;[20531]: version conflict, document already exists (current version [1])\u0026#34;, \u0026#34;index_uuid\u0026#34;: \u0026#34;rsMfEk24SteNXg44dofCJg\u0026#34;, \u0026#34;shard\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;shopping\u0026#34; } } }, { \u0026#34;create\u0026#34;: { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20536\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 13, \u0026#34;_primary_term\u0026#34;: 1, \u0026#34;status\u0026#34;: 201 } }, { \u0026#34;create\u0026#34;: { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20570\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 14, \u0026#34;_primary_term\u0026#34;: 1, \u0026#34;status\u0026#34;: 201 } }, { \u0026#34;create\u0026#34;: { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;71830481\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 15, \u0026#34;_primary_term\u0026#34;: 1, \u0026#34;status\u0026#34;: 201 } }, { \u0026#34;create\u0026#34;: { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;2550411\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 16, \u0026#34;_primary_term\u0026#34;: 1, \u0026#34;status\u0026#34;: 201 } }, { \u0026#34;create\u0026#34;: { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;45065\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 17, \u0026#34;_primary_term\u0026#34;: 1, \u0026#34;status\u0026#34;: 201 } }, { \u0026#34;create\u0026#34;: { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20969\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 18, \u0026#34;_primary_term\u0026#34;: 1, \u0026#34;status\u0026#34;: 201 } }, { \u0026#34;create\u0026#34;: { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20959\u0026#34;, \u0026#34;_version\u0026#34;: 1, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34;, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;successful\u0026#34;: 1, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;_seq_no\u0026#34;: 19, \u0026#34;_primary_term\u0026#34;: 1, \u0026#34;status\u0026#34;: 201 } } ] } 文档 多条件查询 must (相当于数据库and)\r#\r\rvar myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;query\u0026#34;: { \u0026#34;bool\u0026#34;: { \u0026#34;must\u0026#34;: [ { \u0026#34;match\u0026#34;: { \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34; } }, { \u0026#34;match\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: \u0026#34;10\u0026#34; } } ] } }, \u0026#34;from\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;2\u0026#34;, \u0026#34;_source\u0026#34;: [ \u0026#34;AG_PRICE\u0026#34;, \u0026#34;CRAFT_NAME\u0026#34;, \u0026#34;C_UNIT\u0026#34;, \u0026#34;EUD_NAME\u0026#34;, \u0026#34;ID\u0026#34; ], \u0026#34;sort\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: { \u0026#34;order\u0026#34;: \u0026#34;desc\u0026#34; }, \u0026#34;ID\u0026#34;: { \u0026#34;order\u0026#34;: \u0026#34;asc\u0026#34; } } }); var requestOptions = { method: \u0026#39;GET\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 101, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 2, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: null, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;zhV_fIkB5CwRTRdtywp8\u0026#34;, \u0026#34;_score\u0026#34;: null, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; }, \u0026#34;sort\u0026#34;: [ 10.0, 71860010 ] } ] } } 文档 多条件查询 should (相当于数据库or)\r#\r\rvar myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;query\u0026#34;: { \u0026#34;bool\u0026#34;: { \u0026#34;should\u0026#34;: [ { \u0026#34;match\u0026#34;: { \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34; } }, { \u0026#34;match\u0026#34;: { \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34; } } ] } }, \u0026#34;from\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;2\u0026#34;, \u0026#34;_source\u0026#34;: [ \u0026#34;AG_PRICE\u0026#34;, \u0026#34;CRAFT_NAME\u0026#34;, \u0026#34;C_UNIT\u0026#34;, \u0026#34;EUD_NAME\u0026#34;, \u0026#34;ID\u0026#34; ], \u0026#34;sort\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: { \u0026#34;order\u0026#34;: \u0026#34;desc\u0026#34; }, \u0026#34;ID\u0026#34;: { \u0026#34;order\u0026#34;: \u0026#34;asc\u0026#34; } } }); var requestOptions = { method: \u0026#39;GET\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 7, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 14, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: null, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20540\u0026#34;, \u0026#34;_score\u0026#34;: null, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 18, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;ID\u0026#34;: 20540, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;北京朝阳区大洋路综合市场\u0026#34; }, \u0026#34;sort\u0026#34;: [ 18.0, 20540 ] }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;TxVFfIkB5CwRTRdtMwUW\u0026#34;, \u0026#34;_score\u0026#34;: null, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 14.5, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; }, \u0026#34;sort\u0026#34;: [ 14.5, 71860010 ] } ] } } 文档 多条件查询 range 范围\r#\r\rfilter 过滤 range 所有数字范围 gt 大于\nvar myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;query\u0026#34;: { \u0026#34;bool\u0026#34;: { \u0026#34;should\u0026#34;: [ { \u0026#34;match\u0026#34;: { \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34; } }, { \u0026#34;match\u0026#34;: { \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34; } } ], \u0026#34;filter\u0026#34;: { \u0026#34;range\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: { \u0026#34;gt\u0026#34;: \u0026#34;14\u0026#34; } } } } }, \u0026#34;from\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;12\u0026#34;, \u0026#34;_source\u0026#34;: [ \u0026#34;AG_PRICE\u0026#34;, \u0026#34;CRAFT_NAME\u0026#34;, \u0026#34;C_UNIT\u0026#34;, \u0026#34;EUD_NAME\u0026#34;, \u0026#34;ID\u0026#34; ], \u0026#34;sort\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: { \u0026#34;order\u0026#34;: \u0026#34;desc\u0026#34; }, \u0026#34;ID\u0026#34;: { \u0026#34;order\u0026#34;: \u0026#34;asc\u0026#34; } } }); var requestOptions = { method: \u0026#39;GET\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 2, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 4, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: null, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20540\u0026#34;, \u0026#34;_score\u0026#34;: null, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 18, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;ID\u0026#34;: 20540, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;北京朝阳区大洋路综合市场\u0026#34; }, \u0026#34;sort\u0026#34;: [ 18.0, 20540 ] }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;TxVFfIkB5CwRTRdtMwUW\u0026#34;, \u0026#34;_score\u0026#34;: null, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 14.5, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; }, \u0026#34;sort\u0026#34;: [ 14.5, 71860010 ] }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;YhVwfIkB5CwRTRdtrgkD\u0026#34;, \u0026#34;_score\u0026#34;: null, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 14.5, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; }, \u0026#34;sort\u0026#34;: [ 14.5, 71860010 ] } ] } } 文档 全文检索\r#\r\r 查出 芒果和猕猴桃 只需要 芒猕就行  var myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;query\u0026#34;: { \u0026#34;match\u0026#34;: { \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒猕\u0026#34; } }, \u0026#34;from\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;10\u0026#34; }); var requestOptions = { method: \u0026#39;GET\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 3, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 14, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: 1.5917585, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;YhVwfIkB5CwRTRdtrgkD\u0026#34;, \u0026#34;_score\u0026#34;: 1.5917585, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 14.5, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;猕猴桃\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13201\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;pBV-fIkB5CwRTRdtEgqc\u0026#34;, \u0026#34;_score\u0026#34;: 0.25333747, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;zhV_fIkB5CwRTRdtywp8\u0026#34;, \u0026#34;_score\u0026#34;: 0.25333747, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;6hUAfYkB5CwRTRdtOxYR\u0026#34;, \u0026#34;_score\u0026#34;: 0.25333747, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 12, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689955200000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1690011319000, \u0026#34;ID\u0026#34;: 20959, \u0026#34;P_INDEX\u0026#34;: \u0026#34;320401\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20200817104333886984.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;江苏凌家塘市场发展有限公司\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20540\u0026#34;, \u0026#34;_score\u0026#34;: 0.25333747, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 18, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689955200000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1690011326000, \u0026#34;ID\u0026#34;: 20540, \u0026#34;P_INDEX\u0026#34;: \u0026#34;110500\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20210328232229261943.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;北京朝阳区大洋路综合市场\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20531\u0026#34;, \u0026#34;_score\u0026#34;: 0.25333747, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 14, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689955200000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1690011312000, \u0026#34;ID\u0026#34;: 20531, \u0026#34;P_INDEX\u0026#34;: \u0026#34;110600\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20210422093833425915.jpeg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;北京新发地农副产品批发市场信息中心\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20536\u0026#34;, \u0026#34;_score\u0026#34;: 0.25333747, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 20, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689955200000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1690011334000, \u0026#34;ID\u0026#34;: 20536, \u0026#34;P_INDEX\u0026#34;: \u0026#34;111200\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20210330163120050216.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;北京八里桥农产品中心批发市场有限公司\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20570\u0026#34;, \u0026#34;_score\u0026#34;: 0.25333747, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 8, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689955200000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1690011326000, \u0026#34;ID\u0026#34;: 20570, \u0026#34;P_INDEX\u0026#34;: \u0026#34;121100\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20200330233852289284.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;天津市红旗农贸综合批发市场有限公司\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;71830481\u0026#34;, \u0026#34;_score\u0026#34;: 0.25333747, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 6, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689955200000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1690011322000, \u0026#34;ID\u0026#34;: 71830481, \u0026#34;P_INDEX\u0026#34;: \u0026#34;140107\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220412164849161585.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山西太原丈子头农产品物流园（原城东利民）\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;2550411\u0026#34;, \u0026#34;_score\u0026#34;: 0.25333747, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 6, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689955200000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1690011323000, \u0026#34;ID\u0026#34;: 2550411, \u0026#34;P_INDEX\u0026#34;: \u0026#34;140109\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20201104152043439244.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山西省太原市河西农产品有限公司\u0026#34; } } ] } } 文档 全文检索(完全匹配)\r#\r\r 查询特殊字段 高亮显示\n var myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;query\u0026#34;: { \u0026#34;match_phrase\u0026#34;: { \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒\u0026#34; } }, \u0026#34;from\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;3\u0026#34;, \u0026#34;highlight\u0026#34;: { \u0026#34;fields\u0026#34;: { \u0026#34;CRAFT_NAME\u0026#34;: {} } } }); var requestOptions = { method: \u0026#39;GET\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 4, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 12, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: 0.25333747, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;zhV_fIkB5CwRTRdtywp8\u0026#34;, \u0026#34;_score\u0026#34;: 0.25333747, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 10, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689782400000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1689838523000, \u0026#34;ID\u0026#34;: 71860010, \u0026#34;P_INDEX\u0026#34;: \u0026#34;370828\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20220211134437904645.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;山东凯盛国际农产品物流城\u0026#34; }, \u0026#34;highlight\u0026#34;: { \u0026#34;CRAFT_NAME\u0026#34;: [ \u0026#34;\u0026lt;em\u0026gt;芒\u0026lt;/em\u0026gt;果\u0026#34; ] } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;6hUAfYkB5CwRTRdtOxYR\u0026#34;, \u0026#34;_score\u0026#34;: 0.25333747, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 12, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689955200000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1690011319000, \u0026#34;ID\u0026#34;: 20959, \u0026#34;P_INDEX\u0026#34;: \u0026#34;320401\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20200817104333886984.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;江苏凌家塘市场发展有限公司\u0026#34; }, \u0026#34;highlight\u0026#34;: { \u0026#34;CRAFT_NAME\u0026#34;: [ \u0026#34;\u0026lt;em\u0026gt;芒\u0026lt;/em\u0026gt;果\u0026#34; ] } }, { \u0026#34;_index\u0026#34;: \u0026#34;shopping\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;20540\u0026#34;, \u0026#34;_score\u0026#34;: 0.25333747, \u0026#34;_source\u0026#34;: { \u0026#34;AG_PRICE\u0026#34;: 18, \u0026#34;CRAFT_NAME\u0026#34;: \u0026#34;芒果\u0026#34;, \u0026#34;C_UNIT\u0026#34;: \u0026#34;元/公斤\u0026#34;, \u0026#34;GET_P_DATE\u0026#34;: 1689955200000, \u0026#34;CRAFT_INDEX\u0026#34;: \u0026#34;13228\u0026#34;, \u0026#34;PAR_INDEX\u0026#34;: 13076, \u0026#34;PROMULGATE_DATE\u0026#34;: 1690011326000, \u0026#34;ID\u0026#34;: 20540, \u0026#34;P_INDEX\u0026#34;: \u0026#34;110500\u0026#34;, \u0026#34;EUD_PIC\u0026#34;: \u0026#34;/tc/20210328232229261943.jpg\u0026#34;, \u0026#34;EUD_NAME\u0026#34;: \u0026#34;北京朝阳区大洋路综合市场\u0026#34; }, \u0026#34;highlight\u0026#34;: { \u0026#34;CRAFT_NAME\u0026#34;: [ \u0026#34;\u0026lt;em\u0026gt;芒\u0026lt;/em\u0026gt;果\u0026#34; ] } } ] } } 文档 统计分组\r#\r\r \u0026ldquo;size\u0026rdquo;:\u0026ldquo;0\u0026rdquo; 加上可以把原始数据去掉\n var myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;aggs\u0026#34;: { \u0026#34;price_group\u0026#34;: { \u0026#34;terms\u0026#34;: { \u0026#34;field\u0026#34;: \u0026#34;AG_PRICE\u0026#34; } } }, \u0026#34;size\u0026#34;: \u0026#34;0\u0026#34; }); var requestOptions = { method: \u0026#39;GET\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 9, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 15, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: null, \u0026#34;hits\u0026#34;: [] }, \u0026#34;aggregations\u0026#34;: { \u0026#34;price_group\u0026#34;: { \u0026#34;doc_count_error_upper_bound\u0026#34;: 0, \u0026#34;sum_other_doc_count\u0026#34;: 0, \u0026#34;buckets\u0026#34;: [ { \u0026#34;key\u0026#34;: 8.0, \u0026#34;doc_count\u0026#34;: 3 }, { \u0026#34;key\u0026#34;: 6.0, \u0026#34;doc_count\u0026#34;: 2 }, { \u0026#34;key\u0026#34;: 10.0, \u0026#34;doc_count\u0026#34;: 2 }, { \u0026#34;key\u0026#34;: 12.0, \u0026#34;doc_count\u0026#34;: 2 }, { \u0026#34;key\u0026#34;: 14.5, \u0026#34;doc_count\u0026#34;: 2 }, { \u0026#34;key\u0026#34;: 4.300000190734863, \u0026#34;doc_count\u0026#34;: 1 }, { \u0026#34;key\u0026#34;: 14.0, \u0026#34;doc_count\u0026#34;: 1 }, { \u0026#34;key\u0026#34;: 18.0, \u0026#34;doc_count\u0026#34;: 1 }, { \u0026#34;key\u0026#34;: 20.0, \u0026#34;doc_count\u0026#34;: 1 } ] } } } ; 文档 计算平均值\r#\r\r \u0026ldquo;size\u0026rdquo;:\u0026ldquo;0\u0026rdquo; 加上可以把原始数据去掉\n var myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;aggs\u0026#34;: { \u0026#34;price_avg\u0026#34;: { \u0026#34;avg\u0026#34;: { \u0026#34;field\u0026#34;: \u0026#34;AG_PRICE\u0026#34; } } }, \u0026#34;size\u0026#34;: \u0026#34;0\u0026#34; }); var requestOptions = { method: \u0026#39;GET\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/shopping/_search\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); let result = { \u0026#34;took\u0026#34;: 1, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 15, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: null, \u0026#34;hits\u0026#34;: [] }, \u0026#34;aggregations\u0026#34;: { \u0026#34;price_avg\u0026#34;: { \u0026#34;value\u0026#34;: 11.020000012715657 } } } 文档映射关系\r#\r\r// 创建索引  /* var requestOptions = { method: \u0026#39;PUT\u0026#39;, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/user\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); **/ /* { \u0026#34;properties\u0026#34;:{ \u0026#34;name\u0026#34;:{ \u0026#34;type\u0026#34;:\u0026#34;text\u0026#34;,//可以分词 \u0026#34;index\u0026#34;:\u0026#34;true\u0026#34;//表示这个字段可以索引查询 }, \u0026#34;sex\u0026#34;:{ \u0026#34;type\u0026#34;:\u0026#34;keyword\u0026#34;,//表示不能够分词 \u0026#34;index\u0026#34;:\u0026#34;true\u0026#34;//表示这个字段可以索引查询 }, \u0026#34;tel\u0026#34;:{ \u0026#34;type\u0026#34;:\u0026#34;keyword\u0026#34;,//表示不能够分词 \u0026#34;index\u0026#34;:\u0026#34;false\u0026#34;//表示这个字段不可以索引查询 } } } **/ //创建映射关系  /* var myHeaders = new Headers(); myHeaders.append(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); var raw = JSON.stringify({ \u0026#34;properties\u0026#34;: { \u0026#34;name\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;true\u0026#34; }, \u0026#34;sex\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;keyword\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;true\u0026#34; }, \u0026#34;tel\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;keyword\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;false\u0026#34; } } }); var requestOptions = { method: \u0026#39;PUT\u0026#39;, headers: myHeaders, body: raw, redirect: \u0026#39;follow\u0026#39; }; fetch(\u0026#34;http://127.0.0.1:9200/user/_mapping\u0026#34;, requestOptions) .then(response =\u0026gt; response.text()) .then(result =\u0026gt; console.log(result)) .catch(error =\u0026gt; console.log(\u0026#39;error\u0026#39;, error)); **/ //批量新增 user  /* http://127.0.0.1:9200/user/_doc/_bulk {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;user\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:1}} {\u0026#34;name\u0026#34;:\u0026#34;李世民\u0026#34;,\u0026#34;sex\u0026#34;:\u0026#34;男的\u0026#34;,\u0026#34;tel\u0026#34;:\u0026#34;0000\u0026#34;} {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;user\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:2}} {\u0026#34;name\u0026#34;:\u0026#34;赵飞燕\u0026#34;,\u0026#34;sex\u0026#34;:\u0026#34;女\u0026#34;,\u0026#34;tel\u0026#34;:\u0026#34;1111\u0026#34;} {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;user\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:3}} {\u0026#34;name\u0026#34;:\u0026#34;李世绩\u0026#34;,\u0026#34;sex\u0026#34;:\u0026#34;男的\u0026#34;,\u0026#34;tel\u0026#34;:\u0026#34;2232\u0026#34;} {\u0026#34;create\u0026#34;:{\u0026#34;_index\u0026#34;:\u0026#34;user\u0026#34;,\u0026#34;_type\u0026#34;:\u0026#34;_doc\u0026#34;,\u0026#34;_id\u0026#34;:4}} {\u0026#34;name\u0026#34;:\u0026#34;妲己\u0026#34;,\u0026#34;sex\u0026#34;:\u0026#34;女\u0026#34;,\u0026#34;tel\u0026#34;:\u0026#34;4334\u0026#34;} **/  查询 http://127.0.0.1:9200/user/_search  { \u0026#34;query\u0026#34;:{ \u0026#34;match\u0026#34;:{ \u0026#34;name\u0026#34;:\u0026#34;李\u0026#34; } } } //\u0026#34;李\u0026#34; 全文匹配 { \u0026#34;took\u0026#34;: 1, \u0026#34;timed_out\u0026#34;: false, \u0026#34;_shards\u0026#34;: { \u0026#34;total\u0026#34;: 1, \u0026#34;successful\u0026#34;: 1, \u0026#34;skipped\u0026#34;: 0, \u0026#34;failed\u0026#34;: 0 }, \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: { \u0026#34;value\u0026#34;: 2, \u0026#34;relation\u0026#34;: \u0026#34;eq\u0026#34; }, \u0026#34;max_score\u0026#34;: 0.6682933, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;_score\u0026#34;: 0.6682933, \u0026#34;_source\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;李世民\u0026#34;, \u0026#34;sex\u0026#34;: \u0026#34;男\u0026#34;, \u0026#34;tel\u0026#34;: \u0026#34;0000\u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;_doc\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;3\u0026#34;, \u0026#34;_score\u0026#34;: 0.6682933, \u0026#34;_source\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;李世绩\u0026#34;, \u0026#34;sex\u0026#34;: \u0026#34;男\u0026#34;, \u0026#34;tel\u0026#34;: \u0026#34;2232\u0026#34; } } ] } } //必须完全匹配 {\n\u0026quot;query\u0026quot;:{\r\u0026quot;match\u0026quot;:{\r\u0026quot;sex\u0026quot;:\u0026quot;男的\u0026quot;\r}\r}\r }\n{ \u0026ldquo;took\u0026rdquo;: 1, \u0026ldquo;timed_out\u0026rdquo;: false, \u0026ldquo;_shards\u0026rdquo;: { \u0026ldquo;total\u0026rdquo;: 1, \u0026ldquo;successful\u0026rdquo;: 1, \u0026ldquo;skipped\u0026rdquo;: 0, \u0026ldquo;failed\u0026rdquo;: 0 }, \u0026ldquo;hits\u0026rdquo;: { \u0026ldquo;total\u0026rdquo;: { \u0026ldquo;value\u0026rdquo;: 2, \u0026ldquo;relation\u0026rdquo;: \u0026ldquo;eq\u0026rdquo; }, \u0026ldquo;max_score\u0026rdquo;: 0.6931471, \u0026ldquo;hits\u0026rdquo;: [ { \u0026ldquo;_index\u0026rdquo;: \u0026ldquo;user\u0026rdquo;, \u0026ldquo;_type\u0026rdquo;: \u0026ldquo;_doc\u0026rdquo;, \u0026ldquo;_id\u0026rdquo;: \u0026ldquo;1\u0026rdquo;, \u0026ldquo;_score\u0026rdquo;: 0.6931471, \u0026ldquo;_source\u0026rdquo;: { \u0026ldquo;name\u0026rdquo;: \u0026ldquo;李世民\u0026rdquo;, \u0026ldquo;sex\u0026rdquo;: \u0026ldquo;男的\u0026rdquo;, \u0026ldquo;tel\u0026rdquo;: \u0026ldquo;0000\u0026rdquo; } }, { \u0026ldquo;_index\u0026rdquo;: \u0026ldquo;user\u0026rdquo;, \u0026ldquo;_type\u0026rdquo;: \u0026ldquo;_doc\u0026rdquo;, \u0026ldquo;_id\u0026rdquo;: \u0026ldquo;3\u0026rdquo;, \u0026ldquo;_score\u0026rdquo;: 0.6931471, \u0026ldquo;_source\u0026rdquo;: { \u0026ldquo;name\u0026rdquo;: \u0026ldquo;李世绩\u0026rdquo;, \u0026ldquo;sex\u0026rdquo;: \u0026ldquo;男的\u0026rdquo;, \u0026ldquo;tel\u0026rdquo;: \u0026ldquo;2232\u0026rdquo; } } ] } }\n{ \u0026#34;query\u0026#34;:{ \u0026#34;match\u0026#34;:{ \u0026#34;tel\u0026#34;:\u0026#34;4334\u0026#34; } } } // tel 不支持索引查询 { \u0026#34;error\u0026#34;: { \u0026#34;root_cause\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;query_shard_exception\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;failed to create query: Cannot search on field [tel] since it is not indexed.\u0026#34;, \u0026#34;index_uuid\u0026#34;: \u0026#34;ApOVvoz4QECdoA6RR4-UZg\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;user\u0026#34; } ], \u0026#34;type\u0026#34;: \u0026#34;search_phase_execution_exception\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;all shards failed\u0026#34;, \u0026#34;phase\u0026#34;: \u0026#34;query\u0026#34;, \u0026#34;grouped\u0026#34;: true, \u0026#34;failed_shards\u0026#34;: [ { \u0026#34;shard\u0026#34;: 0, \u0026#34;index\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;node\u0026#34;: \u0026#34;Jf6x5_1DTISSmQXznC4zsQ\u0026#34;, \u0026#34;reason\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;query_shard_exception\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;failed to create query: Cannot search on field [tel] since it is not indexed.\u0026#34;, \u0026#34;index_uuid\u0026#34;: \u0026#34;ApOVvoz4QECdoA6RR4-UZg\u0026#34;, \u0026#34;index\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;caused_by\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;illegal_argument_exception\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;Cannot search on field [tel] since it is not indexed.\u0026#34; } } } ] }, \u0026#34;status\u0026#34;: 400 } "}),a.add({id:355,href:'/life/docs/hugo%E5%AD%A6%E4%B9%A0/hugo_server_faile_-to_get_json/',title:"hugo教程 hugo server Failed to get JSON",section:"hugo教程",content:" 今天尝试了一下静态博客 hugo , hugo的官网本身也是使用 hugo 制作的网站。安装和运行非常简单。只有两个步骤安装和运行。运行的时候出现了一个小问题，就是由于网络的原因不能启动成功。\n 粗暴的禁用网络连接相关的操作\r#\r\r 就是两个 短代码 给删除了 instagram, tweet。  find . -name \u0026amp;quot;*.md\u0026amp;quot; | xargs sed -i \u0026amp;#x27;/{{\u0026amp;lt; instagram/cinstagram content\u0026amp;#x27;\rfind . -name \u0026amp;quot;*.md\u0026amp;quot; | xargs sed -i \u0026amp;#x27;/{{\u0026amp;lt; tweet/ctwitter content\u0026amp;#x27;\rhugo server --bind \u0026amp;#x27;0.0.0.0\u0026amp;#x27;\r print code  ERROR 2021/03/06 09:55:20 Failed to get JSON resource \u0026quot;https://api.twitter.com/1/statuses/oembed.json?id=877500564405444608\u0026amp;dnt=false\u0026quot;: Get \u0026quot;https://api.twitter.com/1/statuses/oembed.json?id=877500564405444608\u0026amp;dnt=false\u0026quot;: dial tcp 31.13.91.33:443: connectex: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\rIf you feel that this should not be logged as an ERROR, you can ignore it by adding this to your site config:\rignoreErrors = [\u0026quot;error-remote-getjson\u0026quot;]\rBuilt in 21188 ms\rError: Error building site: logged 1 error(s)\r"}),a.add({id:356,href:'/life/docs/hugo%E5%AD%A6%E4%B9%A0/hugo_tutorials1/',title:"hugo教程1",section:"hugo教程",content:"教程1\r#\r\r快速开始\r#\r\r 步骤1：安装Hugo  brew install hugo\r# or\rport install hugo\r 要验证新安装  hugo version\r 步骤2：建立新网站  hugo new site quickstart\r# 上面的代码将在名为的文件夹中创建一个新的Hugo网站quickstart。\r 步骤3：添加主题  # 首先，从GitHub下载主题并将其添加到您站点的themes目录中：\rcd quickstart\rgit init\rgit submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke\r 然后，将主题添加到站点配置中：  echo 'theme = \u0026quot;ananke\u0026quot;' \u0026gt;\u0026gt; config.toml\r 步骤4：添加一些内容  hugo new posts/my-first-post.md\r 如果需要，请编辑新创建的内容文件，该文件将从以下内容开始：   ---\rtitle: \u0026quot;My First Post\u0026quot;\rdate: 2019-03-26T08:47:11+01:00\rdraft: true\r---\r 步骤5：启动Hugo服务器  ▶ hugo server -D\r| EN\r+------------------+----+\rPages | 10\rPaginator pages | 0\rNon-page files | 0\rStatic files | 3\rProcessed images | 0\rAliases | 1\rSitemaps | 1\rCleaned | 0\rTotal in 11 ms\rWatching for changes in /Users/bep/quickstart/{content,data,layouts,static,themes}\rWatching for config changes in /Users/bep/quickstart/config.toml\rEnvironment: \u0026quot;development\u0026quot;\rServing pages from memory\rRunning in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender\rWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1)\rPress Ctrl+C to stop\r 步骤7：建立静态页面  hugo -D\r./public/默认情况下，输出将位于目录中（-d/--destination标志进行更改，或publishdir在配置文件中设置）\r"}),a.add({id:357,href:'/life/docs/hugo%E5%AD%A6%E4%B9%A0/hugo_tutorials2/',title:"hugo教程2",section:"hugo教程",content:"教程2\r#\r\r 1、	创建blog  hugo new site myblog_pub\rcd myblog_pub/\rgit submodule add https://github.com/chinanf-boy/gohugo-theme-yinwang.git themes/yinwang\r  2、	修改配置\n  vi config.toml\n  root@instance-x8rtph4n:/home/go/code/hugo_dir/myblog_pub/public# more ../config.toml baseURL = \u0026quot;http://ypbsyy.github.io/\u0026quot;\rlanguageCode = \u0026quot;en-us\u0026quot;\rtitle = \u0026quot;我是yaopeng\u0026quot;\rtheme = \u0026quot;yinwang\u0026quot;\r#pygmentsCodeFences = true\r#pygmentsCodefencesGuessSyntax = false\r#pygmentsStyle = \u0026quot;dracula\u0026quot;\r#pygmentsOptions = ['linenos']\r# 代码高亮/chroma，hugo默认自带\r[params]\rauthor = \u0026quot;yaopeng\u0026quot;\rgithub = \u0026quot;yaopeng\u0026quot;\r# gitlab = \u0026quot;yobrave\u0026quot;\r#googleAnalytics = \u0026quot;****\u0026quot;\r# 谷歌统计gtag\rhighlight = \u0026quot;dracula\u0026quot; # 默认样式 `github`\rlangs = [\u0026quot;go\u0026quot;]\r# 默认加载 highlight.min.js，但 一些不支持的语言, 你自己添加,\r# 其实也可以使用hugo自带的语法高亮器设置，不过我有点懒\r# single = false\r# 单页面的Home 按钮去除\r# menus = true\r# 我 想加更多目录\r# backgroundColor = \u0026quot;#fbf6ec\u0026quot;\r加点黄黄的背景色\r#\r\r  3、	创建github\n  4、	部署到github\n  git submodule init\rgit submodule update\rhugo --buildDrafts\rcd public/\rgit init\rgit remote rm origin git remote add origin https://github.com/ypbsyy/ypbsyy.github.io.git\rgit add -A\rgit commit -m \u0026quot;first commit\u0026quot;\rgit push -u origin master\r这里面实际到hugo –buildDrafts 这里就ok 剩余的是把public中的html传入静态网页中\r 注意文章开头必须有这几个   ---\rtitle: \u0026quot;My First Post\u0026quot;\rdate: 2019-03-26T08:47:11+01:00\rdraft: true\r---\r  baseURL = \u0026ldquo;https://swagcode-io.github.io/demo\u0026quot;\n  这里的url是自己对应的\n  git submodule add https://github.com/chinanf-boy/gohugo-theme-yinwang.git themes/yinwang\n  下载主题\n  参考网址\n  https://www.pianshen.com/article/1216214802/\n  https://zhuanlan.zhihu.com/p/105021100?utm_source=weibo\n  https://zhuanlan.zhihu.com/p/105021100?utm_source=weibo\n  "}),a.add({id:358,href:'/life/docs/reduce_fat/%E6%97%A0%E6%B0%A7%E8%BF%90%E5%8A%A8/',title:"无氧运动",section:"减肥减脂技巧",content:"无氧运动\r#\r\r 运动强度比较大，运动比较剧烈，开始2分钟就会明显出现喘息，需要短暂休息之后才能继续进行的运动，一般都是无氧运动。常见的无氧运动有：平板支撑、举重、百米冲刺等等。  概念\r#\r\r无氧运动的分类是从人体运动时骨骼肌的代谢过程分类衍生而来的，无氧运动的概念也都是根据无氧代谢供能系统为主演变而来，例如无氧运动是指人体肌肉在无氧供能代谢状态下进行的运动。\r但日常中我们所认为的无氧运动是指肌肉在“缺氧”的状态下高速剧烈的运动。无氧运动大部分是负荷强度高、瞬间性强的运动，所以很难持续长时间，而且疲劳消除的时间也慢。\r无氧运动是相对有氧运动而言的。在运动过程中，身体的新陈代谢是加速的，加速的代谢需要消耗更多的能量。\r人体的能量是通过身体内的糖、蛋白质和脂肪分解代谢得来的。在运动量不大时，比如慢跑、跳舞等情况下，机体能量的供应主要来源于糖的有氧代谢。\r以糖的有氧代谢为主要供应能量的运动就是我们说的有氧运动。\r当我们从事的运动非常剧烈，或者是急速爆发，例如举重、百米冲刺、摔跤等，此时机体在瞬间需要大量的能量，而在正常情况下，有氧代谢是不能满足身体此时的需求的，于是糖就进行无氧代谢，以迅速产生大量能量。\r这种状态下的运动就是无氧运动。\r功效\r#\r\r 研究发现，通过无氧运动可以提高机体的肌肉力量、爆发力、增加肌肉体积，提高运动速度  常见的无氧运动项目\r#\r\r 短跑、举重、投掷、跳高、跳远、拔河、俯卧撑、潜水、肌力训练（长时间的肌肉收缩）等  "}),a.add({id:359,href:'/life/docs/reduce_fat/%E6%9C%89%E6%B0%A7%E8%BF%90%E5%8A%A8/',title:"有氧运动",section:"减肥减脂技巧",content:"有氧运动\r#\r\r  运动强度比较低，但是能够长时间坚持的运动，一般都是有氧运动。比如我们最常见的快走、慢跑、骑行、游泳等等\n  有氧运动，在运动的过程中会消耗体内的碳水化合物和脂肪；而无氧运动只消耗碳水化合物，这也是我们很多人说有氧运动更减肥的原因。\n  排行榜\r#\r\rNO1、游泳\r#\r\r 运动优点：游泳需克服水的阻力而非重力，肌肉和关节不易受损，能有效保护膝关节;冷水环境下游泳热量消耗大，属于减肥效果显著的运动；当配合节食时，效果更加显著。 适宜人群：膝关节受损；体重严重超标；减肥；增强体质的族群。 运动周期：每周3～4次，每次30～60分钟。 热量消耗：约650千卡/小时  NO2、慢跑\r#\r\r 运动优点：提高睡眠质量，通过跑步，大脑的供血、供氧量可以提升20%，这样夜晚的睡眠质量也会跟着提高；“通风”作用，在跑步的过程中，肺部的容量平均从5.8L上升到6.2L，同时，血液中氧气的携带量也会大大增加；提高心脏功能，长期慢跑可使安静心率减慢、血管壁的弹性增加；解压，慢跑可以缓解紧张和焦虑，有益健康。 适宜人群：减肥，需要缓解压力，缓解亚健康，以及预防心血管疾病的族群。 运动周期：每周3～4次，每次40～60分钟。 热量消耗：约650千卡/小时  NO3、自行车\r#\r\r 运动优点：延缓大脑老化，提高神经系统的敏感度；提高心肺功能，锻炼下肢肌力和增强全身耐力。骑自行车对内脏器官的耐力锻炼效果与游泳及跑步相同。自行车还可以瘦身，是周期性的有氧运动，热量消耗较多。对颈椎病、腰间盘突出等有很好的锻炼和康复效果。 适宜人群：体重严重超标，颈椎病和腰间盘突出的族群。 运动周期：每周3～4次，每次40～60分钟。 热量消耗：约420千卡/小时  健身观点\r#\r\r1.适度锻炼。\r#\r\r 大运动量的健身运动有可能会慢慢损伤你的身体，比如，每周跑步超过15英里就有些过量了。建议每周锻炼4至5次，每次30分钟。库珀认为，只要适量运动，就可以有效降低患心血管病和癌症的可能性。  2.疾走健身。\r#\r\r 库珀认为疾走（每英里12分钟）是一项不错的健身方式，它的效果不比慢跑（每英里9分钟）差，而且还免除了跑步对膝关节的损伤。  3.见缝插针。\r#\r\r 不一定非要在体育馆里锻炼30分钟，零散时间完全可以利用起来。每天遛狗10分钟，洗车10分钟，做家务10分钟，一样有效果。  4.交替锻炼。\r#\r\r 比如今天骑自行车，明天慢跑；或者跑步时速度时快时慢，增强对心脏的锻炼。  5.不以体重论健康。\r#\r\r 锻炼通常能降低体重，但体重并不能说明什么。勤于健身的胖子比坐着不动的瘦子要健康得多。不要为体重超过标准而忧心忡忡。  6.多管齐下。\r#\r\r 健身是一个系统工程，体育锻炼对身心健康非常必要，但并不是万能。平时还要注意饮食、戒烟去毒（品）、控制饮酒，精神不要过于紧张。  常见方法\r#\r\r 见的有氧运动项目有：步行、快走、慢跑、竞走、滑冰、长距离游泳、骑自行车、打太极拳、跳健身舞、跳绳/做韵律操、球类运动如篮球、足球等等。有氧运动特点是强度低、有节奏、不中断和持续时间长。同举重、赛跑、跳高、跳远、投掷等具有爆发性的非有氧运动相比较，有氧运动是一种恒常运动，是一种恒常持续30分钟以上还有余力的运动。  准备\r#\r\r 1、吃一些富含氨基酸的食物。在脂肪燃烧的同时，肌肉也会紧收而变得酸痛，而在运动前享用些类似海鲜饭团或是麻婆豆腐这样富含氨基酸的食物，就能较好地缓解肌肉的酸痛和僵硬。 2、运动前喝一杯热饮。可以有效地促进新陈代谢，使身体提前预热，在最短的运动时间里发挥出最好的效果。 3、在运动之后应该进行放松运动。 4、运动前或后建议做好准备工作，来保证有氧运动，避免缺氧带来的不适感觉。  好处\r#\r\r有氧运动的目的在于增强心肺耐力。在运动时，由于肌肉收缩而需要大量能量和氧气，氧气的需求量增加，心脏的收缩次数、每次压送出的血液量、呼吸次数、肺部的收张程度均增加。所以当运动持续，肌肉长时间收缩，心肺就必须努力地供应氧气分给肌肉，以及运走肌肉中的废物。而这持续性的需求，可提高心肺的耐力。当心肺耐力增加了，身体就可从事更长时间或更高强度的运动，而且较不易疲劳。\r汽油的燃烧离不开氧气，所以我们也可以把发动机的工作称为有氧运动。同样，人类在运动中也要燃烧燃料，人类的“燃料”是糖类、蛋白质和脂肪。人类的这些“燃料”都储存在人体的细胞中，当你运动时，就会消耗这些“燃料”以获得动力。\r与发动机燃烧汽油一样，人类在燃烧“燃料”（即氧化）的时候也需要氧气助燃。人们在运动时大口大口地呼吸，使空气中的氧气通过肺泡进入到血液循环系统之中，然后随着动脉血流向全身的组织细胞中，这是一个漫长的过程。\r低强度、长时间的运动，基本上都是有氧运动，比如，走步、慢跑、长距离慢速游泳、骑自行车、跳舞等。有氧运动能够有效地锻炼心、肺等器官，能改善心血管和肺的功能。人在利用氧气的过程中，有一个相当大的时间差，这个时间差就决定了剧烈的、短时间的运动成为了无氧运动。而当你运动的时间足够长时，氧气已经溶入到细胞中，身体内的葡萄糖得到了充分的“燃烧”，从而转化为新的能量，这样的运动就是有氧运动。\r有氧运动需要大量呼吸空气，对心、肺是很好的锻炼，可以增强肺活量和心脏功能。\r长期坚持有氧运动能增加体内血红蛋白的数量，提高机体抵抗力，抗衰老，增强大脑皮层的工作效率和心肺功能，增加脂肪消耗，防止动脉硬化，降低心脑血管疾病的发病率。减肥者如果在合理安排食物的同时，结合有氧运动，不仅减肥能成功，并且减肥后的体重也会得到巩固。有氧运动对于脑力劳动者也是非常有益的。另外，有氧运动还具备恢复体能的功效。\rⅡ型糖尿病患者、肥胖症患者以及脂肪肝患者，一定要做有氧运动，患有心律不齐、心脑动脉血管硬化的人，以及年龄大的人，也都应该做有氧运动。如果是为了强壮肌肉、健美体形，预防椎间盘突出症、颈椎病以及骨质疏松、骨质软化的人，应当做无氧运动。\r如果心率达到150～160次/分钟，此时血液对心肌供氧已不充分，便为半有氧运动。\r如果心率达到160次/分钟以上，便为无氧运动了，即血液中的氧气对心肌已是供不应求了。\r新陈代谢需要氧气的参与，有氧运动由于氧气充足，可使体内营养物质代谢彻底，即达到最终代谢——营养物质分解为二氧化碳和水。二氧化碳通过呼吸排出体外，水则“进一出四”：从口中进入，通过呼吸、汗液、小便、大便四条途径排出。\r有氧运动能够达到瘦身减肥的效果，晚饭后进行半小时的散步，就能很好地将晚饭中的脂肪进而蛋白质进行调节消耗\r"}),a.add({id:360,href:'/life/docs/reduce_fat/%E8%85%B0%E9%83%A8%E5%87%8F%E8%82%A5/',title:"腰部减肥",section:"减肥减脂技巧",content:"腰部减肥\r#\r\r脂肪在身体堆积部位的不同，将人群分为三大类\r#\r\r第一类：脂肪全身分布型\r#\r\r  这类人群的脂肪较为均匀的分布在全身，也就是说他们脂肪的堆积没有在身体的某一个部位特别明显，但是其实他体内的脂肪其实是很多的，只是因为脂肪的平均分布没有显现出来明显的形体问题而已；\n  你说他们不需要减脂吗？肯定是要的。\n  第二类：脂肪腿部臀部分布型\r#\r\r 这类人群大多是女生，因为生理需求，女性的脂肪细胞在腿部臀部位置分布较密集，所以身体多余的脂肪会优先堆积在脂肪细胞多的部位，形成脂肪团；  第三类：腰腹部脂肪分布型\r#\r\r  这类人群的脂肪主要分布在腰腹部和脂肪，就就是我们常说的“啤酒肚”。\n  其实脂肪堆积部位的不同很大程度上是由遗传基因决定的，加上男女生理需求的不同，所以不同人的体型会因为脂肪优先堆积部位的不同而不同。\n  有氧锻炼是减肥的基础\r#\r\r你的目标是需要消耗掉腹部额外的脂肪。\r即使你进行大量的腹部肌肉锻炼，如果你的腹部有一层脂肪，覆盖住腹肌，你是仍然看不到腹肌的。\r因此，你需要更多的有氧锻炼来增加热量消耗，从而促进脂肪燃烧。\r有氧运动是指在特定的时间维持一定心率的长时间耐力性锻炼，例如跑步、健身走、骑自行车、游泳、划船一类的运动。\r针对减肥的有氧运动每周要进行5次，每次至少1小时。\r间歇训练减脂效果好：间歇训练由若干短时间的高强度激烈活动组成，其间穿插休息或者低强度活动。\r研究认为同等强度下，间歇训练比较长时间锻炼能更有效的消耗脂肪。\r研究发现，一组志愿者进行自行车间歇训练，每天只进行20分钟，但强度较高，四个月以后，他们比以较慢速度骑行40分钟的志愿者平均多消耗了4磅脂肪。\r晚餐少吃是必须的\r#\r\r晚餐吃得过多是最容易在体内储存脂肪的，一方面是因为夜间以及晚上睡觉的关系，\r你的基础代谢降低，另一方面，如果晚餐吃的是高热量食物，\r或者油脂摄入过多，又或是宵夜又吃了冰淇淋等食物，\r基本上你在睡觉之前身体是不能消耗完它们的，这些多于的热量当然会变成脂肪存储起来。\r事实上许多人在睡觉前吃甜点或淀粉类食物，而不是吃蔬菜或者奶制品。\r试着在晚餐前多吃一点午餐，这样会减少晚餐前的饥饿感，\r或者在晚餐开始前一小时，来点健康加餐，新鲜水果和蔬菜是非常棒的选择，\r一小撮的坚果也会有同样的效果，它们可以增加饱腹感，从而避免你晚上正餐时吃得过多。\r在晚餐之前喝一大杯水，让你感觉胃有点充实，会适当减少正餐的摄入量。\r增肌（腹部肌肉）(针对腹部)\r#\r\r动作1：仰卧起坐\r#\r\r仰卧起坐近几年备受争议，有人甚至说“练不出腹肌？因为你的仰卧起坐是体育老师教的”，\r这种说法不仅让体育老师躺枪，其实也是从一个极端走向另一个极端，言过其实。\r正确的仰卧起坐（手不拽头，不弓背，起的高度不要太高）仍然是有效的腹肌练习。\r仰卧于垫子上，屈膝，双脚平放于垫子上，双手交叉放于胸前或者耳朵处，注意手不拉头。\r找一个人压着你的脚，或者双脚放于重物下面。\r向上起时，你的下背部与肩胛骨同时离开垫面，保持背部伸直（不要弓背），起至身体约与地面成45度，然后慢慢下落。重复。\r这个动作对于你来说可能相当容易，你可以不断进阶难度。\r找一个倾斜的长椅或者负重进行锻炼。\r在负重的锻炼时候把重量放至于胸部，并不断增加负重。\r动作2：卷腹\r#\r\r仰卧垫子上，双臂置于胸部或者双手放于耳朵处（同样不要放于头后），\r膝盖弯曲。躯干慢慢起，要完全靠腹部肌肉发力，大约躯干与地面成30度就可以了。\r这个动作的关键之处就是整个背部没有完全离地，\r因为完全离地会引起背部肌肉的紧张和腰椎压力增加，增加动作幅度不会让6块腹肌得到更快的发展。\r卷腹的最重要部分是起始时腹肌收缩，肩膀离开垫面，向上时呼气，向下时吸气，此时肩膀是离开地面的。\r在卷腹的最高处保持2秒，此时更加用力地收缩腹肌（专业人士称之为顶峰收缩）。\r然后吸气，躯干缓慢有控制的下落，直到肩胛骨微微接触地面，但不要让腹肌完全放松。\r动作3：仰卧举腿\r#\r\r仰卧在垫面上，双腿伸直，双手放于身体两侧，双腿向上（不要屈膝）直到与躯干接近90度夹角，\r然后腿缓慢下落，重复做时不要让腿接触地面，始终保持肌肉张力。\r也有人说仰卧举腿动作不是一个最佳的锻炼腹肌的训练动作，\r要锻炼下腹肌，重要的是将臀部抬起，而不是完成腿的举放动作，\r并且对于有腰痛的练习者来说，这个动作有可能会加剧腰痛。\r所以，因人而异选择动作很重要。\r动作4：仰卧两头起\r#\r\r仰卧于平面上，双手放于身体两侧，维持平衡。膝盖和躯干同时抬起，在动作的做高处。\r双腿自然弯曲，让双手靠近脚踝处，然后身体慢慢下落。\r这个动作相对比较难，但是当你熟练之后，可以作为常用锻炼动作。\r还原时要慢，不要利用重力下落。\r让双手和脚缓慢回到地面。当你熟练时可以在双脚之间夹一重物，比如一个实心球或者一个小哑铃。\r动作5：动态平板支撑\r#\r\r俯卧于地面，用肘、前臂和脚尖撑地。\r尽可能收腹向上缓慢移动臀部，此时身体像一座山脉，臀部在最高峰。然后臀部缓慢下落，恢复至开始姿势。\r注意，下落时臀部不要松弛。这个动作，可以更有效地训练腹部深层肌肉。\r动作6：平板支撑\r#\r\r俯卧于地面，用肘、前臂和脚尖撑地，身体看起来成一条直线，这就是众所周知的平板支撑，可以锻炼到身体核心肌肉（包括腹部肌肉）。\r尽量以标准动作长时间保持这个姿势。\r初学者至少保持45秒，有一定经验的可以保持静止状态超过2分钟，时间过长其实是没有必要的，\r如果你能够撑上2分钟，那么你就应该增加动作难度（抬起一侧脚或者一侧上肢），而不是一味延长静力训练的时间。\r动作7：自行车卷腹\r#\r\r你可能认为腹内外斜肌（6块腹肌旁边的肌肉）在运动中不是重要的肌肉，但是它在运动中始终发挥作用。腹\r内外斜肌在腹部的两侧。有许多的锻炼方法可以锻炼到腹内外斜肌，\r包括躯干旋转，在做仰卧起坐时加旋转，也可以做同侧屈，也可以双手抱着实心球做旋转以及在健身房用旋转器械做训练等等。\r注意，许多初学者的腹内外斜肌相对于腹直肌是比较弱的，所以不要忽视腹内外斜肌的训练。\r做自行车卷腹，腿在空中交替做屈伸，同时躯干在卷腹同时加上旋转动作，也就是左边的膝盖朝向右边的肩膀，右边的膝盖朝向左边的肩膀。\r动作8：利用瑞士球进行卷腹练习\r#\r\r可以使用一个瑞士球进行很多卷腹训练。在球上进行不稳定状态下锻炼，会提高身体的平衡能力，\r同时也会动员更多腹肌参与，这会让训练显得更有乐趣。\r动作9：腹肌轮锻炼\r#\r\r双手握住腹肌轮手柄，膝盖着地。伸长手臂并缓慢推着腹肌轮远离身体。\r尽可能的下落，但是身体不能触及地面。你往前伸得越远，对于腹肌的刺激效果也就越好。\r如果想要增加动作难度，你可以选择站立位进行训练。\r动作10：引体向上（双手反握）\r#\r\r引体向上看上去和腹肌没有关系，但是在做引体向上时，你会惊讶地发现腹部周围的许多肌肉都在工作。\r如果力量不够，你可以选择一个矮一点的单杠，让双脚可以着地，用脚蹬地协助进行引体向上动作。\r引体向上是一个复合型动作，他会极大增强身体素质，俯卧撑也属于这类动作，有创意的综合性动作，是你的好朋友。\r动作11：俯卧撑\r#\r\r有许多类型的俯卧撑，比如标准俯卧撑、跪姿俯卧撑、对墙俯卧撑、钻石俯卧撑、夹肘俯卧撑，量力而行，筛选一个适合你的类型。\r你可以在网上搜索这些动作进行锻炼。\r动作12：下蹲练习也可以锻炼到核心肌群\r#\r\r大众所理解的腹肌全名是“腹直肌”，一般认为腹直肌的作用就是使躯干弯曲，所以我们做了大量卷腹动作来训练腹直肌。\r其实“直肌”在拉丁文的意思是拉紧、适当的、直上的。你所不了解的是：腹直肌的主要功能并非让躯干屈，而是与背部肌肉协调工作，维持身体正确的姿势与稳定。\r一些锻炼动作能够让腹直肌在内的所有核心肌肉来传动与支撑脊柱。\r例如深蹲、硬拉，所以多练这些动作也可以间接锻炼腹肌。\r链接处\n"}),a.add({id:361,href:'/life/docs/%E7%94%B5%E8%A7%86%E5%89%A7%E6%95%B4%E7%90%86/%E9%81%A5%E8%BF%9C%E7%9A%84%E6%95%91%E4%B8%96%E4%B8%BB/',title:"遥远的救世主",section:"电视剧整理",content:"遥远的救世主\r#\r\r 强势文化自己干，弱势文化是救世主文化，依附于人。\n  神就是道，道就是规律。规律如来，容不得你思议，按规律办事的人就是神\n  政治文化搭台 》 民间文化搭架子 》 草根文化填内容  艺术\r#\r\r  生存艺术\n  文化艺术\n  政治艺术\n  经典语句\r#\r\r   如果照顾父母，是以接受遗产为前提的话，那没遗产的父母就该扔墙头上了？讲责任本身就已经错了，说孝顺再加个美德就更错了。那应该是血缘关系的本来，本该如此。（第3集）    如果我孝顺的口碑是以我父亲的痛苦和尊严为条件的话，那这样的口碑我情愿不要。（第3集）    如果说养儿，就是为了防老，就别说母爱有多伟大了。您养来养去还是为了自己，那是交易。（第3集）    养儿防老，那父母就是你天然的债权人，而且这种感情比山高比海深，你永远想的就是还债报恩。所以这种文化就让每个人都直不起腰来。你看这个民族就是老弯着腰。而老人越是觉得养儿防老，就越容易觉得吃亏，心里就越苦。（第3集）    对传统文化的成见，已渗到骨子里去的人，自然会做出让常人看来离经叛道之事。（第3集）    从心理学的角度分析，越是头脑简单的人越是需要点缀和填充，而头脑复杂的人则对简洁有着特殊的心理需求。（第3集）    他的每个毛孔里，都渗透着对世俗文化居高临下的包容。（第5集）    是女人就有贪、嗔、痴。没有贪、嗔、痴的女人是天国的女人。（第5集）    这个年代，执着于出人头地并不难，难的是不执着于出人头地。（第5集）    透视社会依次有三个层面：技术、制度和文化。小到一个人，大到一个国家一个民族，任何一种命运归根到底都是那种文化属性的产物。支配人的价值取舍行为的那个东西就是文化属性。强势文化造就强者，弱势文化造就弱者，这是规律，不以人的意志为转移。（第7集）    强势文化就是遵循事物规律的文化，弱势文化就是依赖强者的道德期望破格获取的文化，也是期望救主的文化。（第7集）    精神拯救的暴利与毒品麻醉的暴利完全等值，而且不必像贩毒那样耍花招，没有心理成本和法律风险。    文明，对于不能以人字来界定的人无能为力.（第7集）    《圣经》的理由是：因信得救了，上天堂；因不信有罪了，下地狱。用这种哄孩子、吓孩子的方法让人去信，虽有利于基督教的实践，却也恰恰迎合了人的怕死的一面、贪婪的一面。这样的因果关系已经不给人以自觉、自醒的机会，人连追求高尚的机会都没有，又何以高尚呢？（第8集）\u0026quot;    如果神计划管理着人类历史的发展，那么饥饿、灾难、罪恶也该是神计划之中的事，所以人就有理由怀疑神是要拯救人还是要折腾人。如果神也是左手施舍的时候不让右手知道，那么全能的主就不需要这个永远的计划了，只需要以他的全能改变人性的罪性，注入人性的善性，人类就得以拯救了。但神没有这样做，神不想做无名救主，神需要报恩。（第8集）    《圣经》的教义如果不能经受逻辑学的检验，可能在实践上就会存在障碍。如果经受了逻辑学的检验，那表明神的思维即是人的思维，就会否定神性。换一种说法，神性如果附加上人性的期望值，神性就打了折扣。然而神性如果失去了人性的期望值，那么人还需要神吗？（第8集）    不因上天堂与下地狱的因果关系而具有的极高人生境界，就是窄门。（我本人比较喜欢的一句话）（第8集）    你实在，除了钱，看什么都没价值。    这就是圆融世故，不显山不露水，各得其所。可品性这东西，今天缺个角、明天裂道缝，也就离塌陷不远了。（第9集）    感情这事不能证明，证明本身就是对感情的一种亵渎。    咱们翻开历史看看，你从哪一行哪一页能找到救世主救世的记录？没有，从来就没有，从来都是救人的被救了，被救的救了人。如果一定要讲救世主的话，那么符合和代表客观规律的文化就是救世主。这个，就是你们的救世主。如果你根本就没打算自己站起来，老天爷来了都没用。（第10集）    所谓真经，就是能够达到寂空涅槃的究竟法门，可悟不可修。修为成佛，在求。悟为明性，在知。修行以行制性，悟道以性施行，觉者由心生律，修者以律制心。不落恶果者有信无证，住因住果、住念住心，如是生灭。不昧因果者无住而住，无欲无不欲，无戒无不戒，如是涅槃（第11集）    佛乃觉性，非人，人人都有觉性不等于觉性就是人。人相可坏，觉性无生无灭，即觉即显，即障即尘蔽，无障不显，了障涅槃。觉行圆满之佛乃佛教人相之佛，圆满即止，即非无量。若佛有量，即非阿弥陀佛。佛法无量即觉行无量，无圆无不圆，无满无不满，亦无是名究竟圆满。    佛教以次第而分，从精深处说是得道天成的道法，道法如来不可思议，即非文化。从浅义处说是导人向善的教义，善恶本有人相、我相、众生相，即是文化。从众生处说是以贪制贪、以幻制幻的善巧，虽不灭败坏下流，却无碍抚慰灵魂的慈悲。（第11集）    传统观念的死结就在一个\u0026rsquo;靠\u0026rsquo;字上，在家靠父母，出门靠朋友，靠上帝、靠菩萨、靠皇恩……总之靠什么都行，就是别靠自己，所以就只能在精神上跪着。（第11集）    传统文化毕竟是以皇恩浩荡为先决条件的文化，讲的都是皆空、无为、中庸的理，以抑制个性而求生求解。（第11集）    佛法究竟真理真相的辩证思维，如是不可思议。但是，佛教包括了佛法，而佛法有别于佛教。佛教以佛法证一，进而证究竟，最终是为给心找个不苦的理由，成佛，无量寿，极乐。佛教以假度真的方便法门住福相、住寿相、住果相，是以无执无我为名相的太极我执，致使佛教 具有了迷信、宿命、贪执的弱势文化特征，已然障蔽佛法。晚辈以为，如果佛教能依佛法破除自身迷障，不住不拘个人解脱，以佛法的如是不可思议究竟生产力与文明的真理真相，则佛法的佛教即出离宗教的佛教，成为觉悟众生的大乘法度。（第11集）    传统文化是皇天在上的文化，是等救世主、等着施恩的文化。如果一个民族的文化从骨子里就是弱势文化属性，怎么可能去承载强势文化的政治、经济？衡量一种文化属性不是看它积淀的时间长短，而是看它与客观规律的距离远近。五千年的文化是光辉、是灿烂，这个没有问题。但是，传统和习俗得过过客观规律的筛子。（第11集）    人家男人凭什么要养活女人？就是因为女人能让男人那个。我看过那种片子，男的使劲，女的叫唤，女人跟男人讨点吃穿还真不容易。女人为什么害怕第三者插足？就是因为她的那东西无效了，人家的那东西有效了，那东西得有效才能当吃当喝。…………你那还是嫁吃饭的观念，你认为男人靠不住，也不想为孤独去冒生存风险，吃饭毕竟比上床重要。当女人不需要通过支付性去换取生活资料的时候，当男人不需要支付生活资料而征服女人的时候，那时候你就愿意上床了。（第12集）    天是什么？天是神，是上帝，是创造万物者，是全能全知者，是遍在不可见者……一句话，天是道，是事物规律和自然法则。参禅悟道至天人合一的那种境界，就是天国。道法自然，不具美丑善恶的属性，有美丑善恶分别的是人，不是天。天国之女是觉悟到天国境界的女人，是没有人的贪嗔痴的女人。天国之恋，是唯有觉悟到天国境界的人才可能演绎出的爱情。（第13集）    不管是文化艺术还是生存艺术，有道无术，术尚可求也。有术无道，止于术。（第18集）    只要不是我觉到、悟到的，你给不了我，给了我也拿不住，叶晓明他们就是例子。只有我自己觉到、悟到的，我才有可能做到，我能做到的才是我的。（第18集）    原来能做到实事求是就是神话！原来能说老实话、能办老实事的人就是神！因此可见，让人做到实事求是有多难，让人做到说老实话、办老实事有多难，而做到的人却成了说鬼话、办鬼事，倒行逆施。这个世界怎么了？（第19集）    这世界要不是黑白颠倒，那还叫众生吗？那该叫天国了。（第19集）    当人一旦从危险里跳出来，他就不再去关注这个事物的危险了，他的目光就会全部落在这个事物的利益上，这就是人。（第20集）    她当然可以打电话向丁元英请教，但必须得是经过她思考而不得其解的时候。她觉得，她能争取到一个可以通过请教和询问帮助她判断事物的朋友就已经很幸运了，而越是这样，她就越需要让朋友对她有信心。（第20集）    \u0026ldquo;小姐，我能请您喝杯咖啡吗？\u0026ldquo;\u0026ldquo;喝杯咖啡倒也没什么，然后呢？\u0026ldquo;\u0026ldquo;然后就闲聊聊。\u0026ldquo;\u0026ldquo;然后就上床了，不然您大可以秀色可餐。您看，一杯咖啡承载着这么伟大的使命，您还是留着有的放矢吧。\u0026quot;（第20集）    她静静地坐了3个小时，3个小时之后她得出了一个判断：格律诗的生产成本对伯爵公司可能有潜在威胁，伯爵公司此举只是虚晃一枪而已，意图不在于收购，而在于接近、了解。她觉得伯爵公司给她上了一课，题目叫：居安思危。（第20集）    当生则生，当死则死，来去自如。丫头，不简单哪。（第22集）    您根本不了解小丹，而您凭借的也仅仅是血缘的权利。（第23集）41. 元英是明白人，应该知道你早晚要去找他说道说道。我要通知他，无非是让他有个应对，这对你对他都不尊重，还是让这事保持它本来的面目比较好。（第23集）    生老病死，有谁因为怕就躲过去了？（第24集）    你不缺杀我的心，缺一个杀了我还不影响你自我评价的理由。如果我说料到了，你就用开枪证明我判断的错；如果我说没料到，你就用开枪证明我撒谎的错。（第24集）    杀富富不去，救贫贫不离。救主的文化唯救主可说，救主不是人，是道，得救不是破了戒的狼吞虎咽，是觉悟。（第24集）    法律是社会道德的底线，是解决最基本、最表面的问题，不解决文化的根本问题，文化的问题只能由文化的觉悟解决。一个民族的文化属性就是这个民族的主，主宰着这个民族的文明、荣辱、兴衰。一个民族最强调道德的时候，正是这个民族道德最沦丧的时候。（第24集）    法律治标，文化治本。法律对于滋生法律的文化土壤无能为力，对于越过法律潜入文化土壤地带从事更大损害、更大掠夺的行为无能为力，法律是维持社会秩序的最后一道防线，是最软弱、最无奈的强大。法律的神圣是缘于道德文明的崩溃，关注弱势，激励强者构筑更高的道德平台和获得更大的综合效应，需要相应的社会文化。（第24集）    我们观想一个由人民政府制定了一个允许人民富起来的政策，如果这个允许人民致富的政策是这个政府对人民的恩赐，那么所有因为这个政策挣了钱的纳税人无疑应该对这个政府感恩戴德。如果这个允许人民致富的政策是这个政府本该如此作为的天职，那么所有因为这个政策 挣了钱的纳税人就无须对这个政府感恩戴德，而是满意。如果用纳税人的钱帮助弱势群体，纳税人的荣誉、价值怎么体现？弱势群体应该对谁表示感谢？这个恩德应该记在谁的账上？纳税人是应该感恩戴德，还是应该享有荣誉？纳税人有没有可能在解决了自身的生存之后再去追求更高的生命价值？（第24集）    构筑强者的道德平台是一个复杂的社会工程，道德平台太低，势必挤压弱势群体的生存空间，而过高的道德平台又必然存在两个问题： 首先是很少有人能攀援上去，没有可操作性。其次是过多的帮助不利于社会进步，弱势群体得到的输血越多，则自身的造血功能就越差，就越接近死亡。道德平台理想的高度，是优胜劣汰的法则与人人平等的道德两者之间的平衡。 主流的文化，是优胜劣汰的文化，是不给落后观念生存空间的文化。然而，如果不关爱弱势，道德还有价值吗？等级是客观存在，如果我们连等级的存在都不敢承认，社会又怎么可能去建立一种更高级的道德文化？如果没有个体的文化价值的量变，又怎么可能会产生民族的文化价值的质变？（第24集）    计划经济的弊端在于社会为弱势文化提供了生存、繁衍的温床，解决这个问题主要依靠政治理想的教育。市场经济的弊端在于产生贫富两极分化以及由此产生的社会矛盾，解决这个问题主要依靠社会利益调节机制。计划经济制度，政治是人的最高价值，获取社会财富和社会地 位的惟一通道是首先得到权力。市场经济制度，经济是人的最高价值，获取社会财富和社会地位的通道多种多样。获取平等的社会值，就必须付出惰性的代价；获取活力的社会值，就必须付出等级的代价。这是由人的自然属性决定的，这就是天道，就是客观规律，而社会利益调节机制的制定则有赖于强势群体的道德价值指标和对社会稳定的天然需要。    "}),a.add({id:362,href:'/life/docs/javadir/groovy/groovy%E5%8F%98%E9%87%8F/',title:"Groovy变量",section:"groovy 学习与使用 ",content:"Groovy 变量\r#\r\r Groovy中的变量可以通过两种方式定义 - 使用数据类型的本地语法，或者使用def关键字。对于变量定义，必须明确提供类型名称或在替换中使用“def”。这是Groovy解析器需要的。\n   byte - 这用于表示字节值。例如2。\n  short - 用于表示一个短数。例如10。\n  int - 这用于表示整数。 例如1234。\n  long - 这用于表示一个长数。例如10000090。\n  float - 用于表示32位浮点数。例如12.34。\n  double - 这用于表示64位浮点数。例如12.3456565。\n  char - 这定义了单个字符文字。例如\u0026rsquo;a'。\n  Boolean - 这表示一个布尔值，可以是true或false。\n  String - 这是以字符串形式表示的文本。 例如“Hello World”。\n  Groovy还允许其他类型的变量，如数组，结构和类\n  变量声明\r#\r\r title: \u0026quot; groovy变量 \u0026quot; date: 2021-04-15 draft: false weight: 3\r#\r\r  变量声明告诉编译器为变量创建存储的位置和大小。\n  下面是一个变量声明的例子 -\n  // x is defined as a variable String x = \u0026quot;Hello\u0026quot;;\r// The value of the variable is printed to the console println(x);\r 当我们运行上面的程序，我们会得到以下结果   Hello  变量命名\r#\r\r 变量的名称可以由字母，数字和下划线字符组成。 它必须以字母或下划线开头。 大写和小写字母是不同的，因为Groovy，就像Java是一种区分大小写的编程语言。  // Defining a variable in lowercase int x = 5;\r// Defining a variable in uppercase int X = 6; // Defining a variable with the underscore in it's name def _Name = \u0026quot;Joe\u0026quot;; println(x); println(X); println(_Name); 5\r6\rJoe\r你好,世界 !\r 除此之外 在groovy中 定义变量也是可以不加 def 或者 基本类型   a = 125;\n"}),a.add({id:363,href:'/life/docs/shortcodes/buttons/',title:"Buttons",section:"Shortcodes",content:"Buttons\r#\r\rButtons are styled links that can lead to local page or external link.\nExample\r#\r\r{{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}} \rGet Home\r\rContribute\r\r"}),a.add({id:364,href:'/life/docs/shortcodes/columns/',title:"Columns",section:"Shortcodes",content:"Columns\r#\r\rColumns help organize shorter pieces of content horizontally for readability.\n{{\u0026lt; columns \u0026gt;}} \u0026lt;!-- begin columns block --\u0026gt; # Left Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Mid Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Right Content Lorem markdownum insigne... {{\u0026lt; /columns \u0026gt;}} Example\r#\r\rLeft Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\r\rMid Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!\r\rRight Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\r\r\r"}),a.add({id:365,href:'/life/docs/shortcodes/details/',title:"Details",section:"Shortcodes",content:"Details\r#\r\rDetails shortcode is a helper for details html5 element. It is going to replace expand shortcode.\nExample\r#\r\r{{\u0026lt; details \u0026#34;Title\u0026#34; [open] \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} {{\u0026lt; details title=\u0026#34;Title\u0026#34; open=true \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} Title\rMarkdown content Lorem markdownum insigne\u0026hellip;\r\r\r"}),a.add({id:366,href:'/life/docs/shortcodes/expand/',title:"Expand",section:"Shortcodes",content:"Expand\r#\r\rExpand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.\nExample\r#\r\rDefault\r#\r\r{{\u0026lt; expand \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}} \r\rExpand\r↕\r\rMarkdown content Lorem markdownum insigne\u0026hellip;\r\r\r\rWith Custom Label\r#\r\r{{\u0026lt; expand \u0026#34;Custom Label\u0026#34; \u0026#34;...\u0026#34; \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}} \r\rCustom Label\r...\r\rMarkdown content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\r\r\r\r"}),a.add({id:367,href:'/life/docs/shortcodes/hints/',title:"Hints",section:"Shortcodes",content:"Hints\r#\r\rHint shortcode can be used as hint/alerts/notification block.\nThere are 3 colors to choose: info, warning and danger.\n{{\u0026lt; hint [info|warning|danger] \u0026gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{\u0026lt; /hint \u0026gt;}} Example\r#\r\rMarkdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa\r\rMarkdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa\r\rMarkdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa\r\r"}),a.add({id:368,href:'/life/docs/shortcodes/katex/',title:"Katex",section:"Shortcodes",content:"KaTeX\r#\r\rKaTeX shortcode let you render math typesetting in markdown document. See KaTeX\nExample\r#\r\r{{\u0026lt; katex [display] [class=\u0026#34;text-center\u0026#34;] \u0026gt;}} f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi {{\u0026lt; /katex \u0026gt;}} \r\r\r\r\\[\rf(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\r\\]\r\r\r\rDisplay Mode Example\r#\r\rHere is some inline example: \r\\(\\pi(x)\\)\r\r, rendered in the same line. And below is display example, having display: block \r\\[\rf(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\r\\]\r\rText continues here.\n"}),a.add({id:369,href:'/life/docs/shortcodes/mermaid/',title:"Mermaid",section:"Shortcodes",content:'Mermaid Chart\r#\r\rMermaid is library for generating svg charts and diagrams from text.\nExample\r#\r\r{{\u0026lt; mermaid [class=\u0026#34;text-center\u0026#34;]\u0026gt;}} sequenceDiagram Alice-\u0026gt;\u0026gt;Bob: Hello Bob, how are you? alt is sick Bob-\u0026gt;\u0026gt;Alice: Not so good :( else is well Bob-\u0026gt;\u0026gt;Alice: Feeling fresh like a daisy end opt Extra response Bob-\u0026gt;\u0026gt;Alice: Thanks for asking end {{\u0026lt; /mermaid \u0026gt;}} \r\r\rmermaid.initialize({\r"flowchart": {\r"useMaxWidth":true\r},\r"theme": "default"\r}\r)\rsequenceDiagram\rAlice-Bob: Hello Bob, how are you?\ralt is sick\rBob-Alice: Not so good :(\relse is well\rBob-Alice: Feeling fresh like a daisy\rend\ropt Extra response\rBob-Alice: Thanks for asking\rend\r\r\r'}),a.add({id:370,href:'/life/docs/shortcodes/section/',title:"Section",section:"Shortcodes",content:"Section\r#\r\rSection renders pages in section as definition list, using title and description.\nExample\r#\r\r{{\u0026lt; section \u0026gt;}} \r\rPage1\r\r\rPage 1\r#\r\r\rPage2\r\r\rPage 2\r#\r\r\r"}),a.add({id:371,href:'/life/docs/shortcodes/section/page1/',title:"Page1",section:"Section",content:"Page 1\r#\r\r"}),a.add({id:372,href:'/life/docs/shortcodes/section/page2/',title:"Page2",section:"Section",content:"Page 2\r#\r\r"}),a.add({id:373,href:'/life/docs/shortcodes/tabs/',title:"Tabs",section:"Shortcodes",content:"Tabs\r#\r\rTabs let you organize content by context, for example installation instructions for each supported platform.\n{{\u0026lt; tabs \u0026#34;uniqueid\u0026#34; \u0026gt;}} {{\u0026lt; tab \u0026#34;MacOS\u0026#34; \u0026gt;}} # MacOS Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Linux\u0026#34; \u0026gt;}} # Linux Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Windows\u0026#34; \u0026gt;}} # Windows Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; /tabs \u0026gt;}} Example\r#\r\rMacOS\rMacOS This is tab MacOS content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nLinux\rLinux This is tab Linux content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nWindows\rWindows This is tab Windows content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n\r"}),a.add({id:374,href:'/life/posts/change/secret/',title:"Secret",section:"Blog",content:"还是继续学习英语吧 就使用新概念英语 继续加强每天的朗读和沟通技巧 有时间就尝试记忆宫殿 另外抽空把python和算法学习了\n回家路上把 几个重点 看了 回家花半小时把博客写了 然后 以后还是提神自己的厨艺吧 哈哈 自己给自己弄好吃的\n记住和自己和解吧 你和昨天相比有进步就是好样的\n「少吃多餐」单词学习法。所谓「少吃多餐」单词学习法，就是单位时间内少量学习新词，但是却高频重复新词的方法，关键词是：一次少量，循环多次。如今，很多单词学习app都遵循了这种学习规律，同学们可以结合背单词app去积累单词。\n在学习单词时，警惕一个误区——「豆腐渣工程」：贪多求全的背诵大词、难词，但是却因为不常使用和复习逐渐忘记，造成「胸中自诩词汇万千，实则溃于蚁穴」的词汇量假象\n"})})()