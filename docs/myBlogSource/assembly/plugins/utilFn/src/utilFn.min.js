function UtilHelpApp20190531() {
    function tree() { if (this.constructor != tree) return new tree; var r = this, t = function (r, t, e, n) { var i = t, o = 1; if (r.constructor == Array) o = 1; else { if (r.constructor != Object) return o = 0, r; o = 2, r = [r] } var a = function (r, t) { for (var o = 0, u = r.length; o < u; o++) { var s = r[o], c = { i: o, len: u, signtree: r, parent: t, type: 0 }, g = e && e(s, c); if (g) if (o = g.i, u = g.len, 0 == g.type); else { if (g.type = 1) continue; if (g.type = 2) break } s[i] && a(s[i], s); g = n && n(s, c); if (g) if (o = g.i, u = g.len, 0 == g.type); else { if (g.type = 1) continue; if (g.type = 2) break } } }; return a(r, null), r = 2 == o ? r[0] || null : r, r }; this.traver = t, this.toTree = function () { for (var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || null, n = r.s[1] || null, i = r.s[2] || null, o = clone(t), a = [], u = {}, s = n || "_ID", c = i || "_PID", g = e || "children", f = 0, l = 0, h = o.length; f < h; f++)u[o[f][s]] = o[f]; for (; l < h; l++) { var p = o[l], v = u[p[c]]; v ? (!v[g] && (v[g] = []), v[g].push(p)) : a.push(p) } return this.toSigntree(a, e, null), a }, this.toTable = function () { var r = getArg(arguments), t = r.o[0] || [], e = r.s[0] || null, n = this.toHash(t, e); for (var i in ret = [], n) n[i]._ID && ret.push(n[i]); return ret }, this.toHash = function () { var r = getArg(arguments), e = r.o[0] || [], n = r.s[0] || "children", i = r.b[0] || !1, o = n, a = (e = clone(e), this.toSigntree(e, n, null)), u = {}; return t(a, o, function (r) { u[r._ID] = r }, function (r) { !i && u[r._ID][o] && (u[r._ID][o] = []) }), u }, this.toHashMap = function () { var r = getArg(arguments), e = r.o[0] || [], n = r.s[0] || "children", i = n, o = {}; return t(e, i, function (r) { o[r._ID] = r }), o }, this.toSigntree = function () { var r = getArg(arguments), e = r.o[0] || [], n = r.s[0] || "children", i = r.n[0] || r.s[1] || null, o = r.b[0] || !1, a = n, u = function (r) { return o ? guid() : r || guid() }; return t(e, a, function (r, t) { r._PID = t.parent && t.parent._ID || i, r._ID = u(r._ID) }), e }, this.resetSigntreeLevel = function () { var r = getArg(arguments), e = r.o[0] || [], n = r.s[0] || "children"; return t(e, n, function (r, t) { r._Lev = t.parent && t.parent._Lev + 1 || 0 }) }, this.updateNodes = function () { var r = getArg(arguments), e = r.o[0] || [], n = r.s[0] || "children", i = r.f[0] || function () { return !1 }; return t(e, n, function (r) { i(r) }) }, this.updateChilds = function () { var e = getArg(arguments), n = e.o[0] || [], i = e.o[1] || e.s[0] || null, o = e.s[1] || e.s[0] || "children", a = e.f[0] || function () { return !1 }; return i = r.getSigntree(n, o, i), t(i, o, function (r) { a(r) }), n }, this.updateParents = function () { var t = getArg(arguments), e = t.o[0] || [], n = t.o[1] || t.s[0] || null, i = t.s[1] || t.s[0] || "children", o = t.f[0] || function () { return !1 }, a = r.toHashMap(e, i); "string" == typeof n && (n = a[n]); for (var u = [], s = { _ID: n._ID, _PID: n._PID }, c = !0; c && (u.push(s._ID), s = r.parent(e, i, s), s);); for (var g = 0, f = u.length; g < f; g++)o(a[u[g]]); return e }, this.deleteNodes = function () { var r = getArg(arguments), e = r.o[0] || [], n = r.s[0] || "children", i = r.f[0] || function () { return !1 }; return t(e, n, function (r, t) { if (i(r)) return t.signtree.splice(t.i, 1), t.i-- , t.len-- , t.type = 1, t }) }; var e = function (e, n, i, o, a) { return a = a || !1, t(e, n, function (t, e) { if (o(t)) { if (i = r.toSigntree(clone(i), n, t._PID, a), i.constructor == Object) e.signtree.splice(e.i + 1, 0, i), e.i++ , e.len++; else if (i.constructor == Array) for (var u = 0, s = i.length; u < s; u++)e.signtree.splice(e.i + 1, 0, i[u]), e.i++ , e.len++; return e } }) }; this.insertNodesAfter = function () { var r = getArg(arguments), t = r.o[0] || [], n = r.s[0] || "children", i = r.o[1] || null, o = r.f[0] || function () { return !1 }, a = 0 != r.b[0]; return i ? e(t, n, i, o, a) : t }; var n = function (e, n, i, o, a) { return t(e, n, function (t, e) { if (o(t)) { if (i = r.toSigntree(clone(i), n, t._PID, a), i.constructor == Object) e.signtree.splice(e.i, 0, i), e.i++ , e.len++; else if (i.constructor == Array) for (var u = 0, s = i.length; u < s; u++)e.signtree.splice(e.i, 0, i[u]), e.i++ , e.len++; return e } }) }; this.insertNodesBefore = function () { var r = getArg(arguments), t = r.o[0] || [], e = r.s[0] || "children", i = r.o[1] || null, o = r.f[0] || function () { return !1 }, a = r.b[0] || !0; return i ? n(t, e, i, o, a) : t }; var i = function (e, n, i, o, a, u) { u = u || !1, a = null == a || null == a ? -1 : a; var s = n; return t(e, n, function (t, e) { if (o(t)) { if (t[s] = t[s] || [], i = r.toSigntree(clone(i), s, t._ID, u), i.constructor == Object) -1 == a ? t[s].push(i) : t[s].splice(a, 0, i); else if (i.constructor == Array) if (-1 == a) for (var n = 0, c = i.length; n < c; n++)t[s].push(i); else for (n = 0, c = i.length; n < c; n++)t[s].splice(a, 0, i[n]), a++; return e.type = 2, e } }) }; this.insertChildNodes = function () { var r = getArg(arguments), t = r.o[0] || [], e = r.s[0] || "children", n = r.o[1] || null, o = r.f[0] || function () { return !1 }, a = r.n[0] || -1, u = 0 != r.b[0]; return n ? i(t, e, n, o, a, u) : t }, this.getSigntree = function (r, e, n) { var i = getArg(arguments); r = i.o[0] || [], e = i.s[0] || "children", n = i.o[1] || i.s[1] || null; "string" == typeof n && (n = { _ID: n }); var o = null; return t(r, e, function (r, t) { if (r._ID == n._ID) return o = r, t.type = 2, t }), o }, this.queryNodes = function () { var r = getArg(arguments), t = r.o[0] || [], e = r.s[0] || "children", n = r.f[0] || function () { return !1 }, i = this.toHash(t, e); for (var o in ret = [], i) i[o]._ID && n(i[o]) && ret.push(i[o]); return ret }, this.getLevelCount = function () { var r = getArg(arguments), e = r.o[0] || [], n = r.s[0] || "children", i = -1; return t(e, n, function (r, t) { r._Lev = t.parent && t.parent._Lev + 1 || 0, r._Lev > i && (i = r._Lev) }), i + 1 }, this.getLevelNodes = function () { var r = getArg(arguments), t = r.o[0] || [], e = r.s[0] || "children", n = null == r.n[0] ? -1 : r.n[0], i = this.getLevelCount(t, e), o = []; if (-1 == n) for (var a = 0, u = i; a < u; a++) { var s = this.queryNodes(t, e, function (r) { if (r._Lev == a) return !0 }); o.push(s) } else o = this.queryNodes(t, e, function (r) { if (r._Lev == n) return !0 }); return o }, this.parent = function () { var t = getArg(arguments), e = t.o[0] || [], n = t.s[0] || "children", i = t.o[1] || t.s[1] || null, o = null; if (e.constructor == Object) o = e; else { if (e.constructor != Array) return null; o = r.toHash(e, n) } return "string" == typeof i && (i = o[i]), o[i._PID] || null }, this.parents = function () { var t = getArg(arguments), e = t.o[0] || [], n = t.s[0] || "children", i = t.o[1] || t.s[1] || null, o = null; if (e.constructor == Object) o = e; else { if (e.constructor != Array) return null; o = r.toHash(e, n) } "string" == typeof i && (i = o[i]); for (var a = [], u = i; u;)a.unshift(u), u = r.parent(o, n, u); return a }, this.children = function () { var t = getArg(arguments), e = t.o[0] || [], n = t.s[0] || "children", i = t.o[1] || t.s[1] || null, o = null; if (e.constructor == Object) o = e; else { if (e.constructor != Array) return null; o = r.toHash(e, n) } "string" == typeof i && (i = o[i]); var a = []; for (var u in o) o[u]._PID == i._ID && a.push(o[u]); return a }, this.next = function () { var t = getArg(arguments), e = t.o[0] || [], n = t.s[0] || "children", i = t.o[1] || t.s[1] || null, o = null; if (e.constructor == Object) o = e; else { if (e.constructor != Array) return null; o = r.toHash(e, n) } "string" == typeof i && (i = o[i]); var a = null, u = !1; for (var s in o) if (o[s]._PID == i._PID) if (o[s]._ID == i._ID) u = !0; else if (u) { a = o[s]; break } return a }, this.prev = function () { var t = getArg(arguments), e = t.o[0] || [], n = t.s[0] || "children", i = t.o[1] || t.s[1] || null, o = null; if (e.constructor == Object) o = e; else { if (e.constructor != Array) return null; o = r.toHash(e, n) } "string" == typeof i && (i = o[i]); var a = null; for (var u in o) if (o[u]._PID == i._PID) { if (o[u]._ID == i._ID) { !0; break } a = o[u] } return a }, this.getNode = function () { var t = getArg(arguments), e = t.o[0] || [], n = t.s[0] || "children", i = t.s[1] || null, o = null; if (e.constructor == Object) o = e; else { if (e.constructor != Array) return null; o = r.toHash(e, n) } return o[i] || null }, this.moveNode = function (t, e, n, i, o, a) { o = null == o || null == o ? -1 : o, a = null == a || null == a ? -1 : a; var u = r.toHash(t, e, !0); return "string" == typeof n && (n = { _ID: n }), "string" == typeof i && (i = { _ID: i }), n._ID == i._ID ? t : (n = u[n._ID], i = u[i._ID], r.deleteNodes(t, e, function (r) { if (r._ID == n._ID) return !0 }), -1 == o ? r.insertNodesBefore(t, e, n, function (r) { if (r._ID == i._ID) return !0 }, !1) : 0 == o ? r.insertChildNodes(t, e, n, function (r) { if (r._ID == i._ID) return !0 }, a, !1) : 1 == o && r.insertNodesAfter(t, e, n, function (r) { if (r._ID == i._ID) return !0 }, !1), t) }, this.moveNodeBefore = function (t, e, n, i) { return r.moveNode(t, e, n, i, -1) }, this.moveNodeAfter = function (t, e, n, i) { return r.moveNode(t, e, n, i, 1) }, this.moveNodeChild = function (t, e, n, i, o) { return r.moveNode(t, e, n, i, 0, o) }, this.isHave = function () { var r = getArg(arguments), e = r.o[0] || [], n = r.s[0] || "children", i = r.f[0] || function () { return !1 }, o = !1; return t(e, n, function (r, t) { if (i(r)) return o = !0, t.type = 2, t }), o }, this.query = function () { var e = getArg(arguments), n = e.o[0] || [], i = e.s[0] || "children", o = 0 != e.b[0], a = e.f[0] || function () { return !1 }, u = clone(n); return t(u, i, function (t, e) { return r.isHave(t, i, a) ? o && a(t) ? (e.type = 1, e) : void 0 : (e.signtree.splice(e.i, 1), e.i-- , e.len-- , e.type = 1, e) }), u } } function MD5() { function r(r) { for (var t = "", e = 0; e <= 3; e++)t += c.charAt(r >> 8 * e + 4 & 15) + c.charAt(r >> 8 * e & 15); return t } function t(r) { var t, e = 1 + (r.length + 8 >> 6), n = new Array(16 * e); for (t = 0; t < 16 * e; t++)n[t] = 0; for (t = 0; t < r.length; t++)n[t >> 2] |= r.charCodeAt(t) << t % 4 * 8; return n[t >> 2] |= 128 << t % 4 * 8, n[16 * e - 2] = 8 * r.length, n } function e(r, t) { var e = (65535 & r) + (65535 & t), n = (r >> 16) + (t >> 16) + (e >> 16); return n << 16 | 65535 & e } function n(r, t) { return r << t | r >>> 32 - t } function i(r, t, i, o, a, u) { return e(n(e(e(t, r), e(o, u)), a), i) } function o(r, t, e, n, o, a, u) { return i(t & e | ~t & n, r, t, o, a, u) } function a(r, t, e, n, o, a, u) { return i(t & n | e & ~n, r, t, o, a, u) } function u(r, t, e, n, o, a, u) { return i(t ^ e ^ n, r, t, o, a, u) } function s(r, t, e, n, o, a, u) { return i(e ^ (t | ~n), r, t, o, a, u) } if (this.constructor != MD5) return new MD5; var c = "0123456789abcdef"; this.encryp = function (n) { for (var i = t(n), c = 1732584193, g = -271733879, f = -1732584194, l = 271733878, h = 0; h < i.length; h += 16) { var p = c, v = g, d = f, A = l; c = o(c, g, f, l, i[h + 0], 7, -680876936), l = o(l, c, g, f, i[h + 1], 12, -389564586), f = o(f, l, c, g, i[h + 2], 17, 606105819), g = o(g, f, l, c, i[h + 3], 22, -1044525330), c = o(c, g, f, l, i[h + 4], 7, -176418897), l = o(l, c, g, f, i[h + 5], 12, 1200080426), f = o(f, l, c, g, i[h + 6], 17, -1473231341), g = o(g, f, l, c, i[h + 7], 22, -45705983), c = o(c, g, f, l, i[h + 8], 7, 1770035416), l = o(l, c, g, f, i[h + 9], 12, -1958414417), f = o(f, l, c, g, i[h + 10], 17, -42063), g = o(g, f, l, c, i[h + 11], 22, -1990404162), c = o(c, g, f, l, i[h + 12], 7, 1804603682), l = o(l, c, g, f, i[h + 13], 12, -40341101), f = o(f, l, c, g, i[h + 14], 17, -1502002290), g = o(g, f, l, c, i[h + 15], 22, 1236535329), c = a(c, g, f, l, i[h + 1], 5, -165796510), l = a(l, c, g, f, i[h + 6], 9, -1069501632), f = a(f, l, c, g, i[h + 11], 14, 643717713), g = a(g, f, l, c, i[h + 0], 20, -373897302), c = a(c, g, f, l, i[h + 5], 5, -701558691), l = a(l, c, g, f, i[h + 10], 9, 38016083), f = a(f, l, c, g, i[h + 15], 14, -660478335), g = a(g, f, l, c, i[h + 4], 20, -405537848), c = a(c, g, f, l, i[h + 9], 5, 568446438), l = a(l, c, g, f, i[h + 14], 9, -1019803690), f = a(f, l, c, g, i[h + 3], 14, -187363961), g = a(g, f, l, c, i[h + 8], 20, 1163531501), c = a(c, g, f, l, i[h + 13], 5, -1444681467), l = a(l, c, g, f, i[h + 2], 9, -51403784), f = a(f, l, c, g, i[h + 7], 14, 1735328473), g = a(g, f, l, c, i[h + 12], 20, -1926607734), c = u(c, g, f, l, i[h + 5], 4, -378558), l = u(l, c, g, f, i[h + 8], 11, -2022574463), f = u(f, l, c, g, i[h + 11], 16, 1839030562), g = u(g, f, l, c, i[h + 14], 23, -35309556), c = u(c, g, f, l, i[h + 1], 4, -1530992060), l = u(l, c, g, f, i[h + 4], 11, 1272893353), f = u(f, l, c, g, i[h + 7], 16, -155497632), g = u(g, f, l, c, i[h + 10], 23, -1094730640), c = u(c, g, f, l, i[h + 13], 4, 681279174), l = u(l, c, g, f, i[h + 0], 11, -358537222), f = u(f, l, c, g, i[h + 3], 16, -722521979), g = u(g, f, l, c, i[h + 6], 23, 76029189), c = u(c, g, f, l, i[h + 9], 4, -640364487), l = u(l, c, g, f, i[h + 12], 11, -421815835), f = u(f, l, c, g, i[h + 15], 16, 530742520), g = u(g, f, l, c, i[h + 2], 23, -995338651), c = s(c, g, f, l, i[h + 0], 6, -198630844), l = s(l, c, g, f, i[h + 7], 10, 1126891415), f = s(f, l, c, g, i[h + 14], 15, -1416354905), g = s(g, f, l, c, i[h + 5], 21, -57434055), c = s(c, g, f, l, i[h + 12], 6, 1700485571), l = s(l, c, g, f, i[h + 3], 10, -1894986606), f = s(f, l, c, g, i[h + 10], 15, -1051523), g = s(g, f, l, c, i[h + 1], 21, -2054922799), c = s(c, g, f, l, i[h + 8], 6, 1873313359), l = s(l, c, g, f, i[h + 15], 10, -30611744), f = s(f, l, c, g, i[h + 6], 15, -1560198380), g = s(g, f, l, c, i[h + 13], 21, 1309151649), c = s(c, g, f, l, i[h + 4], 6, -145523070), l = s(l, c, g, f, i[h + 11], 10, -1120210379), f = s(f, l, c, g, i[h + 2], 15, 718787259), g = s(g, f, l, c, i[h + 9], 21, -343485551), c = e(c, p), g = e(g, v), f = e(f, d), l = e(l, A) } return r(c) + r(g) + r(f) + r(l) } } function Base64() { if (this.constructor != Base64) return new Base64; var r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", t = function (t) { var e, i, o, a, u, s, c, g = "", f = 0; for (t = n(t); f < t.length;)e = t.charCodeAt(f++), i = t.charCodeAt(f++), o = t.charCodeAt(f++), a = e >> 2, u = (3 & e) << 4 | i >> 4, s = (15 & i) << 2 | o >> 6, c = 63 & o, isNaN(i) ? s = c = 64 : isNaN(o) && (c = 64), g = g + r.charAt(a) + r.charAt(u) + r.charAt(s) + r.charAt(c); return g }; this.encode = t; var e = function (t) { var e, n, o, a, u, s, c, g = "", f = 0; for (t = t.replace(/[^A-Za-z0-9\+\/\=]/g, ""); f < t.length;)a = r.indexOf(t.charAt(f++)), u = r.indexOf(t.charAt(f++)), s = r.indexOf(t.charAt(f++)), c = r.indexOf(t.charAt(f++)), e = a << 2 | u >> 4, n = (15 & u) << 4 | s >> 2, o = (3 & s) << 6 | c, g += String.fromCharCode(e), 64 != s && (g += String.fromCharCode(n)), 64 != c && (g += String.fromCharCode(o)); return g = i(g), g }; this.decode = e; var n = function (r) { r = r.replace(/\r\n/g, "\n"); for (var t = "", e = 0; e < r.length; e++) { var n = r.charCodeAt(e); n < 128 ? t += String.fromCharCode(n) : n > 127 && n < 2048 ? (t += String.fromCharCode(n >> 6 | 192), t += String.fromCharCode(63 & n | 128)) : (t += String.fromCharCode(n >> 12 | 224), t += String.fromCharCode(n >> 6 & 63 | 128), t += String.fromCharCode(63 & n | 128)) } return t }, i = function (r) { for (var t = "", e = 0, n = c1 = c2 = 0; e < r.length;)n = r.charCodeAt(e), n < 128 ? (t += String.fromCharCode(n), e++) : n > 191 && n < 224 ? (c2 = r.charCodeAt(e + 1), t += String.fromCharCode((31 & n) << 6 | 63 & c2), e += 2) : (c2 = r.charCodeAt(e + 1), c3 = r.charCodeAt(e + 2), t += String.fromCharCode((15 & n) << 12 | (63 & c2) << 6 | 63 & c3), e += 3); return t } } if (this.constructor != UtilHelpApp20190531) return new UtilHelpApp20190531; var getArg = function (r) { for (var t = { n: [], s: [], b: [], o: [], O: [], A: [], f: [], D: [], nl: [], v: [] }, e = 0, n = r.length; e < n; e++) { var i = r[e]; "number" == typeof i ? (t.n.push(i), t.v.push(i)) : "string" == typeof i ? (t.s.push(i), t.v.push(i)) : "boolean" == typeof i ? (t.b.push(i), t.v.push(i)) : "function" == typeof i ? t.f.push(i) : "object" == typeof i && (i ? i.constructor == Object ? (t.o.push(i), t.O.push(i)) : i.constructor == Array ? (t.o.push(i), t.A.push(i)) : i.constructor == Date && t.D.push(i) : (t.nl.push(i), t.v.push(i))) } return t }, _thisApp = this; this.trim = function (r) { if ("string" == typeof r) return r.replace(/(^\s*)|(\s*$)/g, "") }, this.lTrim = function (r) { if ("string" == typeof r) return r.replace(/(^\s*)/g, "") }, this.rTrim = function (r) { if ("string" == typeof r) return r.replace(/(\s*$)/g, "") }, this.resetBlank = function (r) { if ("string" == typeof r) { var t = /\s+/g; return r.replace(t, " ") } }, this.getNum = function (r) { if ("string" == typeof r) { var t = /[^\d]/g; return r.replace(t, "") } }, this.getInt = function (r) { if ("string" == typeof r) { var t = /[^\d|^\-]/g; return r.replace(t, "") } }, this.getFloat = function (r) { if ("string" == typeof r) { var t = /[^\d|^\.|^\-]/g; return r.replace(t, "") } }, this.getCN = function (r) { if ("string" == typeof r) { var t = /[^\u4e00-\u9fa5\uf900-\ufa2d]/g; return r.replace(t, "") } }, this.toInt = function (r) { if ("string" == typeof r) return isNaN(parseInt(r)) ? null : parseInt(r) }, this.getLen = function (r) { if ("string" == typeof r) { var t = /^[\u4e00-\u9fa5\uf900-\ufa2d]+$/; if (t.test(r)) return 2 * r.length; var e = r.match(/[\x00-\xff]/g), n = 2 * r.length - e.length; return n } }, this.getCount = function (r, t) { if ("string" == typeof r) { var e = []; return e = t ? r.split(t) : r.split(""), e.length } }, this.getFileName = function (r) { if ("string" == typeof r) var t = /^.*\/([^\/\?]*).*$/; return r.replace(t, "$1") }, this.getFileExt = function (r) { if ("string" == typeof r) { var t = /^.+\./; return r.replace(t, "") } }, this.getQueryString = function (r) { var t = new RegExp("(^|&)" + r + "=([^&]*)(&|$)", "i"), e = window.location.search.substr(1).match(t); return null != e ? unescape(e[2]) : null }, this.replaceAll = function (r, t, e, n) { if ("string" == typeof r) return RegExp.prototype.isPrototypeOf(t) ? r.replace(t, e) : r.replace(new RegExp(t, n ? "gi" : "g"), e) }; var toDate = function (r, t) { if (!r.constructor) return null; if (r.constructor == Date) return r; if (r.constructor == Number) t = 2; else { if (r.constructor != String) return null; /\([\d|\-]*\)/.test(r) ? (t = 2, r = parseInt(this.getInt(r), 10)) : /^[+\/-]?[\d]*$/.test(r) && (t = 2, r = parseInt(this.getInt(r), 10)) } if (t = t || 1, 1 == t) { r = r.replace(/[^\d|^\-|^\\|^:|^\.]/g, " "), r = r.replace(/-/g, "/").replace(/\s+/g, " "); var e = new Date(r); if (!e.valueOf()) { var n = r.split(/\-|\/|\s|:|\./g); e = new Date(n[0] || 0, n[1] || 0, n[2] || 0, n[3] || 0, n[4] || 0, n[5] || 0, n[6] || 0) } return e } e = new Date(r); return e }; this.toDate = toDate, this.like = function (r, t) { if ("string" == typeof r) { var e = new RegExp("^%.*%$"), n = new RegExp("^%.*"), i = new RegExp(".*%$"); return e.test(t) ? (t = t.replace(/^%/, "").replace(/%$/, ""), this.isLike(r, t)) : n.test(t) ? (t = t.replace(/^%/, ""), this.isRightLike(r, t)) : i.test(t) ? (t = t.replace(/%$/, ""), this.isLeftLike(r, t)) : this.isLike(r, t) } }, this.isLike = function (r, t) { if ("string" == typeof r) { var e = new RegExp(t); return !!e.test(r) } }, this.isLeftLike = function (r, t) { if ("string" == typeof r) { var e = new RegExp("^" + t); return !!e.test(r) } }, this.isRightLike = function (r, t) { if ("string" == typeof r) { var e = new RegExp(t + "$"); return !!e.test(r) } }, this.cuter = function (r, t) { if ("string" == typeof r || "number" == typeof r) { if (t <= 0) return r; t = t || 3; var e = String(r), n = e.split("."), i = { pref: "", num: "", point: "", nextf: "" }; n[1] && (i.point = ".", i.nextf = n[1]), i.pref = n[0].match(/^[+\/-]/) || "", n[0] = n[0].replace(/^[+\/-]/, ""); for (var o = n[0].split(""), a = [], u = t, s = o.length - 1; s > -1; s--)a.unshift(o[s]), u-- , 0 == u && s > 0 && (a.unshift(","), u = t); return i.num = a.join(""), i.pref + i.num + i.point + i.nextf } }, this.xmlClear = function (r) { if ("string" == typeof r) return r.replace(/<\/?.+?>/g, "") }, this.sameCharNumber = function (r, t, e) { if ("string" == typeof r) { new RegExp; for (var n = r.split(t), i = !1, o = [], a = 1, u = n.length; a < u; a++) { var s = n[a]; if (i) { var c = o.length - 1; o[c] = o[c] + 1, "" != s && (i = !1) } else "" == s && (i = !0), o.push(1) } if (e) { var g = []; for (a = 0; s = o[a++];)s >= e && g.push(s); o = g } return o } }; var guid = function (r, t) { var e, n, i = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""), o = []; if (t = t || i.length, r) for (e = 0; e < r; e++)o[e] = i[0 | Math.random() * t]; else for (o[8] = o[13] = o[18] = o[23] = "-", o[14] = "4", e = 0; e < 36; e++)o[e] || (n = 0 | 16 * Math.random(), o[e] = i[19 == e ? 3 & n | 8 : n]); return o.join("") }; this.guid = guid, this.toUnicode = function (r) { if (!r) return ""; for (var t = "", e = 0, n = r.length; e < n; e++)t += "\\u" + parseInt(r[e].charCodeAt(0), 10).toString(16); return t }, this.toHanzi = function (r) { if (!r) return ""; r = r.split("\\u"); for (var t = "", e = 0, n = r.length; e < n; e++)r[e] && (t += String.fromCharCode(parseInt(r[e], 16).toString(10))); return t }, this.lenWithZero = function (r, t) { if ("number" == typeof r) { for (var e = r.toString(); e.length < t;)e = "0" + e; return e } }, this.chrW = function (r) { if ("number" == typeof r) return String.fromCharCode(r) }, this.percent = function (r, t) { if ("number" == typeof r) return (100 * r).toFixed(t) + "%" }, this.decimal = function (r, t) { if ("number" == typeof r) { var e = r, n = Math.pow(10, t); return e = Math.round(e * n) / n, e } }, this.RMB = function (r, t, e, n) { if ("number" == typeof r) { t = t || "￥", e = null == e ? 2 : e, n = n || 3; var i = r; i = i.toFixed(e), i = this.cuter(i, n); return t + i } }, this.currency = function (r, t, e, n) { if ("number" == typeof r) { e = null == e ? 2 : e, n = n || 0; var i = r; i = i.toFixed(e), i = this.cuter(i, n); return t + i } }, this.numShort = function (r, t, e, n) { if ("number" == typeof r) { t = t && t.toUpperCase() || "BMK", n = n || 3, e = e || 0, t = t.split(""); for (var i = { T: 12, B: 9, M: 6, K: 3, Y: 8, W: 4 }, o = String(r).split(".")[0], a = r, u = "", s = 0, c = t.length; s < c; s++) { var g = t[s]; if (o.length > i[g]) { u = g, a = parseFloat(r / Math.pow(10, i[g])); break } } return a = a.toFixed(e), a = this.cuter(a, n) + u, a } }, this.getCNDate = function (r) { if (r = toDate(r), r) { var t = ""; return t += this.lenWithZero(r.getFullYear(), 4) + this.chrW(24180), t += this.lenWithZero(r.getMonth() + 1, 2) + this.chrW(26376), t += this.lenWithZero(r.getDate(), 2) + this.chrW(26085), t += this.lenWithZero(r.getHours(), 2) + this.chrW(26102), t += this.lenWithZero(r.getMinutes(), 2) + this.chrW(20998), t += this.lenWithZero(r.getSeconds(), 2) + this.chrW(31186), t += this.chrW(32) + this.chrW(32) + this.chrW(26143) + this.chrW(26399) + this.chrW(this.toInt(new String("26085199682010819977222352011620845").substr(5 * r.getDay(), 5))), t } }, this.duration = function (r, t, e) { if ("number" == typeof r) { t = t || "hh:mm:ss", e = e || "s"; var n = { "y+": 31536e6, "M+": 2592e6, "d+": 864e5, "h+": 36e5, "H+": 36e5, "m+": 6e4, "s+": 1e3, S: 1 }, i = r; for (var o in n) if (new RegExp("(" + o + ")").test(e)) { i = parseInt(i * n[o]); break } for (var o in n) if (new RegExp("(" + o + ")").test(t)) { var a = parseInt(i / n[o]); i %= n[o], t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? a : ("00" + String(a)).substr(("" + String(a)).length)) } return t } }, this.format = function (r, t) { if (r = toDate(r), r) { var e = { "M+": r.getMonth() + 1, "d+": r.getDate(), "h+": r.getHours() % 12 == 0 ? 12 : r.getHours() % 12, "H+": r.getHours(), "m+": r.getMinutes(), "s+": r.getSeconds(), "q+": Math.floor((r.getMonth() + 3) / 3), S: r.getMilliseconds() }, n = { 0: "日", 1: "一", 2: "二", 3: "三", 4: "四", 5: "五", 6: "六" }; for (var i in /(y+)/.test(t) && (t = t.replace(RegExp.$1, (r.getFullYear() + "").substr(4 - RegExp.$1.length))), /(E+)/.test(t) && (t = t.replace(RegExp.$1, (RegExp.$1.length > 1 ? RegExp.$1.length > 2 ? "星期" : "周" : "") + n[r.getDay() + ""])), e) new RegExp("(" + i + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? e[i] : ("00" + e[i]).substr(("" + e[i]).length))); return t } }, this.addDate = function (r, t, e) { if (r = toDate(r), r) { var n = new Date(r.getFullYear(), r.getMonth(), r.getDate(), r.getHours(), r.getMinutes(), r.getSeconds(), r.getMilliseconds()); return "s" == t ? n.setSeconds(r.getSeconds() + e) : "m" == t ? n.setMinutes(r.getMinutes() + e) : "h" == t ? n.setHours(r.getHours() + e) : "d" == t ? n.setDate(r.getDate() + e) : "M" == t ? n.setMonth(r.getMonth() + e) : "y" == t ? n.setFullYear(r.getFullYear() + e) : "S" == t ? n.setMilliseconds(r.getMilliseconds() + e) : n.setDate(r.getDate() + e), n } }, this.diff = function (r, t, e) { if (r = toDate(r), e = toDate(e), e && r) switch (t) { case "S": return parseInt(e - r); case "s": return parseInt((e - r) / 1e3); case "m": return parseInt((e - r) / 6e4); case "h": return parseInt((e - r) / 36e5); case "d": return parseInt((e - r) / 864e5); case "w": return parseInt((e - r) / 6048e5); case "M": return e.getMonth() + 1 + 12 * (e.getFullYear() - r.getFullYear()) - (r.getMonth() + 1); case "y": return e.getFullYear() - r.getFullYear(); default: return } }, this.addMilliseconds = function (r, t) { if (r = toDate(r), r) return r = new Date(r.valueOf()), r.setMilliseconds(r.getMilliseconds() + t), r }, this.addSeconds = function (r, t) { if (r = toDate(r), r) return r = new Date(r.valueOf()), r.setSeconds(r.getSeconds() + t), r }, this.addMinutes = function (r, t) { if (r = toDate(r), r) return r = new Date(r.valueOf()), r.setMinutes(r.getMinutes() + t), r }, this.addHours = function (r, t) { if (r = toDate(r), r) return r = new Date(r.valueOf()), r.setHours(r.getHours() + t), r }, this.addDays = function (r, t) { if (r = toDate(r), r) return r = new Date(r.valueOf()), r.setDate(r.getDate() + t), r }, this.addMonths = function (r, t) { if (r = toDate(r), r) return r = new Date(r.valueOf()), r.setMonth(r.getMonth() + t), r }, this.addYears = function (r, t) { if (r = toDate(r), r) return r = new Date(r.valueOf()), r.setFullYear(r.getFullYear() + t), r }, this.getWeek = function (r, t) { if (r = toDate(r), r) { var e = ["0", "1", "2", "3", "4", "5", "6"]; switch (t) { case "CN-zhou": e = ["周日", "周一", "周二", "周三", "周四", "周五", "周六"]; break; case "CN-xingqi": e = ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"]; break; case "UK": e = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]; break; case "UK-suoxie": e = ["Sun.", "Mon.", "Tues.", "Wed.", "Thur.", "Fri.", "Sat."]; break; default: e = ["0", "1", "2", "3", "4", "5", "6"] }var n = r; return e[n.getDay()] } }, this.getQuarterStartMonth = function (r) { if (r = toDate(r), r) { var t = r.getMonth(); return t <= 2 ? 1 : t <= 5 ? 4 : t <= 8 ? 7 : 10 } }, this.getWeekStartDate = function (r) { if (r = toDate(r), r) { var t = r.getDay(); return this.addDays(r, -t) } }, this.getWeekEndDate = function (r) { if (r = toDate(r), r) { var t = this.getWeekStartDate(r); return this.addDays(t, 6) } }, this.getMonthStartDate = function (r) { if (r = toDate(r), r) { var t = r.getFullYear(), e = r.getMonth(); return new Date(t, e, 1) } }, this.getMonthEndDate = function (r) { if (r = toDate(r), r) return this.addDays(this.addMonths(this.getMonthStartDate(r), 1), -1) }, this.getQuarterStartDate = function (r) { if (r = toDate(r), r) { var t = r.getFullYear(); return new Date(t, this.getQuarterStartMonth(r) - 1, 1) } }, this.getQuarterEndDate = function (r) { if (r = toDate(r), r) return this.addDays(this.addMonths(this.getQuarterStartDate(r), 3), -1) }, this.cookie2obj = function (r) { if ("string" == typeof r) { for (var t = r, e = {}, n = t.split("&"), i = 0, o = n.length; i < o; i++)if ("" != n[i] || n[i].indexOf("=") < 0) { var a = n[i].split("="); e[a[0]] = a[1] } return e } }, this.obj2cookie = function (r) { if (r.constructor == Object) { var t = ""; for (var e in r) t += e + "=" + r[e] + "&"; return t.substr(0, t.length - 1) } }, this.css2obj = function (r) { if ("string" == typeof r) { for (var t = r, e = {}, n = t.split(";"), i = 0, o = n.length; i < o; i++)if ("" != n[i] || n[i].indexOf(":") < 0) { var a = n[i].split(":"); e[a[0]] = a[1] } return e } }, this.obj2css = function (r) { if (r.constructor == Object) { var t = ""; for (var e in r) t += e + ":" + r[e] + ";"; return t } }, this.string2obj = function (r, t, e) { if ("string" == typeof r) { t = t || ";", e = e || "="; for (var n = r, i = {}, o = n.split(t), a = 0, u = o.length; a < u; a++)if (o[a] && o[a].indexOf(e) > -1) { var s = o[a].split(e); i[s[0]] = s[1] } return i } }, this.obj2string = function (r, t, e) { if (r.constructor == Object) { t = t || ";", e = e || "="; var n = ""; for (var i in r) "string" != typeof r[i] && "number" != typeof r[i] && "boolean" != typeof r[i] || (n += i + e + r[i] + t); var o = t.length; return n.substr(0, n.length - o) } }, this.Cookie = function (r, t, e) { if (r) { r = encodeURIComponent(r); var n = { expires: null, path: null, domain: null, secure: null }; if (e = e || n, e && e.expires) { if (e.expires.constructor == Date) e.expires = e.expires.toUTCString(); else if ("number" == typeof e.expires) e.expires = _thisApp.addDays(new Date, e.expires); else if ("string" == typeof e.expires) { var i = e.expires.substring(e.expires.length - 1, e.expires.length), o = parseInt(e.expires.substring(0, e.expires.length - 1)), a = "|y|M|d|h|m|s|S|"; a.indexOf("|" + i + "|") < 0 && (i = "d", o = parseInt(e.expires)), e.expires = _thisApp.addDate(new Date, i, o) } else e.expires = null; e.expires = e.expires ? e.expires.toUTCString() : null } var u = function (r) { var t = document.cookie ? String(document.cookie) : "", e = _thisApp.string2obj(t, "; ", "="); return e[r] ? decodeURIComponent(e[r]) : null }, s = function (r, t, e) { t = t || ""; var n = r + "=" + t + "; " + _thisApp.obj2string(e, "; ", "="); document.cookie = n }; return void 0 === t ? u(r) : null == t ? (s(r, null, { expires: -1 }), u(r)) : t ? (s(r, encodeURIComponent(t), e), u(r)) : void 0 } }; var isEqualForSimple = function () { var r = getArg(arguments), t = r.O[0] || [], e = r.O[1] || [], n = r.s[0] || r.A[0] || null; if (n) { for (var i = n.constructor == Array ? n : n.split(","), o = 0, a = i.length; o < a; o++)if (t[i[o]] !== e[i[o]]) return !1; return !0 } if (Object.keys(t).length !== Object.keys(e).length) return !1; for (var u in t) if (t[u] !== e[u]) return !1; return !0 }; this.isEqualForSimple = isEqualForSimple, this.isEqual = function () { var r = getArg(arguments), t = r.o[0] || [], e = r.o[1] || []; if (!r.o.length) return t == e; var n = function (r, t) { var e = r instanceof Object, i = t instanceof Object; if (!e || !i) return r === t; if (Object.keys(r).length !== Object.keys(t).length) return !1; for (var o in r) { var a = r[o] instanceof Object, u = t[o] instanceof Object; if (a && u) return n(r[o], t[o]); if (r[o] !== t[o]) return !1 } return !0 }; return n(t, e) }, this.extend = function () { var r = arguments, t = !1; if (r && r.length) { if ("boolean" != typeof r[0] && "number" != typeof r[0] || (t = !!r[0], Array.prototype.shift.call(r)), !r[0].constructor == Array && !r[0].constructor == Object) return r[0]; for (var e = r[0], n = 1, i = r.length; n < i; n++) { var o = r[n]; for (var a in o) o.hasOwnProperty(a) && (!0 === t && o[a] && "object" == typeof o[a] ? e[a] = this.extend(!0, o[a].constructor == Array ? [] : {}, e[a], o[a]) : e[a] = o[a]) } return e } }; var clone = function (r) { if ("object" != typeof r) return r; if (!r) return null; var t = {}; try { r.constructor == Array && (t = []) } catch (r) { t = null } for (var e in r) t[e] = clone(r[e]); return t }, clearCertain = function (r, t) { t = t || [null, void 0, ""]; var e = function (r) { var e = !1, n = r; "function" == typeof n ? n = Function : "object" == typeof n ? n && (n = n.constructor == Object ? Object : Array) : "string" == typeof n ? n = String : "number" == typeof n ? n = Number : "boolean" == typeof n ? n = Boolean : void 0 === n && (n = Undefined); for (var i = 0, o = t.length; i < o; i++)if (n == t[i] || r == t[i] && typeof r == typeof t[i]) { e = !0; break } return e }, n = function (r) { for (var t in r) e(r[t]) ? delete r[t] : "object" == typeof r[t] && n(r[t]) }; return n(r), r }; this.clearCertain = clearCertain, this.min2max = function () { var r = getArg(arguments), t = r.A[0] || []; if (t.constructor == Array) { for (var e, n = 0, i = t.length; n < i; n++)for (var o = 0; o <= n; o++)t[n] < t[o] && (e = t[n], t[n] = t[o], t[o] = e); return t } }, this.max2min = function () { var r = getArg(arguments), t = r.A[0] || []; if (t.constructor == Array) { for (var e, n = 0, i = t.length; n < i; n++)for (var o = 0; o <= n; o++)t[n] > t[o] && (e = t[n], t[n] = t[o], t[o] = e); return t } }, this.max = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || null; if (t.constructor == Array) { var n = null; if (0 == t.length) return n; n = e ? t[0][e] : t[0]; for (var i = 0, o = t.length; i < o; i++) { var a = t[i], u = e ? a[e] : a; u > n && (n = u) } return n } }, this.min = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || null; if (t.constructor == Array) { var n = null; if (0 == t.length) return n; n = e ? t[0][e] : t[0]; for (var i = 0, o = t.length; i < o; i++) { var a = t[i], u = e ? a[e] : a; u < n && (n = u) } return n } }; var sortByCon = function (r, t, e) { return t = t ? -1 : 1, e = e || "string", e = e.toLowerCase(), function (n, i) { return n = n[r], i = i[r], "string" == e ? (n = String(n), i = String(i), t * n.localeCompare(i)) : "number" == e ? (n = parseFloat(n), isNaN(n) && (n = Number.MIN_VALUE), i = parseFloat(i), isNaN(i) && (i = Number.MIN_VALUE), n < i ? -1 * t : n > i ? 1 * t : 1) : 1 } }; this.sortBy = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || null, n = r.s[1] || null, i = r.b[0] || !1; if (t.constructor == Array) { if (e) { var o = t.sort(sortByCon(e, i, n)); return o } return t } }, this.removeRepeatAttr = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || r.A[1] || null; if (t.constructor == Array) { var n = [], i = []; if (e) { var o = e.constructor == Array ? e : e.split(","); if (o.length > 1) for (var a = 0, u = t.length; a < u; a++) { var s = this.index(n, function (r) { for (var e = !0, n = 0, i = o.length; n < i; n++) { var u = o[n]; if (r[u] != t[a][u]) { e = !1; break } } return e }); s < 0 && (i.push(t[a]), n.push(t[a])) } else for (a = 0, u = t.length; a < u; a++)this.index(n, t[a][e]) < 0 && (i.push(t[a]), n.push(t[a][e])) } else for (a = 0, u = t.length; a < u; a++)this.index(n, t[a]) < 0 && (i.push(t[a]), n.push(t[a])); return i } }, this.count = function () { var arg = getArg(arguments), o = arg.A[0] || [], judge = arg.f[0] || arg.s[0] || function () { return !0 }, param = arg.O[0] || {}; if (o.constructor == Array) { if (judge.constructor == String) { judge = judge.replace(/\*./g, "a."), judge = judge.replace(/@/g, "param."), judge = judge.replace(/param.param./g, "@"); for (var count = 0, i = 0, a; a = o[i++];)eval(judge) && count++; return count } if (judge.constructor == Function) { for (var count = 0, i = 0, a; a = o[i++];)judge(a) && count++; return count } } }, this.group = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || r.A[1] || null, n = r.f[0] || function () { }; if (t.constructor == Array) { var i = {}, o = []; if (e) { for (var a = e.constructor == Array ? e : e.split(","), u = function (r) { for (var t = {}, e = 0, n = a.length; e < n; e++) { var i = a[e]; t[i] = r[i] } return t }, s = function (r) { for (var t = "", e = 0, n = a.length; e < n; e++) { var i = a[e], o = null == r[i] ? "" : r[i]; t += "_" + o } return t }, c = 0, g = t.length; c < g; c++) { var f = t[c], l = s(f); i[l] ? i[l].data.push(f) : i[l] = { item: u(f), data: [f] } } for (var l in i) n(i[l].item, i[l].data), o.push(i[l].item); return o } } }, this.pivot = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.A[1] || r.s[0] || null, n = r.s[0] || null, i = r.s[1] || null, o = r.A[2] || r.s[2] || null; if ("string" == typeof e && (n = r.s[1] || null, i = r.s[2] || null, o = r.s[3] || null), t.constructor == Array) { var a = {}, u = []; if (e) { for (var s = e.constructor == Array ? e : e.split(","), c = "string" == typeof o ? o.split(",") : o, g = function (r) { for (var t = {}, e = 0, n = s.length; e < n; e++) { var i = s[e]; t[i] = r[i] } return t }, f = function (r) { for (var t = "", e = 0, n = s.length; e < n; e++) { var i = s[e], o = null == r[i] ? "" : r[i]; t += "_" + o } return t }, l = 0, h = t.length; l < h; l++) { var p = t[l], v = f(p); a[v] ? a[v].data.push(p) : a[v] = { item: g(p), data: [p] } } if (o) for (var v in a) { j = a[v].data, p = a[v].item; for (var d in j) { y = j[d]; var A = y[n]; this.index(c, A) > -1 && (p[A] = y[i]) } u.push(p) } else for (var v in a) { var j = a[v].data, p = a[v].item; for (var d in j) { var y = j[d]; p[y[n]] = y[i] } u.push(p) } return u } } }, this.unpivot = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.A[1] || r.s[0] || null, n = r.s[0] || null, i = r.s[1] || null, o = r.A[2] || r.s[2] || null; if ("string" == typeof e && (n = r.s[1] || null, i = r.s[2] || null, o = r.s[3] || null), t.constructor == Array) { var a = []; if (e) { var u = e.constructor == Array ? e : e.split(","), s = "string" == typeof o ? o.split(",") : o, c = function (r) { for (var t = {}, e = 0, n = u.length; e < n; e++) { var i = u[e]; t[i] = r[i] } return t }; if (s) for (l = 0, h = t.length; l < h; l++) { p = t[l]; for (var f in p) if (this.index(u, f) < 0 && g.index(s, f) > -1) { v = c(p); v[n] = f, v[i] = p[f], a.push(v) } } else for (var l = 0, h = t.length; l < h; l++) { var p = t[l]; for (var f in p) if (this.index(u, f) < 0) { var v = c(p); v[n] = f, v[i] = p[f], a.push(v) } } return a } } }, this.tranTreeData = function () { for (var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || "id", n = r.s[1] || "pid", i = r.s[2] || "children", o = clone(t), a = [], u = {}, s = e, c = n, g = i, f = 0, l = 0, h = o.length; f < h; f++)u[o[f][s]] = o[f]; for (; l < h; l++) { var p = o[l], v = u[p[c]]; v ? (!v[g] && (v[g] = []), v[g].push(p)) : a.push(p) } return a }, this.toHash = function () { var r = getArg(arguments), t = r.A[0] || {}, e = r.s[0] || null; if (t.constructor == Array && e) { for (var n, i = {}, o = 0; n = t[o++];)i[n[e]] = n; return i } }, this.query = function () { var arg = getArg(arguments), o = arg.A[0] || [], judge = arg.f[0] || arg.s[0] || null, param = arg.O[0] || {}; if (o.constructor == Array && judge) { if (o = clone(o), judge.constructor == String) { judge = judge.replace(/\*./g, "a."), judge = judge.replace(/@/g, "param."), judge = judge.replace(/param.param./g, "@"); for (var n = [], i = 0, a; a = o[i++];)eval(judge) && n.push(a); return n } if (judge.constructor == Function) { for (var n = [], i = 0, a; a = o[i++];)judge(a) && n.push(a); return n } } }, this.clearColumn = function () {
        var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || r.A[1] || null
        ; if (t.constructor == Array && e) { if (e) { t = clone(t); for (var n, i = e.constructor == Array ? e : e.split(","), o = 0; n = t[o++];)for (var a = 0, u = i.length; a < u; a++)delete n[i[a]]; return t } return null }
    }, this.retainColumn = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || r.A[1] || null; if (t.constructor == Array && e) { if (e) { for (var n, i = e.constructor == Array ? e : e.split(","), o = [], a = 0; n = t[a++];) { for (var u = {}, s = 0, c = i.length; s < c; s++)u[i[s]] = n[i[s]]; o.push(u) } return o } return null } }, this.changeToArrays = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || r.A[1] || null; if (t.constructor == Array && e) { for (var n = {}, i = e.constructor == Array ? e : e.split(","), o = 0; u = i[o++];)n[u] = []; var a; for (o = 0; a = t[o++];)for (var u, s = 0; u = i[s++];)n[u].push(a[u]); return "string" == typeof e && 1 == i.length ? n[e] : n } }, this.removed = function () { var arg = getArg(arguments), o = arg.A[0] || [], judge = arg.f[0] || arg.s[0] || null, param = arg.O[0] || {}; if (o.constructor == Array && judge) { if (judge.constructor == String) { judge = judge.replace(/\*./g, "a."), judge = judge.replace(/@/g, "param."), judge = judge.replace(/param.param./g, "@"); for (var re = [], i = 0, a; a = o[i++];)eval(judge) && re.push(o.splice(--i, 1)[0]); return re } if (judge.constructor == Function) { for (var re = [], i = 0, a; a = o[i++];)judge(a) && re.push(o.splice(--i, 1)[0]); return re } } }, this.remain = function () { var arg = getArg(arguments), o = arg.A[0] || [], judge = arg.f[0] || arg.s[0] || null, param = arg.O[0] || {}; if (o.constructor == Array && judge) { if (judge.constructor == String) { judge = judge.replace(/\*./g, "a."), judge = judge.replace(/@/g, "param."), judge = judge.replace(/param.param./g, "@"); for (var re = [], i = 0, a; a = o[i++];)eval(judge) || re.push(o.splice(--i, 1)[0]); return re } if (judge.constructor == Function) { for (var re = [], i = 0, a; a = o[i++];)judge(a) || re.push(o.splice(--i, 1)[0]); return re } } }, this.preInsert = function () { var arg = getArg(arguments), o = arg.A[0] || [], judge = arg.f[0] || arg.s[0] || null, row = arg.O[0] || null, param = arg.O[1] || {}; if (o.constructor == Array && row && judge) { if (judge.constructor == String) { judge = judge.replace(/\*./g, "a."), judge = judge.replace(/@/g, "param."), judge = judge.replace(/param.param./g, "@"); for (var i = 0, a; a = o[i++];)eval(judge) && (o.splice(i - 1, 0, row), i++); return o } if (judge.constructor == Function) { for (var i = 0, a; a = o[i++];)judge(a) && (o.splice(i - 1, 0, row), i++); return o } } }, this.apInsert = function () { var arg = getArg(arguments), o = arg.A[0] || [], judge = arg.f[0] || arg.s[0] || null, row = arg.O[0] || null, param = arg.O[1] || {}; if (o.constructor == Array && row && judge) { if (judge.constructor == String) { judge = judge.replace(/\*./g, "a."), judge = judge.replace(/@/g, "param."), judge = judge.replace(/param.param./g, "@"); for (var i = 0, a; a = o[i++];)eval(judge) && (o.splice(i, 0, row), i++); return o } if (judge.constructor == Function) { for (var i = 0, a; a = o[i++];)judge(a) && (o.splice(i, 0, row), i++); return o } } }, this.preInserts = function () { var arg = getArg(arguments), o = arg.A[0] || [], judge = arg.f[0] || arg.s[0] || null, rows = arg.A[1] || null, param = arg.O[0] || {}; if (o.constructor == Array && rows && judge) { if (judge.constructor == String) { judge = judge.replace(/\*./g, "a."), judge = judge.replace(/@/g, "param."), judge = judge.replace(/param.param./g, "@"); for (var i = 0, a; a = o[i++];)if (eval(judge)) for (var j = 0, b; b = rows[j++];)o.splice(i - 1, 0, b), i++; return o } if (judge.constructor == Function) { for (var i = 0, a; a = o[i++];)if (judge(a)) for (var j = 0, b; b = rows[j++];)o.splice(i - 1, 0, b), i++; return o } } }, this.apInserts = function () { var arg = getArg(arguments), o = arg.A[0] || [], judge = arg.f[0] || arg.s[0] || null, rows = arg.A[1] || null, param = arg.O[0] || {}; if (o.constructor == Array && rows && judge) { if (judge.constructor == String) { judge = judge.replace(/\*./g, "a."), judge = judge.replace(/@/g, "param."), judge = judge.replace(/param.param./g, "@"); for (var i = 0, a; a = o[i++];)if (eval(judge)) for (var j = 0, b; b = rows[j++];)o.splice(i, 0, b), i++; return o } if (judge.constructor == Function) { for (var i = 0, a; a = o[i++];)if (judge(a)) for (var j = 0, b; b = rows[j++];)o.splice(i, 0, b), i++; return o } } }, this.config = function () { var arg = getArg(arguments), o = arg.A[0] || [], judge = arg.f[0] || arg.s[0] || function () { return !1 }, set = arg.s[1] || "", param = arg.O[0] || {}; if (o.constructor == Array) { if (judge.constructor == String) { judge = judge.replace(/\*./g, "a."), judge = judge.replace(/@/g, "param."), judge = judge.replace(/param.param./g, "@"), set = set.replace(/\*./g, "a."), set = set.replace(/@/g, "param."), set = set.replace(/param.param./g, "@"); for (var i = 0, a; a = o[i++];)eval(judge) && eval(set); return o } if (judge.constructor == Function) { for (var i = 0, a; a = o[i++];)judge(a); return o } } }, this.page = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.n[0] || 1, n = r.n[1] || 10; if (t.constructor == Array) { t = clone(t); for (var i = [], o = (e - 1) * n, a = o + n, u = o; u < a; u++)null != t[u] && i.push(t[u]); return i } }, this.prepart = function () { var arg = getArg(arguments), obj = arg.A[0] || [], judge = arg.f[0] || arg.s[0] || null, param = arg.O[0] || {}; if (obj.constructor == Array && judge) { if (judge.constructor == String) { judge = judge.replace(/\*./g, "a."), judge = judge.replace(/@/g, "param."), judge = judge.replace(/param.param./g, "@"); for (var o = clone(obj), i = 0, a, len = o.length; a = o[i++];)if (eval(judge)) { o.splice(i, len); break } return o } if (judge.constructor == Function) { for (var o = clone(obj), i = 0, a, len = o.length; a = o[i++];)if (judge(a)) { o.splice(i, len); break } return o } } }, this.appart = function () { var arg = getArg(arguments), obj = arg.A[0] || [], judge = arg.f[0] || arg.s[0] || null, param = arg.O[0] || {}; if (obj.constructor == Array && judge) { if (judge.constructor == String) { judge = judge.replace(/\*./g, "a."), judge = judge.replace(/@/g, "param."), judge = judge.replace(/param.param./g, "@"); for (var o = clone(obj), i = 0, a; a = o[i++];)if (eval(judge)) { o.splice(0, i - 1); break } return o } if (judge.constructor == Function) { for (var o = clone(obj), i = 0, a; a = o[i++];)if (judge(a)) { o.splice(0, i - 1); break } return o } } }, this.getMaxRow = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || null; if (t.constructor = Array && e) { if (0 == t.length) return null; for (var n, i = parseFloat(t[0][e]), o = t[0], a = 0; n = t[a++];) { var u = parseFloat(n[e]); u > i && (i = u, o = n) } return clone(o) } }, this.getMinRow = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || null; if (t.constructor = Array && e) { if (0 == t.length) return null; for (var n, i = parseFloat(t[0][e]), o = t[0], a = 0; n = t[a++];) { var u = parseFloat(n[e]); u < i && (i = u, o = n) } return clone(o) } }, this.sum = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || r.A[1] || null; if (t.constructor == Array) { if (e) { for (var n = {}, i = e.constructor == Array ? e : e.split(","), o = 0; u = i[o++];)n[u] = 0; var a; for (o = 0; a = t[o++];)for (var u, s = 0; u = i[s++];)n[u] += parseFloat(a[u]) || 0; return n } n = 0, o = 0; for (var c = t.length; o < c; o++)n += t[o] ? t[o] : 0; return n } }, this.avg = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.s[0] || r.A[1] || null; if (t.constructor == Array) { var n = t.length; if (0 != n) { if (e) { var i = this.sum(t, e); for (var o in i) i[o] = i[o] / n; return i } return this.sum(t) / n } return null } }, this.index = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.f[0] || r.s[0] || null, n = null != typeof r.v[1] ? r.v[1] : null; if ("function" == typeof e || (1 == r.v.length ? (n = r.v[0], e = null) : null == r.v[0] ? (e = null, n = r.v[1]) : n = r.v[1]), t.constructor == Array) { var i = -1; if (null == e) { for (var o = 0, a = t.length; o < a; o++)if (t[o] == n) { i = o; break } } else if ("function" == typeof e) { for (o = 0, a = t.length; o < a; o++)if (e(t[o])) { i = o; break } } else { var u; for (o = 0; u = t[o++];)if (u[e] == n) { i = o - 1; break } } return i } }, this.Copy = clone, this.shuffle = function () { for (var r = getArg(arguments), t = r.A[0] || [], e = clone(t), n = e.length, i = n - 1, o = 0; o < i; o++) { var a = parseInt(Math.random() * (n - o)), u = e[a]; e[a] = e[i - o], e[i - o] = u } return e }, this.clear = function () { for (var r, t = getArg(arguments), e = 0; r = t.A[e++];) { var n = r || []; n.length = 0 } return [] }, this.merge = function () { for (var r = getArg(arguments), t = [], e = 0, n = r.o.length; e < n; e++) { var i = r.o[e]; if (i.constructor == Array) for (var o = 0, a = i.length; o < a; o++)t.push(i[o]); else i.constructor != Array && t.push(i) } return clone(t) }, this.intersection = function () { var arg = getArg(arguments), o = arg.A[0] || [], o1 = arg.A[1] || [], judge = arg.f[0] || arg.s[0] || null, param = arg.O[0] || {}; if (o.constructor == Array && o1.constructor == Array) { if (judge = judge || {}, judge.constructor == String) { judge = judge.replace(/\*0./g, "a."), judge = judge.replace(/\*1./g, "b."), judge = judge.replace(/@/g, "param."), judge = judge.replace(/param.param./g, "@"); for (var IST = [], i = 0, a, iLen = o.length; a = o[i++];)for (var j = 0, b, jLen = o1.length; b = o1[j++];)if (eval(judge)) { IST.push(a); break } return clone(IST) } if (judge.constructor == Function) { for (var IST = [], i = 0, a, iLen = o.length; a = o[i++];)for (var j = 0, b, jLen = o1.length; b = o1[j++];)if (judge(a, b)) { IST.push(a); break } return clone(IST) } if (judge.constructor == Object) { for (var IST = [], i = 0, a, iLen = o.length; a = o[i++];)for (var j = 0, b, jLen = o1.length; b = o1[j++];)if (isEqualForSimple(a, b)) { IST.push(a); break } return clone(IST) } } }, this.subtract = function () { var arg = getArg(arguments), o = arg.A[0] || [], o1 = arg.A[1] || [], judge = arg.f[0] || arg.s[0] || null, param = arg.O[0] || {}; if (o.constructor == Array && o1.constructor == Array) { if (judge = judge || {}, judge.constructor == String) { judge = judge.replace(/\*0./g, "a."), judge = judge.replace(/\*1./g, "b."), judge = judge.replace(/@/g, "param."), judge = judge.replace(/param.param./g, "@"); for (var sTt = [], i = 0, a, iLen = o.length; a = o[i++];) { for (var isHave = !1, j = 0, b, jLen = o1.length; b = o1[j++];)if (eval(judge)) { isHave = !0; break } isHave || sTt.push(a) } return clone(sTt) } if (judge.constructor == Function) { for (var sTt = [], i = 0, a, iLen = o.length; a = o[i++];) { for (var isHave = !1, j = 0, b, jLen = o1.length; b = o1[j++];)if (judge(a, b)) { isHave = !0; break } isHave || sTt.push(a) } return clone(sTt) } if (judge.constructor == Object) { for (var sTt = [], i = 0, a, iLen = o.length; a = o[i++];) { for (var isHave = !1, j = 0, b, jLen = o1.length; b = o1[j++];)if (isEqualForSimple(a, b)) { isHave = !0; break } isHave || sTt.push(a) } return clone(sTt) } } }, this.union = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.A[1] || [], n = r.f[0] || r.s[0] || null, i = r.O[0] || {}; if (t.constructor == Array && e.constructor == Array) { if (n = n || {}, n.constructor == String) { var o = [], a = clone(t), u = _thisApp.subtract(e, t, n, i); return o = _thisApp.merge(a, u), clone(o) } if (n.constructor == Function) { o = [], a = clone(t), u = _thisApp.subtract(e, t, n); return o = _thisApp.merge(a, u), clone(o) } if (n.constructor == Object) { o = [], a = clone(t), u = _thisApp.subtract(e, t, n); return o = _thisApp.merge(a, u), clone(o) } } }, this.isSameCollect = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.A[1] || [], n = r.s[0] || r.A[2] || null; if (t.constructor == Array && e.constructor == Array) { n = n || null; var i = [], o = []; if (t.length !== e.length) return !1; for (var a, u = 0; a = t[u++];) { i.push(u - 1); for (var s, c = 0; s = e[c++];)if (!(_thisApp.index(o, c - 1) > -1) && isEqualForSimple(a, s, n)) { o.push(c - 1); break } if (i.length !== o.length) return !1 } return !0 } }, this.isPartSet = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.A[1] || [], n = r.s[0] || r.A[2] || null; if (t.constructor == Array && e.constructor == Array) { n = n || null; var i = []; if (t.length < e.length) return !1; for (var o, a = 0; o = t[a++];)for (var u, s = 0; u = e[s++];)if (!(_thisApp.index(i, s - 1) > -1) && isEqualForSimple(o, u, n)) { i.push(s - 1); break } return i.length == e.length } }, this.isSubset = function () { var r = getArg(arguments), t = r.A[0] || [], e = r.A[1] || [], n = r.s[0] || r.A[2] || null; if (t.constructor == Array && e.constructor == Array) { n = n || null; for (var i, o = [], a = 0; i = e[a++];)for (var u, s = 0; u = t[s++];)if (isEqualForSimple(i, u, n)) { o.push(a - 1); break } return o.length === e.length } }, this.T = this.tree = new tree, this.MD5 = new MD5, this.encrypMD5 = this.MD5.encryp, this.Escaping = function (r, t, e) { if (r = r || "", t = t.toLowerCase() || "html", e = e || !1, "html" == t) return this.htmlEscaping(r, e) }, this.htmlEscaping = function (r, t) { var e, n; r = r || "", t = t || !1, t ? (e = ["&#34;", "&#38;", "&#60;", "&#62;"], n = ['"', "&", "<", ">"]) : (e = ['"', "&", "<", ">"], n = ["&#34;", "&#38;", "&#60;", "&#62;"]); for (var i = 0, o = e.length; i < o; i++) { var a = new RegExp(e[i], "g"); r = r.replace(a, n[i]) } return r }, this.Base64 = new Base64, this.counter = function () { function r(r) { _thisApp.counter20190531++ , _thisApp.counter20190531 >= e && n(r) } var t = getArg(arguments), e = t.n[0], n = t.f[0]; return _thisApp.counter20190531 = 0, r }
}var UtilHelpApp = new UtilHelpApp20190531, $UtilHelpApp = new UtilHelpApp20190531;var g = new UtilHelpApp20190531, $g = new UtilHelpApp20190531;