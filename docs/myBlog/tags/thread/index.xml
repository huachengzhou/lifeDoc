<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>thread on blog</title>
    <link>https://huachengzhou.github.io/life/tags/thread/</link>
    <description>Recent content in thread on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://huachengzhou.github.io/life/tags/thread/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>java &gt; thread &gt; 高并发和分布式中的幂等处理</title>
      <link>https://huachengzhou.github.io/life/posts/uuid_t_thread_java_thread_%E9%AB%98%E5%B9%B6%E5%8F%91%E5%92%8C%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%AD%E7%9A%84%E5%B9%82%E7%AD%89%E5%A4%84%E7%90%86/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/posts/uuid_t_thread_java_thread_%E9%AB%98%E5%B9%B6%E5%8F%91%E5%92%8C%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%AD%E7%9A%84%E5%B9%82%E7%AD%89%E5%A4%84%E7%90%86/</guid>
      <description>高并发和分布式中的幂等处理 我们先来谈下幂等的概念 抽象概念 幂等（idempotent、idempote</description>
    </item>
    
    <item>
      <title>java &gt; thread &gt; 高并发高可用的架构实践</title>
      <link>https://huachengzhou.github.io/life/posts/uuid_t_thread_java_thread_%E9%AB%98%E5%B9%B6%E5%8F%91%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84%E6%9E%B6%E6%9E%84%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/posts/uuid_t_thread_java_thread_%E9%AB%98%E5%B9%B6%E5%8F%91%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84%E6%9E%B6%E6%9E%84%E5%AE%9E%E8%B7%B5/</guid>
      <description>高并发高可用的架构实践 一、 设计理念 1.空间换时间 1)多级缓存，静态化 客户端页面缓存（http head</description>
    </item>
    
  </channel>
</rss>
