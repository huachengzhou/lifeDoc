<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on NewBee</title>
    <link>http://xxx.xxx/categories/golang/</link>
    <description>Recent content in golang on NewBee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Sep 2014 00:00:00 +0000</lastBuildDate><atom:link href="http://xxx.xxx/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>创建一个新主题</title>
      <link>http://xxx.xxx/posts/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%B0%E4%B8%BB%E9%A2%98/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://xxx.xxx/posts/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%B0%E4%B8%BB%E9%A2%98/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to</description>
    </item>
    
    <item>
      <title>(Hu)go 模板引用</title>
      <link>http://xxx.xxx/posts/hugo%E6%A8%A1%E6%9D%BF%E5%BC%95%E7%94%A8/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://xxx.xxx/posts/hugo%E6%A8%A1%E6%9D%BF%E5%BC%95%E7%94%A8/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used</description>
    </item>
    
    <item>
      <title>开始使用Hugo</title>
      <link>http://xxx.xxx/posts/%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://xxx.xxx/posts/%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8hugo/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture. Save it somewhere specific as we will be using it in the next step. More complete instructions are available at installing hugo Step 2. Build the Docs Hugo has its own example site</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>http://xxx.xxx/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://xxx.xxx/posts/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/▾ images/logo.png should become</description>
    </item>
    
  </channel>
</rss>
