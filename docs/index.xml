<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on 所悟所想</title>
    <link>https://huachengzhou.github.io/life/</link>
    <description>Recent content in Introduction on 所悟所想</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 15 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://huachengzhou.github.io/life/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>学习计划</title>
      <link>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/2021-04%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</link>
      <pubDate>Sun, 17 Jan 2021 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/2021-04%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</guid>
      <description>  Java 消息中间件 RabbitMq 和 kafka (建议学习RabbitMq)
  web socket or spring socket
  springboot (spring cloud考虑)
  redis (深入使用)
  mysql 这次复习以往 突破 存储和锁 如行锁
  java 并发(深入)
  nio netty
  </description>
    </item>
    
    <item>
      <title>记忆方法</title>
      <link>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%AE%B0%E5%BF%86/</link>
      <pubDate>Sun, 17 Jan 2021 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%AE%B0%E5%BF%86/</guid>
      <description>记忆方法# 提高记忆的关键，在于想象和创意 编故事有助于提高记忆力  通过编故事，再加上逻辑或地点（后者更多一些）;编故事是加强了记忆桩之间的联系记忆和创造力# 记忆本身与创造力密不可分 ， 训练记忆力在很大程度上取决于你的创造力  要想记住毫不相关的信息和扑克牌，首先就要把它们变成图像。通过这种方式，那些零散的信息才可能会建立某种联系联想#利用事物间的联系通过联想进行记忆的方法。联想是由当前感知或思考的事物想起有关的另一事物，或者由头脑中想起的一件事物，又引起想到另一件事物。由于客观事物是相互联系的，各种知识也是相互联系的，因而在思维中，联想是一种基本的思维形式，是记忆的一种方法。联想，就是当人脑接受某一剌激时，浮现出与该刺激有关的事物形象的心理过程。一般来说，互相接近的事物、相反的事物、相似的事物之间容易产生联想。用联想来增强记忆是一种很常用的方法。记忆的一种主要机能就是在有关经验中建立联系，思维中的联想越活跃，经验的联系就越牢固。如能经常形成联想和运用联想，就可增强记忆的效果。联想是有规律可循的，联想的规律有接近律、类似律、对比律、因果律等，有接近联想、类似联想、对比联想、因果联想。  联想不仅快速，而且它还不是一个简单、一维的东西。首先，你在联想中会加入一些情感因素，甚至还没回想起一段经历，就已经产生了某种情绪。
  一旦学会动用感情和感官，还有逻辑和创造力，来与不同事物间建立联系，你的记忆能力就会大大提高。除此之外，你还会慢慢习惯放松大脑，以最快的速度在不同事物之间建立联系。瞬间联想之所以对提高记忆力如此重要，是因为一个人在瞬间建立的联系往往是最牢靠的
  如何在两个并无联系的单词之间建立联系&amp;ndash;记忆的关键，就在于将二者结合到一起。
  如果没有过去的某些参照物作为参考，你就不能在两个概念( 包括单词、物体、活动等)之间建立联系。你的过去为你提供了某种经验，而正是这种经验可以帮助你由一个概念想到另一件概念。你的生活中发生的一切都像是积木中的模块，正是这一个个模块帮助你搭建了自己的人生大厦。要想在两个模块之间尽快建立联系，你需要用尽可能少的连接物来实现过渡。也就是说，要想从一件事情想到另外一件事情，最快的方式就是直接找到二者之间的联系
   比如说我想记住两个单词：墙壁和小鸡。每个单词都能激发我丰富的联想，我必须找到某种连接物将两个单词连接起来。比如说：墙壁会让我想到一个相册，想找到我小时候放学后经常爬的墙等。随着联想越来越细致、快速，我突然想到了一个最明显的连接：一首叫&amp;lt;&amp;lt;小胖鸡&amp;gt;&amp;gt;的儿歌。好极了！小胖鸡坐着墙壁上，它是一个鸡蛋----而鸡蛋又是小鸡下的。这时我就会展开联想，想象一只小鸡坐在墙下下蛋。为了让这个联想更加生动，我想起了小时候我在唱歌时的样子，然后自然而然地想到了自己看着小鸡下蛋时吃吃发笑的情形。虽然我并不记得发生过这件事，但它却足以激发我的联想。这个过程听起来可能有些复杂、繁琐，但事实上，这在大脑中只是一瞬间发生的事情。链条法# 如何使用链条法记住5个单词 小提琴、武士、箱子、项链、雪球  首先想想你突然听到小提琴发出的悠扬乐声。然后看到一个武士在演奏小提琴，你甚至可以清楚地看到他把小提琴放到下巴下面--这武士满副盔甲，很是搞笑。然后你看到他脚边放了一个箱子，可能颜色很鲜艳，也可能已经很破旧了。你打开箱子，发现里面有一挂价值连城的钻石项链，钻石反射阳光，分外耀眼。最后你转过头去，突然一个雪球砸中你的脸颊，你甚至感觉到右脸有些发疼。记住，你越练习动用五官来加强想象，你的大脑就会越熟悉这种练习，你也就越容易记住自己想象的场景。  要要记住五个单词以及单词之间的顺序，需要在单词之间建立联系</description>
    </item>
    
    <item>
      <title>学习方法</title>
      <link>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 17 Jan 2021 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/</guid>
      <description></description>
    </item>
    
    <item>
      <title>冥想</title>
      <link>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E5%86%A5%E6%83%B3/</link>
      <pubDate>Sun, 17 Jan 2021 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E5%86%A5%E6%83%B3/</guid>
      <description>冥想#呼吸冥想法#  1:坐好，后背挺直，然后闭上眼睛
  2:关注你自己呼吸时的感觉,吸气，吸气，选择一个感受突出的地方，通常是你的鼻子或者耳朵、腹部然后集中注意力，关注你自己呼吸时的感觉。吸气，吸气，用嘴呼吸（最好关注腹部，因为我们大部分人都是腹部呼吸法）
  3:一旦你开始这样做了脑子会乱想,你需要关注你到什么时候走神的，那么走神后重新调整后重新开始集中注意力开始冥想。
  </description>
    </item>
    
    <item>
      <title>2021-06-15</title>
      <link>https://huachengzhou.github.io/life/posts/2021/oneday/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/posts/2021/oneday/</guid>
      <description>  努力
  英语越来越重要了
  </description>
    </item>
    
    <item>
      <title>DNS 污染</title>
      <link>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/dns%E6%B1%A1%E6%9F%93/</link>
      <pubDate>Sun, 17 Jan 2021 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/dns%E6%B1%A1%E6%9F%93/</guid>
      <description>中国国内访问 GitHub 为什么很慢很卡甚至访问不了？如何加速访问 GitHub 网站？#个人总结：强扭的瓜不甜，修改 hosts 也就片刻好光景，要不了多久就变得比没改 hosts 之前更慢。所以还是顺其自然就好，不要白费力气去修改 hosts。#  摘要
  网站分发加速网络的域名遭到 DNS 污染，DNS 不能直接找到那个最快的 IP！ 通过修改系统 hosts 文件的办法，绕过国内 DNS 解析，直接访问 GitHub 的 CDN 节点，从而达到加速的目的！
  如何检验效果
  操作之前先 ping 一下 github.com，两个请求超时，两个 93ms。
  操作之后再 ping 一下 github.com，没有丢失，四个 287ms。
  一、国内访问 GitHub 为什么很慢？# GitHub 的 CDN 域名遭到 DNS 污染，导致无法连接使用 GitHub 的加速分发服务器，才使得国内访问速度很慢。  二、如何解决 DNS 污染？# 通过修改 Hosts 文件，将域名解析直接指向 IP 地址来绕过 DNS 的解析，以此解决污染问题。  三、具体操作步骤#  1、打开 https://www.</description>
    </item>
    
    <item>
      <title>GitHubPages绑定来自阿里云的域名</title>
      <link>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/githubpages%E7%BB%91%E5%AE%9A%E6%9D%A5%E8%87%AA%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84%E5%9F%9F%E5%90%8D/</link>
      <pubDate>Sun, 17 Jan 2021 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/githubpages%E7%BB%91%E5%AE%9A%E6%9D%A5%E8%87%AA%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84%E5%9F%9F%E5%90%8D/</guid>
      <description>原教程但是由于他使用的github的用户名做的域名映射器,这样不好的地方是有可能你使用自定义的方式建立github仓库名比如 English study,还有一个是他使用的阿里云的域名映射解析这些是老版本的
  GitHub Pages 绑定来自阿里云的域名==原博客教程
  我的使用#github url ==&amp;gt; https://github.com/noatnu/studyDoc , 买的域名 http://www.zhouchenghua.com/# 解析第一个设置   创建A记录，请将您的顶点域指向GitHub Pages的IP地址 https 解析ip,上面的192.30.252.153是http解析方式现在官方已经宣布过时了,选择下面任意一个都可以  185.199.108.153185.199.109.153185.199.110.153185.199.111.153 解析第二个设置    github 要做的事
  创建 CNAME文件,写入www.zhouchenghua.com
   这个是我设置github project 设置截图   ping 地址  C:\Users\noatn&amp;gt;ping www.github.com正在 Ping github.com [13.250.177.223] 具有 32 字节的数据:请求超时。请求超时。请求超时。请求超时。13.</description>
    </item>
    
    <item>
      <title>git处理网络和权限问题</title>
      <link>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/git_andsower/git%E5%A4%84%E7%90%86/</link>
      <pubDate>Sun, 17 Jan 2021 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/git_andsower/git%E5%A4%84%E7%90%86/</guid>
      <description>Push master to origin/master was rejected by remote  有三种原因1:push的这个工程是其他人新建的，找她开通master权限后，再次push2:git 工程错误git pullgit pull origin mastergit pull origin master --allow-unrelated-histories3:github 设置原因勾选了Keep my email addresses private解决办法2种第一种 通知账户人员取消勾选第二种重新设置你的全局用户E-mailgit config --list 查看这个时候一定不对因此重新设置全局email重置上次提交的作者信息 git commit --amend --reset-authorgit config --global user.name &amp;quot;zch&amp;quot;git config --global user.email &amp;quot;sdhshd@163.com&amp;quot;ok对了你如果使用的不是idea而是git那么抛出的错误非常明显如果抛出git报错--&amp;gt;! [remote rejected] master -&amp;gt; master (push declined due to email privacy restrictions)那么一定是这个原因 git clone时报RPC failed; curl 18 transfer closed with outstanding read data remaining 错误  原因1：缓存区溢出git config http.</description>
    </item>
    
    <item>
      <title>idea 解决working directory 设置到 target</title>
      <link>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/idea/idea/</link>
      <pubDate>Sun, 17 Jan 2021 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/idea/idea/</guid>
      <description> idea 解决working directory 设置到 target  test ng D:\IdeaProjects\java-se-studyrun config $MODULE_DIR$</description>
    </item>
    
    <item>
      <title>idea 问题解决</title>
      <link>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/maven/idea%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Sun, 17 Jan 2021 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/maven/idea%E8%A7%A3%E5%86%B3/</guid>
      <description>idea导入项目出现Unable to import maven project: See logs for details提示
 第一种解决办法#  删除项目根目录下.idea文件夹
  关闭idea工具，重新打开选择File-&amp;gt;New-&amp;gt;Project from the existing source ,选择刚才的项目根目，下一步：
  一直点next，最后点击主工程的pom.xml 完成！
  第二种#  打开idea 的日志文件如果发现【Error】com.google.inject.CreationException: Unable to create injector
  那么自定义配置Maven3.6.2报错 或者更高版本maven
  原因：Maven3.6.2的版本兼容问题。
  解决方法：重新下载较低版本Maven3.6.1及以下版本可以顺利解决。
  用maven无论是新建项目还是导入没有下载到本地仓库的jar。出现了Unable to import maven project
  打开cmd，ping localhost，显示一般故障
  在左边控制栏，关闭防火墙，再开启防火墙 再次ping localhost，成功
  对了 假如出现文件权限问题 那么更改maven的本地仓库地址</description>
    </item>
    
    <item>
      <title>Visual Studio Code 问题解决方案</title>
      <link>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/visual_studio_code/visualstudiocode%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 17 Jan 2021 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/visual_studio_code/visualstudiocode%E9%97%AE%E9%A2%98/</guid>
      <description>Visual Studio Code 过滤文件 不显示某些文件#效果# 过滤工程中显示的文件 不显示某些类型的文件或文件夹  菜单# File/Preferences/ 搜索file exclude 选中workspack页签 添加一个过滤规则 如图:   </description>
    </item>
    
    <item>
      <title>如何在油管YouTube开通收益赚钱</title>
      <link>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%8E%B7%E5%8F%96%E9%87%91%E9%92%B1/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%B2%B9%E7%AE%A1youtube%E5%BC%80%E9%80%9A%E6%94%B6%E7%9B%8A%E8%B5%9A%E9%92%B1/</link>
      <pubDate>Sun, 17 Jan 2021 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/%E8%87%AA%E6%88%91%E6%8F%90%E5%8D%87/%E8%8E%B7%E5%8F%96%E9%87%91%E9%92%B1/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%B2%B9%E7%AE%A1youtube%E5%BC%80%E9%80%9A%E6%94%B6%E7%9B%8A%E8%B5%9A%E9%92%B1/</guid>
      <description>如何在油管YouTube开通收益赚钱？#如果想在YouTube创业赚取美金，建议关注【YouTube运营笔记】，少走弯路，不被忽悠
本篇主要由3个常见问题详细展开：# 如何在油管上开通获利？ 油管广告收益情况如何？ 油管除了广告还能怎么赚钱？  一、如何在YouTube开通获利？#第1步：你得有一个Gmail账号# YouTube账号是跟谷歌邮箱账号是关联的。想创建频道然后上传视频的基础条件就是，注册并登陆谷歌账号，目前一些国内手机注册会失败。   注：Gmail能登录就行，手机号码归属和注册地对后期收益不存在影响。
 第2步：你得有一个YouTube频道# 一般而言只要你有了谷歌账号，就默认有一个YouTube频道了，但那个频道名称头像是跟谷歌邮箱是挂钩的，建议单独创建频道。此外，一个谷歌账号是创建多个频道的。   注：创建频道前，要想清楚频道的内容定位；频道创建后，还要对频道进行装修。
 第3步：你得有策略地上传视频# 这一步非常重要，YouTube运营是一个技术活，不是随随便便发几个视频就有人看，也不是坚持发布就能做起来。有志要做的建议查看本专栏的其它文章，这里不细讲。   注：做YouTube成功的条件是「优质的内容+正确的方法」，缺一不可
 第4步（重点）：你须达到获利门槛/申请开通# 想开通获利，必须满足以下条件：   1:选择支持YouTube合作伙伴计划的国家或地区。 2:12 个月内的有效观看时长累计超过4000小时。 3:频道拥有至少1000订阅。 4:拥有可关联的 AdSense 帐号。   其中，最为关键的同时最难的条件是4000小时和1000名订阅；「国家/地区」后台设置支持的国家/地区即可；「AdSense」是在频道达到获利门槛后显示注册入口，看似简单却最容易出错，资料要仔细填写，一旦填错后续非常麻烦。《YouTube运营新手最常踩5大坑，最后1个最坑人！》 除了订阅者数量和观看次数要求外，还有内容要求。获利申请的审核是官方人工审核，如果审核者认为频道或视频不符合条件，也是容易无法通过的，审核时间快则一两天，慢的一个多月也有。《YouTube获利政策：这11类内容没有收益》  二、油管广告收益情况如何？# YouTube将部分广告收入（55%）分给相应的Youtuber，就能构成一个良性循环的三赢局面：广告商得到宣传，Youtuber赚钱，油管平台赚钱同时有源源不断的优质内容创作出来。平台把55%的广告收益分给视频创作者，这对自媒体从业者而言，真不算低。    YouTube的千次播放（CPM）的收益差距略大，一般在1-10美元不等。影响视频收益主要因素包括：</description>
    </item>
    
    <item>
      <title>hugo教程 hugo server Failed to get JSON</title>
      <link>https://huachengzhou.github.io/life/docs/hugo%E5%AD%A6%E4%B9%A0/hugo_server_faile_-to_get_json/</link>
      <pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/hugo%E5%AD%A6%E4%B9%A0/hugo_server_faile_-to_get_json/</guid>
      <description>今天尝试了一下静态博客 hugo , hugo的官网本身也是使用 hugo 制作的网站。安装和运行非常简单。只有两个步骤安装和运行。运行的时候出现了一个小问题，就是由于网络的原因不能启动成功。
 粗暴的禁用网络连接相关的操作# 就是两个 短代码 给删除了 instagram, tweet。  find . -name &amp;amp;quot;*.md&amp;amp;quot; | xargs sed -i &amp;amp;#x27;/{{&amp;amp;lt; instagram/cinstagram content&amp;amp;#x27;find . -name &amp;amp;quot;*.md&amp;amp;quot; | xargs sed -i &amp;amp;#x27;/{{&amp;amp;lt; tweet/ctwitter content&amp;amp;#x27;hugo server --bind &amp;amp;#x27;0.0.0.0&amp;amp;#x27; print code  ERROR 2021/03/06 09:55:20 Failed to get JSON resource &amp;quot;https://api.twitter.com/1/statuses/oembed.json?id=877500564405444608&amp;amp;dnt=false&amp;quot;: Get &amp;quot;https://api.twitter.com/1/statuses/oembed.json?id=877500564405444608&amp;amp;dnt=false&amp;quot;: dial tcp 31.13.91.33:443: connectex: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.</description>
    </item>
    
    <item>
      <title>hugo教程1</title>
      <link>https://huachengzhou.github.io/life/docs/hugo%E5%AD%A6%E4%B9%A0/hugo_tutorials1/</link>
      <pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/hugo%E5%AD%A6%E4%B9%A0/hugo_tutorials1/</guid>
      <description>教程1#快速开始# 步骤1：安装Hugo  brew install hugo# orport install hugo 要验证新安装  hugo version 步骤2：建立新网站  hugo new site quickstart# 上面的代码将在名为的文件夹中创建一个新的Hugo网站quickstart。 步骤3：添加主题  # 首先，从GitHub下载主题并将其添加到您站点的themes目录中：cd quickstartgit initgit submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke 然后，将主题添加到站点配置中：  echo &#39;theme = &amp;quot;ananke&amp;quot;&#39; &amp;gt;&amp;gt; config.toml 步骤4：添加一些内容  hugo new posts/my-first-post.md 如果需要，请编辑新创建的内容文件，该文件将从以下内容开始：   ---title: &amp;quot;My First Post&amp;quot;date: 2019-03-26T08:47:11+01:00draft: true--- 步骤5：启动Hugo服务器  ▶ hugo server -D| EN+------------------+----+Pages | 10Paginator pages | 0Non-page files | 0Static files | 3Processed images | 0Aliases | 1Sitemaps | 1Cleaned | 0Total in 11 msWatching for changes in /Users/bep/quickstart/{content,data,layouts,static,themes}Watching for config changes in /Users/bep/quickstart/config.</description>
    </item>
    
    <item>
      <title>hugo教程2</title>
      <link>https://huachengzhou.github.io/life/docs/hugo%E5%AD%A6%E4%B9%A0/hugo_tutorials2/</link>
      <pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/docs/hugo%E5%AD%A6%E4%B9%A0/hugo_tutorials2/</guid>
      <description>教程2# 1、	创建blog  hugo new site myblog_pubcd myblog_pub/git submodule add https://github.com/chinanf-boy/gohugo-theme-yinwang.git themes/yinwang  2、	修改配置
  vi config.toml
  root@instance-x8rtph4n:/home/go/code/hugo_dir/myblog_pub/public# more ../config.toml baseURL = &amp;quot;http://ypbsyy.github.io/&amp;quot;languageCode = &amp;quot;en-us&amp;quot;title = &amp;quot;我是yaopeng&amp;quot;theme = &amp;quot;yinwang&amp;quot;#pygmentsCodeFences = true#pygmentsCodefencesGuessSyntax = false#pygmentsStyle = &amp;quot;dracula&amp;quot;#pygmentsOptions = [&#39;linenos&#39;]# 代码高亮/chroma，hugo默认自带[params]author = &amp;quot;yaopeng&amp;quot;github = &amp;quot;yaopeng&amp;quot;# gitlab = &amp;quot;yobrave&amp;quot;#googleAnalytics = &amp;quot;****&amp;quot;# 谷歌统计gtaghighlight = &amp;quot;dracula&amp;quot; # 默认样式 `github`langs = [&amp;quot;go&amp;quot;]# 默认加载 highlight.</description>
    </item>
    
    <item>
      <title>统一建模语言</title>
      <link>https://huachengzhou.github.io/life/posts/uml/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/posts/uml/</guid>
      <description> 统一建模语言(Unified Modeling Language，UML)是一种为面向对象系统的产品进行说明、可视化和编制文档的一种标准语言，是非专利的第三代建模和规约语言。UML是面向对象设计的建模工具，独立于任何具体程序设计语言。
 UML作为一种统一的软件建模语言具有广泛的建模能力。UML是在消化、吸收、提炼至今存在的所有软件建模语言的基础上提出的，集百家之所长，它是软件建模语言的集大成者。UML还突破了软件的限制，广泛吸收了其他领域的建模方法，并根据建模的一般原理，结合了软件的特点，因此具有坚实的理论基础和广泛性。UML不仅可以用于软件建模，还可以用于其他领域的建模工作。 [1]#UML立足于对事物的实体、性质、关系、结构、状态和动态变化过程的全程描述和反映。UML可以从不同角度描述人们所观察到的软件视图，也可以描述在不同开发阶段中的软件的形态。UML可以建立需求模型、逻辑模型、设计模型和实现模型等，但UML在建立领域模型方面存在不足，需要进行补充。 [1]#作为一种建模语言，UML有严格的语法和语义规范。UML建立在元模型理论基础上，包括4层元模型结构，分别是基元模型、元模型、模型和用户对象。4层结构层层抽象，下一层是上一层的实例。UML中的所有概念和要素均有严格的语义规范。 [1]#UML采用一组图形符号来描述软件模型，这些图形符号具有简单、直观和规范的特点，开发人员学习和掌握起来比较简单。所描述的软件模型，可以直观地理解和阅读，由于具有规范性，所以能够保证模型的准确、一致。#</description>
    </item>
    
    <item>
      <title>项目管理</title>
      <link>https://huachengzhou.github.io/life/posts/project-management/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/life/posts/project-management/</guid>
      <description>项目管理（Project Management,PM/Management by Projects,MBP）#项目管理概述#项目管理是项目的管理者，在有限的资源约束下，运用系统的观点、方法和理论，对项目涉及的全部工作进行有效地管理。即从项目的投资决策开始到项目结束的全过程进行计划、组织、指挥、协调、控制和评价，以实现项目的目标。#按照传统的做法，当企业设定了一个项目后，参与这个项目的至少会有好几个部门，包括财务部门、市场部门、行政部门等等，而不同部门在运作项目过程中不可避免地会产生摩擦，须进行协调，而这些无疑会增加项目的成本，影响项目实施的效率。#而项目管理的做法则不同。不同职能部门的成员因为某一个项目而组成团队，项目经理则是项目团队的领导者，他们所肩负的责任就是领导他的团队准时、优质地完成全部工作，在不超出预算的情况下实现项目目标。项目的管理者不仅仅是项目执行者，他参与项目的需求确定、项目选择、计划直至收尾的全过程，并在时间、成本、质量、风险、合同、采购、人力资源等各个方面对项目进行全方位的管理，因此项目管理可以帮助企业处理需要跨领域解决的复杂问题，并实现更高的运营效率。#项目管理的应用从80年代仅限于建筑、国防、航天等行业迅速发展到今天的计算机、电子通讯、金融业甚至政府机关等众多领域。#人们通常认为，项目管理是第二次世界大战的产物（如：曼哈顿计划）。在1950年至1980年期间，应用项目管理的主要是国防建设部门和建筑公司。传统的观点认为，项目管理者的工作就是单纯地完成既定的任务。#从本世纪八十年代开始，项目管理的应用扩展到其他工业领域（行业），如制药行业、电信部门、软件开发业等。项目管理者也不再被认为仅仅是项目的执行者，要求他们能胜任其它各个领域的更为广泛的工作，同时具有一定的经营技巧。美国项目管理学会（PMI）已提出了关于一个有效的专业项目管理者必须具备的几个方面的基本能力：# 项目范围管理 项目时间管理 项目费用管理 项目质量管理 项目人力资源管理 项目沟通管理 项目风险管理 项目采购管理 项目综合管理  </description>
    </item>
    
  </channel>
</rss>
